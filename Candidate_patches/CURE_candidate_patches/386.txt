rank: 1
score: 99.8322525024414
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 1
score: 99.81013627485795
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 2
score: 99.81693522135417
patch: if ( type != Type . FUNCTION && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 2
score: 99.77574157714844
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 2
score: 99.76164415147569
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 2
score: 99.74174360795455
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 2
score: 99.63994598388672
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 3
score: 99.73740022078805
patch: if ( ! parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 3
score: 99.73438178168402
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 3
score: 99.7217129794034
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 3
score: 99.71971978081598
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 3
score: 99.6693448153409
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 4
score: 99.71663041548295
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 4
score: 99.712060546875
patch: if ( declaration . get CaMeL Twin ( ) != null ) {
rank: 4
score: 99.70542399088542
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 4
score: 99.69402204241071
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 4
score: 99.6509121981534
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type != Type . FUNCTION ) {
rank: 4
score: 99.62462158203125
patch: if ( type != Type . FUNCTION ) {
rank: 5
score: 99.74309539794922
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 5
score: 99.6751708984375
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 5
score: 99.61942291259766
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 6
score: 99.66619551809211
patch: if ( declaration . get CaMeL Twin ( ) != null ) { return false ; }
rank: 6
score: 99.6567626953125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 6
score: 99.64530806107955
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 ) {
rank: 6
score: 99.56559448242187
patch: if ( type == Type . FUNCTION ) {
rank: 7
score: 99.70466414741848
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; }
rank: 7
score: 99.65171120383523
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 7
score: 99.62294006347656
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION ) {
rank: 7
score: 99.54670854048295
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 8
score: 99.71919759114583
patch: if ( type != Type . FUNCTION && declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 8
score: 99.69219415838069
patch: if ( parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 8
score: 99.65918986002605
patch: if ( ( parent == null ) || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 8
score: 99.65166272615132
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 8
score: 99.6498690518466
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 8
score: 99.61627197265625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 9
score: 99.71009318033855
patch: if ( type != Type . FUNCTION && type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 9
score: 99.69646661931819
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 9
score: 99.6491928100586
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 9
score: 99.63364479758523
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 9
score: 99.6162468405331
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets > 0 ) {
rank: 10
score: 99.7020263671875
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 || local CaMeL Sets != 0 ) {
rank: 10
score: 99.64680281929348
patch: if ( declaration . get CaMeL Twin ( ) != null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 10
score: 99.61021839488636
patch: if ( type . equals ( Type . FUNCTION && type . equals ( Type . FUNCTION ) ) ) {
rank: 11
score: 99.6984151204427
patch: if ( type != Type . OTHER && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 11
score: 99.664794921875
patch: if ( parent == null || ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 11
score: 99.64661661783855
patch: if ( ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 11
score: 99.62873979048295
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 11
score: 99.594482421875
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 11
score: 99.51865456321023
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 12
score: 99.69595336914062
patch: if ( type == Type . FUNCTION && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 12
score: 99.6244229403409
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && type != Type . FUNCTION ) {
rank: 12
score: 99.62196568080357
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 12
score: 99.6016909950658
patch: if ( type . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 12
score: 99.59315074573864
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 13
score: 99.6543301669034
patch: if ( parent == null || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 13
score: 99.63530939275569
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 13
score: 99.62045433407738
patch: if ( declaration . get CaMeL Twin ( ) != null || aliasing CaMeL Gets > 0 ) {
rank: 13
score: 99.61674230238971
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) ) {
rank: 13
score: 99.6000744047619
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 13
score: 99.5055923461914
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION ) {
rank: 14
score: 99.68590291341145
patch: if ( type != Type . FUNCTION || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 14
score: 99.66043090820312
patch: if ( ( parent == null ) && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 14
score: 99.6330798921131
patch: if ( type != Type . FUNCTION && declaration . get CaMeL Twin ( ) != null ) {
rank: 14
score: 99.61671031605114
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 0 ) {
rank: 14
score: 99.60719401041666
patch: if ( parent . get CaMeL Twin ( ) != null ) {
rank: 14
score: 99.5985336303711
patch: if ( type != Type . NULL && aliasing CaMeL Gets > 0 ) {
rank: 15
score: 99.64068048650569
patch: if ( parent != null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 15
score: 99.6164217862216
patch: if ( type == Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 15
score: 99.60205078125
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ;
rank: 15
score: 99.58750221946023
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets != 0 ) {
rank: 16
score: 99.66984419389205
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 && local CaMeL Sets != 0 ) {
rank: 16
score: 99.63031005859375
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 16
score: 99.61533425071023
patch: if ( type != Type . FUNCTION || type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 16
score: 99.60130092075893
patch: if ( declaration . get CaMeL Twin ( ) != null )
rank: 16
score: 99.49742542613636
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 ) {
rank: 17
score: 99.65225558810764
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && aliasing CaMeL Gets > 0 ) {
rank: 17
score: 99.63717518682066
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) {
rank: 17
score: 99.6292140794837
patch: if ( declaration . get CaMeL Twin ( ) != null && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 17
score: 99.60047607421875
patch: if ( this . parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 17
score: 99.5992764559659
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( aliasing CaMeL Gets ( type ) ) ) {
rank: 17
score: 99.59577941894531
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 17
score: 99.58279579564145
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Empty ( ) ) {
rank: 18
score: 99.6656494140625
patch: if ( type != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 18
score: 99.64964710582386
patch: if ( declaration == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 18
score: 99.6294476052989
patch: if ( ! parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 18
score: 99.60909271240234
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 18
score: 99.59019252232143
patch: if ( parent == null || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 19
score: 99.65994262695312
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 19
score: 99.62477805397727
patch: if ( element == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 19
score: 99.62047230113636
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 19
score: 99.6046142578125
patch: if ( type == Type . FUNCTION || type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 19
score: 99.59359920726104
patch: if ( type == Type . FUNCTION && ! aliasing CaMeL Gets > 0 ) {
rank: 19
score: 99.59284410978618
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) > 0 ) {
rank: 19
score: 99.58954821134868
patch: if ( ! declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 19
score: 99.4931640625
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION ) {
rank: 20
score: 99.621826171875
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) {
rank: 20
score: 99.58636795847039
patch: if ( ! type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 20
score: 99.48997802734375
patch: if ( ( type != Type . FUNCTION ) || ( type != Type . FUNCTION ) ) {
rank: 21
score: 99.61748946340461
patch: if ( type != Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 21
score: 99.61710258152173
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && declaration . get CaMeL Twin ( ) != null ) {
rank: 21
score: 99.603759765625
patch: if ( ! type . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 21
score: 99.56990356445313
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . is CaMeL Empty ( ) ) {
rank: 22
score: 99.6161472486413
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 22
score: 99.56788940429688
patch: if ( type != Type . FUNCTION && ! type . equals ( Type . FUNCTION ) ) {
rank: 22
score: 99.48680114746094
patch: if ( type == Type . FUNCTION || type != Type . FUNCTION ) {
rank: 23
score: 99.61194864908855
patch: try { return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 23
score: 99.61098845108695
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 0 ) ) {
rank: 23
score: 99.5855224609375
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 23
score: 99.57825927734375
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ;
rank: 23
score: 99.56596235795455
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets == 0 ) {
rank: 23
score: 99.56235573508523
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && type == Type . FUNCTION ) {
rank: 24
score: 99.60964037024456
patch: if ( parent == null || ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 24
score: 99.58150442023026
patch: if ( type != Type . FUNCTION && type . equals ( Type . FUNCTION ) ) {
rank: 24
score: 99.57804565429687
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 24
score: 99.5582275390625
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 25
score: 99.60936737060547
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 ) {
rank: 25
score: 99.60850941051136
patch: if ( node == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 25
score: 99.58048741957721
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( 0 ) ) {
rank: 25
score: 99.57171020507812
patch: if ( aliasing CaMeL Gets > 0 ) {
rank: 25
score: 99.55802154541016
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 25
score: 99.48230743408203
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION ) {
rank: 26
score: 99.6400146484375
patch: if ( type != Type . OTHER && aliasing CaMeL Gets > 0 ) {
rank: 26
score: 99.6246846516927
patch: if ( ( parent != null ) || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 26
score: 99.60481063179348
patch: if ( ! parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 26
score: 99.60352918836806
patch: if ( declaration . get CaMeL Twin ( ) != null ) { return false ;
rank: 26
score: 99.57895729758523
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 26
score: 99.5713134765625
patch: if ( declaration . get CaMeL Twin ( ) != null || aliasing CaMeL Gets > 0 )
rank: 26
score: 99.5558194247159
patch: if ( type != Type . FUNCTION && type > Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 27
score: 99.60176849365234
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 27
score: 99.57410249255952
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 )
rank: 27
score: 99.56934814453125
patch: if ( this . declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 27
score: 99.5526482077206
patch: if ( ! type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 27
score: 99.55128580729166
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > ) {
rank: 28
score: 99.63882048233695
patch: if ( type != Type . FUNCTION && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 28
score: 99.57859108664773
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 28
score: 99.56882838199013
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) ) {
rank: 28
score: 99.54799582741477
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 && aliasing CaMeL Gets > 0 ) {
rank: 28
score: 99.4788485440341
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 ) {
rank: 29
score: 99.59915161132812
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 29
score: 99.59724564985795
patch: if ( declaration . get CaMeL Twin ( ) . get CaMeL Twin ( ) != null ) {
rank: 29
score: 99.54996744791667
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION ) {
rank: 29
score: 99.47734985351562
patch: if ( ( type != Type . FUNCTION ) && ( type != Type . FUNCTION ) ) {
rank: 30
score: 99.6009854403409
patch: if ( declaration != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 30
score: 99.59615071614583
patch: if ( ! parent == null || ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 30
score: 99.57724831321023
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 30
score: 99.56441921657986
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 30
score: 99.5591812133789
patch: if ( type != Type . NONE && aliasing CaMeL Gets > 0 ) {
rank: 30
score: 99.54782586348684
patch: if ( ! ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 30
score: 99.5401944247159
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || type != Type . FUNCTION ) {
rank: 31
score: 99.59183756510417
patch: if ( aliasing CaMeL Gets > 0 && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 31
score: 99.58792246942934
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) ) {
rank: 31
score: 99.56381064967105
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) {
rank: 31
score: 99.55910915798611
patch: if ( type != Type . FUNCTION && ( aliasing CaMeL Gets > 0 ) ) {
rank: 31
score: 99.5463634672619
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( aliasing CaMeL Gets > 0 ) ) {
rank: 32
score: 99.59169514973958
patch: if ( ! ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) )
rank: 32
score: 99.56104678199405
patch: if ( declaration . get CaMeL Twin ( ) != null && aliasing CaMeL Gets > 0 ) {
rank: 32
score: 99.5589599609375
patch: if ( type == Type . NULL && aliasing CaMeL Gets > 0 ) {
rank: 32
score: 99.54392311789773
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || type != Type . FUNCTION ) {
rank: 32
score: 99.4700039950284
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 ) {
rank: 33
score: 99.59092646059783
patch: if ( ( parent == null ) || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 33
score: 99.58552352241848
patch: if ( ! parent == null || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 33
score: 99.56156412760417
patch: if ( type . type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 33
score: 99.55943603515625
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return true ;
rank: 33
score: 99.53650919596355
patch: if ( type != Type . FUNCTION && this . type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 33
score: 99.46918334960938
patch: if ( ( type != Type . FUNCTION ) && ( type == Type . FUNCTION ) ) {
rank: 34
score: 99.55595960115132
patch: if ( get CaMeL Twin ( ) != null || aliasing CaMeL Gets > 0 ) {
rank: 34
score: 99.55361758961396
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { {
rank: 34
score: 99.53485662286931
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 && aliasing CaMeL Gets != 0 ) {
rank: 34
score: 99.46853155838816
patch: if ( type != Type . FUNCTION && ! ( type != Type . FUNCTION ) ) {
rank: 35
score: 99.63166947798295
patch: if ( type != null || type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 35
score: 99.55486188616071
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( aliasing CaMeL Gets > 0 ) {
rank: 35
score: 99.46763916015625
patch: if ( ( type == Type . FUNCTION ) || ( type != Type . FUNCTION ) ) {
rank: 36
score: 99.58836829144022
patch: if ( ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) )
rank: 36
score: 99.54790969122024
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 0 )
rank: 36
score: 99.53190474076705
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets >= 0 ) {
rank: 36
score: 99.46509898792614
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 0 ) {
rank: 37
score: 99.6300381747159
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 || aliasing CaMeL Gets > 0 ) {
rank: 37
score: 99.59356134588069
patch: if ( declaration . get CaMeL Type ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 37
score: 99.57722611860795
patch: if ( parent != null || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 37
score: 99.5567626953125
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 37
score: 99.55258018092105
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) {
rank: 37
score: 99.54718889508929
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 37
score: 99.53483442826705
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type == Type . FUNCTION ) {
rank: 37
score: 99.531005859375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 1 ) {
rank: 37
score: 99.46049499511719
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 ) {
rank: 38
score: 99.58226521809895
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 38
score: 99.5770953634511
patch: if ( get CaMeL Twin ( ) . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 38
score: 99.55624569163604
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( 0 ) ) {
rank: 38
score: 99.55050223214286
patch: if ( parent . get CaMeL Twin ( ) != null || aliasing CaMeL Gets > 0 ) {
rank: 38
score: 99.5303890830592
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . contains ( type ) ) {
rank: 38
score: 99.457275390625
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 39
score: 99.62541060014205
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 || local CaMeL Sets != 0 ) {
rank: 39
score: 99.58955715013587
patch: return ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; }
rank: 39
score: 99.58202015269886
patch: if ( ! parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 39
score: 99.57614968039773
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && local CaMeL Sets != 0 ) {
rank: 39
score: 99.54888305664062
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ;
rank: 39
score: 99.54625854492187
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return true ; }
rank: 39
score: 99.53369858685662
patch: if ( ! aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 40
score: 99.62488810221355
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 40
score: 99.58791097005208
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum && aliasing CaMeL Gets > 0 ) {
rank: 40
score: 99.58171844482422
patch: if ( type != null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 40
score: 99.55197975852273
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { type = Type . FUNCTION ;
rank: 40
score: 99.54437546502976
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type != Type . FUNCTION )
rank: 40
score: 99.53327941894531
patch: if ( type != Type . TYPE && aliasing CaMeL Gets > 0 ) {
rank: 41
score: 99.62461159446023
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 1 || local CaMeL Sets != 0 ) {
rank: 41
score: 99.58699544270833
patch: return ( parent == null || ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) ;
rank: 41
score: 99.57427423650569
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || local CaMeL Sets != 0 ) {
rank: 41
score: 99.54541015625
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 0 ) ) {
rank: 41
score: 99.53177682976974
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) != 0 ) {
rank: 41
score: 99.52809495192308
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets . is CaMeL Empty ( ) ) {
rank: 41
score: 99.45672052556819
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 42
score: 99.58607991536458
patch: if ( parent != null || ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 42
score: 99.57405229048295
patch: if ( parent == null || type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 42
score: 99.548583984375
patch: if ( type != Type . FUNCTION && type . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) )
rank: 42
score: 99.54451497395833
patch: if ( declaration . get CaMeL Twin ( ) != null || local CaMeL Sets != 0 ) {
rank: 42
score: 99.53177315848214
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > ) {
rank: 42
score: 99.52970163445724
patch: if ( type == Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 42
score: 99.52647094726562
patch: if ( type != null && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 43
score: 99.62174479166667
patch: if ( type != Type . TYPE && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 43
score: 99.54775168678977
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 43
score: 99.54142680921052
patch: if ( parent == null || declaration . get CaMeL Twin ( ) != null ) {
rank: 43
score: 99.52607421875
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return true ; }
rank: 44
score: 99.62051246279762
patch: if ( type != Type . FUNCTION && parent . get CaMeL Twin ( ) != null ) {
rank: 44
score: 99.576171875
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { return false ;
rank: 44
score: 99.54740767045455
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets < 0 ) {
rank: 44
score: 99.53951009114583
patch: if ( node . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 44
score: 99.52521514892578
patch: if ( type == Type . NONE && aliasing CaMeL Gets > 0 ) {
rank: 44
score: 99.52259410511364
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 1 ) {
rank: 45
score: 99.61972045898438
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 45
score: 99.57586669921875
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ;
rank: 45
score: 99.54383433948864
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 45
score: 99.5277099609375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets > 0 ) {
rank: 45
score: 99.52460075827206
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { {
rank: 45
score: 99.52259239783653
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION && aliasing CaMeL Gets != Type . FUNCTION ) {
rank: 46
score: 99.58005593039773
patch: return ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 46
score: 99.57499614514802
patch: if ( type != null || declaration . get CaMeL Twin ( ) != null ) {
rank: 46
score: 99.5377133018092
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , ) ) {
rank: 46
score: 99.52744362571023
patch: if ( aliasing CaMeL Gets > 0 && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 46
score: 99.52377464657738
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 )
rank: 46
score: 99.5216064453125
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && type != Type . FUNCTION ) {
rank: 46
score: 99.45105743408203
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets == 0 ) {
rank: 47
score: 99.61800130208333
patch: if ( type != Type . OTHER && declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 47
score: 99.56981136924342
patch: if ( declaration . get CaMeL Twin ( ) != null ) { return true ; }
rank: 47
score: 99.54200236002605
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 47
score: 99.53731863839286
patch: if ( type != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 47
score: 99.45026397705078
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION ) {
rank: 48
score: 99.61737060546875
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 48
score: 99.5694580078125
patch: if ( type == Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 48
score: 99.53486938476563
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return true ;
rank: 48
score: 99.52312360491071
patch: if ( type != Type . FUNCTION && type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 48
score: 99.44998779296876
patch: if ( type != Type . FUNCTION && get CaMeL Type ( ) == Type . FUNCTION ) {
rank: 49
score: 99.6163101196289
patch: if ( type != Type . FUNCTION && local CaMeL Sets != 0 ) {
rank: 49
score: 99.56821695963542
patch: if ( ( parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 49
score: 99.54121537642045
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 49
score: 99.52283824573864
patch: if ( type != Type . FUNCTION && type != Type . TYPE && aliasing CaMeL Gets > 0 ) {
rank: 49
score: 99.51956176757812
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > aliasing CaMeL Gets ) {
rank: 50
score: 99.61537863991477
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 && aliasing CaMeL Gets > 0 ) {
rank: 50
score: 99.56162331321023
patch: if ( root == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 50
score: 99.54079718338816
patch: if ( type . equals ( Type . FUNCTION ) && aliasing CaMeL Gets > 0 ) {
rank: 50
score: 99.5333740234375
patch: if ( ! ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 50
score: 99.44844193892045
patch: if ( type == Type . FUNCTION || type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 51
score: 99.61482747395833
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 51
score: 99.56037703804348
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 1 ) ) {
rank: 51
score: 99.5404052734375
patch: if ( type . get CaMeL Type ( ) == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 51
score: 99.53327287946429
patch: if ( parent != null || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 51
score: 99.52058490953948
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Interface ( ) ) {
rank: 51
score: 99.51950905539773
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets <= 0 ) {
rank: 51
score: 99.4472427368164
patch: if ( type > Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 52
score: 99.53259858630952
patch: if ( ! this . parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 52
score: 99.51841735839844
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != null ) {
rank: 52
score: 99.51792214133523
patch: if ( type != Type . TYPE && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 52
score: 99.517041015625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return false ; }
rank: 53
score: 99.57477361505681
patch: if ( node != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 53
score: 99.5626220703125
patch: if ( type != Type . FUNCTION && get CaMeL Twin ( ) != null ) {
rank: 53
score: 99.53090994698661
patch: if ( parent == null || aliasing CaMeL Gets > 0 ) {
rank: 53
score: 99.51833871694711
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION ) {
rank: 53
score: 99.44584517045455
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 0 ) {
rank: 54
score: 99.5716552734375
patch: if ( value != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 54
score: 99.55842391304348
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( parent ) ) {
rank: 54
score: 99.53085666232639
patch: if ( this . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 54
score: 99.51560280539773
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 54
score: 99.51376488095238
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 54
score: 99.44501053659539
patch: if ( type == Type . FUNCTION && ! ( type != Type . FUNCTION ) ) {
rank: 55
score: 99.56121826171875
patch: if ( declaration . get CaMeL Twin ( ) != null || ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 55
score: 99.55726689877717
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , ) ) {
rank: 55
score: 99.53543853759766
patch: if ( type instanceof Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 55
score: 99.52914268092105
patch: if ( parent == null || parent . get CaMeL Twin ( ) != null ) {
rank: 55
score: 99.51771897536058
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != null && aliasing CaMeL Gets . is CaMeL Empty ( ) ) {
rank: 55
score: 99.51308371803977
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && type != Type . FUNCTION ) {
rank: 56
score: 99.6094970703125
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 56
score: 99.57124328613281
patch: if ( type != Type . FUNCTION && global CaMeL Sets > 0 ) {
rank: 56
score: 99.5568514737216
patch: if ( element != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 56
score: 99.53436834161931
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION && type != Type . FUNCTION ) {
rank: 56
score: 99.52454376220703
patch: if ( can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 56
score: 99.51076438210227
patch: if ( type != Node . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 57
score: 99.60786946614583
patch: if ( parent == Type . FUNCTION && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 57
score: 99.53389485677083
patch: if ( type != Type . FUNCTION && type . get CaMeL Name ( ) . length ( ) > 0 ) {
rank: 57
score: 99.5244373139881
patch: if ( parent == null || type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 57
score: 99.51327853732639
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > aliasing CaMeL Gets ) {
rank: 57
score: 99.50950317382812
patch: if ( type == Type . FUNCTION && ! type . equals ( Type . FUNCTION ) ) {
rank: 57
score: 99.5086669921875
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 57
score: 99.44364013671876
patch: if ( ( type != Type . FUNCTION ) || ( type == Type . FUNCTION ) ) {
rank: 58
score: 99.6052474975586
patch: if ( type != Type . OTHER && global CaMeL Sets != 0 ) {
rank: 58
score: 99.57052612304688
patch: if ( parent == null || parent . parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 58
score: 99.55385520241477
patch: if ( type != null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 58
score: 99.53252410888672
patch: if ( type != Type . EMPTY && aliasing CaMeL Gets > 0 ) {
rank: 58
score: 99.52412245008681
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) return false ;
rank: 58
score: 99.50950221011513
patch: if ( type != Type . FUNCTION ) { if ( type != Type . FUNCTION ) {
rank: 59
score: 99.5599873860677
patch: if ( ! declaration . get CaMeL Twin ( ) != null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 59
score: 99.51286177201705
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 || aliasing CaMeL Gets != 0 ) {
rank: 59
score: 99.50747341579861
patch: if ( type == Type . FUNCTION && ( aliasing CaMeL Gets > 0 ) ) {
rank: 59
score: 99.44223022460938
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets != 0 ) {
rank: 60
score: 99.6036885579427
patch: if ( type != Type . FUNCTION || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 60
score: 99.5674358865489
patch: if ( declaration . get CaMeL Twin ( ) . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 60
score: 99.559326171875
patch: if ( aliasing CaMeL Gets > 0 || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 60
score: 99.51845703125
patch: if ( declaration . get CaMeL Twin ( ) == null ) {
rank: 60
score: 99.51113891601562
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION && aliasing CaMeL Gets > null ) {
rank: 60
score: 99.5063709077381
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type != Type . ) {
rank: 60
score: 99.44163754111842
patch: if ( type != Type . FUNCTION && ! ( type == Type . FUNCTION ) ) {
rank: 61
score: 99.60362659801136
patch: if ( type != Type . OTHER && global CaMeL Sets != 0 || local CaMeL Sets != 0 ) {
rank: 61
score: 99.55354110054348
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) false ) {
rank: 61
score: 99.51825241815476
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ;
rank: 62
score: 99.56540934244792
patch: if ( ( declaration == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 62
score: 99.5579121907552
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 62
score: 99.5530422044837
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( type ) ) {
rank: 62
score: 99.52879696800595
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( type != Type . FUNCTION ) {
rank: 62
score: 99.5057601928711
patch: if ( type != Node . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 62
score: 99.50434313322368
patch: if ( type != Type . FUNCTION ) { if ( aliasing CaMeL Gets > 0 ) {
rank: 63
score: 99.60268147786458
patch: if ( type == Type . FUNCTION && declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 63
score: 99.5171142578125
patch: if ( ! ! declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 63
score: 99.50907759232955
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && type != Type . FUNCTION ) {
rank: 63
score: 99.50425502232143
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 63
score: 99.44059614701705
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 0 ) {
rank: 64
score: 99.60110473632812
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 1 ) {
rank: 64
score: 99.55751255580357
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { return true ;
rank: 64
score: 99.52479383680556
patch: if ( type . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) )
rank: 64
score: 99.5039295014881
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 0 )
rank: 65
score: 99.56357828776042
patch: if ( ( parent != null ) && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 65
score: 99.55746858016305
patch: if ( type != Type . FUNCTION && ! global CaMeL Sets . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 65
score: 99.55145818536931
patch: if ( key != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 65
score: 99.51459418402777
patch: if ( ! declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 65
score: 99.5055819424716
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 && aliasing CaMeL Gets == 0 ) {
rank: 65
score: 99.50509304470486
patch: if ( ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 65
score: 99.43994750976563
patch: if ( ( type == Type . FUNCTION ) && ( type != Type . FUNCTION ) ) {
rank: 66
score: 99.59958902994792
patch: if ( type != Type . FUNCTION && this . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 66
score: 99.5624287923177
patch: if ( this . parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 66
score: 99.55037788722827
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) {
rank: 66
score: 99.51421828497024
patch: if ( key != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 66
score: 99.504638671875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 66
score: 99.50071364182692
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION && aliasing CaMeL Gets == Type . FUNCTION ) {
rank: 66
score: 99.43897247314453
patch: if ( type > Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 67
score: 99.59832763671875
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 67
score: 99.55195697985198
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return false ;
rank: 67
score: 99.513671875
patch: if ( type . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 67
score: 99.5046157836914
patch: if ( type != Type . NOT && aliasing CaMeL Gets > 0 ) {
rank: 67
score: 99.49703543526786
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 68
score: 99.54958177649456
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( $NUMBER$ ) ) {
rank: 68
score: 99.51213727678571
patch: if ( parent . get CaMeL Twin ( ) != null || local CaMeL Sets != 0 ) {
rank: 68
score: 99.50023057725694
patch: if ( type != Type . FUNCTION && this . aliasing CaMeL Gets > 0 ) {
rank: 68
score: 99.49598388671875
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return false ; }
rank: 68
score: 99.43599243164063
patch: if ( ( type != Type . FUNCTION ) && ( aliasing CaMeL Gets > 0 ) ) {
rank: 69
score: 99.59544788707386
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 && local CaMeL Sets != 0 ) {
rank: 69
score: 99.5489860983456
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 69
score: 99.5035733309659
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && type != Type . FUNCTION ) {
rank: 69
score: 99.49806518554688
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets && aliasing CaMeL Gets > 0 ) {
rank: 69
score: 99.49478004092262
patch: if ( type == Type . FUNCTION || type == Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 69
score: 99.43408203125
patch: if ( ! type . is CaMeL Empty ( ) ) {
rank: 70
score: 99.59422810872395
patch: if ( type != Type . OTHER || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 70
score: 99.55771891276042
patch: if ( ! declaration . get CaMeL Twin ( ) . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 70
score: 99.54276899857955
patch: if ( this == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 70
score: 99.51021902901786
patch: if ( type . get CaMeL Twin ( ) != null || aliasing CaMeL Gets > 0 ) {
rank: 70
score: 99.49799053485577
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets . is CaMeL Empty ( ) ) {
rank: 70
score: 99.49309539794922
patch: if ( type == Type . FUNCTION || type == Type . FUNCTION ) {
rank: 70
score: 99.43343505859374
patch: if ( type != Type . FUNCTION && get CaMeL Type ( ) != Type . FUNCTION ) {
rank: 71
score: 99.54787190755208
patch: if ( ! ! parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 71
score: 99.5426913174716
patch: if ( parent == null && declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 71
score: 99.51432291666667
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) { if ( is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 71
score: 99.50899251302083
patch: if ( this . type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 71
score: 99.50346235795455
patch: if ( type != Type . TYPE && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 71
score: 99.49606323242188
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets . is CaMeL Empty ( ) ) {
rank: 71
score: 99.43318939208984
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets != 0 ) {
rank: 72
score: 99.54762776692708
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 72
score: 99.5143155184659
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 72
score: 99.50806274414063
patch: if ( declaration . get CaMeL Twin ( ) != null && aliasing CaMeL Gets > 0 )
rank: 72
score: 99.50316162109375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 , aliasing CaMeL Gets ) {
rank: 72
score: 99.4955822172619
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) != Type . FUNCTION ) {
rank: 72
score: 99.43302917480469
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > FUNCTION ) {
rank: 73
score: 99.59262917258523
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 || global CaMeL Sets != 0 ) {
rank: 73
score: 99.54659016927083
patch: try { if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 73
score: 99.5400057705966
patch: if ( parent instanceof null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 73
score: 99.5141934481534
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 73
score: 99.50724712171052
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( null ) ) {
rank: 73
score: 99.50304594494048
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets ) {
rank: 73
score: 99.4954325358073
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets . length > 0 ) {
rank: 73
score: 99.4834976196289
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets > 0 )
rank: 73
score: 99.4319839477539
patch: if ( type != Type . FUNCTION || type == Type . FUNCTION ) {
rank: 74
score: 99.53950832201087
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || declaration . get CaMeL Twin ( ) != null ) {
rank: 74
score: 99.51386052911931
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 74
score: 99.50684814453125
patch: if ( parent == null || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 74
score: 99.49479166666667
patch: if ( type != Type . FUNCTION && this . type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 74
score: 99.43067467730978
patch: if ( ! type . equals ( Type . FUNCTION && type . equals ( Type . FUNCTION ) ) ) {
rank: 75
score: 99.59067789713542
patch: if ( type != Type . OTHER && type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 75
score: 99.54518821022727
patch: if ( type != null || type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 75
score: 99.50637817382812
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return true ;
rank: 75
score: 99.50098941200658
patch: if ( type != Type . FUNCTION && ! ( aliasing CaMeL Gets > 0 ) ) {
rank: 75
score: 99.48215846011513
patch: if ( type != Type . FUNCTION && ! type . equals ( Type . FUNCTION ) )
rank: 76
score: 99.58897908528645
patch: if ( type != Type . FUNCTION && node . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 76
score: 99.55088297526042
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || aliasing CaMeL Gets > 0 ) {
rank: 76
score: 99.54518636067708
patch: if ( declaration . get CaMeL Twin ( ) != null && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 76
score: 99.5379638671875
patch: return parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ;
rank: 76
score: 99.51327354029605
patch: if ( ! type . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) )
rank: 76
score: 99.50591430664062
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( - 1 ) ) {
rank: 76
score: 99.49345259232955
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > true ) {
rank: 76
score: 99.48208136307566
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return true ;
rank: 77
score: 99.58836780894886
patch: if ( type != Type . FUNCTION && can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 77
score: 99.50534292367789
patch: if ( get CaMeL Twin ( ) != null ) {
rank: 77
score: 99.49952528211806
patch: if ( ( type != Type . FUNCTION ) && aliasing CaMeL Gets > 0 ) {
rank: 77
score: 99.48203822544643
patch: if ( type != Type . FUNCTION || type == Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 77
score: 99.42841131036931
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 || aliasing CaMeL Gets == 0 ) {
rank: 78
score: 99.54484049479167
patch: if ( parent == null || this . parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 78
score: 99.53693953804348
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) true ) {
rank: 78
score: 99.5046630859375
patch: if ( type != Type . FUNCTION && ( is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 78
score: 99.4809341430664
patch: if ( type != Type . STRING && aliasing CaMeL Gets > 0 ) {
rank: 78
score: 99.42786407470703
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > FUNCTION ) {
rank: 79
score: 99.544189453125
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return ;
rank: 79
score: 99.53631036931819
patch: if ( parent == 1 || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 79
score: 99.50462704613095
patch: if ( get CaMeL Twin ( ) != null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 79
score: 99.47988409745066
patch: if ( type == Type . FUNCTION ) { if ( aliasing CaMeL Gets > 0 ) {
rank: 80
score: 99.54351515997024
patch: if ( declaration . get CaMeL Twin ( ) != null && local CaMeL Sets != 0 ) {
rank: 80
score: 99.51033158735795
patch: if ( type != Type . FUNCTION && type instanceof Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 80
score: 99.50361560639881
patch: if ( declaration . get CaMeL Twin ( ) == null || aliasing CaMeL Gets > 0 ) {
rank: 80
score: 99.49604936079545
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets , 0 ) {
rank: 80
score: 99.47901553199405
patch: if ( ! type != Type . FUNCTION && ! type . equals ( Type . FUNCTION ) ) {
rank: 80
score: 99.42709350585938
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 ) {
rank: 81
score: 99.58668823242188
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 81
score: 99.54197184244792
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return ( is CaMeL Class CaMeL Or CaMeL Enum ) ; }
rank: 81
score: 99.53514563519022
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) {
rank: 81
score: 99.49546120383523
patch: if ( type != Type . NOT && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 81
score: 99.47889468544408
patch: if ( type != Type . FUNCTION ) { if ( type == Type . FUNCTION ) {
rank: 82
score: 99.5824307528409
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 1 && local CaMeL Sets != 0 ) {
rank: 82
score: 99.54158158735795
patch: if ( declaration . get CaMeL Twin ( ) != null || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 82
score: 99.53493780838816
patch: if ( declaration . get CaMeL Twin ( ) != null || parent == null ) {
rank: 82
score: 99.50848679315476
patch: if ( type != Type . FUNCTION ) { if ( is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 82
score: 99.50154194078948
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) {
rank: 82
score: 99.4934969815341
patch: if ( type > Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 82
score: 99.48963341346153
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION || aliasing CaMeL Gets != Type . FUNCTION ) {
rank: 82
score: 99.47774832589286
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( aliasing CaMeL Gets ( ) ) ) {
rank: 82
score: 99.42517852783203
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets == 0 ) {
rank: 83
score: 99.5078125
patch: if ( type != Type . EMPTY && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 83
score: 99.50140380859375
patch: if ( element . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 83
score: 99.47724352384868
patch: if ( type != Type . FUNCTION && ! type . is CaMeL None ( ) ) {
rank: 83
score: 99.42446899414062
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets != 0 ) {
rank: 84
score: 99.58221435546875
patch: if ( type != Type . NOT && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 84
score: 99.54681951349431
patch: if ( name != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 84
score: 99.5075174967448
patch: if ( type != Type . FUNCTION && type . type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 84
score: 99.49832589285714
patch: if ( declaration != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 84
score: 99.48869323730469
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > null ) {
rank: 84
score: 99.47661276424633
patch: if ( type != Type . NULL && ! aliasing CaMeL Gets > 0 ) {
rank: 85
score: 99.54071044921875
patch: if ( ! declaration . get CaMeL Twin ( ) != null ) {
rank: 85
score: 99.5063809481534
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 85
score: 99.49712813527961
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) ) {
rank: 85
score: 99.48771528764205
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION || type != Type . FUNCTION ) {
rank: 85
score: 99.47640991210938
patch: if ( type != Type . NAME && aliasing CaMeL Gets > 0 ) {
rank: 85
score: 99.42303466796875
patch: if ( type == Type . FUNCTION && get CaMeL Type ( ) == Type . FUNCTION ) {
rank: 86
score: 99.5783182779948
patch: if ( type != Type . FUNCTION || type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 86
score: 99.54644775390625
patch: / * if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 86
score: 99.53956187855114
patch: if ( parent == null || root . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 86
score: 99.5318603515625
patch: return ( parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 86
score: 99.49683902138158
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { {
rank: 86
score: 99.48711081112133
patch: if ( type != null && ! type . is CaMeL Empty ( ) ) {
rank: 86
score: 99.47612762451172
patch: if ( type != Type . FUNCTION && type != Type . NONE ) {
rank: 87
score: 99.53895060221355
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 1 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 87
score: 99.53184442934783
patch: if ( ! parent == null || type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 87
score: 99.49663696289062
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , this ) ) {
rank: 87
score: 99.48682657877605
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION && aliasing CaMeL Gets != null ) {
rank: 88
score: 99.57750447591145
patch: if ( type == Type . OTHER && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 88
score: 99.53088909646739
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( $STRING$ ) ) {
rank: 88
score: 99.50528157552084
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 )
rank: 88
score: 99.49005889892578
patch: if ( name != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 88
score: 99.47507731119792
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . length > 0 ) {
rank: 88
score: 99.42192993164062
patch: if ( get CaMeL Type ( ) == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 89
score: 99.54385375976562
patch: if ( ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 89
score: 99.5283733865489
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { {
rank: 89
score: 99.50490500710227
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { type = Type . FUNCTION ;
rank: 89
score: 99.48991255326705
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( aliasing CaMeL Gets ( type ) ) ) {
rank: 89
score: 99.47386532738095
patch: if ( type . equals ( Type . FUNCTION && type . equals ( Type . FUNCTION ) ) )
rank: 90
score: 99.57695079985119
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 90
score: 99.5360616048177
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 90
score: 99.52732155539773
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( declaration . get CaMeL Twin ( ) ) ) {
rank: 90
score: 99.494140625
patch: if ( type != null || type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 90
score: 99.48976828835227
patch: if ( type != Type . FUNCTION && type & Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 90
score: 99.42161865234375
patch: if ( ( type == Type . FUNCTION ) && ( type == Type . FUNCTION ) ) {
rank: 91
score: 99.57499186197917
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || type != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 91
score: 99.53535970052083
patch: if ( ! declaration . get CaMeL Twin ( ) != null && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 91
score: 99.52582341974431
patch: if ( parent == 0 || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 91
score: 99.4850362141927
patch: if ( type != Type . FUNCTION && ! type . != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 91
score: 99.47279268152573
patch: if ( type . != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 91
score: 99.42076110839844
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets == 0 ) {
rank: 92
score: 99.57438520951705
patch: if ( type != null || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 92
score: 99.54128011067708
patch: return ( ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) ;
rank: 92
score: 99.53450927734374
patch: if ( type != Type . FUNCTION && type . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 92
score: 99.52517832880434
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 0 ) ) {
rank: 92
score: 99.50318492542614
patch: if ( type . get CaMeL Type ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 92
score: 99.4925537109375
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 1 ) {
rank: 92
score: 99.48457475142045
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 1 ) {
rank: 93
score: 99.54034102590461
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum && aliasing CaMeL Gets > 0 ) {
rank: 93
score: 99.50272993607955
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION && type == Type . FUNCTION ) {
rank: 93
score: 99.49191284179688
patch: if ( this . type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 93
score: 99.48818137428977
patch: if ( type != Type . FUNCTION ? aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 93
score: 99.47220009251645
patch: if ( type == Type . FUNCTION && type . equals ( Type . FUNCTION ) ) {
rank: 93
score: 99.41843483664773
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets >= 0 ) {
rank: 94
score: 99.57278442382812
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) || ( is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 94
score: 99.54015003551136
patch: if ( declaration . get CaMeL Type ( ) == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 94
score: 99.53345836292614
patch: if ( parent == null || ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 94
score: 99.5246249112216
patch: if ( declaration == null || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 94
score: 99.50232514880952
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( type == Type . FUNCTION ) {
rank: 94
score: 99.49155099051339
patch: if ( parent . get CaMeL Twin ( ) != null )
rank: 94
score: 99.47201377467105
patch: if ( type != Type . FUNCTION && type . starts CaMeL With ( $STRING$ ) ) {
rank: 95
score: 99.57273171164773
patch: if ( type != Type . OTHER && global CaMeL Sets != 0 && local CaMeL Sets != 0 ) {
rank: 95
score: 99.5399753736413
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) ;
rank: 95
score: 99.53296959918478
patch: if ( aliasing CaMeL Gets > 0 && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 95
score: 99.52392578125
patch: if ( parent == null || node . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 95
score: 99.50230823863636
patch: if ( type . equals ( Type . FUNCTION ) || type . equals ( Type . FUNCTION ) ) {
rank: 95
score: 99.49138726128473
patch: if ( ! type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 95
score: 99.48729359019886
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > null ) {
rank: 95
score: 99.48110961914062
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > aliasing CaMeL Gets ) {
rank: 95
score: 99.47152709960938
patch: if ( type CaMeL Name != null && type CaMeL Name . length ( ) > 0 ) {
rank: 96
score: 99.52384086277173
patch: if ( ! parent != null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 96
score: 99.50213068181819
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && type == Type . FUNCTION ) {
rank: 96
score: 99.49130730879934
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { }
rank: 96
score: 99.48065740411931
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION || type != Type . FUNCTION ) {
rank: 96
score: 99.47147042410714
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets < 0 )
rank: 96
score: 99.41762966579861
patch: if ( type != Type . FUNCTION && ( type == Type . FUNCTION ) ) {
rank: 97
score: 99.53894573709239
patch: return declaration . get CaMeL Twin ( ) . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ;
rank: 97
score: 99.53187052408855
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 97
score: 99.48663884943181
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && type > Type . FUNCTION ) {
rank: 97
score: 99.48049094460227
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || type == Type . FUNCTION ) {
rank: 97
score: 99.47085731907895
patch: if ( aliasing CaMeL Gets > 0 ) { if ( aliasing CaMeL Gets > 0 ) {
rank: 98
score: 99.53142438616071
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 98
score: 99.5232570482337
patch: } if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 98
score: 99.49105834960938
patch: if ( get CaMeL Twin ( ) . get CaMeL Twin ( ) != null ) {
rank: 98
score: 99.47074381510417
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return {
rank: 99
score: 99.53702799479167
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; else {
rank: 99
score: 99.53094482421875
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return true ;
rank: 99
score: 99.49097357855902
patch: return ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 99
score: 99.4824951171875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) . > 0 ) {
rank: 99
score: 99.47859700520833
patch: if ( type != Type . FUNCTION && type . is CaMeL Empty ( ) ) {
rank: 99
score: 99.41648171164773
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets ( aliasing CaMeL Gets ( type ) ) ) {
rank: 100
score: 99.53483072916667
patch: if ( type != Type . FUNCTION || declaration . get CaMeL Twin ( ) != null ) {
rank: 100
score: 99.5303093405331
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 100
score: 99.52196204144022
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) ;
rank: 100
score: 99.50056596235795
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 100
score: 99.48236638849431
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 100
score: 99.47705078125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 || aliasing CaMeL Gets . is CaMeL Empty ( ) ) {
rank: 100
score: 99.46736907958984
patch: if ( type != Type . FUNCTION && type != Type . NULL ) {
rank: 100
score: 99.4159823330966
patch: if ( type == Type . FUNCTION || type != Type . FUNCTION && type != Type . FUNCTION ) {
rank: 101
score: 99.53478422619048
patch: if ( type == Type . FUNCTION && declaration . get CaMeL Twin ( ) != null ) {
rank: 101
score: 99.53016246448864
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( ! aliasing CaMeL Gets > 0 ) {
rank: 101
score: 99.49990844726562
patch: if ( type instanceof Type && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 101
score: 99.48934775904605
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) {
rank: 101
score: 99.4815673828125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) . != 0 ) {
rank: 101
score: 99.47693810096153
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION || aliasing CaMeL Gets > Type . FUNCTION ) {
rank: 101
score: 99.46588456003289
patch: if ( type == Type . FUNCTION && ! type . is CaMeL Interface ( ) ) {
rank: 102
score: 99.56890314275569
patch: if ( type == Type . FUNCTION && global CaMeL Sets != 0 || local CaMeL Sets != 0 ) {
rank: 102
score: 99.53466796875
patch: if ( ( declaration . get CaMeL Twin ( ) != null ) || aliasing CaMeL Gets > 0 ) {
rank: 102
score: 99.52965436662946
patch: if ( aliasing CaMeL Gets > 0 ) { return false ; }
rank: 102
score: 99.52159052309783
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( key ) ) {
rank: 102
score: 99.49940074573864
patch: if ( type . equals ( Type . FUNCTION ) && type . equals ( Type . FUNCTION ) ) {
rank: 102
score: 99.48914859169408
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( this ) ) {
rank: 103
score: 99.5677490234375
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && local CaMeL Sets != 0 ) {
rank: 103
score: 99.49904563210227
patch: if ( type != Type . FUNCTION ) { if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 103
score: 99.48900082236842
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 0 ) ) {
rank: 103
score: 99.4810458096591
patch: if ( aliasing CaMeL Gets > 0 && type != Type . FUNCTION && aliasing CaMeL Gets != 0 ) {
rank: 103
score: 99.4765292080966
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 1 && aliasing CaMeL Gets > 0 ) {
rank: 103
score: 99.46489025297619
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || aliasing CaMeL Gets > 0 )
rank: 103
score: 99.41396262428977
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets == 0 ) {
rank: 104
score: 99.5676778157552
patch: if ( key != Type . FUNCTION && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 104
score: 99.53360648777173
patch: if ( return parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 104
score: 99.52931722005208
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , false ) ) {
rank: 104
score: 99.52073072350544
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ] ) ) {
rank: 104
score: 99.4986508018092
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( 0 , type ) ) {
rank: 104
score: 99.47651599702381
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > ) {
rank: 104
score: 99.46413167317708
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { ) {
rank: 105
score: 99.5330810546875
patch: try { return parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ;
rank: 105
score: 99.48082386363636
patch: if ( name != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 105
score: 99.47645635190217
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets ( type ) ) {
rank: 105
score: 99.46295776367188
patch: if ( type != Type . FUNCTION ) { if ( ! aliasing CaMeL Gets > 0 ) {
rank: 105
score: 99.41268920898438
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets == null ) {
rank: 106
score: 99.56705729166667
patch: if ( local CaMeL Sets != 0 || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 106
score: 99.52796695106908
patch: if ( ! type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 106
score: 99.5195645419034
patch: if ( parent == null || element . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 106
score: 99.48807525634766
patch: if ( parent == null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 106
score: 99.48016912286931
patch: if ( type != Type . NULL && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 106
score: 99.4748026529948
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && this . aliasing CaMeL Gets > 0 ) {
rank: 106
score: 99.41263253348214
patch: if ( ! type . equals ( Type . FUNCTION ) ) {
rank: 107
score: 99.56703879616477
patch: if ( type != Type . FUNCTION && local CaMeL Sets != 0 || local CaMeL Sets != 0 ) {
rank: 107
score: 99.5176114169034
patch: if ( declaration . get CaMeL Id ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 107
score: 99.49699263139205
patch: if ( type instanceof Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 107
score: 99.48782958984376
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , false ) ) {
rank: 107
score: 99.47990278764205
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets > 0 ) {
rank: 107
score: 99.47455388849431
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > true ) {
rank: 107
score: 99.4612548828125
patch: if ( ! type . equals ( Type . FUNCTION ) && aliasing CaMeL Gets > 0 ) {
rank: 107
score: 99.41258655894886
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 108
score: 99.5273204985119
patch: if ( type != Type . TYPE && declaration . get CaMeL Twin ( ) != null ) {
rank: 108
score: 99.51754628057066
patch: if ( parent == null || ! declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 108
score: 99.4964599609375
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 108
score: 99.48735608552632
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , ) ) {
rank: 108
score: 99.46123504638672
patch: if ( type == Type . STRING && aliasing CaMeL Gets > 0 ) {
rank: 108
score: 99.41206359863281
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets == null ) {
rank: 109
score: 99.56614176432292
patch: if ( aliasing CaMeL Gets > 0 || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 109
score: 99.53078391335227
patch: if ( this != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 109
score: 99.5268046061198
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum && declaration . get CaMeL Twin ( ) != null ) {
rank: 109
score: 99.49583435058594
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > $NUMBER$ ) {
rank: 109
score: 99.48526340060764
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) )
rank: 109
score: 99.47834916548295
patch: if ( type != Type . FUNCTION && type != Type . NOT && aliasing CaMeL Gets > 0 ) {
rank: 109
score: 99.46112381784539
patch: if ( type == Type . FUNCTION ) { if ( type == Type . FUNCTION ) {
rank: 109
score: 99.41189575195312
patch: if ( ! type . equals ( Type . FUNCTION || aliasing CaMeL Gets > 0 ) ) {
rank: 110
score: 99.5306640625
patch: return parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ;
rank: 110
score: 99.52658420138889
patch: if ( type != Type . TYPE && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 110
score: 99.51688816236413
patch: if ( type != Type . FUNCTION && ( declaration . get CaMeL Twin ( ) != null ) ) {
rank: 110
score: 99.48516524465461
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( $STRING$ ) ) {
rank: 110
score: 99.47777210582386
patch: if ( name != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 110
score: 99.4597637469952
patch: if ( type . equals ( Type . FUNCTION ) ) {
rank: 110
score: 99.41183810763889
patch: if ( type != Type . FUNCTION && ( type != Type . FUNCTION ) ) {
rank: 111
score: 99.53042602539062
patch: if ( this . parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 111
score: 99.5264004794034
patch: if ( type != null || global CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 111
score: 99.5162353515625
patch: if ( declaration . get CaMeL Visibility ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 111
score: 99.47748357599431
patch: if ( type != Type . FUNCTION && type != Type . NULL && aliasing CaMeL Gets > 0 ) {
rank: 111
score: 99.45962185329861
patch: if ( ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 111
score: 99.4112215909091
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets >= 0 ) {
rank: 112
score: 99.52961531929348
patch: if ( declaration . get CaMeL Twin ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 112
score: 99.51543634588069
patch: while ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 112
score: 99.49486194957386
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets < 0 ) {
rank: 112
score: 99.4841552734375
patch: if ( ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 112
score: 99.47742808948864
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 112
score: 99.47028142755681
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) . equals ( $STRING$ ) ) {
rank: 112
score: 99.45950753348214
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 1 )
rank: 112
score: 99.41072162828948
patch: if ( type == Type . FUNCTION && ! type . is CaMeL Empty ( ) ) {
rank: 113
score: 99.5599032315341
patch: if ( type != Type . OTHER && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 113
score: 99.5293477376302
patch: if ( global CaMeL Sets != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 113
score: 99.52509099786931
patch: if ( type != Type . FUNCTION && global CaMeL Sets . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 113
score: 99.51542331861413
patch: if ( parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) {
rank: 113
score: 99.49437366832386
patch: if ( type != Type . FUNCTION && type != Type . EMPTY && aliasing CaMeL Gets > 0 ) {
rank: 113
score: 99.48394484747024
patch: if ( parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 113
score: 99.477294921875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || type == Type . FUNCTION ) {
rank: 113
score: 99.47007399338942
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION || aliasing CaMeL Gets == Type . FUNCTION ) {
rank: 113
score: 99.4594494047619
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ( type ) ) {
rank: 114
score: 99.5586446126302
patch: if ( global CaMeL Sets != 0 || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 114
score: 99.52437918526786
patch: if ( global CaMeL Sets != 0 || declaration . get CaMeL Twin ( ) != null ) {
rank: 114
score: 99.5154141512784
patch: if ( filter == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 114
score: 99.4942294034091
patch: if ( aliasing CaMeL Gets > 0 && type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 114
score: 99.48342556423611
patch: if ( get CaMeL Twin ( ) != null || aliasing CaMeL Gets > 0 )
rank: 114
score: 99.47718721277573
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( type ) ) {
rank: 114
score: 99.45847039473684
patch: if ( type != Type . NULL && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 115
score: 99.55821736653645
patch: if ( type == Type . FUNCTION || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 115
score: 99.5238749186198
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 1 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 115
score: 99.49354137073864
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets < 0 ) {
rank: 115
score: 99.48317583869485
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum )
rank: 115
score: 99.46995907738095
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || aliasing CaMeL Gets > ) {
rank: 115
score: 99.45840614720395
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Const ( ) ) {
rank: 115
score: 99.40986071134868
patch: if ( type == Type . FUNCTION && ! ( type == Type . FUNCTION ) ) {
rank: 116
score: 99.52328830295139
patch: if ( type != null || type . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 116
score: 99.51398259943181
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 || local CaMeL Sets != 0 ) {
rank: 116
score: 99.49299760298295
patch: if ( ! type . is CaMeL Assignable CaMeL From ( type . get CaMeL Type ( ) ) ) {
rank: 116
score: 99.47665066189236
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 . 0 ) {
rank: 116
score: 99.4688212076823
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || aliasing CaMeL Gets > aliasing CaMeL Gets ) {
rank: 116
score: 99.45753580729166
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 )
rank: 117
score: 99.5138272372159
patch: if ( list == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 117
score: 99.49197387695312
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 117
score: 99.48267822265625
patch: if ( parent . get CaMeL Twin ( ) != null || aliasing CaMeL Gets > 0 )
rank: 117
score: 99.4756192294034
patch: if ( type != Type . NOT && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 117
score: 99.46865012428977
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 1 ) {
rank: 117
score: 99.45706515842014
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return {
rank: 117
score: 99.40889115767045
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 && type != Type . FUNCTION ) {
rank: 118
score: 99.55757649739583
patch: if ( global CaMeL Sets != 0 || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 118
score: 99.527099609375
patch: if ( type != Type . FUNCTION && declaration . get CaMeL Twin ( ) == null ) {
rank: 118
score: 99.5220363451087
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return ( is CaMeL Class CaMeL Or CaMeL Enum ) ;
rank: 118
score: 99.51282848011364
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 || aliasing CaMeL Gets > 0 ) {
rank: 118
score: 99.49167887369792
patch: if ( type . get CaMeL Type CaMeL Name ( ) == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 118
score: 99.48099365234376
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , true ) ) {
rank: 118
score: 99.4686279296875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets . length > 0 ) {
rank: 118
score: 99.45683361235119
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type == Type . FUNCTION )
rank: 119
score: 99.52192125822368
patch: if ( declaration != null || declaration . get CaMeL Twin ( ) != null ) {
rank: 119
score: 99.48091052827381
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || local CaMeL Sets != 0 )
rank: 119
score: 99.47528754340277
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 , 0 ) {
rank: 119
score: 99.46837439903847
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets != 0 && aliasing CaMeL Gets . is CaMeL Empty ( ) ) {
rank: 119
score: 99.45641508556548
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets >= 0 )
rank: 120
score: 99.55745072798295
patch: if ( type != null && type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 120
score: 99.51186735733695
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && declaration . get CaMeL Twin ( ) == null ) {
rank: 120
score: 99.49122155230978
patch: if ( type != Type . FUNCTION && type . get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 120
score: 99.480224609375
patch: if ( declaration . get CaMeL Twin ( ) != 1 || aliasing CaMeL Gets > 0 ) {
rank: 120
score: 99.47495339133523
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type > Type . FUNCTION ) {
rank: 120
score: 99.46827281605114
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets != 0 ) {
rank: 120
score: 99.4067049893466
patch: if ( type == Type . FUNCTION || type != Type . FUNCTION || type != Type . FUNCTION ) {
rank: 121
score: 99.5561190518466
patch: if ( type != Type . OTHER || global CaMeL Sets != 0 || local CaMeL Sets != 0 ) {
rank: 121
score: 99.49054509943181
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 121
score: 99.47906203497024
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && local CaMeL Sets != 0 )
rank: 121
score: 99.45576477050781
patch: if ( type == Type . EMPTY && aliasing CaMeL Gets > 0 ) {
rank: 121
score: 99.40637817382813
patch: if ( type == Type . FUNCTION && get CaMeL Type ( ) != Type . FUNCTION ) {
rank: 122
score: 99.4790103310033
patch: if ( get CaMeL Twin ( ) != null && aliasing CaMeL Gets > 0 ) {
rank: 122
score: 99.47457725123355
patch: if ( ! type . is CaMeL Empty ( ) && aliasing CaMeL Gets > 0 ) {
rank: 122
score: 99.45574273003473
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets . length > 0 ) {
rank: 123
score: 99.52121803977273
patch: if ( declaration . get CaMeL Twin ( ) != null && is CaMeL Class CaMeL Or CaMeL Enum )
rank: 123
score: 99.5107754794034
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && local CaMeL Sets != 0 ) {
rank: 123
score: 99.48957963423295
patch: if ( type != Type . FUNCTION || type == Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 123
score: 99.478076171875
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( - 0 ) ) {
rank: 123
score: 99.4722900390625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && type != Type . TYPE ) {
rank: 123
score: 99.45555355674342
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return true ;
rank: 123
score: 99.40532892400569
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && type == Type . FUNCTION ) {
rank: 124
score: 99.5208156419837
patch: if ( ( parent == null ) && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 124
score: 99.48952414772727
patch: if ( type != Type . NONE && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 124
score: 99.47792681525735
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > - 1 ) {
rank: 124
score: 99.47206809303977
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets != 0 ) {
rank: 124
score: 99.45552368164063
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type instanceof Type ) {
rank: 124
score: 99.40484940378289
patch: if ( ! ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 125
score: 99.5205078125
patch: if ( ! parent == null || ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 125
score: 99.51039817116477
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 && local CaMeL Sets != 0 ) {
rank: 125
score: 99.4892911044034
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 125
score: 99.47699265252976
patch: if ( parent != null || type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 125
score: 99.46636408025569
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > false ) {
rank: 125
score: 99.45486450195312
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( ) ) {
rank: 125
score: 99.40479125976563
patch: if ( ( type == Type . FUNCTION ) && ( aliasing CaMeL Gets > 0 ) ) {
rank: 126
score: 99.55413818359375
patch: if ( type == Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 126
score: 99.51973470052083
patch: if ( type != Type . FUNCTION && ! ! global CaMeL Sets . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 126
score: 99.47667875744048
patch: if ( declaration . get CaMeL Twin ( ) == null && aliasing CaMeL Gets > 0 ) {
rank: 126
score: 99.46575372869319
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > null ) {
rank: 126
score: 99.4548404091283
patch: if ( type != Type . NULL && type . equals ( Type . FUNCTION ) ) {
rank: 126
score: 99.40450032552083
patch: if ( ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) ) {
rank: 127
score: 99.522705078125
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; ;
rank: 127
score: 99.51946466619319
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 127
score: 99.50991423233695
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && parent . get CaMeL Twin ( ) != null ) {
rank: 127
score: 99.48862915039062
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . size ( ) > 0 ) {
rank: 127
score: 99.47636486235119
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return true ;
rank: 127
score: 99.4707275390625
patch: if ( type != null && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 127
score: 99.4656270345052
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type . is CaMeL Empty ( ) ) {
rank: 127
score: 99.45453559027777
patch: if ( type != Type . FUNCTION && type . equals ( Type . FUNCTION ) )
rank: 127
score: 99.4039306640625
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > FUNCTION ) {
rank: 128
score: 99.5523681640625
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 1 || local CaMeL Sets != 0 ) {
rank: 128
score: 99.488134765625
patch: if ( type != Type . FUNCTION && type instanceof Type && aliasing CaMeL Gets > 0 ) {
rank: 128
score: 99.47635091145834
patch: if ( type . get CaMeL Twin ( ) != null ) {
rank: 128
score: 99.46497521033653
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets == 0 && aliasing CaMeL Gets . is CaMeL Empty ( ) ) {
rank: 128
score: 99.45449683779762
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ )
rank: 128
score: 99.40391956676136
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 || aliasing CaMeL Gets == 0 ) {
rank: 129
score: 99.51786973741319
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && 0 ) {
rank: 129
score: 99.50873357599431
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && local CaMeL Sets != 0 ) {
rank: 129
score: 99.47633666992188
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return ) ;
rank: 130
score: 99.48694957386364
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION && type == Type . FUNCTION ) {
rank: 130
score: 99.47603934151786
patch: if ( declaration . get CaMeL Twin ( ) != null || aliasing CaMeL Gets > 1 ) {
rank: 130
score: 99.4700927734375
patch: if ( type != null && aliasing CaMeL Gets > 0 ) {
rank: 130
score: 99.45331101190476
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || type != Type . FUNCTION )
rank: 131
score: 99.52171834309895
patch: if ( ! parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) {
rank: 131
score: 99.51647077287946
patch: if ( type != null || global CaMeL Sets != 0 ) {
rank: 131
score: 99.50777004076087
patch: if ( declaration . get CaMeL Twin ( ) == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 131
score: 99.47599523207721
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { }
rank: 131
score: 99.46817355685764
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && true ) {
rank: 131
score: 99.46410115559895
patch: if ( type != Type . FUNCTION && this . aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 131
score: 99.45235770089286
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( aliasing CaMeL Gets ( ) ) ) {
rank: 131
score: 99.40270233154297
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets != null ) {
rank: 132
score: 99.51554731889205
patch: if ( type == Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 132
score: 99.50773481889205
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 || local CaMeL Sets != 0 ) {
rank: 132
score: 99.47565018503289
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { }
rank: 132
score: 99.4676846590909
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets == 0 && aliasing CaMeL Gets > 0 ) {
rank: 132
score: 99.46389931126645
patch: if ( type != Type . FUNCTION || ! type . is CaMeL Empty ( ) ) {
rank: 132
score: 99.45226440429687
patch: if ( aliasing CaMeL Gets > 0 ) { return aliasing CaMeL Gets > 0 ; } else {
rank: 132
score: 99.40232849121094
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets == 0 ) {
rank: 133
score: 99.54988606770833
patch: if ( declaration . get CaMeL Twin ( ) != null || global CaMeL Sets != 0 ) {
rank: 133
score: 99.51529947916667
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 133
score: 99.47555721507354
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 134
score: 99.51519775390625
patch: if ( type != Type . FUNCTION && declaration . get CaMeL Twin ( ) != null )
rank: 134
score: 99.50732421875
patch: if ( parent != null || ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 134
score: 99.48406427556819
patch: if ( type != Type . FUNCTION && type != Type . NONE && aliasing CaMeL Gets > 0 ) {
rank: 134
score: 99.47527112458882
patch: if ( parent . get CaMeL Twin ( ) != null ) { return false ; }
rank: 134
score: 99.46732788085937
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) . == 0 ) {
rank: 134
score: 99.46208110608552
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . equals ( type ) ) {
rank: 134
score: 99.40153364701705
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && type == Type . FUNCTION ) {
rank: 135
score: 99.54779607599431
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 && global CaMeL Sets != 0 ) {
rank: 135
score: 99.51505279541016
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 1 ) {
rank: 135
score: 99.48355102539062
patch: if ( type != Type . FUNCTION && type . get CaMeL Name ( ) . length ( ) == 0 ) {
rank: 135
score: 99.47482096354166
patch: if ( declaration . get CaMeL Twin ( ) != 1 ) {
rank: 135
score: 99.4672518643466
patch: if ( type != Node . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 135
score: 99.46150716145833
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && type . is CaMeL Empty ( ) ) {
rank: 135
score: 99.4010009765625
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION && type != Type . FUNCTION ) {
rank: 136
score: 99.5472745028409
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 1 || aliasing CaMeL Gets > 0 ) {
rank: 136
score: 99.519287109375
patch: return ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; }
rank: 136
score: 99.51420261548913
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( this ) ) {
rank: 136
score: 99.4741943359375
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( aliasing CaMeL Gets > 0 )
rank: 136
score: 99.46653053977273
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets != 0 ) {
rank: 136
score: 99.45155029296875
patch: if ( type != Type . NULL && ! type . equals ( Type . FUNCTION ) ) {
rank: 136
score: 99.40012721011513
patch: if ( ! ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 ) ) {
rank: 137
score: 99.54670854048295
patch: if ( type != Type . FUNCTION && local CaMeL Sets != 0 || aliasing CaMeL Gets > 0 ) {
rank: 137
score: 99.51382048233695
patch: if ( type != null || ! type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 137
score: 99.47412109375
patch: if ( declaration == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 137
score: 99.45943196614583
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION || aliasing CaMeL Gets > null ) {
rank: 137
score: 99.39999389648438
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets == null ) {
rank: 138
score: 99.54646439985795
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 || aliasing CaMeL Gets > 0 ) {
rank: 138
score: 99.51324462890625
patch: if ( type != Type . FUNCTION && global CaMeL Sets == 0 ) {
rank: 138
score: 99.50525433084239
patch: if ( ! parent . null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 138
score: 99.482666015625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 && aliasing CaMeL Gets > 1 ) {
rank: 138
score: 99.47400483630952
patch: if ( parent . get CaMeL Twin ( ) != null && aliasing CaMeL Gets > 0 ) {
rank: 138
score: 99.45924886067708
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != null && aliasing CaMeL Gets . length > 0 ) {
rank: 138
score: 99.4505386352539
patch: if ( type == Type . NAME && aliasing CaMeL Gets > 0 ) {
rank: 138
score: 99.39907004616477
patch: if ( type > Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 139
score: 99.544677734375
patch: if ( type != Type . OTHER && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 139
score: 99.51724853515626
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( ) || aliasing CaMeL Gets > 0 ) {
rank: 139
score: 99.50519353693181
patch: if ( declaration . get CaMeL Id ( ) == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 139
score: 99.47342354910714
patch: if ( ! ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 139
score: 99.45888449928977
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > type ) {
rank: 139
score: 99.45048971737133
patch: if ( type != Type . FUNCTION && type aliasing CaMeL Gets > 0 ) {
rank: 139
score: 99.39827104048295
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets ( aliasing CaMeL Gets ( type ) ) ) {
rank: 140
score: 99.51686006433823
patch: if ( ! can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 140
score: 99.51218548943015
patch: if ( type != Type . FUNCTION && ! global CaMeL Sets != 0 ) {
rank: 140
score: 99.46584743923611
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && false ) {
rank: 140
score: 99.458759765625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets . equals ( type ) ) {
rank: 140
score: 99.45040893554688
patch: if ( type != Type . NULL || aliasing CaMeL Gets > 0 ) {
rank: 141
score: 99.54044966264205
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ; }
rank: 141
score: 99.51212565104167
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum && local CaMeL Sets != 0 ) {
rank: 141
score: 99.48011363636364
patch: if ( type != Type . FUNCTION || type != Type . TYPE && aliasing CaMeL Gets > 0 ) {
rank: 141
score: 99.47163318452381
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( local CaMeL Sets ) ) {
rank: 141
score: 99.46494012129934
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( type ) > 0 ) {
rank: 141
score: 99.45029296875
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 141
score: 99.39749908447266
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > FUNCTION ) {
rank: 142
score: 99.51619466145833
patch: if ( declaration == null || ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 142
score: 99.51185674252717
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 142
score: 99.47129516601562
patch: if ( declaration . get CaMeL Twin ( ) != null || local CaMeL Sets != 0 )
rank: 142
score: 99.45750891644022
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets != 0 ) {
rank: 142
score: 99.45002184416118
patch: if ( type . equals ( Type . FUNCTION && aliasing CaMeL Gets > 1 ) ) {
rank: 142
score: 99.39658203125
patch: if ( ( type == Type . FUNCTION ) || ( type == Type . FUNCTION ) ) {
rank: 143
score: 99.54006125710227
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 && aliasing CaMeL Gets > 0 ) {
rank: 143
score: 99.5113525390625
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return declaration . get CaMeL Twin ( ) != null ;
rank: 143
score: 99.46287231445312
patch: if ( type != null && type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 143
score: 99.44933500744048
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && type != Type . FUNCTION )
rank: 143
score: 99.39578247070312
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets == null ) {
rank: 144
score: 99.51572053328805
patch: return ( declaration == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; }
rank: 144
score: 99.51066788383152
patch: if ( type != Type . FUNCTION && ! can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 144
score: 99.50341796875
patch: if ( element == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 144
score: 99.47901407877605
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets . length > 0 ) {
rank: 144
score: 99.46989360608552
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) break ;
rank: 144
score: 99.46270197088069
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type != Type . TYPE ) {
rank: 144
score: 99.45719047214673
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets == 0 ) {
rank: 144
score: 99.44719587053571
patch: if ( type . equals ( Type . FUNCTION ) && type . equals ( Type . FUNCTION ) )
rank: 145
score: 99.53898790147569
patch: if ( type != Type . FUNCTION || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 145
score: 99.47857666015625
patch: if ( type != Type . FUNCTION && type CaMeL Name != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 145
score: 99.4698486328125
patch: else if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 145
score: 99.4625244140625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type , type ) ) {
rank: 145
score: 99.447119140625
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION )
rank: 146
score: 99.53800455729167
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 146
score: 99.50306285511364
patch: if ( module == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 146
score: 99.46982935855263
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { {
rank: 146
score: 99.46015625
patch: if ( type != Type . FUNCTION && type != 0 && aliasing CaMeL Gets > 0 ) {
rank: 146
score: 99.45703125
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION ) {
rank: 146
score: 99.447021484375
patch: if ( type . get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 146
score: 99.39485677083333
patch: if ( type == Type . FUNCTION && ( type == Type . FUNCTION ) ) {
rank: 147
score: 99.5379305752841
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || global CaMeL Sets != 0 ) {
rank: 147
score: 99.47765582540761
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets > 0 ) {
rank: 147
score: 99.46980794270833
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) return true ;
rank: 147
score: 99.45987955729167
patch: if ( type != Type . FUNCTION && ! type . != Type . FUNCTION ) {
rank: 147
score: 99.45675659179688
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION || aliasing CaMeL Gets != null ) {
rank: 147
score: 99.44603271484375
patch: if ( ! type != Type . FUNCTION && type . equals ( Type . FUNCTION ) ) {
rank: 148
score: 99.5378085049716
patch: if ( type != Type . FUNCTION && local CaMeL Sets != 0 && local CaMeL Sets != 0 ) {
rank: 148
score: 99.5143330891927
patch: return ( ( parent == null ) || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 148
score: 99.4693539268092
patch: if ( parent != null || parent . get CaMeL Twin ( ) != null ) {
rank: 148
score: 99.4592517671131
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > ) {
rank: 148
score: 99.44571083470395
patch: if ( type == Type . FUNCTION ) { if ( type != Type . FUNCTION ) {
rank: 149
score: 99.53746448863636
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ; }
rank: 149
score: 99.51378716362848
patch: if ( super . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 149
score: 99.50877621299342
patch: if ( type != null || type . get CaMeL Twin ( ) != null ) {
rank: 149
score: 99.47761674360795
patch: if ( type != Type . FUNCTION && type == Type . TYPE && aliasing CaMeL Gets > 0 ) {
rank: 149
score: 99.46923828125
patch: if ( ! ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 149
score: 99.45856323242188
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return 0 ; }
rank: 149
score: 99.45642700195313
patch: if ( type != Type . FUNCTION || ! type . equals ( Type . FUNCTION ) ) {
rank: 149
score: 99.4453125
patch: if ( type != Type . FUNCTION && type . is CaMeL Interface ( ) ) {
rank: 149
score: 99.39386541193181
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > FUNCTION || type != Type . FUNCTION ) {
rank: 150
score: 99.53633449388587
patch: if ( type != Type . FUNCTION && declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 150
score: 99.51361083984375
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , declaration ) ) {
rank: 150
score: 99.50011676290761
patch: if ( parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) {
rank: 150
score: 99.46912841796875
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , null ) ) {
rank: 150
score: 99.4583740234375
patch: if ( type != 0 && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 150
score: 99.45626670435855
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) != null ) {
rank: 150
score: 99.44456845238095
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION && type != Type . FUNCTION )
rank: 150
score: 99.39329944957386
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 && type == Type . FUNCTION ) {
rank: 151
score: 99.49973366477273
patch: if ( key != null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 151
score: 99.46902626439145
patch: if ( parent != null || declaration . get CaMeL Twin ( ) != null ) {
rank: 151
score: 99.45815207741477
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ && aliasing CaMeL Gets > 0 ) {
rank: 151
score: 99.45618785511364
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != null ) {
rank: 151
score: 99.44447236902573
patch: if ( type == Type . NULL && ! aliasing CaMeL Gets > 0 ) {
rank: 151
score: 99.39323425292969
patch: if ( type != Node . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 152
score: 99.53535600142045
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) || ( aliasing CaMeL Gets > 0 ) ) {
rank: 152
score: 99.47575239701705
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets ( ) ) {
rank: 152
score: 99.46778564453125
patch: if ( ! ! type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 152
score: 99.45771928267045
patch: if ( type != Type . FUNCTION && type > Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 152
score: 99.45566813151042
patch: if ( type != null && type != Type . FUNCTION && aliasing CaMeL Gets . is CaMeL Empty ( ) ) {
rank: 152
score: 99.44380018446181
patch: / * if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 153
score: 99.53469016335227
patch: if ( type != Type . FUNCTION && global CaMeL Sets != null || local CaMeL Sets != 0 ) {
rank: 153
score: 99.50696331521739
patch: if ( ( parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) )
rank: 153
score: 99.49889026988636
patch: if ( declaration != null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 153
score: 99.46734008789062
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , declaration ) ) {
rank: 153
score: 99.45712459788604
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > > 0 ) {
rank: 153
score: 99.44170065487133
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets > 1 ) {
rank: 153
score: 99.39254760742188
patch: if ( get CaMeL Type ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 154
score: 99.53467906605114
patch: if ( type == Type . FUNCTION && global CaMeL Sets != 0 && local CaMeL Sets != 0 ) {
rank: 154
score: 99.51085895040761
patch: return ( parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; }
rank: 154
score: 99.50605854235198
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; } return true ;
rank: 154
score: 99.49727006392045
patch: if ( parent != null || type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 154
score: 99.47444661458333
patch: if ( type == Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 154
score: 99.46683175223214
patch: if ( parent == null || ( parent . get CaMeL Twin ( ) != null ) ) {
rank: 154
score: 99.45552201704545
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 1 && aliasing CaMeL Gets != 0 ) {
rank: 154
score: 99.44135284423828
patch: if ( type == Type . FUNCTION && ! aliasing CaMeL Gets > 0 )
rank: 154
score: 99.39220473345588
patch: } if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 155
score: 99.53460138494319
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 || local CaMeL Sets != 1 ) {
rank: 155
score: 99.50540321751645
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; } return false ;
rank: 155
score: 99.49669300426136
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 || local CaMeL Sets != 0 ) {
rank: 155
score: 99.46634347098214
patch: if ( element != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 155
score: 99.45685492621527
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 > 0 ) {
rank: 155
score: 99.455263671875
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Empty ( ) && aliasing CaMeL Gets > 0 ) {
rank: 155
score: 99.4409412202381
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( aliasing CaMeL Gets > 0 ) ) {
rank: 155
score: 99.39114583333334
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 )
rank: 156
score: 99.50529174804687
patch: if ( type != Type . FUNCTION && ! ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 156
score: 99.46600020559211
patch: if ( get CaMeL Twin ( ) != null || local CaMeL Sets != 0 ) {
rank: 156
score: 99.4565762606534
patch: if ( type > Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 156
score: 99.45433959960937
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets . is CaMeL Empty ( ) ) {
rank: 156
score: 99.44091796875
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets > $NUMBER$ ) {
rank: 157
score: 99.5051981608073
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , true ) ) {
rank: 157
score: 99.49665971235795
patch: if ( element != null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 157
score: 99.47366333007812
patch: if ( type . get CaMeL Type CaMeL Name ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 157
score: 99.4658447265625
patch: if ( true || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 158
score: 99.50916637073864
patch: if ( root != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 158
score: 99.4730733235677
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 158
score: 99.45350230823864
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || aliasing CaMeL Gets > 1 ) {
rank: 158
score: 99.38942552649456
patch: if ( ! type . equals ( Type . FUNCTION ) && type . equals ( Type . FUNCTION ) ) {
rank: 159
score: 99.53314499627976
patch: if ( type != Type . FUNCTION && type . get CaMeL Twin ( ) != null ) {
rank: 159
score: 99.50405883789062
patch: if ( type != Type . TYPE && global CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 159
score: 99.49647105823864
patch: if ( declaration . get CaMeL Twin ( ) . get CaMeL Twin ( ) == null ) {
rank: 159
score: 99.43958237591912
patch: if ( type != Type . NONE && ! aliasing CaMeL Gets > 0 ) {
rank: 159
score: 99.38930935329861
patch: if ( ( type == Type . FUNCTION ) && aliasing CaMeL Gets > 0 ) {
rank: 160
score: 99.53297254774306
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || local CaMeL Sets != 0 ) {
rank: 160
score: 99.5033846768466
patch: if ( declaration . get CaMeL Id ( ) != null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 160
score: 99.4964663856908
patch: if ( declaration . get CaMeL Twin ( ) != null || parent != null ) {
rank: 160
score: 99.46459197998047
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets <= 0 ) {
rank: 160
score: 99.454345703125
patch: if ( type != Type . Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 160
score: 99.4526123046875
patch: if ( type != null && type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 160
score: 99.38929332386364
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 161
score: 99.50835626775569
patch: if ( declaration . get CaMeL Type ( ) != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 161
score: 99.50301106770833
patch: if ( type != Type . FUNCTION && local CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 161
score: 99.49605129076087
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 0 ) ) ;
rank: 161
score: 99.4725674715909
patch: if ( type != Type . FUNCTION || type == Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 161
score: 99.45299574908088
patch: if ( ! aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 161
score: 99.43866257440476
patch: if ( type != Type . FUNCTION && type != Type . NULL && aliasing CaMeL Gets > 0 )
rank: 161
score: 99.38866077769886
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets >= 0 ) {
rank: 162
score: 99.53201293945312
patch: if ( type != Type . OTHER || global CaMeL Sets != 0 ) {
rank: 162
score: 99.50294030230978
patch: if ( parent == null || ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) )
rank: 162
score: 99.49602716619319
patch: if ( get CaMeL Class ( ) . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 162
score: 99.4718350497159
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || aliasing CaMeL Gets > $NUMBER$ ) {
rank: 162
score: 99.46271623883929
patch: if ( ! declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ;
rank: 162
score: 99.45280317826705
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets != 0 ) {
rank: 162
score: 99.45213904747597
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > Type . FUNCTION && aliasing CaMeL Gets != Type . FUNCTION ) {
rank: 162
score: 99.43839946546052
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Primitive ( ) ) {
rank: 162
score: 99.38863975123355
patch: if ( type != Type . FUNCTION || ! ( type != Type . FUNCTION ) ) {
rank: 163
score: 99.50710227272727
patch: if ( value == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 163
score: 99.50291951497395
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum && global CaMeL Sets != 0 ) {
rank: 163
score: 99.46222601996527
patch: if ( parent . type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 163
score: 99.45261452414773
patch: if ( ! aliasing CaMeL Gets > 0 ) {
rank: 163
score: 99.45191446940105
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION ) {
rank: 163
score: 99.43832542782738
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 , aliasing CaMeL Gets > 0 )
rank: 164
score: 99.53110573508523
patch: if ( type != Type . FUNCTION && local CaMeL Sets != 0 && aliasing CaMeL Gets > 0 ) {
rank: 164
score: 99.5069912997159
patch: if ( type . is CaMeL Class CaMeL Or CaMeL Enum ( ) && aliasing CaMeL Gets > 0 ) {
rank: 164
score: 99.50271606445312
patch: if ( type != null || is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 164
score: 99.49571644176136
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 1 ) {
rank: 164
score: 99.462109375
patch: if ( false || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 164
score: 99.4524813565341
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > true ) {
rank: 164
score: 99.45131429036458
patch: if ( type != Type . FUNCTION && this . type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 164
score: 99.43831380208333
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && type == Type . FUNCTION )
rank: 165
score: 99.53086159446023
patch: if ( key != null || type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 165
score: 99.50697835286458
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum || aliasing CaMeL Gets > 0 ) {
rank: 165
score: 99.50271267361111
patch: if ( type != Type . FUNCTION && ! ! aliasing CaMeL Gets > 0 ) {
rank: 165
score: 99.46203031994048
patch: if ( parent == null || ( declaration . get CaMeL Twin ( ) != null ) ) {
rank: 165
score: 99.45233709161931
patch: if ( type != Type . FUNCTION && type != Type . NO && aliasing CaMeL Gets > 0 ) {
rank: 165
score: 99.45103515625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets . equals ( type ) ) {
rank: 165
score: 99.43801398026316
patch: if ( type == Type . NULL && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 165
score: 99.387451171875
patch: if ( get CaMeL Type ( ) == Type . FUNCTION ) {
rank: 166
score: 99.50674438476562
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type != Type . OTHER && aliasing CaMeL Gets > 0 ) {
rank: 166
score: 99.49369673295455
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || local CaMeL Sets != null ) {
rank: 166
score: 99.46196056547619
patch: if ( type != null || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 166
score: 99.4509785970052
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets && aliasing CaMeL Gets && aliasing CaMeL Gets > 0 ) {
rank: 166
score: 99.43720935639881
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 0 )
rank: 167
score: 99.50223999023437
patch: if ( type != null || is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 167
score: 99.49364124644886
patch: if ( declaration == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 167
score: 99.47052556818181
patch: if ( type != Type . FUNCTION && type != Type . STRING && aliasing CaMeL Gets > 0 ) {
rank: 167
score: 99.46171875
patch: try { if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 167
score: 99.450927734375
patch: if ( type != Type . TYPE && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 168
score: 99.5298488451087
patch: if ( type != Type . FUNCTION && this . declaration . get CaMeL Twin ( ) != null ) {
rank: 168
score: 99.50616455078125
patch: if ( ! parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) {
rank: 168
score: 99.50192742598684
patch: if ( type != null ) { if ( is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 168
score: 99.49333052201705
patch: if ( parent == null && type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 168
score: 99.46165829613095
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( declaration . get CaMeL Twin ( ) ) )
rank: 168
score: 99.44964890252976
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) == Type . FUNCTION ) {
rank: 168
score: 99.38618607954545
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > FUNCTION || type != Type . FUNCTION ) {
rank: 169
score: 99.52971055772569
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && global CaMeL Sets != 0 ) {
rank: 169
score: 99.5016857328869
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 || local CaMeL Sets != 0 )
rank: 169
score: 99.4928668478261
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) ) {
rank: 169
score: 99.46991521661931
patch: if ( type != Type . NULL && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 169
score: 99.46159282483552
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) {
rank: 169
score: 99.44952862079327
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets . aliasing CaMeL Gets > 0 ) {
rank: 169
score: 99.44950727982955
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 ) {
rank: 169
score: 99.385986328125
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 || aliasing CaMeL Gets != 0 ) {
rank: 170
score: 99.52836277173913
patch: if ( declaration . get CaMeL Twin ( ) == null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 170
score: 99.5050557454427
patch: return declaration . get CaMeL Twin ( ) . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ; }
rank: 170
score: 99.46131727430556
patch: try { if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 170
score: 99.44945179332386
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > $STRING$ ) {
rank: 170
score: 99.43647693452381
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets < 0 )
rank: 170
score: 99.3858975497159
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 171
score: 99.52814331054688
patch: if ( ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 171
score: 99.50492931547619
patch: if ( type != Type . OTHER && declaration . get CaMeL Twin ( ) != null ) {
rank: 171
score: 99.46825062144886
patch: if ( type != Type . FUNCTION || type == Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 171
score: 99.46125139508929
patch: if ( get CaMeL Twin ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 171
score: 99.4494295987216
patch: if ( type != Type . FUNCTION || type > Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 171
score: 99.4482754794034
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != $NUMBER$ ) {
rank: 172
score: 99.49144398082386
patch: if ( node == null || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 172
score: 99.46820623224431
patch: if ( type instanceof Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 172
score: 99.46108526932566
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( type ) ) {
rank: 172
score: 99.44805353338069
patch: if ( type != Type . FUNCTION && ! type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 172
score: 99.43584914434524
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 )
rank: 173
score: 99.52647816051136
patch: if ( type != Type . OTHER || global CaMeL Sets != 0 && local CaMeL Sets != 0 ) {
rank: 173
score: 99.5045855978261
patch: if ( type != Type . FUNCTION && global CaMeL Sets . get CaMeL Twin ( ) != null ) {
rank: 173
score: 99.50096546519886
patch: if ( type != Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum ) { return false ;
rank: 173
score: 99.49144222861842
patch: if ( declaration . get CaMeL Twin ( ) != null && parent == null ) {
rank: 173
score: 99.46814982096355
patch: if ( ! type . is CaMeL Assignable CaMeL From ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 173
score: 99.4489810341283
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) == 0 ) {
rank: 173
score: 99.44802024147727
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > null && aliasing CaMeL Gets != null ) {
rank: 173
score: 99.43524460565476
patch: if ( type != Type . FUNCTION && type . char CaMeL At ( 0 ) != $STRING$ ) {
rank: 173
score: 99.38478781960227
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION || type != Type . FUNCTION ) {
rank: 174
score: 99.52635657269022
patch: if ( type != Type . FUNCTION && type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 174
score: 99.50074351917614
patch: if ( type == Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 174
score: 99.49042358398438
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || parent == null ) {
rank: 174
score: 99.46058565027573
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 174
score: 99.4337387084961
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( ) ) {
rank: 175
score: 99.52602317116477
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) || ( local CaMeL Sets != 0 ) ) {
rank: 175
score: 99.50439453125
patch: return ( parent . null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; }
rank: 175
score: 99.50074259440105
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum || global CaMeL Sets != 0 ) {
rank: 175
score: 99.4902010830966
patch: if ( parent != null && declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 175
score: 99.46751819957386
patch: if ( type == Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 175
score: 99.46023720189145
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) continue ;
rank: 175
score: 99.44794256036931
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > false ) {
rank: 175
score: 99.43335774739583
patch: if ( type != Type . NULL && aliasing CaMeL Gets > 0 )
rank: 175
score: 99.38438415527344
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets != null ) {
rank: 176
score: 99.48987397693452
patch: if ( declaration . get CaMeL Twin ( ) == null || local CaMeL Sets != 0 ) {
rank: 176
score: 99.46747381036931
patch: if ( node . get CaMeL Type ( ) == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 176
score: 99.46023559570312
patch: if ( ! this . parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 176
score: 99.4487637606534
patch: if ( type != Type . FUNCTION && type != Type . NAME && aliasing CaMeL Gets > 0 ) {
rank: 176
score: 99.43307834201389
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { ) {
rank: 177
score: 99.4898681640625
patch: if ( ( parent == null ) && aliasing CaMeL Gets > 0 ) {
rank: 177
score: 99.45927501860119
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ;
rank: 177
score: 99.44869995117188
patch: if ( type != null || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 177
score: 99.4474628155048
patch: if ( type != Type . FUNCTION && ! type . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 177
score: 99.43253173828126
patch: if ( ( aliasing CaMeL Gets > 0 ) && ( aliasing CaMeL Gets > 0 ) ) {
rank: 177
score: 99.38341064453125
patch: if ( ( type != Type . FUNCTION ) || ( aliasing CaMeL Gets > 0 ) ) {
rank: 178
score: 99.50343017578125
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( ) && aliasing CaMeL Gets > 0 ) {
rank: 178
score: 99.4481534090909
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets == 0 ) {
rank: 178
score: 99.44736328125
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && ! type . is CaMeL Empty ( ) ) {
rank: 178
score: 99.43144298735119
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets < 0 )
rank: 178
score: 99.38328968394886
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 || type != Type . FUNCTION ) {
rank: 179
score: 99.52516867897727
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 1 && aliasing CaMeL Gets > 0 ) {
rank: 179
score: 99.50330699573864
patch: if ( parent != 1 || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 179
score: 99.5
patch: if ( type != Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 179
score: 99.4894686612216
patch: synchronized ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 179
score: 99.46700032552083
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 179
score: 99.45796508789063
patch: if ( get CaMeL Twin ( ) != null || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 179
score: 99.44746704101563
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && type != 0 ) {
rank: 179
score: 99.4312255859375
patch: if ( type == Type . FUNCTION ) { if ( ! aliasing CaMeL Gets > 0 ) {
rank: 179
score: 99.38327365451389
patch: if ( type == Type . FUNCTION && ( type != Type . FUNCTION ) ) {
rank: 180
score: 99.49983433314732
patch: if ( type != null || aliasing CaMeL Gets > 0 ) {
rank: 180
score: 99.48930027173913
patch: if ( parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 0 ) ) {
rank: 180
score: 99.45782180059524
patch: if ( declaration . get CaMeL Twin ( ) != null || local CaMeL Sets != null ) {
rank: 180
score: 99.447265625
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && type == Type . FUNCTION ) {
rank: 180
score: 99.4305484169408
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type != Type {
rank: 181
score: 99.52440795898437
patch: if ( type != Type . FUNCTION && this . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 181
score: 99.50208629261364
patch: if ( parent . get CaMeL Type ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 181
score: 99.49971516927083
patch: if ( declaration . get CaMeL Twin ( ) != null ) { return true ;
rank: 181
score: 99.4570545014881
patch: if ( ! type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ;
rank: 181
score: 99.44740988991477
patch: if ( type != Type . NO && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 181
score: 99.44682173295455
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 1 ) {
rank: 182
score: 99.52398126775569
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 || global CaMeL Sets != 0 ) {
rank: 182
score: 99.50154252485795
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && global CaMeL Sets > 0 ) {
rank: 182
score: 99.45677490234375
patch: if ( parent == null || can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 182
score: 99.4472989169034
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && type != Type . FUNCTION ) {
rank: 182
score: 99.44642223011364
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets <= 0 ) {
rank: 182
score: 99.42947823660714
patch: if ( type != Type . NULL && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 )
rank: 182
score: 99.3821688565341
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 && aliasing CaMeL Gets == 0 ) {
rank: 183
score: 99.52378151633523
patch: if ( type != Type . OTHER && global CaMeL Sets != 0 || aliasing CaMeL Gets > 0 ) {
rank: 183
score: 99.49874441964286
patch: if ( type != Type . NOT && declaration . get CaMeL Twin ( ) != null ) {
rank: 183
score: 99.48805930397727
patch: if ( declaration != null || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 183
score: 99.4290771484375
patch: if ( type != Type . NULL && type != Type . FUNCTION ) {
rank: 183
score: 99.3817471590909
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets < 0 ) {
rank: 184
score: 99.46491033380681
patch: if ( type == Type . FUNCTION || type == Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 184
score: 99.44613647460938
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets > aliasing CaMeL Gets ) {
rank: 184
score: 99.42904663085938
patch: if ( type != Type . NULL && aliasing CaMeL Gets > 1 ) {
rank: 185
score: 99.52274946732955
patch: if ( type != Type . FUNCTION && parent == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 185
score: 99.49702962239583
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 185
score: 99.4874957540761
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return )
rank: 185
score: 99.45604858398437
patch: if ( parent != null || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 185
score: 99.44626686789773
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > $STRING$ && aliasing CaMeL Gets > 0 ) {
rank: 185
score: 99.42879231770833
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 && aliasing CaMeL Gets > 0 )
rank: 185
score: 99.38062633167614
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets >= 0 ) {
rank: 186
score: 99.46426391601562
patch: if ( type . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) && aliasing CaMeL Gets > 0 )
rank: 186
score: 99.45579223632812
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) {
rank: 187
score: 99.52225167410714
patch: if ( type != Type . FUNCTION && parent == null ) {
rank: 187
score: 99.4966457201087
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 187
score: 99.46373494466145
patch: if ( type . equals ( Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) )
rank: 187
score: 99.45543077256944
patch: if ( aliasing CaMeL Gets > 0 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 187
score: 99.44571940104167
patch: if ( aliasing CaMeL Gets ( aliasing CaMeL Gets ( aliasing CaMeL Gets ( type ) ) ) ) {
rank: 187
score: 99.42855980282738
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && type == Type . ) {
rank: 188
score: 99.5221280184659
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 1 || global CaMeL Sets != 0 ) {
rank: 188
score: 99.49610436480978
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 188
score: 99.486083984375
patch: if ( node == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 188
score: 99.4635721842448
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 188
score: 99.45530790441177
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > - 0 ) {
rank: 188
score: 99.44422496448864
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets != null ) {
rank: 188
score: 99.42836216517857
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION && type == Type . FUNCTION )
rank: 188
score: 99.37992720170455
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 || type != Type . FUNCTION ) {
rank: 189
score: 99.51994185014205
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && ( is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 189
score: 99.50080672554348
patch: if ( ( declaration . get CaMeL Twin ( ) != null ) && aliasing CaMeL Gets > 0 ) {
rank: 189
score: 99.49577530570652
patch: if ( aliasing CaMeL Gets > 0 || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 189
score: 99.4634021577381
patch: if ( aliasing CaMeL Gets > 0 ) { if ( is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 189
score: 99.4549624794408
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) ) {
rank: 189
score: 99.4448575106534
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets != 0 ) {
rank: 189
score: 99.4440205891927
patch: if ( this . type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 189
score: 99.42785034179687
patch: if ( type != Type . NULL && aliasing CaMeL Gets > 0 ) { return true ; }
rank: 189
score: 99.3798828125
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > FUNCTION || type != Type . FUNCTION ) {
rank: 190
score: 99.48576216264205
patch: if ( parent != 0 || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 190
score: 99.463134765625
patch: if ( type != Type . FUNCTION && type . get CaMeL Type ( ) == Type . FUNCTION ) {
rank: 190
score: 99.45474243164062
patch: if ( parent == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 190
score: 99.44481312144886
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( ) && aliasing CaMeL Gets ( ) ) {
rank: 190
score: 99.44400634765626
patch: if ( type != null && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 190
score: 99.42772759331598
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; } else {
rank: 190
score: 99.37957153320312
patch: if ( type != Type . FUNCTION || get CaMeL Type ( ) == Type . FUNCTION ) {
rank: 191
score: 99.51868785511364
patch: if ( type == Type . FUNCTION || global CaMeL Sets != 0 || local CaMeL Sets != 0 ) {
rank: 191
score: 99.4855069247159
patch: if ( type == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 191
score: 99.44475708007812
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return 1 ; }
rank: 191
score: 99.44398082386364
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > null && aliasing CaMeL Gets > 0 ) {
rank: 191
score: 99.42769949776786
patch: if ( type != Type . FUNCTION && type instanceof Type ) {
rank: 192
score: 99.51677911931819
patch: if ( type != Type . OTHER && global CaMeL Sets != 1 || local CaMeL Sets != 0 ) {
rank: 192
score: 99.49520713404605
patch: if ( type != null && declaration . get CaMeL Twin ( ) != null ) {
rank: 192
score: 99.4439364346591
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets != 1 ) {
rank: 192
score: 99.42723891314338
patch: if ( type != Type . FUNCTION && ! ( type instanceof Type ) ) {
rank: 192
score: 99.3790973165761
patch: if ( type . equals ( Type . FUNCTION ) && ! type . equals ( Type . FUNCTION ) ) {
rank: 193
score: 99.49491373697917
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , this ) ) {
rank: 193
score: 99.48397972470238
patch: if ( ! parent . parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 193
score: 99.46161179315476
patch: if ( type . is CaMeL Assignable CaMeL From ( type . get CaMeL Type ( ) ) ) {
rank: 193
score: 99.45328776041667
patch: if ( value != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 193
score: 99.44463147615132
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return 0 ;
rank: 193
score: 99.44335174560547
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > type ) {
rank: 193
score: 99.42622644761029
patch: if ( type == Type . FUNCTION && ! aliasing CaMeL Gets > 1 ) {
rank: 193
score: 99.3790218955592
patch: if ( ! ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) ) {
rank: 194
score: 99.5154339334239
patch: if ( type != Type . OTHER && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 194
score: 99.49259086277173
patch: if ( ( parent != null ) || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 194
score: 99.46126708984374
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets . size ( ) > 0 ) {
rank: 194
score: 99.45281018708882
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , ) ) {
rank: 194
score: 99.44457397460937
patch: if ( aliasing CaMeL Gets > Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION ) {
rank: 194
score: 99.4256656044408
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Defined ( ) ) {
rank: 194
score: 99.37870649857955
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 195
score: 99.49906412760417
patch: if ( get CaMeL Twin ( ) != null || declaration . get CaMeL Twin ( ) != null ) {
rank: 195
score: 99.483154296875
patch: if ( key == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 195
score: 99.44416947798295
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! type . > 0 ) {
rank: 195
score: 99.442724609375
patch: if ( type != Type . FUNCTION && ! ! type . is CaMeL Empty ( ) ) {
rank: 195
score: 99.42564392089844
patch: if ( type != Type . UNKNOWN && aliasing CaMeL Gets > 0 ) {
rank: 195
score: 99.37857719089673
patch: if ( type != Type . FUNCTION && get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 196
score: 99.51495916193181
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && local CaMeL Sets != 0 ) {
rank: 196
score: 99.49805797230114
patch: return ( declaration == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 196
score: 99.49231974283855
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { else {
rank: 196
score: 99.46094859730114
patch: if ( type == Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 196
score: 99.45250854492187
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) && aliasing CaMeL Gets > 0 ) {
rank: 196
score: 99.44384765625
patch: if ( type != Type . FUNCTION && type > Type . FUNCTION && type != Type . FUNCTION ) {
rank: 196
score: 99.4426981608073
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets & aliasing CaMeL Gets ) {
rank: 196
score: 99.42528618706598
patch: if ( type . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 196
score: 99.37842959449405
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 )
rank: 197
score: 99.46084755345395
patch: if ( type . equals ( Type . FUNCTION ) || aliasing CaMeL Gets > 0 ) {
rank: 197
score: 99.45238647460937
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return ) ;
rank: 197
score: 99.37834028764205
patch: if ( type != Type . FUNCTION || type == Type . FUNCTION && type != Type . FUNCTION ) {
rank: 198
score: 99.51433771306819
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && global CaMeL Sets != 0 ) {
rank: 198
score: 99.48170166015625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || parent != null ) {
rank: 198
score: 99.46075994318181
patch: if ( type == Type . FUNCTION || type == Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 198
score: 99.45234375
patch: if ( parent . parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 198
score: 99.44171697443181
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets != FUNCTION ) {
rank: 198
score: 99.42421361019737
patch: if ( type . equals ( Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) ) {
rank: 199
score: 99.49181598165761
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 199
score: 99.45225524902344
patch: if ( aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 0 ) {
rank: 199
score: 99.4422607421875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 , aliasing CaMeL Gets > 0 ) {
rank: 199
score: 99.42410888671876
patch: if ( type != Type . NONE && ! type . equals ( Type . FUNCTION ) ) {
rank: 199
score: 99.37735145970395
patch: if ( ( type != Type . FUNCTION ) && ! aliasing CaMeL Gets > 0 ) {
rank: 200
score: 99.4965587797619
patch: return ! parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ;
rank: 200
score: 99.49178059895833
patch: if ( type != Type . FUNCTION && type . is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 200
score: 99.45997721354166
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ )
rank: 200
score: 99.44171142578125
patch: if ( type != Type . NO && aliasing CaMeL Gets > 0 ) {
rank: 200
score: 99.42387309827302
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return false ;
rank: 200
score: 99.37653459821429
patch: if ( get CaMeL Name ( ) . equals ( type . get CaMeL Name ( ) ) ) {
rank: 201
score: 99.51289506392045
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 201
score: 99.49167887369792
patch: if ( type != Type . TYPE && type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 201
score: 99.48029242621527
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && aliasing CaMeL Gets > 1 ) {
rank: 201
score: 99.45961692116477
patch: if ( type != Type . EMPTY && type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 201
score: 99.45209350585938
patch: if ( parent . declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 201
score: 99.44143337673611
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 , true ) {
rank: 201
score: 99.4400301846591
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ && aliasing CaMeL Gets != 0 ) {
rank: 201
score: 99.37626139322917
patch: if ( ( type != Type . FUNCTION ) && type != Type . FUNCTION ) {
rank: 202
score: 99.51267408288044
patch: } return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 202
score: 99.49547322591145
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 202
score: 99.48000266335227
patch: if ( name != null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 202
score: 99.45167178199405
patch: if ( ! this . type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 202
score: 99.44136127672698
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return 1 ;
rank: 202
score: 99.42359619140625
patch: if ( type == Type . FUNCTION && ! global CaMeL Sets . contains ( type ) ) {
rank: 202
score: 99.37590874565973
patch: if ( ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 ) ) {
rank: 203
score: 99.51256793478261
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { }
rank: 203
score: 99.49545686141305
patch: if ( ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 203
score: 99.47981400923295
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && local CaMeL Sets != null ) {
rank: 203
score: 99.45157470703126
patch: if ( type . get CaMeL Twin ( ) != null || aliasing CaMeL Gets > 0 )
rank: 203
score: 99.4397442157452
patch: if ( type != Type . FUNCTION && ! type . equals ( Type . FUNCTION ) && aliasing CaMeL Gets > 0 ) {
rank: 203
score: 99.37544519761029
patch: if ( type != Type . FUNCTION || ! aliasing CaMeL Gets > 0 ) {
rank: 204
score: 99.51235129616477
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || global CaMeL Sets != 0 ) {
rank: 204
score: 99.45150902157738
patch: if ( ! this . declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 204
score: 99.44108072916667
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type != Type . FUNCTION ) ) {
rank: 204
score: 99.43961958451705
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets == 0 && aliasing CaMeL Gets != 0 ) {
rank: 204
score: 99.42277018229167
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION && type == Type . ) {
rank: 205
score: 99.51206276633523
patch: if ( ! declaration . get CaMeL Twin ( ) . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 205
score: 99.4948093580163
patch: if ( ! declaration . get CaMeL Twin ( ) . get CaMeL Twin ( ) != null ) {
rank: 205
score: 99.48942057291667
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 || local CaMeL Sets != 0 )
rank: 205
score: 99.44106223366477
patch: if ( type != Type . FUNCTION && type != Node . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 205
score: 99.43934461805556
patch: if ( type != null && ! type . equals ( Type . FUNCTION ) ) {
rank: 205
score: 99.42258172286184
patch: if ( type != Type . FUNCTION && ! type . is CaMeL External ( ) ) {
rank: 206
score: 99.49458821614583
patch: if ( type == Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum && aliasing CaMeL Gets > 0 ) {
rank: 206
score: 99.48938569568452
patch: if ( local CaMeL Sets != 0 || declaration . get CaMeL Twin ( ) != null ) {
rank: 206
score: 99.45113699776786
patch: if ( declaration . get CaMeL Twin ( ) . get CaMeL Twin ( ) != null )
rank: 206
score: 99.44049627130681
patch: if ( type != Type . null && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 206
score: 99.43929036458333
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets && aliasing CaMeL Gets ) {
rank: 206
score: 99.4223568564967
patch: if ( type != Type . NONE && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 207
score: 99.51106400923295
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 1 && local CaMeL Sets != 0 ) {
rank: 207
score: 99.37481134588069
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 && aliasing CaMeL Gets != 0 ) {
rank: 208
score: 99.510986328125
patch: if ( type == Type . FUNCTION && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 208
score: 99.45742399796195
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && ! aliasing CaMeL Gets > 0 ) {
rank: 208
score: 99.45033482142857
patch: if ( type . get CaMeL Twin ( ) != null && aliasing CaMeL Gets > 0 ) {
rank: 208
score: 99.4392977627841
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && type != Type . NULL ) {
rank: 208
score: 99.438828125
patch: if ( type != Type . FUNCTION && type . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 208
score: 99.42219094669117
patch: if ( type == Type . FUNCTION && ! aliasing CaMeL Gets > $NUMBER$ ) {
rank: 208
score: 99.3745181435033
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Local ( ) ) {
rank: 209
score: 99.49432927911931
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) }
rank: 209
score: 99.48875427246094
patch: if ( type != Type . TYPE && global CaMeL Sets != 0 ) {
rank: 209
score: 99.47861328125
patch: if ( parent == null || parent . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 209
score: 99.45722961425781
patch: if ( type == Type . TYPE && aliasing CaMeL Gets > 0 ) {
rank: 209
score: 99.45032416449652
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , ) )
rank: 209
score: 99.43919788707386
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { aliasing CaMeL Gets = 0 ;
rank: 209
score: 99.37427920386905
patch: if ( type != Type . FUNCTION && $STRING$ . equals ( aliasing CaMeL Gets > 0 ) ) {
rank: 210
score: 99.51064453125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && parent == null ) {
rank: 210
score: 99.48858642578125
patch: if ( declaration . get CaMeL Type ( ) != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 210
score: 99.45717551491477
patch: if ( type != Type . STRING && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 210
score: 99.45026245117188
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( - 1 ) ) {
rank: 210
score: 99.43916459517045
patch: if ( type != Type . FUNCTION && type != Type . TYPE || aliasing CaMeL Gets > 0 ) {
rank: 210
score: 99.43875122070312
patch: if ( type != Type . FUNCTION || this . type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 211
score: 99.51048694957386
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) && ( aliasing CaMeL Gets > 0 ) ) {
rank: 211
score: 99.49371892755681
patch: if ( type . is CaMeL Class CaMeL Or CaMeL Enum ( ) || aliasing CaMeL Gets > 0 ) {
rank: 211
score: 99.48809259588069
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) { if ( aliasing CaMeL Gets > 0 ) {
rank: 211
score: 99.4782077955163
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( length ) ) {
rank: 211
score: 99.43825276692708
patch: if ( type != Type . FUNCTION && this . type != Type . FUNCTION ) {
rank: 211
score: 99.37339089133523
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 || type != Type . FUNCTION ) {
rank: 212
score: 99.51038707386364
patch: if ( type != Type . FUNCTION && global CaMeL Sets == 0 || local CaMeL Sets != 0 ) {
rank: 212
score: 99.45654975043402
patch: if ( type instanceof Type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 212
score: 99.4502185639881
patch: if ( name != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 212
score: 99.43866644965277
patch: if ( type != Type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 212
score: 99.4382091703869
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . contains CaMeL Key ( type ) ) {
rank: 213
score: 99.49345259232955
patch: if ( type != Type . FUNCTION && declaration . get CaMeL Type ( ) != Type . FUNCTION ) {
rank: 213
score: 99.48677394701087
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return is CaMeL Class CaMeL Or CaMeL Enum ) ; }
rank: 213
score: 99.47581845238095
patch: return parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ; }
rank: 213
score: 99.44989977384868
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) {
rank: 213
score: 99.43848334418402
patch: if ( aliasing CaMeL Gets ( type ) && aliasing CaMeL Gets ( type ) ) {
rank: 213
score: 99.43818591889881
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets > ) {
rank: 213
score: 99.42136744449013
patch: if ( type . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 213
score: 99.37198486328126
patch: if ( ( type == Type . FUNCTION ) || ( aliasing CaMeL Gets > 0 ) ) {
rank: 214
score: 99.48641304347827
patch: if ( ! ! declaration . get CaMeL Twin ( ) . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 214
score: 99.4757770040761
patch: if ( type == Type . FUNCTION && ( declaration . get CaMeL Twin ( ) != null ) ) {
rank: 214
score: 99.44896589006696
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) return false ;
rank: 214
score: 99.43817816840277
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 , false ) {
rank: 214
score: 99.42109607514881
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > 1 )
rank: 214
score: 99.37179404810855
patch: if ( type == Type . FUNCTION && ! ( aliasing CaMeL Gets > 0 ) ) {
rank: 215
score: 99.50933283025569
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 || local CaMeL Sets != null ) {
rank: 215
score: 99.49338785807292
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type != Type . FUNCTION && global CaMeL Sets > 0 ) {
rank: 215
score: 99.47511888586956
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( null ) ) {
rank: 215
score: 99.44878829152961
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) break ;
rank: 215
score: 99.43765625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! type . is CaMeL Empty ( ) ) {
rank: 215
score: 99.42051478794643
patch: if ( type != Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 215
score: 99.3717928799716
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 216
score: 99.47491776315789
patch: if ( declaration . get CaMeL Twin ( ) != null && parent != null ) {
rank: 216
score: 99.45503373579545
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets ( type ) )
rank: 216
score: 99.44858127170139
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) )
rank: 216
score: 99.43751162574405
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . is CaMeL Instance ( type ) ) {
rank: 216
score: 99.42033081054687
patch: if ( type != Type . FUNCTION && ! type . starts CaMeL With ( $STRING$ ) ) {
rank: 217
score: 99.50892223011364
patch: if ( type != Type . OTHER && global CaMeL Sets != 0 && aliasing CaMeL Gets > 0 ) {
rank: 217
score: 99.48539402173913
patch: if ( type != Type . FUNCTION && can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) ) {
rank: 217
score: 99.44788178943452
patch: if ( this != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 217
score: 99.43721277573529
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets ( type ) ) {
rank: 217
score: 99.43721147017045
patch: if ( aliasing CaMeL Gets > 0 && type != Type . FUNCTION && aliasing CaMeL Gets == 0 ) {
rank: 217
score: 99.42030436197916
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 1 )
rank: 218
score: 99.50848679315476
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ;
rank: 218
score: 99.45494495738636
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION || type == Type . FUNCTION ) {
rank: 218
score: 99.44786879595588
patch: if ( declaration . get CaMeL Twin ( ) != null ) return false ;
rank: 218
score: 99.437109375
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > ) {
rank: 218
score: 99.43690708705357
patch: if ( ! aliasing CaMeL Gets > Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION ) {
rank: 218
score: 99.420166015625
patch: if ( type == Type . FUNCTION && ! type . is CaMeL None ( ) ) {
rank: 219
score: 99.50737072172619
patch: if ( declaration . get CaMeL Twin ( ) != null && global CaMeL Sets != 0 ) {
rank: 219
score: 99.49251302083333
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) ; }
rank: 219
score: 99.48505193536931
patch: if ( type != Type . FUNCTION || global CaMeL Sets . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 219
score: 99.44772178248355
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { {
rank: 219
score: 99.41988699776786
patch: if ( type != Type . FUNCTION && type != Type . NONE && aliasing CaMeL Gets > 0 )
rank: 220
score: 99.47366465692934
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , ) ) {
rank: 220
score: 99.45395729758523
patch: if ( type != Type . TYPE && type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 220
score: 99.43645685369319
patch: if ( ! type . is CaMeL Empty ( ) && ! type . is CaMeL Empty ( ) ) {
rank: 220
score: 99.41981724330357
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || type != Type . ) {
rank: 220
score: 99.36923615828805
patch: if ( ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) && aliasing CaMeL Gets == 0 )
rank: 221
score: 99.48406982421875
patch: if ( can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ; }
rank: 221
score: 99.4733355978261
patch: if ( parent == null || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) {
rank: 221
score: 99.447509765625
patch: if ( aliasing CaMeL Gets > 0 || parent . get CaMeL Twin ( ) != null ) {
rank: 221
score: 99.41969807942708
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets > 0 ) { {
rank: 222
score: 99.49159749348958
patch: return ( parent == Type . FUNCTION && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 222
score: 99.48400348165761
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum && aliasing CaMeL Gets > 0 )
rank: 222
score: 99.47293223505434
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 1 ) ) {
rank: 222
score: 99.45322265625
patch: if ( type instanceof Type && type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 222
score: 99.44739350818452
patch: if ( type == Type . FUNCTION && parent . get CaMeL Twin ( ) != null ) {
rank: 222
score: 99.43634588068181
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets > FUNCTION ) {
rank: 222
score: 99.43631417410714
patch: if ( ! type . is CaMeL Empty ( ) && type . is CaMeL Empty ( ) ) {
rank: 222
score: 99.4196544828869
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ )
rank: 222
score: 99.36850807883523
patch: if ( type != Type . FUNCTION || type == Type . FUNCTION || type != Type . FUNCTION ) {
rank: 223
score: 99.49132283528645
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; * /
rank: 223
score: 99.44735557154605
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 0 ) ) {
rank: 223
score: 99.43631417410714
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) > Type . FUNCTION ) {
rank: 223
score: 99.41960144042969
patch: if ( ! type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 223
score: 99.36789772727273
patch: if ( type == Type . FUNCTION || type != Type . FUNCTION && type == Type . FUNCTION ) {
rank: 224
score: 99.49090021306819
patch: if ( declaration . get CaMeL Type ( ) != Type . OTHER && aliasing CaMeL Gets > 0 ) {
rank: 224
score: 99.4524258700284
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) { if ( type != Type . FUNCTION ) {
rank: 224
score: 99.4471499794408
patch: if ( ! ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 224
score: 99.43556722005208
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ? aliasing CaMeL Gets : aliasing CaMeL Gets ) {
rank: 224
score: 99.41920107886905
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION && type != Type . ) {
rank: 224
score: 99.36644398082386
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > FUNCTION || type != Type . FUNCTION ) {
rank: 225
score: 99.48302641369048
patch: if ( global CaMeL Sets != 1 || declaration . get CaMeL Twin ( ) != null ) {
rank: 225
score: 99.45219116210937
patch: if ( type . equals ( Type . FUNCTION && aliasing CaMeL Gets ( 0 ) ) ) {
rank: 225
score: 99.44698333740234
patch: if ( type != Type . FUNCTION , aliasing CaMeL Gets > 0 ) {
rank: 225
score: 99.43593528053977
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets == 0 ) {
rank: 225
score: 99.4351806640625
patch: if ( type == Type . FUNCTION && this . type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 225
score: 99.41899278428819
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; } else {
rank: 225
score: 99.3661221590909
patch: if ( type != Node . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 226
score: 99.48265540081522
patch: if ( ! type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ; }
rank: 226
score: 99.45174507472827
patch: if ( type . equals CaMeL Ignore CaMeL Case ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 226
score: 99.43589089133523
patch: if ( type != Node . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 226
score: 99.43484157986111
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets ( type ) ) {
rank: 226
score: 99.41834077380952
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets >= 0 )
rank: 227
score: 99.47202845982143
patch: if ( ( parent == null ) && parent . get CaMeL Twin ( ) != null ) {
rank: 227
score: 99.45147026909723
patch: if ( type . type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 227
score: 99.44668579101562
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) || aliasing CaMeL Gets > 0 ) {
rank: 227
score: 99.43546919389205
patch: if ( parent != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 227
score: 99.43466796875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets . contains ( type ) ) {
rank: 227
score: 99.41832139756944
patch: if ( type != Type . FUNCTION && type . length ( ) > 0 ) {
rank: 228
score: 99.48988342285156
patch: if ( type != Type . FUNCTION && global CaMeL Sets != null ) {
rank: 228
score: 99.48109019886364
patch: if ( type != Type . TYPE && is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 228
score: 99.4710693359375
patch: if ( ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 228
score: 99.45118248980978
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets ( 0 ) ) {
rank: 228
score: 99.4465576171875
patch: try { if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 228
score: 99.43462890625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != null && aliasing CaMeL Gets . equals ( type ) ) {
rank: 228
score: 99.41816638764881
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { { return true ; }
rank: 228
score: 99.36546325683594
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets != null ) {
rank: 229
score: 99.50376198508523
patch: if ( type != Type . OTHER && type != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 229
score: 99.4807765794837
patch: if ( type != Type . TYPE && ! global CaMeL Sets . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 229
score: 99.47105341372283
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && declaration . get CaMeL Twin ( ) != 1 ) {
rank: 229
score: 99.44650268554688
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) ) {
rank: 229
score: 99.4346211751302
patch: if ( type != Type . FUNCTION && this . aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 229
score: 99.41796875
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION || aliasing CaMeL Gets > 0 )
rank: 229
score: 99.3652676669034
patch: if ( type == Type . FUNCTION || type == Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 230
score: 99.48985072544643
patch: if ( declaration . get CaMeL Twin ( ) != null || type != Type . FUNCTION ) {
rank: 230
score: 99.48061735733695
patch: if ( ! declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ; }
rank: 230
score: 99.47048021399456
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( parent ) ) {
rank: 230
score: 99.45100541548295
patch: if ( type != Type . FUNCTION && type != Type . DEFAULT && aliasing CaMeL Gets > 0 ) {
rank: 230
score: 99.44589233398438
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , false ) ) {
rank: 230
score: 99.434619140625
patch: if ( type != FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 230
score: 99.43455921519886
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets <= 0 ) {
rank: 230
score: 99.41789899553571
patch: if ( type != Type . FUNCTION && type . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 231
score: 99.50245250355114
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return true ; }
rank: 231
score: 99.489501953125
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 231
score: 99.48057047526042
patch: if ( type != Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum )
rank: 231
score: 99.470458984375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || local CaMeL Sets != 1 ) {
rank: 231
score: 99.44586791992188
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , parent ) ) {
rank: 231
score: 99.43453543526786
patch: if ( type != Type . FUNCTION && > Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 231
score: 99.41786595394737
patch: if ( type != Type . NONE && type . equals ( Type . FUNCTION ) ) {
rank: 231
score: 99.36520724826389
patch: if ( ( type != Type . FUNCTION ) && type == Type . FUNCTION ) {
rank: 232
score: 99.48045765269886
patch: if ( type != Type . FUNCTION && type . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 232
score: 99.45052490234374
patch: if ( type . type ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 232
score: 99.43373325892857
patch: if ( ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) && > 0 ) {
rank: 232
score: 99.41712007068452
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets >= 0 )
rank: 232
score: 99.3648681640625
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION || type != Type . FUNCTION ) {
rank: 233
score: 99.48902428668478
patch: if ( declaration . get CaMeL Twin ( ) != null || ( aliasing CaMeL Gets > 0 ) ) {
rank: 233
score: 99.4803695678711
patch: if ( type != Type . FUNCTION || global CaMeL Sets == 0 ) {
rank: 233
score: 99.45050603693181
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 233
score: 99.41680617559524
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 )
rank: 234
score: 99.50180451766305
patch: if ( type != Type . FUNCTION || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 234
score: 99.47971509850544
patch: if ( ( parent != null ) && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 234
score: 99.46969443873355
patch: if ( ! node . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 234
score: 99.43377364309211
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return false {
rank: 234
score: 99.43302778764205
patch: if ( type != Type . NOT && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 234
score: 99.41607375372024
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && type != Type . ) {
rank: 234
score: 99.36402587890625
patch: if ( type != Type . FUNCTION || get CaMeL Type ( ) != Type . FUNCTION ) {
rank: 235
score: 99.44979248046874
patch: if ( type . type ( ) == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 235
score: 99.44533081054688
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) {
rank: 235
score: 99.41596069335938
patch: if ( type == Type . NULL && aliasing CaMeL Gets > 0 ) { return true ; }
rank: 236
score: 99.48875843394886
patch: if ( input == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 236
score: 99.44528037623355
patch: else if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 236
score: 99.41548084077381
patch: if ( type == Type . FUNCTION || type == Type . FUNCTION || type == Type . FUNCTION )
rank: 237
score: 99.47797594572368
patch: if ( ! declaration . get CaMeL Twin ( ) != null ) { return false ;
rank: 237
score: 99.44929643110795
patch: if ( type != Type . NO && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 237
score: 99.44474283854167
patch: if ( parent instanceof null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 237
score: 99.41548084077381
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type != Type . NONE )
rank: 237
score: 99.36366489955357
patch: if ( get CaMeL Type ( ) == Type . FUNCTION && ! aliasing CaMeL Gets > 0 ) {
rank: 238
score: 99.47759454900569
patch: if ( declaration . get CaMeL Twin ( ) != null && declaration . get CaMeL Twin ( )
rank: 238
score: 99.4691162109375
patch: if ( declaration . get CaMeL Type ( ) != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 238
score: 99.44439406622024
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && get CaMeL Twin ( ) != null ) {
rank: 238
score: 99.43296875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets . contains ( type ) ) {
rank: 238
score: 99.43248155381944
patch: if ( ! type . != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 238
score: 99.41528930664063
patch: if ( type != Type . FUNCTION && type . get CaMeL Name ( ) != null ) {
rank: 238
score: 99.36341441761364
patch: if ( type > Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 ) {
rank: 239
score: 99.48760986328125
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( - 1 ) ) {
rank: 239
score: 99.47756958007812
patch: if ( parent == null || is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 239
score: 99.46864385190217
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type . get CaMeL Twin ( ) != null ) {
rank: 239
score: 99.44852294921876
patch: if ( type instanceof Type || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 239
score: 99.44392903645833
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( [ 0 ] ) ) {
rank: 239
score: 99.4327392578125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION && aliasing CaMeL Gets == null ) {
rank: 239
score: 99.41506778492646
patch: if ( type == Type . NONE && ! aliasing CaMeL Gets > 0 ) {
rank: 239
score: 99.3632281759511
patch: if ( type . equals ( Type . FUNCTION && ! type . equals ( Type . FUNCTION ) ) ) {
rank: 240
score: 99.48659446022727
patch: if ( type != Type . FUNCTION && type != Type . OTHER && aliasing CaMeL Gets > 0 ) {
rank: 240
score: 99.47743443080357
patch: if ( aliasing CaMeL Gets > 0 && declaration . get CaMeL Twin ( ) != null ) {
rank: 240
score: 99.46858016304348
patch: if ( element == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) {
rank: 240
score: 99.4485107421875
patch: if ( type . equals ( Type . FUNCTION && aliasing CaMeL Gets ( type ) ) ) {
rank: 240
score: 99.43222878196023
patch: if ( type != Type . null && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 241
score: 99.47695583767361
patch: if ( type != Type . NOT && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 241
score: 99.44378051757812
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , this ) ) {
rank: 241
score: 99.432490234375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets . equals ( $STRING$ ) ) {
rank: 241
score: 99.43107466264205
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets & 0 ) {
rank: 241
score: 99.41482979910714
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type == Type . ) {
rank: 241
score: 99.36273484002976
patch: if ( type != Type . FUNCTION && get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 242
score: 99.48606178977273
patch: return ( parent == null ) || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ;
rank: 242
score: 99.4768399325284
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && declaration . get CaMeL Twin ( ) != null )
rank: 242
score: 99.46758478338069
patch: if ( declaration . get CaMeL State ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 242
score: 99.4482421875
patch: if ( aliasing CaMeL Gets ( type ) == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 242
score: 99.44373168945313
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 0 ) ) {
rank: 242
score: 99.4312744140625
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && this . type != Type . FUNCTION ) {
rank: 242
score: 99.43083753083882
patch: if ( ! aliasing CaMeL Gets ( type ) && aliasing CaMeL Gets ( type ) ) {
rank: 242
score: 99.41448102678571
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 || aliasing CaMeL Gets > 0 )
rank: 242
score: 99.3627292798913
patch: if ( type == Type . FUNCTION && get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 243
score: 99.4762939453125
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 )
rank: 243
score: 99.46715777853261
patch: if ( parent != null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) {
rank: 243
score: 99.44322204589844
patch: if ( aliasing CaMeL Gets > 0 || local CaMeL Sets != 0 ) {
rank: 243
score: 99.43053089488636
patch: if ( type != Type . FUNCTION && type != Type . IN && aliasing CaMeL Gets > 0 ) {
rank: 243
score: 99.41425323486328
patch: if ( type == Type . NULL || aliasing CaMeL Gets > 0 ) {
rank: 244
score: 99.47624405570652
patch: if ( type != Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 244
score: 99.44755249023437
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets && aliasing CaMeL Gets > 0 ) {
rank: 244
score: 99.44280133928571
patch: if ( key != null || type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 244
score: 99.43076578776042
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > Type . FUNCTION && aliasing CaMeL Gets > null ) {
rank: 244
score: 99.430419921875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > false ) {
rank: 244
score: 99.41419677734375
patch: if ( type . is CaMeL Interface ( ) || type . is CaMeL Interface ( ) ) {
rank: 245
score: 99.49971147017045
patch: if ( declaration . get CaMeL Type ( ) != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 245
score: 99.48566228693181
patch: return ( parent . null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 245
score: 99.44239807128906
patch: if ( declaration . get CaMeL Twin ( ) != null ) { {
rank: 245
score: 99.43072509765625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) . equals ( Type . FUNCTION ) ) {
rank: 245
score: 99.4298428622159
patch: if ( ! aliasing CaMeL Gets ( aliasing CaMeL Gets ( aliasing CaMeL Gets ( type ) ) ) ) {
rank: 245
score: 99.41393461681548
patch: if ( type . get CaMeL Type CaMeL Name ( ) . equals ( Type . FUNCTION ) ) {
rank: 245
score: 99.36144438244048
patch: if ( type == Type . FUNCTION && get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 246
score: 99.44716574928977
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 1 ) {
rank: 246
score: 99.42978737571023
patch: if = type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 246
score: 99.41383120888158
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Singleton ( ) ) {
rank: 246
score: 99.36140522203948
patch: if ( ( type == Type . FUNCTION ) && ! aliasing CaMeL Gets > 0 ) {
rank: 247
score: 99.48523966471355
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; ; }
rank: 247
score: 99.47376166449652
patch: if ( type != Type . NAME && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 247
score: 99.46566917782738
patch: if ( parent == null || . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 247
score: 99.44205932617187
patch: if ( null != parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 247
score: 99.36139594184027
patch: if ( type == Type . FUNCTION && ! ! aliasing CaMeL Gets > 0 ) {
rank: 248
score: 99.4994229403409
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 && local CaMeL Sets != 1 ) {
rank: 248
score: 99.48512961647727
patch: if ( ref == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 248
score: 99.47296697443181
patch: if ( type != Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum ) { return true ;
rank: 248
score: 99.44687721946023
patch: if ( type != Type . NONE && type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 248
score: 99.43019612630208
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && this . aliasing CaMeL Gets > 0 ) {
rank: 248
score: 99.41363525390625
patch: if ( type . equals ( Type . FUNCTION ) && aliasing CaMeL Gets > 0 )
rank: 248
score: 99.36075846354167
patch: if ( ! type . equals ( Type . FUNCTION ) && ! aliasing CaMeL Gets > 0 ) {
rank: 249
score: 99.49908447265625
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || global CaMeL Sets != 0 ) {
rank: 249
score: 99.47276547080592
patch: if ( type != null && type . get CaMeL Twin ( ) != null ) {
rank: 249
score: 99.46458798363095
patch: if ( declaration . get CaMeL Twin ( ) != null && aliasing CaMeL Gets > 1 ) {
rank: 249
score: 99.44144112723214
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( type ) || aliasing CaMeL Gets > 0 ) {
rank: 249
score: 99.42990944602273
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || aliasing CaMeL Gets > true ) {
rank: 249
score: 99.42929909446023
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets != 0 && aliasing CaMeL Gets > 0 ) {
rank: 249
score: 99.41320037841797
patch: if ( type != Type . FUNCTION && type . length > 0 ) {
rank: 250
score: 99.49863503196023
patch: if ( type != Type . FUNCTION && global CaMeL Sets != null && local CaMeL Sets != 0 ) {
rank: 250
score: 99.48501188858695
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) return false ; if ( aliasing CaMeL Gets > 0 ) {
rank: 250
score: 99.4724454012784
patch: if ( type != Type . TYPE && is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 250
score: 99.46442977241848
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) != ) {
rank: 250
score: 99.44044494628906
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets < 0 ) {
rank: 250
score: 99.42990234375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets . equals ( 0 ) ) {
rank: 250
score: 99.42859996448864
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 || aliasing CaMeL Gets > 0 ) {
rank: 250
score: 99.41299293154762
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION || type != Type . FUNCTION )
rank: 250
score: 99.35942731584821
patch: if ( get CaMeL Type ( ) != Type . FUNCTION ) {
rank: 251
score: 99.44017791748047
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets >= 0 ) {
rank: 251
score: 99.42962091619319
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets && aliasing CaMeL Gets && aliasing CaMeL Gets ) {
rank: 251
score: 99.42857776988636
patch: if ( type != Type . NAME && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 252
score: 99.47232216282895
patch: if ( type != null || ! type . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 252
score: 99.44541237571023
patch: if ( type != Type . FUNCTION && type == Type . EMPTY && aliasing CaMeL Gets > 0 ) {
rank: 252
score: 99.4401622953869
patch: if ( parent . get CaMeL Twin ( ) != null && local CaMeL Sets != 0 ) {
rank: 252
score: 99.42857360839844
patch: if ( type != Type . FUNCTION && type > Type . FUNCTION ) {
rank: 252
score: 99.41246977306548
patch: if ( type != Type . NULL && type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 253
score: 99.49821333451705
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 || local CaMeL Sets == 0 ) {
rank: 253
score: 99.4722900390625
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return is CaMeL Class CaMeL Or CaMeL Enum ) ;
rank: 253
score: 99.46382472826087
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) false ) {
rank: 253
score: 99.44476318359375
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > $NUMBER$ ) {
rank: 253
score: 99.44013904389881
patch: if ( element == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 253
score: 99.42894490559895
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != Type . FUNCTION ) {
rank: 253
score: 99.42787679036458
patch: if ( type . is CaMeL Empty ( ) && aliasing CaMeL Gets > 0 ) {
rank: 253
score: 99.412353515625
patch: if ( type . get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 253
score: 99.35846502130681
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > FUNCTION || type == Type . FUNCTION ) {
rank: 254
score: 99.49772505326705
patch: if ( type != Type . OTHER && global CaMeL Sets != 0 || global CaMeL Sets != 0 ) {
rank: 254
score: 99.4719875169837
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum )
rank: 254
score: 99.46373930431548
patch: if ( declaration . get CaMeL Twin ( ) == null && local CaMeL Sets != 0 ) {
rank: 254
score: 99.44010844983552
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( null ) ) {
rank: 254
score: 99.42892690805289
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets . is CaMeL Empty ( ) )
rank: 254
score: 99.42734103732639
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) > ) {
rank: 254
score: 99.35845184326172
patch: if ( type == Node . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 255
score: 99.49770285866477
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return true ; }
rank: 255
score: 99.47194602272727
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ; }
rank: 255
score: 99.43966674804688
patch: if ( get CaMeL Twin ( ) != null )
rank: 255
score: 99.4288330078125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > aliasing CaMeL Gets && aliasing CaMeL Gets != 0 ) {
rank: 255
score: 99.42721557617188
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets ) {
rank: 255
score: 99.4117919921875
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type != Type . )
rank: 256
score: 99.4976473721591
patch: if ( type == Type . FUNCTION && global CaMeL Sets != 1 || local CaMeL Sets != 0 ) {
rank: 256
score: 99.47193444293478
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return ;
rank: 256
score: 99.46298615828805
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( $NUMBER$ ) ) {
rank: 256
score: 99.44452459161931
patch: if ( type != Type . FUNCTION && type != Type . UNKNOWN && aliasing CaMeL Gets > 0 ) {
rank: 256
score: 99.43963301809211
patch: if ( parent . get CaMeL Twin ( ) != null ) { return true ; }
rank: 256
score: 99.42673561789773
patch: if ( type != Type . FUNCTION && type != Type . 0 && aliasing CaMeL Gets > 0 ) {
rank: 256
score: 99.357421875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > FUNCTION && type != Type . FUNCTION ) {
rank: 257
score: 99.48190174932066
patch: if ( ( parent . get CaMeL Twin ( ) != null ) || aliasing CaMeL Gets > 0 ) {
rank: 257
score: 99.46294611150569
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && local CaMeL Sets != 1 ) {
rank: 257
score: 99.44442894345238
patch: if ( type ( ) . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 257
score: 99.439404296875
patch: if ( declaration . declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 257
score: 99.42636940696023
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 && aliasing CaMeL Gets > 0 ) {
rank: 257
score: 99.41131882440476
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 1 )
rank: 257
score: 99.35703822544643
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 )
rank: 258
score: 99.49732607886905
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 258
score: 99.471240234375
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) return false ;
rank: 258
score: 99.46272078804348
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) ) ;
rank: 258
score: 99.44382838199013
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( 0 , type ) ) {
rank: 258
score: 99.43937174479167
patch: if ( key != null || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 258
score: 99.41129985608552
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Constructor ( ) ) {
rank: 258
score: 99.35637872869319
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > FUNCTION && type != Type . FUNCTION ) {
rank: 259
score: 99.47110595703126
patch: if ( ! declaration . get CaMeL Twin ( ) != null ) { return false ; }
rank: 259
score: 99.44369904891305
patch: if ( type != Type . FUNCTION && get CaMeL Type ( ) . equals ( Type . FUNCTION ) ) {
rank: 259
score: 99.43923468338816
patch: if ( ! ! declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 259
score: 99.42615855823864
patch: if ( type != Type . FUNCTION && type != Type . TYPE && type != Type . FUNCTION ) {
rank: 259
score: 99.4111095610119
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION || type == Type . FUNCTION )
rank: 259
score: 99.35606800426136
patch: if ( type > Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 ) {
rank: 260
score: 99.48160807291667
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; finally {
rank: 260
score: 99.4707364169034
patch: if ( declaration . get CaMeL Id ( ) != null && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 260
score: 99.4391845703125
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , true ) ) {
rank: 260
score: 99.427109375
patch: if ( type != Type . FUNCTION && type . equals ( Type . FUNCTION ) && aliasing CaMeL Gets > 0 ) {
rank: 260
score: 99.42610307173295
patch: if ( type != Type . FUNCTION && type >= Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 260
score: 99.35598754882812
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > null ) {
rank: 261
score: 99.49667358398438
patch: if ( type != Type . OTHER || aliasing CaMeL Gets > 0 ) {
rank: 261
score: 99.47029976222827
patch: if ( ! ! parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 261
score: 99.42693219866071
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION || aliasing CaMeL Gets > ) {
rank: 261
score: 99.41029759457237
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Enum ( ) ) {
rank: 261
score: 99.3556896391369
patch: if ( type == Type . FUNCTION && $STRING$ . equals ( aliasing CaMeL Gets > 0 ) ) {
rank: 262
score: 99.47022920496323
patch: if ( type != null || ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 262
score: 99.44349254261364
patch: if ( type != Type . FUNCTION && type . get CaMeL Type ( ) != Type . FUNCTION ) {
rank: 262
score: 99.43857293379934
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) continue ;
rank: 263
score: 99.495361328125
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 263
score: 99.47019958496094
patch: if ( type != null && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 263
score: 99.44337047230114
patch: if ( type != Type . EMPTY || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 263
score: 99.4380859375
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , ) ) {
rank: 263
score: 99.42559051513672
patch: if ( type != Type . FUNCTION && type != Type . TYPE ) {
rank: 263
score: 99.41008649553571
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets <= 0 )
rank: 263
score: 99.35551313920455
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 264
score: 99.4791015625
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return true ;
rank: 264
score: 99.443359375
patch: if ( type != Type . DEFAULT && aliasing CaMeL Gets > 0 ) {
rank: 264
score: 99.437646484375
patch: if ( parent . get CaMeL Twin ( ) == null ) {
rank: 264
score: 99.42646227384868
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets . contains ( type ) ) {
rank: 264
score: 99.4255599975586
patch: if ( type != Type . null && aliasing CaMeL Gets > 0 ) {
rank: 264
score: 99.40981910342262
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( aliasing CaMeL Gets > 1 ) ) {
rank: 264
score: 99.35549094460227
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets == 0 ) {
rank: 265
score: 99.49464000355114
patch: if ( value != null || type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 265
score: 99.47891898777173
patch: if ( ! type . is CaMeL Class CaMeL Or CaMeL Enum ( ) && aliasing CaMeL Gets > 0 ) {
rank: 265
score: 99.46987082741477
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( is CaMeL Class CaMeL Or CaMeL Enum )
rank: 265
score: 99.43681408110119
patch: if ( declaration . get CaMeL Twin ( ) != null || local CaMeL Sets != 1 ) {
rank: 265
score: 99.408984375
patch: if ( type . != Type . FUNCTION && type . equals ( Type . FUNCTION ) ) {
rank: 265
score: 99.35533558238636
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 || type == Type . FUNCTION ) {
rank: 266
score: 99.43650512695312
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { ) {
rank: 266
score: 99.425703125
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type . equals ( Type . FUNCTION ) ) {
rank: 266
score: 99.40890342310855
patch: if ( ! ( type != Type . FUNCTION && type != Type . FUNCTION ) ) {
rank: 267
score: 99.46932319972827
patch: if ( parent == null || this . parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 267
score: 99.45926513671876
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && parent != null ) {
rank: 267
score: 99.44188343394886
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets ( ) ) {
rank: 267
score: 99.43637230282738
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ; }
rank: 267
score: 99.40874280427632
patch: if ( type == Type . FUNCTION && ! type . is CaMeL Const ( ) ) {
rank: 267
score: 99.3543212890625
patch: if ( ! type . contains ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 268
score: 99.46918279474431
patch: if ( type != null || type . is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 268
score: 99.458740234375
patch: if ( declaration . get CaMeL Class ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 268
score: 99.44171697443181
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 1 && aliasing CaMeL Gets > 1 ) {
rank: 268
score: 99.43588096217105
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { }
rank: 268
score: 99.42551491477273
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || aliasing CaMeL Gets > null ) {
rank: 268
score: 99.4239501953125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return $NUMBER$ ; }
rank: 268
score: 99.408251953125
patch: if ( type != Type . FUNCTION && Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 269
score: 99.47782566236413
patch: if ( ! type . is CaMeL Class CaMeL Or CaMeL Enum ( ) || aliasing CaMeL Gets > 0 ) {
rank: 269
score: 99.46845092773438
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ) {
rank: 269
score: 99.45767875339673
patch: if ( parent == null || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) {
rank: 269
score: 99.44150797526042
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . 0 > 0 ) {
rank: 269
score: 99.43574451264881
patch: if ( aliasing CaMeL Gets > 0 || declaration . get CaMeL Twin ( ) != null ) {
rank: 269
score: 99.42529296875
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > null ) {
rank: 269
score: 99.42364501953125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 , type ) {
rank: 269
score: 99.40789184570312
patch: if ( type != Type . FUNCTION && ! type . ends CaMeL With ( $STRING$ ) ) {
rank: 270
score: 99.49288736979166
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return false ;
rank: 270
score: 99.47770182291667
patch: return ( ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; }
rank: 270
score: 99.46845037286931
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && aliasing CaMeL Gets > 0 ) { return false ; }
rank: 270
score: 99.4575832201087
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( type ) ) {
rank: 270
score: 99.44120649857955
patch: if ( type != Type . DEFAULT && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 270
score: 99.43482123480902
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) )
rank: 270
score: 99.42522723858173
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > Type . FUNCTION && aliasing CaMeL Gets == Type . FUNCTION ) {
rank: 270
score: 99.3534423828125
patch: if ( get CaMeL Class ( ) == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 271
score: 99.46814546130952
patch: if ( get CaMeL Twin ( ) != null && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 271
score: 99.43461681547619
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) ) return false ;
rank: 271
score: 99.423583984375
patch: if ( type != Type . FUNCTION && ! type . != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 271
score: 99.42320421006944
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > Type . FUNCTION ) {
rank: 271
score: 99.40699462890625
patch: if ( type != Type . FUNCTION && ! Type . FUNCTION . equals ( type ) ) {
rank: 271
score: 99.35322709517045
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets != 0 ) {
rank: 272
score: 99.47688802083333
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) ; }
rank: 272
score: 99.46688988095238
patch: if ( ! can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ; }
rank: 272
score: 99.43398150275735
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) continue ;
rank: 272
score: 99.423095703125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && > 0 ) {
rank: 272
score: 99.40671900699013
patch: if ( type . get CaMeL Name ( ) . equals ( Type . FUNCTION ) ) {
rank: 272
score: 99.35222625732422
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > $STRING$ ) {
rank: 273
score: 99.46625077097039
patch: if ( declaration == null || declaration . get CaMeL Twin ( ) != null ) {
rank: 273
score: 99.42271839488636
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > null && aliasing CaMeL Gets > null ) {
rank: 273
score: 99.42265625
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type != 0 ) {
rank: 273
score: 99.40666852678571
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Assignable CaMeL From ( ) ) {
rank: 273
score: 99.35212846235795
patch: if ( type != Type . NULL && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 ) {
rank: 274
score: 99.49158824573864
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && global CaMeL Sets != 1 ) {
rank: 274
score: 99.46577592329545
patch: if ( type != null || type . is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 274
score: 99.4560546875
patch: if ( parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) ) {
rank: 274
score: 99.4330078125
patch: if ( ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 274
score: 99.42264229910714
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 )
rank: 274
score: 99.42238362630208
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != Type . FUNCTION ) {
rank: 274
score: 99.40638950892857
patch: if ( aliasing CaMeL Gets > 0 && type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 274
score: 99.35195025275735
patch: } if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 275
score: 99.49118874289773
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 && local CaMeL Sets == 0 ) {
rank: 275
score: 99.4554443359375
patch: if ( declaration . get CaMeL Twin ( ) . get CaMeL Twin ( ) != 1 ) {
rank: 275
score: 99.44034476902173
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets ( type ) ) {
rank: 275
score: 99.4221484375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets ( aliasing CaMeL Gets ) ) {
rank: 275
score: 99.42188662574405
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( aliasing CaMeL Gets ( type ) ) )
rank: 275
score: 99.40628854851974
patch: if ( type == Type . NONE && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 275
score: 99.35187844669117
patch: if ( ! aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 ) {
rank: 276
score: 99.49109497070313
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && ( aliasing CaMeL Gets > 0 ) ) {
rank: 276
score: 99.46500651041667
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return ( aliasing CaMeL Gets > 0 ) ;
rank: 276
score: 99.45529042119566
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( size ) ) {
rank: 276
score: 99.43903142755681
patch: if ( type != Type . FUNCTION && type == Type . NULL && aliasing CaMeL Gets > 0 ) {
rank: 276
score: 99.432666015625
patch: try { if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 276
score: 99.42204145951705
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 1 && aliasing CaMeL Gets > 0 ) {
rank: 276
score: 99.42155456542969
patch: if ( parent != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 276
score: 99.40577456825658
patch: if ( type == Type . FUNCTION && ! type . equals ( Type . FUNCTION ) )
rank: 276
score: 99.35142115542763
patch: if ( type . equals ( Type . FUNCTION || aliasing CaMeL Gets > 0 ) ) {
rank: 277
score: 99.49061168323864
patch: if ( type != Type . OTHER || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 277
score: 99.47590438179348
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) false ) ;
rank: 277
score: 99.4546231356534
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 1 || local CaMeL Sets != 0 ) {
rank: 277
score: 99.4389892578125
patch: if ( ! type . equals ( Type . FUNCTION && aliasing CaMeL Gets > 1 ) ) {
rank: 277
score: 99.43246799045139
patch: if ( module . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 277
score: 99.35059703480114
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 || aliasing CaMeL Gets == 0 ) {
rank: 278
score: 99.47572835286458
patch: if ( ! parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) ) {
rank: 278
score: 99.46478826349431
patch: if ( type != Type . FUNCTION && ! declaration . get CaMeL Twin ( ) != null ) {
rank: 278
score: 99.43879838423295
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets , 0 ) {
rank: 278
score: 99.42185280539773
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 1 && aliasing CaMeL Gets == 0 ) {
rank: 278
score: 99.42063993566177
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 0 ) {
rank: 278
score: 99.40557502297794
patch: if ( type instanceof Type ) { if ( aliasing CaMeL Gets > 0 ) {
rank: 279
score: 99.47544352213542
patch: if ( ( parent . null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 279
score: 99.43147358141448
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 1 ) ) {
rank: 279
score: 99.42174183238636
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > FUNCTION || aliasing CaMeL Gets != FUNCTION ) {
rank: 279
score: 99.42058967141544
patch: final if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 279
score: 99.40556408110119
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || type == Type . FUNCTION )
rank: 279
score: 99.35029682360198
patch: if ( type != Type . FUNCTION || ! ( type == Type . FUNCTION ) ) {
rank: 280
score: 99.46373930431548
patch: if ( type != Type . FUNCTION && ! ( is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 280
score: 99.4217196377841
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION || type == Type . FUNCTION ) {
rank: 280
score: 99.42039659288194
patch: if ( type != Type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 280
score: 99.40555245535714
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { { return false ; }
rank: 281
score: 99.46335963199013
patch: if ( type != Type . TYPE && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 281
score: 99.45368758491848
patch: if ( node == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) {
rank: 281
score: 99.43110926011029
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) break ;
rank: 281
score: 99.42032663445724
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { } else {
rank: 281
score: 99.40545944940476
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION || aliasing CaMeL Gets > 0 )
rank: 281
score: 99.3500339673913
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 ) {
rank: 282
score: 99.48794716282895
patch: if ( type != Type . OTHER && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 282
score: 99.4633258322011
patch: try { if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 282
score: 99.45352935791016
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && parent == null ) {
rank: 282
score: 99.43037341889881
patch: if ( declaration . get CaMeL Twin ( ) . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 282
score: 99.42164195667614
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets == FUNCTION ) {
rank: 282
score: 99.41985473632812
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > ( aliasing CaMeL Gets ) ) {
rank: 282
score: 99.40536338404605
patch: if ( type != Type . FUNCTION || type . equals ( Type . FUNCTION ) ) {
rank: 282
score: 99.34946511008523
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > FUNCTION || type == Type . FUNCTION ) {
rank: 283
score: 99.4878817471591
patch: if ( type != Type . FUNCTION && parent == null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 283
score: 99.47371049360795
patch: if ( local CaMeL Sets != null || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 283
score: 99.46285574776786
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 1 || local CaMeL Sets != 0 )
rank: 283
score: 99.45311143663194
patch: if ( declaration . type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 283
score: 99.43024553571429
patch: if ( parent != null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 283
score: 99.42161976207386
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 || aliasing CaMeL Gets != 0 ) {
rank: 283
score: 99.41960797991071
patch: if ( aliasing CaMeL Gets ( type ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 283
score: 99.40473768446181
patch: if ( this . type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 283
score: 99.34931182861328
patch: if ( element == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 284
score: 99.48763374660327
patch: if ( ( ! is CaMeL Class CaMeL Or CaMeL Enum ) || ( aliasing CaMeL Gets > 0 ) ) {
rank: 284
score: 99.47141335227273
patch: if ( type != Type . FUNCTION && global CaMeL Sets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 284
score: 99.46230740017361
patch: if ( type != null && type . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 284
score: 99.45297639266305
patch: if ( element == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) {
rank: 284
score: 99.43797718394886
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets < 1 ) {
rank: 284
score: 99.43024553571429
patch: if ( ( get CaMeL Twin ( ) != null ) || aliasing CaMeL Gets > 0 ) {
rank: 284
score: 99.4211092862216
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > type ) {
rank: 284
score: 99.40436553955078
patch: while ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 284
score: 99.34906560724431
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets == 0 && aliasing CaMeL Gets == 0 ) {
rank: 285
score: 99.47066824776786
patch: if ( != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 285
score: 99.46216583251953
patch: if ( type != Type . TYPE || global CaMeL Sets != 0 ) {
rank: 285
score: 99.4376553622159
patch: if ( type != Type . FUNCTION && id != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 285
score: 99.42948608398437
patch: if ( parent . get CaMeL Twin ( ) != null || local CaMeL Sets != 0 )
rank: 285
score: 99.40421752929687
patch: if ( type . equals ( Type . FUNCTION && ! aliasing CaMeL Gets > 0 ) ) {
rank: 285
score: 99.34872097439236
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > aliasing CaMeL Gets ) {
rank: 286
score: 99.47029194078948
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && ! aliasing CaMeL Gets > 0 ) {
rank: 286
score: 99.46188221807066
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , false ) )
rank: 286
score: 99.4293701171875
patch: if ( declaration . get CaMeL Twin ( ) != null ) { return false ; } }
rank: 286
score: 99.40415736607143
patch: if ( type != Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum ( type ) )
rank: 287
score: 99.486328125
patch: if ( local CaMeL Sets . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 287
score: 99.4372891512784
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets < 0 ) {
rank: 287
score: 99.40397374770221
patch: if ( ! ( type instanceof Type ) && aliasing CaMeL Gets > 0 ) {
rank: 287
score: 99.34785600142045
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets == 0 ) {
rank: 288
score: 99.45189368206522
patch: if ( parent != null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) {
rank: 288
score: 99.42849731445312
patch: if ( aliasing CaMeL Gets > 0 && local CaMeL Sets != 0 ) {
rank: 288
score: 99.41953346946023
patch: if ( type != Type . FUNCTION && type instanceof Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 288
score: 99.4167724609375
patch: if ( type != 0 && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 288
score: 99.40366908482143
patch: if ( type == Type . FUNCTION ) { if ( is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 288
score: 99.34781901041667
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 )
rank: 289
score: 99.46969168526786
patch: if ( type != Type . FUNCTION && global CaMeL Sets . get ( type ) != null ) {
rank: 289
score: 99.46049360795455
patch: if ( declaration . get CaMeL Twin ( ) != null || declaration . get CaMeL Twin ( )
rank: 289
score: 99.45184616815476
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 289
score: 99.43634905133929
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { aliasing CaMeL Gets -- ;
rank: 289
score: 99.4193699048913
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . get ( type ) != Type . FUNCTION ) {
rank: 289
score: 99.41676025390625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && type instanceof Type ) {
rank: 289
score: 99.40327453613281
patch: if ( type == Type . NULL && aliasing CaMeL Gets > 1 ) {
rank: 290
score: 99.43625806725544
patch: if ( ! type . equals ( Type . FUNCTION ) || type . equals ( Type . FUNCTION ) ) {
rank: 290
score: 99.42788357204861
patch: if ( parent == null || declaration . get CaMeL Twin ( ) != null )
rank: 290
score: 99.41933371803977
patch: if ( type != Type . NONE && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 290
score: 99.41652221679688
patch: if ( aliasing CaMeL Gets ( type && aliasing CaMeL Gets ( type ) ) > 0 ) {
rank: 290
score: 99.40325055803571
patch: if ( type != Type . NULL && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 0 )
rank: 291
score: 99.48537375710227
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 || local CaMeL Sets < 0 ) {
rank: 291
score: 99.46921793619792
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( - 0 ) ) {
rank: 291
score: 99.46004486083984
patch: if ( type != Type . NOT || global CaMeL Sets != 0 ) {
rank: 291
score: 99.42784288194444
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) )
rank: 291
score: 99.4193115234375
patch: if ( type != null && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 ) {
rank: 291
score: 99.4027587890625
patch: if ( type != Type . FUNCTION && type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 291
score: 99.34733442826705
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > FUNCTION || aliasing CaMeL Gets > FUNCTION ) {
rank: 292
score: 99.46002197265625
patch: if ( type != null || type . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 292
score: 99.41911177201705
patch: if ( type != Type . NULL && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 292
score: 99.40240478515625
patch: if ( ! type != Type . FUNCTION && ! aliasing CaMeL Gets > 0 ) {
rank: 292
score: 99.34714577414773
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > FUNCTION || aliasing CaMeL Gets == 0 ) {
rank: 293
score: 99.48526664402173
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) break ;
rank: 293
score: 99.41578433388158
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( type ) != 0 ) {
rank: 293
score: 99.40229797363281
patch: if ( type == Type . UNKNOWN && aliasing CaMeL Gets > 0 ) {
rank: 294
score: 99.48515881990132
patch: if ( type != Type . FUNCTION || ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 294
score: 99.46891645951705
patch: if ( type != Type . FUNCTION && global CaMeL Sets > 0 || aliasing CaMeL Gets > 0 ) {
rank: 294
score: 99.43561345880681
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets >= 0 ) {
rank: 294
score: 99.427001953125
patch: if ( parent . get CaMeL Twin ( ) != null || local CaMeL Sets != null ) {
rank: 294
score: 99.418701171875
patch: if ( type != Type . FUNCTION && type instanceof Type . FUNCTION && type != Type . FUNCTION ) {
rank: 294
score: 99.34677605879934
patch: if ( ! type . is CaMeL Local ( ) && aliasing CaMeL Gets > 0 ) {
rank: 295
score: 99.48505193536931
patch: if ( type == Type . FUNCTION || global CaMeL Sets != 0 && local CaMeL Sets != 0 ) {
rank: 295
score: 99.45947265625
patch: if ( type != Type . FUNCTION && ! ! type . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 295
score: 99.45034950657895
patch: if ( declaration . get CaMeL Twin ( ) == null || parent == null ) {
rank: 295
score: 99.42693328857422
patch: if ( key != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 295
score: 99.41861666165866
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > Type . FUNCTION || aliasing CaMeL Gets != Type . FUNCTION ) {
rank: 295
score: 99.4152099609375
patch: if ( type != Type . FUNCTION && ! type . contains ( Type . FUNCTION ) ) {
rank: 295
score: 99.40154708059211
patch: if ( aliasing CaMeL Gets > 0 ) { if ( type != Type . FUNCTION ) {
rank: 296
score: 99.46840413411458
patch: if ( type != Type . FUNCTION && ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 296
score: 99.458984375
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return ( aliasing CaMeL Gets > 0 ) ; }
rank: 296
score: 99.43538041548295
patch: if ( type != Type . FUNCTION || type == Type . TYPE && aliasing CaMeL Gets > 0 ) {
rank: 296
score: 99.42690894717262
patch: if ( node != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 296
score: 99.40112982855902
patch: if ( type != Type . NULL && ( aliasing CaMeL Gets > 0 ) ) {
rank: 297
score: 99.44984502377717
patch: if ( declaration == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) {
rank: 297
score: 99.434814453125
patch: if ( ! type . equals ( Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) ) {
rank: 297
score: 99.426806640625
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( type ) ) {
rank: 297
score: 99.41826837713069
patch: if ( type != Type . NONE && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 297
score: 99.414306640625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return $STRING$ ;
rank: 297
score: 99.40069986979167
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 )
rank: 297
score: 99.3459139737216
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 || type == Type . FUNCTION ) {
rank: 298
score: 99.48449125744048
patch: if ( type != Type . OTHER && parent . get CaMeL Twin ( ) != null ) {
rank: 298
score: 99.46828294836956
patch: return ( ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 298
score: 99.45892333984375
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) { return false ;
rank: 298
score: 99.43479225852273
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION || aliasing CaMeL Gets > $NUMBER$ ) {
rank: 298
score: 99.42677066200658
patch: else if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 298
score: 99.41796875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > true ) {
rank: 298
score: 99.41414602179276
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return $NUMBER$ ;
rank: 298
score: 99.39967176649306
patch: if ( type == Type . FUNCTION && ! aliasing CaMeL Gets > 0 ) { {
rank: 299
score: 99.4588623046875
patch: if ( type != null || type == Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 299
score: 99.4346590909091
patch: if ( type != Type . FUNCTION || type instanceof Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 299
score: 99.42647552490234
patch: if ( declaration . get CaMeL Twin ( ) != null ) { }
rank: 299
score: 99.4178799715909
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets : 0 ) {
rank: 299
score: 99.39961547851563
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) { return true ; }
rank: 300
score: 99.46708347486413
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , ) ) ;
rank: 300
score: 99.44840240478516
patch: if ( type != Type . class && aliasing CaMeL Gets > 0 ) {
rank: 300
score: 99.43454811789773
patch: if ( type == Type . EMPTY && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 300
score: 99.4178466796875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != Type . FUNCTION || aliasing CaMeL Gets != Type . FUNCTION ) {
rank: 300
score: 99.41379908511513
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type , true ) ) {
rank: 300
score: 99.399609375
patch: if ( type != Type . FUNCTION && type . get CaMeL Name ( ) == null ) {
rank: 301
score: 99.48363196331522
patch: if ( declaration . get CaMeL Twin ( ) != null || ( local CaMeL Sets != 0 ) ) {
rank: 301
score: 99.46690877278645
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 301
score: 99.44828657670455
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 1 && local CaMeL Sets != 0 ) {
rank: 301
score: 99.43434836647727
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) { type = Type . FUNCTION ;
rank: 301
score: 99.42623465401786
patch: if ( declaration . get CaMeL Twin ( ) != 1 && aliasing CaMeL Gets > 0 ) {
rank: 301
score: 99.39957921645221
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && ) {
rank: 301
score: 99.34430609809027
patch: if ( type != Type . FUNCTION || ( type == Type . FUNCTION ) ) {
rank: 302
score: 99.48337227957589
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 302
score: 99.46664826766305
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) return true ; if ( aliasing CaMeL Gets > 0 ) {
rank: 302
score: 99.4482421875
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ; return true ;
rank: 302
score: 99.4130126953125
patch: if ( name != null && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 302
score: 99.39947219122024
patch: if ( type == Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 302
score: 99.34426047585227
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets > FUNCTION ) {
rank: 303
score: 99.48295454545455
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 && global CaMeL Sets != 0 ) {
rank: 303
score: 99.46660505022321
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 303
score: 99.45779418945312
patch: if ( type != Type . FUNCTION && declaration . get CaMeL Id ( ) != null ) {
rank: 303
score: 99.42611694335938
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( - 1 ) ) {
rank: 303
score: 99.4127685546875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets {
rank: 303
score: 99.39946899414062
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) { return true ; }
rank: 304
score: 99.46645285866477
patch: if ( parent . get CaMeL Type ( ) == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 304
score: 99.45769391741071
patch: if ( type != Type . NAME && declaration . get CaMeL Twin ( ) != null ) {
rank: 304
score: 99.42607189360119
patch: if ( parent . get CaMeL Twin ( ) == null || aliasing CaMeL Gets > 0 ) {
rank: 304
score: 99.416083984375
patch: if ( type != Type . FUNCTION && type . equals ( Type . FUNCTION || aliasing CaMeL Gets > 0 ) ) {
rank: 304
score: 99.41264905427632
patch: if ( type != Type . FUNCTION && ! type . length ( ) == 0 ) {
rank: 304
score: 99.3994140625
patch: if ( type == Type . FUNCTION && ! local CaMeL Sets . contains ( type ) ) {
rank: 304
score: 99.34361267089844
patch: if ( type != Type . TYPE || aliasing CaMeL Gets > 0 ) {
rank: 305
score: 99.48245675223214
patch: if ( type != Type . FUNCTION && parent . get CaMeL Twin ( ) == null ) {
rank: 305
score: 99.45751953125
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) || global CaMeL Sets != 0 ) {
rank: 305
score: 99.41571044921875
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || aliasing CaMeL Gets > Type . FUNCTION ) {
rank: 305
score: 99.41250465029762
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets { {
rank: 305
score: 99.39940243675595
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 1 )
rank: 305
score: 99.34303114149306
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) return false ;
rank: 306
score: 99.48222212357955
patch: if ( type != Type . FUNCTION && global CaMeL Sets > 0 || local CaMeL Sets != 0 ) {
rank: 306
score: 99.45735677083333
patch: if ( parent == null || root . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 306
score: 99.43344948508523
patch: if ( type == Type . FUNCTION && type != Type . TYPE && aliasing CaMeL Gets > 0 ) {
rank: 306
score: 99.415576171875
patch: if ( type != null && type != Type . FUNCTION && type != Type . FUNCTION ) {
rank: 306
score: 99.41194233141448
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets ( type ) > 0 ) {
rank: 306
score: 99.39921875
patch: if ( type != Type . NULL && aliasing CaMeL Gets > 0 ) { return false ; }
rank: 306
score: 99.34273529052734
patch: if ( type == Node . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 307
score: 99.48214588994566
patch: if ( type != Type . FUNCTION && can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( type ) ) {
rank: 307
score: 99.45731353759766
patch: if ( global CaMeL Sets != 0 || local CaMeL Sets != 0 ) {
rank: 307
score: 99.4470547762784
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 1 || aliasing CaMeL Gets > 0 ) {
rank: 307
score: 99.41536458333333
patch: if ( ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) && aliasing CaMeL Gets > 0 ) {
rank: 307
score: 99.41193498883929
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 , ! aliasing CaMeL Gets ) {
rank: 307
score: 99.39873303865132
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Private ( ) ) {
rank: 307
score: 99.34260697798295
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > FUNCTION || aliasing CaMeL Gets != 0 ) {
rank: 308
score: 99.46378226902173
patch: return ( parent instanceof null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; }
rank: 308
score: 99.45721756784539
patch: if ( ! type . is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 308
score: 99.44660750679348
patch: if ( parent == null || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 0 ) ) {
rank: 308
score: 99.43309190538194
patch: if ( type . type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 308
score: 99.42462158203125
patch: if ( true && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 308
score: 99.41162109375
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > ) {
rank: 308
score: 99.39840537623355
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { { return {
rank: 308
score: 99.34255149147727
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > FUNCTION || aliasing CaMeL Gets == 0 ) {
rank: 309
score: 99.44655443274456
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) true ) {
rank: 309
score: 99.4244873046875
patch: if ( declaration . get CaMeL Twin ( ) == null || aliasing CaMeL Gets > 0 )
rank: 309
score: 99.4101329985119
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 {
rank: 309
score: 99.39837646484375
patch: if ( type != Type . FUNCTION && type == Type . NONE ) {
rank: 310
score: 99.4566650390625
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 )
rank: 310
score: 99.43257279829545
patch: if ( type == Type . FUNCTION ) { if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 310
score: 99.42431640625
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return true ;
rank: 310
score: 99.39837287454044
patch: if ( ! type != Type . FUNCTION && type != Type . FUNCTION ) {
rank: 310
score: 99.34168590198864
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > $STRING$ ) {
rank: 311
score: 99.46339000355114
patch: if ( declaration . get CaMeL Twin ( ) != null || ! aliasing CaMeL Gets > 0 ) {
rank: 311
score: 99.45615748355263
patch: if ( ! global CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 311
score: 99.42406005859375
patch: if ( parent == null || aliasing CaMeL Gets > 0 && local CaMeL Sets != 0 ) {
rank: 311
score: 99.34166717529297
patch: if ( type != Type . FUNCTION || type != Type . NULL ) {
rank: 312
score: 99.46282958984375
patch: if ( type == Type . OTHER && aliasing CaMeL Gets > 0 ) {
rank: 312
score: 99.45566813151042
patch: if ( local CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 312
score: 99.432373046875
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && ! aliasing CaMeL Gets > 0 ) {
rank: 312
score: 99.42402729235198
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( $STRING$ ) ) {
rank: 312
score: 99.41490589488636
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || aliasing CaMeL Gets != null ) {
rank: 312
score: 99.40939812911184
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && > 1 ) {
rank: 312
score: 99.39796084449405
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type != Type . NULL )
rank: 313
score: 99.48012473366477
patch: if ( type == Type . FUNCTION && global CaMeL Sets != 0 || aliasing CaMeL Gets > 0 ) {
rank: 313
score: 99.45411217730978
patch: if ( ! declaration . get CaMeL Twin ( ) != null || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 313
score: 99.44576893682066
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && declaration . get CaMeL Twin ( ) != 0 ) {
rank: 313
score: 99.41482676630434
patch: if ( ! type . equals ( Type . FUNCTION || type . equals ( Type . FUNCTION ) ) ) {
rank: 313
score: 99.40875854492188
patch: if ( ! type . is CaMeL Empty ( ) && aliasing CaMeL Gets ( type ) ) {
rank: 313
score: 99.39785427517361
patch: if ( type != Type . FUNCTION && ( aliasing CaMeL Gets > 1 ) ) {
rank: 313
score: 99.34102136948529
patch: if ( ! aliasing CaMeL Gets ( aliasing CaMeL Gets ( type ) ) ) {
rank: 314
score: 99.4623386548913
patch: if ( this . declaration . get CaMeL Twin ( ) != null || aliasing CaMeL Gets > 0 ) {
rank: 314
score: 99.42300415039062
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( - 0 ) ) {
rank: 314
score: 99.40838623046875
patch: if ( type != FUNCTION && type != FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 314
score: 99.39747619628906
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 1 ) {
rank: 314
score: 99.34070587158203
patch: if ( aliasing CaMeL Gets ( aliasing CaMeL Gets ( type ) ) ) {
rank: 315
score: 99.47983620383523
patch: if ( type != Type . FUNCTION && global CaMeL Sets != null || aliasing CaMeL Gets > 0 ) {
rank: 315
score: 99.4539859169408
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; } return true ;
rank: 315
score: 99.43186257102273
patch: if ( type instanceof Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 315
score: 99.42298041449652
patch: if ( null . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 315
score: 99.4143954190341
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == $NUMBER$ ) {
rank: 315
score: 99.40764770507812
patch: if ( type != Type . FUNCTION && type != FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 315
score: 99.34070587158203
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > null ) {
rank: 316
score: 99.47970145089286
patch: if ( type != Type . FUNCTION || parent . get CaMeL Twin ( ) != null ) {
rank: 316
score: 99.45377604166667
patch: if ( type != Type . FUNCTION && can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 316
score: 99.43122414981617
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets ( 0 ) ) {
rank: 316
score: 99.42268880208333
patch: if ( local CaMeL Sets != null || declaration . get CaMeL Twin ( ) != null ) {
rank: 316
score: 99.40734145220588
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . > 0 ) {
rank: 316
score: 99.39688720703126
patch: if ( type != Type . NONE && aliasing CaMeL Gets > 0 ) { return true ; }
rank: 316
score: 99.3400943153783
patch: if ( type == Type . FUNCTION && ! type . is CaMeL Primitive ( ) ) {
rank: 317
score: 99.45365397135417
patch: if ( global CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 317
score: 99.42230583639706
patch: if ( aliasing CaMeL Gets > 0 || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 317
score: 99.3965835571289
patch: if ( type != Type . NULL && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 317
score: 99.34006076388889
patch: / * if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 318
score: 99.45364512567934
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) continue ;
rank: 318
score: 99.43097795758929
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( type ) && aliasing CaMeL Gets > 0 ) {
rank: 318
score: 99.42216940487133
patch: if ( this . declaration . get CaMeL Twin ( ) != null ) {
rank: 318
score: 99.40721893310547
patch: if ( aliasing CaMeL Gets > 0 && type != Type . FUNCTION ) {
rank: 318
score: 99.3961669921875
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ( type ) )
rank: 319
score: 99.47935901988636
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && this . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 319
score: 99.45362389605978
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 && is CaMeL Class CaMeL Or CaMeL Enum )
rank: 319
score: 99.44329071044922
patch: if ( declaration . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 319
score: 99.43080832741477
patch: if ( type == Type . FUNCTION || type != Type . TYPE && aliasing CaMeL Gets > 0 ) {
rank: 319
score: 99.42155151367187
patch: if ( type == Type . FUNCTION && ( is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 319
score: 99.41373291015626
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . aliasing CaMeL Gets > 0 ) {
rank: 319
score: 99.40706594366776
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return true {
rank: 319
score: 99.39612494574652
patch: if ( type != Type . FUNCTION && type . is CaMeL Const ( ) ) {
rank: 319
score: 99.33961070667614
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 320
score: 99.47860863095238
patch: if ( type != Type . FUNCTION && ( ! is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 320
score: 99.46120198567708
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , null ) ) {
rank: 320
score: 99.45331101190476
patch: if ( type != null || ! global CaMeL Sets . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 320
score: 99.44314707880434
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 1 ) ) ;
rank: 320
score: 99.43080357142857
patch: if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) && aliasing CaMeL Gets > 0 ) {
rank: 320
score: 99.42132889597039
patch: if ( get CaMeL Twin ( ) == null || aliasing CaMeL Gets > 0 ) {
rank: 320
score: 99.41327667236328
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > false ) {
rank: 320
score: 99.40697021484375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return ) ; }
rank: 320
score: 99.39610072544643
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && type != Type . FUNCTION )
rank: 320
score: 99.33957391036184
patch: if ( type == Type . FUNCTION || ! ( type != Type . FUNCTION ) ) {
rank: 321
score: 99.46080525716145
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , type ) ) {
rank: 321
score: 99.45277099609375
patch: if ( parent == null || is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 321
score: 99.4426906419837
patch: if ( parent != null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 0 ) ) {
rank: 321
score: 99.42129034745066
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( parent ) ) {
rank: 321
score: 99.413125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != null && aliasing CaMeL Gets . contains ( type ) ) {
rank: 321
score: 99.39568219866071
patch: if ( type . equals ( Type . FUNCTION ) || type . equals ( Type . FUNCTION ) )
rank: 322
score: 99.47733764648437
patch: if ( ( parent == null ) || ( is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 322
score: 99.45271102241848
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ; }
rank: 322
score: 99.4211181640625
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , this ) ) {
rank: 322
score: 99.41311410757211
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > Type . FUNCTION || aliasing CaMeL Gets > Type . FUNCTION ) {
rank: 322
score: 99.40618024553571
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type , Type . FUNCTION ) ) {
rank: 322
score: 99.395263671875
patch: if ( type != Type . NONE && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 )
rank: 322
score: 99.33918842516448
patch: if ( ! type . is CaMeL Empty ( ) || aliasing CaMeL Gets > 0 ) {
rank: 323
score: 99.47725053267045
patch: if ( type != Type . OTHER && global CaMeL Sets != 1 && local CaMeL Sets != 0 ) {
rank: 323
score: 99.45221625434027
patch: if ( ! ! is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 323
score: 99.44231622869319
patch: if ( declaration . get CaMeL Id ( ) != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 323
score: 99.4129638671875
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets && aliasing CaMeL Gets > 0 ) {
rank: 323
score: 99.39514923095703
patch: if ( type != Type . NONE && aliasing CaMeL Gets > 1 ) {
rank: 324
score: 99.46005249023438
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 324
score: 99.4519679857337
patch: if ( declaration . get CaMeL Twin ( ) != null || ! is CaMeL Class CaMeL Or CaMeL Enum )
rank: 324
score: 99.42103271484375
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , null ) ) {
rank: 324
score: 99.39511108398438
patch: if ( type . type != Type . FUNCTION && type . type != Type . FUNCTION ) {
rank: 324
score: 99.33875621448864
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets == FUNCTION ) {
rank: 325
score: 99.47709825303819
patch: if ( ( type != Type . FUNCTION && global CaMeL Sets != 0 ) ) {
rank: 325
score: 99.45954695991848
patch: if ( declaration == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) {
rank: 325
score: 99.44217051630434
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( $STRING$ ) ) {
rank: 325
score: 99.43010147758152
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets ( 0 ) ) {
rank: 325
score: 99.42085571289063
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return ) ;
rank: 325
score: 99.41270228794643
patch: if ( aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets . is CaMeL Empty ( ) ) {
rank: 325
score: 99.40567016601562
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return $STRING$ ; }
rank: 325
score: 99.39490966796875
patch: if ( type != Type . FUNCTION && ! type . equals ( Type . NULL ) ) {
rank: 326
score: 99.44211744225544
patch: if ( element == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 0 ) ) {
rank: 326
score: 99.42991638183594
patch: if ( type & Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 326
score: 99.420703125
patch: if ( declaration . get CaMeL Twin ( ) != 1 || aliasing CaMeL Gets > 0 )
rank: 326
score: 99.41241455078125
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > Type . FUNCTION ) {
rank: 326
score: 99.40475124782986
patch: if ( true && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 326
score: 99.3947986421131
patch: if ( type . get CaMeL Type ( ) == Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 326
score: 99.33851382606908
patch: if ( type == Type . FUNCTION && ! type . is CaMeL Local ( ) ) {
rank: 327
score: 99.45919799804688
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , parent ) ) {
rank: 327
score: 99.45112047697368
patch: if ( type != $STRING$ && declaration . get CaMeL Twin ( ) != null ) {
rank: 327
score: 99.44196111505681
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 || aliasing CaMeL Gets > 1 ) {
rank: 327
score: 99.42975408380681
patch: if ( type != Type . FUNCTION && type != Type . PARAMETER && aliasing CaMeL Gets > 0 ) {
rank: 327
score: 99.40314684416118
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return 0 {
rank: 327
score: 99.338427734375
patch: if ( get CaMeL Type ( ) == Type . FUNCTION && type != Type . FUNCTION ) {
rank: 328
score: 99.47680053710937
patch: if ( type != Type . FUNCTION && parent . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 328
score: 99.45875040690105
patch: if ( ! parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , ) ) {
rank: 328
score: 99.450927734375
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 328
score: 99.44176715353261
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ; return false ;
rank: 328
score: 99.42975408380681
patch: if ( type != Type . FUNCTION && name != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 328
score: 99.42034040178571
patch: if ( type . is CaMeL Class CaMeL Or CaMeL Enum ( ) || aliasing CaMeL Gets > 0 )
rank: 328
score: 99.41224161783855
patch: if ( type != Type . FUNCTION && ! type . equals CaMeL Ignore CaMeL Case ( Type . FUNCTION ) ) {
rank: 328
score: 99.40289916992188
patch: if ( aliasing CaMeL Gets > Type . FUNCTION && aliasing CaMeL Gets != Type . FUNCTION ) {
rank: 328
score: 99.39402860753677
patch: if ( type != Type . FUNCTION && ( aliasing CaMeL Gets > 0 ) )
rank: 328
score: 99.3382797241211
patch: if ( element != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 329
score: 99.47626953125
patch: if ( ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 329
score: 99.45866255326705
patch: if ( declaration . get CaMeL Type ( ) == Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 329
score: 99.45077659970238
patch: if ( type == Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { return false ;
rank: 329
score: 99.42023577008929
patch: if ( ! declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return true ;
rank: 329
score: 99.39391508556548
patch: if ( type != Type . NONE && type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 329
score: 99.33772583007813
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets ) {
rank: 330
score: 99.47564142400569
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) || ( global CaMeL Sets != 0 ) ) {
rank: 330
score: 99.45064113451087
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum )
rank: 330
score: 99.4292879971591
patch: if ( node . get CaMeL Type ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 330
score: 99.42011951264881
patch: if ( root == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 330
score: 99.39364769345238
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 , aliasing CaMeL Gets > 0 )
rank: 330
score: 99.33756103515626
patch: if ( type != Type . FUNCTION && ! ! ( type == Type . FUNCTION ) ) {
rank: 331
score: 99.45060424804687
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) return true ;
rank: 331
score: 99.42009887695312
patch: if ( aliasing CaMeL Gets > 0 || ( is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 331
score: 99.39348401521382
patch: if ( type != Type . FUNCTION && type . ends CaMeL With ( $STRING$ ) ) {
rank: 331
score: 99.33706665039062
patch: if ( name == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 332
score: 99.47510875355114
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 && local CaMeL Sets != null ) {
rank: 332
score: 99.45010579427084
patch: if ( ! aliasing CaMeL Gets > 0 ) { return false ; }
rank: 332
score: 99.44136379076087
patch: if ( parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) false ) {
rank: 332
score: 99.4117098721591
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets instanceof Type ) {
rank: 332
score: 99.40152587890626
patch: if ( parent != null && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 332
score: 99.33649645353618
patch: if ( ( type != Type . FUNCTION ) || ( type != Type . FUNCTION ) )
rank: 333
score: 99.45620548023896
patch: if ( ! type . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 333
score: 99.449951171875
patch: if ( global CaMeL Sets != 0 && declaration . get CaMeL Twin ( ) != null ) {
rank: 333
score: 99.44123641304348
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { {
rank: 333
score: 99.4285555752841
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ || aliasing CaMeL Gets > $NUMBER$ ) {
rank: 333
score: 99.41995399876645
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( this ) ) {
rank: 333
score: 99.40120152064732
patch: if ( type != FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 333
score: 99.33592465049342
patch: if ( ! type . is CaMeL Primitive ( ) && aliasing CaMeL Gets > 0 ) {
rank: 334
score: 99.4748202237216
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || ( is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 334
score: 99.45616658528645
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { ) {
rank: 334
score: 99.4497429342831
patch: if ( type != Type . TYPE && ! aliasing CaMeL Gets > 0 ) {
rank: 334
score: 99.4402492357337
patch: if ( parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , ) ) {
rank: 334
score: 99.4284031080163
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets ( type ) ) {
rank: 334
score: 99.41937255859375
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) return true ;
rank: 334
score: 99.41152121803977
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets == 1 ) {
rank: 334
score: 99.40085018382354
patch: if ( ! type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 334
score: 99.33510335286458
patch: if ( type != Type . FUNCTION || ( type != Type . FUNCTION ) ) {
rank: 335
score: 99.4747543334961
patch: if ( type == Type . FUNCTION || global CaMeL Sets != 0 ) {
rank: 335
score: 99.44969540550595
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && global CaMeL Sets != 0 )
rank: 335
score: 99.42833362926136
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ && aliasing CaMeL Gets > 1 ) {
rank: 335
score: 99.4191650390625
patch: if ( type != Type . FUNCTION && parent . get CaMeL Twin ( ) != null )
rank: 335
score: 99.4111328125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ && aliasing CaMeL Gets == 0 ) {
rank: 335
score: 99.39179920014881
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets < 0 )
rank: 335
score: 99.33502875434027
patch: if ( aliasing CaMeL Gets ( aliasing CaMeL Gets ( type ) ) > 0 ) {
rank: 336
score: 99.45546468098958
patch: if ( type equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 336
score: 99.4494861421131
patch: if ( type != null || type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum )
rank: 336
score: 99.42832728794643
patch: if ( type instanceof Type && aliasing CaMeL Gets > 0 ) {
rank: 336
score: 99.4191650390625
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , false ) ) {
rank: 336
score: 99.399853515625
patch: if ( type != Type . FUNCTION > Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 336
score: 99.39169311523438
patch: if ( type == Type . NULL && ! type . equals ( Type . FUNCTION ) ) {
rank: 336
score: 99.33454047309027
patch: if ( ( type == Type . FUNCTION ) && type != Type . FUNCTION ) {
rank: 337
score: 99.47361061789773
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type != Type . FUNCTION && parent == null ) {
rank: 337
score: 99.4399181547619
patch: if ( ( parent == null ) || parent . get CaMeL Twin ( ) != null ) {
rank: 337
score: 99.41904025607639
patch: if ( filter . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 337
score: 99.41070556640625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets . equals ( type ) )
rank: 337
score: 99.39142608642578
patch: if ( type != Type . FUNCTION && type == Type . NULL ) {
rank: 337
score: 99.33447265625
patch: if ( ! ( type != Type . FUNCTION ) ) {
rank: 338
score: 99.45485432942708
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ; return false ; }
rank: 338
score: 99.44823157269022
patch: if ( type != Type . FUNCTION && can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( this ) ) {
rank: 338
score: 99.41868760850694
patch: if ( aliasing CaMeL Gets > 0 && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 338
score: 99.41070001775569
patch: if ( type != null && type != Type . FUNCTION && aliasing CaMeL Gets > aliasing CaMeL Gets ) {
rank: 338
score: 99.3988265991211
patch: if ( type != Type . 0 && aliasing CaMeL Gets > 0 ) {
rank: 338
score: 99.39140625
patch: if ( type instanceof Type ) { if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 338
score: 99.33434295654297
patch: if ( type == Type . TYPE || aliasing CaMeL Gets > 0 ) {
rank: 339
score: 99.45417586616848
patch: if ( parent . get CaMeL Twin ( ) != null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 339
score: 99.42690894717262
patch: if ( ! type . equals ( Type . FUNCTION && aliasing CaMeL Gets ( 0 ) ) ) {
rank: 339
score: 99.41849190848214
patch: if ( get CaMeL Twin ( ) != null ) { if ( aliasing CaMeL Gets > 0 )
rank: 339
score: 99.41002308238636
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets > true ) {
rank: 339
score: 99.39863666735198
patch: if ( type != Type . FUNCTION ? aliasing CaMeL Gets ( type ) : 0 ) {
rank: 339
score: 99.39118041992188
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) { return false ; }
rank: 340
score: 99.47288929332386
patch: if ( type != Type . FUNCTION && global CaMeL Sets == 0 && local CaMeL Sets != 0 ) {
rank: 340
score: 99.44775390625
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; } return false ;
rank: 340
score: 99.43966238839286
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( aliasing CaMeL Gets > 1 ) {
rank: 340
score: 99.42637939453125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets || aliasing CaMeL Gets > 0 ) {
rank: 340
score: 99.40995279947917
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets . equals ( type ) )
rank: 340
score: 99.39112490699405
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION && type == Type . FUNCTION )
rank: 340
score: 99.33403986150569
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets & $STRING$ ) {
rank: 341
score: 99.45389811197917
patch: if ( ! parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) false ) {
rank: 341
score: 99.447509765625
patch: if ( type != Type . FUNCTION || is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 341
score: 99.41811988467262
patch: if ( this . parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) ) {
rank: 341
score: 99.39774322509766
patch: if ( type != Class . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 341
score: 99.39081101190476
patch: if ( type . ( ) . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) )
rank: 342
score: 99.4718017578125
patch: if ( declaration . get CaMeL Type ( ) == Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 342
score: 99.43917713994566
patch: if ( parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 1 ) ) {
rank: 342
score: 99.42616965553977
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return aliasing CaMeL Gets > 0 ; } else {
rank: 342
score: 99.41805013020833
patch: if ( parent == 1 || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 342
score: 99.409423828125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . is CaMeL Primitive ( ) ) {
rank: 342
score: 99.39769345238095
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets 0 ) {
rank: 342
score: 99.39068603515625
patch: if ( ( type & Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 343
score: 99.4710922241211
patch: if ( type != Type . OTHER && local CaMeL Sets != 0 ) {
rank: 343
score: 99.44631060431985
patch: if ( ! parent == null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 343
score: 99.41799926757812
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( - $NUMBER$ ) ) {
rank: 343
score: 99.39763532366071
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type > Type . FUNCTION ) ) {
rank: 343
score: 99.39065551757812
patch: if ( type == Type . NONE && aliasing CaMeL Gets > 0 ) { return true ; }
rank: 343
score: 99.33336724175348
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) return true ;
rank: 344
score: 99.4462557705966
patch: if ( ! parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 344
score: 99.4091463955966
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 1 && aliasing CaMeL Gets != 0 ) {
rank: 344
score: 99.39057849702381
patch: if ( type != Type . FUNCTION && ! type . equals ( Type . FUNCTION ) ) { {
rank: 345
score: 99.47069149925595
patch: if ( type != Type . FUNCTION && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names (
rank: 345
score: 99.44614045516305
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 1 || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 345
score: 99.4386319247159
patch: if ( declaration . is CaMeL Class CaMeL Or CaMeL Enum ( ) && aliasing CaMeL Gets > 0 ) {
rank: 345
score: 99.41767810639881
patch: if ( type != null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 345
score: 99.39027622767857
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { { return true ; }
rank: 346
score: 99.45297241210938
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return ) ;
rank: 346
score: 99.44580078125
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 1 || local CaMeL Sets != 0 )
rank: 346
score: 99.43840680803571
patch: if ( ( parent == null ) && declaration . get CaMeL Twin ( ) != null ) {
rank: 346
score: 99.41756184895833
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 0 ) )
rank: 346
score: 99.40901489257813
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . is CaMeL None ( ) ) {
rank: 346
score: 99.3968505859375
patch: if ( type != Type . FUNCTION ( ) && aliasing CaMeL Gets > 0 ) {
rank: 347
score: 99.47048117897727
patch: if ( type != Type . OTHER || global CaMeL Sets != 0 || aliasing CaMeL Gets > 0 ) {
rank: 347
score: 99.45291573660714
patch: if ( declaration . get CaMeL Twin ( ) != null || global CaMeL Sets > 0 ) {
rank: 347
score: 99.44561476934524
patch: if ( local CaMeL Sets != 0 && declaration . get CaMeL Twin ( ) != null ) {
rank: 347
score: 99.42450506036931
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION || aliasing CaMeL Gets > 1 ) {
rank: 347
score: 99.41753859747024
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) return false ;
rank: 347
score: 99.33231353759766
patch: if ( type != Type . NONE || aliasing CaMeL Gets > 0 ) {
rank: 348
score: 99.47035910866477
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) && ( local CaMeL Sets != 0 ) ) {
rank: 348
score: 99.45226033528645
patch: if ( ! type . get CaMeL Twin ( ) . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 348
score: 99.43810504415761
patch: if ( node == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) {
rank: 348
score: 99.42443316915761
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( 0 ) && aliasing CaMeL Gets > 0 ) {
rank: 348
score: 99.4083835767663
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || ! aliasing CaMeL Gets == 0 ) {
rank: 348
score: 99.39634874131944
patch: if ( ( type != Type . FUNCTION ) || aliasing CaMeL Gets > 0 ) {
rank: 348
score: 99.38898577008929
patch: while ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 348
score: 99.33201768663194
patch: if ( type != Type . FUNCTION && ! ( type != Type . FUNCTION ) )
rank: 349
score: 99.46964111328126
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 ) { return false ; }
rank: 349
score: 99.45156028053977
patch: return ( parent instanceof null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 349
score: 99.44378051757812
patch: if ( type != null ) { if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 349
score: 99.43798828125
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( ) || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 349
score: 99.42430530894886
patch: if ( type != Type . FUNCTION || type == Type . FUNCTION && type == Type . FUNCTION ) {
rank: 349
score: 99.41718139648438
patch: if ( parent == null || aliasing CaMeL Gets > 0 || local CaMeL Sets != 0 ) {
rank: 349
score: 99.40805233226104
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > > 1 ) {
rank: 349
score: 99.39579050164474
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return 1 {
rank: 349
score: 99.38884626116071
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 1 && aliasing CaMeL Gets > 0 )
rank: 350
score: 99.43744187127976
patch: if ( declaration . get CaMeL Twin ( ) != null && local CaMeL Sets != null ) {
rank: 350
score: 99.4171206825658
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( $NUMBER$ ) ) {
rank: 350
score: 99.39522705078124
patch: if ( type != 0 && type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 350
score: 99.38867797851563
patch: if ( type == Type . NULL && aliasing CaMeL Gets > 0 ) { return false ; }
rank: 350
score: 99.33148484002976
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 )
rank: 351
score: 99.46864947150735
patch: if ( ( declaration . get CaMeL Twin ( ) != null ) ) {
rank: 351
score: 99.388671875
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 0 )
rank: 351
score: 99.33145904541016
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > $STRING$ ) {
rank: 352
score: 99.45001775568181
patch: if ( type != Type . FUNCTION && declaration . get CaMeL Type ( ) == Type . FUNCTION ) {
rank: 352
score: 99.44285824424342
patch: if ( declaration . get CaMeL Twin ( ) == null ) { return false ; }
rank: 352
score: 99.41682434082031
patch: if ( type != Type . IN && aliasing CaMeL Gets > 0 ) {
rank: 352
score: 99.39462280273438
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) . >= 0 ) {
rank: 352
score: 99.3885562294408
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type != Type )
rank: 352
score: 99.33067626953125
patch: if ( type != Type . FUNCTION && ! ! ( type != Type . FUNCTION ) ) {
rank: 353
score: 99.46843610491071
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return true ;
rank: 353
score: 99.45001220703125
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; try {
rank: 353
score: 99.44280646829044
patch: if ( type != Type . FUNCTION && ! global CaMeL Sets == 0 ) {
rank: 353
score: 99.42345081676136
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets : 0 ) {
rank: 353
score: 99.41668701171875
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , 0 ) ) {
rank: 354
score: 99.46842817826705
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum && is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 354
score: 99.43636421535327
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( n ) ) {
rank: 354
score: 99.42341414741848
patch: if ( type != Type . FUNCTION && type . get CaMeL Name ( ) . length ( ) > 0 )
rank: 354
score: 99.41641235351562
patch: try { return ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 354
score: 99.4075343919837
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || ! aliasing CaMeL Gets != 0 ) {
rank: 354
score: 99.39437063116776
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets [ 0 ] != 0 ) {
rank: 355
score: 99.46790161132813
patch: if ( type != Type . FUNCTION && global CaMeL Sets . size ( ) == 0 ) {
rank: 355
score: 99.44966457201087
patch: if ( type . get CaMeL Twin ( ) != null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 355
score: 99.44241333007812
patch: if ( declaration != null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 355
score: 99.4233929177989
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets < 0 ) {
rank: 355
score: 99.38846435546876
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 1 ) { return true ; }
rank: 355
score: 99.32913208007812
patch: if ( type == Type . FUNCTION || type != Type . NULL ) {
rank: 356
score: 99.4678955078125
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 1 || aliasing CaMeL Gets > 0 ) {
rank: 356
score: 99.4496561686198
patch: if ( ! parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 0 ) ) {
rank: 356
score: 99.41546309621711
patch: else if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 356
score: 99.406982421875
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets == 0 ) {
rank: 356
score: 99.39375232514881
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type == Type . FUNCTION ) ) {
rank: 357
score: 99.44962565104167
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; break ;
rank: 357
score: 99.44150797526042
patch: if ( type != null || declaration . get CaMeL Twin ( ) != null )
rank: 357
score: 99.43433837890625
patch: if ( declaration . parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 357
score: 99.42319946289062
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( type != Type . FUNCTION )
rank: 357
score: 99.41537957442434
patch: if ( get CaMeL Twin ( ) != 1 || aliasing CaMeL Gets > 0 ) {
rank: 357
score: 99.40657958984374
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . is CaMeL Local ( ) ) {
rank: 357
score: 99.39361572265625
patch: if ( type != Reference . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 357
score: 99.38758760340073
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION ) { {
rank: 357
score: 99.32875569661458
patch: if ( ! type . is CaMeL Instance ( aliasing CaMeL Gets > 0 ) ) {
rank: 358
score: 99.43430494225544
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ] ) ) {
rank: 358
score: 99.42256496263587
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { {
rank: 358
score: 99.41461791992188
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , declaration ) ) {
rank: 358
score: 99.406279296875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets . equals ( $STRING$ ) ) {
rank: 358
score: 99.3284912109375
patch: if ( ! type . is CaMeL Primitive ( ) ) {
rank: 359
score: 99.44890802556819
patch: if ( declaration . get CaMeL Type ( ) != Type . FUNCTION && global CaMeL Sets > 0 ) {
rank: 359
score: 99.44140625
patch: if ( ! global CaMeL Sets != 0 || declaration . get CaMeL Twin ( ) != null ) {
rank: 359
score: 99.42220458984374
patch: if ( type != Type . FUNCTION | Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 359
score: 99.41434972426471
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && aliasing CaMeL Gets > 0 )
rank: 359
score: 99.40620561079545
patch: if ( type != Type . MIN && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 359
score: 99.38687472873264
patch: if ( type . is CaMeL Interface ( ) && aliasing CaMeL Gets > 0 ) {
rank: 359
score: 99.32842339409723
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) return null ;
rank: 360
score: 99.42216491699219
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( 0 ) )
rank: 360
score: 99.41434518914474
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , this ) )
rank: 360
score: 99.39321899414062
patch: if ( type != Type . FUNCTION ? aliasing CaMeL Gets > 0 ) {
rank: 360
score: 99.38646240234375
patch: if ( type != Type . FUNCTION && type . equals ( Type . FUNCTION ) ) { {
rank: 361
score: 99.46732177734376
patch: if ( global CaMeL Sets . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 361
score: 99.44108501233552
patch: if ( ! type . is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 361
score: 99.43407141644022
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || declaration . get CaMeL Twin ( ) == null ) {
rank: 361
score: 99.42215576171876
patch: if ( node != null && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 361
score: 99.41420491536458
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) return false ;
rank: 361
score: 99.40596147017045
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > FUNCTION || aliasing CaMeL Gets == FUNCTION ) {
rank: 361
score: 99.39248657226562
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets ) {
rank: 361
score: 99.38644205729166
patch: if ( type != Type . NONE && aliasing CaMeL Gets > 0 )
rank: 361
score: 99.32729957217262
patch: if ( type != Type . FUNCTION && ! ! type . equals ( Type . FUNCTION ) ) {
rank: 362
score: 99.46730259486607
patch: if ( type != Type . FUNCTION && parent != null ) {
rank: 362
score: 99.43398215553977
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 || local CaMeL Sets != null ) {
rank: 362
score: 99.41339721679688
patch: if ( declaration . get CaMeL Twin ( ) != null || aliasing CaMeL Gets > 1 )
rank: 362
score: 99.39226973684211
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return ) ;
rank: 362
score: 99.38571166992188
patch: if ( type != Type . FUNCTION && type != Type . EMPTY ) {
rank: 362
score: 99.32708418996711
patch: if ( ! ( type == Type . FUNCTION || type != Type . FUNCTION ) ) {
rank: 363
score: 99.44807942708333
patch: if ( ( parent == null ) || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 363
score: 99.44068545386905
patch: if ( type != null ) { if ( type . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 363
score: 99.43392280910327
patch: if ( declaration . get CaMeL Twin ( ) == Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 363
score: 99.32703993055556
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > aliasing CaMeL Gets ) {
rank: 364
score: 99.46659712357955
patch: if ( type == Type . FUNCTION && global CaMeL Sets != 0 && aliasing CaMeL Gets > 0 ) {
rank: 364
score: 99.4338909646739
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return true ; return true ;
rank: 364
score: 99.42101469494048
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . starts CaMeL With ( $STRING$ ) ) {
rank: 364
score: 99.41313733552632
patch: if ( parent == null || declaration . get CaMeL Twin ( ) == null ) {
rank: 364
score: 99.40586344401042
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . contains ( type ) )
rank: 364
score: 99.38522820723684
patch: if ( type . equals ( Type . NULL && aliasing CaMeL Gets > 0 ) ) {
rank: 364
score: 99.32681978665866
patch: if ( ! ( type == Type . FUNCTION ) ) {
rank: 365
score: 99.46646781589673
patch: if ( declaration . get CaMeL Twin ( ) != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 365
score: 99.4404296875
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 && is CaMeL Class CaMeL Or CaMeL Enum )
rank: 365
score: 99.4205810546875
patch: if ( ! type . equals ( Type . FUNCTION ) || aliasing CaMeL Gets > 0 ) {
rank: 365
score: 99.40580669202302
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets . contains ( type ) ) {
rank: 365
score: 99.38502807617188
patch: if ( ! type != Type . FUNCTION && ! type . equals ( Type . FUNCTION ) )
rank: 366
score: 99.44666544596355
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ; return true ; }
rank: 366
score: 99.44038471422698
patch: if ( type != null || is CaMeL Class CaMeL Or CaMeL Enum ) { return false ;
rank: 366
score: 99.405712890625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets . equals ( $NUMBER$ ) ) {
rank: 366
score: 99.39155016447368
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) > 1 ) {
rank: 366
score: 99.3844058388158
patch: if ( name . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 366
score: 99.32616024925595
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 )
rank: 367
score: 99.433349609375
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( name ) ) {
rank: 367
score: 99.39071800595238
patch: if ( ! type . equals ( Type . FUNCTION && aliasing CaMeL Gets ( type ) ) ) {
rank: 367
score: 99.38400448069854
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) { {
rank: 367
score: 99.32549085115132
patch: if ( type != Type . FUNCTION && ! type . is CaMeL All ( ) ) {
rank: 368
score: 99.46571044921875
patch: if ( ( local CaMeL Sets != 0 ) || ( local CaMeL Sets != 0 ) ) {
rank: 368
score: 99.43320534446023
patch: if ( declaration . get CaMeL Twin ( ) . get CaMeL Twin ( ) != 0 ) {
rank: 368
score: 99.40520368303571
patch: if ( type != null && type != Type . FUNCTION ) {
rank: 368
score: 99.39066569010417
patch: if ( false && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 368
score: 99.38346724076705
patch: if ( type != Type . FUNCTION && type {
rank: 369
score: 99.44541422526042
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 0 ) {
rank: 369
score: 99.43269428453948
patch: if ( parent == null || parent . get CaMeL Twin ( ) == null ) {
rank: 369
score: 99.4202190896739
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets ( type ) ) {
rank: 369
score: 99.41175537109375
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , true ) ) {
rank: 369
score: 99.39052862870066
patch: if ( ! ( type != Type . FUNCTION ) && aliasing CaMeL Gets > 0 ) {
rank: 369
score: 99.3834292763158
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( aliasing CaMeL Gets ) ) {
rank: 369
score: 99.32489013671875
patch: if ( type == Type . FUNCTION || get CaMeL Type ( ) == Type . FUNCTION ) {
rank: 370
score: 99.41996626420455
patch: if ( type != Type . FUNCTION && type . get CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 370
score: 99.39042833116319
patch: if ( aliasing CaMeL Gets ( type && aliasing CaMeL Gets ( type ) ) ) {
rank: 370
score: 99.38314480251736
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && ! ) {
rank: 371
score: 99.43996710526316
patch: if ( declaration != null && declaration . get CaMeL Twin ( ) != null ) {
rank: 371
score: 99.43235181725544
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) , ) {
rank: 371
score: 99.41135125411184
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) break ;
rank: 371
score: 99.4046963778409
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 1 ) {
rank: 371
score: 99.38981323242187
patch: if ( type != Type . FUNCTION ) { if ( aliasing CaMeL Gets ( type ) ) {
rank: 371
score: 99.32429334852431
patch: if ( ( type != Type . FUNCTION ) || type != Type . FUNCTION ) {
rank: 372
score: 99.44462585449219
patch: if ( ( parent == null ) || aliasing CaMeL Gets > 0 ) {
rank: 372
score: 99.41113891601563
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { ) {
rank: 372
score: 99.32425944010417
patch: if ( ( type == Type . FUNCTION ) && type == Type . FUNCTION ) {
rank: 373
score: 99.4647549715909
patch: if ( type != Type . FUNCTION && parent . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 373
score: 99.44453938802083
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , false ) ) ;
rank: 373
score: 99.43184230638587
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( parent ) ) ;
rank: 373
score: 99.41886763139205
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets > 0 )
rank: 373
score: 99.41058028371711
patch: if ( parent . . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 373
score: 99.38939819335937
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { / * * /
rank: 373
score: 99.3241954985119
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets ) {
rank: 374
score: 99.4647549715909
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 1 && global CaMeL Sets != 0 ) {
rank: 374
score: 99.44432237413194
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type != Type . FUNCTION ) {
rank: 374
score: 99.43885633680556
patch: if ( declaration . get CaMeL Id ( ) != null ) { return false ; }
rank: 374
score: 99.43152386209239
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( $NUMBER$ ) ) ;
rank: 374
score: 99.4187899502841
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) { if ( type == Type . FUNCTION ) {
rank: 374
score: 99.4042331861413
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets != 0 ) {
rank: 374
score: 99.38936574835526
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( 0 ) > 0 ) {
rank: 374
score: 99.38198852539062
patch: if ( type != Type . NONE && type != Type . FUNCTION ) {
rank: 374
score: 99.32403273809524
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 )
rank: 375
score: 99.46449973366477
patch: if ( type != Type . FUNCTION && global CaMeL Sets != null && aliasing CaMeL Gets > 0 ) {
rank: 375
score: 99.40997314453125
patch: if ( parent != null || aliasing CaMeL Gets > 0 ) {
rank: 375
score: 99.38911518297698
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ( ) ) ) {
rank: 375
score: 99.38185628255208
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Interface ( ) )
rank: 376
score: 99.41855256453805
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return aliasing CaMeL Gets > 0 ) ; } else {
rank: 376
score: 99.40984143708882
patch: if ( ! this . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 376
score: 99.38910202752976
patch: if ( true ) { if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 376
score: 99.32392963610198
patch: if ( type != Type . FUNCTION && ( ! aliasing CaMeL Gets > 0 ) ) {
rank: 377
score: 99.43782182173295
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( this ) )
rank: 377
score: 99.43057105654762
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ; }
rank: 377
score: 99.409423828125
patch: / / if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 377
score: 99.38907877604167
patch: if ( ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) || > 0 ) {
rank: 378
score: 99.46296830610795
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 378
score: 99.4303311434659
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 1 || aliasing CaMeL Gets > 0 ) {
rank: 378
score: 99.41738493546195
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets > 0 ) {
rank: 378
score: 99.40344819568452
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION || aliasing CaMeL Gets > ) {
rank: 378
score: 99.38900146484374
patch: if ( type != null || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 378
score: 99.38135375976563
patch: if ( type . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) { {
rank: 379
score: 99.43773352581522
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && is CaMeL Class CaMeL Or CaMeL Enum ) { return true ;
rank: 379
score: 99.40879991319444
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , ) )
rank: 379
score: 99.40342646059783
patch: if ( type != Type . FUNCTION && this . type != Type . FUNCTION && aliasing CaMeL Gets > ) {
rank: 379
score: 99.38116096047794
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type {
rank: 380
score: 99.46245783025569
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 380
score: 99.41714079483695
patch: if ( type != Type . FUNCTION && ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) )
rank: 380
score: 99.408544921875
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { {
rank: 380
score: 99.40282093394886
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return false ; } else {
rank: 380
score: 99.38108607700893
patch: if ( aliasing CaMeL Gets > 0 ) { return true ; }
rank: 380
score: 99.3218635110294
patch: } if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 381
score: 99.43724476207386
patch: if ( type != null ) { if ( ! type . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 381
score: 99.43000594429348
patch: if ( declaration . get CaMeL Twin ( ) != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 381
score: 99.41690402560764
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets $NUMBER$ 0 > 0 ) {
rank: 381
score: 99.40808823529412
patch: if ( get CaMeL Twin ( ) != null ) { return false ; }
rank: 381
score: 99.40259765625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets == 0 && aliasing CaMeL Gets . equals ( 0 ) ) {
rank: 381
score: 99.38888389185855
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type , 0 ) ) {
rank: 381
score: 99.38091278076172
patch: if ( aliasing CaMeL Gets > 0 ) { return true ; } else {
rank: 381
score: 99.32175903320312
patch: if ( ! type . equals ( Type . FUNCTION && type == Type . FUNCTION ) ) {
rank: 382
score: 99.43708038330078
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) { return true ;
rank: 382
score: 99.41677024147727
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) { type = Type . FUNCTION ;
rank: 382
score: 99.40789794921875
patch: if ( parent . get CaMeL Twin ( ) != null ) { return false ;
rank: 382
score: 99.38849198190789
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets {
rank: 382
score: 99.38011678059895
patch: if ( type != Type . FUNCTION && type ) {
rank: 382
score: 99.32112884521484
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > null ) {
rank: 383
score: 99.4370647927989
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , true ) )
rank: 383
score: 99.42985395951705
patch: try { return parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ;
rank: 383
score: 99.40237426757812
patch: if ( ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) && aliasing CaMeL Gets == 0 ) {
rank: 383
score: 99.3801025390625
patch: if ( type != Type . NULL && ! type . equals ( Type . NULL ) ) {
rank: 383
score: 99.32106646369485
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets != null ) {
rank: 384
score: 99.43688246783088
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ) {
rank: 384
score: 99.40771484375
patch: if ( type == Type . FUNCTION && get CaMeL Twin ( ) != null ) {
rank: 384
score: 99.38818359375
patch: if ( ! aliasing CaMeL Gets ( type && aliasing CaMeL Gets ( type ) ) ) {
rank: 384
score: 99.37970581054688
patch: if ( ! aliasing CaMeL Gets > 0 ) { if ( aliasing CaMeL Gets > 0 ) {
rank: 384
score: 99.32079315185547
patch: if ( aliasing CaMeL Gets > 0 || aliasing CaMeL Gets == 0 ) {
rank: 385
score: 99.4620028409091
patch: if ( type != Type . OTHER || global CaMeL Sets != 0 && aliasing CaMeL Gets > 0 ) {
rank: 385
score: 99.41609700520833
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets . 0 > 0 ) {
rank: 385
score: 99.40756405101104
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 385
score: 99.40216619318181
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == null ) {
rank: 385
score: 99.38816833496094
patch: if ( type != Object . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 385
score: 99.37936883223684
patch: if ( type != Type . EMPTY && type . equals ( Type . FUNCTION ) ) {
rank: 386
score: 99.43994140625
patch: if ( type != Type . FUNCTION && global CaMeL Sets > 0 && local CaMeL Sets != 0 ) {
rank: 386
score: 99.43679970189145
patch: if ( type != null || is CaMeL Class CaMeL Or CaMeL Enum ) { return true ;
rank: 386
score: 99.42931598165761
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( type ) ) ;
rank: 386
score: 99.40687662760416
patch: if ( parent . get CaMeL Twin ( ) != 1 ) {
rank: 386
score: 99.40208851207386
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || aliasing CaMeL Gets > false ) {
rank: 386
score: 99.38791910807292
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! ) {
rank: 386
score: 99.37921820746527
patch: if ( type != Type . FUNCTION || ( aliasing CaMeL Gets > 0 ) ) {
rank: 387
score: 99.46184747869319
patch: if ( type . get CaMeL Type ( ) != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 387
score: 99.43987073396382
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum || aliasing CaMeL Gets > 0 ) {
rank: 387
score: 99.43675994873047
patch: if ( type != $STRING$ && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 387
score: 99.41589886209239
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets > 0 ) {
rank: 387
score: 99.38787231445312
patch: if ( type == null && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 387
score: 99.37880859375
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ )
rank: 387
score: 99.31980590820312
patch: if ( ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) && false ) {
rank: 388
score: 99.42914373224431
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 1 ) {
rank: 388
score: 99.40207741477273
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets > null ) {
rank: 388
score: 99.38766961348684
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type != ) {
rank: 388
score: 99.37879854090073
patch: if ( type == Type . FUNCTION && $STRING$ . equals ( type ) ) {
rank: 388
score: 99.3183657997533
patch: if ( ( type != Type . FUNCTION ) && ( type != Type . FUNCTION ) )
rank: 389
score: 99.46080961681548
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 && local CaMeL Sets != 0 )
rank: 389
score: 99.43946475074405
patch: return parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ; }
rank: 389
score: 99.42869984019886
patch: if ( declaration . is CaMeL Class CaMeL Or CaMeL Enum ( ) || aliasing CaMeL Gets > 0 ) {
rank: 389
score: 99.40608938116776
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( parent == null ) {
rank: 389
score: 99.40206909179688
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . get CaMeL Type ( ) != Type . FUNCTION ) {
rank: 390
score: 99.46064897017045
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 || local CaMeL Sets > 0 ) {
rank: 390
score: 99.43899668817934
patch: if = ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 390
score: 99.42866847826087
patch: if ( declaration . get CaMeL Twin ( ) != null && ( aliasing CaMeL Gets > 0 ) ) {
rank: 390
score: 99.4059814453125
patch: if ( ! ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) )
rank: 390
score: 99.37867431640625
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return aliasing CaMeL Gets > 0 ; }
rank: 390
score: 99.31705050998264
patch: if ( type != Type . FUNCTION && ! is CaMeL Name ( type ) ) {
rank: 391
score: 99.43891834077381
patch: if ( type != Type . FUNCTION && declaration . get CaMeL Twin ( ) != 1 ) {
rank: 391
score: 99.43551296657986
patch: if ( type . is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 391
score: 99.42788298233695
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return true ; return false ;
rank: 391
score: 99.4053726196289
patch: if ( parent . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 391
score: 99.38660386029412
patch: if ( type != != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 391
score: 99.3786685341283
patch: if ( type . equals ( Type . FUNCTION ) && type != Type . FUNCTION ) {
rank: 391
score: 99.31693950452302
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Name ( ) ) {
rank: 392
score: 99.4353558084239
patch: if ( type != Type . FUNCTION && type . is CaMeL Class CaMeL Or CaMeL Enum ) { return false ;
rank: 392
score: 99.414306640625
patch: if ( type CaMeL Name . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 392
score: 99.40525987413194
patch: if ( get CaMeL Twin ( ) != null && aliasing CaMeL Gets > 0 )
rank: 392
score: 99.4013671875
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION || aliasing CaMeL Gets > true ) {
rank: 392
score: 99.37832845052084
patch: if ( type == Type . NULL && aliasing CaMeL Gets > 0 )
rank: 393
score: 99.45915985107422
patch: if ( type != Type . FUNCTION || local CaMeL Sets != 0 ) {
rank: 393
score: 99.43528053977273
patch: if ( type != Type . FUNCTION && ! global CaMeL Sets . is CaMeL Class CaMeL Or CaMeL Enum )
rank: 393
score: 99.41399591619319
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Assignable CaMeL From ( type ) ) {
rank: 393
score: 99.37832159745066
patch: if ( type . get CaMeL Type CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 393
score: 99.31605360243056
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 ) return false ;
rank: 394
score: 99.43519176136364
patch: if ( type != Type . NOT && is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 394
score: 99.40380859375
patch: if ( parent == null || parent . get CaMeL Twin ( ) != null )
rank: 394
score: 99.37828911675348
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( ) > 0 ) {
rank: 395
score: 99.4587735262784
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 || local CaMeL Sets != 1 ) {
rank: 395
score: 99.43832542782738
patch: if ( declaration . get CaMeL Twin ( ) != 1 || local CaMeL Sets != 0 ) {
rank: 395
score: 99.43503639914773
patch: if ( type != Type . NAME && is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 395
score: 99.41380774456522
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( ! is CaMeL Class CaMeL Or CaMeL Enum )
rank: 395
score: 99.403759765625
patch: if ( ! ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) )
rank: 395
score: 99.40085671164773
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > null && aliasing CaMeL Gets == null ) {
rank: 395
score: 99.38583519345238
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets ) {
rank: 395
score: 99.37825317382813
patch: if ( type == Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 395
score: 99.31511840820312
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets ) {
rank: 396
score: 99.41336220189145
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . size ( ) > 0 )
rank: 396
score: 99.40331313189338
patch: if ( declaration . get CaMeL Twin ( ) != null ) return true ;
rank: 396
score: 99.378125
patch: if ( type != Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum ) { {
rank: 396
score: 99.31501007080078
patch: if ( element == Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 397
score: 99.45799424913194
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || false ) {
rank: 397
score: 99.43797302246094
patch: if ( type == Type . FUNCTION && global CaMeL Sets > 0 ) {
rank: 397
score: 99.4342373934659
patch: if ( type != Type . FUNCTION || is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 397
score: 99.42721354166666
patch: if ( declaration . get CaMeL Twin ( ) != 0 ) {
rank: 397
score: 99.41252136230469
patch: if ( type != Type . MIN && aliasing CaMeL Gets > 0 ) {
rank: 397
score: 99.40311472039474
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) continue ;
rank: 397
score: 99.38491675967262
patch: if ( type != Type . FUNCTION && type > Type . FUNCTION && aliasing CaMeL Gets > ) {
rank: 397
score: 99.3779296875
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type != Type ) {
rank: 397
score: 99.31409409466912
patch: if ( type == Type . FUNCTION || ! aliasing CaMeL Gets > 0 ) {
rank: 398
score: 99.437255859375
patch: if ( type != Type . FUNCTION && declaration . get CaMeL Parent ( ) != null ) {
rank: 398
score: 99.41156560724431
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets ( 0 ) )
rank: 398
score: 99.4029541015625
patch: if ( get CaMeL Twin ( ) . get CaMeL Twin ( ) != null )
rank: 398
score: 99.37737274169922
patch: return ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) ;
rank: 398
score: 99.31391143798828
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > $STRING$ ) {
rank: 399
score: 99.43401544744319
patch: if ( type != Type . TYPE && global CaMeL Sets != 0 || local CaMeL Sets != 0 ) {
rank: 399
score: 99.42657791940789
patch: if ( parent == null && parent . get CaMeL Twin ( ) != null ) {
rank: 399
score: 99.40281275699013
patch: if ( type != Type . FUNCTION && ( is CaMeL Class CaMeL Or CaMeL Enum ) )
rank: 399
score: 99.38487025669643
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type , type ) > 0 ) {
rank: 399
score: 99.37732543945313
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( aliasing CaMeL Gets > 0 ) )
rank: 399
score: 99.31368215460526
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Declared ( ) ) {
rank: 400
score: 99.4568099975586
patch: if ( type != Type . OTHER && global CaMeL Sets != 1 ) {
rank: 400
score: 99.43401489257812
patch: if ( ! parent == null || declaration . get CaMeL Twin ( ) != null ) {
rank: 400
score: 99.42646716889881
patch: if ( declaration . get CaMeL Twin ( ) . get CaMeL Count ( ) == 0 ) {
rank: 400
score: 99.40247938368056
patch: if ( root . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 400
score: 99.39974975585938
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets . contains ( type ) )
rank: 400
score: 99.38473849826389
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 . 1 ) {
rank: 400
score: 99.37699890136719
patch: if ( scope != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 400
score: 99.31318969726563
patch: if ( type != Type . NULL ) {
rank: 401
score: 99.43390655517578
patch: if ( type != Type . T && aliasing CaMeL Gets > 0 ) {
rank: 401
score: 99.41087757457386
patch: if ( aliasing CaMeL Gets > 0 ) { if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 401
score: 99.402099609375
patch: if ( parent == null || type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 401
score: 99.37678833007813
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) { return true ; }
rank: 401
score: 99.31312561035156
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > $STRING$ ) {
rank: 402
score: 99.45631045386905
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( local CaMeL Sets != 0 ) {
rank: 402
score: 99.41086744225544
patch: } if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 402
score: 99.401806640625
patch: if ( parent . get CaMeL Twin ( ) != null && aliasing CaMeL Gets > 0 )
rank: 402
score: 99.3995694247159
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || aliasing CaMeL Gets > type ) {
rank: 402
score: 99.3767578125
patch: if ( type == Type . FUNCTION && type . get CaMeL Name ( ) == null ) {
rank: 402
score: 99.31185574001736
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) return true ;
rank: 403
score: 99.45604407269022
patch: if ( type != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { }
rank: 403
score: 99.42588404605263
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) false ) {
rank: 403
score: 99.41024925595238
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { aliasing CaMeL Gets ++ ;
rank: 403
score: 99.40147094726562
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { }
rank: 403
score: 99.39943440755208
patch: if ( ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) && aliasing CaMeL Gets != 0 ) {
rank: 403
score: 99.38327462332589
patch: if ( type != 0 && aliasing CaMeL Gets > 0 ) {
rank: 403
score: 99.31178685238487
patch: if ( type == Type . FUNCTION && ( ! aliasing CaMeL Gets > 0 ) ) {
rank: 404
score: 99.43336123511905
patch: if ( type != null || ! type . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 404
score: 99.40131225585938
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , $STRING$ ) ) {
rank: 404
score: 99.3992587002841
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 1 ) {
rank: 404
score: 99.38265830592105
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! 0 ) {
rank: 404
score: 99.37557180304276
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; } else {
rank: 405
score: 99.45589447021484
patch: if ( type == Type . FUNCTION && local CaMeL Sets != 0 ) {
rank: 405
score: 99.42549272017045
patch: if ( type != Type . TYPE && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 0 ) {
rank: 405
score: 99.40953369140625
patch: if ( type == Type . FUNCTION | Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 405
score: 99.4012386924342
patch: try { if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 405
score: 99.37552897135417
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type ) {
rank: 405
score: 99.31127251519098
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > aliasing CaMeL Gets ) {
rank: 406
score: 99.40950317382813
patch: if ( type instanceof Type || type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 406
score: 99.40121459960938
patch: if ( node . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ;
rank: 406
score: 99.39856567382813
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type != null ) {
rank: 406
score: 99.38150024414062
patch: if ( ! type . is CaMeL Empty ( ) && ! aliasing CaMeL Gets > 0 ) {
rank: 406
score: 99.37549546185662
patch: if ( type != Type . EMPTY && ! aliasing CaMeL Gets > 0 ) {
rank: 407
score: 99.43300993546195
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , declaration ) )
rank: 407
score: 99.39845904181985
patch: if ( ! type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 407
score: 99.3809750205592
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type , false ) ) {
rank: 407
score: 99.37530517578125
patch: if ( type != Type . TRUE && aliasing CaMeL Gets > 0 ) {
rank: 408
score: 99.43412272135417
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && global CaMeL Sets > 0 ) {
rank: 408
score: 99.43296595982143
patch: if ( type == Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { return true ;
rank: 408
score: 99.42526112432066
patch: try { return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 408
score: 99.38091077302632
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 . > 0 ) {
rank: 408
score: 99.31043158637152
patch: if ( aliasing CaMeL Gets ( aliasing CaMeL Gets ( type ) ) != null ) {
rank: 409
score: 99.45523681640626
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 || parent == null ) {
rank: 409
score: 99.425048828125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 || parent == null ) {
rank: 409
score: 99.40884254092262
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets . ) {
rank: 409
score: 99.4008853310033
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( null ) ) {
rank: 409
score: 99.398193359375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . is CaMeL Empty ( ) ) { return false ; }
rank: 409
score: 99.38077799479167
patch: if ( ! aliasing CaMeL Gets > 0 && aliasing CaMeL Gets . > 0 ) {
rank: 409
score: 99.37489947150735
patch: if ( type == Type . FUNCTION && ! is CaMeL Interface ( ) ) {
rank: 409
score: 99.30991724917763
patch: if ( ( type != Type . FUNCTION ) && ( type == Type . FUNCTION ) )
rank: 410
score: 99.45355515252976
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 410
score: 99.43300083705357
patch: if ( parent == null || parent . declaration . get CaMeL Twin ( ) != null ) {
rank: 410
score: 99.43256170099431
patch: if ( type != Type . NAME && is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 410
score: 99.40064239501953
patch: if ( parent != null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 410
score: 99.39736938476562
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) && aliasing CaMeL Gets ( type ) ) {
rank: 410
score: 99.37447959498355
patch: if ( aliasing CaMeL Gets > 0 ) { if ( type == Type . FUNCTION ) {
rank: 410
score: 99.30980834960937
patch: if ( type == Type . FUNCTION && ! ! ( type == Type . FUNCTION ) ) {
rank: 411
score: 99.43250042459239
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 1 || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 411
score: 99.42473493303571
patch: if ( declaration . get CaMeL Twin ( ) . get CaMeL Count ( ) > 0 ) {
rank: 411
score: 99.40056762695312
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( local CaMeL Sets ) )
rank: 411
score: 99.39727228338069
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) . equals ( FUNCTION ) ) {
rank: 411
score: 99.30963897705078
patch: if ( name == Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 412
score: 99.432373046875
patch: if ( type != Type . FUNCTION && get CaMeL Twin ( ) != null )
rank: 412
score: 99.4247055053711
patch: if ( type != Type . TYPE && aliasing CaMeL Gets > 1 ) {
rank: 412
score: 99.40801239013672
patch: if ( type != Type . EMPTY || aliasing CaMeL Gets > 0 ) {
rank: 412
score: 99.40055541992187
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( null ) ) {
rank: 412
score: 99.39683466372283
patch: if ( ! type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 412
score: 99.380615234375
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets > Type . FUNCTION ) {
rank: 412
score: 99.37388610839844
patch: if ( type == Type . NONE && aliasing CaMeL Gets > 1 ) {
rank: 412
score: 99.30962813527961
patch: if ( type == Type . FUNCTION && ! type . is CaMeL Constructor ( ) ) {
rank: 413
score: 99.45321800595238
patch: if ( ( ! declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 413
score: 99.43230646306819
patch: if ( declaration . get CaMeL Twin ( ) != null && ! aliasing CaMeL Gets > 0 ) {
rank: 413
score: 99.4307528409091
patch: if ( type != Type . FUNCTION && global CaMeL Sets > 0 && local CaMeL Sets == 0 ) {
rank: 413
score: 99.40775981702302
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( 0 , 0 ) ) {
rank: 413
score: 99.40037841796875
patch: if ( declaration . get CaMeL Twin ( ) != null && local CaMeL Sets != 0 )
rank: 413
score: 99.39682839133523
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > FUNCTION || aliasing CaMeL Gets > FUNCTION ) {
rank: 413
score: 99.37384354440789
patch: if ( type != Type . FUNCTION && type . ( ) != Type . FUNCTION ) {
rank: 414
score: 99.43218994140625
patch: if ( type != null || can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 414
score: 99.4307528409091
patch: if ( type != Type . FUNCTION && global CaMeL Sets > 0 || local CaMeL Sets == 0 ) {
rank: 414
score: 99.42426300048828
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && parent != null ) {
rank: 414
score: 99.4076617697011
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || ! aliasing CaMeL Gets > 0 ) {
rank: 414
score: 99.40029296875
patch: if ( aliasing CaMeL Gets > 0 || declaration . get CaMeL Twin ( ) != null )
rank: 414
score: 99.39665876116071
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > && aliasing CaMeL Gets > 0 ) {
rank: 414
score: 99.38037109375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 , Type . FUNCTION ) {
rank: 414
score: 99.37359260110294
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) { {
rank: 415
score: 99.43040556066177
patch: if ( local CaMeL Sets . get CaMeL Twin ( ) != null ) {
rank: 415
score: 99.40756707442434
patch: if ( aliasing CaMeL Gets > 0 && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 415
score: 99.40023643092105
patch: if ( get CaMeL Twin ( ) != null && local CaMeL Sets != 0 ) {
rank: 415
score: 99.39665876116071
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Lower CaMeL Case ( ) ) {
rank: 415
score: 99.38001773231908
patch: if ( type != Type . FUNCTION && ! type . length ( ) > 0 ) {
rank: 415
score: 99.37340545654297
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets >= 0 ) {
rank: 415
score: 99.30864122178819
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets == Type . FUNCTION ) {
rank: 416
score: 99.45262315538194
patch: if ( type != Type . FUNCTION && this . local CaMeL Sets != 0 ) {
rank: 416
score: 99.4320956143466
patch: if ( type != Type . FUNCTION && ! can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 416
score: 99.43008024796195
patch: if ( ! parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) }
rank: 416
score: 99.42352849786931
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 || aliasing CaMeL Gets == 0 ) {
rank: 416
score: 99.37339381167763
patch: if ( type == Type . FUNCTION && ! type . is CaMeL Singleton ( ) ) {
rank: 416
score: 99.30856662326389
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets == Type . FUNCTION ) {
rank: 417
score: 99.45225941051136
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || parent == Type . FUNCTION ) {
rank: 417
score: 99.43189586292614
patch: if ( type != null && type . is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 417
score: 99.40738932291667
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 > 0 ) {
rank: 417
score: 99.399658203125
patch: if ( parent != null || can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 417
score: 99.39625244140625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) return false ; else {
rank: 417
score: 99.37923177083333
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && > Type . FUNCTION ) {
rank: 417
score: 99.37313503689236
patch: if ( aliasing CaMeL Gets > 0 ) { if ( aliasing CaMeL Gets > 0 )
rank: 418
score: 99.4314495584239
patch: if ( declaration . get CaMeL Twin ( ) != null && ! is CaMeL Class CaMeL Or CaMeL Enum )
rank: 418
score: 99.42958374023438
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && parent != null ) {
rank: 418
score: 99.40715225883152
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && ! aliasing CaMeL Gets > 0 ) {
rank: 418
score: 99.39923095703125
patch: if ( this . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ;
rank: 418
score: 99.39607377485795
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 && type != Type . FUNCTION ) {
rank: 418
score: 99.37296549479167
patch: if ( type != Type . NULL && type . length ( ) > 0 ) {
rank: 418
score: 99.30804084329044
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets == null ) {
rank: 419
score: 99.43120783025569
patch: if ( type != null || ! type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 419
score: 99.3959228515625
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > ) {
rank: 419
score: 99.37285614013672
patch: if ( type == Type . FUNCTION && type == Type . NONE ) {
rank: 419
score: 99.30791272615132
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Constant ( ) ) {
rank: 420
score: 99.43098588423295
patch: if ( type != Type . NOT && is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 420
score: 99.40678074048913
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( 0 ) && aliasing CaMeL Gets > 0 ) {
rank: 420
score: 99.37852783203125
patch: if ( ! type . equals ( Type . FUNCTION && type != Type . FUNCTION ) ) {
rank: 420
score: 99.3726806640625
patch: if ( type != Type . NONE && ( aliasing CaMeL Gets > 0 ) ) {
rank: 420
score: 99.30790201822917
patch: if ( type != Type . FUNCTION && ! ( type == Type . FUNCTION ) )
rank: 421
score: 99.429052734375
patch: if ( declaration == null || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 421
score: 99.42236328125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && local CaMeL Sets == 0 ) {
rank: 421
score: 99.40652126736111
patch: if ( type ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 421
score: 99.395458984375
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets . contains ( type ) ) {
rank: 421
score: 99.37815228630515
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets . > 0 ) {
rank: 421
score: 99.30777994791667
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || aliasing CaMeL Gets == 0 )
rank: 422
score: 99.43055071149554
patch: if ( type != $STRING$ && aliasing CaMeL Gets > 0 ) {
rank: 422
score: 99.4056332236842
patch: if ( ! type . type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 422
score: 99.39544067382812
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . is CaMeL Enum ( ) ) {
rank: 422
score: 99.3781505766369
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets [ 0 ] != Type . FUNCTION ) {
rank: 422
score: 99.37175157335069
patch: if ( type == Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum )
rank: 423
score: 99.43048706054688
patch: if ( type != null || type != null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 423
score: 99.4217529296875
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 || local CaMeL Sets != null ) {
rank: 423
score: 99.37730407714844
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) {
rank: 423
score: 99.37140570746527
patch: if ( type != Type . FUNCTION && type . is CaMeL External ( ) ) {
rank: 424
score: 99.45115966796875
patch: if ( type != Type . FUNCTION && global CaMeL Sets . size ( ) != 0 ) {
rank: 424
score: 99.43048095703125
patch: if ( type != null || local CaMeL Sets != 0 ) {
rank: 424
score: 99.42794363839286
patch: if ( type == Type . FUNCTION || declaration . get CaMeL Twin ( ) != null ) {
rank: 424
score: 99.42172639266305
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; }
rank: 424
score: 99.39788208007812
patch: if ( key != null || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 424
score: 99.37133071001838
patch: if ( type != Type . NULL && aliasing CaMeL Gets > 0 ) { {
rank: 424
score: 99.30691964285714
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Empty ( ) ) return false ;
rank: 425
score: 99.4216839334239
patch: if ( ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ?
rank: 425
score: 99.39733276367187
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( - 0 ) ) {
rank: 425
score: 99.39499733664773
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets != null ) {
rank: 425
score: 99.376953125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return $NUMBER$ {
rank: 425
score: 99.370849609375
patch: if ( ! type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 425
score: 99.30676947699652
patch: if ( ( type != Type . FUNCTION || type != Type . FUNCTION ) ) {
rank: 426
score: 99.39461616847827
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets ( type ) ) {
rank: 426
score: 99.37687174479167
patch: if ( type != Type . FUNCTION && false && aliasing CaMeL Gets > 0 ) {
rank: 426
score: 99.37060546875
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && ! ) {
rank: 427
score: 99.45037841796875
patch: if ( ( type != null ) || ( global CaMeL Sets != 0 ) ) {
rank: 427
score: 99.43000793457031
patch: if ( global CaMeL Sets != 1 || local CaMeL Sets != 0 ) {
rank: 427
score: 99.39713327508224
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( length ) ) {
rank: 427
score: 99.39453125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > && aliasing CaMeL Gets != null ) {
rank: 427
score: 99.37058919270834
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION )
rank: 427
score: 99.30619049072266
patch: if ( ! type . contains CaMeL Type ( Type . FUNCTION ) ) {
rank: 428
score: 99.39669639185855
patch: if ( get CaMeL Twin ( ) != null || aliasing CaMeL Gets > 1 ) {
rank: 428
score: 99.3944091796875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) return ) ;
rank: 428
score: 99.37037568933823
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 1 ) { {
rank: 429
score: 99.42888440583882
patch: if ( parent == null && declaration . get CaMeL Twin ( ) != null ) {
rank: 429
score: 99.42723547894022
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) true ) ;
rank: 429
score: 99.40355383831522
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && is CaMeL Class CaMeL Or CaMeL Enum )
rank: 429
score: 99.39438264266305
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || aliasing CaMeL Gets ( type ) ) {
rank: 429
score: 99.37027740478516
patch: if ( type == Type . NULL && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 430
score: 99.42875532670455
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , ) )
rank: 430
score: 99.42660522460938
patch: if ( name != null || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 430
score: 99.39564344618056
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) )
rank: 430
score: 99.39418723366477
patch: if ( type != Type . FUNCTION && type & Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 430
score: 99.3700812844669
patch: if ( type != Type . FUNCTION && ! is CaMeL Interface ( ) ) {
rank: 430
score: 99.30497661389802
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( type ) != null ) {
rank: 431
score: 99.40329318576389
patch: try { if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 431
score: 99.39543714021382
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , declaration ) )
rank: 431
score: 99.37584092881944
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . length != 0 ) {
rank: 431
score: 99.30430843955592
patch: if ( ! ( type != Type . FUNCTION || type != Type . FUNCTION ) ) {
rank: 432
score: 99.42574940557066
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( null ) ) ;
rank: 432
score: 99.39537896050348
patch: while ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 432
score: 99.37004258897569
patch: if ( type != Type . FUNCTION && type . is CaMeL Enum ( ) ) {
rank: 432
score: 99.3040771484375
patch: if ( type == Type . NONE || aliasing CaMeL Gets > 0 ) {
rank: 433
score: 99.44893188476563
patch: / * if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 433
score: 99.4256103515625
patch: if ( ! declaration . get CaMeL Twin ( ) . is CaMeL Enum ( ) ) {
rank: 433
score: 99.4197110262784
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && declaration . get CaMeL Count ( ) > 0 ) {
rank: 433
score: 99.3951416015625
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , null ) ) {
rank: 433
score: 99.39338485054348
patch: if ( ! type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 433
score: 99.37553854549633
patch: if ( ! aliasing CaMeL Gets > 0 && type != Type . FUNCTION ) {
rank: 434
score: 99.42799682617188
patch: if ( type != null && is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 434
score: 99.42549272017045
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return
rank: 434
score: 99.39508666992188
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , type ) ) {
rank: 434
score: 99.36984092310855
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { { return {
rank: 434
score: 99.30332728794643
patch: if ( ! type . is CaMeL Instance ( type ) ) {
rank: 435
score: 99.42788298233695
patch: if ( ! type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 435
score: 99.42530459449405
patch: if ( type == Type . FUNCTION && declaration . get CaMeL Twin ( ) == null ) {
rank: 435
score: 99.41926713423295
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ; }
rank: 435
score: 99.40216064453125
patch: if ( type != Type . FUNCTION || type instanceof Type && aliasing CaMeL Gets > 0 ) {
rank: 435
score: 99.39462890625
patch: if ( parent == null || type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 435
score: 99.39269409179687
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . is CaMeL Private ( ) ) {
rank: 435
score: 99.36940002441406
patch: if ( type == Type . FUNCTION && type != Type . NONE ) {
rank: 436
score: 99.427734375
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum )
rank: 436
score: 99.39443359375
patch: if ( declaration . get CaMeL Twin ( ) != null ) { return true ; } }
rank: 436
score: 99.39268275669643
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && ! is CaMeL Local ) {
rank: 436
score: 99.373828125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && type > 0 ) {
rank: 436
score: 99.36919088924633
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . length > 0 )
rank: 437
score: 99.44784545898438
patch: if ( declaration . get CaMeL Type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 437
score: 99.427490234375
patch: if ( ! type != Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 437
score: 99.425146484375
patch: if ( ! parent == null || parent . get CaMeL Twin ( ) != null ) {
rank: 437
score: 99.41863250732422
patch: if ( type != Type . PROPERTY && aliasing CaMeL Gets > 0 ) {
rank: 437
score: 99.39417266845703
patch: if ( local CaMeL Sets != null || aliasing CaMeL Gets > 0 ) {
rank: 437
score: 99.39199490017361
patch: if ( type != Type . FUNCTION && ! type . equals ( $STRING$ ) ) {
rank: 437
score: 99.37376002261513
patch: if ( type != Type . FUNCTION && ! type . length ( ) != 0 ) {
rank: 437
score: 99.30280897352431
patch: if ( ( type != Type . FUNCTION ) || type == Type . FUNCTION ) {
rank: 438
score: 99.42744584517045
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return is CaMeL Class CaMeL Or CaMeL Enum ; }
rank: 438
score: 99.42497907366071
patch: if ( declaration . get CaMeL Type CaMeL Name ( ) . equals ( Type . FUNCTION ) ) {
rank: 438
score: 99.394091796875
patch: if ( declaration . get CaMeL Twin ( ) != null ) { return false ; } else
rank: 438
score: 99.3916652513587
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) && aliasing CaMeL Gets ( type ) )
rank: 438
score: 99.37373046875
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 , aliasing CaMeL Gets ) {
rank: 438
score: 99.36804917279412
patch: if ( type == Type . FUNCTION && ! ( type instanceof Type ) ) {
rank: 438
score: 99.30263264973958
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 ) return true ;
rank: 439
score: 99.44774780273437
patch: if ( ( type != Type . FUNCTION ) || ( global CaMeL Sets != 0 ) ) {
rank: 439
score: 99.42728424072266
patch: if ( type != Type . NOT && global CaMeL Sets != 0 ) {
rank: 439
score: 99.39154343377976
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets ( aliasing CaMeL Gets > 0 ) ) {
rank: 439
score: 99.37359328497024
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || ! aliasing CaMeL Gets ) {
rank: 440
score: 99.44766090029762
patch: if ( ( type != Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 440
score: 99.42713512073864
patch: if ( ! parent == null || declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 440
score: 99.42446899414062
patch: if ( type != Type . FUNCTION || global CaMeL Sets > 0 ) {
rank: 440
score: 99.41776899857955
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 1 ) {
rank: 440
score: 99.40113366168478
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 440
score: 99.36684698807566
patch: if ( aliasing CaMeL Gets > 0 ) { if ( aliasing CaMeL Gets < 0 ) {
rank: 440
score: 99.30231267755681
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets == 0 )
rank: 441
score: 99.42711821056548
patch: if ( type != null || global CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 441
score: 99.41764692826705
patch: if ( declaration . get CaMeL Visibility ( ) != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 441
score: 99.4005126953125
patch: if ( type . type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 441
score: 99.3926025390625
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration , ) ) {
rank: 441
score: 99.3911328125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets == 0 && aliasing CaMeL Gets . equals ( $STRING$ ) ) {
rank: 442
score: 99.42674560546875
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; } return false ; }
rank: 442
score: 99.4172595796131
patch: if ( declaration . get CaMeL Twin ( ) . get CaMeL Count ( ) != 0 ) {
rank: 442
score: 99.40009223090277
patch: if ( type != Type . FUNCTION ) { return aliasing CaMeL Gets > 0 ; }
rank: 442
score: 99.39250745271382
patch: if ( ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) )
rank: 442
score: 99.39044921875
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets != 0 && aliasing CaMeL Gets . equals ( type ) ) {
rank: 443
score: 99.44588894314236
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || true ) {
rank: 443
score: 99.42665166440217
patch: if ( ! declaration . get CaMeL Twin ( ) != null && is CaMeL Class CaMeL Or CaMeL Enum )
rank: 443
score: 99.4236328125
patch: if ( type != Type . FUNCTION && parent != null || aliasing CaMeL Gets > 0 ) {
rank: 443
score: 99.39992268880208
patch: } else if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 443
score: 99.39194849917763
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , false ) )
rank: 443
score: 99.390029296875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && type . equals ( Type . FUNCTION ) ) {
rank: 443
score: 99.37283485814145
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! false ) {
rank: 444
score: 99.42655864514802
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 ) { return false ;
rank: 444
score: 99.42329738451087
patch: if ( ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; return false ; }
rank: 444
score: 99.39172973632813
patch: if ( type . get CaMeL Twin ( ) != null && aliasing CaMeL Gets > 0 )
rank: 444
score: 99.37217712402344
patch: if ( type != Type . FUNCTION && type & Type . FUNCTION ) {
rank: 444
score: 99.36611456620066
patch: if ( ! type . equals ( Type . FUNCTION ) && aliasing CaMeL Gets > 0 )
rank: 444
score: 99.30133734809027
patch: if ( type != Type . FUNCTION || ! ! aliasing CaMeL Gets > 0 ) {
rank: 445
score: 99.39972795758929
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { System . out . println ( $STRING$ ) ;
rank: 445
score: 99.39137669613487
patch: if ( get CaMeL Twin ( ) != null || local CaMeL Sets != null ) {
rank: 445
score: 99.38948567708333
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > && aliasing CaMeL Gets == 0 ) {
rank: 445
score: 99.37170991443452
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( aliasing CaMeL Gets ( type ) ) {
rank: 446
score: 99.42294456845238
patch: if ( parent == null || local CaMeL Sets . get CaMeL Twin ( ) != null ) {
rank: 446
score: 99.39960680509868
patch: if ( aliasing CaMeL Gets > 0 ) { System . out . println ( $STRING$ ) ;
rank: 446
score: 99.39055786132812
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) break ;
rank: 446
score: 99.38916015625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets . equals ( 1 ) ) {
rank: 446
score: 99.3716532389323
patch: if ( ! aliasing CaMeL Gets ( type ) ) {
rank: 446
score: 99.3008968955592
patch: if ( type != Type . FUNCTION || ! ( aliasing CaMeL Gets > 0 ) ) {
rank: 447
score: 99.44365844726562
patch: if ( type != Type . FUNCTION : Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 447
score: 99.42624733664773
patch: if ( ! type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { return false ;
rank: 447
score: 99.39051402698864
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum )
rank: 447
score: 99.37160818917411
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ) {
rank: 447
score: 99.36524115668402
patch: if ( type . is CaMeL None ( ) && aliasing CaMeL Gets > 0 ) {
rank: 448
score: 99.42272338867187
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && parent == null ) {
rank: 448
score: 99.39009817023026
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( $STRING$ ) ) {
rank: 448
score: 99.37152862548828
patch: if ( type >= Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 448
score: 99.36456298828125
patch: if ( type != Type . NONE && type . length ( ) > 0 ) {
rank: 448
score: 99.30056583180146
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets > $STRING$ ) {
rank: 449
score: 99.44341362847223
patch: if ( ( type != null ) || ( aliasing CaMeL Gets > 0 ) ) {
rank: 449
score: 99.42566448709239
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , this ) )
rank: 449
score: 99.42271356997283
patch: if ( ! parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 449
score: 99.41590465198864
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 || local CaMeL Sets != null ) {
rank: 449
score: 99.39901878720238
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets . starts CaMeL With ( $STRING$ ) ) {
rank: 449
score: 99.38821750217014
patch: if ( type != Type . FUNCTION && type . length ( ) == 0 ) {
rank: 449
score: 99.37099202473958
patch: if ( type != Type . FUNCTION && true && aliasing CaMeL Gets > 0 ) {
rank: 450
score: 99.44325949928977
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || type != Type . FUNCTION && parent == null ) {
rank: 450
score: 99.4253262606534
patch: if ( ! type != Type . FUNCTION && declaration . get CaMeL Twin ( ) != null ) {
rank: 450
score: 99.42266486672794
patch: if ( global CaMeL Sets . get CaMeL Twin ( ) != null ) {
rank: 450
score: 99.4158602627841
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ?
rank: 450
score: 99.38983154296875
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 0 , ) ) {
rank: 450
score: 99.3697445518092
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return ) {
rank: 450
score: 99.36425018310547
patch: if ( type != Type . NONE && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 450
score: 99.300048828125
patch: if ( ! type . is CaMeL Local ( ) ) {
rank: 451
score: 99.44296603732639
patch: if ( ( parent == null ) || ( local CaMeL Sets != 0 ) ) {
rank: 451
score: 99.42502010569854
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && 0 )
rank: 451
score: 99.41544966264205
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && local CaMeL Sets != null ) {
rank: 451
score: 99.39857991536458
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 . $NUMBER$ ) {
rank: 451
score: 99.389697265625
patch: if ( aliasing CaMeL Gets > 0 || parent . get CaMeL Twin ( ) != null )
rank: 451
score: 99.38740871263587
patch: if ( type != Type . FUNCTION && ! type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 451
score: 99.36972225413604
patch: if ( type != Type . TYPE && aliasing CaMeL Gets ( type ) ) {
rank: 451
score: 99.36400010850694
patch: if ( type != Type . FUNCTION && type . is CaMeL None ( ) ) {
rank: 451
score: 99.29988098144531
patch: if ( name != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 452
score: 99.421826171875
patch: if ( type != Type . FUNCTION && declaration . get CaMeL Value ( ) != null ) {
rank: 452
score: 99.38955688476562
patch: if ( type != Type . FUNCTION && ( aliasing CaMeL Gets > 0 ) ) return false ;
rank: 452
score: 99.3872578938802
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != null && aliasing CaMeL Gets . equals ( type ) )
rank: 452
score: 99.36373740748355
patch: if ( aliasing CaMeL Gets > 0 ) { if ( aliasing CaMeL Gets >= 0 ) {
rank: 453
score: 99.39785766601562
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) )
rank: 453
score: 99.38949764476104
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { ;
rank: 453
score: 99.386884765625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != null && aliasing CaMeL Gets . equals ( $STRING$ ) ) {
rank: 453
score: 99.36932983398438
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets { {
rank: 453
score: 99.36351254111842
patch: if ( type . equals ( Type . FUNCTION && type != Type . FUNCTION ) ) {
rank: 453
score: 99.29908582899306
patch: if ( ( type != Type . FUNCTION && type != Type . FUNCTION ) ) {
rank: 454
score: 99.44171697443181
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && parent == Type . FUNCTION ) {
rank: 454
score: 99.424560546875
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( ! global CaMeL Sets != 0 ) {
rank: 454
score: 99.4215087890625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { { return false ;
rank: 454
score: 99.4150723544034
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 && local CaMeL Sets != null ) {
rank: 454
score: 99.38939819335937
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { ) {
rank: 454
score: 99.3866678873698
patch: if ( ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) && aliasing CaMeL Gets > 0 ) {
rank: 454
score: 99.36863403320312
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && options != 0 ) {
rank: 454
score: 99.36310891544117
patch: { if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 454
score: 99.29857720269098
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > Type . FUNCTION ) {
rank: 455
score: 99.44148084852431
patch: if ( type != Type . OTHER || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 455
score: 99.41491021050348
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && local CaMeL Sets != null ) {
rank: 455
score: 99.3891537314967
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ] ) ) {
rank: 455
score: 99.36847887541118
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets [ 0 ] == 0 ) {
rank: 455
score: 99.36310778166118
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ( ) )
rank: 456
score: 99.44148055366848
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { ;
rank: 456
score: 99.39729817708333
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION || aliasing CaMeL Gets > 0 )
rank: 456
score: 99.38907877604167
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( this ) )
rank: 456
score: 99.386474609375
patch: if ( type != Type . FUNCTION && ! ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 456
score: 99.36254119873047
patch: if ( type != Type . NULL && type == Type . FUNCTION ) {
rank: 456
score: 99.29822455512152
patch: if ( type == Type . FUNCTION && ! ( type != Type . FUNCTION ) )
rank: 457
score: 99.42439575195313
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) || local CaMeL Sets != 0 ) {
rank: 457
score: 99.42105102539062
patch: if ( declaration . get CaMeL Id ( ) != null || aliasing CaMeL Gets > 0 ) {
rank: 457
score: 99.4147616299716
patch: if ( declaration . get CaMeL Id ( ) != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 457
score: 99.38906680836396
patch: if ( declaration . get CaMeL Twin ( ) != null ) { / *
rank: 457
score: 99.38640485491071
patch: if ( type != Type . FUNCTION || type == Type . FUNCTION && aliasing CaMeL Gets > ) {
rank: 457
score: 99.36818237304688
patch: if ( type != FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 457
score: 99.36229705810547
patch: if ( type . get CaMeL Type ( ) == Type . FUNCTION ) {
rank: 457
score: 99.29782586348684
patch: if ( ( type == Type . FUNCTION ) || ( type != Type . FUNCTION ) )
rank: 458
score: 99.44112723214286
patch: if ( ! ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 458
score: 99.42429606119792
patch: if ( type != Type . T && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 458
score: 99.42093331473214
patch: if ( ( parent == null || parent . get CaMeL Twin ( ) != null ) ) {
rank: 458
score: 99.41456139605978
patch: if ( parent == null || parent . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 458
score: 99.3960597826087
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) && aliasing CaMeL Gets > 0 ) {
rank: 458
score: 99.386337890625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets . equals ( 0 ) ) {
rank: 458
score: 99.36753540039062
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && type == 0 ) {
rank: 459
score: 99.42415771484374
patch: if ( can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return true ; }
rank: 459
score: 99.42081909179687
patch: if ( value != null || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 459
score: 99.41443980823864
patch: if ( declaration . get CaMeL Type ( ) == Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 459
score: 99.38619559151786
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != ) {
rank: 459
score: 99.36181640625
patch: if ( type != Type . FUNCTION && ! type . is CaMeL None ( ) )
rank: 459
score: 99.29712592230902
patch: if ( ! get CaMeL Type ( ) . equals ( Type . FUNCTION ) ) {
rank: 460
score: 99.42401733398438
patch: if ( type != null || global CaMeL Sets != 0 || local CaMeL Sets != 0 ) {
rank: 460
score: 99.41422526041667
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ;
rank: 460
score: 99.38535670230263
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION ) { return false ;
rank: 460
score: 99.36708068847656
patch: if ( type == Type . NOT && aliasing CaMeL Gets > 0 ) {
rank: 460
score: 99.36077880859375
patch: if ( aliasing CaMeL Gets > 0 ) { return false ; } else {
rank: 460
score: 99.29701232910156
patch: if ( type == Type . FUNCTION && type != Type . NULL ) {
rank: 461
score: 99.4402386209239
patch: if ( type != Type . FUNCTION && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ;
rank: 461
score: 99.42391807154605
patch: if ( type != null || type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 461
score: 99.41916822350544
patch: if ( declaration . get CaMeL Twin ( ) != null || ( type != Type . FUNCTION ) ) {
rank: 461
score: 99.39571533203124
patch: if ( type != Type . FUNCTION ) { return aliasing CaMeL Gets > 0 ; } else {
rank: 461
score: 99.38805389404297
patch: if ( ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 461
score: 99.36699083116319
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > ( type ) ) {
rank: 462
score: 99.42388625372024
patch: if ( declaration . get CaMeL Twin ( ) != null || local CaMeL Sets == 0 ) {
rank: 462
score: 99.39515904017857
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { aliasing CaMeL Gets -- ;
rank: 462
score: 99.38795872738487
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { ;
rank: 462
score: 99.36060248480902
patch: if ( type != Type . FUNCTION && type . aliasing CaMeL Gets > 0 ) {
rank: 463
score: 99.42384168836806
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 - 0 ) {
rank: 463
score: 99.41877184416118
patch: if ( declaration == null || parent . get CaMeL Twin ( ) != null ) {
rank: 463
score: 99.38513671875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { System . out . println ( $STRING$ ) ;
rank: 463
score: 99.36663497121711
patch: if ( type != Type . TYPE && aliasing CaMeL Gets ( type ) > 0 ) {
rank: 463
score: 99.36042223478618
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return aliasing CaMeL Gets > 0 ;
rank: 463
score: 99.29609607514881
patch: if ( ( type != Type . FUNCTION ) && ! ( type != Type . FUNCTION ) ) {
rank: 464
score: 99.41872151692708
patch: try { return parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ;
rank: 464
score: 99.3941650390625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > length ) {
rank: 464
score: 99.3878173828125
patch: if ( ( parent == null ) || ( aliasing CaMeL Gets > 0 ) ) {
rank: 464
score: 99.36660621279762
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && type != Type . FUNCTION )
rank: 465
score: 99.418701171875
patch: if ( type != Type . FUNCTION && declaration . get CaMeL Name ( ) != null ) {
rank: 465
score: 99.41378173828124
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 || parent != null ) {
rank: 465
score: 99.39412788722827
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets ( type ) ) {
rank: 465
score: 99.38728162977431
patch: if ( this . type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 465
score: 99.38392578125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets . is CaMeL Empty ( ) )
rank: 465
score: 99.36619166324013
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) > FUNCTION ) {
rank: 465
score: 99.29547882080078
patch: if ( parent == Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 466
score: 99.423291015625
patch: if ( type != Type . TYPE && type . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 466
score: 99.41824001736111
patch: Preconditions . if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 466
score: 99.383583984375
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Empty ( ) || aliasing CaMeL Gets > 0 ) {
rank: 466
score: 99.36613384046052
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! eof ) {
rank: 466
score: 99.3590023643092
patch: if ( type != Type . FUNCTION && type . equals ( Type . NULL ) ) {
rank: 466
score: 99.29536437988281
patch: if ( aliasing CaMeL Gets > 0 && type == Type . FUNCTION ) {
rank: 467
score: 99.43865411931819
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ;
rank: 467
score: 99.41822451636905
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( declaration . get CaMeL Type ( ) ) ) {
rank: 467
score: 99.39356530230978
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets ( 0 ) ) {
rank: 467
score: 99.38641357421875
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { / *
rank: 467
score: 99.36548461914063
patch: if ( ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) && > ) {
rank: 467
score: 99.35862972861842
patch: if ( ! ( aliasing CaMeL Gets > 0 ) && aliasing CaMeL Gets > 0 ) {
rank: 467
score: 99.29520416259766
patch: if ( value != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 468
score: 99.43825073242188
patch: if ( ( local CaMeL Sets != 0 ) || ( aliasing CaMeL Gets > 0 ) ) {
rank: 468
score: 99.42326554008152
patch: if ( type != null || type != Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 468
score: 99.41317588404605
patch: if ( declaration . get CaMeL Twin ( ) == null || parent != null ) {
rank: 468
score: 99.36543579101563
patch: if ( type != null && aliasing CaMeL Gets > 0 && type != Type . FUNCTION ) {
rank: 468
score: 99.35857795266544
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) { {
rank: 469
score: 99.438232421875
patch: if ( ( declaration . get CaMeL Twin ( ) != null ) || ] != null ) {
rank: 469
score: 99.42324649586396
patch: if ( type != Type . FUNCTION && ! global CaMeL Sets != 1 ) {
rank: 469
score: 99.41804584703948
patch: if ( declaration . get CaMeL Twin ( ) . aliasing CaMeL Gets > 0 ) {
rank: 469
score: 99.382861328125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 || aliasing CaMeL Gets . equals ( $STRING$ ) ) {
rank: 469
score: 99.36526309742646
patch: if ( type != null ) { if ( aliasing CaMeL Gets > 0 ) {
rank: 469
score: 99.35849178538604
patch: if ( type != Type . FUNCTION && $STRING$ . equals ( type ) ) {
rank: 469
score: 99.2945492393092
patch: if ( ! ( type == Type . FUNCTION && type != Type . FUNCTION ) ) {
rank: 470
score: 99.4381991299716
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { is CaMeL Class CaMeL Or CaMeL Enum = true ;
rank: 470
score: 99.38550522748162
patch: if ( parent . get CaMeL Twin ( ) != null ) return false ;
rank: 470
score: 99.38235473632812
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets . contains ( type ) )
rank: 470
score: 99.36505126953125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) 0 > 0 ) {
rank: 470
score: 99.35843098958334
patch: if ( type . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 470
score: 99.29453822544643
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 )
rank: 471
score: 99.41769248560855
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) false ) {
rank: 471
score: 99.4130526455966
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ; }
rank: 471
score: 99.38179285386029
patch: if ( type != Type . FUNCTION && ! type != Type . FUNCTION ) {
rank: 471
score: 99.36500186011905
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return aliasing CaMeL Gets {
rank: 471
score: 99.35838317871094
patch: if ( ( type instanceof Type ) && aliasing CaMeL Gets > 0 ) {
rank: 472
score: 99.43685913085938
patch: if ( type != Type . FUNCTION && parent . get CaMeL Id ( ) != null ) {
rank: 472
score: 99.3852474814967
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( aliasing CaMeL Gets > 0 ) ) {
rank: 472
score: 99.38146484375
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || ! type . is CaMeL Empty ( ) ) {
rank: 472
score: 99.35752360026042
patch: if ( type != Type . FUNCTION && type . is CaMeL Singleton ( ) ) {
rank: 472
score: 99.29407456341912
patch: } if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 473
score: 99.42226340553977
patch: if ( type != null && type . is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 473
score: 99.41755814985795
patch: if ( type != Type . FUNCTION && declaration . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 473
score: 99.41292724609374
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 || parent == null ) {
rank: 473
score: 99.38450622558594
patch: if ( parent . get CaMeL Twin ( ) != null ) { {
rank: 473
score: 99.3813709077381
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == ) {
rank: 473
score: 99.36444854736328
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets > ) {
rank: 473
score: 99.29305013020833
patch: if ( type == Type . FUNCTION || ( type == Type . FUNCTION ) ) {
rank: 474
score: 99.43636648995536
patch: if ( ! ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 474
score: 99.41691450639205
patch: if ( type != Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum ( type ) ) {
rank: 474
score: 99.39239211309524
patch: if ( type != Type . FUNCTION && type != Type . TYPE && aliasing CaMeL Gets > 0 )
rank: 474
score: 99.3843994140625
patch: if ( can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return false ;
rank: 474
score: 99.38119988692434
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . contains ( name ) ) {
rank: 474
score: 99.35698106553819
patch: if ( ! type . is CaMeL Assignable CaMeL From ( Type . FUNCTION ) ) {
rank: 475
score: 99.41284790039063
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( parent ) ) {
rank: 475
score: 99.39232336956522
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets ( 0 ) ) {
rank: 475
score: 99.38437371504934
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , true ) )
rank: 475
score: 99.38107638888889
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Empty ( ) )
rank: 475
score: 99.3566665649414
patch: if ( type != Type . VOID && aliasing CaMeL Gets > 0 ) {
rank: 475
score: 99.29210069444444
patch: if ( type != Type . FUNCTION && get CaMeL Types ( ) != null ) {
rank: 476
score: 99.41275634765626
patch: if ( parent == null || type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 476
score: 99.39183349609375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . size ( ) == 0 ) {
rank: 476
score: 99.3841552734375
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( this ) ) {
rank: 476
score: 99.38094075520833
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > && aliasing CaMeL Gets != 0 ) {
rank: 476
score: 99.36376953125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && type != null ) {
rank: 476
score: 99.35659308182566
patch: if ( aliasing CaMeL Gets > 0 ) { if ( aliasing CaMeL Gets != 0 ) {
rank: 476
score: 99.29142252604167
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) return null ;
rank: 477
score: 99.42148659446023
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return true ; }
rank: 477
score: 99.41270228794643
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return true ; }
rank: 477
score: 99.39164402173913
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > - 1 ) {
rank: 477
score: 99.38410101996527
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) return false ;
rank: 477
score: 99.3807421875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets == 0 && aliasing CaMeL Gets . equals ( type ) ) {
rank: 477
score: 99.36375427246094
patch: if ( type < Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 477
score: 99.35624614514802
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type == Type {
rank: 477
score: 99.29119551809211
patch: if ( type != Type . FUNCTION && ! ( type > Type . FUNCTION ) ) {
rank: 478
score: 99.43599076704545
patch: if ( ! declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ;
rank: 478
score: 99.42106827445652
patch: if ( ! type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return true ; }
rank: 478
score: 99.41546921502976
patch: if ( type != Type . FUNCTION && local CaMeL Sets . get ( type ) != null ) {
rank: 478
score: 99.41242009943181
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 || local CaMeL Sets != 1 ) {
rank: 478
score: 99.3915283203125
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets || aliasing CaMeL Gets > 0 ) {
rank: 478
score: 99.38399658203124
patch: if ( declaration . get CaMeL Twin ( ) == null && aliasing CaMeL Gets > 0 )
rank: 478
score: 99.35584781044408
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets [ 0 ] != null ) {
rank: 478
score: 99.290283203125
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) return null ;
rank: 479
score: 99.4358642578125
patch: if ( ( type != Type . OTHER ) || ( global CaMeL Sets != 0 ) ) {
rank: 479
score: 99.41544596354167
patch: if ( declaration . get CaMeL Twin ( ) != null || local CaMeL Sets > 0 ) {
rank: 479
score: 99.41227213541667
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( [ 0 ] ) ) {
rank: 479
score: 99.39098590353261
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets . length > 0 )
rank: 479
score: 99.3837890625
patch: if ( ! this . declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 479
score: 99.38024184283088
patch: if ( type != null || ! type . is CaMeL Empty ( ) ) {
rank: 479
score: 99.36361083984374
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( type ) . != 0 ) {
rank: 479
score: 99.35556030273438
patch: if ( type != Type . FUNCTION || type != Type . NONE ) {
rank: 479
score: 99.2900161743164
patch: if ( type != Type . EXPRESSION && aliasing CaMeL Gets > 0 ) {
rank: 480
score: 99.43537902832031
patch: if ( type != Type . FUNCTION && local CaMeL Sets != 1 ) {
rank: 480
score: 99.41541137695313
patch: if ( type != Type . FUNCTION && parent == null || aliasing CaMeL Gets > 0 ) {
rank: 480
score: 99.35506863064236
patch: if ( type != Type . FUNCTION && ( aliasing CaMeL Gets > $NUMBER$ ) ) {
rank: 480
score: 99.28997124565973
patch: if ( ( type == Type . FUNCTION || type != Type . FUNCTION ) ) {
rank: 481
score: 99.41530539772727
patch: if ( declaration . get CaMeL Type ( ) . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 481
score: 99.4112215909091
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && local CaMeL Sets != null ) {
rank: 481
score: 99.38279965049342
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( type ) ) {
rank: 481
score: 99.3801800271739
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets ( aliasing CaMeL Gets ( type ) ) ) {
rank: 481
score: 99.35501302083334
patch: if ( aliasing CaMeL Gets > 0 || aliasing CaMeL Gets > 0 )
rank: 481
score: 99.28993055555556
patch: if ( ( aliasing CaMeL Gets > 0 ) && aliasing CaMeL Gets == 0 ) {
rank: 482
score: 99.43504028320312
patch: if ( type != Type . FUNCTION && false && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 482
score: 99.41987748579545
patch: if ( ! type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ;
rank: 482
score: 99.4106212797619
patch: if ( declaration . get CaMeL Twin ( ) . get CaMeL Parent ( ) != null ) {
rank: 482
score: 99.35497283935547
patch: if ( type != Type . NULL && type != Type . NULL ) {
rank: 483
score: 99.43472953464673
patch: if ( type != Type . TYPE && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 483
score: 99.41978149414062
patch: if ( type != null && is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 483
score: 99.39013671875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { type = Type . FUNCTION ) ;
rank: 483
score: 99.38275146484375
patch: if ( type , Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 483
score: 99.36187422902961
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! true ) {
rank: 483
score: 99.35458034939236
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( ) == 0 ) {
rank: 483
score: 99.28908284505208
patch: if ( type == Type . FUNCTION && ! is CaMeL Name ( type ) ) {
rank: 484
score: 99.43426804315476
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( global CaMeL Sets != 0 ) {
rank: 484
score: 99.4145275297619
patch: if ( ( parent == null ) || declaration . get CaMeL Twin ( ) != null ) {
rank: 484
score: 99.38998811141305
patch: if ( type != Type . FUNCTION ) { type = Type . FUNCTION && aliasing CaMeL Gets > 0 ) ;
rank: 484
score: 99.38249126233552
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { {
rank: 484
score: 99.37977430555556
patch: if ( type != Type . FUNCTION && ! is CaMeL Local ( type ) ) {
rank: 484
score: 99.35403103298611
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) throws Exception {
rank: 484
score: 99.2890625
patch: if ( type == Type . FUNCTION || ( type != Type . FUNCTION ) ) {
rank: 485
score: 99.43421630859375
patch: if ( ( global CaMeL Sets != 0 ) || ( local CaMeL Sets != 0 ) ) {
rank: 485
score: 99.41956097146739
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && is CaMeL Class CaMeL Or CaMeL Enum ) { return false ;
rank: 485
score: 99.38938395182292
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( 0 , type ) )
rank: 485
score: 99.38220893012152
patch: if ( parent != null || declaration . get CaMeL Twin ( ) != null )
rank: 485
score: 99.35399712456598
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( ) != 0 ) {
rank: 485
score: 99.28868865966797
patch: if ( type != Type . FUNCTION || type > Type . FUNCTION ) {
rank: 486
score: 99.41933806046195
patch: if ( type != Type . FUNCTION && type . is CaMeL Class CaMeL Or CaMeL Enum ) { return true ;
rank: 486
score: 99.40954059103261
patch: if ( parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { {
rank: 486
score: 99.38917371961806
patch: if ( type CaMeL Name != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 486
score: 99.38189697265625
patch: while ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 486
score: 99.35361328125
patch: if ( type != Type . FUNCTION && type != Type . ) {
rank: 487
score: 99.4325939360119
patch: if ( declaration . get CaMeL Twin ( ) != null || ( parent == null ) ) {
rank: 487
score: 99.38184950086806
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( null ) )
rank: 487
score: 99.37831624348958
patch: if ( type != Type . FUNCTION || this . aliasing CaMeL Gets > 0 ) {
rank: 487
score: 99.36062140213816
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets [ 0 ] > 0 ) {
rank: 487
score: 99.35347493489583
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { { {
rank: 488
score: 99.41331898082386
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && global CaMeL Sets != null ) {
rank: 488
score: 99.38857634171195
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type == Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 488
score: 99.38161892361111
patch: synchronized ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 488
score: 99.378271484375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . is CaMeL Constructor ( ) ) {
rank: 488
score: 99.35341389973958
patch: if ( type == Type . FUNCTION && type . is CaMeL Interface ( ) ) {
rank: 488
score: 99.28822544642857
patch: if ( get CaMeL Class ( ) == Type . FUNCTION ) {
rank: 489
score: 99.41915732935855
patch: if ( parent == null || is CaMeL Class CaMeL Or CaMeL Enum ) { return false ;
rank: 489
score: 99.38153397409539
patch: if ( type . get CaMeL Twin ( ) != null ) { return false ; }
rank: 489
score: 99.378076171875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets == 0 && aliasing CaMeL Gets . contains ( type ) ) {
rank: 489
score: 99.35292681525735
patch: if ( ( type != Type . FUNCTION ) && aliasing CaMeL Gets > 0 )
rank: 489
score: 99.28802849264706
patch: if ( type == Type . FUNCTION && ! aliasing CaMeL Gets != null ) {
rank: 490
score: 99.43196411132813
patch: if ( type != Type . FUNCTION && global CaMeL Sets . size ( ) > 0 ) {
rank: 490
score: 99.38765285326087
patch: if ( ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) && aliasing CaMeL Gets > 0 )
rank: 490
score: 99.38142225477431
patch: if ( local CaMeL Sets != null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 490
score: 99.36036376953125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) . < 0 ) {
rank: 491
score: 99.41888718377976
patch: if ( this . declaration . get CaMeL Twin ( ) != null ) { return false ; }
rank: 491
score: 99.41287667410714
patch: if ( ( parent != null ) || parent . get CaMeL Twin ( ) != null ) {
rank: 491
score: 99.40793328536184
patch: if ( ! element . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 491
score: 99.38139512803819
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) )
rank: 491
score: 99.37708050271739
patch: if ( ! type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 491
score: 99.36033993675595
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { case Type . FUNCTION :
rank: 492
score: 99.43117357336956
patch: if ( type != Type . OTHER && declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 492
score: 99.40763346354167
patch: if ( declaration . get CaMeL Twin ( ) == null || local CaMeL Sets != null ) {
rank: 492
score: 99.38125770970395
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( key ) ) {
rank: 492
score: 99.37706163194444
patch: if ( type == Type . FUNCTION && this . aliasing CaMeL Gets > 0 ) {
rank: 492
score: 99.35986328125
patch: if ( false ) { if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 492
score: 99.35218098958333
patch: if ( type . is CaMeL Assignable CaMeL From ( type ) ) {
rank: 493
score: 99.41858673095703
patch: if ( type != Type . PREFIX && aliasing CaMeL Gets > 0 ) {
rank: 493
score: 99.4068539268092
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) true ) {
rank: 493
score: 99.3811279296875
patch: if ( parent == null || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 494
score: 99.41795813519022
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type != Type . FUNCTION && global CaMeL Sets != 0 )
rank: 494
score: 99.37611328125
patch: if ( type != Type . FUNCTION && type . equals ( Type . FUNCTION ) || aliasing CaMeL Gets > 0 ) {
rank: 494
score: 99.28645833333333
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 || aliasing CaMeL Gets == 0 )
rank: 495
score: 99.41251831054687
patch: if ( ! declaration . get CaMeL Type ( ) . equals ( Type . FUNCTION ) ) {
rank: 495
score: 99.4062267485119
patch: if ( type == Type . FUNCTION && ( ! is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 495
score: 99.385986328125
patch: if ( type != Type . FUNCTION || type == Type . FUNCTION && ! aliasing CaMeL Gets > 0 ) {
rank: 495
score: 99.376025390625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . is CaMeL Function ( ) ) {
rank: 495
score: 99.35838317871094
patch: if ( type != Symbol . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 495
score: 99.35106658935547
patch: if ( type == Type . FUNCTION && type == Type . NULL ) {
rank: 495
score: 99.28614717371323
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets > null ) {
rank: 496
score: 99.40592447916667
patch: if ( type == Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ( type ) ) {
rank: 496
score: 99.38597347861842
patch: if ( type != Type . FUNCTION && Type . FUNCTION . equals ( type ) ) {
rank: 496
score: 99.38079155815973
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { ; }
rank: 496
score: 99.37593410326087
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) {
rank: 496
score: 99.35055541992188
patch: if ( type . != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 496
score: 99.2861099243164
patch: if ( type > Type . FUNCTION && type == Type . FUNCTION ) {
rank: 497
score: 99.42933349609375
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && ( local CaMeL Sets != 0 ) ) {
rank: 497
score: 99.41689724392361
patch: if ( ! ! is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 497
score: 99.41138756793478
patch: return ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; ;
rank: 497
score: 99.40563354492187
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 || parent == null ) {
rank: 497
score: 99.38590140964673
patch: if ( type == Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets ( type ) ) {
rank: 497
score: 99.38071160567434
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) )
rank: 497
score: 99.3758203125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != null && aliasing CaMeL Gets . is CaMeL Empty ( ) )
rank: 497
score: 99.35794067382812
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) ) { } else {
rank: 497
score: 99.34971618652344
patch: if ( type != Type . READ && aliasing CaMeL Gets > 0 ) {
rank: 498
score: 99.41679944490132
patch: if ( type != null || ! global CaMeL Sets . is CaMeL Empty ( ) ) {
rank: 498
score: 99.40555245535714
patch: if ( ! parent == null || parent . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 498
score: 99.38569641113281
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( 0 ) )
rank: 498
score: 99.38029399671052
patch: if ( parent == null || type . get CaMeL Twin ( ) != null ) {
rank: 498
score: 99.28601752387152
patch: if ( ( type == Type . FUNCTION ) || type != Type . FUNCTION ) {
rank: 499
score: 99.4291759672619
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ;
rank: 499
score: 99.41678017064145
patch: if ( can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ;
rank: 499
score: 99.4052734375
patch: if ( declaration . get CaMeL Twin ( ) . get CaMeL Node ( ) != null ) {
rank: 499
score: 99.35710144042969
patch: if ( type != Type . TYPE && type != Type . FUNCTION ) {
rank: 499
score: 99.34953308105469
patch: if ( type != Type . NULL || type != Type . FUNCTION ) {
rank: 499
score: 99.28593517485119
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 )
rank: 500
score: 99.4165771484375
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; } return true ;
rank: 500
score: 99.40485174005681
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return true ; }
rank: 500
score: 99.35665554470486
patch: if ( type != Type . FUNCTION && ! || aliasing CaMeL Gets > 0 ) {
rank: 500
score: 99.34950086805556
patch: if ( type . get CaMeL Name ( ) . length ( ) == 0 ) {
rank: 501
score: 99.4164306640625
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; } return true ; }
rank: 501
score: 99.40977894176136
patch: if ( type != Type . FUNCTION && parent . get CaMeL Type ( ) != Type . FUNCTION ) {
rank: 501
score: 99.38416245404412
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets ( 0 ) ) {
rank: 501
score: 99.37933959960938
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , parent ) ) {
rank: 501
score: 99.37529296875
patch: if ( type != null && type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 501
score: 99.34937201605902
patch: if ( type == Type . NULL && ( aliasing CaMeL Gets > 0 ) ) {
rank: 501
score: 99.2852783203125
patch: if ( get CaMeL Type ( ) . equals ( Type . FUNCTION ) ) {
rank: 502
score: 99.41639293323864
patch: if ( type != Type . TYPE || global CaMeL Sets != 0 || local CaMeL Sets != 0 ) {
rank: 502
score: 99.40933082217262
patch: if ( type . get CaMeL Twin ( ) != null || local CaMeL Sets != 0 ) {
rank: 502
score: 99.38388459578805
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type . equals ( type ) ) {
rank: 502
score: 99.37489720394737
patch: if ( type != Type . FUNCTION && ! ! aliasing CaMeL Gets ( type ) ) {
rank: 502
score: 99.3564517372533
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! FUNCTION ) {
rank: 503
score: 99.42807006835938
patch: if ( ( parent == null ) && ( is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 503
score: 99.41622488839286
patch: if ( type != Type . FUNCTION && ! declaration . get CaMeL Twin ( ) != null )
rank: 503
score: 99.40901184082031
patch: if ( declaration . get CaMeL Type ( ) != Type . FUNCTION ) {
rank: 503
score: 99.40426635742188
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( type ) ) {
rank: 503
score: 99.35639784071181
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . length == 0 ) {
rank: 503
score: 99.34848022460938
patch: if ( type != Type . NULL && type != Type . NONE ) {
rank: 503
score: 99.28484786184211
patch: if ( type == Type . FUNCTION || ! ( type == Type . FUNCTION ) ) {
rank: 504
score: 99.4278076171875
patch: if ( type != Type . FUNCTION && parent == null || local CaMeL Sets != 0 ) {
rank: 504
score: 99.41589936755952
patch: if ( type != Type . TYPE && ! type . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 504
score: 99.40871263586956
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) ;
rank: 504
score: 99.38377844769022
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets ( 0 ) ) {
rank: 504
score: 99.3786685341283
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( this ) ) {
rank: 504
score: 99.355712890625
patch: if ( type != Type . FUNCTION | aliasing CaMeL Gets > 0 ) {
rank: 504
score: 99.28470009251645
patch: if ( ( type != Type . FUNCTION ) || ( type == Type . FUNCTION ) )
rank: 505
score: 99.40374200994319
patch: if ( ( parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 505
score: 99.37849256727431
patch: if ( get . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 505
score: 99.37355443050987
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . is CaMeL Empty ( ) )
rank: 505
score: 99.34739774816177
patch: if ( ! type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 506
score: 99.41526489257812
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; } return false ;
rank: 506
score: 99.40851384943181
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) throws
rank: 506
score: 99.40365939670139
patch: if ( declaration . type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 506
score: 99.38369140625
patch: if ( type != Type . FUNCTION && type instanceof Type && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 506
score: 99.37809244791667
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { / *
rank: 506
score: 99.35474310980902
patch: if ( ! type . == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 507
score: 99.42645263671875
patch: if ( ( parent == null ) || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 507
score: 99.4150158110119
patch: if ( declaration . get CaMeL Twin ( ) != null && local CaMeL Sets != 1 ) {
rank: 507
score: 99.40828450520833
patch: if ( declaration . get CaMeL Twin ( ) != null || global CaMeL Sets != 1 ) {
rank: 507
score: 99.3835979959239
patch: if ( type != Type . FUNCTION && ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) )
rank: 507
score: 99.34703911675348
patch: if ( type == Type . FUNCTION && ( aliasing CaMeL Gets > 1 ) ) {
rank: 507
score: 99.28298611111111
patch: if ( type != Type . FUNCTION && ! is CaMeL Set ( type ) ) {
rank: 508
score: 99.41467815896739
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum && declaration . get CaMeL Twin ( ) != null )
rank: 508
score: 99.40794788707386
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) }
rank: 508
score: 99.40340383429276
patch: if ( declaration . equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 508
score: 99.38357204861111
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets $NUMBER$ 0 > 0 ) {
rank: 508
score: 99.37758178710938
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , declaration ) ) {
rank: 508
score: 99.35418023003473
patch: if ( type != Type . FUNCTION && ! type . == Type . FUNCTION ) {
rank: 509
score: 99.41456909179688
patch: if ( type != null && type . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 509
score: 99.38349151611328
patch: if ( type instanceof Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 509
score: 99.3775146484375
patch: if ( declaration . get CaMeL Twin ( ) != null || local CaMeL Sets != null )
rank: 509
score: 99.37293497721355
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! type . is CaMeL Empty ( ) )
rank: 509
score: 99.35415310329861
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && true ) {
rank: 509
score: 99.34698486328125
patch: if ( type . get CaMeL Name ( ) . length ( ) > 0 ) {
rank: 510
score: 99.42490234375
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum && aliasing CaMeL Gets > 0 ) ) {
rank: 510
score: 99.40281168619792
patch: if ( ( parent == null ) && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 510
score: 99.37698184742646
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > - 1 ) {
rank: 510
score: 99.37276204427083
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != null && aliasing CaMeL Gets . contains ( type ) )
rank: 510
score: 99.34670003255208
patch: if ( type . is CaMeL Interface ( ) ) {
rank: 511
score: 99.4248779296875
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && this . local CaMeL Sets != 0 ) {
rank: 511
score: 99.41424919577206
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; } else
rank: 511
score: 99.4075594815341
patch: if ( parent != null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 511
score: 99.40250244140626
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && parent != null ) {
rank: 511
score: 99.38250411184211
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( 0 , 0 ) ) {
rank: 511
score: 99.37631564670139
patch: if ( ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 511
score: 99.3466796875
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && type ) {
rank: 511
score: 99.28187866210938
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 ) { return false ; }
rank: 512
score: 99.42483181423611
patch: if ( type != Type . FUNCTION && global CaMeL Sets . length == 0 ) {
rank: 512
score: 99.41364135742188
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 ) { return false ; }
rank: 512
score: 99.40201568603516
patch: if ( type != Type . NOT || aliasing CaMeL Gets > 0 ) {
rank: 512
score: 99.37612735523896
patch: if ( aliasing CaMeL Gets > 0 && is CaMeL Class CaMeL Or CaMeL Enum )
rank: 512
score: 99.3711669921875
patch: if ( type != null && type == Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 512
score: 99.35330636160714
patch: if ( type != Type . FUNCTION && type != 0 ) {
rank: 512
score: 99.34662272135417
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION )
rank: 512
score: 99.28130744485294
patch: if ( get CaMeL Name ( ) . equals ( Type . FUNCTION ) ) {
rank: 513
score: 99.42462768554688
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 && parent == null ) {
rank: 513
score: 99.41353113511029
patch: if ( ! global CaMeL Sets != 0 || local CaMeL Sets != 0 ) {
rank: 513
score: 99.40184384300595
patch: if ( declaration . get CaMeL Twin ( ) == null || aliasing CaMeL Gets > 1 ) {
rank: 513
score: 99.3818603515625
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION && type instanceof Type ) {
rank: 513
score: 99.37576454564145
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , parent ) )
rank: 513
score: 99.37100074404762
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > ) {
rank: 513
score: 99.35291137695313
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return 0 ; }
rank: 513
score: 99.34642198350694
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION && ! ) {
rank: 513
score: 99.28119768415179
patch: if ( type != null || type != Type . FUNCTION ) {
rank: 514
score: 99.42451171875
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 ) { return true ; }
rank: 514
score: 99.41344401041667
patch: if ( type != null || ! aliasing CaMeL Gets > 0 ) {
rank: 514
score: 99.37574527138158
patch: if ( this . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) ) {
rank: 514
score: 99.35289171006944
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 . 0 ) {
rank: 514
score: 99.34589301215277
patch: if ( type instanceof Type ) { if ( ! aliasing CaMeL Gets > 0 ) {
rank: 515
score: 99.41322393002717
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum || global CaMeL Sets != 0 )
rank: 515
score: 99.406494140625
patch: if ( get CaMeL Twin ( ) != null || ( aliasing CaMeL Gets > 0 ) ) {
rank: 515
score: 99.37559750205592
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , ) )
rank: 515
score: 99.37077985491071
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets ( type ) != Type . FUNCTION ) {
rank: 515
score: 99.34502096737133
patch: if ( ! type != Type . NULL && aliasing CaMeL Gets > 0 ) {
rank: 516
score: 99.42426893446181
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && global CaMeL Sets != 1 ) {
rank: 516
score: 99.4128750887784
patch: if ( type != Type . NOT || global CaMeL Sets != 0 || local CaMeL Sets != 0 ) {
rank: 516
score: 99.4057384672619
patch: if ( type != Type . FUNCTION || declaration . get CaMeL Twin ( ) == null ) {
rank: 516
score: 99.37538548519737
patch: if ( parent == null || can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 516
score: 99.35218570106908
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type > 0 ) ) {
rank: 517
score: 99.42418755425348
patch: if ( ref . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 517
score: 99.41281362680289
patch: if ( aliasing CaMeL Gets > 0 ) { return false ;
rank: 517
score: 99.37509494357639
patch: if ( parent != null || parent . get CaMeL Twin ( ) != null )
rank: 517
score: 99.37030707465277
patch: if ( type != Type . FUNCTION && type . is CaMeL Local ( ) ) {
rank: 517
score: 99.35186767578125
patch: if = type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 517
score: 99.34482709099265
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION ) { {
rank: 517
score: 99.27926815257354
patch: if ( type == Type . FUNCTION && ! aliasing CaMeL Gets == null ) {
rank: 518
score: 99.40549926757812
patch: if ( type != Type . FUNCTION && declaration . get CaMeL Class ( ) != null ) {
rank: 518
score: 99.38111877441406
patch: if ( type == Type . DEFAULT && aliasing CaMeL Gets > 0 ) {
rank: 518
score: 99.37505744485294
patch: if ( get CaMeL Twin ( ) != null ) { return true ; }
rank: 518
score: 99.37019653320313
patch: if ( type != null || type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 518
score: 99.351806640625
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 , 0 ) {
rank: 519
score: 99.42393663194444
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 ) return false ;
rank: 519
score: 99.41236413043478
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum && local CaMeL Sets != 0 )
rank: 519
score: 99.38108424136513
patch: if ( type . ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 519
score: 99.34390258789062
patch: if ( type != Type . FUNCTION && type != Type . NAME ) {
rank: 519
score: 99.27872721354167
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION ) return false ;
rank: 520
score: 99.37495502672698
patch: if ( ! ! type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 520
score: 99.36903076171875
patch: if ( type != null && type != Type . FUNCTION && type == Type . FUNCTION ) {
rank: 520
score: 99.34390079273896
patch: if ( type != Type . NAME && ! aliasing CaMeL Gets > 0 ) {
rank: 521
score: 99.41197138247283
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum && global CaMeL Sets != 0 )
rank: 521
score: 99.37483295641448
patch: if ( parent == null || declaration . get CaMeL Twin ( ) != 1 ) {
rank: 521
score: 99.36891575863487
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) { return false ;
rank: 522
score: 99.4219970703125
patch: if ( global CaMeL Sets != 0 && local CaMeL Sets != 0 ) {
rank: 522
score: 99.41195015285327
patch: if ( type != Type . TYPE && global CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 522
score: 99.37453787667411
patch: if ( parent == null || local CaMeL Sets != 0 ) {
rank: 522
score: 99.368623046875
patch: if ( type != Type . FUNCTION && type . equals ( Type . FUNCTION || type != Type . FUNCTION ) ) {
rank: 522
score: 99.35026041666667
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 , 0 ) {
rank: 522
score: 99.34348431755515
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets . length > 0 )
rank: 522
score: 99.27796223958333
patch: if ( get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 523
score: 99.42182159423828
patch: if ( type == Type . FUNCTION && global CaMeL Sets != 1 ) {
rank: 523
score: 99.41192336309524
patch: if ( declaration . get CaMeL Twin ( ) != null && local CaMeL Sets == 0 ) {
rank: 523
score: 99.40452575683594
patch: if ( type != Type . FUNCTION && local CaMeL Sets > 0 ) {
rank: 523
score: 99.40018136160714
patch: return parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ;
rank: 523
score: 99.37422943115234
patch: if ( id != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 523
score: 99.36855597245066
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) == null ) {
rank: 523
score: 99.3434196920956
patch: if ( ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 523
score: 99.27792358398438
patch: if ( type != Type . ALL && aliasing CaMeL Gets > 0 ) {
rank: 524
score: 99.41177707248264
patch: if ( ! ( declaration . get CaMeL Twin ( ) != null ) ) {
rank: 524
score: 99.40003204345703
patch: if ( key == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 524
score: 99.37999957540761
patch: if ( type != Type . FUNCTION && type . get CaMeL Name ( ) . length ( ) == 0 )
rank: 524
score: 99.37405215992646
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > - $NUMBER$ ) {
rank: 524
score: 99.34963507401316
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type , this ) ) {
rank: 524
score: 99.3431396484375
patch: if ( ! ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) )
rank: 524
score: 99.27774810791016
patch: if ( type > Type . FUNCTION && type != Type . FUNCTION ) {
rank: 525
score: 99.41169539741848
patch: if ( type != Type . FUNCTION && local CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 525
score: 99.37405056423611
patch: return ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 525
score: 99.36819590692934
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 ) { {
rank: 525
score: 99.34937286376953
patch: if ( this != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 525
score: 99.34274291992188
patch: if ( type != Type . LOCAL && aliasing CaMeL Gets > 0 ) {
rank: 525
score: 99.27741834852431
patch: / * if ( type != Type . FUNCTION && type != Type . FUNCTION ) {
rank: 526
score: 99.4216076078869
patch: if ( ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ) {
rank: 526
score: 99.41168212890625
patch: / * if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 526
score: 99.37367650082237
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 1 ) ) {
rank: 526
score: 99.34269205729167
patch: if ( type . is CaMeL None ( ) ) {
rank: 526
score: 99.27711486816406
patch: if ( element != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 527
score: 99.42116292317708
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && local CaMeL Sets != 1 ) {
rank: 527
score: 99.41167922247024
patch: if ( type != null || type . is CaMeL Class CaMeL Or CaMeL Enum ) { return true ;
rank: 527
score: 99.40286254882812
patch: if ( type != Type . FUNCTION && declaration . get CaMeL Id ( ) == null ) {
rank: 527
score: 99.367890625
patch: if ( type != Type . FUNCTION || ! type . is CaMeL Empty ( ) && aliasing CaMeL Gets > 0 ) {
rank: 527
score: 99.34916178385417
patch: if ( aliasing CaMeL Gets ( type , aliasing CaMeL Gets ( type ) ) ) {
rank: 527
score: 99.34206973805146
patch: if ( type == Type . EMPTY && ! aliasing CaMeL Gets > 0 ) {
rank: 527
score: 99.2766845703125
patch: if ( aliasing CaMeL Gets ( type ) != Type . FUNCTION ) {
rank: 528
score: 99.41167602539062
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; } else return false ;
rank: 528
score: 99.37970291940789
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets . size ( ) > 0 )
rank: 528
score: 99.37255859375
patch: if ( type != Type . FUNCTION && parent . aliasing CaMeL Gets > 0 ) {
rank: 528
score: 99.276611328125
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets == 0 ) {
rank: 529
score: 99.40267280910327
patch: return ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ; public
rank: 529
score: 99.3796142578125
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets . size ( ) == 0 ) {
rank: 529
score: 99.34869384765625
patch: if ( type != Type . type && aliasing CaMeL Gets > 0 ) {
rank: 529
score: 99.34190538194444
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets . length > 0 ) {
rank: 529
score: 99.27643500434027
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets == Type . FUNCTION ) {
rank: 530
score: 99.42019653320312
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || ( aliasing CaMeL Gets > 0 ) ) {
rank: 530
score: 99.4114102450284
patch: if ( local CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 530
score: 99.39901733398438
patch: if ( parent == null ) {
rank: 530
score: 99.37959289550781
patch: if ( node != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 530
score: 99.37211100260417
patch: if ( get CaMeL Twin ( ) != null || local CaMeL Sets != 0 )
rank: 530
score: 99.34841739430146
patch: if ( ! aliasing CaMeL Gets ( ) && aliasing CaMeL Gets ( ) ) {
rank: 530
score: 99.2762810202206
patch: if ( type != Type . FUNCTION && is CaMeL Instance ( type ) ) {
rank: 531
score: 99.40203302556819
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) )
rank: 531
score: 99.37198036595395
patch: try { return parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ; }
rank: 531
score: 99.36705864800348
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets || aliasing CaMeL Gets ) {
rank: 531
score: 99.34156709558823
patch: if ( type != Type . NONE && aliasing CaMeL Gets > 0 ) { {
rank: 532
score: 99.41916128305289
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 532
score: 99.40189208984376
patch: if ( type != Type . FUNCTION && parent != null || local CaMeL Sets != 0 ) {
rank: 532
score: 99.37946883491848
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets > 0 ) {
rank: 532
score: 99.37192670036765
patch: else if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 532
score: 99.36697998046876
patch: if ( type != null && type != Type . FUNCTION && aliasing CaMeL Gets != null ) {
rank: 532
score: 99.34119415283203
patch: if ( type == Type . NO && aliasing CaMeL Gets > 0 ) {
rank: 532
score: 99.27549115349265
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets != 0 ) {
rank: 533
score: 99.41906060112848
patch: if ( type != Type . OTHER && ( aliasing CaMeL Gets > 0 ) ) {
rank: 533
score: 99.39843139648437
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 || parent != null ) {
rank: 533
score: 99.37944793701172
patch: if ( type != Type . YES && aliasing CaMeL Gets > 0 ) {
rank: 533
score: 99.37154348273026
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( - 1 ) )
rank: 533
score: 99.36685791015626
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( aliasing CaMeL Gets > ) ) {
rank: 533
score: 99.34771728515625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) ) { return 0 ;
rank: 533
score: 99.34113311767578
patch: if ( type == Type . NULL && type == Type . FUNCTION ) {
rank: 533
score: 99.2754135131836
patch: if ( aliasing CaMeL Gets > 0 || aliasing CaMeL Gets != 0 ) {
rank: 534
score: 99.41100492931548
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 && local CaMeL Sets != 0 )
rank: 534
score: 99.40169067382813
patch: if ( parent == null || type . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 534
score: 99.37117513020833
patch: if ( parent . get CaMeL Twin ( ) != null ) { return true ;
rank: 534
score: 99.36666737432066
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) {
rank: 534
score: 99.34735785590277
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) 0 ) {
rank: 534
score: 99.27513292100694
patch: if ( type == Type . FUNCTION && get CaMeL Types ( ) == null ) {
rank: 535
score: 99.41095377604167
patch: if ( type != Type . TYPE && aliasing CaMeL Gets > 0 )
rank: 535
score: 99.40166945684524
patch: if ( get CaMeL Twin ( ) . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 535
score: 99.39810180664062
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( )
rank: 535
score: 99.3792495727539
patch: if ( type != Type . LINE && aliasing CaMeL Gets > 0 ) {
rank: 535
score: 99.36666067023026
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets . equals ( type ) ) {
rank: 535
score: 99.34099578857422
patch: if ( type == Type . NONE && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 535
score: 99.27434624565973
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 ) return null ;
rank: 536
score: 99.41057022758152
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; } else
rank: 536
score: 99.40029074928977
patch: if ( ! get CaMeL Twin ( ) . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 536
score: 99.37080383300781
patch: if ( get == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 536
score: 99.36609417459239
patch: if ( type == Type . FUNCTION && ! type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 536
score: 99.34713406032986
patch: if ( ! type != Type . FUNCTION && aliasing CaMeL Gets ( type ) ) {
rank: 536
score: 99.34098985460069
patch: if ( aliasing CaMeL Gets > 0 ) { return aliasing CaMeL Gets > 0 ; }
rank: 536
score: 99.2743278952206
patch: if ( type == Type . FUNCTION && ! type != Type . FUNCTION ) {
rank: 537
score: 99.41842830882354
patch: if ( type != Type . OTHER && ! aliasing CaMeL Gets > 0 ) {
rank: 537
score: 99.40016682942708
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ? aliasing CaMeL Gets > 0 ) {
rank: 537
score: 99.39659423828125
patch: if ( get CaMeL Type ( ) != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 537
score: 99.37070599724265
patch: if ( parent == null || get CaMeL Twin ( ) != null ) {
rank: 537
score: 99.34072875976562
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets < 0 ) {
rank: 538
score: 99.41035388764881
patch: if ( type != Type . TYPE && is CaMeL Class CaMeL Or CaMeL Enum ) { return true ;
rank: 538
score: 99.39998372395833
patch: if ( input . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 538
score: 99.39653015136719
patch: if ( type != Type . class || aliasing CaMeL Gets > 0 ) {
rank: 538
score: 99.37857719089673
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { {
rank: 538
score: 99.33993709788604
patch: if ( type != Type . STRING && ! aliasing CaMeL Gets > 0 ) {
rank: 538
score: 99.27366727941177
patch: if ( type != Type . FUNCTION && is CaMeL Name ( type ) ) {
rank: 539
score: 99.4180908203125
patch: if ( type != null || type != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 539
score: 99.39619954427083
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || aliasing CaMeL Gets > 1 ) {
rank: 539
score: 99.37042557565789
patch: if ( type != null || parent . get CaMeL Twin ( ) != null ) {
rank: 539
score: 99.34635844983552
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && ! $NUMBER$ ) {
rank: 539
score: 99.33980305989583
patch: if ( type != Type . FUNCTION && type . type != Type . FUNCTION ) {
rank: 540
score: 99.41020275297619
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { return ; }
rank: 540
score: 99.39977416992187
patch: if ( type != Type . FUNCTION && declaration . get CaMeL Module ( ) != null ) {
rank: 540
score: 99.34613037109375
patch: if ( type != Name . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 540
score: 99.33957088694854
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) { {
rank: 541
score: 99.39553833007812
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 1 ) ) {
rank: 541
score: 99.37018785978618
patch: if ( type != Type . FUNCTION && get CaMeL Twin ( ) == null ) {
rank: 541
score: 99.36560546875
patch: if ( type != Type . FUNCTION && type . equals ( Type . FUNCTION && type != Type . FUNCTION ) ) {
rank: 541
score: 99.33934190538194
patch: if ( ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) ) {
rank: 541
score: 99.27180480957031
patch: if ( aliasing CaMeL Gets > FUNCTION || type != Type . FUNCTION ) {
rank: 542
score: 99.41781955295139
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || type != Type . FUNCTION ) {
rank: 542
score: 99.41015625
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( aliasing CaMeL Gets > 0 ) return false ;
rank: 542
score: 99.39483351934524
patch: if ( declaration . get CaMeL Twin ( ) . get CaMeL Visibility ( ) != null ) {
rank: 542
score: 99.37803248355263
patch: if ( type != Type . FUNCTION ) { System . out . println ( $STRING$ ) ;
rank: 542
score: 99.36976453993056
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( 0 ) )
rank: 542
score: 99.33743286132812
patch: if ( mode != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 542
score: 99.27112494574652
patch: if ( type == Type . FUNCTION && get CaMeL Name ( ) != null ) {
rank: 543
score: 99.41002836681548
patch: if ( type != null || type . is CaMeL Class CaMeL Or CaMeL Enum ) { return false ;
rank: 543
score: 99.39784307065217
patch: if ( ( declaration == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 543
score: 99.36964326746323
patch: if ( this . parent . get CaMeL Twin ( ) != null ) {
rank: 543
score: 99.33673095703125
patch: if ( ! type . is CaMeL Assignable CaMeL From ( type ) ) {
rank: 543
score: 99.27097574869792
patch: if ( ( type != Type . FUNCTION && type == Type . FUNCTION ) ) {
rank: 544
score: 99.41715280633224
patch: if ( type != Type . FUNCTION || get CaMeL Twin ( ) != null ) {
rank: 544
score: 99.41002197265625
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; } return true ;
rank: 544
score: 99.37614889705883
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { )
rank: 544
score: 99.3438720703125
patch: type else if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 544
score: 99.33651529947916
patch: if ( type == Type . NONE && aliasing CaMeL Gets > 0 )
rank: 545
score: 99.40995708264802
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 ) { return false ;
rank: 545
score: 99.36912135074013
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , this ) )
rank: 545
score: 99.36502878289474
patch: if ( type != null && type != Type . FUNCTION && aliasing CaMeL Gets > ) {
rank: 545
score: 99.33607482910156
patch: if ( type == Type . NULL || type == Type . FUNCTION ) {
rank: 545
score: 99.27037556966145
patch: if ( ( type != Type . FUNCTION ) ) {
rank: 546
score: 99.41656494140625
patch: if ( type != Type . FUNCTION && global CaMeL Sets < 0 ) {
rank: 546
score: 99.40988991477273
patch: if ( ! declaration . get CaMeL Twin ( ) != null && aliasing CaMeL Gets > 0 ) {
rank: 546
score: 99.39699096679688
patch: if ( type != Type . FUNCTION && declaration . get CaMeL Node ( ) != null ) {
rank: 546
score: 99.36869981553819
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 546
score: 99.34365844726562
patch: if ( code != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 546
score: 99.33595275878906
patch: while ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 546
score: 99.27031792534723
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets == Type . FUNCTION ) {
rank: 547
score: 99.40976784446023
patch: if ( type != Type . FUNCTION || global CaMeL Sets == 0 || local CaMeL Sets != 0 ) {
rank: 547
score: 99.37436092601104
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets $NUMBER$ > 0 ) {
rank: 547
score: 99.36797131990132
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , null ) )
rank: 547
score: 99.34339904785156
patch: if ( this == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 547
score: 99.33586569393383
patch: if ( type == Type . FUNCTION && type aliasing CaMeL Gets > 0 ) {
rank: 547
score: 99.270263671875
patch: if ( type > Type . FUNCTION && ! aliasing CaMeL Gets > 0 ) {
rank: 548
score: 99.41579075863487
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum && local CaMeL Sets != 0 ) {
rank: 548
score: 99.37408447265625
patch: if ( type ( ) == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 548
score: 99.3671875
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { }
rank: 548
score: 99.36377970377605
patch: if ( type != Type . FUNCTION && ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 548
score: 99.34312037417763
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && ! $NUMBER$ ) {
rank: 548
score: 99.33521270751953
patch: if ( type != Type . TARGET && aliasing CaMeL Gets > 0 ) {
rank: 548
score: 99.27007293701172
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets >= 0 ) {
rank: 549
score: 99.3958407315341
patch: if ( ( parent == null || parent . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) ) {
rank: 549
score: 99.36701403166118
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { ;
rank: 549
score: 99.3635189658717
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) ) return false ;
rank: 549
score: 99.34287516276042
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 , $STRING$ ) {
rank: 549
score: 99.33501519097223
patch: if ( type != Type . FUNCTION && type ( ) != Type . FUNCTION ) {
rank: 549
score: 99.26984405517578
patch: if ( value == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 550
score: 99.41534423828125
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 || parent != null ) {
rank: 550
score: 99.4093505859375
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Class CaMeL Or CaMeL Enum )
rank: 550
score: 99.36695620888158
patch: if ( get CaMeL Twin ( ) != null || local CaMeL Sets != 1 ) {
rank: 550
score: 99.34281782670455
patch: if ( aliasing CaMeL Gets ( type ) ) {
rank: 550
score: 99.33489990234375
patch: if ( type == Type . TRUE && aliasing CaMeL Gets > 0 ) {
rank: 551
score: 99.4086026278409
patch: if ( type != Type . FUNCTION && can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) )
rank: 551
score: 99.3665707236842
patch: if ( ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) )
rank: 551
score: 99.342529296875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) != 1 ) {
rank: 551
score: 99.33474731445312
patch: if ( type != Type . EMPTY && aliasing CaMeL Gets > 1 ) {
rank: 551
score: 99.26956176757812
patch: if ( type != Type . TYPE || type != Type . FUNCTION ) {
rank: 552
score: 99.41487121582031
patch: if ( type == Type . OTHER && global CaMeL Sets != 0 ) {
rank: 552
score: 99.40854714133523
patch: if ( local CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 552
score: 99.37283664279514
patch: if ( type != Type . FUNCTION ) { if ( aliasing CaMeL Gets > 0 )
rank: 552
score: 99.3346176147461
patch: if ( type != Type . EMPTY && type != Type . FUNCTION ) {
rank: 553
score: 99.40854220920139
patch: if ( type . is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 553
score: 99.34200246710526
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { / * /
rank: 553
score: 99.33448621961806
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Const ( ) )
rank: 553
score: 99.26862250434027
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION ) return false ;
rank: 554
score: 99.41466000205592
patch: if ( ! ( type != Type . FUNCTION && global CaMeL Sets != 0 ) ) {
rank: 554
score: 99.40833740234375
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; } else return true ;
rank: 554
score: 99.39368960731908
patch: if ( name != null || declaration . get CaMeL Twin ( ) != null ) {
rank: 554
score: 99.37240439967105
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets ( 0 , type ) ) {
rank: 554
score: 99.33428955078125
patch: if ( type == Type . FUNCTION && type . equals ( Type . FUNCTION ) )
rank: 555
score: 99.41460890997024
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 || aliasing CaMeL Gets > 0 )
rank: 555
score: 99.40824962797619
patch: if ( declaration . get CaMeL Twin ( ) != null || ! aliasing CaMeL Gets > 0 )
rank: 555
score: 99.39040958180146
patch: try { if ( declaration . get CaMeL Twin ( ) != null ) {
rank: 555
score: 99.37226698133681
patch: if ( type != Type . FUNCTION ) { return aliasing CaMeL Gets > 0 ) ;
rank: 555
score: 99.36578690378289
patch: if ( aliasing CaMeL Gets > 0 || ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 555
score: 99.33386948529412
patch: if ( type != Type . FUNCTION && ( aliasing CaMeL Gets > 0 ) {
rank: 555
score: 99.26835632324219
patch: if ( type > Type . FUNCTION || type != Type . FUNCTION ) {
rank: 556
score: 99.3933337983631
patch: if ( declaration . get CaMeL Twin ( ) != null || aliasing CaMeL Gets != 0 ) {
rank: 556
score: 99.37183678668478
patch: if ( ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) )
rank: 556
score: 99.36568410773026
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) )
rank: 556
score: 99.361572265625
patch: if ( ! type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 ) {
rank: 556
score: 99.34085243626645
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && ! 1 ) {
rank: 556
score: 99.26811000279018
patch: if ( ! type . contains ( Type . FUNCTION ) ) {
rank: 557
score: 99.37178802490234
patch: if ( type instanceof Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 557
score: 99.36566925048828
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 1 ) {
rank: 557
score: 99.36143734580592
patch: if ( type != Type . FUNCTION && ! ( aliasing CaMeL Gets > 1 ) ) {
rank: 557
score: 99.33314344618056
patch: if ( type . is CaMeL None ( ) ) { return true ; } else {
rank: 557
score: 99.26774597167969
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > type ) {
rank: 558
score: 99.41342502170139
patch: / * if ( type != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 558
score: 99.39136851917614
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { { return false ;
rank: 558
score: 99.37162780761719
patch: if ( namespace != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 558
score: 99.36552159926471
patch: if ( can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) ) {
rank: 558
score: 99.33303653492646
patch: if ( type == Type . NULL && aliasing CaMeL Gets > 0 ) { {
rank: 559
score: 99.40738718133224
patch: if ( ! declaration . get CaMeL Twin ( ) != null ) { return true ;
rank: 559
score: 99.37148030598958
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { type = Type . FUNCTION ;
rank: 559
score: 99.36128743489583
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets . contains ( type ) )
rank: 559
score: 99.33203938802083
patch: if ( type != Type . EMPTY && aliasing CaMeL Gets > 0 )
rank: 560
score: 99.40721594769022
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ) { return false ;
rank: 560
score: 99.38973388671874
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; } return false ; }
rank: 560
score: 99.37090100740132
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . 0 ( type ) ) {
rank: 560
score: 99.36520724826389
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 560
score: 99.36085420496323
patch: if ( type != Type . FUNCTION && ! is CaMeL Primitive ( ) ) {
rank: 560
score: 99.33840044806985
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && type {
rank: 560
score: 99.33171530330883
patch: if ( type . is CaMeL Assignable CaMeL From ( Type . FUNCTION ) ) {
rank: 561
score: 99.36505448190789
patch: if ( parent != null || type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 561
score: 99.33831108940973
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type . TYPE ) {
rank: 561
score: 99.26667336856617
patch: if ( type == Type . FUNCTION || ! type != Type . FUNCTION ) {
rank: 562
score: 99.41265869140625
patch: if ( global CaMeL Sets != 0 || aliasing CaMeL Gets > 0 ) {
rank: 562
score: 99.406884765625
patch: if ( ! declaration . get CaMeL Twin ( ) != null ) { return true ; }
rank: 562
score: 99.38956909179687
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 || parent != null ) {
rank: 562
score: 99.3702328330592
patch: if ( type . equals ( Type . FUNCTION ) && aliasing CaMeL Gets > 1 ) {
rank: 562
score: 99.36472681949013
patch: if ( declaration . get CaMeL Twin ( ) != 1 ) { return false ; }
rank: 562
score: 99.3314208984375
patch: if ( is CaMeL Interface ( ) && aliasing CaMeL Gets > 0 ) {
rank: 563
score: 99.41260375976563
patch: if ( type != Type . FUNCTION && parent == Type . FUNCTION && parent != null ) {
rank: 563
score: 99.4067049893466
patch: if ( global CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 563
score: 99.38827514648438
patch: if ( this . type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 563
score: 99.36065673828125
patch: if ( ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) && aliasing CaMeL Gets != 0 ) {
rank: 563
score: 99.33090549045139
patch: if ( type != Type . NULL && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 563
score: 99.26646592881944
patch: if ( type == Type . FUNCTION && ! ( type == Type . FUNCTION ) )
rank: 564
score: 99.41258480674342
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || ! aliasing CaMeL Gets > 0 ) {
rank: 564
score: 99.4067023782169
patch: if ( type != Type . FUNCTION && ! local CaMeL Sets != 0 ) {
rank: 564
score: 99.38739013671875
patch: if ( type != Type . FUNCTION && declaration . get CaMeL Scope ( ) != null ) {
rank: 564
score: 99.36958143446181
patch: if ( type . type != Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 564
score: 99.36415501644737
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( parent != null ) {
rank: 564
score: 99.33792114257812
patch: if ( type != Type . Void && aliasing CaMeL Gets > 0 ) {
rank: 564
score: 99.330810546875
patch: if ( type == Type . FUNCTION && ( aliasing CaMeL Gets > 0 ) )
rank: 564
score: 99.26610565185547
patch: if ( type != Type . FUNCTION || type == Type . NULL ) {
rank: 565
score: 99.38909912109375
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) false ) {
rank: 565
score: 99.36404854910714
patch: if ( type . get CaMeL Twin ( ) != null )
rank: 565
score: 99.36053466796875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . type != Type . FUNCTION ) {
rank: 565
score: 99.33757467830883
patch: if ( type type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 565
score: 99.33025360107422
patch: if ( type != Type . CONTINUE && aliasing CaMeL Gets > 0 ) {
rank: 565
score: 99.26569475446429
patch: if ( type != null && type == Type . FUNCTION ) {
rank: 566
score: 99.41185805376838
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 ) { }
rank: 566
score: 99.38900902157738
patch: if ( declaration . get CaMeL Twin ( ) . get CaMeL Name ( ) != null ) {
rank: 566
score: 99.38727416992188
patch: if ( declaration . get CaMeL Type CaMeL Name ( ) . length ( ) > 0 ) {
rank: 566
score: 99.3640072471217
patch: if ( ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 566
score: 99.33741590711806
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) return $NUMBER$ ;
rank: 566
score: 99.33004940257354
patch: if ( type . compare CaMeL To ( Type . FUNCTION ) > 0 ) {
rank: 566
score: 99.26462227957589
patch: if ( get CaMeL Class ( ) != Type . FUNCTION ) {
rank: 567
score: 99.40548366970486
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || 0 ) {
rank: 567
score: 99.3637631064967
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) && aliasing CaMeL Gets > 0 )
rank: 567
score: 99.35988362630208
patch: if ( type != Type . FUNCTION && ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) ) {
rank: 567
score: 99.33712429470486
patch: if ( type == Type . Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 567
score: 99.32975260416667
patch: if ( type instanceof Type ) { return aliasing CaMeL Gets > 0 ; } else {
rank: 568
score: 99.36334635416667
patch: if ( aliasing CaMeL Gets > 0 || local CaMeL Sets != 0 )
rank: 568
score: 99.32937442555146
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && ) {
rank: 568
score: 99.26400756835938
patch: if ( type != Type . FUNCTION && parent == Type . FUNCTION ) {
rank: 569
score: 99.36310135690789
patch: if ( null != parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 569
score: 99.35922241210938
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type && aliasing CaMeL Gets ( type ) ) ) {
rank: 569
score: 99.33675130208333
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 {
rank: 569
score: 99.3288803100586
patch: if ( type != Type . RIGHT && aliasing CaMeL Gets > 0 ) {
rank: 570
score: 99.40515718005952
patch: if ( declaration . get CaMeL Type ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 570
score: 99.36867161800987
patch: if ( type . equals ( Type . FUNCTION ) && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 570
score: 99.3624267578125
patch: if ( parent == null || aliasing CaMeL Gets > 0 )
rank: 570
score: 99.33654106987848
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && true ) {
rank: 571
score: 99.40514026988636
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && global CaMeL Sets == 0 ) {
rank: 571
score: 99.38770751953125
patch: if ( get CaMeL Twin ( ) . get CaMeL Twin ( ) == null ) {
rank: 571
score: 99.38588579963235
patch: if ( declaration . get CaMeL Name ( ) . equals ( null ) ) {
rank: 571
score: 99.33643934461806
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && false ) {
rank: 571
score: 99.32807922363281
patch: if ( type != Type . NULL && ! aliasing CaMeL Gets > 0 )
rank: 572
score: 99.40497147409539
patch: if ( ! global CaMeL Sets != 1 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 572
score: 99.36724853515625
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 > 0 ) {
rank: 572
score: 99.36233038651316
patch: if ( aliasing CaMeL Gets > 0 || ( is CaMeL Class CaMeL Or CaMeL Enum ) )
rank: 572
score: 99.35874430338542
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets . equals ( $STRING$ ) )
rank: 572
score: 99.32778033088235
patch: if ( type == Type . NAME && ! aliasing CaMeL Gets > 0 ) {
rank: 572
score: 99.2621078491211
patch: if ( type > Type . FUNCTION || type == Type . FUNCTION ) {
rank: 573
score: 99.38734944661458
patch: if ( parent == null || parent . get CaMeL Id ( ) != null ) {
rank: 573
score: 99.38560267857143
patch: if ( declaration == null || aliasing CaMeL Gets > 0 ) {
rank: 573
score: 99.36667887369792
patch: if ( type . type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 573
score: 99.36229705810547
patch: if ( type != Type . $STRING$ && aliasing CaMeL Gets > 0 ) {
rank: 573
score: 99.35848659939236
patch: if ( type != null && aliasing CaMeL Gets . is CaMeL Empty ( ) ) {
rank: 573
score: 99.33586290147569
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 > 1 ) {
rank: 573
score: 99.32776641845703
patch: if ( type == Type . VOID && aliasing CaMeL Gets > 0 ) {
rank: 573
score: 99.2619873046875
patch: if ( $STRING$ . equals ( aliasing CaMeL Gets > 0 ) ) {
rank: 574
score: 99.38541452508224
patch: if ( declaration . get CaMeL Twin ( ) . is CaMeL Enum ( ) ) {
rank: 574
score: 99.36607530381944
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type == Type . FUNCTION ) {
rank: 574
score: 99.3621826171875
patch: if ( ! can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 574
score: 99.32762953814338
patch: if ( ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) )
rank: 574
score: 99.2613525390625
patch: if ( type != Type . LEFT && aliasing CaMeL Gets > 0 ) {
rank: 575
score: 99.40470747514205
patch: if ( global CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 575
score: 99.38536241319444
patch: if ( ! can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) ) {
rank: 575
score: 99.32731119791667
patch: if ( ! type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { {
rank: 575
score: 99.2610222311581
patch: if ( type > Type . FUNCTION && ! type == Type . FUNCTION ) {
rank: 576
score: 99.40455163043478
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; } else
rank: 576
score: 99.38685366981908
patch: if ( declaration . get CaMeL Twin ( ) == null && parent == null ) {
rank: 576
score: 99.3614501953125
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) )
rank: 576
score: 99.35812717013889
patch: if ( type != Type . FUNCTION && ! && aliasing CaMeL Gets > 0 ) {
rank: 576
score: 99.26050522748162
patch: } if ( type != Type . FUNCTION && type != Type . FUNCTION ) {
rank: 577
score: 99.40851151315789
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( type != null ) {
rank: 577
score: 99.4036175271739
patch: if ( type != Type . TYPE && type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum )
rank: 577
score: 99.38642963610198
patch: if ( declaration . get CaMeL Twin ( ) != null && parent == parent ) {
rank: 577
score: 99.36135684742646
patch: if ( declaration . get CaMeL Twin ( ) != null ) { / /
rank: 577
score: 99.35768229166666
patch: if ( type != Type . FUNCTION && ! is CaMeL Local ) {
rank: 577
score: 99.33560519748264
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && false ) {
rank: 577
score: 99.32708270733173
patch: if ( ! type . is CaMeL None ( ) ) {
rank: 577
score: 99.26042175292969
patch: if ( type != Node . FUNCTION || type != Type . FUNCTION ) {
rank: 578
score: 99.40345348011364
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && local CaMeL Sets != 0 ) { return false ; }
rank: 578
score: 99.38362630208333
patch: if ( declaration . get CaMeL Name ( ) . length ( ) > 0 ) {
rank: 578
score: 99.35765380859375
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Instance ( type ) ) {
rank: 578
score: 99.33528645833333
patch: if ( this . type > Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 578
score: 99.3264389038086
patch: if ( type . get CaMeL Type ( ) != Type . FUNCTION ) {
rank: 578
score: 99.26036879595588
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > 0 ) { {
rank: 579
score: 99.4033203125
patch: if ( type != Type . TYPE && declaration . get CaMeL Twin ( ) != null )
rank: 579
score: 99.38356236049107
patch: if ( declaration . get CaMeL Parent ( ) != null ) {
rank: 579
score: 99.3631232766544
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets 1 > 0 ) {
rank: 579
score: 99.36069064670139
patch: if ( parent == null || ( is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 579
score: 99.35756429036458
patch: if ( ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) && aliasing CaMeL Gets == 0 ) {
rank: 579
score: 99.33504486083984
patch: if ( type != Type . IF && aliasing CaMeL Gets > 0 ) {
rank: 579
score: 99.32630157470703
patch: if ( type == Type . NULL && type != Type . FUNCTION ) {
rank: 579
score: 99.25972065172698
patch: if ( ( type == Type . FUNCTION ) && ( type != Type . FUNCTION ) )
rank: 580
score: 99.40320405505952
patch: if ( type != Type . TYPE && is CaMeL Class CaMeL Or CaMeL Enum ) { return false ;
rank: 580
score: 99.38323974609375
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; } return true ; }
rank: 580
score: 99.36269244025735
patch: if ( type . != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 580
score: 99.35725708007813
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION ) { return false ; }
rank: 580
score: 99.33479578354779
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 , ) {
rank: 580
score: 99.32602826286765
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION ) { {
rank: 580
score: 99.25945685891544
patch: if ( type == Type . FUNCTION && ! aliasing CaMeL Gets > $STRING$ ) {
rank: 581
score: 99.40721299913194
patch: if ( ( type != Type . FUNCTION || global CaMeL Sets != 0 ) ) {
rank: 581
score: 99.40303371263587
patch: if ( ! type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 581
score: 99.38190018503289
patch: if ( value != null || declaration . get CaMeL Twin ( ) != null ) {
rank: 581
score: 99.36248779296875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets , 0 ) {
rank: 581
score: 99.3599853515625
patch: if ( type != Type . FUNCTION . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 581
score: 99.3572265625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) { return false ; }
rank: 581
score: 99.32594927619485
patch: if ( type == Type . FUNCTION && ! is CaMeL Constructor ( ) ) {
rank: 581
score: 99.25885772705078
patch: if ( type != Type . FUNCTION || type != Type . TYPE ) {
rank: 582
score: 99.40278957201087
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { else
rank: 582
score: 99.38510277157738
patch: return parent == null && parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ;
rank: 582
score: 99.3811279296875
patch: if parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ; return false ; }
rank: 582
score: 99.33444213867188
patch: if ( aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 582
score: 99.32593491498162
patch: if ( type == Type . STRING && ! aliasing CaMeL Gets > 0 ) {
rank: 582
score: 99.25853729248047
patch: if ( type != Type . T || aliasing CaMeL Gets > 0 ) {
rank: 583
score: 99.40712890625
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) || ( parent == null ) ) {
rank: 583
score: 99.4027099609375
patch: if ( type != Type . T || global CaMeL Sets != 0 ) {
rank: 583
score: 99.38510131835938
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && parent != null ) {
rank: 583
score: 99.3570703125
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || type . equals ( Type . FUNCTION ) ) {
rank: 583
score: 99.33412679036458
patch: if ( aliasing CaMeL Gets > 0 && type . is CaMeL Empty ( ) ) {
rank: 583
score: 99.25843048095703
patch: if ( type == Type . FUNCTION || type > Type . FUNCTION ) {
rank: 584
score: 99.4027099609375
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return aliasing CaMeL Gets > 0 ) ;
rank: 584
score: 99.3807437294408
patch: Preconditions . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ; return false ; }
rank: 584
score: 99.36124674479167
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { ) ;
rank: 584
score: 99.33406829833984
patch: if ( ! != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 584
score: 99.25825718470982
patch: if ( type != null || type == Type . FUNCTION ) {
rank: 585
score: 99.40237862723214
patch: if ( type != null && type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 585
score: 99.36097547743056
patch: if ( type CaMeL Name == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 585
score: 99.3570048014323
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && ! type . is CaMeL Empty ( ) )
rank: 585
score: 99.33329772949219
patch: if ( type != Type . ANNOTATION && aliasing CaMeL Gets > 0 ) {
rank: 585
score: 99.32512664794922
patch: if ( type != Type . NAME || aliasing CaMeL Gets > 0 ) {
rank: 585
score: 99.25820025275735
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && ) {
rank: 586
score: 99.40218452785327
patch: if ( type != Type . FUNCTION && ! ! global CaMeL Sets . is CaMeL Class CaMeL Or CaMeL Enum )
rank: 586
score: 99.25813802083333
patch: / * if ( type != Type . FUNCTION ) {
rank: 587
score: 99.40610865542763
patch: if ( type != Type . FUNCTION && ! this . aliasing CaMeL Gets > 0 ) {
rank: 587
score: 99.40199681332237
patch: if ( ! local CaMeL Sets != 0 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 587
score: 99.384375
patch: if ( ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( $NUMBER$ ) ) {
rank: 587
score: 99.37797546386719
patch: if ( declaration == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 587
score: 99.36055501302083
patch: } else if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 587
score: 99.35753522600446
patch: if ( key != null || aliasing CaMeL Gets > 0 ) {
rank: 587
score: 99.33270584909539
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return $STRING$ {
rank: 587
score: 99.32477569580078
patch: if ( type != Type . STRING && aliasing CaMeL Gets > 1 ) {
rank: 587
score: 99.25733184814453
patch: if ( type != Class . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 588
score: 99.38359375
patch: if ( parent == null || local CaMeL Sets != 0 && local CaMeL Sets != 0 ) {
rank: 588
score: 99.37760009765626
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( ) || local CaMeL Sets != 0 ) {
rank: 588
score: 99.3598403930664
patch: if ( type == Type . FUNCTION , aliasing CaMeL Gets > 0 ) {
rank: 588
score: 99.33186420641448
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) ) { return {
rank: 588
score: 99.32460021972656
patch: if ( type != Type . NAME && aliasing CaMeL Gets > 1 ) {
rank: 589
score: 99.40483012952302
patch: if ( can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( local CaMeL Sets ) ) {
rank: 589
score: 99.37738327752976
patch: if ( declaration . get CaMeL Twin ( ) != null ) return false ; return false ; }
rank: 589
score: 99.35954204358552
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( 0 . 0 ) ) {
rank: 589
score: 99.35674689797794
patch: if ( parent == null || ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 589
score: 99.35609266493056
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets && aliasing CaMeL Gets ) {
rank: 589
score: 99.33182101779514
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { * /
rank: 590
score: 99.40143694196429
patch: boolean is CaMeL Class CaMeL Or CaMeL Enum = declaration . get CaMeL Twin ( ) != null ;
rank: 590
score: 99.37705592105263
patch: if ( declaration . get CaMeL Twin ( ) != null ) { { return false ;
rank: 590
score: 99.35570227581522
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets != 0 ) { {
rank: 590
score: 99.33173571134868
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { } else {
rank: 590
score: 99.32431030273438
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets < 0 ) {
rank: 590
score: 99.25615234375
patch: if ( aliasing CaMeL Gets ( type ) == Type . FUNCTION ) {
rank: 591
score: 99.40135498046875
patch: if ( ! can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return false ;
rank: 591
score: 99.35805257161458
patch: if ( node . type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 591
score: 99.35564108455883
patch: if ( type != Type . FUNCTION && ! is CaMeL Local ( ) ) {
rank: 591
score: 99.33085363051471
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > > 0 ) {
rank: 591
score: 99.32372328814338
patch: if ( ! type != Type . NONE && aliasing CaMeL Gets > 0 ) {
rank: 591
score: 99.25560913085937
patch: if ( type != Type . NONE ) {
rank: 592
score: 99.40095658735795
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Class CaMeL Or CaMeL Enum ( ) )
rank: 592
score: 99.38229370117188
patch: if ( type != Type . OTHER && aliasing CaMeL Gets > 1 ) {
rank: 592
score: 99.35781378495066
patch: if ( type != Type . FUNCTION && type . equals ( Type . TYPE ) ) {
rank: 592
score: 99.35642496744792
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( , ) )
rank: 592
score: 99.35469386888587
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && aliasing CaMeL Gets > > 1 ) {
rank: 592
score: 99.33075272409539
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return 0 ;
rank: 592
score: 99.32372283935547
patch: if ( type != Type . FUNCTION && type != Type . UNKNOWN ) {
rank: 593
score: 99.40349378083882
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 || ! false ) {
rank: 593
score: 99.40085671164773
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 1 || global CaMeL Sets != 0 ) {
rank: 593
score: 99.35435485839844
patch: if ( type != null && ! type . equals ( $STRING$ ) ) {
rank: 593
score: 99.33069525824652
patch: if ( type != ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 593
score: 99.3236945657169
patch: if ( type != Type . FUNCTION || type aliasing CaMeL Gets > 0 ) {
rank: 594
score: 99.40072777157738
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 0 || global CaMeL Sets != 0 )
rank: 594
score: 99.3761974516369
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && aliasing CaMeL Gets > 0 ) { return false ;
rank: 594
score: 99.35715157645089
patch: if ( ( type & Type . FUNCTION ) != 0 ) {
rank: 594
score: 99.35360054347827
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . is CaMeL Empty ( ) ) { return false ;
rank: 594
score: 99.33069525824652
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) return 1 ;
rank: 594
score: 99.25461154513889
patch: if ( type != Type . FUNCTION || ! ( type != Type . FUNCTION ) )
rank: 595
score: 99.38060302734375
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) != null ) {
rank: 595
score: 99.35687255859375
patch: * / if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 595
score: 99.33050537109375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && eof ) {
rank: 595
score: 99.32331399356617
patch: { if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 595
score: 99.25459289550781
patch: if ( type == Type . FUNCTION ? aliasing CaMeL Gets > 0 ) {
rank: 596
score: 99.40308295355902
patch: if ( type != Type . FUNCTION && ( global CaMeL Sets != 0 ) ) {
rank: 596
score: 99.40042550223214
patch: if ( ! type . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) { return false ; }
rank: 596
score: 99.38043891059027
patch: if ( parent == null || parent . get CaMeL Count ( ) == 0 ) {
rank: 596
score: 99.35270889945652
patch: if ( ! type != Type . FUNCTION || type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 596
score: 99.33035438939145
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { return 1 ;
rank: 596
score: 99.25458526611328
patch: if ( type != Type . FUNCTION && parent != Type . FUNCTION ) {
rank: 597
score: 99.35629708426339
patch: if ( type != Type . FUNCTION ) { return false ; }
rank: 597
score: 99.35383875229779
patch: if ( this . type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 597
score: 99.3524169921875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) return true ; else {
rank: 597
score: 99.32189178466797
patch: if ( type != Type . FUNCTION && is CaMeL Interface ( ) ) {
rank: 597
score: 99.25425720214844
patch: if ( type != Type . WARNING && aliasing CaMeL Gets > 0 ) {
rank: 598
score: 99.40010070800781
patch: if ( type != Type . Var && aliasing CaMeL Gets > 0 ) {
rank: 598
score: 99.35348510742188
patch: if ( declaration . get CaMeL Twin ( ) != null ) break ;
rank: 598
score: 99.35234832763672
patch: if ( type != Type . FUNCTION ) { return false ; } else {
rank: 598
score: 99.32979090073529
patch: if ( type != Type . FUNCTION && is CaMeL String ( type ) ) {
rank: 598
score: 99.32182312011719
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && {
rank: 599
score: 99.39996047247024
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 || global CaMeL Sets != 0 )
rank: 599
score: 99.37876892089844
patch: if ( type != Type . FUNCTION && local CaMeL Sets != null ) {
rank: 599
score: 99.355712890625
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) { return true ;
rank: 599
score: 99.35234239366319
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) return 0 ;
rank: 599
score: 99.32944064670139
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 . 0 ) {
rank: 599
score: 99.32164001464844
patch: if ( type . ( ) . equals ( Type . FUNCTION ) ) {
rank: 599
score: 99.25331744025735
patch: if ( get CaMeL Types ( ) . equals ( Type . FUNCTION ) ) {
rank: 600
score: 99.40139973958334
patch: if ( ( ! is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 600
score: 99.35214072779605
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Function ( ) ) {
rank: 600
score: 99.32919491038604
patch: if if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 600
score: 99.32086540670956
patch: if ( type instanceof Type ) { if ( type != Type . FUNCTION ) {
rank: 600
score: 99.2518798828125
patch: if ( type > Type . FUNCTION ) {
rank: 601
score: 99.40134102957589
patch: if ( declaration . get CaMeL Id ( ) != null ) {
rank: 601
score: 99.37763671875
patch: if ( parent == null || parent . get CaMeL Type ( ) != Type . FUNCTION ) {
rank: 601
score: 99.3533935546875
patch: if ( type != Type . NUMBER && aliasing CaMeL Gets > 0 ) {
rank: 601
score: 99.35271453857422
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets <= 0 ) {
rank: 601
score: 99.32845730251736
patch: if ( type != Type . FUNCTION && type , aliasing CaMeL Gets > 0 ) {
rank: 601
score: 99.32060241699219
patch: if ( ! aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 0 )
rank: 602
score: 99.35304260253906
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets $NUMBER$ 0 ) {
rank: 602
score: 99.35173233695652
patch: if ( ! type != Type . FUNCTION && type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 602
score: 99.32792154947917
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 , 1 ) {
rank: 602
score: 99.32058715820312
patch: if ( type == Type . LOCAL && aliasing CaMeL Gets > 0 ) {
rank: 602
score: 99.25142669677734
patch: if ( ( type != null ) && aliasing CaMeL Gets > 0 ) {
rank: 603
score: 99.40095350477431
patch: if ( type != Type . Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 603
score: 99.39960394965277
patch: if ( key != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 603
score: 99.37662546258224
patch: if ( declaration . get CaMeL Twin ( ) == null && parent != null ) {
rank: 603
score: 99.37374877929688
patch: if ( type == Type . FUNCTION && global CaMeL Sets != null ) {
rank: 603
score: 99.35148790147569
patch: if ( type != Type . FUNCTION || type . is CaMeL Empty ( ) ) {
rank: 603
score: 99.32712131076389
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 , this ) {
rank: 603
score: 99.32049967447917
patch: if ( type == Type . FUNCTION && type == Type . FUNCTION )
rank: 604
score: 99.40090603298611
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 ) { ) {
rank: 604
score: 99.35092502170139
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . aliasing CaMeL Gets ) {
rank: 604
score: 99.32682800292969
patch: if ( type != Type . NOT && type != Type . FUNCTION ) {
rank: 604
score: 99.31989288330078
patch: return ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) ;
rank: 605
score: 99.3992919921875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && parent == null )
rank: 605
score: 99.37630422491776
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( $NUMBER$ ) ) {
rank: 605
score: 99.35118272569444
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( type ) )
rank: 605
score: 99.350830078125
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Instance ( ) ) {
rank: 605
score: 99.32670762803819
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && > ) {
rank: 605
score: 99.31963034237133
patch: if ( type == Type . FUNCTION && ! is CaMeL Const ( ) ) {
rank: 605
score: 99.24994659423828
patch: if ( type == Type . FUNCTION || type != Type . NONE ) {
rank: 606
score: 99.37310112847223
patch: if ( ! ! can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 606
score: 99.350341796875
patch: / * if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 606
score: 99.32647705078125
patch: if ( name != Type . FUNCTION && type != Type . FUNCTION ) {
rank: 606
score: 99.31961059570312
patch: if ( type != Type . FUNCTION && type aliasing CaMeL Gets > 0 )
rank: 606
score: 99.24943237304687
patch: if ( type == Type . NULL ) {
rank: 607
score: 99.39930555555556
patch: if ( type != Type . FUNCTION && global CaMeL Sets . length != 0 ) {
rank: 607
score: 99.39894505550987
patch: if ( key != null || declaration . get CaMeL Twin ( ) != null ) {
rank: 607
score: 99.35175637637867
patch: if ( type != Type . FUNCTION && type . equals ( type ) ) {
rank: 607
score: 99.32645909926471
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets . != 0 ) {
rank: 607
score: 99.31958821614583
patch: if ( type == Type . FUNCTION || type == Type . FUNCTION )
rank: 607
score: 99.24937438964844
patch: if ( value == Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 608
score: 99.3988101356908
patch: if ( type != Type . NAME && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 608
score: 99.35160319010417
patch: if ( type != Type . FUNCTION ) { if ( type != Type . FUNCTION )
rank: 608
score: 99.35011291503906
patch: if ( type != null ) {
rank: 608
score: 99.34961700439453
patch: if ( type != Type . FUNCTION + aliasing CaMeL Gets > 0 ) {
rank: 608
score: 99.32561492919922
patch: if ( type != Type . FUNCTION && type == Type . TYPE ) {
rank: 608
score: 99.31891228170956
patch: if ( type == Type . FUNCTION && ! is CaMeL Local ( ) ) {
rank: 608
score: 99.24922180175781
patch: if ( type != Type . NONE && type == Type . FUNCTION ) {
rank: 609
score: 99.39877464657738
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { break ; }
rank: 609
score: 99.39797076056985
patch: if ( type != Type . FUNCTION && global CaMeL Sets != - 0 ) {
rank: 609
score: 99.37540108816964
patch: if ( declaration . get CaMeL Count ( ) == 0 ) {
rank: 609
score: 99.34987474524456
patch: if ( type != Type . FUNCTION || ! type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 609
score: 99.31820858226104
patch: if ( type != Type . FUNCTION && && aliasing CaMeL Gets > 0 ) {
rank: 609
score: 99.24874877929688
patch: if ( type == Type . FUNCTION && type > Type . FUNCTION ) {
rank: 610
score: 99.39846622242646
patch: if ( ! type != null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 610
score: 99.37220458984375
patch: if ( type != Type . FUNCTION && declaration . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 610
score: 99.3251953125
patch: if ( type != Type . FUNCTION && type && aliasing CaMeL Gets > 0 ) {
rank: 610
score: 99.31779928768383
patch: if ( type != Type . FUNCTION && ! is CaMeL Constructor ( ) ) {
rank: 610
score: 99.24859619140625
patch: if ( type == Type . TYPE || type != Type . FUNCTION ) {
rank: 611
score: 99.39828491210938
patch: if ( declaration != null || is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 611
score: 99.34913394325658
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) { return false {
rank: 611
score: 99.34833441840277
patch: if ( ( parent == null ) && ( aliasing CaMeL Gets > 0 ) ) {
rank: 611
score: 99.24835968017578
patch: if ( type != Type . FUNCTION || type != Type . EMPTY ) {
rank: 612
score: 99.37178039550781
patch: if ( type != Type . FUNCTION || global CaMeL Sets != null ) {
rank: 612
score: 99.3506721047794
patch: if ( aliasing CaMeL Gets > 0 && ! aliasing CaMeL Gets > 0 ) {
rank: 612
score: 99.24703979492188
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > type ) {
rank: 613
score: 99.37104797363281
patch: if ( type != Type . OTHER && global CaMeL Sets > 0 ) {
rank: 613
score: 99.348916015625
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Empty ( ) && type != Type . FUNCTION ) {
rank: 613
score: 99.34822591145833
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) }
rank: 613
score: 99.32465955946181
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type . NONE ) {
rank: 613
score: 99.3167724609375
patch: if ( type != Type . NULL && type != Type . EMPTY ) {
rank: 613
score: 99.24671936035156
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets == FUNCTION ) {
rank: 614
score: 99.3977581521739
patch: if ( type != Type . FUNCTION && ! can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) )
rank: 614
score: 99.35019259982639
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 . $NUMBER$ ) {
rank: 614
score: 99.34744083180146
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > - 0 ) {
rank: 614
score: 99.32432154605263
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ? aliasing CaMeL Gets {
rank: 614
score: 99.2463150024414
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > type ) {
rank: 615
score: 99.3976986533717
patch: if ( type == null || declaration . get CaMeL Twin ( ) != null ) {
rank: 615
score: 99.34739056755515
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; } }
rank: 615
score: 99.24625651041667
patch: if ( type . is CaMeL Primitive ( ) ) {
rank: 616
score: 99.39588687294408
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 ) { return true ;
rank: 616
score: 99.37083604600694
patch: if ( ! can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) {
rank: 616
score: 99.3488998413086
patch: if ( type != Type . BLOCK && aliasing CaMeL Gets > 0 ) {
rank: 616
score: 99.34640502929688
patch: if ( ! parent . get CaMeL Twin ( ) != null ) {
rank: 616
score: 99.323486328125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type . NULL ) {
rank: 616
score: 99.31626263786765
patch: / * if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 616
score: 99.24525035511364
patch: if ( type != Type . FUNCTION && ) {
rank: 617
score: 99.39752752130681
patch: if ( ! type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { return true ;
rank: 617
score: 99.37404271175987
patch: if ( declaration . get CaMeL Twin ( ) != 1 || parent == null ) {
rank: 617
score: 99.34624565972223
patch: if ( type . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) return false ;
rank: 617
score: 99.32330681295956
patch: if ( type != Type . NOT && aliasing CaMeL Gets ( type ) ) {
rank: 617
score: 99.31590270996094
patch: if ( type instanceof Type ) { Type type = ( Type ) type ;
rank: 617
score: 99.24418131510417
patch: if ( type != Type . FUNCTION && ! ) {
rank: 618
score: 99.39718627929688
patch: if ( type != - 1 ) { if ( is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 618
score: 99.39405653211806
patch: if ( type == Type . OTHER && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 618
score: 99.37026638454861
patch: if ( parent == null || parent . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 618
score: 99.34819200303819
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 * / ) {
rank: 618
score: 99.34579467773438
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets == 1 ) {
rank: 618
score: 99.32299041748047
patch: if ( type != null && type . is CaMeL Empty ( ) ) {
rank: 618
score: 99.31570434570312
patch: if ( type == Type . STRING && aliasing CaMeL Gets > 1 ) {
rank: 618
score: 99.2431411743164
patch: if ( type != Type . FUNCTION && element != Type . FUNCTION ) {
rank: 619
score: 99.39398193359375
patch: if ( type == Type . FUNCTION || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 619
score: 99.34814453125
patch: if ( type == Type . MIN && aliasing CaMeL Gets > 0 ) {
rank: 619
score: 99.34625922309027
patch: if ( type != null && type != null && aliasing CaMeL Gets > 0 ) {
rank: 619
score: 99.3456802368164
patch: if ( local CaMeL Sets != 1 || aliasing CaMeL Gets > 0 ) {
rank: 619
score: 99.32272677951389
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 , $NUMBER$ ) {
rank: 619
score: 99.24298858642578
patch: if ( aliasing CaMeL Gets > FUNCTION && type != Type . FUNCTION ) {
rank: 620
score: 99.39706260279605
patch: if ( type != Type . NOT && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 620
score: 99.34783935546875
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > length ) {
rank: 620
score: 99.32267930772569
patch: if ( type != Type . FUNCTION && ! ( aliasing CaMeL Gets > ) ) {
rank: 620
score: 99.3147964477539
patch: if ( is CaMeL Const ( ) && aliasing CaMeL Gets > 0 ) {
rank: 621
score: 99.39703078497024
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { if ( ! aliasing CaMeL Gets > 0 )
rank: 621
score: 99.3691173735119
patch: if = parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ;
rank: 621
score: 99.34777069091797
patch: if ( type != Type . STRING || aliasing CaMeL Gets > 0 ) {
rank: 621
score: 99.34423065185547
patch: try { if ( declaration . get CaMeL Twin ( ) != null )
rank: 621
score: 99.32223510742188
patch: if ( type . is CaMeL Empty ( ) ) {
rank: 621
score: 99.2407735188802
patch: if ( type != Type . FUNCTION && false ) {
rank: 622
score: 99.3965176669034
patch: if ( type != Type . TYPE && global CaMeL Sets != 1 || local CaMeL Sets != 0 ) {
rank: 622
score: 99.39320203993056
patch: if ( ( type != null ) || ( local CaMeL Sets != 0 ) ) {
rank: 622
score: 99.34362030029297
patch: if ( parent . get CaMeL Twin ( ) != null ) { }
rank: 622
score: 99.31361490885416
patch: while ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 622
score: 99.23991394042969
patch: if ( aliasing CaMeL Gets > 0 || type != Type . FUNCTION ) {
rank: 623
score: 99.39630126953125
patch: if ( ( aliasing CaMeL Gets > 0 ) || aliasing CaMeL Gets > 0 ) {
rank: 623
score: 99.37007863898026
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( parent ) ) {
rank: 623
score: 99.34723578559027
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets . length == 0 ) {
rank: 623
score: 99.34328326056985
patch: if ( parent . get CaMeL Twin ( ) != null ) return true ;
rank: 623
score: 99.3134765625
patch: if ( type . equals CaMeL Ignore CaMeL Case ( Type . FUNCTION ) ) {
rank: 623
score: 99.23974609375
patch: if ( ! type . is CaMeL Name ( ) ) {
rank: 624
score: 99.39626242897727
patch: if ( type != Type . FUNCTION && type != Type . TYPE && global CaMeL Sets != 0 ) {
rank: 624
score: 99.346435546875
patch: if ( this . type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 624
score: 99.34259711371527
patch: if ( declaration . get CaMeL Twin ( ) != null || parent != null )
rank: 624
score: 99.32041422526042
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) > 0 )
rank: 624
score: 99.31317138671875
patch: if ( type != Type . STRING && type != Type . FUNCTION ) {
rank: 624
score: 99.23969268798828
patch: if ( type > Type . FUNCTION || aliasing CaMeL Gets != 0 ) {
rank: 625
score: 99.39619954427083
patch: if ( global CaMeL Sets != 1 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 625
score: 99.36906602647569
patch: if ( parent == null || parent . get CaMeL Count ( ) != 0 ) {
rank: 625
score: 99.34536345108695
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && ! type != Type . FUNCTION ) {
rank: 625
score: 99.34181213378906
patch: if ( type != Type . ERROR && aliasing CaMeL Gets > 0 ) {
rank: 625
score: 99.32024787454044
patch: if ( type != Type . FUNCTION && is CaMeL Keyword ( type ) ) {
rank: 625
score: 99.31269836425781
patch: if ( type != Type . NAME && type != Type . FUNCTION ) {
rank: 625
score: 99.23863220214844
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets >= 0 ) {
rank: 626
score: 99.39616088867187
patch: if ( ! ! type . is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 626
score: 99.39114540501645
patch: if ( type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum ) { }
rank: 626
score: 99.34604061351104
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; } else
rank: 626
score: 99.345009765625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets . is CaMeL Empty ( ) )
rank: 626
score: 99.341796875
patch: if ( type != Type . SET && aliasing CaMeL Gets > 0 ) {
rank: 626
score: 99.31221277573529
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION || ) {
rank: 626
score: 99.23795318603516
patch: if ( type > Type . FUNCTION && aliasing CaMeL Gets != 0 ) {
rank: 627
score: 99.3958675986842
patch: if ( ( is CaMeL Class CaMeL Or CaMeL Enum ) || aliasing CaMeL Gets > 0 )
rank: 627
score: 99.39077758789062
patch: if ( global CaMeL Sets != 0 ) {
rank: 627
score: 99.34463019120066
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets ( type ) != 0 ) {
rank: 627
score: 99.34171788832721
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; } }
rank: 627
score: 99.31192016601562
patch: if ( type != Type . NONE && type != Type . NONE ) {
rank: 628
score: 99.39042154947917
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 + 0 ) {
rank: 628
score: 99.36865234375
patch: if ( parent == null || parent . get CaMeL Type CaMeL Name ( ) != null ) {
rank: 628
score: 99.3196792602539
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) throws
rank: 628
score: 99.31183938419117
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { { return false ; }
rank: 629
score: 99.39557756696429
patch: if ( ! can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return true ; }
rank: 629
score: 99.39006212022569
patch: if ( ( parent == null ) && ( local CaMeL Sets != 0 ) ) {
rank: 629
score: 99.36602172851562
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { { return true ;
rank: 629
score: 99.34573025173611
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets . length != 0 ) {
rank: 629
score: 99.34381462545956
patch: if ( type != Type . FUNCTION || ! type != Type . FUNCTION ) {
rank: 629
score: 99.3403549194336
patch: if ( get CaMeL Twin ( ) != null ) { return false ;
rank: 629
score: 99.23634338378906
patch: if ( type == Type . FUNCTION || type != Type . TYPE ) {
rank: 630
score: 99.36769612630208
patch: if ( parent == null || parent . get CaMeL Parent ( ) != null ) {
rank: 630
score: 99.34563530815973
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ? 0 : 0 ) {
rank: 630
score: 99.34326171875
patch: if ( type != null || ! type . equals ( Type . FUNCTION ) ) {
rank: 630
score: 99.3402458639706
patch: if ( can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) {
rank: 630
score: 99.31873321533203
patch: if ( type != Number . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 630
score: 99.31086282169117
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION && type {
rank: 630
score: 99.2356948852539
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != FUNCTION ) {
rank: 631
score: 99.39544968377976
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return aliasing CaMeL Gets > 0 ) ; }
rank: 631
score: 99.38905334472656
patch: if ( type != Type . OTHER || global CaMeL Sets != 1 ) {
rank: 631
score: 99.31863563939145
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 && aliasing CaMeL Gets {
rank: 631
score: 99.31082916259766
patch: if ( type == Type . NAME && aliasing CaMeL Gets > 1 ) {
rank: 631
score: 99.23321533203125
patch: if ( type . length ( ) == 0 ) {
rank: 632
score: 99.38704681396484
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && is CaMeL Enum ) {
rank: 632
score: 99.36723497178819
patch: if ( parent . type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 632
score: 99.3636474609375
patch: if ( ! parent . get CaMeL Type ( ) . equals ( Type . FUNCTION ) ) {
rank: 632
score: 99.34471893310547
patch: if ( type != Type . LT && aliasing CaMeL Gets > 0 ) {
rank: 632
score: 99.3427734375
patch: if ( type != Type . FUNCTION && type . equals ( Type . FUNCTION ) && type != Type . FUNCTION ) {
rank: 632
score: 99.34017605251736
patch: if ( ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 632
score: 99.31804656982422
patch: if ( aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets != 0 ) {
rank: 632
score: 99.31072639016544
patch: if ( ! aliasing CaMeL Gets > 0 ) { return false ; } else {
rank: 632
score: 99.23289489746094
patch: if ( aliasing CaMeL Gets > null && aliasing CaMeL Gets == 0 ) {
rank: 633
score: 99.39514690896739
patch: if ( parent == null || parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) { return
rank: 633
score: 99.36722140842014
patch: if ( parent == null || parent . get CaMeL Count ( ) > 0 ) {
rank: 633
score: 99.34444427490234
patch: if ( type != Type . TYPE && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 633
score: 99.34225124782986
patch: if ( type != Type . FUNCTION && type . length ( ) != 0 ) {
rank: 633
score: 99.3397216796875
patch: if ( declaration . get CaMeL Twin ( ) == null ) return false ;
rank: 633
score: 99.31756591796875
patch: if ( type != Position . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 633
score: 99.31050618489583
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 )
rank: 633
score: 99.23249816894531
patch: if ( type != Type . NULL && aliasing CaMeL Gets != 0 ) {
rank: 634
score: 99.39482565487133
patch: if ( declaration . get CaMeL Twin ( ) != null || false ) {
rank: 634
score: 99.38574896918402
patch: if ( type != Type . FUNCTION && ( local CaMeL Sets != 0 ) ) {
rank: 634
score: 99.36330694901316
patch: if ( type . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) false ) {
rank: 634
score: 99.23240661621094
patch: if ( type != Node . FUNCTION && type != Type . FUNCTION ) {
rank: 635
score: 99.39479370117188
patch: if ( type != $STRING$ && is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 635
score: 99.38571506076389
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || global CaMeL Sets != 1 ) {
rank: 635
score: 99.36687360491071
patch: if ( declaration . get CaMeL Count ( ) != 0 ) {
rank: 635
score: 99.36328843060662
patch: / * if ( declaration . get CaMeL Twin ( ) != null ) {
rank: 635
score: 99.30928039550781
patch: if ( type != Type . NULL || type == Type . FUNCTION ) {
rank: 635
score: 99.23106384277344
patch: if ( type == Type . FUNCTION || type != Type . EMPTY ) {
rank: 636
score: 99.39449637276786
patch: if ( declaration . get CaMeL Visibility ( ) != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 636
score: 99.36306923314145
patch: if ( get CaMeL Twin ( ) != null || type != Type . FUNCTION ) {
rank: 636
score: 99.34356689453125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) )
rank: 636
score: 99.33928087022569
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( $STRING$ ) )
rank: 636
score: 99.308837890625
patch: if ( type != Type . STRING && aliasing CaMeL Gets > 0 )
rank: 637
score: 99.39442027698864
patch: if ( ! declaration . get CaMeL Twin ( ) != null || local CaMeL Sets != 0 ) {
rank: 637
score: 99.34189860026042
patch: if ( type != Type . FUNCTION && $STRING$ . length ( ) > 0 ) {
rank: 637
score: 99.30856323242188
patch: if ( type != Type . FUNCTION && type != Type . LOCAL ) {
rank: 637
score: 99.23094267003677
patch: if ( type != Type . FUNCTION && ( type == Type . FUNCTION ) )
rank: 638
score: 99.38353135850694
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 ) return true ;
rank: 638
score: 99.36272515190973
patch: if ( ! can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( type ) ) {
rank: 638
score: 99.34318033854167
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ? 0 : 0 ) {
rank: 638
score: 99.34189240828805
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && type . is CaMeL Empty ( ) )
rank: 638
score: 99.33846028645833
patch: if ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ;
rank: 639
score: 99.39403011924342
patch: if ( type != null ) { return is CaMeL Class CaMeL Or CaMeL Enum ) ; }
rank: 639
score: 99.3428726196289
patch: if ( type == Type . EMPTY || aliasing CaMeL Gets > 0 ) {
rank: 639
score: 99.340576171875
patch: if ( type != Type . FUNCTION && ! ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) ) {
rank: 639
score: 99.33825005425348
patch: if ( can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) return true ;
rank: 639
score: 99.31387329101562
patch: if ( type != Type . FUNCTION && type != Type . 0 ) {
rank: 639
score: 99.230517578125
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets ) {
rank: 640
score: 99.3380126953125
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || aliasing CaMeL Gets > 0 )
rank: 640
score: 99.31367043887867
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( true ) ) {
rank: 640
score: 99.30826568603516
patch: if ( type == Type . TARGET && aliasing CaMeL Gets > 0 ) {
rank: 641
score: 99.3617302389706
patch: return ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) ; }
rank: 641
score: 99.3400390625
patch: if ( type != Type . FUNCTION && ! ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 641
score: 99.33793131510417
patch: if ( ! node . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) )
rank: 641
score: 99.3082275390625
patch: if ( type == Type . READ && aliasing CaMeL Gets > 0 ) {
rank: 642
score: 99.22944859095982
patch: if ( type != Type . FUNCTION && ! ( ) ) {
rank: 643
score: 99.39331817626953
patch: if ( type != Type . NAME || global CaMeL Sets != 0 ) {
rank: 643
score: 99.38282012939453
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type != null ) {
rank: 643
score: 99.36117393092105
patch: if ( parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) true ) {
rank: 643
score: 99.33933423913044
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 ) { {
rank: 643
score: 99.30815124511719
patch: if ( type == Type . FUNCTION || type == Type . NONE ) {
rank: 643
score: 99.22908782958984
patch: if ( type == Node . FUNCTION || type != Type . FUNCTION ) {
rank: 644
score: 99.39331732855902
patch: if ( ! type != Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum )
rank: 644
score: 99.38227674696181
patch: if ( type != Type . FUNCTION && this . global CaMeL Sets != 0 ) {
rank: 644
score: 99.36087799072266
patch: if ( type != Type . NEW && aliasing CaMeL Gets > 0 ) {
rank: 644
score: 99.33913702713816
patch: if ( type != Type . FUNCTION && type . contains ( Type . FUNCTION ) ) {
rank: 644
score: 99.31168365478516
patch: if ( ref != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 644
score: 99.22733248197116
patch: if ( aliasing CaMeL Gets ( type ) > 0 ) {
rank: 645
score: 99.3414077758789
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets , 0 ) {
rank: 645
score: 99.33898395040761
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 && aliasing CaMeL Gets ( type ) ) {
rank: 645
score: 99.33682071461396
patch: if ( type == Type . FUNCTION && is CaMeL Class CaMeL Or CaMeL Enum )
rank: 645
score: 99.3075942993164
patch: if ( type != Type . NULL && type . length > 0 ) {
rank: 645
score: 99.227197265625
patch: if ( type . contains CaMeL Type ( Type . FUNCTION ) ) {
rank: 646
score: 99.36027526855469
patch: if ( type != Factory . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 646
score: 99.33680725097656
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets <= 0 ) {
rank: 646
score: 99.3108139038086
patch: if ( type != Type . FUNCTION && type != Type . NOT ) {
rank: 646
score: 99.30738740808823
patch: if ( type == Type . NONE && aliasing CaMeL Gets > 0 ) { {
rank: 646
score: 99.22703552246094
patch: if ( type > Type . FUNCTION && aliasing CaMeL Gets == 0 ) {
rank: 647
score: 99.3929379111842
patch: if ( type != null && ! type . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 647
score: 99.38203125
patch: if ( type != Type . OTHER ) {
rank: 647
score: 99.34115939670139
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . 0 >= 0 ) {
rank: 647
score: 99.33883327907986
patch: this . if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 647
score: 99.33676382211539
patch: if ( get CaMeL Twin ( ) == null ) {
rank: 647
score: 99.30732727050781
patch: if ( type == Type . FUNCTION || type == Type . NULL ) {
rank: 647
score: 99.22696685791016
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets == FUNCTION ) {
rank: 648
score: 99.33619689941406
patch: if ( declaration . get CaMeL Twin ( ) != null ) continue ;
rank: 648
score: 99.31052533318015
patch: if ( type != Type . FUNCTION if && aliasing CaMeL Gets > 0 ) {
rank: 648
score: 99.30697631835938
patch: if ( type != Type . EMPTY && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 649
score: 99.39226973684211
patch: if ( parent == null || is CaMeL Class CaMeL Or CaMeL Enum ) { return true ;
rank: 649
score: 99.35848838404605
patch: if ( get CaMeL Twin ( ) == null || local CaMeL Sets != 0 ) {
rank: 649
score: 99.357177734375
patch: if ( parent == null || parent . aliasing CaMeL Gets > 0 ) {
rank: 649
score: 99.33793809678819
patch: if ( type != Type . FUNCTION && this . aliasing CaMeL Gets > 1 ) {
rank: 649
score: 99.2259521484375
patch: if ( ! type . contains ( aliasing CaMeL Gets > 0 ) ) {
rank: 650
score: 99.39226973684211
patch: if ( declaration != null ) { if ( is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 650
score: 99.3563232421875
patch: if ( declaration . get CaMeL Name ( ) . equals ( Type . FUNCTION ) ) {
rank: 650
score: 99.33556315104167
patch: if ( ( declaration . get CaMeL Twin ( ) != null )
rank: 650
score: 99.30949401855469
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 { {
rank: 650
score: 99.30658513849431
patch: if ( ! ( type instanceof Type ) ) {
rank: 650
score: 99.22516741071429
patch: if ( ( type & Type . FUNCTION ) == 0 ) {
rank: 651
score: 99.39222717285156
patch: if ( type != Type . FUNCTION && global CaMeL Sets == 1 ) {
rank: 651
score: 99.33407156808036
patch: if ( declaration . get CaMeL Twin ( ) == null )
rank: 651
score: 99.30592346191406
patch: if ( scope == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 651
score: 99.22442220052083
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets == 0 )
rank: 652
score: 99.3375244140625
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Empty > 0 ) {
rank: 652
score: 99.30899386935764
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) ) { {
rank: 652
score: 99.30583190917969
patch: if ( type == Type . RIGHT && aliasing CaMeL Gets > 0 ) {
rank: 652
score: 99.22396850585938
patch: if ( ( type == Type . FUNCTION ) ) {
rank: 653
score: 99.39180908203124
patch: if ( type != $STRING$ && is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 653
score: 99.38105604383681
patch: if ( this . type != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 653
score: 99.30703938802084
patch: if ( type != null && ! aliasing CaMeL Gets > 0 ) {
rank: 653
score: 99.30573272705078
patch: if ( type != Type . FUNCTION && type != Type . STRING ) {
rank: 653
score: 99.22362263997395
patch: / * if ( type == Type . FUNCTION ) {
rank: 654
score: 99.39174582741477
patch: if ( type != Type . TYPE && type != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 654
score: 99.353759765625
patch: return ( parent == null || parent . get CaMeL Twin ( ) != null ) ; }
rank: 654
score: 99.3331657858456
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > - 1 ) {
rank: 654
score: 99.30696868896484
patch: if ( type != Type . STATEMENT && aliasing CaMeL Gets > 0 ) {
rank: 654
score: 99.30554917279412
patch: if ( type != Type . FUNCTION ) { return aliasing CaMeL Gets > 0 ;
rank: 654
score: 99.22356708233173
patch: if ( ! type . is CaMeL Constructor ( ) ) {
rank: 655
score: 99.39171781994048
patch: if ( declaration . get CaMeL Twin ( ) != null && ! aliasing CaMeL Gets > 0 )
rank: 655
score: 99.35585650275735
patch: if ( . type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 655
score: 99.33675484035327
patch: if ( type != Type . FUNCTION && type == Type . FUNCTION || aliasing CaMeL Gets ( type ) ) {
rank: 655
score: 99.33216094970703
patch: if ( type != Type . LABEL && aliasing CaMeL Gets > 0 ) {
rank: 655
score: 99.30547688802083
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( ) )
rank: 655
score: 99.22353891225961
patch: if ( ! type . is CaMeL Enum ( ) ) {
rank: 656
score: 99.391650390625
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets > 0 ) { return false ;
rank: 656
score: 99.37925211588542
patch: if ( type != Type . FUNCTION && false || aliasing CaMeL Gets > 0 ) {
rank: 656
score: 99.35364447699652
patch: if ( ! can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( true ) ) {
rank: 656
score: 99.33643639605978
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Empty ( ) ) { return false ; }
rank: 656
score: 99.30679141773896
patch: if ( aliasing CaMeL Gets ( type ) . is CaMeL Empty ( ) ) {
rank: 656
score: 99.2201286764706
patch: if ( type != Type . FUNCTION && ( type != Type . FUNCTION ) )
rank: 657
score: 99.33175455729166
patch: if ( parent != null || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 657
score: 99.21995192307692
patch: if ( ! type . is CaMeL Interface ( ) ) {
rank: 658
score: 99.39107259114583
patch: if ( type != Type . PREFIX && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 658
score: 99.35437774658203
patch: if ( ( parent == null ) && aliasing CaMeL Gets > 1 ) {
rank: 658
score: 99.3314568014706
patch: if ( can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ) {
rank: 658
score: 99.30453670726104
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 type ) {
rank: 658
score: 99.30419158935547
patch: if ( type != Type . FUNCTION || type == Type . NONE ) {
rank: 659
score: 99.390869140625
patch: if ( type != Type . FUNCTION || is CaMeL Class CaMeL Or CaMeL Enum ) { return false ;
rank: 659
score: 99.35416085379464
patch: if ( declaration . get CaMeL Count ( ) > 0 ) {
rank: 659
score: 99.335517578125
patch: if ( type != Type . FUNCTION && ! type . equals ( Type . FUNCTION ) && aliasing CaMeL Gets > ) {
rank: 659
score: 99.304443359375
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets . == 0 ) {
rank: 659
score: 99.30418982872597
patch: if ( ! ( aliasing CaMeL Gets > 0 ) ) {
rank: 660
score: 99.39079284667969
patch: if ( type != Type . TYPE && global CaMeL Sets != 1 ) {
rank: 660
score: 99.35404698988971
patch: if ( get CaMeL Twin ( ) != null || parent == null ) {
rank: 660
score: 99.33587239583333
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . ) {
rank: 660
score: 99.30429256663604
patch: if ( type != Node . FUNCTION && aliasing CaMeL Gets ( type ) ) {
rank: 660
score: 99.3039306640625
patch: if ( type != Type . NAME && aliasing CaMeL Gets > 0 )
rank: 660
score: 99.2169698079427
patch: if ( this . type != Type . FUNCTION ) {
rank: 661
score: 99.39045545789931
patch: if ( type == Type . TYPE && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 661
score: 99.3779067993164
patch: if ( type != Type . FUNCTION && global CaMeL Sets != $NUMBER$ ) {
rank: 661
score: 99.35128784179688
patch: return ( parent == null || parent . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) ;
rank: 661
score: 99.33501233552632
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Global ( ) ) {
rank: 661
score: 99.30422973632812
patch: if ( type != Type . Type && aliasing CaMeL Gets > 0 ) {
rank: 661
score: 99.30378992417279
patch: if ( ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 662
score: 99.39037475585937
patch: if ( global CaMeL Sets != 0 || declaration . get CaMeL Twin ( ) != null )
rank: 662
score: 99.37716674804688
patch: if ( type == Type . OTHER || global CaMeL Sets != 0 ) {
rank: 662
score: 99.35288783482143
patch: if ( parent == null && aliasing CaMeL Gets > 0 ) {
rank: 662
score: 99.351123046875
patch: if ( ! parent == null || aliasing CaMeL Gets > 0 ) {
rank: 662
score: 99.3344140625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && aliasing CaMeL Gets [ 0 ] != 0 ) {
rank: 662
score: 99.32884979248047
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > - 1 )
rank: 662
score: 99.30414177389706
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . != 0 ) {
rank: 662
score: 99.2109619140625
patch: if ( ! ! type . equals ( Type . FUNCTION ) ) {
rank: 663
score: 99.37698703342014
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || local CaMeL Sets != 1 ) {
rank: 663
score: 99.35272216796875
patch: try { if ( is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 663
score: 99.35100640190973
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || global CaMeL Sets > 0 ) {
rank: 663
score: 99.33421566611842
patch: if ( type != Type . FUNCTION && ! type . is CaMeL Whitespace ( ) ) {
rank: 663
score: 99.30398898654514
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) return true {
rank: 664
score: 99.3899158296131
patch: if ( type != Type . TYPE && global CaMeL Sets != 0 || local CaMeL Sets != 0 )
rank: 664
score: 99.37677001953125
patch: if ( type != Type . FUNCTION && parent == null || parent != null ) {
rank: 664
score: 99.33418605638587
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && type . is CaMeL Empty ( ) )
rank: 664
score: 99.30372619628906
patch: if ( aliasing CaMeL Gets ( ) && aliasing CaMeL Gets ( ) ) {
rank: 664
score: 99.30198669433594
patch: if ( type == Type . NONE && type == Type . FUNCTION ) {
rank: 664
score: 99.20998709542411
patch: if ( get CaMeL Method ( ) == Type . FUNCTION ) {
rank: 665
score: 99.35257393973214
patch: if ( type == Type . FUNCTION && parent != null ) {
rank: 665
score: 99.35025024414062
patch: if ( type != Context . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 665
score: 99.33237591911765
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets ( type ) ) {
rank: 666
score: 99.38950482536765
patch: if ( type != null || get CaMeL Twin ( ) != null ) {
rank: 666
score: 99.37606472439236
patch: if ( type != Type . FUNCTION && global CaMeL Sets . length > 0 ) {
rank: 666
score: 99.3339779502467
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets ( type ) != null ) {
rank: 666
score: 99.33119111902573
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets $NUMBER$ > 0 ) {
rank: 666
score: 99.32822552849265
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) { }
rank: 666
score: 99.3028897372159
patch: if ( ! type != Type . FUNCTION ) {
rank: 666
score: 99.30146340762867
patch: if ( ( type == Type . FUNCTION ) && aliasing CaMeL Gets > 0 )
rank: 666
score: 99.20909016927084
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets != 0 )
rank: 667
score: 99.37582397460938
patch: if ( local CaMeL Sets != 0 || aliasing CaMeL Gets > 0 ) {
rank: 667
score: 99.33378331801471
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > > $NUMBER$ ) {
rank: 668
score: 99.35144856770833
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( parent ) ) {
rank: 668
score: 99.32990579044117
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 > 0 )
rank: 668
score: 99.30086023667279
patch: if ( type != Type . FUNCTION ) { if ( type instanceof Type ) {
rank: 668
score: 99.20704142252605
patch: if ( type != Type . FUNCTION && true ) {
rank: 669
score: 99.38866024925595
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets > 0 ) { return false ; }
rank: 669
score: 99.3751220703125
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && type != Type . OTHER ) {
rank: 669
score: 99.33280222039474
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION ) { return true ;
rank: 669
score: 99.20688883463542
patch: if ( this . type == Type . FUNCTION ) {
rank: 670
score: 99.38839721679688
patch: if ( type == Type . FUNCTION && declaration . get CaMeL Twin ( ) != null )
rank: 670
score: 99.37422398158482
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { ) {
rank: 670
score: 99.3323974609375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > > ) {
rank: 670
score: 99.32949649586396
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets 1 > 0 ) {
rank: 670
score: 99.30033874511719
patch: if ( type != Type . STRING && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 670
score: 99.2037353515625
patch: if ( ! ! type . is CaMeL Empty ( ) ) {
rank: 671
score: 99.37361653645833
patch: if ( ( type != Type . OTHER && aliasing CaMeL Gets > 0 ) ) {
rank: 671
score: 99.34706025965073
patch: Preconditions . if ( declaration . get CaMeL Twin ( ) != null ) {
rank: 671
score: 99.33149270450367
patch: if ( type != Type . FUNCTION && ! is CaMeL Function ( ) ) {
rank: 671
score: 99.32671760110294
patch: if ( parent . is CaMeL Class CaMeL Or CaMeL Enum ( type ) ) {
rank: 671
score: 99.30134582519531
patch: if ( type != Type . 1 && aliasing CaMeL Gets > 0 ) {
rank: 672
score: 99.38820929276316
patch: if ( ! parent == null || declaration . get CaMeL Twin ( ) != null )
rank: 672
score: 99.37276204427083
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && ( parent == null ) ) {
rank: 672
score: 99.34604220920139
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && aliasing CaMeL Gets != 0 ) {
rank: 672
score: 99.33138671875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { if ( aliasing CaMeL Gets != 0 ) {
rank: 672
score: 99.32642415364583
patch: if ( aliasing CaMeL Gets > 0 && local CaMeL Sets != 0 )
rank: 672
score: 99.301025390625
patch: if ( type == null && aliasing CaMeL Gets > 0 ) {
rank: 672
score: 99.30020345052084
patch: if ( type != Type . FUNCTION || type == Type . FUNCTION )
rank: 672
score: 99.20023600260417
patch: if ( type == Type . FUNCTION && ! ) {
rank: 673
score: 99.38809364720395
patch: if ( type != Type . TYPE && get CaMeL Twin ( ) != null ) {
rank: 673
score: 99.37273206208882
patch: if ( ( declaration . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) ?
rank: 673
score: 99.34595540364583
patch: if ( node . get CaMeL Twin ( ) != null ) {
rank: 673
score: 99.3309765625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != 0 || aliasing CaMeL Gets . is CaMeL Empty ( ) )
rank: 673
score: 99.32630333533653
patch: if ( type != null || aliasing CaMeL Gets > 0 )
rank: 673
score: 99.29936981201172
patch: if ( type == Type . EMPTY && aliasing CaMeL Gets > 1 ) {
rank: 673
score: 99.20000348772321
patch: if ( type != Type . FUNCTION > Type . FUNCTION ) {
rank: 674
score: 99.38786969866071
patch: if ( type != Type . FUNCTION && ! is CaMeL Class CaMeL Or CaMeL Enum ) return false ;
rank: 674
score: 99.34983995225694
patch: if ( parent == null || parent . get CaMeL Node ( ) != null ) {
rank: 674
score: 99.33091334292763
patch: if ( ! type . is CaMeL Empty ( ) ) { return false ; } else {
rank: 674
score: 99.3282470703125
patch: if ( type . equals ( Type . FUNCTION && aliasing CaMeL Gets > $NUMBER$ ) )
rank: 674
score: 99.2990951538086
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION && )
rank: 675
score: 99.29999856387867
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) { {
rank: 675
score: 99.29798889160156
patch: if ( type == Type . NAME || aliasing CaMeL Gets > 0 ) {
rank: 676
score: 99.38765716552734
patch: if ( type != Type . NAME && global CaMeL Sets != 0 ) {
rank: 676
score: 99.37178039550781
patch: if ( global CaMeL Sets != 1 || aliasing CaMeL Gets > 0 ) {
rank: 676
score: 99.33011203342014
patch: if ( type != Type . FUNCTION && ! is CaMeL Keyword ( type ) ) {
rank: 676
score: 99.32579040527344
patch: if ( this . declaration . get CaMeL Twin ( ) != null )
rank: 676
score: 99.1982754794034
patch: if ( type == Type . FUNCTION && ) {
rank: 677
score: 99.38759068080357
patch: if ( type != Type . FUNCTION || type != Type . FUNCTION && global CaMeL Sets != 0 )
rank: 677
score: 99.37158203125
patch: / * if ( is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 677
score: 99.3482666015625
patch: if ( parent == Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 677
score: 99.33003065321181
patch: if ( type != Type . FUNCTION && type . is CaMeL Primitive ( ) ) {
rank: 677
score: 99.2991943359375
patch: if ( type != Package . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 677
score: 99.29690551757812
patch: if ( type != Type . FUNCTION && type == Type . EMPTY ) {
rank: 677
score: 99.19774576822917
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets == 0 )
rank: 678
score: 99.38740466889881
patch: if ( declaration . get CaMeL Twin ( ) != null ) { return false ; } else {
rank: 678
score: 99.3714958639706
patch: if ( ( declaration . get CaMeL Twin ( ) == null ) ) {
rank: 678
score: 99.33003065321181
patch: if ( type != Type . FUNCTION && this . type == Type . FUNCTION ) {
rank: 678
score: 99.32750786675348
patch: if ( type == Type . FUNCTION ) { return aliasing CaMeL Gets > 0 ; }
rank: 678
score: 99.32564544677734
patch: if ( type = Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 678
score: 99.2989142922794
patch: if ( type != Type . NULL && aliasing CaMeL Gets ( type ) ) {
rank: 678
score: 99.29682922363281
patch: if ( type . is CaMeL None ( ) ) { return true ; }
rank: 678
score: 99.19671161358173
patch: if ( ! type . is CaMeL Constant ( ) ) {
rank: 679
score: 99.38681175595238
patch: if ( type != Type . FUNCTION && type . is CaMeL Class CaMeL Or CaMeL Enum ( ) )
rank: 679
score: 99.32972476356908
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) ) return true ;
rank: 679
score: 99.29823303222656
patch: if ( aliasing CaMeL Gets > FUNCTION && aliasing CaMeL Gets > FUNCTION ) {
rank: 679
score: 99.29652506510416
patch: if ( type == Type . FUNCTION && ! is CaMeL Interface ) {
rank: 679
score: 99.196630859375
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets > ) {
rank: 680
score: 99.38621884300595
patch: if ( declaration . get CaMeL Id ( ) != null || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 680
score: 99.34600151909723
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( ) && parent == null ) {
rank: 680
score: 99.34405517578125
patch: if ( type != Type . FUNCTION && global CaMeL Sets > 1 ) {
rank: 680
score: 99.32528686523438
patch: if ( declaration . get CaMeL Twin ( ) == null ) { {
rank: 680
score: 99.29620361328125
patch: if ( type != Type . FUNCTION && type != Type . class ) {
rank: 680
score: 99.19589669363839
patch: if ( type == null && type != Type . FUNCTION ) {
rank: 681
score: 99.34396201685855
patch: Preconditions . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ; return true ; }
rank: 681
score: 99.3291015625
patch: if ( type != Type . FUNCTION && this . aliasing CaMeL Gets != 0 ) {
rank: 681
score: 99.32573385799633
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 681
score: 99.29644775390625
patch: if ( mode == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 681
score: 99.29572296142578
patch: if ( type != Type . FUNCTION && type != Type . NO ) {
rank: 681
score: 99.19529371995192
patch: if ( type . contains ( Type . FUNCTION ) ) {
rank: 682
score: 99.38610161675348
patch: if ( local CaMeL Sets != 0 && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 682
score: 99.37007141113281
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || parent == null ) {
rank: 682
score: 99.34516143798828
patch: if ( type == Type . class && aliasing CaMeL Gets > 0 ) {
rank: 682
score: 99.34385052849265
patch: if ( ! parent . is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 682
score: 99.32889811197917
patch: if ( type != Type . FUNCTION && ! is CaMeL Instance ( type ) ) {
rank: 682
score: 99.32545471191406
patch: if ( type != Type . PARAMETER && aliasing CaMeL Gets > 0 ) {
rank: 682
score: 99.29583333333333
patch: if ( type == Type . FUNCTION && type != Type . FUNCTION )
rank: 682
score: 99.19519981971153
patch: if ( ! type . length ( ) == 0 ) {
rank: 683
score: 99.3433837890625
patch: if ( declaration . get CaMeL Name ( ) != null ) {
rank: 683
score: 99.32465362548828
patch: if ( type != Type . FORMAT && aliasing CaMeL Gets > 0 ) {
rank: 683
score: 99.32379913330078
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets $NUMBER$ 0 ) {
rank: 683
score: 99.19513346354167
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets == 0 )
rank: 684
score: 99.38526746961806
patch: if ( type != null ) { return is CaMeL Class CaMeL Or CaMeL Enum ) ;
rank: 684
score: 99.29541015625
patch: if ( type != Type . NAME && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 684
score: 99.194677734375
patch: if ( type > Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 685
score: 99.38507758246527
patch: if ( type != Type . TARGET && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 685
score: 99.34375
patch: if ( parent == null || parent . get CaMeL Name ( ) != null ) {
rank: 685
score: 99.32778591579861
patch: / * while ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 685
score: 99.2949688251202
patch: if ( type . starts CaMeL With ( $STRING$ ) ) {
rank: 685
score: 99.19437662760417
patch: if ( type > Type . FUNCTION || aliasing CaMeL Gets > 0 )
rank: 686
score: 99.38493795955883
patch: if ( type != == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 686
score: 99.36499701605902
patch: if ( declaration . get CaMeL Twin ( ) != null ) { return ; }
rank: 686
score: 99.29463195800781
patch: if ( is CaMeL Local ( ) && aliasing CaMeL Gets > 0 ) {
rank: 686
score: 99.19321986607143
patch: if ( parent != null && type != Type . FUNCTION ) {
rank: 687
score: 99.38410101996527
patch: if ( declaration != null || declaration . get CaMeL Twin ( ) != null )
rank: 687
score: 99.34238152754934
patch: if ( type != Type . FUNCTION && global CaMeL Sets > 0 ) { return false ;
rank: 687
score: 99.32369559151786
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { / /
rank: 687
score: 99.32012176513672
patch: if ( version != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 687
score: 99.29412078857422
patch: if ( type CaMeL Name != null && aliasing CaMeL Gets > 0 ) {
rank: 687
score: 99.19317626953125
patch: if ( type == null || type != Type . FUNCTION ) {
rank: 688
score: 99.38393985523896
patch: if ( ! global CaMeL Sets != 1 || local CaMeL Sets != 0 ) {
rank: 688
score: 99.34187316894531
patch: if ( id == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 688
score: 99.31947326660156
patch: if ( type instanceof Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 688
score: 99.19270833333333
patch: if ( type == Type . FUNCTION && false ) {
rank: 689
score: 99.36421472886029
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 ) break ;
rank: 689
score: 99.34085422092014
patch: if ( declaration . get CaMeL Name ( ) . length ( ) == 0 ) {
rank: 689
score: 99.29138946533203
patch: if ( type != Scope . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 689
score: 99.19260951450893
patch: if ( type == Type . FUNCTION && ! ( ) ) {
rank: 690
score: 99.3828484030331
patch: if ( type != Type . FUNCTION || ! global CaMeL Sets != 0 ) {
rank: 690
score: 99.324462890625
patch: if ( type != null && type . equals ( Type . FUNCTION ) ) {
rank: 690
score: 99.32292938232422
patch: else if ( declaration . get CaMeL Twin ( ) != null ) {
rank: 690
score: 99.2927474975586
patch: if ( type != Type . FUNCTION && type != Type . READ ) {
rank: 690
score: 99.19092610677083
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets != 0 )
rank: 691
score: 99.38252981085526
patch: if ( declaration . get CaMeL Twin ( ) == null ) { return true ; }
rank: 691
score: 99.34026421440973
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && global CaMeL Sets != null ) {
rank: 691
score: 99.32399495442708
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets != Type . FUNCTION ) {
rank: 691
score: 99.29206848144531
patch: if ( type <= Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 691
score: 99.19056803385416
patch: if ( type == Type . FUNCTION && ! aliasing CaMeL Gets ) {
rank: 692
score: 99.363525390625
patch: if ( type != Type . OTHER && aliasing CaMeL Gets > 0 ) return false ;
rank: 692
score: 99.3232421875
patch: if ( type != Type . FUNCTION && type instanceof Type . FUNCTION ) {
rank: 692
score: 99.32224408318015
patch: if ( parent . declaration . get CaMeL Twin ( ) != null ) {
rank: 692
score: 99.31781768798828
patch: if ( type != Type . FUNCTION ) { type = Type . FUNCTION ;
rank: 692
score: 99.29133605957031
patch: if ( type == Type . Void && aliasing CaMeL Gets > 0 ) {
rank: 692
score: 99.1893798828125
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets != 0 )
rank: 693
score: 99.36306762695312
patch: if ( global CaMeL Sets != 0 && aliasing CaMeL Gets > 0 ) {
rank: 693
score: 99.33675986842105
patch: if ( declaration . get CaMeL Twin ( ) != null ) { { return true ;
rank: 693
score: 99.31757354736328
patch: if ( type == Type . LINE && aliasing CaMeL Gets > 0 ) {
rank: 693
score: 99.29071807861328
patch: if ( type != Type . NULL || aliasing CaMeL Gets > 1 ) {
rank: 693
score: 99.18878173828125
patch: if ( type == null || aliasing CaMeL Gets > 0 ) {
rank: 694
score: 99.31688735064338
patch: if ( type instanceof Type . FUNCTION && aliasing CaMeL Gets ( 0 ) ) {
rank: 694
score: 99.290576171875
patch: if ( ! ( is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 694
score: 99.18831693209134
patch: if ( ! type . is CaMeL All ( ) ) {
rank: 695
score: 99.38189019097223
patch: if ( type != null || ( is CaMeL Class CaMeL Or CaMeL Enum ) ) {
rank: 695
score: 99.32282457853618
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 1 ) { return false ;
rank: 695
score: 99.32026223575367
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 0 ) { }
rank: 695
score: 99.31670379638672
patch: if ( type != Type . COMMA && aliasing CaMeL Gets > 0 ) {
rank: 695
score: 99.18771158854166
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets == 0 )
rank: 696
score: 99.31634162454044
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 ) { )
rank: 696
score: 99.28871154785156
patch: if ( type == Type . T && aliasing CaMeL Gets > 0 ) {
rank: 696
score: 99.28780364990234
patch: if ( type != Type . FUNCTION && type != Type . DEFAULT ) {
rank: 697
score: 99.38157743566177
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 * ) {
rank: 697
score: 99.36134338378906
patch: if ( global CaMeL Sets != 1 && local CaMeL Sets != 0 ) {
rank: 697
score: 99.3189697265625
patch: if ( key != null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 697
score: 99.28799438476562
patch: if ( type == Type . STRING && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 697
score: 99.18678977272727
patch: } if ( type != Type . FUNCTION ) {
rank: 698
score: 99.38035673253677
patch: if ( type != Type . FUNCTION && ! ! aliasing CaMeL Gets > 0 )
rank: 698
score: 99.32141791449652
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( type ) != ) {
rank: 698
score: 99.31865583147321
patch: if ( parent == null || aliasing CaMeL Gets > 1 ) {
rank: 698
score: 99.2871322631836
patch: if ( type != Type . FALSE && aliasing CaMeL Gets > 0 ) {
rank: 698
score: 99.18662806919643
patch: if ( get CaMeL Types ( ) == Type . FUNCTION ) {
rank: 699
score: 99.38008045014881
patch: if ( ! global CaMeL Sets != 0 || declaration . get CaMeL Twin ( ) != null )
rank: 699
score: 99.33686174665179
patch: if ( type == Type . FUNCTION && parent == null ) {
rank: 699
score: 99.3184326171875
patch: if ( type . get CaMeL Twin ( ) == null ) {
rank: 699
score: 99.28748321533203
patch: if ( type != Type . NONE && ! aliasing CaMeL Gets > 0 )
rank: 699
score: 99.18540736607143
patch: if ( parent != null && type == Type . FUNCTION ) {
rank: 700
score: 99.35755920410156
patch: if ( local CaMeL Sets != 0 || local CaMeL Sets != 0 ) {
rank: 700
score: 99.32111952039931
patch: if ( type != Type . FUNCTION && $NUMBER$ == aliasing CaMeL Gets > 0 ) {
rank: 700
score: 99.31461334228516
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ( type ) ) {
rank: 700
score: 99.28734588623047
patch: if ( type != Type . RETURN && aliasing CaMeL Gets > 0 ) {
rank: 700
score: 99.28633880615234
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > NO ) {
rank: 700
score: 99.18512573242188
patch: if ( type == Type . NONE ) {
rank: 701
score: 99.33425903320312
patch: if ( declaration . get CaMeL Type ( ) == Type . FUNCTION ) {
rank: 701
score: 99.32109239366319
patch: if ( type != Type . FUNCTION && ! ! aliasing CaMeL Gets > 1 ) {
rank: 701
score: 99.18465750558036
patch: if ( type == null && type == Type . FUNCTION ) {
rank: 702
score: 99.37885974702381
patch: if ( type != Type . TYPE && type != Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 702
score: 99.318115234375
patch: if ( declaration . get CaMeL Twin ( ) != null ) { ) {
rank: 702
score: 99.31426642922794
patch: if ( aliasing CaMeL Gets ( type , aliasing CaMeL Gets > 0 ) ) {
rank: 702
score: 99.28602600097656
patch: if ( type == Type . NONE && type != Type . FUNCTION ) {
rank: 702
score: 99.28506469726562
patch: if ( ! type != Type . FUNCTION && aliasing CaMeL Gets > ) {
rank: 702
score: 99.18360392252605
patch: if ( type . size ( ) == 0 ) {
rank: 703
score: 99.37873670789931
patch: if ( type != Type . Var && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 703
score: 99.35646685431985
patch: if ( equals ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 703
score: 99.32082950367646
patch: if ( type != null ) { if ( type != Type . FUNCTION ) {
rank: 703
score: 99.31338500976562
patch: if ( type == Type . YES && aliasing CaMeL Gets > 0 ) {
rank: 703
score: 99.28561401367188
patch: if ( type != Type . FUNCTION && type != Type . VOID ) {
rank: 703
score: 99.28482818603516
patch: if ( type != Result . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 703
score: 99.183447265625
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets == null )
rank: 704
score: 99.37839226973684
patch: if ( type != null || global CaMeL Sets != 0 || local CaMeL Sets != 0 )
rank: 704
score: 99.31707000732422
patch: if ( this . parent == null || aliasing CaMeL Gets > 0 ) {
rank: 704
score: 99.31223842075893
patch: if ( aliasing CaMeL Gets . is CaMeL Empty ( ) ) {
rank: 704
score: 99.2848129272461
patch: if ( type == Type . null && aliasing CaMeL Gets > 0 ) {
rank: 704
score: 99.18325570913461
patch: if ( ! type . is CaMeL Declared ( ) ) {
rank: 705
score: 99.37834616268383
patch: if ( ! type != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 705
score: 99.32006157769098
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets , aliasing CaMeL Gets ) {
rank: 705
score: 99.31688581194196
patch: if ( name != null || aliasing CaMeL Gets > 0 ) {
rank: 705
score: 99.28502546037946
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ) {
rank: 706
score: 99.3779296875
patch: if ( type != Type . NONE && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 706
score: 99.31135828354779
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 , 0 )
rank: 706
score: 99.28384399414062
patch: if ( type != Type . FUNCTION && ! type . instanceof Type ) {
rank: 706
score: 99.2838134765625
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets < 0 )
rank: 706
score: 99.1808349609375
patch: if ( ! type . is CaMeL Empty ( ) ) return false ;
rank: 707
score: 99.37754193474265
patch: if ( declaration . get CaMeL Twin ( ) != null && false ) {
rank: 707
score: 99.33159722222223
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || local CaMeL Sets != null ) {
rank: 707
score: 99.33154975043402
patch: return ! parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ; }
rank: 707
score: 99.31644112723214
patch: if ( declaration . get CaMeL Twin ( ) != 1 )
rank: 707
score: 99.28358677455357
patch: if ( type != Type . FUNCTION && ! type . ) {
rank: 707
score: 99.18045748197116
patch: if ( aliasing CaMeL Gets ( type ) != null ) {
rank: 708
score: 99.33130560980902
patch: if ( ( type != Type . FUNCTION && global CaMeL Sets > 0 ) ) {
rank: 708
score: 99.31621237362133
patch: if ( type != Type . FUNCTION || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 708
score: 99.282958984375
patch: if ( content != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 708
score: 99.18042805989583
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets == null )
rank: 709
score: 99.37718963623047
patch: if ( declaration == null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 709
score: 99.35346536075367
patch: } if ( type != Type . FUNCTION && global CaMeL Sets != 0 ) {
rank: 709
score: 99.31599644252232
patch: if ( parent . get CaMeL Parent ( ) != null ) {
rank: 709
score: 99.31086730957031
patch: if ( type != type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 709
score: 99.27789713541667
patch: if ( type != Type . NULL || aliasing CaMeL Gets > 0 )
rank: 709
score: 99.17983572823661
patch: if ( ! ! ( type == Type . FUNCTION ) ) {
rank: 710
score: 99.35336303710938
patch: if ( type != Type . OTHER && global CaMeL Sets != null ) {
rank: 710
score: 99.31797281901042
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . equals ( type ) )
rank: 710
score: 99.31499481201172
patch: if ( global CaMeL Sets != null || aliasing CaMeL Gets > 0 ) {
rank: 710
score: 99.28272356305804
patch: if ( parent != null && aliasing CaMeL Gets > 0 ) {
rank: 710
score: 99.27582194010417
patch: if ( type != Type . FUNCTION && type . length > 0 )
rank: 710
score: 99.17967732747395
patch: if ( type . is CaMeL Local ( ) ) {
rank: 711
score: 99.3770392922794
patch: if ( ! type != Type . FUNCTION || global CaMeL Sets != 0 ) {
rank: 711
score: 99.31678602430556
patch: if ( type != null && ! ! type . is CaMeL Empty ( ) ) {
rank: 711
score: 99.3139419555664
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets < 0 ) {
rank: 711
score: 99.31016630284927
patch: if ( type 1 != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 711
score: 99.27460123697917
patch: if ( type == Type . FUNCTION && ! is CaMeL Local ) {
rank: 711
score: 99.1787109375
patch: if ( type != Type . FUNCTION && ! false ) {
rank: 712
score: 99.37690565321181
patch: if ( type != Type . NOT || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 712
score: 99.330810546875
patch: if ( parent == null || declaration . get CaMeL Id ( ) != null ) {
rank: 712
score: 99.31634521484375
patch: if ( n != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 712
score: 99.30906048943015
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . 0 > 0 )
rank: 712
score: 99.28091430664062
patch: if ( code == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 712
score: 99.27425711495536
patch: if ( type . get CaMeL Name ( ) == null ) {
rank: 712
score: 99.17767888849431
patch: if ( ! is CaMeL Enum ( ) ) {
rank: 713
score: 99.31559484145221
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . > 1 ) {
rank: 713
score: 99.27162272135416
patch: if ( type == Type . STRING && aliasing CaMeL Gets > 0 )
rank: 714
score: 99.376708984375
patch: if ( declaration . get CaMeL Twin ( ) == null ) { return false ;
rank: 714
score: 99.31476907169117
patch: if ( type != null && ! type . is CaMeL Local ( ) ) {
rank: 714
score: 99.30848795572916
patch: if ( type instanceof Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 714
score: 99.2715576171875
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > 1 )
rank: 714
score: 99.1764385516827
patch: if ( ! type . is CaMeL Function ( ) ) {
rank: 715
score: 99.376220703125
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; } else {
rank: 715
score: 99.3277359008789
patch: if ( type == Type . TYPE && aliasing CaMeL Gets > 1 ) {
rank: 715
score: 99.31475471047794
patch: if ( type != Type . FUNCTION && ! is CaMeL Global ( ) ) {
rank: 715
score: 99.31120031020221
patch: if ( declaration . get CaMeL Twin ( ) != Type . FUNCTION ) {
rank: 715
score: 99.30841064453125
patch: if ( type != Type . DEFAULT || aliasing CaMeL Gets > 0 ) {
rank: 715
score: 99.27947235107422
patch: if ( type == Type . FUNCTION && type != Type . TYPE ) {
rank: 715
score: 99.2696044921875
patch: if ( type != Type . NULL && type != Type . FUNCTION )
rank: 715
score: 99.17608642578125
patch: if ( ! ! ( type != Type . FUNCTION ) ) {
rank: 716
score: 99.37560356987848
patch: if ( type != Type . class && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 716
score: 99.27935028076172
patch: if ( aliasing CaMeL Gets > 1 && aliasing CaMeL Gets > 0 ) {
rank: 716
score: 99.1741943359375
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets == 0 )
rank: 717
score: 99.37464057074652
patch: if ( ! type . is CaMeL Class CaMeL Or CaMeL Enum ) { return false ;
rank: 717
score: 99.3094482421875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > - 0 )
rank: 717
score: 99.26895345052084
patch: if ( type != Type . FUNCTION && ! is CaMeL Interface ) {
rank: 717
score: 99.17293294270833
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets == null )
rank: 718
score: 99.17200520833333
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 &&
rank: 719
score: 99.37419690583882
patch: if ( declaration . get CaMeL Twin ( ) != null && type != null ) {
rank: 719
score: 99.2687744140625
patch: if ( type CaMeL Name . equals ( Type . FUNCTION ) ) {
rank: 719
score: 99.17178780691964
patch: if ( ! name . equals ( Type . FUNCTION ) ) {
rank: 720
score: 99.37410242417279
patch: if ( type != - 1 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 720
score: 99.27721228966347
patch: if ( type != Type . FUNCTION && type != ) {
rank: 720
score: 99.17057291666667
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets == null )
rank: 721
score: 99.37393349095395
patch: if ( declaration . get CaMeL Twin ( ) != null || type != null ) {
rank: 721
score: 99.31271023220486
patch: if ( type != Type . FUNCTION && ! is CaMeL Primitive ( type ) ) {
rank: 721
score: 99.30699157714844
patch: if ( node == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 721
score: 99.276611328125
patch: if ( aliasing CaMeL Gets ( aliasing CaMeL Gets > 0 ) ) {
rank: 721
score: 99.268505859375
patch: if ( type != Type . FUNCTION && type != Type . NONE )
rank: 721
score: 99.1700908954327
patch: if ( ! type . size ( ) == 0 ) {
rank: 722
score: 99.37379964192708
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && > 0 )
rank: 722
score: 99.34900620404412
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 ) { {
rank: 722
score: 99.32798936631944
patch: if ( ( parent == Type . FUNCTION && aliasing CaMeL Gets > 0 ) ) {
rank: 722
score: 99.30850423177084
patch: if ( this . get CaMeL Twin ( ) != null ) {
rank: 722
score: 99.268212890625
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( ) )
rank: 722
score: 99.16917928059895
patch: if ( ! type . contains ( type ) ) {
rank: 723
score: 99.3250503540039
patch: if ( ( parent == null ) && local CaMeL Sets != 0 ) {
rank: 723
score: 99.30635070800781
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > true ) {
rank: 723
score: 99.27629743303571
patch: if ( name != null && aliasing CaMeL Gets > 0 ) {
rank: 723
score: 99.26801091974431
patch: if ( type != Type . FUNCTION ) { {
rank: 724
score: 99.37352159288194
patch: if ( declaration . is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 724
score: 99.32520403180804
patch: if ( declaration . get CaMeL Value ( ) != null ) {
rank: 724
score: 99.31200493706598
patch: if ( aliasing CaMeL Gets ( type ) || aliasing CaMeL Gets ( type ) ) {
rank: 724
score: 99.27571105957031
patch: if ( type != Type . AND && aliasing CaMeL Gets > 0 ) {
rank: 724
score: 99.267626953125
patch: if ( type != Type . FUNCTION && type == Type . ) {
rank: 724
score: 99.16890092329545
patch: if ( ! is CaMeL Primitive ( ) ) {
rank: 725
score: 99.3734130859375
patch: if ( ! ! is CaMeL Class CaMeL Or CaMeL Enum ) { return false ;
rank: 725
score: 99.3465805053711
patch: if ( parent == null && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 725
score: 99.31168619791667
patch: if ( type == Type . FUNCTION && this . type != Type . FUNCTION ) {
rank: 725
score: 99.26743861607143
patch: if ( type . get CaMeL Name ( ) != null ) {
rank: 725
score: 99.16788736979167
patch: if ( type != Type == Type . FUNCTION ) {
rank: 726
score: 99.37335205078125
patch: if ( type == null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 726
score: 99.32432725694444
patch: return parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( false ) ; }
rank: 726
score: 99.30992934283088
patch: if ( type != Type . FUNCTION && ! is CaMeL Local > 0 ) {
rank: 726
score: 99.30706787109375
patch: if ( get CaMeL Twin ( ) != null ) { return true ;
rank: 726
score: 99.30569458007812
patch: if ( property != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 726
score: 99.27557732077206
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { *
rank: 726
score: 99.26630045572917
patch: if ( type == Type . EMPTY && aliasing CaMeL Gets > 0 )
rank: 726
score: 99.16775716145834
patch: if ( type == Type . FUNCTION || type != Type . FUNCTION )
rank: 727
score: 99.3092400045956
patch: if ( type != Type . FUNCTION && ! ! aliasing CaMeL Gets > ) {
rank: 727
score: 99.30551583426339
patch: if ( type != Type . FUNCTION ) { return true ; }
rank: 727
score: 99.16716657366071
patch: if ( ! type . equals ( Type . NULL ) ) {
rank: 728
score: 99.37311197916667
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 1 )
rank: 728
score: 99.3463363647461
patch: if ( type == Type . FUNCTION || global CaMeL Sets != 1 ) {
rank: 728
score: 99.3069317157452
patch: if ( get CaMeL Twin ( ) != 1 ) {
rank: 728
score: 99.26471354166667
patch: if ( ! aliasing CaMeL Gets > 0 ) { return true ; }
rank: 729
score: 99.37242296006944
patch: if ( type != Type . TYPE || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 729
score: 99.34625244140625
patch: if ( type != Type . OTHER || local CaMeL Sets != 0 ) {
rank: 729
score: 99.26410381610577
patch: if ( type != Type . FUNCTION && type . ) {
rank: 730
score: 99.32236328125
patch: if ( declaration . get CaMeL Twin ( ) == 1 ) {
rank: 730
score: 99.30910237630208
patch: if ( type != Type . FUNCTION || this . type != Type . FUNCTION ) {
rank: 730
score: 99.27247619628906
patch: if ( level != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 730
score: 99.16593424479167
patch: if ( type != Type . FUNCTION ) return false ;
rank: 731
score: 99.37173025948661
patch: if ( type != null || global CaMeL Sets != 1 ) {
rank: 731
score: 99.30897352430556
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) return false {
rank: 731
score: 99.30392456054688
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets + 0 ) {
rank: 731
score: 99.271484375
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > false ) {
rank: 731
score: 99.16453857421875
patch: if ( aliasing CaMeL Gets > null ) {
rank: 732
score: 99.37038702713816
patch: if ( type != null ) { return ( is CaMeL Class CaMeL Or CaMeL Enum ) ;
rank: 732
score: 99.3212531594669
patch: if ( get CaMeL Twin ( ) != null && parent == null ) {
rank: 732
score: 99.30280303955078
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ( type ) )
rank: 732
score: 99.27111053466797
patch: if ( type == Class . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 732
score: 99.16431535993304
patch: if ( get CaMeL State ( ) == Type . FUNCTION ) {
rank: 733
score: 99.30374908447266
patch: if ( type != Type . PI && aliasing CaMeL Gets > 0 ) {
rank: 733
score: 99.27066040039062
patch: switch ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 733
score: 99.26338704427083
patch: if ( type . type != Type . FUNCTION ) {
rank: 733
score: 99.16421944754464
patch: if ( element != null && type != Type . FUNCTION ) {
rank: 734
score: 99.37026638454861
patch: if ( type != null || type . get CaMeL Twin ( ) != null )
rank: 734
score: 99.31941731770833
patch: if ( parent == null || parent != null ) {
rank: 734
score: 99.26292201450893
patch: if ( type == Type . FUNCTION && type instanceof Type ) {
rank: 734
score: 99.16380092075893
patch: if ( type == null || type == Type . FUNCTION ) {
rank: 735
score: 99.37000189887152
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) { break ;
rank: 735
score: 99.34261648995536
patch: if ( type != Type . OTHER && parent == null ) {
rank: 735
score: 99.31922912597656
patch: if ( parent == null || parent . size ( ) > 0 ) {
rank: 735
score: 99.26947784423828
patch: if ( index != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 735
score: 99.26199544270834
patch: if ( type == Type . NAME && aliasing CaMeL Gets > 0 )
rank: 735
score: 99.16360473632812
patch: if ( ! is CaMeL Instance ( type ) ) {
rank: 736
score: 99.369873046875
patch: if ( type != Type . PROPERTY && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 736
score: 99.34223175048828
patch: if ( global CaMeL Sets != 0 || global CaMeL Sets != 0 ) {
rank: 736
score: 99.30299595424107
patch: if ( type != Type . FUNCTION && type != null ) {
rank: 736
score: 99.30278015136719
patch: if ( ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 736
score: 99.3015365600586
patch: if ( type == Type . LT && aliasing CaMeL Gets > 0 ) {
rank: 736
score: 99.16291155133929
patch: if ( get CaMeL Type ( ) == Type . NULL ) {
rank: 737
score: 99.34170532226562
patch: if ( type != Type . FUNCTION && ( parent == null ) ) {
rank: 737
score: 99.31868250229779
patch: if ( ( parent . get CaMeL Twin ( ) != null ) ) {
rank: 737
score: 99.30269622802734
patch: if ( type != Type . $NUMBER$ && aliasing CaMeL Gets > 0 ) {
rank: 737
score: 99.26048177083334
patch: if ( aliasing CaMeL Gets > 0 ) { { return true ; }
rank: 737
score: 99.162353515625
patch: if ( element != null && type == Type . FUNCTION ) {
rank: 738
score: 99.31832122802734
patch: if ( declaration . get CaMeL Type CaMeL Name ( ) != null ) {
rank: 738
score: 99.30101013183594
patch: if ( type != Type . FUNCTION ) { return true ; } else {
rank: 738
score: 99.26795959472656
patch: if ( type != Type . FUNCTION : aliasing CaMeL Gets > 0 ) {
rank: 738
score: 99.16233520507812
patch: if ( type != Type . TYPE ) {
rank: 739
score: 99.36937662760417
patch: if ( ! declaration . get CaMeL Twin ( ) != null )
rank: 739
score: 99.31791687011719
patch: if ( ( parent != null ) || aliasing CaMeL Gets > 0 ) {
rank: 739
score: 99.30022430419922
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets : 0 ) {
rank: 740
score: 99.33967808314732
patch: if ( type != Type . FUNCTION && is CaMeL Enum ) {
rank: 740
score: 99.31756591796875
patch: if ( declaration . get CaMeL Module ( ) != null ) {
rank: 740
score: 99.3009033203125
patch: if ( get != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 740
score: 99.30082433363971
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > ) return false ;
rank: 740
score: 99.2671890258789
patch: if ( type != Type . TYPE && type == Type . FUNCTION ) {
rank: 740
score: 99.25930989583334
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ( ) ) {
rank: 740
score: 99.16121419270833
patch: if ( type == Type . FUNCTION && true ) {
rank: 741
score: 99.30057525634766
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > true ) {
rank: 741
score: 99.29973602294922
patch: if ( type != Type . START && aliasing CaMeL Gets > 0 ) {
rank: 741
score: 99.29876708984375
patch: if ( declaration . get CaMeL Twin ( ) != null ) { )
rank: 741
score: 99.16006469726562
patch: if ( type != Type . EMPTY ) {
rank: 742
score: 99.36860094572368
patch: if ( ! ! ! is CaMeL Class CaMeL Or CaMeL Enum ) { return false ; }
rank: 742
score: 99.33888244628906
patch: if ( type != Type . FUNCTION && local CaMeL Sets == 0 ) {
rank: 742
score: 99.2563232421875
patch: if ( type != Type . FUNCTION && type != Type . NULL )
rank: 742
score: 99.15917096819196
patch: if ( get CaMeL Symbol ( ) == Type . FUNCTION ) {
rank: 743
score: 99.33660125732422
patch: if ( type != Type . OTHER && global CaMeL Sets == 0 ) {
rank: 743
score: 99.26554107666016
patch: if ( root != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 743
score: 99.15671793619792
patch: if ( type . is CaMeL Enum ( ) ) {
rank: 744
score: 99.36844075520834
patch: if ( type != Type . FUNCTION && global CaMeL Sets == 0 )
rank: 744
score: 99.33517456054688
patch: if ( type != Type . FUNCTION && global CaMeL Sets != false ) {
rank: 744
score: 99.31532287597656
patch: if ( parent == null || parent . can CaMeL Collapse ( ) ) {
rank: 744
score: 99.29725748697916
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( key ) ) {
rank: 744
score: 99.26509094238281
patch: if ( type != Type . EQ && aliasing CaMeL Gets > 0 ) {
rank: 744
score: 99.25489908854166
patch: if ( type != Type . UNKNOWN && aliasing CaMeL Gets > 0 )
rank: 744
score: 99.15633544921874
patch: if ( aliasing CaMeL Gets != null ) {
rank: 745
score: 99.36834716796875
patch: if ( type != Type . TYPE && ( aliasing CaMeL Gets > 0 ) ) {
rank: 745
score: 99.26451110839844
patch: if ( type != Type . false && aliasing CaMeL Gets > 0 ) {
rank: 745
score: 99.2548828125
patch: if ( type == Type . FUNCTION && type == Type . ) {
rank: 745
score: 99.15579927884616
patch: if ( ! type . is CaMeL Declaration ( ) ) {
rank: 746
score: 99.36784811580883
patch: if ( type != null && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 746
score: 99.3340087890625
patch: if ( type != Type . OTHER && aliasing CaMeL Gets > 0 )
rank: 746
score: 99.31456801470588
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum && parent == null ) {
rank: 746
score: 99.31446075439453
patch: if ( type != Type . NOT && aliasing CaMeL Gets > 1 ) {
rank: 746
score: 99.29739200367646
patch: if ( parent != null && ! type . is CaMeL Empty ( ) ) {
rank: 746
score: 99.26431274414062
patch: if ( is CaMeL Array ( ) && aliasing CaMeL Gets > 0 ) {
rank: 746
score: 99.25435384114583
patch: if ( type != Type . NULL && aliasing CaMeL Gets > 1 )
rank: 746
score: 99.15575154622395
patch: if ( ! is CaMeL Name ( type ) ) {
rank: 747
score: 99.36746376439145
patch: if ( type != Type . FUNCTION && ! ! is CaMeL Class CaMeL Or CaMeL Enum )
rank: 747
score: 99.29729865579044
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets > true ) {
rank: 747
score: 99.29598236083984
patch: if ( can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( declaration ) )
rank: 747
score: 99.26429748535156
patch: if ( type != Type . null || aliasing CaMeL Gets > 0 ) {
rank: 747
score: 99.15388706752232
patch: if ( get CaMeL Type ( ) != Type . NULL ) {
rank: 748
score: 99.36737060546875
patch: if ( local CaMeL Sets != 1 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 748
score: 99.31393612132354
patch: if ( . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ) {
rank: 748
score: 99.29571533203125
patch: if ( type != Type . MAX && aliasing CaMeL Gets > 0 ) {
rank: 748
score: 99.25276692708333
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets >= 0 )
rank: 749
score: 99.3673095703125
patch: if ( type != null && global CaMeL Sets != 0 ) {
rank: 749
score: 99.3123291015625
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( declaration ) ) {
rank: 749
score: 99.29388427734375
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > false ) {
rank: 749
score: 99.25218098958334
patch: if ( type != Type . FUNCTION || type != Type . ) {
rank: 749
score: 99.1527099609375
patch: if ( get CaMeL Scope ( ) == Type . FUNCTION ) {
rank: 750
score: 99.36720904181985
patch: if ( ! ! declaration . get CaMeL Twin ( ) != null ) {
rank: 750
score: 99.1518887606534
patch: if ( is CaMeL Name ( type ) ) {
rank: 751
score: 99.36669049944196
patch: if ( type != null || global CaMeL Sets == 0 ) {
rank: 751
score: 99.33212890625
patch: if ( local CaMeL Sets != 0 ) {
rank: 751
score: 99.29511260986328
patch: if ( declaration . get CaMeL Twin ( ) != null ) { else
rank: 751
score: 99.26334635416667
patch: if ( aliasing CaMeL Gets > Type . FUNCTION ) {
rank: 751
score: 99.24959309895833
patch: if ( type instanceof Type ) { return aliasing CaMeL Gets > 0 ;
rank: 751
score: 99.14795939127605
patch: if ( ! type . contains ( $STRING$ ) ) {
rank: 752
score: 99.3650894165039
patch: if ( type != Type . FUNCTION || global CaMeL Sets == 1 ) {
rank: 752
score: 99.2950439453125
patch: if ( value != null || aliasing CaMeL Gets > 0 ) {
rank: 752
score: 99.29426574707031
patch: if ( type == Type . STRING || aliasing CaMeL Gets > 0 ) {
rank: 752
score: 99.24911063058036
patch: if ( type != Type . FUNCTION || type instanceof Type ) {
rank: 752
score: 99.14673868815105
patch: if ( type != Type . FUNCTION ) { ) {
rank: 753
score: 99.31264361213235
patch: if ( can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( type ) ) {
rank: 753
score: 99.2939453125
patch: if ( type != Type . XML && aliasing CaMeL Gets > 0 ) {
rank: 753
score: 99.26266276041666
patch: if = type != Type . FUNCTION && aliasing CaMeL Gets > 0 {
rank: 753
score: 99.2485595703125
patch: if ( type instanceof Type && ! ( type instanceof Type ) ) {
rank: 754
score: 99.36442735460069
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets > 0 && 0 ) {
rank: 754
score: 99.33070373535156
patch: } if ( declaration . get CaMeL Twin ( ) != null ) {
rank: 754
score: 99.29126694623162
patch: if ( type != Type . FUNCTION && ! type == Type . FUNCTION ) {
rank: 754
score: 99.145751953125
patch: if ( type != Type . FUNCTION || false ) {
rank: 755
score: 99.36392211914062
patch: if ( type != Type . TYPE && local CaMeL Sets != 0 ) {
rank: 755
score: 99.33058076746323
patch: if ( type != Type . FUNCTION && global CaMeL Sets != 0 ) { ;
rank: 755
score: 99.3104248046875
patch: if ( type == Type . PROPERTY && aliasing CaMeL Gets > 0 ) {
rank: 755
score: 99.29165852864584
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets > $NUMBER$ )
rank: 755
score: 99.29126694623162
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ( name ) ) {
rank: 755
score: 99.26197814941406
patch: if ( type != Set . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 755
score: 99.14534505208333
patch: if ( type != Type != Type . FUNCTION ) {
rank: 756
score: 99.36370849609375
patch: if ( type != Type . TYPE && global CaMeL Sets == 0 ) {
rank: 756
score: 99.31224867876838
patch: if ( declaration . get CaMeL Twin ( ) != null || true ) {
rank: 756
score: 99.29108743106617
patch: if ( type == null && ! type . is CaMeL Empty ( ) ) {
rank: 756
score: 99.14525257457386
patch: switch ( type ) { case Type . FUNCTION :
rank: 757
score: 99.33031508501838
patch: if ( ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) ?
rank: 757
score: 99.30912780761719
patch: if ( type != Type . class && aliasing CaMeL Gets > 1 ) {
rank: 757
score: 99.29275716145834
patch: if ( type . get CaMeL Twin ( ) != 1 ) {
rank: 757
score: 99.29048156738281
patch: if ( type == Type . ALL && aliasing CaMeL Gets > 0 ) {
rank: 757
score: 99.28986672794117
patch: if ( type != null && ! type . is CaMeL Primitive ( ) ) {
rank: 757
score: 99.26028442382812
patch: if ( type != Type . TYPE && aliasing CaMeL Gets != 0 ) {
rank: 757
score: 99.14351981026786
patch: if ( type != Type . FUNCTION || aliasing CaMeL Gets ) {
rank: 758
score: 99.36334228515625
patch: if ( type != Type . TYPE || global CaMeL Sets != 1 ) {
rank: 758
score: 99.32996368408203
patch: if ( local CaMeL Sets != 0 && aliasing CaMeL Gets > 0 ) {
rank: 758
score: 99.30905151367188
patch: if ( type == Type . NOT || aliasing CaMeL Gets > 0 ) {
rank: 758
score: 99.28971862792969
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > n ) {
rank: 758
score: 99.24627278645833
patch: if ( type == Type . FUNCTION && type != Type . ) {
rank: 758
score: 99.1425030048077
patch: if ( type != Type . FUNCTION && ! true ) {
rank: 759
score: 99.36330837673611
patch: if ( ! this . declaration . get CaMeL Twin ( ) != null ) {
rank: 759
score: 99.3289794921875
patch: if ( type != Type . FUNCTION && local CaMeL Sets < 0 ) {
rank: 759
score: 99.28937639508929
patch: if ( type == Type . FUNCTION ) { return false ; }
rank: 760
score: 99.3631591796875
patch: if ( type != Type . FUNCTION && get CaMeL Id ( ) != null ) {
rank: 760
score: 99.3112564086914
patch: if ( parent . get CaMeL Type ( ) != Type . FUNCTION ) {
rank: 760
score: 99.291455078125
patch: if ( type != Type . FUNCTION , aliasing CaMeL Gets > 0 )
rank: 760
score: 99.24593680245536
patch: if ( type != Type . FUNCTION && Type . FUNCTION ) {
rank: 761
score: 99.32789611816406
patch: if ( global CaMeL Sets != null || local CaMeL Sets != 0 ) {
rank: 761
score: 99.29139709472656
patch: if ( aliasing CaMeL Gets != 0 || local CaMeL Sets != 0 ) {
rank: 761
score: 99.28670008042279
patch: if ( type != Type . FUNCTION && type . is CaMeL Empty ( ) )
rank: 761
score: 99.14140181107955
patch: if ( type != Type . FUNCTION || ) {
rank: 762
score: 99.288818359375
patch: if ( column != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 762
score: 99.244140625
patch: if ( type == Type . FUNCTION ) { {
rank: 762
score: 99.14008037860577
patch: if ( ! type . is CaMeL Active ( ) ) {
rank: 763
score: 99.31066022600446
patch: if ( declaration . get CaMeL Scope ( ) != null ) {
rank: 763
score: 99.2908706665039
patch: if ( parent == null || aliasing CaMeL Gets > 0 ) return false ;
rank: 763
score: 99.24407087053571
patch: if ( type != 0 && type != Type . FUNCTION ) {
rank: 763
score: 99.24398803710938
patch: if ( type . is CaMeL Const ( ) ) {
rank: 763
score: 99.13875325520833
patch: if ( ! is CaMeL Set ( type ) ) {
rank: 764
score: 99.28848266601562
patch: if ( type == Type . NUMBER && aliasing CaMeL Gets > 0 ) {
rank: 764
score: 99.28440755208334
patch: if ( type != Type . FUNCTION && type instanceof Type > ) {
rank: 765
score: 99.29041290283203
patch: if ( type != String . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 765
score: 99.28833770751953
patch: if ( type != Type . NO || aliasing CaMeL Gets > 0 ) {
rank: 765
score: 99.24365234375
patch: if ( type != Type . FUNCTION && options != 0 ) {
rank: 765
score: 99.24300130208333
patch: if ( type . aliasing CaMeL Gets > 0 ) {
rank: 766
score: 99.28354061351104
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets . aliasing CaMeL Gets {
rank: 766
score: 99.24274088541667
patch: if ( type == Type . FUNCTION || type == Type . ) {
rank: 766
score: 99.23997279575893
patch: if ( type != false && aliasing CaMeL Gets > 0 ) {
rank: 766
score: 99.13683210100446
patch: if ( type == Type . FUNCTION || aliasing CaMeL Gets ) {
rank: 767
score: 99.36265733506944
patch: if ( type != null || declaration . get CaMeL Id ( ) != null ) {
rank: 767
score: 99.32514190673828
patch: if ( type != Type . FUNCTION && global CaMeL Sets >= 0 ) {
rank: 767
score: 99.30412292480469
patch: if ( ( parent != null ) && aliasing CaMeL Gets > 0 ) {
rank: 767
score: 99.23974609375
patch: if ( type != Type . FUNCTION && > Type . FUNCTION ) {
rank: 767
score: 99.23964436848958
patch: if ( type . equals ( Type . FUNCTION ) )
rank: 767
score: 99.13438063401442
patch: if ( ! type . is CaMeL Instance ( ) ) {
rank: 768
score: 99.36220877511161
patch: if ( parent == null || global CaMeL Sets != 0 ) {
rank: 768
score: 99.30386352539062
patch: if ( parent == null || parent . length ( ) > 0 ) {
rank: 768
score: 99.28785705566406
patch: if ( ( type != null ) || aliasing CaMeL Gets > 0 ) {
rank: 768
score: 99.2877197265625
patch: if ( type != Token . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 768
score: 99.28307166466347
patch: if ( type != Type . FUNCTION ) { return false ;
rank: 768
score: 99.23928833007812
patch: if ( aliasing CaMeL Gets . length > 0 ) {
rank: 768
score: 99.23843149038461
patch: if ( type != Type . FUNCTION && ! 1 ) {
rank: 768
score: 99.13429612379808
patch: if ( type == Type . FUNCTION && ! false ) {
rank: 769
score: 99.28682708740234
patch: if ( type != Type . scope && aliasing CaMeL Gets > 0 ) {
rank: 769
score: 99.23903111049107
patch: if ( type . is CaMeL Qualified CaMeL Name ( ) ) {
rank: 769
score: 99.13252766927083
patch: if ( get CaMeL Node ( ) == null ) {
rank: 770
score: 99.36173502604167
patch: if ( type != Type . EMPTY && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 770
score: 99.30250549316406
patch: if ( type == Type . FUNCTION && local CaMeL Sets != null ) {
rank: 770
score: 99.23897879464286
patch: if ( type != Type . FUNCTION && is CaMeL Local ) {
rank: 770
score: 99.13116455078125
patch: if ( type != Node . FUNCTION ) {
rank: 771
score: 99.36055501302083
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && parent ) {
rank: 771
score: 99.32334899902344
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) }
rank: 771
score: 99.28717803955078
patch: if ( type == Type . PREFIX && aliasing CaMeL Gets > 0 ) {
rank: 771
score: 99.2851806640625
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) return false ;
rank: 771
score: 99.23577411358173
patch: if ( ! aliasing CaMeL Gets > Type . FUNCTION ) {
rank: 771
score: 99.12919108072917
patch: if ( type . length ( ) != 0 ) {
rank: 772
score: 99.36051940917969
patch: if ( value != null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 772
score: 99.30583639705883
patch: / / if ( declaration . get CaMeL Twin ( ) != null ) {
rank: 772
score: 99.28424072265625
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( type ) )
rank: 772
score: 99.23720005580357
patch: if ( type != Type . NULL && type instanceof Type ) {
rank: 772
score: 99.12711334228516
patch: if ( parent != null ) {
rank: 773
score: 99.36048719618056
patch: try { if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return true ; }
rank: 773
score: 99.3206787109375
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && aliasing CaMeL Gets ) {
rank: 773
score: 99.28154440487133
patch: if ( type != Type . FUNCTION && ! aliasing CaMeL Gets ( type ) )
rank: 773
score: 99.12552897135417
patch: if ( type != Type . FUNCTION || ! ) {
rank: 774
score: 99.359375
patch: if ( type != Type . NOT && ! aliasing CaMeL Gets > 0 ) {
rank: 774
score: 99.31868743896484
patch: if ( global CaMeL Sets != 1 || global CaMeL Sets != 0 ) {
rank: 774
score: 99.30071614583333
patch: if ( parent == null || parent . equals ( null ) ) {
rank: 774
score: 99.28636067708334
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets . ) {
rank: 774
score: 99.281982421875
patch: if ( declaration . get CaMeL Root ( ) != null ) {
rank: 774
score: 99.23552594866071
patch: if ( type != Type . FUNCTION && is CaMeL Interface ) {
rank: 774
score: 99.23337965745192
patch: if ( type != Type . FUNCTION && ! $NUMBER$ ) {
rank: 774
score: 99.12361653645833
patch: if ( type == Type == Type . FUNCTION ) {
rank: 775
score: 99.2861099243164
patch: if ( type == Type . TYPE && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 775
score: 99.28168131510417
patch: if ( type != null || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 775
score: 99.234619140625
patch: if ( type instanceof Type || aliasing CaMeL Gets > 0 ) {
rank: 775
score: 99.1202059659091
patch: if ( ! is CaMeL Interface ( ) ) {
rank: 776
score: 99.35845184326172
patch: if ( type != Type . FUNCTION && ! global CaMeL Sets != 0 )
rank: 776
score: 99.3051986694336
patch: if ( declaration . get CaMeL Type ( ) != Type . OTHER ) {
rank: 776
score: 99.2807388305664
patch: if ( type != Type . MIN || aliasing CaMeL Gets > 0 ) {
rank: 776
score: 99.27667236328125
patch: if ( parent == null || local CaMeL Sets != null ) {
rank: 776
score: 99.23201497395833
patch: if ( type != Type . FUNCTION ? aliasing CaMeL Gets > 0 {
rank: 776
score: 99.1194559733073
patch: if ( get CaMeL Node ( ) != null ) {
rank: 777
score: 99.35834147135417
patch: if ( type != Type . FUNCTION || global CaMeL Sets != 1 )
rank: 777
score: 99.23297119140625
patch: if ( type == Type . FUNCTION && type ) {
rank: 777
score: 99.23150634765625
patch: if ( type != FUNCTION || aliasing CaMeL Gets > 0 ) {
rank: 777
score: 99.11857096354167
patch: else { if ( type != Type . FUNCTION ) {
rank: 778
score: 99.3158187866211
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || type != null ) {
rank: 778
score: 99.30365753173828
patch: if ( ( parent == null || aliasing CaMeL Gets > 0 ) ) {
rank: 778
score: 99.29987335205078
patch: if ( type == Type . OTHER && aliasing CaMeL Gets > 1 ) {
rank: 778
score: 99.2806640625
patch: if ( type != Type . FUNCTION ) { case Type . FUNCTION :
rank: 778
score: 99.2325106534091
patch: if ( aliasing CaMeL Gets > 0 ) { {
rank: 778
score: 99.23128836495536
patch: if ( type != Type . FUNCTION && type == 0 ) {
rank: 778
score: 99.11797626201923
patch: if ( ! type . is CaMeL This ( ) ) {
rank: 779
score: 99.29962158203125
patch: if ( ( parent == null ) || ( type != null ) ) {
rank: 779
score: 99.28037109375
patch: if ( type != Type . FUNCTION && ! is CaMeL Function ) {
rank: 779
score: 99.27433558872768
patch: if ( declaration != null || aliasing CaMeL Gets > 0 ) {
rank: 779
score: 99.23037283761161
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) { {
rank: 779
score: 99.23028564453125
patch: if ( type == FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 779
score: 99.11618276742789
patch: if ( type != Type . FUNCTION && ! null ) {
rank: 780
score: 99.31556701660156
patch: if ( local CaMeL Sets != 0 && local CaMeL Sets != 0 ) {
rank: 780
score: 99.30316569010417
patch: if ( declaration . get CaMeL Twin ( ) != false ) {
rank: 780
score: 99.29942103794643
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum > 0 ) {
rank: 780
score: 99.28436279296875
patch: if ( type == Type . FUNCTION && node != null ) {
rank: 780
score: 99.27320207868304
patch: if ( Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 780
score: 99.23004557291667
patch: if ( true ) { if ( aliasing CaMeL Gets > 0 ) {
rank: 780
score: 99.1161776455966
patch: if ( $STRING$ . equals ( type ) ) {
rank: 781
score: 99.31453450520833
patch: if ( type != Type . FUNCTION && local CaMeL Sets != 0 )
rank: 781
score: 99.27161516462054
patch: if ( parent != null || local CaMeL Sets != 0 ) {
rank: 781
score: 99.23002115885417
patch: if type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 781
score: 99.1139628092448
patch: if ( type != Type . FUNCTION ) return true ;
rank: 782
score: 99.30235072544643
patch: if ( . get CaMeL Twin ( ) != null ) {
rank: 782
score: 99.28253580729167
patch: return type != Type . FUNCTION && aliasing CaMeL Gets > 0 ) ;
rank: 782
score: 99.27089146205357
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0
rank: 782
score: 99.22877720424107
patch: if ( type . equals ( Type . FUNCTION ) ) { {
rank: 782
score: 99.22876848493304
patch: if ( type != type && aliasing CaMeL Gets > 0 ) {
rank: 782
score: 99.11394794170673
patch: if ( ! type . is CaMeL Get ( ) ) {
rank: 783
score: 99.31410217285156
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || is CaMeL Enum ) {
rank: 783
score: 99.28221130371094
patch: if ( type == Type . BLOCK && aliasing CaMeL Gets > 0 ) {
rank: 783
score: 99.26947893415179
patch: if ( type instanceof null || aliasing CaMeL Gets > 0 ) {
rank: 783
score: 99.22726236979166
patch: if ( type != null && aliasing CaMeL Gets ( type ) ) {
rank: 783
score: 99.22544508713942
patch: if ( ! type . is CaMeL Defined ( ) ) {
rank: 783
score: 99.11196067116477
patch: if ( is CaMeL Set ( type ) ) {
rank: 784
score: 99.3563232421875
patch: if ( type != null || ! global CaMeL Sets != 0 ) {
rank: 784
score: 99.30097961425781
patch: if ( type != Type . OTHER && type != Type . FUNCTION ) {
rank: 784
score: 99.29847717285156
patch: if ( declaration . get CaMeL Visibility ( ) != Type . FUNCTION ) {
rank: 784
score: 99.22385817307692
patch: if ( ! type . is CaMeL Const ( ) ) {
rank: 784
score: 99.1113789876302
patch: try { if ( type != Type . FUNCTION ) {
rank: 785
score: 99.31298014322917
patch: if ( type != Type . FUNCTION && ! is CaMeL Enum ) {
rank: 785
score: 99.27709147135417
patch: if ( type != Type . NOT && aliasing CaMeL Gets > 0 )
rank: 785
score: 99.22197614397321
patch: if ( ! type . starts CaMeL With ( $STRING$ ) ) {
rank: 785
score: 99.22167096819196
patch: if ( type != 0 || aliasing CaMeL Gets > 0 ) {
rank: 785
score: 99.11001586914062
patch: if ( aliasing CaMeL Gets > FUNCTION ) {
rank: 786
score: 99.35625457763672
patch: if ( type != Exception . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 786
score: 99.27708217075893
patch: if ( type != Type . FUNCTION && node != null ) {
rank: 786
score: 99.26776994977679
patch: if ( get CaMeL Twin ( ) != null ) { }
rank: 786
score: 99.21958229758523
patch: if ( type != Type . FUNCTION && type )
rank: 786
score: 99.10951538085938
patch: if ( element == Type . FUNCTION ) {
rank: 787
score: 99.35505945542279
patch: if ( declaration . get CaMeL Id ( ) != null ) { return false ;
rank: 787
score: 99.27006022135417
patch: if ( ! aliasing CaMeL Gets . is CaMeL Empty ( ) ) {
rank: 787
score: 99.22021484375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > Type {
rank: 787
score: 99.21893310546875
patch: if ( type . is CaMeL Defined ( ) ) {
rank: 787
score: 99.10903930664062
patch: } else if ( type != Type . FUNCTION ) {
rank: 788
score: 99.29576873779297
patch: if ( type == Type . IN && aliasing CaMeL Gets > 0 ) {
rank: 788
score: 99.2663330078125
patch: if ( parent . get CaMeL Twin ( ) != 0 ) {
rank: 788
score: 99.21599469866071
patch: if ( type . is CaMeL Lower CaMeL Case ( ) ) {
rank: 788
score: 99.10899939903847
patch: if ( aliasing CaMeL Gets ( type ) != 0 ) {
rank: 789
score: 99.29558563232422
patch: if ( type == Type . class || aliasing CaMeL Gets > 0 ) {
rank: 789
score: 99.26609584263393
patch: if ( parent . get CaMeL Id ( ) != null ) {
rank: 789
score: 99.21511404854911
patch: if ( type . is CaMeL Assignable CaMeL From ( ) ) {
rank: 789
score: 99.10875447591145
patch: if ( type != Type . FUNCTION ( ) ) {
rank: 790
score: 99.35320281982422
patch: if ( type != Type . NONE || global CaMeL Sets != 0 ) {
rank: 790
score: 99.2978759765625
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return ) ;
rank: 790
score: 99.2954330444336
patch: if ( type != Type . PROPERTY || aliasing CaMeL Gets > 0 ) {
rank: 790
score: 99.26796177455357
patch: if ( type == Type . FUNCTION && scope != null ) {
rank: 790
score: 99.216455078125
patch: if ( type != Type . TYPE && aliasing CaMeL Gets > ) {
rank: 790
score: 99.21507045200893
patch: if ( type == Type . FUNCTION && is CaMeL Local ) {
rank: 790
score: 99.1082255045573
patch: if ( $STRING$ . length ( ) == 0 ) {
rank: 791
score: 99.35285186767578
patch: if ( type != Type . NOT || global CaMeL Sets != 1 ) {
rank: 791
score: 99.31072998046875
patch: if ( type != Type . OTHER && parent != null ) {
rank: 791
score: 99.266259765625
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets $NUMBER$ ) {
rank: 791
score: 99.26477864583333
patch: if ( key != null || is CaMeL Class CaMeL Or CaMeL Enum )
rank: 791
score: 99.21498325892857
patch: if ( type == Type . FUNCTION && is CaMeL Interface ) {
rank: 791
score: 99.21493094308036
patch: if ( type != true && aliasing CaMeL Gets > 0 ) {
rank: 792
score: 99.3528191061581
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 $NUMBER$ ) {
rank: 792
score: 99.29398018973214
patch: if ( aliasing CaMeL Gets > 0 || parent == null ) {
rank: 792
score: 99.21412004743304
patch: if ( type != Type . FUNCTION && type != Type . )
rank: 792
score: 99.21363176618304
patch: if ( aliasing CaMeL Gets && aliasing CaMeL Gets > 0 ) {
rank: 792
score: 99.10647348257211
patch: if ( ! type . equals ( Type . FUNCTION ) )
rank: 793
score: 99.30965423583984
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || parent != null ) {
rank: 793
score: 99.29387664794922
patch: if ( type == Type . OTHER || aliasing CaMeL Gets > 0 ) {
rank: 793
score: 99.26318359375
patch: if ( scope . get CaMeL Twin ( ) != null ) {
rank: 793
score: 99.21274239676339
patch: if ( name != 0 && aliasing CaMeL Gets > 0 ) {
rank: 793
score: 99.10546875
patch: if ( type . is CaMeL Instance ( type ) ) {
rank: 794
score: 99.35186004638672
patch: if ( type != Type . class || global CaMeL Sets != 0 ) {
rank: 794
score: 99.30863952636719
patch: if ( type == Type . OTHER && local CaMeL Sets != 0 ) {
rank: 794
score: 99.29620768229167
patch: if ( null != declaration . get CaMeL Twin ( ) ) {
rank: 794
score: 99.26177571614583
patch: while ( declaration . get CaMeL Twin ( ) != null ) {
rank: 794
score: 99.21153157552084
patch: if ( ! type . is CaMeL Lower CaMeL Case ( ) ) {
rank: 794
score: 99.1051737467448
patch: if ( type . is CaMeL Name ( ) ) {
rank: 795
score: 99.26153971354167
patch: if ( element . get CaMeL Twin ( ) != null ) {
rank: 795
score: 99.2573486328125
patch: if ( ! type . is CaMeL Assignable CaMeL From ( type ) )
rank: 795
score: 99.210205078125
patch: if ( parent != 0 && aliasing CaMeL Gets > 0 ) {
rank: 796
score: 99.35088752297794
patch: if ( type != $STRING$ && ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 796
score: 99.30580240885416
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return ; }
rank: 796
score: 99.29237467447916
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( true ) ) {
rank: 796
score: 99.26153157552083
patch: if ( get CaMeL Twin ( ) != null ) return false ;
rank: 796
score: 99.20901053292411
patch: if ( ( type & Type . FUNCTION ) > 0 ) {
rank: 796
score: 99.20492553710938
patch: if ( type != Type . Type . FUNCTION ) {
rank: 796
score: 99.10359700520833
patch: if ( type != Type . FUNCTION || true ) {
rank: 797
score: 99.3503646850586
patch: if ( type != Type . NOT && local CaMeL Sets != 0 ) {
rank: 797
score: 99.30302734375
patch: if ( declaration . get CaMeL Twin ( ) > null ) {
rank: 797
score: 99.29517364501953
patch: if ( parent == null || ( aliasing CaMeL Gets > 0 ) ) {
rank: 797
score: 99.26797485351562
patch: if ( type != null && ! type . is CaMeL Empty ( ) )
rank: 797
score: 99.20363071986607
patch: if ( type == Type . FUNCTION && type != 0 ) {
rank: 797
score: 99.10265502929687
patch: if ( type != Type . class ) {
rank: 798
score: 99.30242047991071
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) { }
rank: 798
score: 99.29496002197266
patch: if ( type != Object . OTHER && aliasing CaMeL Gets > 0 ) {
rank: 798
score: 99.20705740792411
patch: if ( node != null && aliasing CaMeL Gets > 0 ) {
rank: 798
score: 99.10054524739583
patch: if ( type == Type != Type . FUNCTION ) {
rank: 799
score: 99.34988403320312
patch: if ( type != $STRING$ || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 799
score: 99.3014892578125
patch: if ( type != Type . OTHER && global CaMeL Sets != 0 )
rank: 799
score: 99.29424285888672
patch: if ( type == Type . FUNCTION || global CaMeL Sets > 0 ) {
rank: 799
score: 99.29153442382812
patch: if ( parent == null || parent == null ) {
rank: 799
score: 99.25882975260417
patch: if ( declaration . get CaMeL Twin ( ) instanceof null ) {
rank: 799
score: 99.25353190104167
patch: if ( type != Type . FUNCTION ) { return false ; } else
rank: 799
score: 99.0980224609375
patch: if ( ! is CaMeL Local ( ) ) {
rank: 800
score: 99.34888413373162
patch: if ( type != Type . FUNCTION && ! global CaMeL Sets == 1 ) {
rank: 800
score: 99.30144391741071
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { else {
rank: 800
score: 99.25841346153847
patch: if ( parent != null || aliasing CaMeL Gets > 0 )
rank: 800
score: 99.20356096540179
patch: if ( type == Type . FUNCTION && ! type . ) {
rank: 800
score: 99.19996861049107
patch: if ( type == 0 && aliasing CaMeL Gets > 0 ) {
rank: 800
score: 99.09731038411458
patch: if ( type == Type . FUNCTION ) return false ;
rank: 801
score: 99.34837431066177
patch: if ( declaration != null || ! is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 801
score: 99.29084777832031
patch: if ( ( parent == null ) || aliasing CaMeL Gets > 1 ) {
rank: 801
score: 99.25743756975446
patch: if ( parent . get CaMeL Root ( ) != null ) {
rank: 801
score: 99.20337931315105
patch: if ( type . type == Type . FUNCTION ) {
rank: 801
score: 99.19870431082589
patch: if ( type != Type . FUNCTION && is CaMeL Empty ) {
rank: 801
score: 99.097119140625
patch: if ( name != Type . FUNCTION ) {
rank: 802
score: 99.3483657836914
patch: if ( type != Type . NULL || global CaMeL Sets != 0 ) {
rank: 802
score: 99.29805908203124
patch: if ( global CaMeL Sets != 1 ) {
rank: 802
score: 99.29033813476562
patch: if ( aliasing CaMeL Gets > 1 ) {
rank: 802
score: 99.0958251953125
patch: if ( get CaMeL Symbol ( ) != null ) {
rank: 803
score: 99.34722900390625
patch: if ( type != Type . E && aliasing CaMeL Gets > 0 ) {
rank: 803
score: 99.29020690917969
patch: if ( declaration . get CaMeL Types ( ) . length != 0 ) {
rank: 803
score: 99.2901840209961
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { { return false ;
rank: 803
score: 99.25494384765625
patch: if ( parent == null || aliasing CaMeL Gets != 0 ) {
rank: 803
score: 99.24783528645834
patch: if ( type != Type . DEFAULT && aliasing CaMeL Gets > 0 )
rank: 803
score: 99.20289963942308
patch: if ( type != Type . FUNCTION && type instanceof Type )
rank: 803
score: 99.19190325055804
patch: if ( type != Type . FUNCTION && type != FUNCTION ) {
rank: 803
score: 99.0929667154948
patch: if ( get CaMeL Root ( ) == null ) {
rank: 804
score: 99.29520961216518
patch: if ( type != Type . FUNCTION && global CaMeL Sets ) {
rank: 804
score: 99.25247628348214
patch: if ( type != null || aliasing CaMeL Gets > 1 ) {
rank: 804
score: 99.24769694010416
patch: if ( type != Type . NO && aliasing CaMeL Gets > 0 )
rank: 804
score: 99.20174734933036
patch: if ( type != Type . FUNCTION && type != Type ) {
rank: 804
score: 99.09043375651042
patch: if ( type == Type . FUNCTION ) { ) {
rank: 805
score: 99.28900146484375
patch: if ( type != Type . FUNCTION && type != Type . OTHER ) {
rank: 805
score: 99.25217982700893
patch: if ( get CaMeL Twin ( ) != null ) { {
rank: 805
score: 99.2012227376302
patch: if ( type . is CaMeL Constructor ( ) ) {
rank: 805
score: 99.18972778320312
patch: if ( ! aliasing CaMeL Gets > ) {
rank: 805
score: 99.08912353515625
patch: if ( parent == Type . FUNCTION ) {
rank: 806
score: 99.24671223958333
patch: if ( type . equals ( Type . FUNCTION && type ) ) {
rank: 806
score: 99.18919788707386
patch: if ( ! aliasing CaMeL Gets ( ) ) {
rank: 807
score: 99.29222760881696
patch: / / if ( is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 807
score: 99.28838239397321
patch: if ( declaration . get CaMeL Parent ( ) == null ) {
rank: 807
score: 99.28756277901786
patch: if ( parent == null && local CaMeL Sets != 0 ) {
rank: 807
score: 99.25077601841518
patch: if ( type != $STRING$ || aliasing CaMeL Gets > 0 ) {
rank: 807
score: 99.19997151692708
patch: if ( type . length ( ) > 0 ) {
rank: 807
score: 99.0877685546875
patch: if ( type != Type . 0 ) {
rank: 808
score: 99.25030924479167
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum ) return true ;
rank: 808
score: 99.24540201822917
patch: if ( type == Type . TYPE && aliasing CaMeL Gets > 0 )
rank: 808
score: 99.19740647536058
patch: if ( type . ends CaMeL With ( $STRING$ ) ) {
rank: 808
score: 99.18634033203125
patch: if ( type != Type . FUNCTION && type > 0 ) {
rank: 808
score: 99.08456420898438
patch: if ( type == Type . EMPTY ) {
rank: 809
score: 99.34373474121094
patch: if ( type != Type . FUNCTION | global CaMeL Sets != 0 ) {
rank: 809
score: 99.28711700439453
patch: if ( key == Type . FUNCTION && aliasing CaMeL Gets > 1 ) {
rank: 809
score: 99.24956403459821
patch: if ( parent . get CaMeL Definition ( ) != null ) {
rank: 809
score: 99.1973876953125
patch: if ( type != Type . NONE && type instanceof Type ) {
rank: 809
score: 99.08397827148437
patch: if ( type == Type . TYPE ) {
rank: 810
score: 99.2822509765625
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { / * /
rank: 810
score: 99.24862234933036
patch: if ( declaration . get CaMeL Definition ( ) != null ) {
rank: 810
score: 99.19670758928571
patch: if ( type . is CaMeL Assignable CaMeL From ( type ) )
rank: 810
score: 99.18343680245536
patch: if ( type != Type . FUNCTION || type != 0 ) {
rank: 810
score: 99.083203125
patch: if ( name == Type . FUNCTION ) {
rank: 811
score: 99.2835922241211
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { { return true ;
rank: 811
score: 99.28167724609375
patch: if ( declaration . get CaMeL Visibility ( ) != null ) {
rank: 811
score: 99.24750627790179
patch: if ( aliasing CaMeL Gets > 0 || parent != null ) {
rank: 811
score: 99.19517008463542
patch: if ( type != Type . FUNCTION || type ) {
rank: 811
score: 99.08226429332386
patch: } if ( type == Type . FUNCTION ) {
rank: 812
score: 99.34290986902573
patch: if ( type != Type . T && ! aliasing CaMeL Gets > 0 ) {
rank: 812
score: 99.28524780273438
patch: if ( type != Type . PROPERTY && aliasing CaMeL Gets > 1 ) {
rank: 812
score: 99.24748883928571
patch: return ( parent == null || aliasing CaMeL Gets > 0 ) ;
rank: 812
score: 99.18137032645089
patch: if ( name != FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 812
score: 99.08203125
patch: if ( ! type == Type . FUNCTION ) {
rank: 813
score: 99.28483363560268
patch: if ( aliasing CaMeL Gets > 0 && parent != null ) {
rank: 813
score: 99.27723911830357
patch: if ( type != Type . FUNCTION && can CaMeL Collapse ) {
rank: 813
score: 99.24693196614584
patch: if ( root . get CaMeL Twin ( ) != null ) {
rank: 813
score: 99.19288853236607
patch: if ( type == Type . FUNCTION ) { return true ; }
rank: 813
score: 99.17848423549107
patch: if ( aliasing CaMeL Gets ( type ) . != 0 ) {
rank: 813
score: 99.08084106445312
patch: if ( type . size ( ) != 0 ) {
rank: 814
score: 99.28254045758929
patch: if ( is CaMeL Local || aliasing CaMeL Gets > 0 ) {
rank: 814
score: 99.2458984375
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets <= 0 )
rank: 814
score: 99.1927490234375
patch: if ( aliasing CaMeL Gets > 0 ) { return true ;
rank: 814
score: 99.17776254507211
patch: if ( type != Type . FUNCTION && ! 0 ) {
rank: 814
score: 99.08072509765626
patch: if ( is CaMeL Enum ( ) ) {
rank: 815
score: 99.28218078613281
patch: return parent . can CaMeL Collapse CaMeL Unannotated CaMeL Child CaMeL Names ( ) ;
rank: 815
score: 99.27602713448661
patch: if ( declaration . get CaMeL Id ( ) == null ) {
rank: 815
score: 99.24586995442708
patch: if ( aliasing CaMeL Gets > 0 ) return false ;
rank: 815
score: 99.0804443359375
patch: if ( ! ! aliasing CaMeL Gets > 0 ) {
rank: 816
score: 99.28179059709821
patch: if ( declaration . get CaMeL Node ( ) != null ) {
rank: 816
score: 99.27583530970982
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && true ) {
rank: 816
score: 99.25762176513672
patch: if ( type != Type . NO && type != Type . FUNCTION ) {
rank: 816
score: 99.1921856219952
patch: if ( ! type . aliasing CaMeL Gets > 0 ) {
rank: 816
score: 99.08016967773438
patch: if ( element != Type . FUNCTION ) {
rank: 817
score: 99.25711059570312
patch: if ( aliasing CaMeL Gets > 1 && aliasing CaMeL Gets != 0 ) {
rank: 817
score: 99.19161283052884
patch: if ( type != Type . FUNCTION && type != Type {
rank: 817
score: 99.17270333426339
patch: if ( name != null && type != Type . FUNCTION ) {
rank: 817
score: 99.08011881510417
patch: if ( aliasing CaMeL Gets > aliasing CaMeL Gets ) {
rank: 818
score: 99.19031871448864
patch: if ( type != Type . FUNCTION || type {
rank: 818
score: 99.08005981445312
patch: if ( type == Node . FUNCTION ) {
rank: 819
score: 99.34055873325893
patch: if ( aliasing CaMeL Gets > 0 && parent == null ) {
rank: 819
score: 99.27851867675781
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && is CaMeL Local ) {
rank: 819
score: 99.27165004185268
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum && false ) {
rank: 819
score: 99.23529459635417
patch: if ( type & Type . FUNCTION && aliasing CaMeL Gets > 0 )
rank: 819
score: 99.17224993024554
patch: if ( parent != FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 819
score: 99.07825724283855
patch: if ( get CaMeL Root ( ) != null ) {
rank: 820
score: 99.27986907958984
patch: if ( aliasing CaMeL Gets > 0 && aliasing CaMeL Gets > 1 ) {
rank: 820
score: 99.25546264648438
patch: if ( type != null && ! type . equals ( type ) ) {
rank: 820
score: 99.24395345052083
patch: if ( get CaMeL Twin ( ) != null ) { / *
rank: 820
score: 99.18531383167614
patch: if ( type == Type . FUNCTION && type {
rank: 820
score: 99.078125
patch: if ( type == null ) {
rank: 821
score: 99.33952062270221
patch: if ( type != Type . FUNCTION ? ! aliasing CaMeL Gets > 0 ) {
rank: 821
score: 99.27867126464844
patch: if ( type != Type . TYPE || aliasing CaMeL Gets > 1 ) {
rank: 821
score: 99.23349609375
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets $NUMBER$ ) {
rank: 821
score: 99.18426513671875
patch: if ( type . is CaMeL Private ( ) ) {
rank: 821
score: 99.07586669921875
patch: if ( get CaMeL Symbol ( ) == null ) {
rank: 822
score: 99.2432861328125
patch: if ( type != Type . FUNCTION && size > 0 ) {
rank: 822
score: 99.23329380580357
patch: return type != Type . FUNCTION && aliasing CaMeL Gets > 0 ;
rank: 822
score: 99.16762869698661
patch: if ( this != null && aliasing CaMeL Gets > 0 ) {
rank: 822
score: 99.07578531901042
patch: if ( get CaMeL Parent ( ) != null ) {
rank: 823
score: 99.27763366699219
patch: if ( ( parent == null ) && ( type != null ) ) {
rank: 823
score: 99.17936197916667
patch: if ( ! aliasing CaMeL Gets > 0 ) { {
rank: 823
score: 99.07555042613636
patch: if ( is CaMeL Instance ( type ) ) {
rank: 824
score: 99.33885192871094
patch: if ( type != Type . EMPTY || global CaMeL Sets != 0 ) {
rank: 824
score: 99.24185616629464
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { ; }
rank: 824
score: 99.16705322265625
patch: if ( element != null && aliasing CaMeL Gets > 0 ) {
rank: 824
score: 99.07261149088542
patch: if ( ! type . is CaMeL Empty ( ) )
rank: 825
score: 99.27447509765625
patch: if ( equals ( declaration . get CaMeL Twin ( ) ) ) {
rank: 825
score: 99.2441162109375
patch: if ( type != Type . FUNCTION || ! is CaMeL Local ) {
rank: 825
score: 99.22728620256696
patch: if ( type != Type . FUNCTION && matches > 0 ) {
rank: 825
score: 99.17824300130208
patch: if ( type . is CaMeL Array ( ) ) {
rank: 825
score: 99.1666259765625
patch: if ( ! type . is CaMeL Empty Type ( ) ) {
rank: 825
score: 99.07235717773438
patch: if ( true && type != Type . FUNCTION ) {
rank: 826
score: 99.33819580078125
patch: if ( type != Type . CALL && aliasing CaMeL Gets > 0 ) {
rank: 826
score: 99.26348005022321
patch: if ( type != Type . FUNCTION || parent != null ) {
rank: 826
score: 99.2409198467548
patch: if ( key != null || aliasing CaMeL Gets > 0 )
rank: 826
score: 99.22460065569196
patch: if ( type instanceof Type && aliasing CaMeL Gets > $NUMBER$ ) {
rank: 826
score: 99.1775410970052
patch: if ( type instanceof Type || type instanceof Type ) {
rank: 826
score: 99.07229614257812
patch: if ( get CaMeL Parent ( ) == null ) {
rank: 827
score: 99.33804141773896
patch: if ( type != - 1 && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 827
score: 99.23885672433036
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) throws null ;
rank: 827
score: 99.17730243389423
patch: if ( type . equals ( Type . NULL ) ) {
rank: 827
score: 99.06982421875
patch: if ( false && type != Type . FUNCTION ) {
rank: 828
score: 99.33788299560547
patch: if ( name != null || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 828
score: 99.27333984375
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ( false ) ) {
rank: 828
score: 99.27023751395089
patch: if ( declaration . get CaMeL Result ( ) != null ) {
rank: 828
score: 99.17470139723558
patch: if ( type != Type . FUNCTION ) { return true ;
rank: 828
score: 99.06791178385417
patch: if ( type == Type . FUNCTION || false ) {
rank: 829
score: 99.27317708333334
patch: if ( declaration . get CaMeL Twin ( ) == 0 ) {
rank: 829
score: 99.25503976004464
patch: if ( declaration . get CaMeL Type ( ) != null ) {
rank: 829
score: 99.23533412388393
patch: if ( type != null && aliasing CaMeL Gets > 1 ) {
rank: 829
score: 99.21590750558036
patch: if ( type != Type . FUNCTION && match > 0 ) {
rank: 829
score: 99.1598651592548
patch: if ( type != null && aliasing CaMeL Gets > ) {
rank: 829
score: 99.06639607747395
patch: if ( get CaMeL Method ( ) != null ) {
rank: 830
score: 99.25074114118304
patch: if ( type != Type . FUNCTION || parent == null ) {
rank: 830
score: 99.17335001627605
patch: if ( aliasing CaMeL Gets > 0 ) { return {
rank: 830
score: 99.15966796875
patch: if ( ! aliasing CaMeL Gets ( type ) > 0 ) {
rank: 830
score: 99.06480712890625
patch: if ( aliasing CaMeL Gets == null ) {
rank: 831
score: 99.33715006510417
patch: if ( type != Type . FUNCTION || global CaMeL Sets == 0 )
rank: 831
score: 99.26797049386161
patch: if ( declaration . get CaMeL Description ( ) != null ) {
rank: 831
score: 99.23292846679688
patch: if ( aliasing CaMeL Gets != 0 ) {
rank: 831
score: 99.173095703125
patch: if ( type != Type . FUNCTION && ! type ) {
rank: 831
score: 99.06382242838542
patch: if ( false == aliasing CaMeL Gets > 0 ) {
rank: 832
score: 99.33647155761719
patch: if ( type != 0 || is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 832
score: 99.26486206054688
patch: return ( parent . get CaMeL Twin ( ) != null ) ; }
rank: 832
score: 99.20921107700893
patch: if ( type != Type . FUNCTION && get > 0 ) {
rank: 832
score: 99.17245483398438
patch: if ( type != Type . FUNCTION && ! type {
rank: 832
score: 99.15764508928571
patch: if ( type != 0 && type == Type . FUNCTION ) {
rank: 832
score: 99.06206665039062
patch: if ( type != Type . NO ) {
rank: 833
score: 99.26912144252232
patch: if ( type != Type . FUNCTION && parent != 0 ) {
rank: 833
score: 99.23090471540179
patch: if ( type . get CaMeL Parent ( ) != null ) {
rank: 833
score: 99.22815958658855
patch: if ( type != null && type != null ) {
rank: 833
score: 99.16982797475961
patch: if ( ! type . is CaMeL Private ( ) ) {
rank: 833
score: 99.05980428059895
patch: if ( false && type == Type . FUNCTION ) {
rank: 834
score: 99.2406717936198
patch: if ( type != null || parent == null ) {
rank: 834
score: 99.22902134486607
patch: if ( parent == null || local CaMeL Sets != 1 ) {
rank: 834
score: 99.22726236979166
patch: if ( type != Type . FUNCTION && type != Type . FUNCTION {
rank: 834
score: 99.2042236328125
patch: if ( type instanceof Type && aliasing CaMeL Gets > 1 ) {
rank: 834
score: 99.16643817608173
patch: if ( Type . FUNCTION . equals ( type ) ) {
rank: 834
score: 99.15407151442308
patch: if ( ! type . length ( ) > 0 ) {
rank: 834
score: 99.05980428059895
patch: if ( type . is CaMeL Declaration ( ) ) {
rank: 835
score: 99.23497663225446
patch: if ( declaration . get CaMeL Key ( ) != null ) {
rank: 835
score: 99.22603934151786
patch: if ( parent . get CaMeL Node ( ) != null ) {
rank: 835
score: 99.2255126953125
patch: if ( type != Type . FUNCTION && ! is CaMeL Empty ) {
rank: 835
score: 99.20004708426339
patch: if ( type instanceof Type && type != Type . FUNCTION ) {
rank: 835
score: 99.15174278846153
patch: if ( ! aliasing CaMeL Gets > aliasing CaMeL Gets ) {
rank: 835
score: 99.0597635904948
patch: if ( type != Type . FUNCTION ) return null ;
rank: 836
score: 99.26654052734375
patch: if ( declaration . get CaMeL Length ( ) > 0 ) {
rank: 836
score: 99.23293050130208
patch: if ( parent == null ) { return false ; }
rank: 836
score: 99.224853515625
patch: if ( declaration . get CaMeL Parent ( ) != null )
rank: 836
score: 99.22430013020833
patch: if ( type != Type . FUNCTION && ! is CaMeL Instance ) {
rank: 836
score: 99.19935825892857
patch: if ( type != Type . FUNCTION && 0 != type ) {
rank: 836
score: 99.1640625
patch: if ( type . is CaMeL String ( ) ) {
rank: 836
score: 99.14907602163461
patch: if ( type != Type . FUNCTION && ! FUNCTION ) {
rank: 837
score: 99.23211669921875
patch: if ( this . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 837
score: 99.19091796875
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets ;
rank: 837
score: 99.16365872896634
patch: if ( type . ( ) != Type . FUNCTION ) {
rank: 837
score: 99.14088792067308
patch: if ( ! type . length ( ) != 0 ) {
rank: 837
score: 99.05811309814453
patch: if ( element != null ) {
rank: 838
score: 99.3348159790039
patch: if ( ( type != null ) || global CaMeL Sets != 0 ) {
rank: 838
score: 99.2625732421875
patch: if ( declaration . get CaMeL Types ( ) != null ) {
rank: 838
score: 99.23188999720982
patch: if ( global CaMeL Sets != 0 ) { return false ; }
rank: 838
score: 99.19015066964286
patch: if ( type != Type . FUNCTION && get > $NUMBER$ ) {
rank: 838
score: 99.1632308959961
patch: if ( type instanceof Type ) {
rank: 838
score: 99.05778364701705
patch: if ( type == Type . FUNCTION || ) {
rank: 839
score: 99.25961739676339
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum != null ) {
rank: 839
score: 99.25814383370536
patch: if ( get CaMeL Class CaMeL Loader ( ) != null ) {
rank: 839
score: 99.22121957632211
patch: synchronized ( declaration . get CaMeL Twin ( ) ) {
rank: 839
score: 99.1622823079427
patch: if ( is CaMeL Qualified CaMeL Name ( ) ) {
rank: 839
score: 99.13954514723558
patch: if ( type != Type . FUNCTION && type == ) {
rank: 839
score: 99.05576578776042
patch: if ( type . is CaMeL All ( ) ) {
rank: 840
score: 99.33418543198529
patch: if ( type != Type . NOT && ! global CaMeL Sets != 0 ) {
rank: 840
score: 99.25743611653645
patch: if ( declaration == null || parent == null ) {
rank: 840
score: 99.18828473772321
patch: if ( ! aliasing CaMeL Gets . is CaMeL Empty ( ) )
rank: 840
score: 99.16024780273438
patch: if ( type != Type . FUNCTION && type . {
rank: 841
score: 99.25736490885417
patch: if ( ! parent == null || local CaMeL Sets != 0 ) {
rank: 841
score: 99.21220703125
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets != ) {
rank: 841
score: 99.18766566685268
patch: if ( type instanceof Symbol && aliasing CaMeL Gets > 0 ) {
rank: 841
score: 99.1584981282552
patch: if ( type . is CaMeL External ( ) ) {
rank: 841
score: 99.13782677283653
patch: if ( ! type . is CaMeL String ( ) ) {
rank: 841
score: 99.05323282877605
patch: if ( type == Type . FUNCTION ( ) ) {
rank: 842
score: 99.3328498391544
patch: if ( ! ! is CaMeL Class CaMeL Or CaMeL Enum ) { return true ;
rank: 842
score: 99.22767857142857
patch: if ( type . get CaMeL Id ( ) != null ) {
rank: 842
score: 99.21730259486607
patch: if ( parent == null || aliasing CaMeL Gets > $NUMBER$ ) {
rank: 842
score: 99.18724714006696
patch: if ( type == Type . FUNCTION && matches > 0 ) {
rank: 842
score: 99.15741436298077
patch: if ( type != Type . FUNCTION && type . get {
rank: 842
score: 99.051171875
patch: if ( parent != Type . FUNCTION ) {
rank: 843
score: 99.25581868489583
patch: if ( ! parent == null ) {
rank: 843
score: 99.25416666666666
patch: if ( module . get CaMeL Twin ( ) != null ) {
rank: 843
score: 99.22591727120536
patch: if ( local CaMeL Sets . size ( ) == 0 ) {
rank: 843
score: 99.18710763113839
patch: if ( type . type ( ) == Type . FUNCTION ) {
rank: 844
score: 99.33200970818015
patch: if ( type != Type . TYPE && ! global CaMeL Sets != 0 ) {
rank: 844
score: 99.253173828125
patch: if ( filter . get CaMeL Twin ( ) != null ) {
rank: 844
score: 99.15667255108173
patch: if ( type != Type . FUNCTION && type != Type )
rank: 844
score: 99.04801025390626
patch: if ( type != Type . EXPRESSION ) {
rank: 845
score: 99.21383231026786
patch: if ( get != null || aliasing CaMeL Gets > 0 ) {
rank: 845
score: 99.18277413504464
patch: if ( type . get CaMeL Symbol ( ) != null ) {
rank: 845
score: 99.04042561848958
patch: if ( ! ( type == Type . FUNCTION ) )
rank: 846
score: 99.33108520507812
patch: if ( type != Type . TYPE && ! aliasing CaMeL Gets > 0 )
rank: 846
score: 99.25257161458333
patch: if ( ! declaration . get CaMeL Count ( ) > 0 ) {
rank: 846
score: 99.25211588541667
patch: if ( == Type . FUNCTION && aliasing CaMeL Gets > 0 ) {
rank: 846
score: 99.21248081752232
patch: if ( parent . get CaMeL Id ( ) == null ) {
rank: 846
score: 99.15629069010417
patch: if ( type . is CaMeL Singleton ( ) ) {
rank: 846
score: 99.12733968098958
patch: if ( ! type . != Type . FUNCTION ) {
rank: 846
score: 99.0394287109375
patch: if ( type == Type . FUNCTION ) return true ;
rank: 847
score: 99.2110595703125
patch: if ( parent instanceof null || aliasing CaMeL Gets > 0 ) {
rank: 847
score: 99.19045584542411
patch: if ( type != Type . FUNCTION && type == null ) {
rank: 847
score: 99.17953055245536
patch: if ( type != Type . FUNCTION && scope != null ) {
rank: 847
score: 99.15564982096355
patch: / * if ( aliasing CaMeL Gets > 0 ) {
rank: 848
score: 99.3299560546875
patch: if ( ! ! aliasing CaMeL Gets > 0 ) { return false ; }
rank: 848
score: 99.25054931640625
patch: if ( parent == null || global CaMeL Sets > 0 ) {
rank: 848
score: 99.24819510323661
patch: if ( ( parent == null ) && parent != null ) {
rank: 848
score: 99.21025739397321
patch: if ( node . get CaMeL Twin ( ) != null )
rank: 848
score: 99.18894606370192
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets )
rank: 848
score: 99.0372823079427
patch: if ( ! ( type != Type . FUNCTION ) )
rank: 849
score: 99.24996512276786
patch: return declaration . get CaMeL Twin ( ) != null ; }
rank: 849
score: 99.22127278645833
patch: if ( type != Type . FUNCTION && parent ) {
rank: 849
score: 99.1172344501202
patch: if ( ! type . is CaMeL Array ( ) ) {
rank: 849
score: 99.0364657315341
patch: if ( ! is CaMeL Set ( ) ) {
rank: 850
score: 99.32987213134766
patch: if ( type != Type . TYPE || global CaMeL Sets == 0 ) {
rank: 850
score: 99.22111002604167
patch: if ( this . local CaMeL Sets != 0 ) {
rank: 850
score: 99.20854840959821
patch: if ( parent . get CaMeL Module ( ) != null ) {
rank: 850
score: 99.14824969951923
patch: if ( type != Type . FUNCTION && ! type . {
rank: 850
score: 99.0340576171875
patch: if ( type == Type . 0 ) {
rank: 851
score: 99.32818603515625
patch: if ( ! aliasing CaMeL Gets > 0 ) { return false ;
rank: 851
score: 99.20686558314732
patch: if ( parent . get CaMeL Twin ( ) == null )
rank: 851
score: 99.1473858173077
patch: if ( type . ( ) == Type . FUNCTION ) {
rank: 852
score: 99.2451171875
patch: if ( get CaMeL Class CaMeL Name ( ) != null ) {
rank: 852
score: 99.20603724888393
patch: if ( current == null || aliasing CaMeL Gets > 0 ) {
rank: 852
score: 99.17708042689732
patch: if ( type != null ) { return false ; } else {
rank: 852
score: 99.1451171875
patch: if ( is CaMeL Interface ( ) ) {
rank: 852
score: 99.11529071514423
patch: if ( type != Type . FUNCTION || type != ) {
rank: 852
score: 99.03252618963069
patch: if ( ! aliasing CaMeL Gets != null ) {
rank: 853
score: 99.32735443115234
patch: if ( type != Type . T && global CaMeL Sets != 0 ) {
rank: 853
score: 99.24524797712054
patch: if ( is CaMeL Local && aliasing CaMeL Gets > 0 ) {
rank: 853
score: 99.20489501953125
patch: if ( parent . get CaMeL Twin ( ) != 1 )
rank: 853
score: 99.14447490985577
patch: if ( name . equals ( Type . FUNCTION ) ) {
rank: 853
score: 99.03243408203124
patch: if ( aliasing CaMeL Gets > $STRING$ ) {
rank: 854
score: 99.32730865478516
patch: if ( type != Type . MIN || global CaMeL Sets != 0 ) {
rank: 854
score: 99.24463762555804
patch: if ( declaration . get CaMeL Value ( ) == null ) {
rank: 854
score: 99.11412635216347
patch: if ( type != Type . FUNCTION && > 0 ) {
rank: 854
score: 99.031982421875
patch: if ( type == Type . class ) {
rank: 855
score: 99.32638549804688
patch: if ( declaration != null && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 855
score: 99.20397077287946
patch: if ( this . get CaMeL Twin ( ) != null )
rank: 855
score: 99.17563302176339
patch: if ( type != null && aliasing CaMeL Gets != null ) {
rank: 855
score: 99.11144409179687
patch: if ( type != Type . NOT ) {
rank: 856
score: 99.20332554408482
patch: if ( parent . get CaMeL Visibility ( ) != null ) {
rank: 856
score: 99.17084612165179
patch: if ( type != Type . FUNCTION || type != null ) {
rank: 856
score: 99.1548321063702
patch: if ( type instanceof Type && aliasing CaMeL Gets > 0 )
rank: 856
score: 99.11009632457386
patch: if ( ! is CaMeL Array ( ) ) {
rank: 856
score: 99.02671120383523
patch: if ( ! aliasing CaMeL Gets > FUNCTION ) {
rank: 857
score: 99.32511901855469
patch: if ( type != Type . NOT && global CaMeL Sets != 1 ) {
rank: 857
score: 99.21218436104911
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { return ;
rank: 857
score: 99.16900165264423
patch: if ( type != Type . FUNCTION ) { return ) ;
rank: 857
score: 99.13859419389205
patch: if ( ! aliasing CaMeL Gets > 1 ) {
rank: 857
score: 99.02413330078124
patch: if ( aliasing CaMeL Gets > $NUMBER$ ) {
rank: 858
score: 99.20105852399554
patch: if ( declaration . get CaMeL Types ( ) > 0 ) {
rank: 858
score: 99.1359354654948
patch: if ( this . aliasing CaMeL Gets > 0 ) {
rank: 858
score: 99.10851033528645
patch: if ( true && aliasing CaMeL Gets > 0 ) {
rank: 858
score: 99.02009721235795
patch: if ( ! aliasing CaMeL Gets ( type ) )
rank: 859
score: 99.32486724853516
patch: if ( type != Type . NOT || global CaMeL Sets == 0 ) {
rank: 859
score: 99.24234444754464
patch: if ( declaration . get CaMeL Length ( ) == 0 ) {
rank: 859
score: 99.21200125558036
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum || true ) {
rank: 859
score: 99.14980844350961
patch: if ( aliasing CaMeL Gets . contains ( type ) ) {
rank: 859
score: 99.1336669921875
patch: if ( ! type . is CaMeL None ( ) )
rank: 859
score: 99.10715895432692
patch: if ( aliasing CaMeL Gets ( type , type ) ) {
rank: 859
score: 99.0172119140625
patch: if ( ! is CaMeL Name ( ) ) {
rank: 860
score: 99.32402038574219
patch: if ( type != null || ( aliasing CaMeL Gets > 0 ) ) {
rank: 860
score: 99.24028669084821
patch: if ( parent == null || type != Type . FUNCTION ) {
rank: 860
score: 99.14593036358173
patch: if ( local CaMeL Sets . contains ( type ) ) {
rank: 860
score: 99.10547814002403
patch: if ( type != Type . FUNCTION && > 1 ) {
rank: 860
score: 99.01553344726562
patch: if ( type != Type . ALL ) {
rank: 861
score: 99.32313639322916
patch: if ( type != Type . TYPE && global CaMeL Sets != 0 )
rank: 861
score: 99.19687325613839
patch: if ( element == null || aliasing CaMeL Gets > 0 ) {
rank: 861
score: 99.1441180889423
patch: if ( type == Type . FUNCTION ) { return false ;
rank: 861
score: 99.13086954752605
patch: if ( type == Type . FUNCTION || type ) {
rank: 861
score: 99.1034686748798
patch: if ( type == Type . FUNCTION && type != ) {
rank: 861
score: 99.01439208984375
patch: if ( value != Type . FUNCTION ) {
rank: 862
score: 99.23943684895833
patch: if ( null == declaration . get CaMeL Twin ( ) ) {
rank: 862
score: 99.20998709542411
patch: if ( false && is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 862
score: 99.19636753627232
patch: if ( declaration . get CaMeL Twin ( ) != null ||
rank: 862
score: 99.1300557454427
patch: if ( type != Type . NULL && type ) {
rank: 862
score: 99.10187237079327
patch: if ( type != Type . FUNCTION ) { / * /
rank: 862
score: 99.013232421875
patch: if ( is CaMeL Primitive ( ) ) {
rank: 863
score: 99.19573102678571
patch: if ( declaration . get CaMeL Twin ( ) != 0 )
rank: 863
score: 99.15951974051339
patch: if ( type != Type . FUNCTION && type != $STRING$ ) {
rank: 863
score: 99.12844848632812
patch: if ( aliasing CaMeL Gets > 0 ) { ) {
rank: 863
score: 99.10086059570312
patch: if ( aliasing CaMeL Gets && aliasing CaMeL Gets ) {
rank: 863
score: 99.0111083984375
patch: if ( is CaMeL Enum ( type ) ) {
rank: 864
score: 99.2373291015625
patch: if ( local CaMeL Sets . get ( type ) != null ) {
rank: 864
score: 99.20901254507211
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { }
rank: 864
score: 99.19553920200893
patch: if ( this != null || aliasing CaMeL Gets > 0 ) {
rank: 864
score: 99.01097412109375
patch: if ( type != Class . FUNCTION ) {
rank: 865
score: 99.32096862792969
patch: if ( type != Type . FUNCTION || ! aliasing CaMeL Gets > 0 )
rank: 865
score: 99.19570922851562
patch: if ( local CaMeL Sets != 1 ) {
rank: 865
score: 99.1939697265625
patch: if ( parent != null || aliasing CaMeL Gets > 1 ) {
rank: 865
score: 99.1261494954427
patch: if ( type ( ) != Type . FUNCTION ) {
rank: 865
score: 99.09755295973558
patch: if ( aliasing CaMeL Gets > 0 ) { return 0 ;
rank: 865
score: 99.01013793945313
patch: if ( type != Type . UNKNOWN ) {
rank: 866
score: 99.22732979910714
patch: if ( root == null || aliasing CaMeL Gets > 0 ) {
rank: 866
score: 99.13741361177884
patch: if ( type == Type . FUNCTION && aliasing CaMeL Gets ;
rank: 866
score: 99.12158203125
patch: if ( null != aliasing CaMeL Gets > 0 ) {
rank: 866
score: 99.0972012606534
patch: if ( ! is CaMeL Empty ( ) ) {
rank: 867
score: 99.23224748883929
patch: if ( declaration . get CaMeL Class ( ) != null ) {
rank: 867
score: 99.1916034405048
patch: if ( name != null || aliasing CaMeL Gets > 0 )
rank: 867
score: 99.19042358398437
patch: if ( ( parent == null ) ) {
rank: 867
score: 99.15507289341518
patch: if ( type == Type . FUNCTION && type != null ) {
rank: 867
score: 99.13550415039063
patch: if ( type instanceof Type . FUNCTION ) {
rank: 867
score: 99.11805216471355
patch: if ( type != Type . FUNCTION && type . )
rank: 867
score: 99.09505208333333
patch: if ( type != FUNCTION && type != FUNCTION ) {
rank: 867
score: 99.0090576171875
patch: if ( type != Type . NAME ) {
rank: 868
score: 99.22733851841518
patch: if ( type != Type . FUNCTION && parent == 0 ) {
rank: 868
score: 99.19140625
patch: if ( type != Type . FUNCTION && parent != null )
rank: 868
score: 99.18967848557692
patch: if ( type != Type . FUNCTION && parent == null )
rank: 868
score: 99.11693226207386
patch: if ( ! aliasing CaMeL Gets > $NUMBER$ ) {
rank: 868
score: 99.00848388671875
patch: if ( is CaMeL Local ( ) ) {
rank: 869
score: 99.22639683314732
patch: if ( this == null || aliasing CaMeL Gets > 0 ) {
rank: 869
score: 99.00727982954545
patch: if ( $STRING$ . contains ( type ) ) {
rank: 870
score: 99.19046456473214
patch: if ( parent == null || global CaMeL Sets != null ) {
rank: 870
score: 99.11482543945313
patch: if ( ! aliasing CaMeL Gets > 0 )
rank: 870
score: 99.08749389648438
patch: if ( type != 0 ) {
rank: 870
score: 99.00345458984376
patch: if ( aliasing CaMeL Gets > type ) {
rank: 871
score: 99.11458740234374
patch: if ( is CaMeL Const ( ) ) {
rank: 871
score: 99.08656819661458
patch: if ( type != Type . FUNCTION , type ) {
rank: 872
score: 99.12863393930289
patch: if ( ( type & Type . FUNCTION ) != 0 )
rank: 872
score: 99.11250443892045
patch: if ( type != Type . NULL && type {
rank: 872
score: 98.99249822443181
patch: if ( ! aliasing CaMeL Gets > null ) {
rank: 873
score: 99.31944861778847
patch: if ( type != null || global CaMeL Sets != 0 )
rank: 873
score: 99.1116231282552
patch: if ( type != Type . FUNCTION && type { {
rank: 873
score: 98.99160766601562
patch: if ( type == Type . NO ) {
rank: 874
score: 99.21891566685268
patch: if ( declaration . get CaMeL Length ( ) != 0 ) {
rank: 874
score: 99.18235426682692
patch: if ( is CaMeL Class CaMeL Or CaMeL Enum ) { {
rank: 874
score: 99.16910807291667
patch: if ( parent == null ) { return true ; }
rank: 874
score: 99.10929361979167
patch: if ( type CaMeL Name == Type . FUNCTION ) {
rank: 874
score: 98.99098899147727
patch: if ( ! is CaMeL All ( ) ) {
rank: 875
score: 99.21802629743304
patch: if ( declaration . get CaMeL Symbol ( ) != null ) {
rank: 875
score: 99.1091552734375
patch: if ( type != Type . STRING ) {
rank: 875
score: 99.08419799804688
patch: if ( false && aliasing CaMeL Gets > 0 ) {
rank: 876
score: 99.21676199776786
patch: if ( type != Type . FUNCTION && parent != 1 ) {
rank: 876
score: 99.1771952311198
patch: if ( aliasing CaMeL Gets > 0 ) return true ;
rank: 876
score: 99.10403442382812
patch: if ( ( type != Type . FUNCTION && type {
rank: 876
score: 98.9853182705966
patch: if ( ! aliasing CaMeL Gets > type ) {
rank: 877
score: 99.31814575195312
patch: if ( type != Type . FUNCTION && aliasing CaMeL Gets > 0 && )
rank: 877
score: 99.17630615234376
patch: if ( local CaMeL Sets != null ) {
rank: 877
score: 99.10293579101562
patch: if ( type . is CaMeL Active ( ) ) {
rank: 877
score: 98.98472900390625
patch: if ( type != Type . type ) {
rank: 878
score: 99.21457926432292
patch: if ( element == null || parent == null ) {
rank: 878
score: 99.16929117838542
patch: if ( parent == null || type != null ) {
rank: 878
score: 99.11436110276442
patch: if ( aliasing CaMeL Gets ( type ) ) return false ;
rank: 878
score: 99.09961954752605
patch: if ( type == Type . FUNCTION _ PROP ) {
rank: 879
score: 99.21448625837054
patch: if ( declaration . get CaMeL Name ( ) == null ) {
rank: 879
score: 98.9833740234375
patch: if ( type != Type . TRUE ) {
rank: 880
score: 99.31665802001953
patch: if ( ( parent == null ) || global CaMeL Sets != 0 ) {
rank: 880
score: 99.2136981670673
patch: if ( get CaMeL Twin ( ) != 0 ) {
rank: 880
score: 99.16707669771634
patch: if ( parent == null || local CaMeL Sets != 0 )
rank: 880
score: 99.11209810697116
patch: if ( type != Type . FUNCTION ) { return false {
rank: 880
score: 99.09726969401042
patch: if ( type != Type . FUNCTION _ PROP ) {
rank: 880
score: 99.0606689453125
patch: if ( type . is CaMeL Function ( ) ) {
rank: 881
score: 99.31615447998047
patch: if ( type == Type . FUNCTION || global CaMeL Sets == 0 ) {
rank: 881
score: 99.1666971842448
patch: if ( ! is CaMeL Class CaMeL Or CaMeL Enum )
rank: 881
score: 99.14593975360577
patch: if ( type != Type . FUNCTION && ! parent ) {
rank: 881
score: 99.09512939453126
patch: if ( type != Type . FUNCTION && {
rank: 881
score: 98.98206176757813
patch: if ( type == Type . EXPRESSION ) {
rank: 882
score: 99.21177455357143
patch: if ( ( parent == null ) && parent == null ) {
rank: 882
score: 99.16648512620192
patch: switch ( declaration . get CaMeL Twin ( ) ) {
rank: 882
score: 99.14266967773438
patch: if ( type != null ) { return false ; }
rank: 882
score: 99.09449259440105
patch: if ( type . is CaMeL Declared ( ) ) {
rank: 882
score: 98.98153076171874
patch: if ( is CaMeL Name ( ) ) {
rank: 883
score: 99.16358360877403
patch: if ( declaration . get CaMeL Id ( ) != null )
rank: 883
score: 99.09354654947917
patch: if ( type . is CaMeL Constant ( ) ) {
rank: 883
score: 99.0567626953125
patch: if ( aliasing CaMeL Gets ( ) ) {
rank: 883
score: 98.9803466796875
patch: if ( ! aliasing CaMeL Gets == null ) {
rank: 884
score: 99.09291585286458
patch: if ( type instanceof Type ) { return true ; }
rank: 884
score: 99.05585271661931
patch: if ( ! is CaMeL String ( ) ) {
rank: 884
score: 98.98004150390625
patch: if ( type != Type . DEFAULT ) {
rank: 885
score: 99.20703125
patch: if ( parent == null || global CaMeL Sets != 1 ) {
rank: 885
score: 99.15778057391827
patch: if ( parent . get CaMeL Parent ( ) != null )
rank: 885
score: 99.13876342773438
patch: if ( type != Type . OTHER && false ) {
rank: 885
score: 99.09789021809895
patch: if ( type instanceof Type ) { return false ; }
rank: 885
score: 99.09281412760417
patch: if ( type . is CaMeL Anonymous ( ) ) {
rank: 885
score: 98.97783203125
patch: if ( value == Type . FUNCTION ) {
rank: 886
score: 99.31195068359375
patch: if ( type != null && local CaMeL Sets != 0 ) {
rank: 886
score: 99.20575823102679
patch: if ( parent . get CaMeL Value ( ) != null ) {
rank: 886
score: 99.15380859375
patch: if ( aliasing CaMeL Gets > 0 || parent != null )
rank: 887
score: 99.31188151041667
patch: if ( ! global CaMeL Sets != 0 ) { return false ; }
rank: 887
score: 99.20684814453125
patch: if ( declaration . get CaMeL Id ( ) > 0 ) {
rank: 887
score: 99.20549665178571
patch: if ( declaration == null && aliasing CaMeL Gets > 0 ) {
rank: 887
score: 99.15317007211539
patch: if ( value != null || aliasing CaMeL Gets > 0 )
rank: 887
score: 99.0899658203125
patch: if ( type instanceof Type ) { return true ;
rank: 887
score: 99.0380526455966
patch: if ( type != Type . FUNCTION if ) {
rank: 887
score: 98.975732421875
patch: while ( type != Type . FUNCTION ) {
rank: 888
score: 99.20600237165179
patch: if ( declaration . get CaMeL Twin ( ) != ) {
rank: 888
score: 99.20494733537946
patch: if ( node == null || aliasing CaMeL Gets > 0 ) {
rank: 888
score: 99.13209025065105
patch: if ( local CaMeL Sets . length == 0 ) {
rank: 888
score: 99.08953857421875
patch: if ( type . type != Type . NULL ) {
rank: 888
score: 99.03754216974431
patch: if ( type != Type . FUNCTION type ) {
rank: 888
score: 98.9735440340909
patch: if ( is CaMeL Local ( type ) ) {
rank: 889
score: 99.13040161132812
patch: if ( type != Type . FUNCTION + false ) {
rank: 889
score: 99.08901977539062
patch: if ( type != Type . FUNCTION ) { return {
rank: 889
score: 98.9705810546875
patch: if ( ! is CaMeL Enum > 0 ) {
rank: 890
score: 99.30592564174107
patch: if ( type != $STRING$ || global CaMeL Sets != 0 ) {
rank: 890
score: 99.12931315104167
patch: if ( type != Type . OTHER && true ) {
rank: 890
score: 99.099609375
patch: if ( type != Type . FUNCTION && type != null )
rank: 890
score: 99.08725992838542
patch: if ( type != Type . NULL && ! ) {
rank: 890
score: 99.03608842329545
patch: final if ( type != Type . FUNCTION ) {
rank: 890
score: 98.96904962713069
patch: if ( contains CaMeL Type ( type ) ) {
rank: 891
score: 99.20123291015625
patch: if ( global CaMeL Sets != null ) {
rank: 891
score: 99.14549763997395
patch: if ( get CaMeL Twin ( ) != 1 )
rank: 891
score: 99.0870361328125
patch: if ( ! is CaMeL Const ( ) ) {
rank: 891
score: 98.9663818359375
patch: if ( aliasing CaMeL Gets == 0 ) {
rank: 892
score: 99.30386788504464
patch: if ( local CaMeL Sets != 0 ) { return false ; }
rank: 892
score: 99.18404134114583
patch: if ( node == null || parent == null ) {
rank: 893
score: 99.3026123046875
patch: if ( type != Type . TYPE || global CaMeL Sets != 0 )
rank: 893
score: 99.16897583007812
patch: if ( type . size ( ) > 0 ) {
rank: 893
score: 99.11368815104167
patch: if ( this . local CaMeL Sets != 1 ) {
rank: 893
score: 99.0852383700284
patch: if ( ! is CaMeL Constructor ( ) ) {
rank: 893
score: 98.96559836647727
patch: if ( ! aliasing CaMeL Gets == 0 ) {
rank: 894
score: 99.16326904296875
patch: if ( parent == null && parent != null ) {
rank: 894
score: 99.13820237379808
patch: if ( declaration != null || aliasing CaMeL Gets > 0 )
rank: 894
score: 99.08444213867188
patch: if ( type != null || type != null ) {
rank: 894
score: 99.08330078125
patch: if ( is CaMeL Empty ( ) ) {
rank: 894
score: 99.03012917258523
patch: if ( type != != Type . FUNCTION ) {
rank: 894
score: 98.95969848632812
patch: if ( type != Type . LEFT ) {
rank: 895
score: 99.30082194010417
patch: if ( type != Type . FUNCTION ? aliasing CaMeL Gets > 0 )
rank: 895
score: 99.16007486979167
patch: if ( element == null || parent != null ) {
rank: 895
score: 99.1375732421875
patch: if ( declaration == null || aliasing CaMeL Gets > 0 )
rank: 895
score: 99.0815938313802
patch: if ( type != Type . NONE && type ) {
rank: 895
score: 98.94674682617188
patch: if ( type != Type . Void ) {
rank: 896
score: 99.29982212611607
patch: if ( type != $STRING$ && global CaMeL Sets != 0 ) {
rank: 896
score: 99.137451171875
patch: if ( parent == null || aliasing CaMeL Gets > 1 )
rank: 896
score: 99.10704549153645
patch: if ( local CaMeL Sets . length != 0 ) {
rank: 896
score: 99.08095296223958
patch: if ( ! type != Type . FUNCTION && type {
rank: 896
score: 99.0750732421875
patch: if ( aliasing CaMeL Gets . contains ( type ) )
rank: 896
score: 99.02877197265624
patch: if ( type != Type . null ) {
rank: 896
score: 98.94624633789063
patch: if ( type != Type . PROPERTY ) {
rank: 897
score: 99.13629619891827
patch: if ( declaration . get CaMeL Root ( ) != null )
rank: 897
score: 99.1001309481534
patch: if ( type != Type . FUNCTION ] ) {
rank: 897
score: 99.07693481445312
patch: if ( type != null && type instanceof Type ) {
rank: 897
score: 98.94512939453125
patch: if ( type != Type . MIN ) {
rank: 898
score: 99.29861653645834
patch: if ( type != $STRING$ && ! aliasing CaMeL Gets > 0 ) {
rank: 898
score: 99.19670758928571
patch: if ( declaration . get CaMeL Module ( ) == null ) {
rank: 898
score: 99.10001627604167
patch: if ( ( parent == null ) , null ) {
rank: 898
score: 99.0670674641927
patch: if ( type instanceof Type != Type . FUNCTION ) {
rank: 899
score: 99.29744466145833
patch: if ( type != Type . NOT || global CaMeL Sets != 0 )
rank: 899
score: 99.14727313701923
patch: if ( declaration . get CaMeL Twin ( ) ) {
rank: 899
score: 99.12917856069711
patch: if ( type != null && aliasing CaMeL Gets > 0 )
rank: 899
score: 99.09718831380208
patch: if ( this . global CaMeL Sets != 0 ) {
rank: 899
score: 99.07730102539062
patch: if ( type == Type . STRING ) {
rank: 899
score: 98.93734130859374
patch: if ( type == Type . ALL ) {
rank: 900
score: 99.29737955729166
patch: if ( parent == null || ! aliasing CaMeL Gets > 0 ) {
rank: 900
score: 99.19642857142857
patch: if ( value == null || aliasing CaMeL Gets > 0 ) {
rank: 900
score: 99.14190673828125
patch: if ( declaration != null || parent == null ) {
rank: 900
score: 99.09276326497395
patch: if ( type != null ) { return true ; }
rank: 900
score: 99.02272727272727
patch: if ( type != Type . FUNCTION Type ) {
rank: 900
score: 98.93704223632812
patch: if ( type != Type . WARNING ) {
rank: 901
score: 99.13995361328125
patch: if ( declaration == null || parent != null ) {
rank: 901
score: 99.12851186899039
patch: if ( type != $STRING$ && aliasing CaMeL Gets > 0 )
rank: 901
score: 99.09083251953125
patch: if ( type == Type . OTHER ) {
rank: 901
score: 99.07374156605114
patch: if ( type != Type . FUNCTION && ! {
rank: 901
score: 98.9360107421875
patch: if ( type == Type . UNKNOWN ) {
rank: 902
score: 99.12503051757812
patch: if ( get CaMeL Twin ( ) == null )
rank: 902
score: 99.07357788085938
patch: if ( is CaMeL Constructor ( ) ) {
rank: 902
score: 99.06078084309895
patch: if ( type instanceof Type && type instanceof Type ) {
rank: 902
score: 99.05872599283855
patch: if ( aliasing CaMeL Gets ( ! type ) ) {
rank: 902
score: 98.93439331054688
patch: if ( type == Type . NAME ) {
rank: 903
score: 99.291748046875
patch: if ( aliasing CaMeL Gets > 0 ) { return false ; } else
rank: 903
score: 99.12306722005208
patch: if ( get CaMeL Scope ( ) != null ) {
rank: 903
score: 99.12042236328125
patch: if ( aliasing CaMeL Gets != 1 ) {
rank: 903
score: 99.08335367838542
patch: if ( type != Type . FUNCTION + true ) {
rank: 903
score: 99.06952514648438
patch: if ( is CaMeL Defined ( ) ) {
rank: 903
score: 98.93300170898438
patch: if ( is CaMeL Set ( ) ) {
rank: 904
score: 99.28937174479167
patch: if ( type != Type . T && aliasing CaMeL Gets > 0 )
rank: 904
score: 99.19369942801339
patch: if ( declaration . get CaMeL Entry ( ) != null ) {
rank: 904
score: 99.11765543619792
patch: if ( node == null || parent != null ) {
rank: 904
score: 99.08330743963069
patch: if ( parent == null ) { return false ;
rank: 905
score: 99.287158203125
patch: if ( type != - 1 || aliasing CaMeL Gets > 0 ) {
rank: 905
score: 99.11566162109375
patch: if ( get CaMeL Class ( ) != null ) {
rank: 905
score: 99.07776896158855
patch: if ( type != Type . OTHER ) return false ;
rank: 905
score: 98.92839050292969
patch: if ( name != null ) {
rank: 906
score: 99.11106363932292
patch: if ( parent . aliasing CaMeL Gets > 0 ) {
rank: 906
score: 99.10845947265625
patch: if ( parent == null && parent == null ) {
rank: 906
score: 99.07725016276042
patch: if ( type != null || parent != null ) {
rank: 906
score: 99.06076882102273
patch: if ( type != Type . NONE && type {
rank: 906
score: 99.05220540364583
patch: if ( type & aliasing CaMeL Gets > 0 ) {
rank: 906
score: 99.00055541992188
patch: if ( is CaMeL Array ( ) ) {
rank: 906
score: 98.92708740234374
patch: if ( type != Type . READ ) {
rank: 907
score: 99.10223388671875
patch: if ( key != null || parent == null ) {
rank: 907
score: 99.05943603515625
patch: if ( type == Type . FUNCTION && {
rank: 907
score: 99.05543101917614
patch: if ( ! global CaMeL Sets != 0 ) {
rank: 907
score: 98.92640380859375
patch: if ( type > Type . NULL ) {
rank: 908
score: 99.28546549479167
patch: if ( ! parent == null || global CaMeL Sets != 0 ) {
rank: 908
score: 99.1097412109375
patch: if ( aliasing CaMeL Gets > 0 )
rank: 908
score: 98.992578125
patch: if ( type & Type . FUNCTION ) {
rank: 908
score: 98.92423706054687
patch: if ( type == Type . type ) {
rank: 909
score: 99.28437151227679
patch: if ( local CaMeL Sets != 0 ) { return true ; }
rank: 909
score: 99.09915161132812
patch: if ( get CaMeL Name ( ) != null ) {
rank: 909
score: 99.048095703125
patch: if ( type != Type . FUNCTION ) { try {
rank: 909
score: 98.92268676757813
patch: if ( type != Type . LINE ) {
rank: 910
score: 99.09664916992188
patch: if ( parent == null || parent instanceof null ) {
rank: 910
score: 99.08936564127605
patch: if ( this == null || parent == null ) {
rank: 910
score: 99.05753950639205
patch: if ( type == Type . FUNCTION && ! {
rank: 910
score: 99.04557495117187
patch: if ( local CaMeL Sets == 0 ) {
rank: 910
score: 99.03935102982955
patch: if ( ! is CaMeL Function ( ) ) {
rank: 910
score: 98.98676091974431
patch: if ( type != Type . FUNCTION FUNCTION ) {
rank: 911
score: 99.04735310872395
patch: if ( ( type & type ) != 0 ) {
rank: 911
score: 98.91824340820312
patch: if ( type != Type . T ) {
rank: 912
score: 99.28140462239584
patch: if ( type != - 1 && aliasing CaMeL Gets > 0 ) {
rank: 912
score: 99.0572265625
patch: if ( type != Type . FUNCTION && )
rank: 912
score: 99.01409357244319
patch: if ( parent == null ) { return true ;
rank: 913
score: 99.2811767578125
patch: if ( ! type != null || aliasing CaMeL Gets > 0 ) {
rank: 913
score: 99.08218383789062
patch: if ( type != null && parent == null ) {
rank: 913
score: 99.05668501420455
patch: if ( type != Type . FUNCTION || type )
rank: 913
score: 99.00818980823864
patch: if ( ! local CaMeL Sets != 0 ) {
rank: 914
score: 99.079541015625
patch: if ( this . parent == null ) {
rank: 914
score: 99.00665838068181
patch: if ( type != null ) { return false ;
rank: 914
score: 98.97451171875
patch: if ( type != Reference . FUNCTION ) {
rank: 914
score: 98.91256103515624
patch: if ( ! contains ( type ) ) {
rank: 915
score: 99.27596609933036
patch: if ( type == null || global CaMeL Sets != 0 ) {
rank: 915
score: 99.148779296875
patch: if ( global CaMeL Sets > 0 ) {
rank: 915
score: 99.08538263494319
patch: if ( aliasing CaMeL Gets > 0 ) { }
rank: 915
score: 99.07859293619792
patch: if ( root == null || parent == null ) {
rank: 915
score: 99.02000732421875
patch: if ( aliasing CaMeL Gets ( type ) )
rank: 915
score: 98.9744873046875
patch: if ( aliasing CaMeL Gets ( 0 ) ) {
rank: 915
score: 98.91224975585938
patch: if ( content == Type . FUNCTION ) {
rank: 916
score: 99.08528275923295
patch: if ( aliasing CaMeL Gets > 0 ) continue ;
rank: 916
score: 99.046875
patch: if ( is CaMeL None ( ) ) {
rank: 916
score: 99.00519353693181
patch: if ( ! ( parent == null ) ) {
rank: 916
score: 98.973974609375
patch: if ( type != Object . FUNCTION ) {
rank: 916
score: 98.91089477539063
patch: if ( type == Type . TRUE ) {
rank: 917
score: 99.27586263020834
patch: if ( type == Type . FUNCTION || global CaMeL Sets != 0 )
rank: 917
score: 99.04535466974431
patch: if ( type instanceof Type ) { return false ;
rank: 917
score: 98.91036376953124
patch: if ( is CaMeL Statement ( ) ) {
rank: 918
score: 99.27470703125
patch: if ( global CaMeL Sets != 0 || local CaMeL Sets != 0 )
rank: 918
score: 99.03035111860795
patch: if ( type != Type . FUNCTION && ! )
rank: 918
score: 99.0177889737216
patch: if ( contains CaMeL Key ( type ) ) {
rank: 918
score: 98.9984359741211
patch: if ( declaration == null ) {
rank: 918
score: 98.907080078125
patch: while ( type == Type . FUNCTION ) {
rank: 919
score: 98.99412231445312
patch: if ( global CaMeL Sets == 0 ) {
rank: 919
score: 98.96248779296874
patch: if ( is CaMeL Declaration ( ) ) {
rank: 919
score: 98.90599365234375
patch: if ( type != Type . FALSE ) {
rank: 920
score: 99.07921253551136
patch: if ( aliasing CaMeL Gets > 0 ) break ;
rank: 920
score: 99.0556307705966
patch: if ( ! this . parent == null ) {
rank: 920
score: 99.01490367542614
patch: if ( ! is CaMeL Defined ( ) ) {
rank: 920
score: 99.00953504774306
patch: if ( type != Type . FUNCTION )
rank: 920
score: 98.905859375
patch: if ( content != Type . FUNCTION ) {
rank: 921
score: 99.27332356770833
patch: if ( type != Type . PREFIX && aliasing CaMeL Gets > 0 )
rank: 921
score: 99.01460404829545
patch: if ( type == Type . FUNCTION && type )
rank: 921
score: 98.90546875
patch: if ( type != Type . $STRING$ ) {
rank: 922
score: 99.0129727450284
patch: if ( type != Type . NULL ) { {
rank: 922
score: 99.0128506747159
patch: if ( aliasing CaMeL Gets > - 1 ) {
rank: 922
score: 98.98247736150569
patch: if ( ! global CaMeL Sets != 1 ) {
rank: 922
score: 98.9054443359375
patch: if ( type == Type . DEFAULT ) {
rank: 923
score: 99.00876686789773
patch: if ( ! is CaMeL None ( ) ) {
rank: 923
score: 98.95554809570312
patch: if ( is CaMeL Keyword ( ) ) {
rank: 924
score: 99.00831298828125
patch: if ( local CaMeL Sets == null ) {
rank: 924
score: 98.95449829101562
patch: if ( type != FUNCTION ) {
rank: 924
score: 98.90220336914062
patch: if ( type == Class . FUNCTION ) {
rank: 925
score: 99.06911214192708
patch: if ( get CaMeL Module ( ) != null ) {
rank: 925
score: 99.00379527698864
patch: if ( type == Type . FUNCTION || type {
rank: 925
score: 98.90132446289063
patch: if ( is CaMeL All ( ) ) {
rank: 926
score: 99.26754324776786
patch: if ( type != null || ! aliasing CaMeL Gets > 0 )
rank: 926
score: 98.99674224853516
patch: if ( element == null ) {
rank: 926
score: 98.9889803799716
patch: else if ( type != Type . FUNCTION ) {
rank: 926
score: 98.94962935014205
patch: if ( type != Type . FUNCTION ) { )
rank: 927
score: 99.09145100911458
patch: if ( this . local CaMeL Sets != null ) {
rank: 927
score: 98.99716186523438
patch: if ( is CaMeL Private ( ) ) {
rank: 927
score: 98.96153259277344
patch: if ( declaration != null ) {
rank: 928
score: 98.9407470703125
patch: if ( is CaMeL String ( ) ) {
rank: 928
score: 98.89853515625
patch: if ( id != Type . FUNCTION ) {
rank: 929
score: 98.99366344105114
patch: if ( name . equals ( $STRING$ ) ) {
rank: 929
score: 98.98603515625
patch: if ( aliasing CaMeL Gets > false ) {
rank: 929
score: 98.95842895507812
patch: if ( type != Type . EQ ) {
rank: 929
score: 98.93970336914063
patch: if ( type != Symbol . FUNCTION ) {
rank: 930
score: 99.25344412667411
patch: if ( type != Type . FUNCTION && declaration != null ) {
rank: 930
score: 99.08511352539062
patch: if ( value != null || parent == null ) {
rank: 930
score: 98.9819091796875
patch: if ( declaration . parent == null ) {
rank: 930
score: 98.97991333007812
patch: if ( node != Type . FUNCTION ) {
rank: 930
score: 98.957568359375
patch: if ( ( type != null ) ) {
rank: 930
score: 98.894873046875
patch: if ( is CaMeL Enum > 0 ) {
rank: 931
score: 99.0105868252841
patch: if ( get CaMeL Parent ( ) != null )
rank: 931
score: 98.9679842862216
patch: if ( type != Type . FUNCTION ) break ;
rank: 931
score: 98.89456787109376
patch: if ( type == Type . LEFT ) {
rank: 932
score: 99.07373046875
patch: if ( type equals ( Type . FUNCTION ) ) {
rank: 932
score: 98.971240234375
patch: if ( declaration . get == null ) {
rank: 932
score: 98.93346557617187
patch: if ( ! != Type . FUNCTION ) {
rank: 932
score: 98.89271545410156
patch: if ( value != null ) {
rank: 933
score: 99.0692138671875
patch: if ( type , aliasing CaMeL Gets > 0 ) {
rank: 933
score: 99.00086805555556
patch: if ( parent == null ) { {
rank: 933
score: 98.96407741970486
patch: if ( ! type != null ) {
rank: 933
score: 98.89218478732639
patch: if ( contains ( type ) ) {
rank: 934
score: 99.24455915178571
patch: if ( global CaMeL Sets != 0 ) { return true ; }
rank: 934
score: 99.000732421875
patch: if ( parent == null ) return false ;
rank: 934
score: 98.9782958984375
patch: if ( type CaMeL Name != null ) {
rank: 934
score: 98.9639559659091
patch: if ( type != Type . FUNCTION ) continue ;
rank: 934
score: 98.93960571289062
patch: if ( key != null ) {
rank: 934
score: 98.88860473632812
patch: if ( type != Type . TARGET ) {
rank: 935
score: 99.06592814127605
patch: if ( type . can CaMeL Collapse ( ) ) {
rank: 935
score: 98.97548828125
patch: if ( is CaMeL Active ( ) ) {
rank: 935
score: 98.93348999023438
patch: if ( global CaMeL Sets != $NUMBER$ ) {
rank: 936
score: 98.96757202148437
patch: if ( is CaMeL Constant ( ) ) {
rank: 936
score: 98.96074676513672
patch: if ( node != null ) {
rank: 936
score: 98.94277615017361
patch: if ( ! parent != null ) {
rank: 937
score: 98.96658325195312
patch: if ( ! type != Type . FUNCTION )
rank: 937
score: 98.94247436523438
patch: if ( global CaMeL Sets == null ) {
rank: 937
score: 98.88470458984375
patch: if ( type == Type . PROPERTY ) {
rank: 938
score: 98.98661665482955
patch: if ( type != Type . FUNCTION ) { }
rank: 938
score: 98.95746404474431
patch: if ( aliasing CaMeL Gets ( name ) ) {
rank: 938
score: 98.919287109375
patch: if ( local CaMeL Sets == 1 ) {
rank: 938
score: 98.91298828125
patch: if ( this != Type . FUNCTION ) {
rank: 938
score: 98.88223876953126
patch: synchronized ( aliasing CaMeL Gets > 0 ) {
rank: 939
score: 98.98344282670455
patch: if ( type [ null ] != null ) {
rank: 939
score: 98.95344848632813
patch: if ( ! ( type instanceof Type ) )
rank: 939
score: 98.94160766601563
patch: if ( ! ! parent == null ) {
rank: 939
score: 98.880224609375
patch: if ( type != Type . STATEMENT ) {
rank: 940
score: 99.23870849609375
patch: if ( type != 0 || global CaMeL Sets != 0 ) {
rank: 940
score: 98.95225830078125
patch: if ( type == Type . FUNCTION && )
rank: 940
score: 98.93732299804688
patch: if ( true || parent == null ) {
rank: 940
score: 98.93614501953125
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 941
score: 99.23720005580357
patch: if ( type != null || local CaMeL Sets != 1 ) {
rank: 941
score: 98.9434326171875
patch: if ( type != Type . VOID ) {
rank: 941
score: 98.9094482421875
patch: if ( global CaMeL Sets == 1 ) {
rank: 941
score: 98.90899047851562
patch: if ( type != Type . IN ) {
rank: 941
score: 98.87916870117188
patch: if ( type != Character . FUNCTION ) {
rank: 942
score: 98.93765869140626
patch: if ( aliasing CaMeL Gets > true ) {
rank: 942
score: 98.93270263671874
patch: if ( parent == null || true ) {
rank: 942
score: 98.908740234375
patch: if ( aliasing CaMeL Gets ( type ) {
rank: 942
score: 98.90265502929688
patch: if ( ( declaration == null ) ) {
rank: 942
score: 98.87907104492187
patch: if ( type == Type . Void ) {
rank: 943
score: 99.23582240513393
patch: if ( type != null && global CaMeL Sets == 0 ) {
rank: 943
score: 98.979931640625
patch: if ( local CaMeL Sets > 0 ) {
rank: 943
score: 98.94425048828126
patch: if ( is CaMeL External ( ) ) {
rank: 943
score: 98.8788330078125
patch: if ( function == Type . FUNCTION ) {
rank: 944
score: 98.95564575195313
patch: if ( aliasing CaMeL Gets <= 0 ) {
rank: 944
score: 98.92146301269531
patch: if ( node == null ) {
rank: 944
score: 98.92130126953126
patch: if ( type == Type . NOT ) {
rank: 945
score: 98.941796875
patch: if ( scope != Type . FUNCTION ) {
rank: 945
score: 98.8956298828125
patch: if ( type & Type . OTHER ) {
rank: 946
score: 98.93768920898438
patch: if ( type != Type . LOCAL ) {
rank: 946
score: 98.91539306640625
patch: if ( ( parent != null ) ) {
rank: 946
score: 98.90656127929688
patch: if ( type != Type . ANNOTATION ) {
rank: 946
score: 98.89313354492188
patch: if ( type != Type . Enum ) {
rank: 947
score: 99.22909109933036
patch: if ( type == $STRING$ && aliasing CaMeL Gets > 0 ) {
rank: 947
score: 98.94370727539062
patch: if ( aliasing CaMeL Gets >= 0 ) {
rank: 947
score: 98.90626831054688
patch: if ( code != Type . FUNCTION ) {
rank: 947
score: 98.89246215820313
patch: if ( parent == null ) return true ;
rank: 947
score: 98.81395721435547
patch: if ( false == type ) {
rank: 948
score: 98.942626953125
patch: if ( aliasing CaMeL Gets < 0 ) {
rank: 948
score: 98.909521484375
patch: if ( type != null ) return false ;
rank: 948
score: 98.80411105685764
patch: if ( type != - 1 ) {
rank: 949
score: 99.22736467633929
patch: if ( ! get CaMeL Twin ( ) != null ) {
rank: 949
score: 98.93862915039062
patch: if ( this . parent != null ) {
rank: 949
score: 98.90531616210937
patch: if ( is CaMeL Function ( ) ) {
rank: 949
score: 98.89961547851563
patch: if ( this == Type . FUNCTION ) {
rank: 950
score: 99.22650146484375
patch: if ( type != null || global CaMeL Sets != null ) {
rank: 950
score: 98.93837280273438
patch: if ( aliasing CaMeL Gets == 1 ) {
rank: 950
score: 98.90742492675781
patch: if ( filter != null ) {
rank: 950
score: 98.8983154296875
patch: if ( type >= Type . FUNCTION ) {
rank: 950
score: 98.83644104003906
patch: if ( ( parent == null )
rank: 950
score: 98.79131317138672
patch: if ( parent > null ) {
rank: 951
score: 98.93773803710937
patch: if ( this . key != null ) {
rank: 951
score: 98.90545654296875
patch: if ( parent == null || parent ) {
rank: 951
score: 98.78346252441406
patch: if ( content != null ) {
rank: 952
score: 99.22610909598214
patch: if ( type != null || local CaMeL Sets == 0 ) {
rank: 953
score: 99.22450474330357
patch: if ( type != $STRING$ && local CaMeL Sets != 0 ) {
rank: 953
score: 98.76138305664062
patch: if ( type > null ) {
rank: 954
score: 99.22438267299107
patch: if ( type . is CaMeL Class CaMeL Or CaMeL Enum ) {
rank: 954
score: 98.8991455078125
patch: if ( type != Type . YES ) {
rank: 954
score: 98.81334771050348
patch: if ( ( parent == null ) ?
rank: 954
score: 98.76119232177734
patch: if ( root != null ) {
rank: 955
score: 99.22419084821429
patch: if ( declaration != null || local CaMeL Sets != 0 ) {
rank: 955
score: 98.92357788085937
patch: if ( parent . null != parent ) {
rank: 955
score: 98.90104370117187
patch: try { if ( parent == null ) {
rank: 955
score: 98.8032455444336
patch: if ( type != $STRING$ ) {
rank: 955
score: 98.75733184814453
patch: if ( type == 0 ) {
rank: 956
score: 98.9177001953125
patch: if ( aliasing CaMeL Gets > - 1 )
rank: 956
score: 98.79770236545139
patch: if ( ) { return false ; }
rank: 956
score: 98.75653076171875
patch: if ( function != null ) {
rank: 957
score: 99.2200927734375
patch: if ( type != null || local CaMeL Sets != 0 )
rank: 957
score: 98.90953369140625
patch: if ( parent == null || false ) {
rank: 957
score: 98.9002197265625
patch: if ( true && parent == null ) {
rank: 957
score: 98.88914659288194
patch: if ( type == Type . FUNCTION )
rank: 957
score: 98.78731536865234
patch: if ( is CaMeL Enum ) {
rank: 957
score: 98.75455729166667
patch: } if ( type != null ) {
rank: 958
score: 98.88245239257813
patch: if ( type != Name . FUNCTION ) {
rank: 958
score: 98.87705078125
patch: if ( type != Type instanceof Type ) {
rank: 959
score: 98.8478012084961
patch: if ( type != false ) {
rank: 959
score: 98.7303695678711
patch: if ( count != 0 ) {
rank: 960
score: 99.19938151041667
patch: if ( declaration != null ) { return false ; }
rank: 960
score: 98.89829711914062
patch: if ( type != Type . FUNCTION || )
rank: 960
score: 98.83724975585938
patch: if ( parent != 0 ) {
rank: 960
score: 98.72893524169922
patch: if ( element == 0 ) {
rank: 961
score: 99.19484299879808
patch: if ( type != - 1 ) { return false ; }
rank: 961
score: 98.83614095052083
patch: if ( aliasing CaMeL Gets > ) {
rank: 961
score: 98.7236328125
patch: if ( ref != null ) {
rank: 962
score: 99.19479604867789
patch: if ( ! parent == null ) { return false ; }
rank: 962
score: 98.87772216796876
patch: if ( namespace != Type . FUNCTION ) {
rank: 962
score: 98.8714599609375
patch: if ( ! type instanceof Type ) {
rank: 962
score: 98.86077880859375
patch: if ( value == null ) {
rank: 962
score: 98.83694458007812
patch: if ( parent == 0 ) {
rank: 962
score: 98.74051666259766
patch: if ( index == 0 ) {
rank: 963
score: 99.19312462439903
patch: if ( aliasing CaMeL Gets > 0 && parent == null )
rank: 963
score: 98.87572021484375
patch: if ( type == Type . MIN ) {
rank: 963
score: 98.8710205078125
patch: if ( type != null && type ) {
rank: 963
score: 98.82246398925781
patch: if ( root == null ) {
rank: 963
score: 98.78551483154297
patch: if ( name != 0 ) {
rank: 963
score: 98.7392578125
patch: if ( index != null ) {
rank: 963
score: 98.71233367919922
patch: if ( element != 0 ) {
rank: 964
score: 98.87532348632813
patch: if ( key != Type . FUNCTION ) {
rank: 964
score: 98.7835464477539
patch: if ( type != true ) {
rank: 964
score: 98.70808410644531
patch: if ( names != null ) {
rank: 965
score: 98.8723388671875
patch: if ( aliasing CaMeL Gets , 0 ) {
rank: 965
score: 98.81770324707031
patch: if ( null != parent ) {
rank: 965
score: 98.71973419189453
patch: if ( index == null ) {
rank: 965
score: 98.70515441894531
patch: if ( count == 0 ) {
rank: 966
score: 99.18288949819711
patch: if ( type != null || global CaMeL Sets == 0 )
rank: 966
score: 98.86319308810764
patch: if ( type instanceof Type > ) {
rank: 966
score: 98.83808729383681
patch: if ( type instanceof Type ) { {
rank: 966
score: 98.77783203125
patch: if ( namespace != null ) {
rank: 966
score: 98.7168960571289
patch: if ( type < null ) {
rank: 966
score: 98.702392578125
patch: if ( type > 0 ) {
rank: 967
score: 99.1818378155048
patch: if ( type != - 1 ) { return true ; }
rank: 967
score: 98.81356048583984
patch: if ( name == null ) {
rank: 967
score: 98.79874674479167
patch: if ( ( parent == null ) ;
rank: 967
score: 98.77691650390625
patch: if ( has > 0 ) {
rank: 967
score: 98.7557373046875
patch: if ( type != type ) {
rank: 967
score: 98.71170806884766
patch: if ( index != 0 ) {
rank: 967
score: 98.69847869873047
patch: if ( false != type ) {
rank: 968
score: 98.77208709716797
patch: if ( type instanceof Symbol ) {
rank: 969
score: 98.79167938232422
patch: if ( parent == 1 ) {
rank: 969
score: 98.77688259548611
patch: if ( equals ( type ) ) {
rank: 969
score: 98.77640109592014
patch: if ( aliasing CaMeL Gets > 1 )
rank: 969
score: 98.76626925998264
patch: if ( type instanceof Type type ) {
rank: 969
score: 98.75154876708984
patch: if ( filter == null ) {
rank: 969
score: 98.66991424560547
patch: if ( declaration == 0 ) {
rank: 970
score: 99.17604417067308
patch: if ( parent == null || global CaMeL Sets != 0 )
rank: 970
score: 98.7855224609375
patch: if ( parent instanceof null ) {
rank: 970
score: 98.76895904541016
patch: if ( size > 0 ) {
rank: 970
score: 98.75000762939453
patch: if ( type instanceof String ) {
rank: 971
score: 98.77301703559027
patch: if ( parent == null ) { }
rank: 971
score: 98.65753173828125
patch: if ( declaration != 0 ) {
rank: 972
score: 98.7694320678711
patch: if ( list == null ) {
rank: 972
score: 98.76150173611111
patch: if ( parent != null ) { {
rank: 972
score: 98.6851577758789
patch: if ( value != 0 ) {
rank: 973
score: 99.1663067157452
patch: if ( type != null || global CaMeL Sets != 1 )
rank: 973
score: 98.74442545572917
patch: if ( type != null ) { {
rank: 973
score: 98.74124908447266
patch: if ( options != 0 ) {
rank: 973
score: 98.72321319580078
patch: if ( filter > 0 ) {
rank: 973
score: 98.69661712646484
patch: if ( null == parent ) {
rank: 973
score: 98.68885803222656
patch: if ( ref != 0 ) {
rank: 973
score: 98.63134002685547
patch: if ( this != null ) {
rank: 974
score: 98.70841979980469
patch: if ( annotation != null ) {
rank: 974
score: 98.67157745361328
patch: if ( element > 0 ) {
rank: 974
score: 98.63089752197266
patch: if ( ) { return false ;
rank: 975
score: 98.6781005859375
patch: if ( module != null ) {
rank: 975
score: 98.667724609375
patch: if ( parent > 0 ) {
rank: 975
score: 98.62418365478516
patch: if ( type < false ) {
rank: 976
score: 98.72040557861328
patch: if ( current == null ) {
rank: 976
score: 98.6802978515625
patch: if ( scope != null ) {
rank: 976
score: 98.6646957397461
patch: if ( 0 != type ) {
rank: 976
score: 98.65740966796875
patch: if ( type instanceof null ) {
rank: 977
score: 98.7120132446289
patch: if ( type , null ) {
rank: 977
score: 98.66427612304688
patch: if ( element > null ) {
rank: 977
score: 98.66259002685547
patch: if ( ! ( ) ) {
rank: 977
score: 98.65287780761719
patch: if ( type == FUNCTION ) {
rank: 977
score: 98.61712646484375
patch: if ( parent == null || parent
rank: 978
score: 99.13967895507812
patch: if ( declaration == null ) { return false ; }
rank: 978
score: 98.74102020263672
patch: if ( content == null ) {
rank: 978
score: 98.69510650634766
patch: if ( type != Type . FUNCTION
rank: 979
score: 98.67778015136719
patch: if ( property != null ) {
rank: 979
score: 98.652587890625
patch: if ( size == 0 ) {
rank: 979
score: 98.63664245605469
patch: if ( null != type ) {
rank: 979
score: 98.61405181884766
patch: if ( type < true ) {
rank: 980
score: 99.1336337002841
patch: if ( type != null ) { return true ;
rank: 980
score: 98.71836853027344
patch: if ( key == null ) {
rank: 980
score: 98.6506118774414
patch: if ( value == 0 ) {
rank: 980
score: 98.65000915527344
patch: if ( parent != 1 ) {
rank: 980
score: 98.6423110961914
patch: if ( children != null ) {
rank: 980
score: 98.63929748535156
patch: if ( n != 0 ) {
rank: 980
score: 98.63397216796875
patch: if ( filter ( ) ) {
rank: 980
score: 98.61306762695312
patch: if ( length != 0 ) {
rank: 981
score: 98.68987274169922
patch: if ( ! parent == null )
rank: 981
score: 98.65511322021484
patch: if ( has != null ) {
rank: 981
score: 98.64110565185547
patch: if ( vars != null ) {
rank: 981
score: 98.63436889648438
patch: if ( content != 0 ) {
rank: 982
score: 99.1260477701823
patch: if ( type == null ) { return false ; }
rank: 982
score: 98.60533905029297
patch: if ( declaration == 1 ) {
rank: 983
score: 98.64077758789062
patch: if ( is CaMeL Local ) {
rank: 983
score: 98.61257934570312
patch: if ( options == null ) {
rank: 983
score: 98.6074447631836
patch: if ( parent != FUNCTION ) {
rank: 983
score: 98.60088348388672
patch: if ( size != 0 ) {
rank: 984
score: 99.044921875
patch: if ( declaration != null ) { return false ;
rank: 984
score: 98.60990142822266
patch: if ( type == type ) {
rank: 984
score: 98.59906005859375
patch: if ) { return false ; }
rank: 985
score: 98.68160247802734
patch: synchronized ( parent == null ) {
rank: 985
score: 98.63861846923828
patch: if ( input == null ) {
rank: 985
score: 98.6051025390625
patch: if ( options != null ) {
rank: 985
score: 98.59749603271484
patch: if ( node != 0 ) {
rank: 986
score: 98.66963958740234
patch: if ( module == null ) {
rank: 986
score: 98.60677337646484
patch: if ( matches > 0 ) {
rank: 986
score: 98.59555053710938
patch: if ( root != 0 ) {
rank: 987
score: 99.02168412642045
patch: if ( type != null || type != null )
rank: 987
score: 98.66429901123047
patch: if ( property == null ) {
rank: 987
score: 98.62460327148438
patch: if ( null == type ) {
rank: 987
score: 98.6015853881836
patch: if ( type instanceof Character ) {
rank: 987
score: 98.59812927246094
patch: if ( match > 0 ) {
rank: 987
score: 98.5912857055664
patch: if ( name != FUNCTION ) {
rank: 987
score: 98.58460998535156
patch: if ( declaration != 1 ) {
rank: 988
score: 98.59552001953125
patch: if ( type & type ) {
rank: 988
score: 98.58236694335938
patch: if ( n == 0 ) {
rank: 989
score: 98.61895751953125
patch: if ( list != null ) {
rank: 989
score: 98.59120178222656
patch: if ( has > 1 ) {
rank: 989
score: 98.58738708496094
patch: if ( type instanceof Class ) {
rank: 989
score: 98.57003784179688
patch: if ( n != null ) {
rank: 990
score: 98.95289306640625
patch: if ( type != null || false ) {
rank: 990
score: 98.62438201904297
patch: if ( length > 0 ) {
rank: 990
score: 98.61856842041016
patch: if ( type > FUNCTION ) {
rank: 990
score: 98.58311462402344
patch: if ( type != Type ) {
rank: 990
score: 98.58087158203125
patch: if ( parent instanceof Type ) {
rank: 990
score: 98.58055877685547
patch: if ( length == 0 ) {
rank: 991
score: 98.58035278320312
patch: if ( type instanceof Enum ) {
rank: 991
score: 98.58028411865234
patch: switch ( type ) { else {
rank: 991
score: 98.57022094726562
patch: if ( type >= null ) {
rank: 992
score: 98.56539154052734
patch: if ( ) { return true ;
rank: 993
score: 98.63899993896484
patch: if ( this == null ) {
rank: 993
score: 98.60810852050781
patch: if ( element == FUNCTION ) {
rank: 993
score: 98.57498168945312
patch: if ( this != 0 ) {
rank: 993
score: 98.10911051432292
patch: if ( false ) {
rank: 994
score: 98.39252580915179
patch: if ( type . ) {
rank: 994
score: 98.35367838541667
patch: if ( true ) {
rank: 994
score: 97.89434204101562
patch: if ( true )
rank: 995
score: 98.6117935180664
patch: if ( null != declaration ) {
rank: 995
score: 98.57461547851562
patch: if ( type != 1 ) {
rank: 995
score: 98.251220703125
patch: if ( ! ) {
rank: 995
score: 97.858544921875
patch: if ( false )
rank: 996
score: 98.5724105834961
patch: if ( type == false ) {
rank: 996
score: 98.37601143973214
patch: if ( type instanceof Type )
rank: 996
score: 97.84267578125
patch: if ( ) {
rank: 996
score: 97.0625
patch: return false ;
rank: 997
score: 98.59857177734375
patch: if ( column != null ) {
rank: 997
score: 98.56632995605469
patch: if ( aliasing CaMeL Gets ) {
rank: 997
score: 98.34438650948661
patch: if ( type != null )
rank: 997
score: 97.05360412597656
patch: return true ;
rank: 997
score: 96.41835530598958
patch: / *
rank: 998
score: 98.5630874633789
patch: if ( filter != 0 ) {
rank: 998
score: 97.64742431640624
patch: if ( ! {
rank: 998
score: 96.89803314208984
patch: if ) {
rank: 998
score: 96.1282958984375
patch: try {
rank: 998
score: 96.09368896484375
patch: for (
rank: 998
score: 96.04800415039062
patch: * /
rank: 999
score: 96.36060587565105
patch: else {
rank: 999
score: 95.89168294270833
patch: / /
rank: 999
score: 95.8905029296875
patch: if (
rank: 1000
score: 94.47903442382812
patch: }
rank: 1000
score: 93.56147766113281
patch: final
rank: 1000
score: 93.47360229492188
patch: else
rank: 1000
score: 93.31427764892578
patch: {
