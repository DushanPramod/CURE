rank: 1
score: 99.78901672363281
patch: return false ;
rank: 2
score: 99.57830810546875
patch: return true ;
rank: 2
score: 99.53265935724431
patch: return search CaMeL Chars [ j ] == ch ;
rank: 2
score: 99.48222045898437
patch: return false ; }
rank: 2
score: 99.29574584960938
patch: return false ; } return false ;
rank: 2
score: 99.24577113560268
patch: return false ; return false ;
rank: 3
score: 99.24620564778645
patch: return false ; } }
rank: 3
score: 99.2305908203125
patch: . return false ;
rank: 3
score: 99.13931710379464
patch: return false ; return true ;
rank: 3
score: 98.817138671875
patch: CaMeL do = false ; return false ;
rank: 4
score: 99.349755859375
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) ;
rank: 4
score: 99.33772583007813
patch: return true ; }
rank: 4
score: 99.29031137319711
patch: return contains CaMeL None ( cs , search CaMeL Chars ) ;
rank: 4
score: 99.23910183376736
patch: return search CaMeL Chars [ j ] ;
rank: 4
score: 99.23263888888889
patch: return false ; } } return false ;
rank: 4
score: 99.22769775390626
patch: CaMeL return false ;
rank: 4
score: 99.10352172851563
patch: return false ; ;
rank: 4
score: 98.80400739397321
patch: return 0 ; return false ;
rank: 5
score: 99.26205105251736
patch: return contains CaMeL None ( cs ) ;
rank: 5
score: 99.16915130615234
patch: return false ; } } return ;
rank: 5
score: 99.14029269748264
patch: . char CaMeL At ( j ) ;
rank: 5
score: 99.09699249267578
patch: return false ; return false ; ;
rank: 5
score: 98.75809733072917
patch: CaMeL ch = false ; return false ;
rank: 6
score: 99.2897198016827
patch: return ( search CaMeL Chars [ j ] == ch ) ;
rank: 6
score: 99.26619466145833
patch: return true ; } }
rank: 6
score: 99.2195712002841
patch: return search CaMeL Chars [ j ] != ch ;
rank: 6
score: 99.13074840198864
patch: . char CaMeL At ( i + 1 ) ;
rank: 6
score: 99.12994854266827
patch: if ( search CaMeL Chars [ j ] == ch ) {
rank: 6
score: 99.07795061383929
patch: return false ; return null ;
rank: 6
score: 98.73740059988839
patch: return true ; return false ;
rank: 7
score: 99.26532389322917
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) ;
rank: 7
score: 99.213134765625
patch: return contains CaMeL None ( search CaMeL Chars ) ;
rank: 7
score: 99.14264526367188
patch: return String . index CaMeL Of ( String )
rank: 7
score: 99.12797546386719
patch: return false ; } return true ;
rank: 7
score: 99.1257832845052
patch: return ( false ) ;
rank: 7
score: 99.12290649414062
patch: . return true ;
rank: 7
score: 98.72093370225694
patch: CaMeL sum = false ; return false ;
rank: 8
score: 99.21653395432692
patch: return this . search CaMeL Chars [ j ] == ch ;
rank: 8
score: 99.18923950195312
patch: return cs . contains CaMeL None ( search CaMeL Chars [ j ] ) ;
rank: 8
score: 99.1854607077206
patch: String . index CaMeL Of ( String . index CaMeL Of ( String ) ) ;
rank: 8
score: 99.13531494140625
patch: String . index CaMeL Of ( String )
rank: 8
score: 99.10376993815105
patch: return false ; } else
rank: 8
score: 99.10313831676136
patch: . char CaMeL At ( j + 1 ) ;
rank: 8
score: 99.09783935546875
patch: return ! false ; }
rank: 8
score: 99.04656304253473
patch: CaMeL Number = false ; return false ;
rank: 8
score: 98.7140121459961
patch: return 0 ;
rank: 9
score: 99.21181640625
patch: return cs . contains CaMeL None ( ) ;
rank: 9
score: 99.18573552911931
patch: return search CaMeL Chars [ i ] == ch ;
rank: 9
score: 99.18313937717014
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) ;
rank: 9
score: 99.12019653320313
patch: Plane return false ;
rank: 9
score: 99.0925625887784
patch: . char CaMeL At ( j , false ) ;
rank: 9
score: 99.08901977539062
patch: if ( search CaMeL Chars [ j ] == ch )
rank: 9
score: 99.08742947048611
patch: return false ; } else return false ;
rank: 9
score: 99.08024088541667
patch: . return false ; }
rank: 9
score: 99.02385796440973
patch: CaMeL Exception = false ; return false ;
rank: 9
score: 98.69740295410156
patch: return false ; ; return false ;
rank: 10
score: 99.18057105654762
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length ) ;
rank: 10
score: 99.17393663194444
patch: return cs . contains CaMeL None ( cs . char CaMeL At ( j ) ) ;
rank: 10
score: 99.08422088623047
patch: return false ; return false ; }
rank: 10
score: 99.07859971788194
patch: . char CaMeL At ( i ) ;
rank: 10
score: 99.0713223544034
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 10
score: 99.0572509765625
patch: return ( false , false ) ;
rank: 10
score: 99.01453314887152
patch: CaMeL Range = false ; return false ;
rank: 10
score: 98.66515350341797
patch: return 0 ; ; return false ;
rank: 11
score: 99.0760498046875
patch: return true ; } return false ;
rank: 11
score: 99.05482066761364
patch: return new String . index CaMeL Of ( String )
rank: 11
score: 99.05253092447917
patch: return false ; } } return true ;
rank: 11
score: 99.00569915771484
patch: return false ; return true ; ;
rank: 11
score: 98.66046142578125
patch: ( false ) ; return false ;
rank: 12
score: 99.19979154146634
patch: return String . index CaMeL Of ( String ) == 0 ;
rank: 12
score: 99.17349446614584
patch: return contains CaMeL None ( search CaMeL Chars , search CaMeL Chars ) ;
rank: 12
score: 99.05067138671875
patch: return return false ;
rank: 12
score: 99.03016246448864
patch: . char CaMeL At ( i , false ) ;
rank: 12
score: 99.00409698486328
patch: return false ; return null ; ;
rank: 12
score: 98.65276421440973
patch: CaMeL Array CaMeL List ( false ) ;
rank: 13
score: 99.18623570033482
patch: return contains CaMeL None ( search CaMeL Chars [ j ] ) ;
rank: 13
score: 99.1484015969669
patch: return this . search CaMeL Chars [ j ] . contains CaMeL None ( ) ;
rank: 13
score: 99.06350368923611
patch: return true ; } } return false ;
rank: 13
score: 99.03157552083333
patch: return false ; ; }
rank: 13
score: 99.02854410807292
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 13
score: 99.00139825994319
patch: . char CaMeL At ( j , true ) ;
rank: 13
score: 98.98816596137152
patch: return this . false ; return false ;
rank: 13
score: 98.64867292131696
patch: return ; { return false ;
rank: 14
score: 99.18284606933594
patch: return ! search CaMeL Chars [ j ] . contains CaMeL None ( ) ;
rank: 14
score: 99.17152235243056
patch: return contains CaMeL None ( ch ) ;
rank: 14
score: 99.147705078125
patch: return cs . contains CaMeL None ( cs , search CaMeL Chars ) ;
rank: 14
score: 99.05192565917969
patch: return false ; } } if ;
rank: 14
score: 99.04076385498047
patch: return false ; } j ++ ;
rank: 14
score: 98.99662642045455
patch: . char CaMeL At ( ; return true ) ;
rank: 14
score: 98.98103550502232
patch: return true ; return true ;
rank: 14
score: 98.64187282986111
patch: CaMeL += ) ) ; return false ;
rank: 15
score: 99.18086547851563
patch: return ! search CaMeL Chars [ j ] ;
rank: 15
score: 99.14703728170956
patch: return search CaMeL Chars [ j ] == ch . to CaMeL String ( ) ;
rank: 15
score: 99.00396728515625
patch: p = false ; return true ;
rank: 15
score: 98.98563639322917
patch: return return false ; }
rank: 15
score: 98.98480779474431
patch: throw new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 15
score: 98.96787331321023
patch: . char CaMeL At ( i , 0 ) ;
rank: 15
score: 98.64012993706598
patch: CaMeL += ) false ; return false ;
rank: 16
score: 99.17544555664062
patch: return contains CaMeL None ( cs . char CaMeL At ( j ) ) ;
rank: 16
score: 99.16523960658482
patch: return search CaMeL Chars [ cs . char CaMeL At ( j )
rank: 16
score: 99.14574381510417
patch: return search CaMeL Chars [ i ] . contains CaMeL None ( ) ;
rank: 16
score: 99.04592895507812
patch: return false ; } else if ;
rank: 16
score: 98.98081461588542
patch: Plane return false ; }
rank: 16
score: 98.96204723011364
patch: . char CaMeL At ( j , $NUMBER$ ) ;
rank: 16
score: 98.62814670138889
patch: CaMeL = ) false ; return false ;
rank: 17
score: 99.16645951704545
patch: return contains CaMeL None ( cs , ch ) ;
rank: 17
score: 99.14810884915866
patch: return contains CaMeL None ( ch , search CaMeL Chars ) ;
rank: 17
score: 99.1443758877841
patch: return cs . contains CaMeL None ( ch ) ;
rank: 17
score: 99.02899169921875
patch: return false ; } else return ;
rank: 17
score: 98.99163818359375
patch: p = false ; return true ; }
rank: 17
score: 98.97938121448864
patch: return search CaMeL Chars [ j ] == $STRING$ ;
rank: 17
score: 98.95991654829545
patch: . char CaMeL At ( j , 1 ) ;
rank: 17
score: 98.94226684570313
patch: return this . false ; ; return false ;
rank: 17
score: 98.6264419555664
patch: return return false ; return false ;
rank: 18
score: 99.14720243566177
patch: return ( search CaMeL Chars . char CaMeL At ( j ) == ch ) ;
rank: 18
score: 99.14318084716797
patch: return null ;
rank: 18
score: 98.9912618001302
patch: return false ; } ;
rank: 18
score: 98.97930353338069
patch: String [ ] . index CaMeL Of ( String )
rank: 18
score: 98.96199544270833
patch: return search CaMeL Chars . to CaMeL String ( ) ;
rank: 18
score: 98.9577303799716
patch: . char CaMeL At ( j , i ) ;
rank: 18
score: 98.92653982979911
patch: return true ; return null ;
rank: 19
score: 99.1640155498798
patch: return cs . char CaMeL At ( j ) == ch ;
rank: 19
score: 99.1458984375
patch: return ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL
rank: 19
score: 98.99043579101563
patch: return is CaMeL Empty ? false : false ;
rank: 19
score: 98.97782759232955
patch: return super . contains CaMeL None ( cs ) ;
rank: 19
score: 98.95745294744319
patch: . char CaMeL At ( i , count ) ;
rank: 19
score: 98.92617797851562
patch: return true ; return false ; ;
rank: 19
score: 98.61380004882812
patch: return 0 != false ;
rank: 20
score: 99.1419677734375
patch: return contains CaMeL None ( search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 20
score: 98.99005805121527
patch: return false ; } if return false ;
rank: 20
score: 98.97210693359375
patch: return $STRING$ . equals ( ch ) ;
rank: 20
score: 98.95736694335938
patch: return search CaMeL Chars [ j ] ; }
rank: 20
score: 98.95490056818181
patch: . char CaMeL At ( j , 0 ) ;
rank: 20
score: 98.92314995659723
patch: CaMeL Number = false ; return true ;
rank: 20
score: 98.59134674072266
patch: return false ; return - 1 ;
rank: 21
score: 99.14142252604167
patch: return search CaMeL Chars . char CaMeL At ( j ) == ch ;
rank: 21
score: 99.12774103338069
patch: return cs . contains CaMeL None ( cs ) ;
rank: 21
score: 98.98260498046875
patch: return false ; } } else {
rank: 21
score: 98.9680419921875
patch: return Boolean . index CaMeL Of ( String )
rank: 21
score: 98.95624334161931
patch: throw new Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 21
score: 98.95366876775569
patch: . char CaMeL At ( false , i ) ;
rank: 21
score: 98.91765594482422
patch: return new String ( false ) ;
rank: 21
score: 98.58854675292969
patch: return ! false ; return false ;
rank: 22
score: 99.16060384114583
patch: return ( cs . char CaMeL At ( j ) == ch ) ;
rank: 22
score: 99.13951200597427
patch: return search CaMeL Chars . get ( ch ) . contains CaMeL None ( ) ;
rank: 22
score: 99.11620483398437
patch: return ch . contains CaMeL None ( ) ;
rank: 22
score: 98.97544860839844
patch: return true ; } } return ;
rank: 22
score: 98.97145385742188
patch: return is CaMeL Empty ? false : true ;
rank: 22
score: 98.9524658203125
patch: ! String . index CaMeL Of ( String )
rank: 22
score: 98.93363813920455
patch: . char CaMeL At ( false , j ) ;
rank: 22
score: 98.91754150390625
patch: CaMeL List . return false ; return false ;
rank: 22
score: 98.58242797851562
patch: CaMeL |= ) ; return false ;
rank: 23
score: 99.11619873046875
patch: return cs . contains CaMeL None ( search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 23
score: 98.96466742621527
patch: return is CaMeL Empty ( false ) ;
rank: 23
score: 98.96004486083984
patch: return null ; } return false ;
rank: 23
score: 98.94996134440105
patch: return ( cs ) ;
rank: 23
score: 98.91461736505681
patch: . char CaMeL At ( j , count ) ;
rank: 23
score: 98.91090393066406
patch: return false ; ; return true ;
rank: 23
score: 98.5760498046875
patch: return return ) ; return false ;
rank: 24
score: 99.14901912913604
patch: return search CaMeL Chars [ j ] . to CaMeL Char CaMeL Array ( ) ;
rank: 24
score: 99.13360595703125
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . to CaMeL String ( ) ;
rank: 24
score: 99.11492156982422
patch: return cs . contains CaMeL None ( search CaMeL Chars [ i ] ) ;
rank: 24
score: 98.96353759765626
patch: return is CaMeL Empty ( false ) ; }
rank: 24
score: 98.93934326171875
patch: else String . index CaMeL Of ( String )
rank: 24
score: 98.91452858664773
patch: . char CaMeL At ( i , true ) ;
rank: 24
score: 98.90887451171875
patch: CaMeL List . return false ; return true ;
rank: 25
score: 99.14783528645833
patch: return super . contains CaMeL None ( cs , search CaMeL Chars ) ;
rank: 25
score: 99.13235294117646
patch: return String . index CaMeL Of ( String ) . to CaMeL String ( ) ;
rank: 25
score: 98.95686645507813
patch: return is CaMeL Empty ( ch ) ; }
rank: 25
score: 98.95394461495536
patch: return false ; } return ;
rank: 25
score: 98.92911987304687
patch: return cs . is CaMeL Empty ( ) ;
rank: 25
score: 98.90889115767045
patch: return Boolean . TRUE . equals ( false ) ;
rank: 25
score: 98.90821668836806
patch: CaMeL Exception = false ; return true ;
rank: 25
score: 98.90333862304688
patch: return false ; } } } return true ;
rank: 25
score: 98.57122802734375
patch: return ! ) ; return false ;
rank: 26
score: 99.14515904017857
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL String ( ) ;
rank: 26
score: 99.10403006417411
patch: return search CaMeL Chars [ j ] . equals ( ch ) ;
rank: 26
score: 98.95127868652344
patch: p = false ; return false ;
rank: 26
score: 98.93557303292411
patch: return false ; } else {
rank: 26
score: 98.92843627929688
patch: return ( true ) ;
rank: 26
score: 98.90669759114583
patch: CaMeL List . return ( false ) ;
rank: 26
score: 98.9040860262784
patch: . char CaMeL At ( i , 1 ) ;
rank: 26
score: 98.89310455322266
patch: return false ; } i ++ ;
rank: 26
score: 98.56884765625
patch: return 0 == false ;
rank: 27
score: 99.12840440538194
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL
rank: 27
score: 98.95060511997768
patch: return false ; } } ;
rank: 27
score: 98.93141174316406
patch: return false ; else return false ;
rank: 27
score: 98.92811168323864
patch: return ( search CaMeL Chars [ j ] ) ;
rank: 27
score: 98.90573459201389
patch: return false ; return this . false ;
rank: 27
score: 98.88783772786458
patch: CaMeL false = false ; return true ;
rank: 27
score: 98.887451171875
patch: return true ; } j ++ ;
rank: 27
score: 98.56202043805804
patch: return false ; return 1 ;
rank: 28
score: 99.12482244318181
patch: return contains CaMeL None ( cs , cs ) ;
rank: 28
score: 99.09553745814732
patch: return search CaMeL Chars [ j ] . contains ( ch ) ;
rank: 28
score: 98.94654083251953
patch: return true ; } return true ;
rank: 28
score: 98.92457798549107
patch: return false ; break ; }
rank: 28
score: 98.9226318359375
patch: { String . index CaMeL Of ( String )
rank: 28
score: 98.90179443359375
patch: return null ; return false ;
rank: 28
score: 98.88390241350446
patch: return return false ; } }
rank: 28
score: 98.87577681107955
patch: . char CaMeL Count [ 0 ] = false ;
rank: 28
score: 98.56159210205078
patch: CaMeL *= ) ; return false ;
rank: 29
score: 99.12319711538461
patch: return cs . contains CaMeL None ( search CaMeL Chars ) ;
rank: 29
score: 99.08721564797794
patch: return cs . contains CaMeL None ( cs . to CaMeL String ( ) ) ;
rank: 29
score: 98.94425455729167
patch: return true ; } } return true ;
rank: 29
score: 98.91914367675781
patch: return false ; return true ; }
rank: 29
score: 98.91016496930804
patch: return ( String ) false ;
rank: 29
score: 98.9007568359375
patch: CaMeL Range = false ; return true ;
rank: 29
score: 98.86931694878473
patch: . return ( ch == $STRING$ ) ;
rank: 29
score: 98.56086730957031
patch: CaMeL = false ; return false ;
rank: 30
score: 99.13480377197266
patch: return cs . equals ( cs . char CaMeL At ( j ) ) ;
rank: 30
score: 99.12199964021382
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( String ) ) ;
rank: 30
score: 99.08265991210938
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals ( $STRING$ ) ;
rank: 30
score: 98.93380737304688
patch: return false ; } } } return false ;
rank: 30
score: 98.91511366102431
patch: return false ; } catch return false ;
rank: 30
score: 98.9006103515625
patch: return this . false ; ; return true ;
rank: 30
score: 98.89988356370192
patch: throw new Illegal CaMeL Argument CaMeL Exception ( , $STRING$ ) ;
rank: 30
score: 98.86873779296874
patch: Plane return true ;
rank: 30
score: 98.86739501953124
patch: $NUMBER$ . char CaMeL At ( j ) ;
rank: 30
score: 98.56079779730902
patch: CaMeL ; = false ; return false ;
rank: 31
score: 99.08025045955883
patch: return search CaMeL Chars [ j ] != ch . to CaMeL String ( ) ;
rank: 31
score: 98.93345133463542
patch: return is CaMeL Empty ( ch ) ;
rank: 31
score: 98.91487630208333
patch: return this . false ;
rank: 31
score: 98.89789428710938
patch: return new Array CaMeL List ( false ) ;
rank: 31
score: 98.86441040039062
patch: CaMeL ; return true ;
rank: 31
score: 98.8571533203125
patch: return 0 . [ j ] == ch ;
rank: 31
score: 98.55736626519098
patch: return 0 . 0 ; return false ;
rank: 32
score: 99.13079833984375
patch: . index CaMeL Of ( String . index CaMeL Of ( String ) ) ;
rank: 32
score: 99.07757098858173
patch: return cs . contains CaMeL None ( cs , ch ) ;
rank: 32
score: 98.92877875434027
patch: p = false ; return false ; }
rank: 32
score: 98.89752197265625
patch: return this . false ; return true ;
rank: 32
score: 98.8948974609375
patch: return ( ch ) ;
rank: 32
score: 98.86397298177083
patch: CaMeL false = true ; return true ;
rank: 32
score: 98.848876953125
patch: Plane return false ; } }
rank: 32
score: 98.5561752319336
patch: CaMeL += false ; return false ;
rank: 33
score: 99.12744140625
patch: return search CaMeL Chars [ j ] . char CaMeL At ( j ) ;
rank: 33
score: 99.07699730282738
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) . to CaMeL String ( ) ;
rank: 33
score: 98.89530436197917
patch: CaMeL Exception return false ;
rank: 33
score: 98.89244384765625
patch: return ! false ;
rank: 33
score: 98.86333673650569
patch: . char CaMeL At ( i , j ) ;
rank: 33
score: 98.82308349609374
patch: CaMeL String . index CaMeL Of ( String )
rank: 33
score: 98.55461290147569
patch: CaMeL do = false ; return true ;
rank: 34
score: 98.92403738839286
patch: return ( false ) ; }
rank: 34
score: 98.90735735212054
patch: return false ; } * /
rank: 34
score: 98.89321899414062
patch: CaMeL Range = false ;
rank: 34
score: 98.89176432291667
patch: int search CaMeL Len = search CaMeL Chars . length ;
rank: 34
score: 98.8625732421875
patch: . char CaMeL At ( i + 1 )
rank: 34
score: 98.54667445591518
patch: return 0 ; return 1 ;
rank: 35
score: 99.12669881184895
patch: return ( String ) search CaMeL Chars [ j ] ;
rank: 35
score: 98.92301432291667
patch: return true ; ; }
rank: 35
score: 98.90549045138889
patch: return true ; } else return false ;
rank: 35
score: 98.876025390625
patch: return true ; ;
rank: 35
score: 98.86207275390625
patch: . char CaMeL At ( j , false )
rank: 35
score: 98.53953043619792
patch: return ; = false ; return false ;
rank: 36
score: 99.0538330078125
patch: return this . cs . contains CaMeL None ( cs , search CaMeL Chars ) ;
rank: 36
score: 98.91682434082031
patch: return false ? false : false ;
rank: 36
score: 98.88654119318181
patch: break ? String . index CaMeL Of ( String )
rank: 36
score: 98.86749877929688
patch: CaMeL Range . return false ; return false ;
rank: 36
score: 98.86102294921875
patch: . char CaMeL At ( i , false )
rank: 36
score: 98.81307983398438
patch: return index CaMeL Of ( String ) false ;
rank: 36
score: 98.53837585449219
patch: return 0 ; while return false ;
rank: 37
score: 99.11574300130208
patch: return ! search CaMeL Chars [ j ] == ch ;
rank: 37
score: 99.10714901194854
patch: String . index CaMeL Of ( String . index CaMeL Of ( ch ) ) ;
rank: 37
score: 98.89445495605469
patch: return false ; } break ; }
rank: 37
score: 98.88531024639423
patch: return super . contains CaMeL None ( search CaMeL Chars ) ;
rank: 37
score: 98.866845703125
patch: CaMeL Range . return false ; return true ;
rank: 37
score: 98.86083984375
patch: . char CaMeL At ( i + $NUMBER$ ) ;
rank: 37
score: 98.80799696180556
patch: return search CaMeL Chars [ i ] ;
rank: 37
score: 98.53356170654297
patch: return return 1 ; return false ;
rank: 38
score: 99.10620880126953
patch: return super . contains CaMeL None ( search CaMeL Chars [ j ] ) ;
rank: 38
score: 99.10456399356617
patch: String . index CaMeL Of ( String . index CaMeL Of ( $STRING$ ) ) ;
rank: 38
score: 99.05201416015625
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals ( ch ) ;
rank: 38
score: 98.9126708984375
patch: return true ; } } } return false ;
rank: 38
score: 98.88711547851562
patch: return false ; break ; } }
rank: 38
score: 98.88460083007813
patch: return return true ;
rank: 38
score: 98.86164093017578
patch: return true ; return true ; ;
rank: 38
score: 98.85976340553977
patch: . char CaMeL At ( j + $NUMBER$ ) ;
rank: 39
score: 99.10092397836539
patch: return String . index CaMeL Of ( String ) == 1 ;
rank: 39
score: 99.0992431640625
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL
rank: 39
score: 99.05169270833333
patch: return search CaMeL Chars [ j ] < search CaMeL Chars . length ;
rank: 39
score: 98.91175842285156
patch: c = false ; return true ;
rank: 39
score: 98.88361358642578
patch: return contains CaMeL None ( ) ;
rank: 39
score: 98.86026763916016
patch: return true ; return null ; ;
rank: 39
score: 98.8415860262784
patch: return Boolean . value CaMeL Of ( false ) ;
rank: 39
score: 98.80706176757812
patch: Plane String . index CaMeL Of ( String )
rank: 40
score: 99.09968118106617
patch: char . index CaMeL Of ( String . index CaMeL Of ( String ) ) ;
rank: 40
score: 99.0971042798913
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL
rank: 40
score: 99.05162464488636
patch: return cs . contains CaMeL None ( cs , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 40
score: 98.88315836588542
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 40
score: 98.88069152832031
patch: return true ; return false ; }
rank: 40
score: 98.85700141059027
patch: CaMeL String = false ; return false ;
rank: 40
score: 98.8412198153409
patch: CaMeL Enum . char CaMeL At ( j ) ;
rank: 40
score: 98.8032470703125
patch: String . index CaMeL Of ( String ) )
rank: 40
score: 98.51859537760417
patch: return 0 != false ; return false ;
rank: 41
score: 99.09891183035714
patch: return ( String ) cs . char CaMeL At ( j ) ;
rank: 41
score: 98.90093994140625
patch: return ! is CaMeL Empty ( ch ) ;
rank: 41
score: 98.87987060546875
patch: return false ; } } if return false ;
rank: 41
score: 98.86782836914062
patch: return cs . to CaMeL Char CaMeL Array ( ) ;
rank: 41
score: 98.85654025607639
patch: CaMeL Error = false ; return false ;
rank: 41
score: 98.83948863636364
patch: . char CaMeL At ( ; return false ) ;
rank: 41
score: 98.5185317993164
patch: return ; = ; return false ;
rank: 42
score: 99.09611293247768
patch: return cs . equals ( search CaMeL Chars [ j ] ) ;
rank: 42
score: 99.09381103515625
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of (
rank: 42
score: 99.04807535807292
patch: return cs . contains CaMeL None ( cs . char CaMeL At ( i ) ) ;
rank: 42
score: 98.90076555524554
patch: . return false ; } }
rank: 42
score: 98.87513732910156
patch: return false ; } if false ;
rank: 42
score: 98.8620096842448
patch: return contains CaMeL None ;
rank: 42
score: 98.85549926757812
patch: CaMeL Number return false ;
rank: 42
score: 98.83907063802083
patch: . char CaMeL At ( j , ;
rank: 42
score: 98.5168685913086
patch: CaMeL return ) ; return false ;
rank: 43
score: 99.09347873263889
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String ) ) ;
rank: 43
score: 99.04657303659539
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) { return false ;
rank: 43
score: 98.90030246310764
patch: . return false ; } return true ;
rank: 43
score: 98.8739013671875
patch: return is CaMeL True ( false ) ;
rank: 43
score: 98.86050851004464
patch: if ( search CaMeL Len < search CaMeL Chars . length ) {
rank: 43
score: 98.83892822265625
patch: . char CaMeL At ( i , ;
rank: 43
score: 98.78815307617188
patch: String . index CaMeL Of ( ch ) ;
rank: 43
score: 98.51594543457031
patch: return true ; ; return false ;
rank: 44
score: 99.04391479492188
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ;
rank: 44
score: 98.87034912109375
patch: return false ; } else return false ; }
rank: 44
score: 98.85785466974431
patch: return { String . index CaMeL Of ( String )
rank: 44
score: 98.85105590820312
patch: return get CaMeL Instance ( ) . false ;
rank: 44
score: 98.83718039772727
patch: . char CaMeL At ( j - 1 ) ;
rank: 44
score: 98.78324584960937
patch: return true ; } } } return true ;
rank: 44
score: 98.51177300347223
patch: CaMeL Builder . return ( false ) ;
rank: 45
score: 99.09144993832237
patch: try { char . index CaMeL Of ( String . index CaMeL Of ( String ) ) ;
rank: 45
score: 99.0894711143092
patch: String . index CaMeL Of ( String . char CaMeL At ( j ) , ch ) ;
rank: 45
score: 99.04281761532738
patch: return cs . contains CaMeL None ( cs , search CaMeL Chars . to CaMeL String ( ) ) ;
rank: 45
score: 98.89758978949652
patch: . return ( false , false ) ;
rank: 45
score: 98.86984592013889
patch: return null ; } } return false ;
rank: 45
score: 98.85569411057692
patch: return cs . char CaMeL At ( i ) == ch ;
rank: 45
score: 98.84669712611607
patch: CaMeL Range false return false ;
rank: 45
score: 98.8365234375
patch: $NUMBER$ . char CaMeL At ( i ) ;
rank: 45
score: 98.77956136067708
patch: Plane return true ; }
rank: 45
score: 98.51143101283482
patch: return is ( false ) ;
rank: 46
score: 99.08927001953126
patch: return contains CaMeL None ( cs , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 46
score: 99.08742065429688
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String ) ) == 0 ;
rank: 46
score: 99.04122161865234
patch: Plane return search CaMeL Chars [ j ] . contains CaMeL None ( ) ;
rank: 46
score: 98.89701538085937
patch: return is CaMeL Empty ? true : false ;
rank: 46
score: 98.86689104352679
patch: return false ; } catch ;
rank: 46
score: 98.85482177734374
patch: return cs . to CaMeL String ( ) ;
rank: 46
score: 98.84511311848958
patch: CaMeL Exception return false ; return false ;
rank: 46
score: 98.8358154296875
patch: . char CaMeL At ( 0 , j ) ;
rank: 46
score: 98.778759765625
patch: return 0 . [ i ] == ch ;
rank: 46
score: 98.50968424479167
patch: CaMeL length = false ; return false ;
rank: 47
score: 99.08919031479779
patch: byte . index CaMeL Of ( String . index CaMeL Of ( String ) ) ;
rank: 47
score: 99.08591530539773
patch: return String . index CaMeL Of ( String ) ;
rank: 47
score: 98.86636013454861
patch: CaMeL State . return ( false ) ;
rank: 47
score: 98.85196940104167
patch: if ( j >= search CaMeL Chars . length ) {
rank: 47
score: 98.84417724609375
patch: CaMeL Number return false ; return false ;
rank: 47
score: 98.83420632102273
patch: . char CaMeL At ( j , $STRING$ ) ;
rank: 47
score: 98.77662004743304
patch: return false ; } break ;
rank: 47
score: 98.50933074951172
patch: return ; return ; = false ;
rank: 48
score: 99.08561437270221
patch: return String . index CaMeL Of ( String ) < search CaMeL Chars . length ;
rank: 48
score: 99.0376838235294
patch: return search CaMeL Chars . to CaMeL String ( ) . equals ( $STRING$ ) ;
rank: 48
score: 98.89307512555804
patch: return ! false ; } }
rank: 48
score: 98.84896240234374
patch: this String . index CaMeL Of ( String )
rank: 48
score: 98.8431396484375
patch: CaMeL Range return false ;
rank: 48
score: 98.8337735262784
patch: . char CaMeL At ( i , $NUMBER$ ) ;
rank: 48
score: 98.50771077473958
patch: CaMeL do . false ; return false ;
rank: 49
score: 99.08537023207721
patch: return search CaMeL Chars . get ( ch ) . to CaMeL String ( ) ;
rank: 49
score: 99.08140733506944
patch: return search CaMeL Chars [ j ] . char CaMeL At ( j ) == ch ;
rank: 49
score: 99.03716681985294
patch: return search CaMeL Chars [ j ] . index CaMeL Of ( String . index CaMeL
rank: 49
score: 98.88833957248264
patch: return $STRING$ . equals ( false ) ;
rank: 49
score: 98.86156005859375
patch: return false ; } else if return false ;
rank: 49
score: 98.83909301757812
patch: CaMeL Exception = false ; if return false ;
rank: 49
score: 98.83246404474431
patch: . char CaMeL At ( 0 , i ) ;
rank: 49
score: 98.769677734375
patch: return this . index CaMeL Of ( String )
rank: 49
score: 98.50593397352431
patch: return false ; return ; = false ;
rank: 50
score: 99.0847919170673
patch: return contains CaMeL None ( search CaMeL Chars , ch ) ;
rank: 50
score: 99.08135986328125
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ;
rank: 50
score: 98.88441467285156
patch: return ( false , true ) ;
rank: 50
score: 98.85999891493056
patch: return false ; return false ; } }
rank: 50
score: 98.84632286658653
patch: throw new Illegal CaMeL State CaMeL Exception ( , $STRING$ ) ;
rank: 50
score: 98.76692708333333
patch: return cs . equals ( ch ) ;
rank: 50
score: 98.50513373480902
patch: CaMeL mid = false ; return false ;
rank: 51
score: 99.0828515625
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . last CaMeL Index CaMeL
rank: 51
score: 99.08109283447266
patch: return null . equals ( cs . char CaMeL At ( j ) ) ;
rank: 51
score: 99.03646689967105
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) { return true ;
rank: 51
score: 98.8806396484375
patch: return $STRING$ . equals ( ch ) ; }
rank: 51
score: 98.85902404785156
patch: return true ; } } if ;
rank: 51
score: 98.8460184733073
patch: if ( j == search CaMeL Chars . length ) {
rank: 51
score: 98.83071899414062
patch: CaMeL Number = false ;
rank: 51
score: 98.8255615234375
patch: . return ( false ) ;
rank: 51
score: 98.76527404785156
patch: return ( false || false ) ;
rank: 51
score: 98.50484890407986
patch: CaMeL Builder = false ; return false ;
rank: 52
score: 99.07798856847427
patch: return cs . char CaMeL At ( j ) . to CaMeL String ( ) ;
rank: 52
score: 99.02959735576923
patch: return search CaMeL Chars [ j ] == ch . value ;
rank: 52
score: 98.88020155164931
patch: c = false ; return true ; }
rank: 52
score: 98.85273573133681
patch: return false ; } else return true ;
rank: 52
score: 98.84550258091518
patch: if ( search CaMeL Len >= search CaMeL Chars . length ) {
rank: 52
score: 98.82944161551339
patch: CaMeL Range ; return false ;
rank: 52
score: 98.82405395507813
patch: . return $STRING$ . equals ( ch ) ;
rank: 52
score: 98.76448974609374
patch: search CaMeL Chars [ j ] = ch ;
rank: 52
score: 98.50403594970703
patch: false = false ; return false ;
rank: 53
score: 99.08202406939338
patch: return String . index CaMeL Of ( String ) >= search CaMeL Chars . length ;
rank: 53
score: 99.0741958618164
patch: return $STRING$ . equals ( cs . char CaMeL At ( j ) ) ;
rank: 53
score: 99.02948608398438
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At (
rank: 53
score: 98.8799560546875
patch: return is CaMeL Empty ? true : true ;
rank: 53
score: 98.8524169921875
patch: return false ; } if ;
rank: 53
score: 98.82303873697917
patch: CaMeL Range return false ; return false ;
rank: 53
score: 98.8209228515625
patch: return Boolean . TRUE . equals ( $STRING$ ) ;
rank: 53
score: 98.50273895263672
patch: CaMeL List ( ; return false ;
rank: 54
score: 99.08201688878677
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String ) )
rank: 54
score: 99.07276916503906
patch: return cs . contains ( cs . char CaMeL At ( j ) ) ;
rank: 54
score: 99.02938988095238
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) . contains CaMeL None ( ) ;
rank: 54
score: 98.87542724609375
patch: return true ; } } ;
rank: 54
score: 98.851806640625
patch: return ; } } return false ;
rank: 54
score: 98.84162248883929
patch: if ( search CaMeL Chars . length < cs CaMeL Len ) {
rank: 54
score: 98.82087846235795
patch: . char CaMeL Count [ i ] = false ;
rank: 54
score: 98.81926727294922
patch: CaMeL List . iterator return false ;
rank: 54
score: 98.50028228759766
patch: CaMeL ( ) ; return false ;
rank: 55
score: 99.08191448709239
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL
rank: 55
score: 99.07212477463942
patch: return String . index CaMeL Of ( String ) != 0 ;
rank: 55
score: 98.87264251708984
patch: m = false ; return true ;
rank: 55
score: 98.84998575846355
patch: return false ; break ;
rank: 55
score: 98.84149780273438
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 55
score: 98.819677734375
patch: CaMeL return true ;
rank: 55
score: 98.76166381835938
patch: return false ; } cs CaMeL Len ++ ;
rank: 55
score: 98.49738905164931
patch: return 0 == false ; return false ;
rank: 56
score: 99.07900602921195
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL
rank: 56
score: 99.07203892299107
patch: super . contains CaMeL None ( cs , search CaMeL Chars ) ;
rank: 56
score: 99.0271728515625
patch: return cs . contains CaMeL None ( search CaMeL Chars . char CaMeL At ( i ) ) ;
rank: 56
score: 98.87018432617188
patch: return is CaMeL Empty ( ch , false ;
rank: 56
score: 98.8498764038086
patch: return false ; } if return ;
rank: 56
score: 98.83988734654018
patch: if ( search CaMeL Chars . length < search CaMeL Len ) {
rank: 56
score: 98.81531372070313
patch: CaMeL ; if ( false ) return true ;
rank: 56
score: 98.81495012555804
patch: CaMeL List . return false ;
rank: 56
score: 98.49212646484375
patch: CaMeL ch = false ; return true ;
rank: 57
score: 99.07145552201705
patch: return ! cs . contains CaMeL None ( ) ;
rank: 57
score: 99.02659970238095
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . contains CaMeL None ( ) ;
rank: 57
score: 98.8692626953125
patch: return false ? false : true ;
rank: 57
score: 98.83678181966145
patch: return return search CaMeL Chars [ j ] == ch ;
rank: 57
score: 98.8145751953125
patch: . char CaMeL At ( i )
rank: 57
score: 98.8142333984375
patch: CaMeL Number = false ; if return false ;
rank: 57
score: 98.74886067708333
patch: return return true ; }
rank: 57
score: 98.49137369791667
patch: return 0 ; break ;
rank: 58
score: 99.07595703125
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . last CaMeL Index CaMeL
rank: 58
score: 99.07049560546875
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String )
rank: 58
score: 98.86610107421875
patch: return is CaMeL Empty ( false , false ;
rank: 58
score: 98.84257507324219
patch: return true ; } else if ;
rank: 58
score: 98.83610395951705
patch: return cs . search CaMeL Chars [ j ] ;
rank: 58
score: 98.8139419555664
patch: return new return ( false ) ;
rank: 58
score: 98.74615478515625
patch: return false ; index CaMeL Of ( String )
rank: 58
score: 98.48925103081598
patch: CaMeL ch return false ; return false ;
rank: 59
score: 99.07487407483552
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Len ) ;
rank: 59
score: 99.07014266304348
patch: return String . index CaMeL Of ( String ) . to CaMeL String ( ) . to CaMeL String ( ) ;
rank: 59
score: 99.02388822115384
patch: return search CaMeL Chars [ j ] < ch . length ;
rank: 59
score: 98.86394391741071
patch: return false ; } ; }
rank: 59
score: 98.84176635742188
patch: return false ; if return false ;
rank: 59
score: 98.83400472005208
patch: throw new Illegal CaMeL Argument CaMeL Exception ( String ) ;
rank: 59
score: 98.81258544921874
patch: CaMeL Range = false ; if return false ;
rank: 59
score: 98.80408393012152
patch: CaMeL ; if ( false ) break ;
rank: 59
score: 98.48687744140625
patch: return ! 1 ; return false ;
rank: 60
score: 99.07339680989584
patch: return contains CaMeL None ( search CaMeL Chars , search CaMeL Len ) ;
rank: 60
score: 99.06861290564903
patch: return cs . char CaMeL At ( j ) != ch ;
rank: 60
score: 99.02367446001838
patch: return search CaMeL Chars . to CaMeL String ( ) . equals ( ch ) ;
rank: 60
score: 98.861328125
patch: return false false ; }
rank: 60
score: 98.83984375
patch: return is ; } return false ;
rank: 60
score: 98.8333740234375
patch: if ( search CaMeL Chars . length >= cs CaMeL Len ) {
rank: 60
score: 98.80863647460937
patch: return false ; return false ; return false ;
rank: 60
score: 98.8023193359375
patch: . char CaMeL At ( i + 1 ;
rank: 60
score: 98.74237670898438
patch: ( search CaMeL Chars [ j ] ) ;
rank: 60
score: 98.48521931966145
patch: return ; = false ;
rank: 61
score: 99.07333713107639
patch: return search CaMeL Chars . equals ( String . index CaMeL Of ( String ) ) ;
rank: 61
score: 99.06712995256696
patch: return String . index CaMeL Of ( String ) != - 1 ;
rank: 61
score: 99.01983087713069
patch: return search CaMeL Chars [ j ] < ch ;
rank: 61
score: 98.8592020670573
patch: return true ; } ;
rank: 61
score: 98.83671264648437
patch: return false ; } else { return false ;
rank: 61
score: 98.8331298828125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 61
score: 98.8068135579427
patch: CaMeL Exception = false ;
rank: 61
score: 98.79017333984375
patch: . char CaMeL At ( ; break ; }
rank: 61
score: 98.74146270751953
patch: return true ; } i ++ ;
rank: 61
score: 98.48440212673611
patch: CaMeL capacity = false ; return false ;
rank: 62
score: 99.0724346454327
patch: return search CaMeL Chars [ j ] == search CaMeL Chars ;
rank: 62
score: 99.06703186035156
patch: return contains CaMeL None ( cs , search CaMeL Chars [ j ] ) ;
rank: 62
score: 99.01963895909927
patch: return search CaMeL Chars [ j ] . length < search CaMeL Chars . length ;
rank: 62
score: 98.8515625
patch: return false ; } this . return true ;
rank: 62
score: 98.83250075120192
patch: return ( cs . char CaMeL At ( j ) ) ;
rank: 62
score: 98.80438232421875
patch: CaMeL Exception return false ; } return false ;
rank: 62
score: 98.7897237141927
patch: CaMeL return false ; }
rank: 62
score: 98.74027099609376
patch: return new Char CaMeL Sequence ( ch ) ;
rank: 62
score: 98.48311360677083
patch: CaMeL |= ) ) ; return false ;
rank: 63
score: 99.07212477463942
patch: return contains CaMeL None ( cs , search CaMeL Len ) ;
rank: 63
score: 99.06397162543402
patch: return contains CaMeL None ( cs . char CaMeL At ( j ) , ch ) ;
rank: 63
score: 99.01749913832721
patch: try { return search CaMeL Chars [ j ] . contains CaMeL None ( ) ;
rank: 63
score: 98.85085623604911
patch: return false ; ; } }
rank: 63
score: 98.83229573567708
patch: return ( Char CaMeL Sequence ) false ;
rank: 63
score: 98.8300069173177
patch: return true ; } else
rank: 63
score: 98.80207061767578
patch: return null ; return false ; ;
rank: 63
score: 98.73697662353516
patch: Plane [ j ] return false ;
rank: 63
score: 98.48238796657986
patch: CaMeL += ) 1 ; return false ;
rank: 64
score: 99.07035064697266
patch: return index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL
rank: 64
score: 99.06184188179348
patch: . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ;
rank: 64
score: 99.01360529119319
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . starts CaMeL With ( $STRING$ ) ;
rank: 64
score: 98.8476318359375
patch: return ! is CaMeL Empty ( false ) ;
rank: 64
score: 98.83147638494319
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 64
score: 98.82717895507812
patch: return is CaMeL Empty ;
rank: 64
score: 98.7984619140625
patch: CaMeL List . false return true ;
rank: 64
score: 98.78543090820312
patch: CaMeL ; if ( false ) return false ;
rank: 64
score: 98.48231506347656
patch: return - ) ; return false ;
rank: 65
score: 99.07026977539063
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length ;
rank: 65
score: 99.01009114583333
patch: Plane return search CaMeL Chars [ j ] == ch ;
rank: 65
score: 98.84247589111328
patch: return false ; } } * /
rank: 65
score: 98.8304443359375
patch: return ( cs , search CaMeL Chars ) ;
rank: 65
score: 98.8266372680664
patch: return true ; } else return ;
rank: 65
score: 98.79521348741319
patch: CaMeL List = false ; return false ;
rank: 65
score: 98.73095024956598
patch: String . index CaMeL Of ( ch )
rank: 65
score: 98.47970581054688
patch: return 0 ; return - 1 ;
rank: 66
score: 99.06002807617188
patch: return ! search CaMeL Chars [ j ] . to CaMeL String ( ) ;
rank: 66
score: 98.84141540527344
patch: c = false ; return false ;
rank: 66
score: 98.83036665482955
patch: if ( j == search CaMeL Chars . length )
rank: 66
score: 98.82434844970703
patch: return false ; } catch ; }
rank: 66
score: 98.79429626464844
patch: CaMeL List . false return false ;
rank: 66
score: 98.78106079101562
patch: . char CaMeL At ( i ) ) ;
rank: 66
score: 98.47956678602431
patch: CaMeL List ( ) ; return false ;
rank: 67
score: 99.06926163383152
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL
rank: 67
score: 99.05974578857422
patch: return contains CaMeL None ( search CaMeL Chars [ j ] , ch ) ;
rank: 67
score: 99.0089470358456
patch: return search CaMeL Chars [ j ] != null . to CaMeL String ( ) ;
rank: 67
score: 98.84026421440973
patch: m = false ; return true ; }
rank: 67
score: 98.82967122395833
patch: if ( i == search CaMeL Chars . length ) {
rank: 67
score: 98.81960042317708
patch: return return false ; } return false ;
rank: 67
score: 98.79309692382813
patch: return get CaMeL Instance ( ; return false ;
rank: 67
score: 98.77971540178571
patch: = false ; return true ;
rank: 67
score: 98.47901916503906
patch: return size ; { return false ;
rank: 68
score: 99.06734035326087
patch: return ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL At ( cs . char CaMeL
rank: 68
score: 99.00824444110577
patch: return search CaMeL Chars [ j ] == ch . length ;
rank: 68
score: 98.82957967122395
patch: v = cs . char CaMeL At ( i ) ;
rank: 68
score: 98.79234313964844
patch: return this . false ; ; ;
rank: 68
score: 98.7294921875
patch: return search CaMeL Chars [ i ] ; }
rank: 68
score: 98.47836642795139
patch: CaMeL sum = false ; return true ;
rank: 69
score: 99.06699916294643
patch: return cs . contains CaMeL None ( , search CaMeL Chars ) ;
rank: 69
score: 99.00782189002403
patch: return search CaMeL Chars [ cs CaMeL Len ] == ch ;
rank: 69
score: 98.8369384765625
patch: return is CaMeL Blank ( ch ) ; }
rank: 69
score: 98.8279559795673
patch: throw new Null CaMeL Pointer CaMeL Exception ( , $STRING$ ) ;
rank: 69
score: 98.78896658761161
patch: CaMeL Exception ; return false ;
rank: 69
score: 98.77133178710938
patch: . char CaMeL At ( false , i )
rank: 69
score: 98.728515625
patch: return index CaMeL Of ( ch ) ;
rank: 69
score: 98.47749546595982
patch: return 0 ; while false ;
rank: 70
score: 99.06692023026316
patch: return search CaMeL Chars . char CaMeL At ( j ) . to CaMeL String ( ) ;
rank: 70
score: 99.05781385633681
patch: return search CaMeL Chars [ j ] . equals CaMeL Ignore CaMeL Case ( ch ) ;
rank: 70
score: 99.0070467862216
patch: try { String . index CaMeL Of ( String )
rank: 70
score: 98.83658175998264
patch: return ( false , false ) ; }
rank: 70
score: 98.81492919921875
patch: return this . false ; } return false ;
rank: 70
score: 98.78754272460938
patch: return false ; return false ; return true ;
rank: 70
score: 98.76309204101562
patch: $NUMBER$ . return true ;
rank: 70
score: 98.72774658203124
patch: Char CaMeL Sequence [ j ] = ch ;
rank: 70
score: 98.47564697265625
patch: CaMeL do = ; return false ;
rank: 71
score: 99.0661556846217
patch: try { char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL
rank: 71
score: 99.0576680501302
patch: return search CaMeL Chars [ j ] == ch ; }
rank: 71
score: 99.006005859375
patch: return String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At (
rank: 71
score: 98.83505684988839
patch: return false ; } } }
rank: 71
score: 98.8240966796875
patch: return search CaMeL Chars [ j ] . length ;
rank: 71
score: 98.78666178385417
patch: CaMeL Boolean = false ; return false ;
rank: 71
score: 98.76240370008681
patch: . return ( ch != null ) ;
rank: 71
score: 98.72764282226562
patch: return ch . index CaMeL Of ( String )
rank: 71
score: 98.47515106201172
patch: return false ; return - false ;
rank: 72
score: 99.06608780570652
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length ) . length ;
rank: 72
score: 99.05758463541666
patch: return search CaMeL Chars [ j ] . get CaMeL Value ( ) ;
rank: 72
score: 99.00534292367789
patch: return cs . search CaMeL Chars [ j ] == ch ;
rank: 72
score: 98.83291625976562
patch: return false ; } this . return false ;
rank: 72
score: 98.82330322265625
patch: pos = cs . char CaMeL At ( i ) ;
rank: 72
score: 98.810595703125
patch: return false ; } if return false ; }
rank: 72
score: 98.78284369574652
patch: return false ; return false ; false ;
rank: 72
score: 98.76182861328125
patch: . char CaMeL At ( j ) * /
rank: 72
score: 98.72743225097656
patch: Plane [ j ] = false ;
rank: 72
score: 98.47444152832031
patch: CaMeL do . ; return false ;
rank: 73
score: 99.06289493336396
patch: return cs . contains CaMeL None ( search CaMeL Chars , search CaMeL Chars ) ;
rank: 73
score: 99.056103515625
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ;
rank: 73
score: 98.83254568917411
patch: CaMeL false . return false ;
rank: 73
score: 98.82044474283855
patch: if ( search CaMeL Chars . length > 0 ) {
rank: 73
score: 98.80908966064453
patch: return false ; for return false ;
rank: 73
score: 98.77981906467014
patch: CaMeL Range . return ( false ) ;
rank: 73
score: 98.76034545898438
patch: . char CaMeL At ( j ) ) ;
rank: 73
score: 98.72608642578125
patch: return search CaMeL Chars [ j ] == ch
rank: 73
score: 98.4718017578125
patch: CaMeL List ( ) . return false ;
rank: 74
score: 99.06144205729167
patch: return search CaMeL Chars . trim ( ) . length ( ) 1 ;
rank: 74
score: 99.00363498263889
patch: return cs . contains CaMeL None ( search CaMeL Chars [ cs CaMeL Len ] ) ;
rank: 74
score: 98.83238525390625
patch: . return false ; } } return true ;
rank: 74
score: 98.81940252130681
patch: break : String . index CaMeL Of ( String )
rank: 74
score: 98.80680541992187
patch: return return false ; } } return false ;
rank: 74
score: 98.77937316894531
patch: return new is ( false ) ;
rank: 74
score: 98.72481536865234
patch: return false ; } } break ;
rank: 74
score: 98.46839735243056
patch: CaMeL List return false ; return false ;
rank: 75
score: 99.0613654641544
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String ) ;
rank: 75
score: 98.83147430419922
patch: return true ? false : false ;
rank: 75
score: 98.8191426595052
patch: p = cs . char CaMeL At ( i ) ;
rank: 75
score: 98.80342407226563
patch: return false ; } } if ( false ;
rank: 75
score: 98.77799987792969
patch: return true ; ; return true ;
rank: 75
score: 98.75376586914062
patch: . char CaMeL At ( j + 1 ;
rank: 75
score: 98.72305908203126
patch: return new Char CaMeL Sequence ( cs ) ;
rank: 75
score: 98.46822781032986
patch: CaMeL Builder . false ; return false ;
rank: 76
score: 99.05867866847827
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL
rank: 76
score: 99.0535400390625
patch: return search CaMeL Chars [ j ] . is CaMeL Empty ( ) ;
rank: 76
score: 99.00209554036458
patch: return search CaMeL Chars [ j ] . length ++ ;
rank: 76
score: 98.8314697265625
patch: return false ; this . return true ; }
rank: 76
score: 98.79956732855902
patch: return true ; } if return false ;
rank: 76
score: 98.77721150716145
patch: return false ; ; ;
rank: 76
score: 98.75155639648438
patch: $NUMBER$ . return false ;
rank: 76
score: 98.72067696707589
patch: Plane { return false ; }
rank: 76
score: 98.46453094482422
patch: ( true ) ; return false ;
rank: 77
score: 99.00190662202381
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) . boolean CaMeL Value ( ) ;
rank: 77
score: 98.8309326171875
patch: . return false ; } return false ;
rank: 77
score: 98.81659807477679
patch: if ( search CaMeL Len <= search CaMeL Chars . length ) {
rank: 77
score: 98.7974853515625
patch: CaMeL Thread . return ( false ) ;
rank: 77
score: 98.7496337890625
patch: . char CaMeL At ( i , 1 )
rank: 77
score: 98.72030639648438
patch: return [ j ] == ch ;
rank: 77
score: 98.46153428819444
patch: return 0 ; return ; = false ;
rank: 78
score: 99.05715707632211
patch: return String . index CaMeL Of ( String ) < 0 ;
rank: 78
score: 99.04813058035714
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . get CaMeL Value ( ) ;
rank: 78
score: 99.00077681107955
patch: return this . search CaMeL Chars [ j ] ;
rank: 78
score: 98.83090209960938
patch: return is CaMeL Empty ( ; }
rank: 78
score: 98.81514115767045
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 78
score: 98.79638061523437
patch: return false ; } * * * * /
rank: 78
score: 98.77553304036458
patch: return true ; return this . false ;
rank: 78
score: 98.74931640625
patch: . char CaMeL At ( int i ) ;
rank: 78
score: 98.71810913085938
patch: return ( false && false ) ;
rank: 78
score: 98.46105194091797
patch: return ~ false ; return false ;
rank: 79
score: 99.05714326746323
patch: return String . index CaMeL Of ( String ) == search CaMeL Chars . length ;
rank: 79
score: 99.04672037760416
patch: return search CaMeL Chars [ j ] . to CaMeL Object ( ) ;
rank: 79
score: 99.0003662109375
patch: return search CaMeL Chars [ i ] == ch . to CaMeL String ( ) ;
rank: 79
score: 98.83006456163194
patch: return false ; } return true ; }
rank: 79
score: 98.81509164663461
patch: if ( search CaMeL Len < search CaMeL Chars . length )
rank: 79
score: 98.7963638305664
patch: return null ; return false ; }
rank: 79
score: 98.77318572998047
patch: CaMeL List . iterator return true ;
rank: 79
score: 98.74885864257813
patch: . char CaMeL At ( j , true )
rank: 79
score: 98.45990668402777
patch: CaMeL ( false ) ; return false ;
rank: 80
score: 99.05398559570312
patch: String . index CaMeL Of ( String . index CaMeL Of ( String ) )
rank: 80
score: 99.04599609375
patch: return ! search CaMeL Chars [ j ] . equals ( ch ) ;
rank: 80
score: 98.99714799360795
patch: return search CaMeL Chars [ j ] != null ;
rank: 80
score: 98.8297119140625
patch: return true ; } } else {
rank: 80
score: 98.81479899088542
patch: if ( search CaMeL Len < search CaMeL Len ) {
rank: 80
score: 98.79562377929688
patch: return false ; } catch false ;
rank: 80
score: 98.77180311414931
patch: CaMeL Exception = true ; return false ;
rank: 80
score: 98.74643283420139
patch: . return ( ch == null ) ;
rank: 80
score: 98.45760091145833
patch: CaMeL List ( false ; return false ;
rank: 81
score: 99.05269165039063
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String ) ) > 0 ;
rank: 81
score: 99.0457763671875
patch: return cs . contains CaMeL None ( , ch ) ;
rank: 81
score: 98.99365952435662
patch: return this . search CaMeL Chars [ j ] . to CaMeL String ( ) ;
rank: 81
score: 98.8296875
patch: return false ; this . return false ; }
rank: 81
score: 98.81444440569196
patch: if ( search CaMeL Chars . length >= search CaMeL Len ) {
rank: 81
score: 98.79530334472656
patch: return false ; } } false ;
rank: 81
score: 98.7436767578125
patch: . char CaMeL At ( j , false ;
rank: 81
score: 98.70775146484375
patch: Char CaMeL Sequence [ j ] = false ;
rank: 81
score: 98.45695495605469
patch: CaMeL += ( return ) false ;
rank: 82
score: 99.05241563585069
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String ) ) ;
rank: 82
score: 99.04536576704545
patch: return search CaMeL Chars [ j ] == null ;
rank: 82
score: 98.99256896972656
patch: return search CaMeL Chars [ j ] . starts CaMeL With ( $STRING$ ) ;
rank: 82
score: 98.80833082932692
patch: return String CaMeL Buffer . to CaMeL String ( cs ) ;
rank: 82
score: 98.79498291015625
patch: return false ; } else = false ;
rank: 82
score: 98.76936848958333
patch: CaMeL List . return ( true ) ;
rank: 82
score: 98.74353790283203
patch: . char CaMeL At ( j )
rank: 82
score: 98.45693630642361
patch: CaMeL console = false ; return false ;
rank: 83
score: 99.05160522460938
patch: return ( String ) search CaMeL Chars . char CaMeL At ( j ) ;
rank: 83
score: 98.99209798177084
patch: return cs . contains CaMeL None ( ch , search CaMeL Chars ) ;
rank: 83
score: 98.80745072798295
patch: if ( j >= search CaMeL Chars . length )
rank: 83
score: 98.79195556640624
patch: return return is CaMeL True ( false ) ;
rank: 83
score: 98.76914672851562
patch: CaMeL Exception = false ; if return true ;
rank: 83
score: 98.7407455444336
patch: . return false ; return true ;
rank: 83
score: 98.70003662109374
patch: return 0 . index CaMeL Of ( String )
rank: 83
score: 98.45654296875
patch: CaMeL List ( false ) ; false ;
rank: 84
score: 99.051025390625
patch: return search CaMeL Chars . char CaMeL At ( j ) ;
rank: 84
score: 99.04524739583333
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . is CaMeL Empty ( ) ;
rank: 84
score: 98.99165174696181
patch: return search CaMeL Chars [ cs . char CaMeL At ( j ) ] == ch ;
rank: 84
score: 98.82509765625
patch: CaMeL ; if ( false ) break ; }
rank: 84
score: 98.80682927911931
patch: return super . contains CaMeL None ( ch ) ;
rank: 84
score: 98.78864881727431
patch: return false ; } if return true ;
rank: 84
score: 98.7663818359375
patch: CaMeL Exception = false ; while return false ;
rank: 84
score: 98.73282877604167
patch: CaMeL ; return false ;
rank: 84
score: 98.69871215820312
patch: return System . [ j ] == ch ;
rank: 84
score: 98.45610046386719
patch: CaMeL += ) ; return false ;
rank: 85
score: 99.0504150390625
patch: return String . index CaMeL Of ( $STRING$ ) == 0 ;
rank: 85
score: 99.04523668791118
patch: String . index CaMeL Of ( String . index CaMeL Of ( String ) , ch ) ;
rank: 85
score: 98.82356770833333
patch: . return true ; }
rank: 85
score: 98.80629660866477
patch: if ( i == search CaMeL Chars . length )
rank: 85
score: 98.78848266601562
patch: return false ; } * * /
rank: 85
score: 98.76492309570312
patch: CaMeL Range false ; return false ;
rank: 85
score: 98.72647705078126
patch: . char CaMeL At ( int j ) ;
rank: 85
score: 98.69690704345703
patch: return new int [ ] { ch
rank: 85
score: 98.45555768694196
patch: return false ; return $NUMBER$ ;
rank: 86
score: 99.04433722245066
patch: return contains CaMeL None ( cs , search CaMeL Chars . to CaMeL String ( ) ) ;
rank: 86
score: 98.98949256310097
patch: throw String . index CaMeL Of ( $STRING$ , ch ) ;
rank: 86
score: 98.82003021240234
patch: return false ? true : false ;
rank: 86
score: 98.80459359975961
patch: if ( search CaMeL Len >= search CaMeL Chars . length )
rank: 86
score: 98.78478240966797
patch: return false ; } catch return ;
rank: 86
score: 98.763134765625
patch: CaMeL List . return null ; return false ;
rank: 86
score: 98.72598266601562
patch: . char CaMeL At ( i ) * /
rank: 86
score: 98.696728515625
patch: return search CaMeL Chars [ j ] == null
rank: 86
score: 98.45454237196181
patch: CaMeL List ( false ) ; return ;
rank: 87
score: 99.04874420166016
patch: return search CaMeL Chars [ cs . char CaMeL At ( j ) ] ;
rank: 87
score: 98.803466796875
patch: throw new Runtime CaMeL Exception ( ) ;
rank: 87
score: 98.7806396484375
patch: return false ; } else { if false ;
rank: 87
score: 98.75956217447917
patch: return false ; false ;
rank: 87
score: 98.72294786241319
patch: CaMeL ; if ( false ) continue ;
rank: 87
score: 98.69449462890626
patch: return cs . index CaMeL Of ( String )
rank: 87
score: 98.45181613498264
patch: CaMeL size = false ; return false ;
rank: 88
score: 99.04851825420673
patch: return contains CaMeL None ( search CaMeL Chars , cs ) ;
rank: 88
score: 99.04330444335938
patch: return ( ch == ch ) ;
rank: 88
score: 98.98857189360119
patch: return search CaMeL Chars [ j ] . to CaMeL Object ( ) . contains CaMeL None ( ) ;
rank: 88
score: 98.81550598144531
patch: if ( false ) return true ;
rank: 88
score: 98.80158342633929
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ch ) ;
rank: 88
score: 98.75879516601563
patch: CaMeL Number = false ; else return false ;
rank: 88
score: 98.69318305121527
patch: return cs [ j ] == ch ;
rank: 88
score: 98.45113699776786
patch: CaMeL List ( false ) ;
rank: 89
score: 99.04151204427083
patch: return this . contains CaMeL None ( cs , search CaMeL Chars ) ;
rank: 89
score: 98.80096435546875
patch: if ( ! search CaMeL Chars [ j ] == ch ) {
rank: 89
score: 98.75820922851562
patch: CaMeL Number = false ; if return true ;
rank: 89
score: 98.72242431640625
patch: . char CaMeL At ( i , true )
rank: 89
score: 98.69158935546875
patch: result [ j ] = false ;
rank: 89
score: 98.44898223876953
patch: CaMeL ~ ) ; return false ;
rank: 90
score: 99.0459375
patch: return ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . int CaMeL
rank: 90
score: 99.03982979910714
patch: return search CaMeL Chars [ j ] . get CaMeL Class ( ) . to CaMeL String ( ) ;
rank: 90
score: 98.77712576729911
patch: return ; } return false ;
rank: 90
score: 98.75777762276786
patch: return null ; return null ;
rank: 90
score: 98.72236328125
patch: return false . boolean CaMeL Value ( ) ;
rank: 90
score: 98.44837188720703
patch: CaMeL |= false ; return false ;
rank: 91
score: 99.03884887695312
patch: return search CaMeL Chars [ j ] . == ch ;
rank: 91
score: 98.98802771935097
patch: return this . search CaMeL Chars [ j ] != ch ;
rank: 91
score: 98.8121337890625
patch: m = false ; return false ;
rank: 91
score: 98.7981844815341
patch: return String . search CaMeL Chars [ j ] ;
rank: 91
score: 98.77702026367187
patch: return false ; } } ; return false ;
rank: 91
score: 98.75650363498264
patch: CaMeL Exception return false ; return true ;
rank: 91
score: 98.72075805664062
patch: . char CaMeL At ( j + 1 )
rank: 91
score: 98.69036865234375
patch: return index CaMeL Of ( String ) true ;
rank: 91
score: 98.44712999131944
patch: return 0 . false ; return false ;
rank: 92
score: 99.03880774456522
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL Char CaMeL Array ( ) ;
rank: 92
score: 98.98727651742789
patch: return cs . contains CaMeL None ( cs , cs ) ;
rank: 92
score: 98.81180572509766
patch: = false ; return true ; }
rank: 92
score: 98.79786095252403
patch: return ( cs , search CaMeL Chars [ j ] ) ;
rank: 92
score: 98.77525329589844
patch: return null ; } return true ;
rank: 92
score: 98.75616455078125
patch: CaMeL List return false ;
rank: 92
score: 98.71915690104167
patch: CaMeL false = false ; return false ;
rank: 92
score: 98.4464111328125
patch: CaMeL ~ ( ) ; return false ;
rank: 93
score: 99.04561673677884
patch: return String . index CaMeL Of ( ch ) == 0 ;
rank: 93
score: 99.035517578125
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String (
rank: 93
score: 98.9871826171875
patch: return search CaMeL Chars [ j ] ) . contains CaMeL None ( ) ;
rank: 93
score: 98.80890570746527
patch: return is CaMeL Blank ( ch ) ;
rank: 93
score: 98.7976582845052
patch: result = cs . char CaMeL At ( i ) ;
rank: 93
score: 98.75531005859375
patch: return get CaMeL Instance ( false ) ;
rank: 93
score: 98.71894182477679
patch: . char CaMeL At ( ;
rank: 93
score: 98.68564181857639
patch: return false ; } j ++ ; }
rank: 93
score: 98.44451226128473
patch: CaMeL else = false ; return false ;
rank: 94
score: 99.04393513997395
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String ) ) ) ;
rank: 94
score: 99.035400390625
patch: return String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL
rank: 94
score: 98.7963115985577
patch: return ( cs . char CaMeL At ( i ) ) ;
rank: 94
score: 98.77336968315973
patch: return null ; } else return false ;
rank: 94
score: 98.75526936848958
patch: CaMeL Exception = false ; return null ;
rank: 94
score: 98.71641845703125
patch: . char CaMeL At ( i , count )
rank: 94
score: 98.68484497070312
patch: return false ; } } } }
rank: 94
score: 98.44442409939236
patch: CaMeL filter = false ; return false ;
rank: 95
score: 99.04338522518383
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL
rank: 95
score: 99.03528849283855
patch: return . search CaMeL Chars [ j ] == ch ;
rank: 95
score: 98.9850362141927
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( ch ) ;
rank: 95
score: 98.79506138392857
patch: if ( cs . char CaMeL At ( i ) == ch )
rank: 95
score: 98.75438774956598
patch: return false ; ; ; return false ;
rank: 95
score: 98.71592407226562
patch: . char CaMeL At ( j , i )
rank: 95
score: 98.68374197823661
patch: return return true ; } }
rank: 95
score: 98.44438934326172
patch: return false ; ; if false ;
rank: 96
score: 99.04195149739583
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length ) ;
rank: 96
score: 99.03369140625
patch: String . index CaMeL Of ( String . char CaMeL At ( j ) ) ;
rank: 96
score: 98.80010986328125
patch: . return false ; } } return false ;
rank: 96
score: 98.79477945963542
patch: if ( search CaMeL Len >= search CaMeL Len ) {
rank: 96
score: 98.7691162109375
patch: return false ; } if ; return false ;
rank: 96
score: 98.75139702690973
patch: CaMeL List . add ( false ) ;
rank: 96
score: 98.71517944335938
patch: . char CaMeL At ( j , 1 )
rank: 96
score: 98.44125802176339
patch: CaMeL do . return false ;
rank: 97
score: 99.04167094983552
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( ch ) ) ;
rank: 97
score: 99.033203125
patch: return null . contains CaMeL None ( search CaMeL Chars [ j ] ) ;
rank: 97
score: 98.98194521949405
patch: return search CaMeL Chars [ j ] . get CaMeL Instance ( ) . contains CaMeL None ( ) ;
rank: 97
score: 98.80007934570312
patch: return ( false ) ; } }
rank: 97
score: 98.79466029575893
patch: if ( search CaMeL Chars . length <= cs CaMeL Len ) {
rank: 97
score: 98.76254611545139
patch: CaMeL Error . return ( false ) ;
rank: 97
score: 98.75037231445313
patch: CaMeL Range = false ; if return true ;
rank: 97
score: 98.71498616536458
patch: CaMeL return false ; } return true ;
rank: 97
score: 98.68239135742188
patch: String . index CaMeL Of ( String ) ;
rank: 97
score: 98.44042205810547
patch: CaMeL List ( ; = false ;
rank: 98
score: 99.04134792751736
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL
rank: 98
score: 98.98170872738487
patch: return search CaMeL Chars [ j ] == ch . to CaMeL Char CaMeL Array ( ) ;
rank: 98
score: 98.80006239149306
patch: c = false ; return false ; }
rank: 98
score: 98.79417835582386
patch: throw new Illegal CaMeL Access CaMeL Exception ( ) ;
rank: 98
score: 98.7574951171875
patch: return false ; } else { return ; }
rank: 98
score: 98.74991183810764
patch: CaMeL Number = false ; return null ;
rank: 98
score: 98.68181501116071
patch: Plane return true ; } }
rank: 98
score: 98.43814086914062
patch: return != ) ; return false ;
rank: 99
score: 99.04130415482955
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . trim ( ) ;
rank: 99
score: 98.9812481219952
patch: return this . search CaMeL Chars [ i ] == ch ;
rank: 99
score: 98.79559936523438
patch: . return is CaMeL Empty ( ch ) ;
rank: 99
score: 98.79381452287946
patch: if ( search CaMeL Len > search CaMeL Chars . length ) {
rank: 99
score: 98.75706481933594
patch: return false ; } if ; }
rank: 99
score: 98.749169921875
patch: CaMeL append ( false ) ; return false ;
rank: 99
score: 98.68001708984374
patch: return String ) index CaMeL Of ( String )
rank: 99
score: 98.43464006696429
patch: return 0 ; return null ;
rank: 100
score: 99.04124168113425
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length ) . to CaMeL String ( ) ;
rank: 100
score: 99.02979871961806
patch: return contains CaMeL None ( cs , cs . char CaMeL At ( j ) ) ;
rank: 100
score: 98.981240234375
patch: return cs . contains CaMeL None ( cs . char CaMeL At ( cs . char CaMeL At ( j ) ) ) ;
rank: 100
score: 98.7924092610677
patch: if ( j < search CaMeL Chars . length ) {
rank: 100
score: 98.75697631835938
patch: CaMeL Builder . return false ; return false ;
rank: 100
score: 98.74852159288194
patch: CaMeL append return false ; return false ;
rank: 100
score: 98.70487976074219
patch: CaMeL return false ; return true ;
rank: 100
score: 98.43317328559027
patch: CaMeL List ( ; { return false ;
rank: 101
score: 99.03964572482639
patch: return index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of (
rank: 101
score: 99.02975802951389
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String ) ) ;
rank: 101
score: 98.79542236328125
patch: return Character . index CaMeL Of ( ; }
rank: 101
score: 98.79216657366071
patch: return cs . to CaMeL Char CaMeL Array ( ) . length ;
rank: 101
score: 98.75532531738281
patch: return false ; while return false ;
rank: 101
score: 98.74840630425348
patch: CaMeL Number return false ; return true ;
rank: 101
score: 98.70359971788194
patch: . char CaMeL At ( ; break ;
rank: 101
score: 98.67930297851562
patch: search CaMeL Chars [ j ] = false ;
rank: 101
score: 98.43205261230469
patch: CaMeL -= ) ; return false ;
rank: 102
score: 99.02973284040179
patch: return $STRING$ . equals ( search CaMeL Chars [ j ] ) ;
rank: 102
score: 98.97962951660156
patch: return ! search CaMeL Chars [ i ] . contains CaMeL None ( ) ;
rank: 102
score: 98.79460144042969
patch: if ( false ) return false ;
rank: 102
score: 98.75297715928819
patch: return is false ; } return false ;
rank: 102
score: 98.74788665771484
patch: return new Integer ( false ) ;
rank: 102
score: 98.70279366629464
patch: CaMeL ; return true ; }
rank: 102
score: 98.67711791992187
patch: String . char CaMeL At ( j ) ;
rank: 102
score: 98.43189154730902
patch: CaMeL += ( false ; return false ;
rank: 103
score: 99.03882897418478
patch: Plane = cs . char CaMeL At ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL
rank: 103
score: 99.02908457880434
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL
rank: 103
score: 98.9796142578125
patch: return search CaMeL Chars [ j ] == ch ) ;
rank: 103
score: 98.79248809814453
patch: return ( ch , false ) ;
rank: 103
score: 98.7914287860577
patch: return contains CaMeL None ( String . search CaMeL Chars ) ;
rank: 103
score: 98.75289577907986
patch: return is CaMeL Sealed ( false ) ;
rank: 103
score: 98.74516950334821
patch: CaMeL Range . return false ;
rank: 103
score: 98.70269775390625
patch: . char CaMeL At ( j ;
rank: 103
score: 98.67631225585937
patch: return contains CaMeL None ( String ) false ;
rank: 103
score: 98.42844645182292
patch: return 0 ; return false ; break ;
rank: 104
score: 99.03876342773438
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . last CaMeL Index CaMeL
rank: 104
score: 99.02901458740234
patch: return this . contains CaMeL None ( search CaMeL Chars [ j ] ) ;
rank: 104
score: 98.97947184244792
patch: return ( false ) . contains CaMeL None ( ) ;
rank: 104
score: 98.79223022460937
patch: return $STRING$ . equals ( false ) ; }
rank: 104
score: 98.78963623046874
patch: return ( ) ;
rank: 104
score: 98.75283813476562
patch: return is false ; }
rank: 104
score: 98.7432861328125
patch: CaMeL Error = false ; return true ;
rank: 104
score: 98.701806640625
patch: . return is CaMeL Empty ( false ) ;
rank: 104
score: 98.67608642578125
patch: String . index CaMeL Of ( String ) /
rank: 104
score: 98.42819213867188
patch: return ; = ; = false ;
rank: 105
score: 99.03782743566177
patch: return ( search CaMeL Chars . char CaMeL At ( i ) == ch ) ;
rank: 105
score: 99.02845764160156
patch: . index CaMeL Of ( String . char CaMeL At ( j ) ) ;
rank: 105
score: 98.97893210018383
patch: return ( search CaMeL Chars [ j ] ) . contains CaMeL None ( ) ;
rank: 105
score: 98.79178619384766
patch: f = false ; return true ;
rank: 105
score: 98.7872314453125
patch: if ( search CaMeL Chars . length > 0 )
rank: 105
score: 98.75048828125
patch: return false ; } catch return false ; }
rank: 105
score: 98.74320678710937
patch: CaMeL List . false false ; return false ;
rank: 105
score: 98.701416015625
patch: . return ( ( char ) false ) ;
rank: 105
score: 98.67433166503906
patch: return false ; / * * /
rank: 105
score: 98.42539978027344
patch: return return ; { return false ;
rank: 106
score: 99.03603727921195
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL
rank: 106
score: 99.02746051290761
patch: String . index CaMeL Of ( String . index CaMeL Of ( String ) . to CaMeL String ( ) ) ;
rank: 106
score: 98.78975219726563
patch: return is CaMeL Blank ( false ) ; }
rank: 106
score: 98.78634643554688
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ch ) ;
rank: 106
score: 98.74934387207031
patch: return false ; } catch ; ;
rank: 106
score: 98.74249267578125
patch: CaMeL List . return ( false ;
rank: 106
score: 98.67391357421874
patch: String . index CaMeL Of ( String ) }
rank: 106
score: 98.42363739013672
patch: return - 1 ; return false ;
rank: 107
score: 99.0359637920673
patch: return contains CaMeL None ( j , search CaMeL Chars ) ;
rank: 107
score: 99.02740187872024
patch: return search CaMeL Chars [ j ] . get CaMeL Value ( ) . to CaMeL String ( ) ;
rank: 107
score: 98.97695025275735
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . TRUE ;
rank: 107
score: 98.78849962022569
patch: return false ; } return false ; }
rank: 107
score: 98.78472900390625
patch: return ! return false ;
rank: 107
score: 98.74791124131944
patch: return false ; } } } return ;
rank: 107
score: 98.74236188616071
patch: CaMeL List false return false ;
rank: 107
score: 98.69769965277777
patch: CaMeL false = true ; return false ;
rank: 107
score: 98.42345174153645
patch: return 0 + false ;
rank: 108
score: 99.03595291940789
patch: return . index CaMeL Of ( String . index CaMeL Of ( String ) ) == 0 ;
rank: 108
score: 99.02632359095982
patch: . index CaMeL Of ( search CaMeL Chars [ j ] ) ;
rank: 108
score: 98.97496840533088
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) . index CaMeL
rank: 108
score: 98.7873306274414
patch: return true ? false : true ;
rank: 108
score: 98.78400268554688
patch: switch ( search CaMeL Chars [ j ] )
rank: 108
score: 98.74069552951389
patch: CaMeL String = false ; return true ;
rank: 108
score: 98.69573974609375
patch: . char CaMeL At ( i , 0 )
rank: 109
score: 98.97444661458333
patch: return ! search CaMeL Chars [ j ] . contains ( ch ) ;
rank: 109
score: 98.78389892578124
patch: if ( search CaMeL Len >= 0 ) {
rank: 109
score: 98.7468032836914
patch: return false ; else return true ;
rank: 109
score: 98.73700714111328
patch: CaMeL Null ( ; return false ;
rank: 109
score: 98.69441528320313
patch: . char CaMeL At ( false , j )
rank: 109
score: 98.66933768136161
patch: Plane return return false ; }
rank: 109
score: 98.42285834418402
patch: CaMeL Builder return false ; return false ;
rank: 110
score: 98.97435584435097
patch: return cs . contains CaMeL None ( [ j ] ) ;
rank: 110
score: 98.78616672092014
patch: return is CaMeL Blank ( false ) ;
rank: 110
score: 98.78307495117187
patch: if ( search CaMeL Len > 0 ) {
rank: 110
score: 98.74470350477431
patch: return return false ; } } return ;
rank: 110
score: 98.73549397786458
patch: CaMeL Range return false ; return true ;
rank: 110
score: 98.69056701660156
patch: CaMeL ; if ( false ) {
rank: 110
score: 98.66839599609375
patch: return search CaMeL Chars [ j ] == $STRING$
rank: 110
score: 98.42218017578125
patch: return false ; return 0 ;
rank: 111
score: 99.03498920641448
patch: return ! String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL
rank: 111
score: 99.02430791440217
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL Lower CaMeL Case ( ) ;
rank: 111
score: 98.97431640625
patch: return search CaMeL Chars [ j ] == search CaMeL Chars . length ;
rank: 111
score: 98.78524441189236
patch: . false * / return false ; }
rank: 111
score: 98.78297932942708
patch: if ( i >= search CaMeL Chars . length ) {
rank: 111
score: 98.74424913194444
patch: return is ; } } return false ;
rank: 111
score: 98.73419799804688
patch: CaMeL Null ( false ) ; return false ;
rank: 111
score: 98.66837565104167
patch: Plane return return false ;
rank: 111
score: 98.42147064208984
patch: return 0 ; for return false ;
rank: 112
score: 99.03482759915866
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . to CaMeL Char CaMeL Array ( ) ;
rank: 112
score: 99.0241015625
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of (
rank: 112
score: 98.97346047794117
patch: return ( ( Char CaMeL Sequence ) cs ) . contains CaMeL None ( ) ;
rank: 112
score: 98.78429565429687
patch: return ! is CaMeL Blank ( ch ) ;
rank: 112
score: 98.78280874399039
patch: return search CaMeL Chars [ j ] . length ( ) ;
rank: 112
score: 98.73392333984376
patch: CaMeL List . return null ; return true ;
rank: 112
score: 98.68431396484375
patch: . return 1 . equals ( ch ) ;
rank: 112
score: 98.66621229383681
patch: return ch . equals ( ch ) ;
rank: 112
score: 98.42095184326172
patch: return 0 ; public return false ;
rank: 113
score: 99.0337383563702
patch: return String . index CaMeL Of ( String ) >= 0 ;
rank: 113
score: 99.02373589409723
patch: . index CaMeL Of ( String . char CaMeL At ( j ) , ch ) ;
rank: 113
score: 98.97340152138158
patch: return this . search CaMeL Chars [ j ] == ch . to CaMeL String ( ) ;
rank: 113
score: 98.78409423828126
patch: return false ; } System . arraycopy ( ;
rank: 113
score: 98.78245035807292
patch: if ( search CaMeL Len < cs CaMeL Len ) {
rank: 113
score: 98.73899536132812
patch: return return is CaMeL Sealed ( false ) ;
rank: 113
score: 98.73218451605902
patch: CaMeL Range = false ; return null ;
rank: 113
score: 98.6802001953125
patch: . char CaMeL At ( i , false ;
rank: 113
score: 98.66485595703125
patch: return new String ( ch ) ;
rank: 113
score: 98.41947937011719
patch: return 0 . 0 == false ;
rank: 114
score: 98.783837890625
patch: CaMeL false = false ; return true ; }
rank: 114
score: 98.78146597055289
patch: if ( search CaMeL Len <= search CaMeL Chars . length )
rank: 114
score: 98.73830159505208
patch: return ; return false ;
rank: 114
score: 98.73180541992187
patch: CaMeL Range ( false ) ; return false ;
rank: 114
score: 98.65802612304688
patch: return . contains CaMeL None ( ch ) ;
rank: 114
score: 98.41831752232143
patch: CaMeL return ( false ) ;
rank: 115
score: 99.0225830078125
patch: return null . equals ( search CaMeL Chars [ j ] ) ;
rank: 115
score: 98.97098214285714
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length && search CaMeL Chars . index CaMeL
rank: 115
score: 98.78257751464844
patch: return true ; break ; } }
rank: 115
score: 98.78143780048077
patch: if ( search CaMeL Chars . length < cs CaMeL Len )
rank: 115
score: 98.73814900716145
patch: return false ; return ;
rank: 115
score: 98.73177761501736
patch: return get CaMeL Property ( false ) ;
rank: 115
score: 98.67503526475694
patch: . return ( false , true ) ;
rank: 115
score: 98.41281127929688
patch: return return $NUMBER$ ; return false ;
rank: 116
score: 99.03209731158088
patch: return search CaMeL Chars . to CaMeL String ( ) . length ( ) 1 ;
rank: 116
score: 99.02239990234375
patch: return . index CaMeL Of ( String ) == 0 ;
rank: 116
score: 98.97001509232955
patch: return cs . contains CaMeL None ( cs , search CaMeL Chars . char CaMeL At ( i ) ) ;
rank: 116
score: 98.78159586588542
patch: return false ? false : false ; }
rank: 116
score: 98.77921840122768
patch: if ( cs . char CaMeL At ( j ) == ch )
rank: 116
score: 98.73685709635417
patch: return false ; return true ; } }
rank: 116
score: 98.73147243923611
patch: return new Array CaMeL List ( ) ;
rank: 116
score: 98.65661010742187
patch: return index CaMeL Of ( String ) ch ;
rank: 116
score: 98.41045379638672
patch: CaMeL do = false ; false ;
rank: 117
score: 98.96986490885416
patch: return search CaMeL Chars [ i ] . to CaMeL String ( ) ;
rank: 117
score: 98.78132629394531
patch: return false ? true : true ;
rank: 117
score: 98.73419189453125
patch: return false ; } else = false ; }
rank: 117
score: 98.73034057617187
patch: return false ; return null ; return false ;
rank: 117
score: 98.6739501953125
patch: CaMeL return 0 . equals ( ch ) ;
rank: 117
score: 98.65616455078126
patch: return ch . to CaMeL String ( ) ;
rank: 118
score: 99.0284375
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL
rank: 118
score: 98.96920166015624
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals ( String ) ;
rank: 118
score: 98.78124237060547
patch: return true ; } } * /
rank: 118
score: 98.77783203125
patch: return search CaMeL Chars [ j ] ; } }
rank: 118
score: 98.73002115885417
patch: return false ; } } if false ;
rank: 118
score: 98.7296371459961
patch: CaMeL Range [ ; return false ;
rank: 118
score: 98.65610961914062
patch: Plane return search CaMeL Chars [ j ] ;
rank: 118
score: 98.40733119419643
patch: return 0 ; return 0 ;
rank: 119
score: 99.01776801215277
patch: return ! search CaMeL Chars [ j ] . to CaMeL Char CaMeL Array ( ) ;
rank: 119
score: 98.96910749162946
patch: return search CaMeL Chars [ j ] . equals ( $STRING$ ) ;
rank: 119
score: 98.78099714006696
patch: return true ; } } }
rank: 119
score: 98.7777587890625
patch: return super . contains CaMeL None ( ) ;
rank: 119
score: 98.7296142578125
patch: return true ; } catch return false ;
rank: 119
score: 98.72936248779297
patch: CaMeL List . ; return true ;
rank: 119
score: 98.66613159179687
patch: . char CaMeL At ( j , $NUMBER$ )
rank: 119
score: 98.65578787667411
patch: return false ; j ++ ;
rank: 119
score: 98.40447998046875
patch: return 0 . 0 != false ;
rank: 120
score: 99.01756702769886
patch: return contains CaMeL None ( ch , ch ) ;
rank: 120
score: 98.77764129638672
patch: CaMeL false . return false ; }
rank: 120
score: 98.7774658203125
patch: if ( search CaMeL Len <= 0 ) {
rank: 120
score: 98.72846069335938
patch: return false ; } } else return false ;
rank: 120
score: 98.72821044921875
patch: CaMeL List . return ( false false ) ;
rank: 120
score: 98.66568603515626
patch: $NUMBER$ . return ( ch == $STRING$ ) ;
rank: 120
score: 98.40409088134766
patch: return 0 ; ; if false ;
rank: 121
score: 98.96756184895834
patch: return null . contains CaMeL None ( cs , search CaMeL Chars ) ;
rank: 121
score: 98.77634974888393
patch: return true ; ; } }
rank: 121
score: 98.72746276855469
patch: return null ; return null ; ;
rank: 121
score: 98.72728729248047
patch: return null ; } } return ;
rank: 121
score: 98.660888671875
patch: . char CaMeL At ( j ) ,
rank: 121
score: 98.40373992919922
patch: CaMeL += $NUMBER$ ; return false ;
rank: 122
score: 99.01666259765625
patch: return search CaMeL Chars [ j ] == String . index CaMeL Of ( String ) ;
rank: 122
score: 98.96712000229779
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) == ch ;
rank: 122
score: 98.77704326923077
patch: return String CaMeL Buffer . to CaMeL String ( ch ) ;
rank: 122
score: 98.7267822265625
patch: CaMeL Range false return false ; return false ;
rank: 122
score: 98.72648620605469
patch: return null ; } else if ;
rank: 122
score: 98.6583480834961
patch: . return true ; return true ;
rank: 122
score: 98.65091552734376
patch: Char CaMeL Sequence [ i ] = ch ;
rank: 122
score: 98.40338134765625
patch: return true ; return - 1 ;
rank: 123
score: 99.02338115985577
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . to CaMeL Lower CaMeL Case ( ) ;
rank: 123
score: 99.01588841488487
patch: String . index CaMeL Of ( String . index CaMeL Of ( ch ) , ch ) ;
rank: 123
score: 98.77530517578126
patch: return false ; } System . out . ;
rank: 123
score: 98.72677612304688
patch: CaMeL List . ; return false ;
rank: 123
score: 98.72418212890625
patch: return true ; } } if return false ;
rank: 123
score: 98.40315246582031
patch: return ! $NUMBER$ ; return false ;
rank: 124
score: 99.0232645670573
patch: return . index CaMeL Of ( ch ) == 0 ;
rank: 124
score: 98.96658090444711
patch: try { return search CaMeL Chars [ j ] == ch ;
rank: 124
score: 98.77526245117187
patch: return ( false , false , false ) ;
rank: 124
score: 98.72628173828124
patch: return false ; return true ; return false ;
rank: 124
score: 98.72385660807292
patch: return false ; else return false ; }
rank: 124
score: 98.64675903320312
patch: return ( false || true ) ;
rank: 124
score: 98.39942932128906
patch: return is ( false false ) ;
rank: 125
score: 99.02322387695312
patch: return search CaMeL Chars . to CaMeL String ( ) . equals ( String . index CaMeL Of ( String ) ) ;
rank: 125
score: 98.96641438802084
patch: return search CaMeL Chars [ j ] >= search CaMeL Chars . length ;
rank: 125
score: 98.77506510416667
patch: if ( search CaMeL Len <= search CaMeL Len ) {
rank: 125
score: 98.72356414794922
patch: return true ; else return false ;
rank: 125
score: 98.64663260323661
patch: return false ; i ++ ;
rank: 125
score: 98.39801025390625
patch: CaMeL ch ( ; = false ;
rank: 126
score: 99.0225830078125
patch: if ( search CaMeL Chars . length 1 [ search CaMeL Chars . length 1
rank: 126
score: 98.77475992838542
patch: if ( search CaMeL Len >= cs CaMeL Len ) {
rank: 126
score: 98.77236328125
patch: return true ; } this . return true ;
rank: 126
score: 98.72334594726563
patch: return super . false ; ; return false ;
rank: 126
score: 98.71976470947266
patch: return false ; } return null ;
rank: 126
score: 98.64520263671875
patch: return index CaMeL Of ( cs ) ;
rank: 126
score: 98.64390055338542
patch: . if ( false ) return true ;
rank: 126
score: 98.39661407470703
patch: CaMeL return false ; return false ;
rank: 127
score: 99.02178633840461
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of (
rank: 127
score: 99.0133056640625
patch: return String . index CaMeL Of ( String ) == - 1 ;
rank: 127
score: 98.96489715576172
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( cs ) ;
rank: 127
score: 98.7747090657552
patch: if ( search CaMeL Chars [ j ] == ) {
rank: 127
score: 98.72245025634766
patch: CaMeL Range false ; return true ;
rank: 127
score: 98.71967163085938
patch: return this . false ; } } return ;
rank: 127
score: 98.39512634277344
patch: return 0 != false ; break ;
rank: 128
score: 99.01324103860294
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . index CaMeL
rank: 128
score: 98.96453302556819
patch: return search CaMeL Chars [ j ] == cs ;
rank: 128
score: 98.77455491286058
patch: if ( search CaMeL Chars . length >= cs CaMeL Len )
rank: 128
score: 98.77132839626736
patch: return is CaMeL Empty [ i ] ;
rank: 128
score: 98.71828002929688
patch: return false ; else return false ; } }
rank: 128
score: 98.64276123046875
patch: . char CaMeL At ( false , ;
rank: 128
score: 98.39341735839844
patch: CaMeL += 1 ; return false ;
rank: 129
score: 99.02058919270833
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String .
rank: 129
score: 99.01238816784274
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ;
rank: 129
score: 98.9644442471591
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At (
rank: 129
score: 98.77423095703125
patch: if ( j <= search CaMeL Chars . length ) {
rank: 129
score: 98.77102322048611
patch: m = false ; return false ; }
rank: 129
score: 98.72098388671876
patch: CaMeL Number = false ; while return false ;
rank: 129
score: 98.71665954589844
patch: return ; } else return false ;
rank: 129
score: 98.64174194335938
patch: . char CaMeL At ( i , j )
rank: 129
score: 98.64077758789062
patch: Plane { return false ; } }
rank: 129
score: 98.3858642578125
patch: return 0 && false ;
rank: 130
score: 99.02003880550987
patch: Plane return String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL
rank: 130
score: 99.0115966796875
patch: return String . index CaMeL Of ( String ) == 0 . null ;
rank: 130
score: 98.96396891276042
patch: return cs . contains CaMeL None ( cs , search CaMeL Chars . char CaMeL At (
rank: 130
score: 98.76704711914063
patch: return true ; } this . return false ;
rank: 130
score: 98.71974182128906
patch: CaMeL List . return false ; ;
rank: 130
score: 98.71646881103516
patch: return false ; } = false ;
rank: 130
score: 98.64063856336806
patch: return 0 . equals ( ch ) ;
rank: 130
score: 98.63648071289063
patch: search CaMeL Chars [ i ] = ch ;
rank: 130
score: 98.38209751674107
patch: return 0 ; return $NUMBER$ ;
rank: 131
score: 99.01993600945724
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String ) . char CaMeL
rank: 131
score: 99.01126302083334
patch: return String . index CaMeL Of ( String . cs ) == 0 ;
rank: 131
score: 98.96336146763393
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( )
rank: 131
score: 98.77337646484375
patch: val = cs . char CaMeL At ( i ) ;
rank: 131
score: 98.76429094587054
patch: return ( false , false ;
rank: 131
score: 98.71968994140624
patch: CaMeL Range false return false ; return true ;
rank: 131
score: 98.63843994140625
patch: buffer . char CaMeL At ( i ) ;
rank: 131
score: 98.63619656032986
patch: int . index CaMeL Of ( String )
rank: 131
score: 98.3811264038086
patch: return == ) ; return false ;
rank: 132
score: 99.01972045898438
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String ) ) >= 0 ;
rank: 132
score: 99.01095815805289
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) , ch ) ;
rank: 132
score: 98.96312866210937
patch: return contains CaMeL None ( search CaMeL Chars . char CaMeL At ( j ) , ch ) ;
rank: 132
score: 98.76418050130208
patch: . return false ; break ; } }
rank: 132
score: 98.71920166015624
patch: CaMeL Exception return false ; } return true ;
rank: 132
score: 98.71493530273438
patch: return true ; return true ; }
rank: 132
score: 98.63819580078125
patch: . return $STRING$ . equals ( false ) ;
rank: 132
score: 98.63419342041016
patch: return false ; i ++ ; }
rank: 132
score: 98.37987518310547
patch: return matches ; { return false ;
rank: 133
score: 99.01914469401042
patch: return contains CaMeL None ( search CaMeL Chars . char CaMeL At ( i ) ) ;
rank: 133
score: 99.01076931423611
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL
rank: 133
score: 98.96307732077206
patch: return cs . contains CaMeL None ( cs , search CaMeL Chars . length ) ;
rank: 133
score: 98.77267690805289
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 133
score: 98.76232299804687
patch: return true ; this . return false ; }
rank: 133
score: 98.71876220703125
patch: return get CaMeL Instance ( ; return true ;
rank: 133
score: 98.71156005859375
patch: return false ; } if ; return true ;
rank: 133
score: 98.63788452148438
patch: return Boolean . value CaMeL Of ( false ;
rank: 133
score: 98.63237762451172
patch: Plane return false ; return false ;
rank: 133
score: 98.3791275024414
patch: CaMeL Builder false ; return false ;
rank: 134
score: 99.01877848307292
patch: return $STRING$ . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL
rank: 134
score: 99.01026153564453
patch: return search CaMeL Chars [ j ] . char CaMeL At ( i ) ;
rank: 134
score: 98.96244542738971
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) { true
rank: 134
score: 98.77149376502403
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ;
rank: 134
score: 98.76231079101562
patch: p = false ; return true ; } }
rank: 134
score: 98.71745954241071
patch: CaMeL Number false return false ;
rank: 134
score: 98.70968017578124
patch: return true ; } else return false ; }
rank: 134
score: 98.6368408203125
patch: . char CaMeL At ( i , i )
rank: 134
score: 98.62993774414062
patch: return false ; contains CaMeL None = false ;
rank: 134
score: 98.37591552734375
patch: return 0 ; return - false ;
rank: 135
score: 99.01798502604167
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . is CaMeL Empty ( ) ;
rank: 135
score: 99.01021999782986
patch: return search CaMeL Chars [ j ] . char CaMeL At ( j ) != ch ;
rank: 135
score: 98.77142333984375
patch: if ( search CaMeL Len == search CaMeL Chars . length ) {
rank: 135
score: 98.76216634114583
patch: return Character . index CaMeL Of ( ;
rank: 135
score: 98.71723022460938
patch: CaMeL List . clear ( ; return false ;
rank: 135
score: 98.7078125
patch: CaMeL State . return false ; return false ;
rank: 135
score: 98.6359130859375
patch: . return 0 . equals ( ch ) ;
rank: 135
score: 98.37367248535156
patch: return ; = false ; false ;
rank: 136
score: 99.00994873046875
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ;
rank: 136
score: 98.96184981496711
patch: if ( search CaMeL Chars . length >= search CaMeL Chars . length ) { return false ;
rank: 136
score: 98.77137247721355
patch: return ( cs . to CaMeL String ( ) ) ;
rank: 136
score: 98.76106262207031
patch: return true ; } break ; }
rank: 136
score: 98.71685791015625
patch: CaMeL List . return false ; for false ;
rank: 136
score: 98.70751953125
patch: return is false ; return false ;
rank: 136
score: 98.63555908203125
patch: . char CaMeL At ( ; return true ;
rank: 136
score: 98.62545776367188
patch: return cs . equals ( ch ) ; }
rank: 136
score: 98.37271881103516
patch: return 0 . 0 return false ;
rank: 137
score: 99.01742892795139
patch: return search CaMeL Chars . equals ( String . index CaMeL Of ( $STRING$ ) ) ;
rank: 137
score: 99.00980377197266
patch: return search CaMeL Chars [ j ] == search CaMeL Chars [ j ] ;
rank: 137
score: 98.96147325303819
patch: return cs . contains CaMeL None ( cs , search CaMeL Chars [ j ] ) ;
rank: 137
score: 98.77083333333333
patch: x = cs . char CaMeL At ( i ) ;
rank: 137
score: 98.714599609375
patch: return false ; return true ; return true ;
rank: 137
score: 98.70657009548611
patch: return false ; } ; return false ;
rank: 137
score: 98.63520643446181
patch: return 1 . equals ( ch ) ;
rank: 137
score: 98.62525177001953
patch: result [ i ] = false ;
rank: 137
score: 98.370849609375
patch: return 0 == false ; break ;
rank: 138
score: 99.015947265625
patch: return search CaMeL Chars . char CaMeL At ( j ) . to CaMeL String ( ) . to CaMeL String ( ) ;
rank: 138
score: 99.0084940592448
patch: String . index CaMeL Of ( String . index CaMeL Of ( cs . char CaMeL At ( j ) ) ) ;
rank: 138
score: 98.76963454026442
patch: if ( search CaMeL Chars [ i ] == ch ) {
rank: 138
score: 98.76011657714844
patch: f = false ; return false ;
rank: 138
score: 98.7129638671875
patch: CaMeL Enum . return false ; return false ;
rank: 138
score: 98.70624542236328
patch: return false ; } if ; ;
rank: 138
score: 98.63485107421874
patch: . char CaMeL Count ++ ; return true ;
rank: 138
score: 98.62452915736607
patch: return is [ j ] ;
rank: 139
score: 99.0157137784091
patch: return cs . char CaMeL At ( j ) ;
rank: 139
score: 99.00848388671875
patch: return search CaMeL Chars [ j ] . append ( ch ) ;
rank: 139
score: 98.9610595703125
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) {
rank: 139
score: 98.76912144252232
patch: if ( search CaMeL Chars . length > cs CaMeL Len ) {
rank: 139
score: 98.75992838541667
patch: return ( false , false , false ;
rank: 139
score: 98.71284993489583
patch: return false ; false ; return false ;
rank: 139
score: 98.70619201660156
patch: return false ; break ; } ;
rank: 139
score: 98.63348388671875
patch: . . char CaMeL At ( i ) ;
rank: 139
score: 98.6244608561198
patch: { return false ; }
rank: 139
score: 98.3692626953125
patch: return ; = return false ;
rank: 140
score: 99.01570209703948
patch: return . index CaMeL Of ( String . index CaMeL Of ( $STRING$ ) ) == 0 ;
rank: 140
score: 98.96065063476563
patch: return cs . contains CaMeL None ( cs . char CaMeL At ( j ) , ch ) ;
rank: 140
score: 98.76906040736607
patch: return search CaMeL Chars . to CaMeL String ( ) . length ;
rank: 140
score: 98.75763549804688
patch: return ! $STRING$ . equals ( ch ) ;
rank: 140
score: 98.71222534179688
patch: CaMeL List . return ( return false ) ;
rank: 140
score: 98.70564778645833
patch: return false ; if return false ; }
rank: 140
score: 98.62432861328125
patch: Plane [ j ] . return false ; }
rank: 140
score: 98.36906433105469
patch: CaMeL |= ( return ) false ;
rank: 141
score: 99.01564622961956
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars , String . index CaMeL
rank: 141
score: 98.96058721127717
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) . to CaMeL Char CaMeL Array ( ) ;
rank: 141
score: 98.76876395089286
patch: int search CaMeL Len = search CaMeL Chars . length - 1 ;
rank: 141
score: 98.75733032226563
patch: return Boolean . value CaMeL Of ( ; }
rank: 141
score: 98.70840115017361
patch: return false ; return null ; false ;
rank: 141
score: 98.70478057861328
patch: return false ; } else { ;
rank: 141
score: 98.63242797851562
patch: . . char CaMeL At ( j ) ;
rank: 141
score: 98.623388671875
patch: return true ; index CaMeL Of ( String )
rank: 141
score: 98.36368560791016
patch: return 0 . 0 : false ;
rank: 142
score: 99.01532745361328
patch: return search CaMeL Chars . equals ( search CaMeL Chars [ j ] ) ;
rank: 142
score: 99.00648850661058
patch: return search CaMeL Chars [ j ] == String . ch ;
rank: 142
score: 98.95970052083334
patch: return cs . contains CaMeL None ( cs , search CaMeL Len ) ;
rank: 142
score: 98.76682350852273
patch: return cs . contains CaMeL None ( ) ; }
rank: 142
score: 98.75486450195312
patch: return false ; } } if ( false )
rank: 142
score: 98.70697699652777
patch: CaMeL List = false ; return true ;
rank: 142
score: 98.70393589564732
patch: return true ; } return ;
rank: 142
score: 98.63168674045139
patch: . char CaMeL At ( false ) ;
rank: 142
score: 98.6224609375
patch: return contains CaMeL None ( ch ) ; }
rank: 142
score: 98.36308070591518
patch: return 0 ; return true ;
rank: 143
score: 99.01502900965073
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL
rank: 143
score: 99.005859375
patch: return search CaMeL Chars [ j ] == search CaMeL Len ;
rank: 143
score: 98.76417893629808
patch: if ( ! search CaMeL Chars [ j ] == ch )
rank: 143
score: 98.70654296875
patch: CaMeL Error return false ; return false ;
rank: 143
score: 98.63090297154018
patch: CaMeL ; if ( false )
rank: 143
score: 98.61902465820313
patch: return new int [ ] { search CaMeL Len
rank: 143
score: 98.36273193359375
patch: return 0 . 0 ; break ;
rank: 144
score: 99.01465454101563
patch: return search CaMeL Chars . get ( search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 144
score: 98.95888264973958
patch: return cs . contains CaMeL None ( search CaMeL Chars [ j ] , ch ) ;
rank: 144
score: 98.7630145733173
patch: if ( search CaMeL Chars . length < search CaMeL Len )
rank: 144
score: 98.75283813476562
patch: return ch != null && false ;
rank: 144
score: 98.70629010881696
patch: return null ; return true ;
rank: 144
score: 98.70364990234376
patch: return is false ;
rank: 144
score: 98.63028971354167
patch: . char CaMeL At ; return true ;
rank: 144
score: 98.61779022216797
patch: return false ; j ++ ; }
rank: 144
score: 98.35655975341797
patch: ( 0 ) ; return false ;
rank: 145
score: 98.95774623325893
patch: return search CaMeL Chars [ j ] . contains ( $STRING$ ) ;
rank: 145
score: 98.76267787388393
patch: return cs . contains ( search CaMeL Chars [ j ] ) ;
rank: 145
score: 98.75252685546874
patch: return true ; this . return true ; }
rank: 145
score: 98.70584869384766
patch: return false ; false return false ;
rank: 145
score: 98.70358276367188
patch: return false ; if return true ;
rank: 145
score: 98.62844848632812
patch: . char CaMeL Count -- ; return true ;
rank: 145
score: 98.35504150390625
patch: CaMeL ch ( ; return false ;
rank: 146
score: 99.01402523643092
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of (
rank: 146
score: 98.95771135602679
patch: return search CaMeL Chars [ j ] . add ( ch ) ;
rank: 146
score: 98.76260811941964
patch: if ( cs . to CaMeL Char CaMeL Array ( ) ) {
rank: 146
score: 98.75143771701389
patch: return false ; ; } return true ;
rank: 146
score: 98.70520697699652
patch: return super . false ; return false ;
rank: 146
score: 98.62702772352431
patch: . char CaMeL At ( i ) ,
rank: 146
score: 98.61494954427083
patch: Plane [ j ] . return false ;
rank: 146
score: 98.35456194196429
patch: return ; = false ; ;
rank: 147
score: 99.013671875
patch: return index CaMeL Of ( ch , search CaMeL Chars ) ;
rank: 147
score: 98.76233520507813
patch: if ( search CaMeL Chars [ j ] ==
rank: 147
score: 98.70510525173611
patch: CaMeL List return false ; return true ;
rank: 147
score: 98.62620239257812
patch: . char CaMeL At ( j , 0 ;
rank: 147
score: 98.61412048339844
patch: Plane return return false ; } }
rank: 147
score: 98.35372161865234
patch: return 0 . 0 , false ;
rank: 148
score: 99.01349487304688
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length )
rank: 148
score: 99.00333404541016
patch: return ! search CaMeL Chars [ j ] . is CaMeL Empty ( ) ;
rank: 148
score: 98.76089477539062
patch: if ( search CaMeL Len < 0 ) {
rank: 148
score: 98.74658203125
patch: p = false ; break ; }
rank: 148
score: 98.70499674479167
patch: CaMeL Exception = false ; while false ;
rank: 148
score: 98.70048304966518
patch: return return is CaMeL Empty ;
rank: 148
score: 98.625390625
patch: . char CaMeL At ( 0 , i )
rank: 148
score: 98.61349487304688
patch: return ( [ ] ) false ;
rank: 148
score: 98.35370744977679
patch: return true ; return 1 ;
rank: 149
score: 99.01346261160714
patch: return . index CaMeL Of ( String . index CaMeL Of ( String ) search CaMeL Chars . char CaMeL
rank: 149
score: 99.00308931790866
patch: return search CaMeL Chars [ j ] . close ( ) ;
rank: 149
score: 98.9548006924716
patch: return search CaMeL Chars [ i ] != ch ;
rank: 149
score: 98.76041353665866
patch: if ( search CaMeL Len > search CaMeL Chars . length )
rank: 149
score: 98.704345703125
patch: CaMeL Range = return false ; return false ;
rank: 149
score: 98.69964599609375
patch: return return false ; } else {
rank: 149
score: 98.62538452148438
patch: buffer . char CaMeL At ( j ) ;
rank: 149
score: 98.61141204833984
patch: return ( false && true ) ;
rank: 149
score: 98.35234832763672
patch: ( false ) ; return 1 ;
rank: 150
score: 99.01283772786458
patch: return search CaMeL Chars . contains CaMeL None ( ) ;
rank: 150
score: 99.00297037760417
patch: return ( cs . char CaMeL At ( j ) != ch ) ;
rank: 150
score: 98.95479125976563
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At (
rank: 150
score: 98.74457550048828
patch: = false ; return false ; }
rank: 150
score: 98.70407443576389
patch: CaMeL Number = true ; return false ;
rank: 150
score: 98.6993896484375
patch: return false ; if return false ; } }
rank: 150
score: 98.62371826171875
patch: . return $NUMBER$ . equals ( ch ) ;
rank: 150
score: 98.6102294921875
patch: contains [ j ] = false ;
rank: 150
score: 98.35183279854911
patch: return $NUMBER$ ; return false ;
rank: 151
score: 98.95468139648438
patch: return search CaMeL Chars contains CaMeL None ( cs , search CaMeL Chars ) ;
rank: 151
score: 98.75933837890625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( String . [
rank: 151
score: 98.74440220424107
patch: return true ; } ; }
rank: 151
score: 98.70211181640624
patch: return this . false ; return false ; ;
rank: 151
score: 98.69889068603516
patch: return false ; } } catch ;
rank: 151
score: 98.62348768446181
patch: CaMeL return ( false , false ) ;
rank: 151
score: 98.6083984375
patch: return new String ( cs ) ;
rank: 151
score: 98.35140991210938
patch: return 0 , false ;
rank: 152
score: 99.01202392578125
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( $STRING$ ) ) ) ;
rank: 152
score: 99.00224958147321
patch: . contains CaMeL None ( search CaMeL Chars [ j ] ) ;
rank: 152
score: 98.95399058948864
patch: return cs . contains CaMeL None ( $STRING$ ) ;
rank: 152
score: 98.75923374720982
patch: return ( Char CaMeL Sequence ) search CaMeL Chars [ j ] ;
rank: 152
score: 98.70172119140625
patch: return false ; return null false ;
rank: 152
score: 98.69852905273437
patch: return false ; } } if ; return ;
rank: 152
score: 98.60506184895833
patch: return cs [ i ] == ch ;
rank: 152
score: 98.34989420572917
patch: CaMeL ch return false ;
rank: 153
score: 99.01192434210526
patch: try { char . index CaMeL Of ( String . index CaMeL Of ( ch ) ) ;
rank: 153
score: 99.001806640625
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ;
rank: 153
score: 98.75870361328126
patch: if ( j >= search CaMeL Len ) {
rank: 153
score: 98.74354553222656
patch: return ( char ) false ; }
rank: 153
score: 98.70158386230469
patch: CaMeL Range false false return false ;
rank: 153
score: 98.60427517361111
patch: return search CaMeL Chars [ j ] ==
rank: 153
score: 98.3434829711914
patch: return return 1 ; return 1 ;
rank: 154
score: 99.01063121448864
patch: return search CaMeL Chars . get ( search CaMeL Chars . char CaMeL At ( j ) ) == ch ;
rank: 154
score: 98.75687953404018
patch: if ( search CaMeL Chars . length <= search CaMeL Len ) {
rank: 154
score: 98.7419942220052
patch: return true false ; }
rank: 154
score: 98.70054321289062
patch: CaMeL Exception = false ; else return false ;
rank: 154
score: 98.62233189174107
patch: CaMeL ; return false ; }
rank: 154
score: 98.60348510742188
patch: Plane [ i ] return false ;
rank: 154
score: 98.34306335449219
patch: return != 1 ; return false ;
rank: 155
score: 99.009580078125
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL
rank: 155
score: 98.95348249162946
patch: return cs != null || cs . contains CaMeL None ( ) ;
rank: 155
score: 98.75675455729167
patch: if ( cs . index CaMeL Of ( String . [
rank: 155
score: 98.74196370442708
patch: return false ? false : true ; }
rank: 155
score: 98.69923909505208
patch: return false ; return true ; false ;
rank: 155
score: 98.69779663085937
patch: return true ; } else if return false ;
rank: 155
score: 98.622265625
patch: . char CaMeL At ( j ) . ;
rank: 155
score: 98.59974888392857
patch: return true ; } break ;
rank: 155
score: 98.33871459960938
patch: return false ; return return false ;
rank: 156
score: 99.00956508091518
patch: return ( search CaMeL Chars . char CaMeL At ( j ) ;
rank: 156
score: 99.00098876953125
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String ) ) != 0 ;
rank: 156
score: 98.75436636117789
patch: if ( cs . starts CaMeL With ( ch ) ) {
rank: 156
score: 98.74152483258929
patch: CaMeL false . return true ;
rank: 156
score: 98.69923231336806
patch: CaMeL List . append ( false ) ;
rank: 156
score: 98.69677734375
patch: return null ; } else
rank: 156
score: 98.59703063964844
patch: return false ; } / * /
rank: 157
score: 99.0082015991211
patch: return search CaMeL Chars [ cs . char CaMeL At ( j ) ) ;
rank: 157
score: 99.00097045898437
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String (
rank: 157
score: 98.95217063210227
patch: return cs . contains CaMeL None ( search CaMeL Chars [ j ] . to CaMeL String ( ) ) ;
rank: 157
score: 98.75315348307292
patch: if ( search CaMeL Len <= cs CaMeL Len ) {
rank: 157
score: 98.74083794487848
patch: return ; } } } return false ;
rank: 157
score: 98.69891357421875
patch: CaMeL Builder . return false ; return true ;
rank: 157
score: 98.69495985243056
patch: return false ; } else { return ;
rank: 157
score: 98.62206420898437
patch: . equals CaMeL Ignore CaMeL Case ( false )
rank: 157
score: 98.59664916992188
patch: return null ; }
rank: 157
score: 98.33806610107422
patch: return 0 ; ; return 0 ;
rank: 158
score: 99.00816243489584
patch: return search CaMeL Chars . char CaMeL At ( i ) == ch ;
rank: 158
score: 99.00048828125
patch: return contains CaMeL None ( ch , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 158
score: 98.95171356201172
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) ; }
rank: 158
score: 98.7510986328125
patch: throw new Illegal CaMeL State CaMeL Exception ( ) ; }
rank: 158
score: 98.6975341796875
patch: CaMeL Enum . return false ; return true ;
rank: 158
score: 98.6947530110677
patch: return null ; } }
rank: 158
score: 98.620068359375
patch: . char CaMeL At ( i , matches )
rank: 158
score: 98.3360595703125
patch: return 0 . false ;
rank: 159
score: 99.00806725543478
patch: return ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars .
rank: 159
score: 98.95127563476562
patch: return null . contains CaMeL None ( ) ;
rank: 159
score: 98.74492938701923
patch: if ( ) { String . index CaMeL Of ( String )
rank: 159
score: 98.73814392089844
patch: return true ? true : false ;
rank: 159
score: 98.6974853515625
patch: CaMeL Exception = false ; while return true ;
rank: 159
score: 98.69472830636161
patch: return true ; break ; }
rank: 159
score: 98.61852264404297
patch: . char CaMeL At ( i ;
rank: 159
score: 98.59605407714844
patch: return ( true || false ) ;
rank: 160
score: 98.9996566772461
patch: return Boolean . to CaMeL String ( search CaMeL Chars [ j ] ) ;
rank: 160
score: 98.95109049479167
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At (
rank: 160
score: 98.74486287434895
patch: if ( search CaMeL Chars . length == 0 ) {
rank: 160
score: 98.73756239149306
patch: . false * / return true ; }
rank: 160
score: 98.69554985894098
patch: CaMeL Null return false ; return false ;
rank: 160
score: 98.6946309407552
patch: return is return false ;
rank: 160
score: 98.61814575195312
patch: . return ( ( char ) ch ) ;
rank: 160
score: 98.59596470424107
patch: return false ; / * /
rank: 160
score: 98.33328247070312
patch: return false ; return - $NUMBER$ ;
rank: 161
score: 99.00759887695312
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String .
rank: 161
score: 98.99894575639205
patch: return null + search CaMeL Chars [ j ] ;
rank: 161
score: 98.9505679481908
patch: if ( search CaMeL Chars . length >= search CaMeL Chars . length ) { return true ;
rank: 161
score: 98.7434833233173
patch: if ( search CaMeL Chars . length >= search CaMeL Len )
rank: 161
score: 98.73578491210938
patch: p = false ;
rank: 161
score: 98.69446478949652
patch: return is CaMeL Alive ( false ) ;
rank: 161
score: 98.61785888671875
patch: . char CaMeL At ( i , $NUMBER$ )
rank: 161
score: 98.59183502197266
patch: Plane [ j ] = true ;
rank: 161
score: 98.3317642211914
patch: return false ; ; = false ;
rank: 162
score: 99.0075916108631
patch: return ( search CaMeL Chars . char CaMeL At ( cs . char CaMeL At ( cs . char CaMeL
rank: 162
score: 98.95048384232955
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At (
rank: 162
score: 98.74302164713542
patch: if ( String . index CaMeL Of ( String . [
rank: 162
score: 98.69444056919643
patch: return true ; } * /
rank: 162
score: 98.6160380045573
patch: CaMeL false = false ;
rank: 162
score: 98.32938058035714
patch: CaMeL Builder . return false ;
rank: 163
score: 99.006767578125
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . value CaMeL Of ( search CaMeL Chars . char CaMeL
rank: 163
score: 98.99839680989584
patch: return search CaMeL Chars [ j ] . get CaMeL Name ( ) ;
rank: 163
score: 98.95005289713542
patch: return search CaMeL Chars [ j ] . char CaMeL At ( i ) == ch ;
rank: 163
score: 98.740966796875
patch: if ( search CaMeL Len == search CaMeL Chars . length )
rank: 163
score: 98.73441314697266
patch: return is CaMeL Empty ( ch ;
rank: 163
score: 98.69363742404514
patch: CaMeL Boolean = false ; return true ;
rank: 163
score: 98.32877349853516
patch: CaMeL do = ; = false ;
rank: 164
score: 99.00630115327381
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of (
rank: 164
score: 98.99831973805146
patch: return cs . contains CaMeL None ( , search CaMeL Chars [ j ] ) ;
rank: 164
score: 98.73888050426136
patch: if ( j < search CaMeL Chars . length )
rank: 164
score: 98.73393419053819
patch: f = false ; return true ; }
rank: 164
score: 98.69285278320312
patch: return this . false ; ; return null ;
rank: 164
score: 98.69184112548828
patch: return false ; } / * ;
rank: 164
score: 98.61583251953125
patch: CaMeL return $NUMBER$ . equals ( ch ) ;
rank: 164
score: 98.58780246310764
patch: return false ; } i ++ ; }
rank: 164
score: 98.32821655273438
patch: return ! 1 ; return 1 ;
rank: 165
score: 99.00606863839286
patch: return search CaMeL Chars [ cs . char CaMeL At ( i )
rank: 165
score: 98.99813138521634
patch: return super . contains CaMeL None ( cs , ch ) ;
rank: 165
score: 98.73868502103366
patch: if ( search CaMeL Chars [ j ] == $STRING$ ) {
rank: 165
score: 98.73063441685268
patch: return is CaMeL Empty ; }
rank: 165
score: 98.69263458251953
patch: return false ; return false false ;
rank: 165
score: 98.69158063616071
patch: return true ; } else {
rank: 165
score: 98.61575317382812
patch: CaMeL false = true ;
rank: 165
score: 98.58462863498264
patch: Plane [ j ] return false ; }
rank: 165
score: 98.32805524553571
patch: CaMeL ch ( false ) ;
rank: 166
score: 99.00551350911458
patch: try { String . index CaMeL Of ( ch ) ;
rank: 166
score: 98.99806565504808
patch: return search CaMeL Chars [ j ] . trim ( ) ;
rank: 166
score: 98.94985816592262
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length || search CaMeL Chars . length ++
rank: 166
score: 98.7298583984375
patch: return Character . equals ( false ) ;
rank: 166
score: 98.69197387695313
patch: CaMeL Number = return false ; return false ;
rank: 166
score: 98.69063991970486
patch: return true ; return false ; } }
rank: 166
score: 98.61416286892361
patch: CaMeL return false ; return true ; }
rank: 166
score: 98.58342742919922
patch: return false ; * * * /
rank: 167
score: 99.00544569227431
patch: return search CaMeL Chars . equals ( String . index CaMeL Of ( ch ) ) ;
rank: 167
score: 98.99775133634868
patch: throw new String . index CaMeL Of ( String . index CaMeL Of ( String ) ) ;
rank: 167
score: 98.7379483309659
patch: if ( j <= search CaMeL Chars . length )
rank: 167
score: 98.68953450520833
patch: return false ; } catch return true ;
rank: 167
score: 98.68857828776042
patch: CaMeL Range [ ; if return false ;
rank: 167
score: 98.61337619357639
patch: . if ( false ) return false ;
rank: 167
score: 98.58290608723958
patch: return return false ; } j ++ ;
rank: 167
score: 98.32427215576172
patch: return - $NUMBER$ ; return false ;
rank: 168
score: 99.00459346064815
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL
rank: 168
score: 98.99732971191406
patch: return search CaMeL Chars [ j ] . search CaMeL Chars [ j ] ;
rank: 168
score: 98.72433035714286
patch: return is CaMeL Empty ( ;
rank: 168
score: 98.68855285644531
patch: CaMeL Range . iterator return false ;
rank: 168
score: 98.68845621744792
patch: return false ; } if ( false ;
rank: 168
score: 98.61118774414062
patch: . return 1 . equals ( false ) ;
rank: 168
score: 98.58132595486111
patch: return false [ j ] == ch ;
rank: 168
score: 98.32426234654018
patch: return ) ; return false ;
rank: 169
score: 99.00453252377717
patch: return search CaMeL Chars . get ( ch ) . to CaMeL String ( ) . to CaMeL String ( ) ;
rank: 169
score: 98.99704318576389
patch: return search CaMeL Chars [ j ] . index CaMeL Of ( $STRING$ ) == 0 ;
rank: 169
score: 98.737060546875
patch: byte ch = cs . char CaMeL At ( i ) ;
rank: 169
score: 98.688525390625
patch: return false ; return null ; return true ;
rank: 169
score: 98.68763563368056
patch: return return false ; } return true ;
rank: 169
score: 98.6109619140625
patch: . char CaMeL At ( ; if ( ;
rank: 169
score: 98.57923719618056
patch: String . index CaMeL Of ( cs )
rank: 169
score: 98.32279205322266
patch: return 0 . 0 - false ;
rank: 170
score: 99.00447162828948
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( $STRING$ ) ) ;
rank: 170
score: 98.99697641225961
patch: return ( search CaMeL Chars [ i ] == ch ) ;
rank: 170
score: 98.94855499267578
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ch ) ;
rank: 170
score: 98.73614971454327
patch: if ( search CaMeL Chars . length <= cs CaMeL Len )
rank: 170
score: 98.71611785888672
patch: return is CaMeL Empty ( false ;
rank: 170
score: 98.68846435546875
patch: CaMeL Number return false ; } return false ;
rank: 170
score: 98.686572265625
patch: return false ; if ; return false ; }
rank: 170
score: 98.61044311523438
patch: . char CaMeL At ( ; return true )
rank: 170
score: 98.32225799560547
patch: return 0 . 0 + false ;
rank: 171
score: 98.99655983664773
patch: return search CaMeL Chars [ j ] , ch ;
rank: 171
score: 98.94833374023438
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( String ) ;
rank: 171
score: 98.73565673828125
patch: return contains CaMeL None ; }
rank: 171
score: 98.71253967285156
patch: return is ? false : false ;
rank: 171
score: 98.68744768415179
patch: CaMeL Exception return false ; ;
rank: 171
score: 98.68629760742188
patch: return is CaMeL True return false ; } }
rank: 171
score: 98.6092041015625
patch: . char CaMeL At ( j , true ;
rank: 172
score: 99.00411551339286
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String .
rank: 172
score: 98.99630916819854
patch: return search CaMeL Chars [ j ] boolean . index CaMeL Of ( String ) ;
rank: 172
score: 98.9481201171875
patch: throw String . index CaMeL Of ( $STRING$ , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 172
score: 98.712158203125
patch: . return ( false ) ; }
rank: 172
score: 98.68743024553571
patch: return this . false ; ;
rank: 172
score: 98.685498046875
patch: return false ; return false ; } } }
rank: 172
score: 98.60827026367187
patch: . char CaMeL At ( j , $NUMBER$ ;
rank: 172
score: 98.57263946533203
patch: return true ; } } break ;
rank: 172
score: 98.31893920898438
patch: return ! ch ; return false ;
rank: 173
score: 99.00404575892857
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String ) . last CaMeL Index CaMeL
rank: 173
score: 98.99613131009616
patch: return search CaMeL Chars [ j ] == null . ch ;
rank: 173
score: 98.94639369419643
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length || search CaMeL Chars . index CaMeL
rank: 173
score: 98.71200222439236
patch: return false ; ; } return false ;
rank: 173
score: 98.68650599888393
patch: CaMeL Number ; return false ;
rank: 173
score: 98.68534545898437
patch: return false ; } / * * * /
rank: 173
score: 98.60825602213542
patch: CaMeL false = true ; break ; }
rank: 173
score: 98.57262166341145
patch: Plane { return false ;
rank: 173
score: 98.31766510009766
patch: return 0 . 0 ? false ;
rank: 174
score: 99.004033203125
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length ) . length ( ) ;
rank: 174
score: 98.99507279829545
patch: assert search CaMeL Chars [ j ] == ch ;
rank: 174
score: 98.94619750976562
patch: return String . index CaMeL Of ( String . index CaMeL
rank: 174
score: 98.73204210069444
patch: throw new Interrupted CaMeL Exception ( ) ;
rank: 174
score: 98.68580322265625
patch: CaMeL Range . return null ; return false ;
rank: 174
score: 98.60791625976563
patch: . char CaMeL At ( i ++ ) ;
rank: 174
score: 98.57205200195312
patch: return [ i ] == ch ;
rank: 174
score: 98.31742858886719
patch: return 0 . ; return false ;
rank: 175
score: 98.94548204210069
patch: throw String . index CaMeL Of ( String . index CaMeL Of ( $STRING$ ) ) ;
rank: 175
score: 98.7307637532552
patch: return return return false ;
rank: 175
score: 98.71019744873047
patch: if ( false ) break ; }
rank: 175
score: 98.68418579101562
patch: return false ; } } if return true ;
rank: 175
score: 98.60788981119792
patch: . return false ; return true ; }
rank: 175
score: 98.57102966308594
patch: result [ j ] = true ;
rank: 176
score: 99.0033467610677
patch: return . index CaMeL Of ( $STRING$ ) == 0 ;
rank: 176
score: 98.94538225446429
patch: return search CaMeL Chars [ j ] . contains ( cs ) ;
rank: 176
score: 98.72954852764423
patch: return cs = cs . char CaMeL At ( i ) ;
rank: 176
score: 98.70677947998047
patch: . false * / return false ;
rank: 176
score: 98.68387858072917
patch: CaMeL Error return false ;
rank: 176
score: 98.68372192382813
patch: return false ; } else if ( false ;
rank: 176
score: 98.6069564819336
patch: = false ; if ( false )
rank: 176
score: 98.57078552246094
patch: return 0 ? false : false ;
rank: 176
score: 98.31666564941406
patch: return length ; { return false ;
rank: 177
score: 99.00269616168478
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String ) ) )
rank: 177
score: 98.70621163504464
patch: . return true ; } }
rank: 177
score: 98.68345336914062
patch: return is CaMeL True ( false , false ;
rank: 177
score: 98.68314906529018
patch: CaMeL Exception false return false ;
rank: 177
score: 98.60675048828125
patch: . char CaMeL At ( 0 ) ;
rank: 177
score: 98.569580078125
patch: Plane return false ; } j ++ ;
rank: 177
score: 98.31647491455078
patch: return ; { return - 1 ;
rank: 178
score: 99.00227494673295
patch: return contains CaMeL None ( search CaMeL Len ) ;
rank: 178
score: 98.9937411221591
patch: return this . contains CaMeL None ( ch ) ;
rank: 178
score: 98.72940063476562
patch: return ( cs . Char CaMeL Sequence ) ;
rank: 178
score: 98.70360649956598
patch: return false ; } } if ( ;
rank: 178
score: 98.6825942993164
patch: return false ; } } else ;
rank: 178
score: 98.68003845214844
patch: CaMeL List . return false ; }
rank: 178
score: 98.56881713867188
patch: Plane [ j ] return true ;
rank: 179
score: 99.00176595052083
patch: return this . cs . char CaMeL At ( j ) == ch ;
rank: 179
score: 98.94441731770833
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At (
rank: 179
score: 98.72911487926136
patch: if ( search CaMeL Chars [ j ] ) {
rank: 179
score: 98.70284271240234
patch: return $STRING$ . equals ( ch ;
rank: 179
score: 98.68252563476562
patch: CaMeL Builder . false ; return false ; }
rank: 179
score: 98.67971462673611
patch: CaMeL Range < ] : return false ;
rank: 179
score: 98.60537109375
patch: . char CaMeL At ( j , 0 )
rank: 179
score: 98.31291961669922
patch: CaMeL *= false ; return false ;
rank: 180
score: 99.00174082880434
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . length ( ) 1 ;
rank: 180
score: 98.9931640625
patch: byte . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ;
rank: 180
score: 98.72862752278645
patch: if ( cs . starts CaMeL With ( ch ) )
rank: 180
score: 98.70182291666667
patch: return true ? false : false ; }
rank: 180
score: 98.6822509765625
patch: return false ; } * * ;
rank: 180
score: 98.67882622612848
patch: CaMeL Range false return this . false ;
rank: 180
score: 98.60492621527777
patch: CaMeL false = false ; break ; }
rank: 180
score: 98.31266021728516
patch: return ! false ; return 1 ;
rank: 181
score: 99.00167846679688
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . to CaMeL Object ( ) ;
rank: 181
score: 98.70088958740234
patch: return is CaMeL Empty ( ) ;
rank: 181
score: 98.68058946397569
patch: return false ; } * * * /
rank: 181
score: 98.67727322048611
patch: CaMeL Number = false ; while false ;
rank: 181
score: 98.60481092664931
patch: = this . false ; return true ;
rank: 181
score: 98.31166585286458
patch: return 0 != 0 ;
rank: 182
score: 99.00165758634868
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . ch ) ) ;
rank: 182
score: 98.9921875
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ) ;
rank: 182
score: 98.94327799479167
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) return true ;
rank: 182
score: 98.72804768880208
patch: if ( search CaMeL Len > search CaMeL Len ) {
rank: 182
score: 98.69890679253473
patch: t = false ; return true ; }
rank: 182
score: 98.68004608154297
patch: return ; return false ; } }
rank: 182
score: 98.67674424913194
patch: CaMeL value = false ; return false ;
rank: 182
score: 98.60278930664063
patch: . char CaMeL At ( j ) ; ;
rank: 182
score: 98.31072998046875
patch: return 0 ) ; return false ;
rank: 183
score: 99.001298828125
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL
rank: 183
score: 98.99115459735577
patch: return ( search CaMeL Chars [ j ] != ch ) ;
rank: 183
score: 98.67573377821181
patch: return get CaMeL Length ( false ) ;
rank: 183
score: 98.56208038330078
patch: Plane [ j ] = ch ;
rank: 183
score: 98.31060791015625
patch: return 0 . 0 && false ;
rank: 184
score: 99.00077311197917
patch: return index CaMeL Of ( search CaMeL Chars , search CaMeL Chars ) ;
rank: 184
score: 98.9906997680664
patch: String . index CaMeL Of ( String ) index CaMeL Of ( String ) ;
rank: 184
score: 98.94290161132812
patch: return cs . contains CaMeL None ( cs . char CaMeL At ( j ) . to CaMeL String ( ) ) ;
rank: 184
score: 98.72671274038461
patch: return ( search CaMeL Chars [ j ] , ch ) ;
rank: 184
score: 98.6981430053711
patch: return true ? true : true ;
rank: 184
score: 98.67849731445312
patch: return false ; } += false ;
rank: 184
score: 98.6750259399414
patch: CaMeL Range . false return false ;
rank: 184
score: 98.56174142020089
patch: Plane . return false ; }
rank: 184
score: 98.30987548828125
patch: return 1 ; return false ;
rank: 185
score: 99.00020559210526
patch: return . index CaMeL Of ( String . index CaMeL Of ( String ) ) > 0 ;
rank: 185
score: 98.99063814603366
patch: return String . index CaMeL Of ( String ) != 1 ;
rank: 185
score: 98.94278564453126
patch: return cs . contains CaMeL None ( cs , cs . char CaMeL At ( j ) ) ;
rank: 185
score: 98.72603352864583
patch: v = cs . char CaMeL At ( j ) ;
rank: 185
score: 98.69776153564453
patch: return ( byte ) false ; }
rank: 185
score: 98.67814805772569
patch: return is CaMeL Empty ; return false ;
rank: 185
score: 98.66986083984375
patch: CaMeL Range [ ; return true ;
rank: 185
score: 98.599951171875
patch: . char CaMeL At ( i , 0 ;
rank: 185
score: 98.5596923828125
patch: return false ; * /
rank: 185
score: 98.30864606584821
patch: return false ; return $STRING$ ;
rank: 186
score: 98.99995930989583
patch: return search CaMeL Chars [ cs . char CaMeL At ( j ) ]
rank: 186
score: 98.99053955078125
patch: return this . search CaMeL Chars [ j ] . char CaMeL At ( j ) ;
rank: 186
score: 98.94244384765625
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . to CaMeL String ( )
rank: 186
score: 98.72575239701705
patch: if ( String . index CaMeL Of ( String .
rank: 186
score: 98.6973876953125
patch: return false ; ; } ;
rank: 186
score: 98.66963026258681
patch: CaMeL Range . add ( false ) ;
rank: 186
score: 98.59822387695313
patch: . char CaMeL At ( i ) . ;
rank: 186
score: 98.55902099609375
patch: return new int [ ] { j
rank: 186
score: 98.30796813964844
patch: return 0 ; { return false ;
rank: 187
score: 98.7255859375
patch: return search CaMeL Chars . to CaMeL String ( ) ; }
rank: 187
score: 98.697265625
patch: g = false ; return true ;
rank: 187
score: 98.66875542534723
patch: return get CaMeL Value ( false ) ;
rank: 187
score: 98.30533599853516
patch: CaMeL Builder ( ; return false ;
rank: 188
score: 98.99894409179687
patch: return ( search CaMeL Chars . char CaMeL At ( cs . char CaMeL At ( j ) )
rank: 188
score: 98.94191331129808
patch: return cs [ j ] . contains CaMeL None ( ) ;
rank: 188
score: 98.72545447716347
patch: return ( search CaMeL Chars [ j ] ) == ch ;
rank: 188
score: 98.69645182291667
patch: return false ; } if ( false )
rank: 188
score: 98.6764404296875
patch: return false ; } } return false ; }
rank: 188
score: 98.66852569580078
patch: CaMeL Range false return false ; ;
rank: 188
score: 98.59513346354167
patch: . return ( this . false ) ;
rank: 188
score: 98.55667877197266
patch: Plane * * / return false ;
rank: 188
score: 98.30455780029297
patch: CaMeL ch return ; = false ;
rank: 189
score: 98.98996151194854
patch: return super . contains CaMeL None ( search CaMeL Chars , search CaMeL Chars ) ;
rank: 189
score: 98.72498668323864
patch: while ( j < search CaMeL Chars . length )
rank: 189
score: 98.67554321289063
patch: return false ; } * / return false ;
rank: 189
score: 98.59501953125
patch: . char CaMeL At ( j , 1 ;
rank: 190
score: 98.99880746694711
patch: return this . cs . contains CaMeL None ( cs ) ;
rank: 190
score: 98.94043907752403
patch: return search CaMeL Chars [ j ] . to CaMeL Lower CaMeL Case ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ;
rank: 190
score: 98.72495339133523
patch: if ( i >= search CaMeL Chars . length )
rank: 190
score: 98.67544119698661
patch: return is ; return false ;
rank: 190
score: 98.6654052734375
patch: return this . false ; return null ;
rank: 190
score: 98.55397542317708
patch: String . index CaMeL Of ( $STRING$ )
rank: 190
score: 98.30057525634766
patch: return == 1 ; return false ;
rank: 191
score: 98.99854532877605
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length ) . length 1 ;
rank: 191
score: 98.98948910361842
patch: return ! search CaMeL Chars [ j ] . equals CaMeL Ignore CaMeL Case ( ch ) ;
rank: 191
score: 98.93994140625
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length && search CaMeL Chars . length ++
rank: 191
score: 98.72492065429688
patch: result = search CaMeL Chars [ j ] ;
rank: 191
score: 98.67251586914062
patch: return false ; } else { return ; ;
rank: 191
score: 98.66374376085069
patch: CaMeL List . false ; return false ;
rank: 191
score: 98.59438747829861
patch: . return ( ch , false ) ;
rank: 191
score: 98.55256652832031
patch: return false ; } else { }
rank: 191
score: 98.30009155273437
patch: return 0 ; ;
rank: 192
score: 98.99842900815217
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars , String . index CaMeL
rank: 192
score: 98.9398422241211
patch: return search CaMeL Chars [ j ] . starts CaMeL With ( ch ) ;
rank: 192
score: 98.72425426136364
patch: if ( search CaMeL Chars . length == 0 )
rank: 192
score: 98.67011369977679
patch: return false ; } else ;
rank: 192
score: 98.66252983940973
patch: return false ; ; ; return true ;
rank: 192
score: 98.59401245117188
patch: . equals CaMeL Ignore CaMeL Case ( $STRING$ )
rank: 192
score: 98.30008697509766
patch: return return 1 ; return 0 ;
rank: 193
score: 98.99816363790761
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( ) ) ) ;
rank: 193
score: 98.72322082519531
patch: return cs ;
rank: 193
score: 98.69363403320312
patch: CaMeL false . return true ; }
rank: 193
score: 98.66979370117187
patch: return false ; } } else { return ;
rank: 193
score: 98.66193389892578
patch: return new Float ( false ) ;
rank: 193
score: 98.59330444335937
patch: . char CaMeL At ( j ) ++ ;
rank: 193
score: 98.55147976345486
patch: return true ; } j ++ ; }
rank: 194
score: 98.99800248579545
patch: return ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) )
rank: 194
score: 98.93860973011364
patch: return cs . contains CaMeL None ( search CaMeL Chars . char CaMeL At ( j ) , ch ) ;
rank: 194
score: 98.72240271935097
patch: if ( search CaMeL Chars . length ( ) == 0 )
rank: 194
score: 98.69265747070312
patch: p = ; return false ; }
rank: 194
score: 98.66851806640625
patch: return false ; } else break ;
rank: 194
score: 98.66013590494792
patch: CaMeL Exception = true ; return true ;
rank: 194
score: 98.59195556640626
patch: . char CaMeL At ( false , false )
rank: 194
score: 98.54893493652344
patch: return this ? false : false ;
rank: 194
score: 98.29890441894531
patch: return return false ; return 1 ;
rank: 195
score: 98.99800037202381
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars ) ) ;
rank: 195
score: 98.98714505709134
patch: return null + cs . char CaMeL At ( j ) ;
rank: 195
score: 98.93831380208333
patch: return search CaMeL Chars [ j ] . to CaMeL Object ( ) . to CaMeL String ( ) ;
rank: 195
score: 98.72230021158855
patch: throw new Illegal CaMeL State CaMeL Exception ( String ) ;
rank: 195
score: 98.69259207589286
patch: return ( ch ) ; }
rank: 195
score: 98.66845703125
patch: return ; ; } } return false ;
rank: 195
score: 98.65972900390625
patch: return null ; return this . false ;
rank: 195
score: 98.58919677734374
patch: . char CaMeL At ( j , $STRING$ )
rank: 195
score: 98.54873996310764
patch: return this [ j ] == ch ;
rank: 195
score: 98.29426574707031
patch: return false ; ; return 0 ;
rank: 196
score: 98.997802734375
patch: return String . index CaMeL Of ( String . index CaMeL Of ( $STRING$ ) ) == 0 ;
rank: 196
score: 98.986083984375
patch: . return search CaMeL Chars [ j ] == ch ;
rank: 196
score: 98.93779907226562
patch: throw String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At (
rank: 196
score: 98.72159830729167
patch: break = String . index CaMeL Of ( String ) ;
rank: 196
score: 98.69045681423611
patch: return false ; } else if ( ;
rank: 196
score: 98.65679931640625
patch: CaMeL Range ( return false ) ;
rank: 196
score: 98.587646484375
patch: . return - 1 == false ;
rank: 196
score: 98.29268646240234
patch: CaMeL Builder return ; = false ;
rank: 197
score: 98.99754333496094
patch: return contains CaMeL None ( cs . char CaMeL At ( i ) ) ;
rank: 197
score: 98.98515973772321
patch: return ! String . index CaMeL Of ( String ) == 0 ;
rank: 197
score: 98.93767989309211
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals ( ) ;
rank: 197
score: 98.71881573016827
patch: if ( cs . to CaMeL String ( ) == null )
rank: 197
score: 98.69029405381944
patch: return false ? true : false ; }
rank: 197
score: 98.66828748914931
patch: return true ; } else return true ;
rank: 197
score: 98.65677897135417
patch: return false ; ; if return false ;
rank: 197
score: 98.58712768554688
patch: CaMeL Enum . char CaMeL At ( i )
rank: 197
score: 98.54334852430556
patch: CaMeL Number [ j ] = ch ;
rank: 197
score: 98.29266357421875
patch: ( false ) ; return null ;
rank: 198
score: 98.98465983072917
patch: return ( cs . char CaMeL At ( i ) == ch ) ;
rank: 198
score: 98.93739229090073
patch: return search CaMeL Chars [ j ] . to CaMeL Lower CaMeL Case ( ) ;
rank: 198
score: 98.7169189453125
patch: return ( cs , search CaMeL Len ) ;
rank: 198
score: 98.66813354492187
patch: return is CaMeL True ( false ) ; }
rank: 198
score: 98.65513610839844
patch: CaMeL Exception ; return false ; }
rank: 198
score: 98.5857177734375
patch: . char CaMeL At ( 0 , j )
rank: 198
score: 98.54228864397321
patch: return is [ i ] ;
rank: 198
score: 98.29206085205078
patch: return 0 . ; = false ;
rank: 199
score: 98.99734375
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL
rank: 199
score: 98.98358154296875
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ;
rank: 199
score: 98.71624755859375
patch: throw new Null CaMeL Pointer CaMeL Exception ( ) ; }
rank: 199
score: 98.66755676269531
patch: return null ; return true ; }
rank: 199
score: 98.65416717529297
patch: return new ! ( false ) ;
rank: 199
score: 98.58570556640625
patch: . char CaMeL At ( i , in )
rank: 199
score: 98.54033551897321
patch: { return false ; } }
rank: 199
score: 98.29072570800781
patch: CaMeL Builder ( ; = false ;
rank: 200
score: 98.98329671223958
patch: return cs . contains ( ch ) ;
rank: 200
score: 98.93642578125
patch: return String . index CaMeL Of ( String . cs , search CaMeL Chars . char CaMeL At (
rank: 200
score: 98.71507850060097
patch: if ( search CaMeL Chars . length ( ) > 0 )
rank: 200
score: 98.68923611111111
patch: f = false ; return false ; }
rank: 200
score: 98.66710662841797
patch: return false ; } for false ;
rank: 200
score: 98.65365600585938
patch: CaMeL Range . false return true ;
rank: 200
score: 98.538330078125
patch: return search CaMeL Len [ j ] ;
rank: 200
score: 98.2905044555664
patch: return 0 ; ; return 1 ;
rank: 201
score: 98.99703979492188
patch: return this . cs . contains CaMeL None ( ) ;
rank: 201
score: 98.9826190655048
patch: return null . index CaMeL Of ( String ) == 0 ;
rank: 201
score: 98.93630149147727
patch: throw String . index CaMeL Of ( $STRING$ ) ;
rank: 201
score: 98.71397047776442
patch: if ( search CaMeL Chars [ j ] == cs ) {
rank: 201
score: 98.68863932291667
patch: b = false ; return true ; }
rank: 201
score: 98.65275573730469
patch: CaMeL List false ; return false ;
rank: 201
score: 98.53584289550781
patch: return true ; } } } }
rank: 201
score: 98.29022979736328
patch: return return ) ; return 1 ;
rank: 202
score: 98.71387828480114
patch: if ( search CaMeL Len >= cs . length )
rank: 202
score: 98.68807220458984
patch: c = false ; break ; }
rank: 202
score: 98.66451009114583
patch: return false ; } else if ; }
rank: 202
score: 98.65266927083333
patch: CaMeL Runtime . return ( false ) ;
rank: 202
score: 98.58348931206598
patch: return $NUMBER$ . equals ( ch ) ;
rank: 202
score: 98.28999328613281
patch: return 0 ; ; = false ;
rank: 203
score: 98.99656168619792
patch: try { String . index CaMeL Of ( String ) ;
rank: 203
score: 98.93551296657986
patch: return String . index CaMeL Of ( $STRING$ , search CaMeL Chars . char CaMeL At (
rank: 203
score: 98.71292114257812
patch: pos = cs . char CaMeL At ( j ) ;
rank: 203
score: 98.68687608506944
patch: return ! is CaMeL Empty ( ch ;
rank: 203
score: 98.66336059570312
patch: return false ; return false ; } else {
rank: 203
score: 98.65242004394531
patch: return false ; ; return null ;
rank: 203
score: 98.58201904296875
patch: . char char CaMeL At ( j ) ;
rank: 203
score: 98.53219943576389
patch: return class [ j ] == ch ;
rank: 204
score: 98.99602950246711
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL
rank: 204
score: 98.98009236653645
patch: return ch == ch ;
rank: 204
score: 98.9345370205966
patch: return search CaMeL Chars [ j ] & ch ;
rank: 204
score: 98.712158203125
patch: if ( cs . to CaMeL String ( ) ) {
rank: 204
score: 98.663037109375
patch: return this . false ; } } if ;
rank: 204
score: 98.64987521701389
patch: CaMeL arraycopy = false ; return false ;
rank: 204
score: 98.5316162109375
patch: Plane . return false ;
rank: 204
score: 98.28787994384766
patch: CaMeL += 0 ; return false ;
rank: 205
score: 98.99591533954327
patch: return search CaMeL Chars [ search CaMeL Len ] == ch ;
rank: 205
score: 98.93392605251736
patch: return search CaMeL Chars [ j ] == ch . index CaMeL Of ( $STRING$ ) ;
rank: 205
score: 98.66261596679688
patch: return false ; } else return true ; }
rank: 205
score: 98.64907836914062
patch: CaMeL Exception = ; return false ;
rank: 205
score: 98.5796630859375
patch: . char CaMeL At ( j , count )
rank: 205
score: 98.52899932861328
patch: return $NUMBER$ ? false : false ;
rank: 205
score: 98.28757149832589
patch: return false . return false ;
rank: 206
score: 98.97719319661458
patch: try { cs . char CaMeL At ( j ) ;
rank: 206
score: 98.93384602864583
patch: return search CaMeL Chars . char CaMeL At ( j ) != ch ;
rank: 206
score: 98.7119852701823
patch: return ( cs , cs . search CaMeL Chars ) ;
rank: 206
score: 98.68376159667969
patch: CaMeL Builder . return false ; }
rank: 206
score: 98.66218566894531
patch: return false ; for false ; }
rank: 206
score: 98.64728546142578
patch: CaMeL Range false false return true ;
rank: 206
score: 98.57964409722223
patch: . return is CaMeL Empty ( ) ;
rank: 206
score: 98.28622000558036
patch: return ; { return 1 ;
rank: 207
score: 98.99542846679688
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String ) ) == 1 ;
rank: 207
score: 98.9766512784091
patch: return ch == search CaMeL Chars [ j ] ;
rank: 207
score: 98.71141357421875
patch: if ( search CaMeL Len == 0 ) {
rank: 207
score: 98.66190338134766
patch: return true ; } if false ;
rank: 207
score: 98.64663357204861
patch: return this . return ( false ) ;
rank: 207
score: 98.57907104492188
patch: . char CaMeL At ( false , 1 )
rank: 207
score: 98.52585856119792
patch: return true ; break ;
rank: 207
score: 98.28573608398438
patch: return true ; return - false ;
rank: 208
score: 98.99501439144737
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) ) ;
rank: 208
score: 98.97640787760416
patch: . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ;
rank: 208
score: 98.93330522017045
patch: return search CaMeL Chars [ j ] . to CaMeL Lower CaMeL Case ( ) . equals ( $STRING$ ) ;
rank: 208
score: 98.71121215820312
patch: p = cs . char CaMeL At ( j ) ;
rank: 208
score: 98.68041314019098
patch: return Boolean . value CaMeL Of ( ;
rank: 208
score: 98.66093444824219
patch: return return false ; } } ;
rank: 208
score: 98.64427354600694
patch: return false ; ; else return false ;
rank: 208
score: 98.57880859375
patch: . char CaMeL At ( i ) ++ ;
rank: 208
score: 98.52437337239583
patch: return value [ j ] == ch ;
rank: 208
score: 98.28533935546875
patch: CaMeL do return ; = false ;
rank: 209
score: 98.99468672902961
patch: return . index CaMeL Of ( String . index CaMeL Of ( String ) cs . char CaMeL
rank: 209
score: 98.97616811899039
patch: return search CaMeL Chars [ j ] == ch . ch ;
rank: 209
score: 98.93325323807566
patch: if ( search CaMeL Chars . length == search CaMeL Chars . length ) { return false ;
rank: 209
score: 98.71068318684895
patch: if ( 0 == search CaMeL Chars . length ) {
rank: 209
score: 98.67985534667969
patch: return false ; } if ( ;
rank: 209
score: 98.66040717230902
patch: . set ; return ( false ) ;
rank: 209
score: 98.64427354600694
patch: CaMeL List false return this . false ;
rank: 209
score: 98.57798461914062
patch: $NUMBER$ . char CaMeL At ( i , ;
rank: 209
score: 98.52033233642578
patch: return true ; / * * /
rank: 209
score: 98.283935546875
patch: return return false ; return true ;
rank: 210
score: 98.99405110677084
patch: try { search CaMeL Chars [ cs . char CaMeL At ( j )
rank: 210
score: 98.9744873046875
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars ) ) ) ;
rank: 210
score: 98.93316095525569
patch: return search CaMeL Chars [ j ] . to CaMeL Lower CaMeL Case ( ) . equals ( ch ) ;
rank: 210
score: 98.71034749348958
patch: throw new Illegal CaMeL Argument CaMeL Exception ( i ) ;
rank: 210
score: 98.67955186631944
patch: g = false ; return true ; }
rank: 210
score: 98.66004028320313
patch: return true ; } else { return false ;
rank: 210
score: 98.64407009548611
patch: CaMeL Enum = false ; return false ;
rank: 210
score: 98.57767333984376
patch: . char CaMeL At ; if ( false )
rank: 210
score: 98.51729583740234
patch: return new int [ 0 ] ;
rank: 210
score: 98.28276062011719
patch: return is ( false ) ; ;
rank: 211
score: 98.99325561523438
patch: return $STRING$ . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of (
rank: 211
score: 98.97440279447116
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) , ch ) ) ;
rank: 211
score: 98.93279065583882
patch: return search CaMeL Chars [ j ] != ch . to CaMeL Char CaMeL Array ( ) ;
rank: 211
score: 98.71016438802083
patch: if ( search CaMeL Len < cs . length ) {
rank: 211
score: 98.67780412946429
patch: return ! false ; } ;
rank: 211
score: 98.65999348958333
patch: return false ; } else if false ;
rank: 211
score: 98.64335632324219
patch: CaMeL Range . return false ; ;
rank: 211
score: 98.57746233258929
patch: = false ; return false ;
rank: 211
score: 98.28217315673828
patch: return ; return ; return false ;
rank: 212
score: 98.9741455078125
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . to CaMeL String ( ) ) ) ) ;
rank: 212
score: 98.93271771599265
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals ;
rank: 212
score: 98.709716796875
patch: if ( search CaMeL Len < cs . length )
rank: 212
score: 98.67740885416667
patch: return true ; } return true ; }
rank: 212
score: 98.64315795898438
patch: return new ? false : false ;
rank: 212
score: 98.5772705078125
patch: $NUMBER$ . char CaMeL At ( j , ;
rank: 212
score: 98.51564243861607
patch: return false ; } false ;
rank: 212
score: 98.28173828125
patch: return false ; return false ; else
rank: 213
score: 98.99301382211539
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String ) ) ) ;
rank: 213
score: 98.97292654854911
patch: return contains CaMeL None ( search CaMeL Chars [ i ] ) ;
rank: 213
score: 98.67675103081598
patch: return Character . starts CaMeL With ( ;
rank: 213
score: 98.65726725260417
patch: CaMeL Object . return ( false ) ;
rank: 213
score: 98.64290945870536
patch: CaMeL Range = return false ;
rank: 213
score: 98.57644314236111
patch: CaMeL Enum . return ( false ) ;
rank: 214
score: 98.9724357358871
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) ) ;
rank: 214
score: 98.93148983226104
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) != null ;
rank: 214
score: 98.70829554966518
patch: return return ( false ) ;
rank: 214
score: 98.67613983154297
patch: t = false ; return true ;
rank: 214
score: 98.6554183959961
patch: return return false ; break ; }
rank: 214
score: 98.64181857638889
patch: CaMeL Range = false ; if false ;
rank: 214
score: 98.57639567057292
patch: CaMeL ; try { false = false ;
rank: 214
score: 98.51402282714844
patch: Plane return false ; return true ;
rank: 214
score: 98.28122384207589
patch: return false ; return ; {
rank: 215
score: 98.99298416940789
patch: try { return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL
rank: 215
score: 98.97197931463069
patch: return null . contains CaMeL None ( ch ) ;
rank: 215
score: 98.93148000616776
patch: return search CaMeL Chars [ j ] . contains ( search CaMeL Chars [ j ] ) ;
rank: 215
score: 98.7073465983073
patch: if ( search CaMeL Len >= cs . length ) {
rank: 215
score: 98.67581176757812
patch: r = false ; return true ;
rank: 215
score: 98.65538024902344
patch: return ; ; } return false ;
rank: 215
score: 98.63966878255208
patch: CaMeL Range = true ; return false ;
rank: 215
score: 98.57423618861607
patch: . return ( ch ) ;
rank: 215
score: 98.28074645996094
patch: ; { return ; = false ;
rank: 216
score: 98.99287109375
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL
rank: 216
score: 98.97179236778847
patch: return ( String ) cs . to CaMeL String ( ) ;
rank: 216
score: 98.93110795454545
patch: if ( search CaMeL Chars . length < cs . length ) search CaMeL Chars . to CaMeL String ( )
rank: 216
score: 98.70628943810097
patch: if ( cs . to CaMeL Char CaMeL Array ( ) )
rank: 216
score: 98.675048828125
patch: return ! is CaMeL Empty ( ; }
rank: 216
score: 98.63874816894531
patch: return false ; false return true ;
rank: 216
score: 98.573974609375
patch: . return ( ch == false ) ;
rank: 216
score: 98.51354217529297
patch: return return false ; } break ;
rank: 216
score: 98.28069305419922
patch: return is ; { return false ;
rank: 217
score: 98.99250139508929
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( String . last CaMeL Index CaMeL
rank: 217
score: 98.97139485677083
patch: return String . index CaMeL Of ( String ) < cs . length ;
rank: 217
score: 98.93080049402573
patch: return search CaMeL Chars [ search CaMeL Chars . length - 1 ] == ch ;
rank: 217
score: 98.70531209309895
patch: return new Char CaMeL Sequence ( search CaMeL Chars ) ;
rank: 217
score: 98.67437744140625
patch: return ( false , false , ;
rank: 217
score: 98.65476684570312
patch: return true ; } } if ( false ;
rank: 217
score: 98.63847520616319
patch: CaMeL Object = false ; return false ;
rank: 217
score: 98.57387966579861
patch: CaMeL ; if ( ; return true )
rank: 217
score: 98.51314871651786
patch: Plane { return true ; }
rank: 217
score: 98.28059895833333
patch: return false + false ;
rank: 218
score: 98.99234375
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL
rank: 218
score: 98.97063739483173
patch: return search CaMeL Chars [ j ] . clone ( ) ;
rank: 218
score: 98.70354669744319
patch: return cs . char CaMeL At ( i ) ;
rank: 218
score: 98.67300415039062
patch: return false ; } ++ false ;
rank: 218
score: 98.65422058105469
patch: return false ; } } ; ;
rank: 218
score: 98.63814968532986
patch: CaMeL Range [ false ] = false ;
rank: 218
score: 98.57172309027777
patch: . return true ; } return true ;
rank: 218
score: 98.51131184895833
patch: return 0 [ j ] == ch ;
rank: 218
score: 98.27977643694196
patch: return 0 != false ; ;
rank: 219
score: 98.99211319633152
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length ) - 1 ;
rank: 219
score: 98.96835123697916
patch: return String . index CaMeL Of ( String ) == 0 . true ;
rank: 219
score: 98.93079723011364
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . ends CaMeL With ( $STRING$ ) ;
rank: 219
score: 98.7031758626302
patch: if ( j > search CaMeL Chars . length ) {
rank: 219
score: 98.67267523871527
patch: return ! false ; } return true ;
rank: 219
score: 98.65394287109375
patch: CaMeL Builder return false ; } return false ;
rank: 219
score: 98.57161712646484
patch: CaMeL false = false ; break ;
rank: 219
score: 98.5107421875
patch: Plane return false ; } break ;
rank: 219
score: 98.27961077008929
patch: return length ; return false ;
rank: 220
score: 98.99201766304348
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars ,
rank: 220
score: 98.9302978515625
patch: return search CaMeL Chars [ j ] != $STRING$ ;
rank: 220
score: 98.70313609730114
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ;
rank: 220
score: 98.67188371930804
patch: . return false ; } ;
rank: 220
score: 98.65338134765625
patch: return false ; } else if return true ;
rank: 220
score: 98.6364517211914
patch: return false ; return return true ;
rank: 220
score: 98.57141791449652
patch: CaMeL return ( false , true ) ;
rank: 220
score: 98.51050676618304
patch: return false ; * * /
rank: 220
score: 98.27847290039062
patch: return ~ ) ; return false ;
rank: 221
score: 98.96800853587963
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . last CaMeL Index CaMeL Of (
rank: 221
score: 98.93013269761029
patch: return search CaMeL Chars [ j ] == ch . to CaMeL Object ( ) ;
rank: 221
score: 98.67173936631944
patch: r = false ; return true ; }
rank: 221
score: 98.65213012695312
patch: return false ; break ; } } if ;
rank: 221
score: 98.63570827907986
patch: return true ; ; ; return false ;
rank: 221
score: 98.56998291015626
patch: . char CaMeL At ( j ++ ) ;
rank: 221
score: 98.50862121582031
patch: result [ i ] = true ;
rank: 221
score: 98.27671813964844
patch: ( false ) ; return $NUMBER$ ;
rank: 222
score: 98.96730393629808
patch: return search CaMeL Chars [ j ] . clear ( ) ;
rank: 222
score: 98.93013269761029
patch: return search CaMeL Chars [ j ] . contains CaMeL All ( String . index CaMeL
rank: 222
score: 98.70216721754808
patch: if ( search CaMeL Chars . length > cs CaMeL Len )
rank: 222
score: 98.65095738002232
patch: return this . false ; }
rank: 222
score: 98.6349105834961
patch: return null ; ; return false ;
rank: 222
score: 98.50727844238281
patch: Plane = false ; return false ;
rank: 222
score: 98.27661895751953
patch: ( false ) ; return true ;
rank: 223
score: 98.99114379882812
patch: return contains CaMeL None ( search CaMeL Chars , String . index CaMeL Of ( String ) ) ;
rank: 223
score: 98.96708540482955
patch: return ! ch . contains CaMeL None ( ) ;
rank: 223
score: 98.92974175347223
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) return false ;
rank: 223
score: 98.70138549804688
patch: ! String . index CaMeL Of ( $STRING$ )
rank: 223
score: 98.67103576660156
patch: return ! ( false ) ; }
rank: 223
score: 98.65077718098958
patch: return is CaMeL True return false ; }
rank: 223
score: 98.63480631510417
patch: return false ; return null . false ;
rank: 223
score: 98.56908501519098
patch: CaMeL ; try { ch = false ;
rank: 223
score: 98.27519989013672
patch: return ~ 1 ; return false ;
rank: 224
score: 98.99107421875
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Len ) . to CaMeL String ( ) ;
rank: 224
score: 98.9296542080966
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . starts CaMeL With ( ch ) ;
rank: 224
score: 98.70094807942708
patch: if ( j != search CaMeL Chars . length ) {
rank: 224
score: 98.67042541503906
patch: g = false ; return false ;
rank: 224
score: 98.6507568359375
patch: return null ; } } if ;
rank: 224
score: 98.6346435546875
patch: CaMeL Range false return new String false ;
rank: 224
score: 98.56826443142361
patch: CaMeL ; if ( ! false ) {
rank: 224
score: 98.5067138671875
patch: return ( true && false ) ;
rank: 224
score: 98.27457427978516
patch: return ; return ; + false ;
rank: 225
score: 98.99075753348214
patch: return String . index CaMeL Of ( String . index CaMeL Of (
rank: 225
score: 98.96584647042411
patch: return ( ch != null ) . contains CaMeL None ( ) ;
rank: 225
score: 98.9295425415039
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) ) ;
rank: 225
score: 98.69980875651042
patch: switch ( String . index CaMeL Of ( ch ) )
rank: 225
score: 98.66983371310764
patch: return Character . is CaMeL Whitespace ( ;
rank: 225
score: 98.63454861111111
patch: CaMeL String return false ; return false ;
rank: 225
score: 98.50666809082031
patch: return false ; } ++ j ;
rank: 225
score: 98.27425384521484
patch: CaMeL List ( false ) ; ;
rank: 226
score: 98.99075656467014
patch: final String . index CaMeL Of ( String . index CaMeL Of ( String ) ) ;
rank: 226
score: 98.96474428530092
patch: return String . index CaMeL Of ( String . char CaMeL At ( cs . char CaMeL At ( j ) ) ) == 0 ;
rank: 226
score: 98.92897435238487
patch: return search CaMeL Chars [ j ] == ch . get CaMeL Class CaMeL Name ( ) ;
rank: 226
score: 98.69935191761364
patch: if ( search CaMeL Len < search CaMeL Len )
rank: 226
score: 98.63344319661458
patch: CaMeL j = false ; return false ;
rank: 226
score: 98.56687927246094
patch: CaMeL false = true ; break ;
rank: 226
score: 98.50591362847223
patch: return size [ j ] == ch ;
rank: 226
score: 98.27284240722656
patch: CaMeL |= $NUMBER$ ; return false ;
rank: 227
score: 98.99063873291016
patch: return contains CaMeL None ( String . index CaMeL Of ( ch ) ) ;
rank: 227
score: 98.92857142857143
patch: return cs . contains CaMeL None ( cs , search CaMeL Chars ) . to CaMeL String ( ) ;
rank: 227
score: 98.6986553485577
patch: throw new Illegal CaMeL Argument CaMeL Exception ( String . ) ;
rank: 227
score: 98.64925384521484
patch: return false ; for return true ;
rank: 227
score: 98.6324234008789
patch: return null ; return true ; ;
rank: 227
score: 98.50438096788194
patch: String . index CaMeL Of ( char )
rank: 227
score: 98.27139718191964
patch: return ; { return null ;
rank: 228
score: 98.99044921875
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of (
rank: 228
score: 98.962353515625
patch: . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ) ;
rank: 228
score: 98.92749701605902
patch: return cs . contains CaMeL None ( cs , search CaMeL Chars [ i ] ) ;
rank: 228
score: 98.69844563802083
patch: if ( search CaMeL Chars [ i ] == ch )
rank: 228
score: 98.63186984592014
patch: return true ; return false ; false ;
rank: 228
score: 98.56449381510417
patch: . char CaMeL At ( i + ;
rank: 228
score: 98.5041275024414
patch: return is [ j ] ; }
rank: 228
score: 98.2713851928711
patch: return - false ; return false ;
rank: 229
score: 98.99020225123355
patch: return . index CaMeL Of ( String . index CaMeL Of ( ch ) ) == 0 ;
rank: 229
score: 98.96223958333333
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 229
score: 98.69645182291667
patch: if ( i < search CaMeL Chars . length ) {
rank: 229
score: 98.6318588256836
patch: CaMeL Range ; return false ; ;
rank: 229
score: 98.5635498046875
patch: . char CaMeL At ( i , start )
rank: 230
score: 98.99012340198864
patch: return search CaMeL Chars . char CaMeL At ( j ) == String . index CaMeL Of ( String ) ;
rank: 230
score: 98.96158854166667
patch: return search CaMeL Chars [ j ] . get CaMeL Type ( ) ;
rank: 230
score: 98.69431374289773
patch: if ( search CaMeL Chars [ j ] == )
rank: 230
score: 98.66852484809027
patch: s = false ; return true ; }
rank: 230
score: 98.6475830078125
patch: return false ; break ; } } return ;
rank: 230
score: 98.63180202907986
patch: return get CaMeL Chars ( false ) ;
rank: 230
score: 98.56310356987848
patch: . char CaMeL At ( ch ) ;
rank: 230
score: 98.27005004882812
patch: return return ) ; return 0 ;
rank: 231
score: 98.92609719669117
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . length ;
rank: 231
score: 98.69426935369319
patch: if ( search CaMeL Len < cs CaMeL Len )
rank: 231
score: 98.66739230685764
patch: return ( false , true ) ; }
rank: 231
score: 98.64680311414931
patch: return null ; } } return true ;
rank: 231
score: 98.63052029079861
patch: CaMeL List . return ( false ; {
rank: 231
score: 98.26985386439732
patch: return size ; return false ;
rank: 232
score: 98.98948910361842
patch: return search CaMeL Chars . get ( search CaMeL Chars . char CaMeL At ( j ) )
rank: 232
score: 98.96106770833333
patch: return search CaMeL Chars [ j ] . trim ( ) . length ;
rank: 232
score: 98.92598266601563
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals ( cs ) ;
rank: 232
score: 98.6941630045573
patch: throw new Illegal CaMeL Argument CaMeL Exception ( cs ) ;
rank: 232
score: 98.66736518012152
patch: CaMeL false [ i ] = false ;
rank: 232
score: 98.64662679036458
patch: return false ; } for return false ;
rank: 232
score: 98.63047790527344
patch: CaMeL Range . iterator return true ;
rank: 232
score: 98.561767578125
patch: . return ( ( Character ) false ) ;
rank: 232
score: 98.26976013183594
patch: CaMeL -= false ; return false ;
rank: 233
score: 98.98880615234376
patch: return $STRING$ . index CaMeL Of ( String . index CaMeL Of ( String ) ) == 0 ;
rank: 233
score: 98.9600078876202
patch: return this . contains CaMeL None ( cs , ch ) ;
rank: 233
score: 98.92596435546875
patch: throw String . index CaMeL Of ( String )
rank: 233
score: 98.69411214192708
patch: if ( search CaMeL Len == search CaMeL Len ) {
rank: 233
score: 98.66637420654297
patch: return ( ch ) ; } }
rank: 233
score: 98.63013567243304
patch: CaMeL Number return false ; ;
rank: 233
score: 98.56135559082031
patch: $NUMBER$ . return ( false ) ;
rank: 233
score: 98.49796840122768
patch: Plane return ( false ) ;
rank: 233
score: 98.26959991455078
patch: return 0 ; ; return true ;
rank: 234
score: 98.9880901834239
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . [ search CaMeL Chars . index CaMeL
rank: 234
score: 98.95855712890625
patch: String . index CaMeL Of ( $STRING$ , ch ) ;
rank: 234
score: 98.9259033203125
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) { false
rank: 234
score: 98.69239298502605
patch: if ( i != search CaMeL Chars . length ) {
rank: 234
score: 98.66582573784723
patch: return true ? false : true ; }
rank: 234
score: 98.64576721191406
patch: return null ; } else return ;
rank: 234
score: 98.62931315104167
patch: return false ; false ; if false ;
rank: 234
score: 98.56110975477431
patch: CaMeL return false ; } return false ;
rank: 234
score: 98.49777221679688
patch: return new char [ 0 ] ;
rank: 234
score: 98.26929728190105
patch: return 0 == 0 ;
rank: 235
score: 98.9879296875
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . index CaMeL Of ( String ) ;
rank: 235
score: 98.92579287574405
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) . to CaMeL Object ( ) ;
rank: 235
score: 98.69218306107955
patch: if ( search CaMeL Len >= cs CaMeL Len )
rank: 235
score: 98.66514756944444
patch: t = false ; return false ; }
rank: 235
score: 98.64574517144098
patch: CaMeL Builder . return false ; } }
rank: 235
score: 98.62862141927083
patch: return new Array CaMeL List ( false ;
rank: 235
score: 98.5601806640625
patch: CaMeL State . return false ;
rank: 235
score: 98.494873046875
patch: Plane . return false ; } }
rank: 235
score: 98.26893615722656
patch: CaMeL ~ false ; return false ;
rank: 236
score: 98.98788452148438
patch: return contains CaMeL None ( String . index CaMeL Of ( $STRING$ ) ) ;
rank: 236
score: 98.95684223790323
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ;
rank: 236
score: 98.69134521484375
patch: else String . index CaMeL Of ( $STRING$ )
rank: 236
score: 98.66504669189453
patch: b = false ; return true ;
rank: 236
score: 98.64448377821181
patch: return null ; } catch return false ;
rank: 236
score: 98.62733459472656
patch: CaMeL Exception false ; return false ;
rank: 236
score: 98.56007080078125
patch: . char CaMeL At ( j , in )
rank: 236
score: 98.48984200613839
patch: return true ; j ++ ;
rank: 236
score: 98.26834542410714
patch: return ; . return false ;
rank: 237
score: 98.92411876860119
patch: if ( search CaMeL Chars . length >= search CaMeL Chars . length && search CaMeL Chars . index CaMeL
rank: 237
score: 98.69096235795455
patch: return cs . is CaMeL Empty ( ) ; }
rank: 237
score: 98.66375054253473
patch: return true ; } return false ; }
rank: 237
score: 98.64439697265625
patch: return true ; } * * * * /
rank: 237
score: 98.56005859375
patch: CaMeL Error = true ; return true ;
rank: 237
score: 98.48963165283203
patch: return false ; } } true ;
rank: 237
score: 98.2681655883789
patch: return ! ) ; return 1 ;
rank: 238
score: 98.98668852306548
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL
rank: 238
score: 98.95423473011364
patch: . index CaMeL Of ( cs , ch ) ;
rank: 238
score: 98.92355526194854
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . FALSE ;
rank: 238
score: 98.6434326171875
patch: return null ; } if return false ;
rank: 238
score: 98.62712944878473
patch: CaMeL append return false ; return true ;
rank: 238
score: 98.4889144897461
patch: return ( true || true ) ;
rank: 238
score: 98.26673889160156
patch: ( return ) ; return false ;
rank: 239
score: 98.986640625
patch: return ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL At ( search CaMeL Len ) ) ;
rank: 239
score: 98.95382690429688
patch: return ! cs . equals ( ch ) ;
rank: 239
score: 98.69063626802884
patch: if ( cs . to CaMeL Lower CaMeL Case ( ) )
rank: 239
score: 98.66171264648438
patch: return new false ; }
rank: 239
score: 98.62616838727679
patch: CaMeL Number = return false ;
rank: 239
score: 98.55851440429687
patch: . char CaMeL At ( 0 , false )
rank: 239
score: 98.2657699584961
patch: CaMeL += true ; return false ;
rank: 240
score: 98.986572265625
patch: return index CaMeL Of ( cs , search CaMeL Chars ) ;
rank: 240
score: 98.95286560058594
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ) ;
rank: 240
score: 98.92346909466912
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) . value ;
rank: 240
score: 98.69019775390625
patch: super . contains CaMeL None ( ch ) ;
rank: 240
score: 98.66075134277344
patch: return ; } } return true ;
rank: 240
score: 98.6427490234375
patch: return false ; } catch ; return false ;
rank: 240
score: 98.62609185112848
patch: CaMeL Exception return false ; return null ;
rank: 240
score: 98.55804443359375
patch: CaMeL ; if false ; return true ;
rank: 240
score: 98.26464080810547
patch: return true ; ; if false ;
rank: 241
score: 98.95199584960938
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ;
rank: 241
score: 98.92304430509868
patch: return search CaMeL Chars [ j ] == ch . to CaMeL Lower CaMeL Case ( ) ;
rank: 241
score: 98.68918185763889
patch: return ( Char CaMeL Sequence ) cs ;
rank: 241
score: 98.6606216430664
patch: return ; }
rank: 241
score: 98.64152696397569
patch: return false ; return false ; } ;
rank: 241
score: 98.55642361111111
patch: . append ( ch , false ) ;
rank: 241
score: 98.48563639322917
patch: Plane return false ; return false ; }
rank: 241
score: 98.26359558105469
patch: return 0 != false + false ;
rank: 242
score: 98.98490397135417
patch: return ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL At ( search CaMeL Len ) )
rank: 242
score: 98.9227783203125
patch: return ( ( String ) cs ) . contains CaMeL None ( ) ;
rank: 242
score: 98.68911743164062
patch: result = cs . char CaMeL At ( j ) ;
rank: 242
score: 98.64019775390625
patch: CaMeL State . false ; return false ; }
rank: 242
score: 98.6253890991211
patch: CaMeL Range false return false ; }
rank: 242
score: 98.55641682942708
patch: . return true ; return true ; }
rank: 242
score: 98.48540496826172
patch: return new String [ ] { ch
rank: 242
score: 98.26351165771484
patch: return 0 == false + false ;
rank: 243
score: 98.98476938100961
patch: return contains CaMeL None ( i , search CaMeL Chars ) ;
rank: 243
score: 98.95081380208333
patch: return String . index CaMeL Of ( String . String ) == 0 ;
rank: 243
score: 98.66020372178819
patch: return Character . equals ( ch ) ;
rank: 243
score: 98.63966200086806
patch: return false ; } } ; return ;
rank: 243
score: 98.62483215332031
patch: CaMeL List false ; return true ;
rank: 243
score: 98.26327950613839
patch: return return 1 ; break ;
rank: 244
score: 98.98469812729779
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( String .
rank: 244
score: 98.95069298377403
patch: return null + String . index CaMeL Of ( String ) ;
rank: 244
score: 98.9223299893466
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) . index CaMeL Of ( String ) ;
rank: 244
score: 98.6883877840909
patch: String . index CaMeL Of ( String ) / /
rank: 244
score: 98.65882703993056
patch: return is CaMeL Empty ( ) ; }
rank: 244
score: 98.63912200927734
patch: return ; } if return false ;
rank: 244
score: 98.62413024902344
patch: return new Range ( false ) ;
rank: 244
score: 98.5544677734375
patch: . char CaMeL At ( false , $NUMBER$ )
rank: 244
score: 98.26074981689453
patch: return ; = false ; return ;
rank: 245
score: 98.98415208899456
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length ) == 0 ;
rank: 245
score: 98.63852267795139
patch: return is CaMeL Empty ; return true ;
rank: 245
score: 98.48421478271484
patch: return false ; } } ) ;
rank: 245
score: 98.26020050048828
patch: CaMeL ; = ; return false ;
rank: 246
score: 98.9840316772461
patch: return search CaMeL Chars . char CaMeL At ( j ) == ch ) ;
rank: 246
score: 98.94715618265086
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars [ j ] ) ) ) ;
rank: 246
score: 98.68766645951705
patch: if ( search CaMeL Len >= search CaMeL Len )
rank: 246
score: 98.65699986049107
patch: . return false ; ; }
rank: 246
score: 98.63846164279514
patch: return false ; } } if return ;
rank: 246
score: 98.62288665771484
patch: return false ; return - $STRING$ ;
rank: 246
score: 98.55307006835938
patch: if ( false ) { return true ; }
rank: 246
score: 98.2596206665039
patch: return $NUMBER$ ; ; return false ;
rank: 247
score: 98.92199125744048
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( search CaMeL Chars [ j ] ) ;
rank: 247
score: 98.68733723958333
patch: throw new Runtime CaMeL Exception ( $STRING$ + ch ) ;
rank: 247
score: 98.65657552083333
patch: return false ? true : true ; }
rank: 247
score: 98.6380859375
patch: return true ; } if return false ; }
rank: 247
score: 98.62250434027777
patch: CaMeL Null ( false ; return false ;
rank: 247
score: 98.55279541015625
patch: CaMeL false = true ; return true ; }
rank: 247
score: 98.48368835449219
patch: Basic [ j ] return false ;
rank: 247
score: 98.25895472935268
patch: return false ; while false ;
rank: 248
score: 98.94596644810268
patch: return String . index CaMeL Of ( ch ) == - 1 ;
rank: 248
score: 98.9219611672794
patch: if ( search CaMeL Chars . length < cs . length ) { return false ;
rank: 248
score: 98.65644666883681
patch: CaMeL false . ; return false ; }
rank: 248
score: 98.63747732979911
patch: return return is ; } }
rank: 248
score: 98.62078179253473
patch: CaMeL Class return false ; return false ;
rank: 248
score: 98.48343658447266
patch: [ j ] return false ; }
rank: 248
score: 98.25802612304688
patch: return 0 | false ;
rank: 249
score: 98.98308563232422
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String [
rank: 249
score: 98.94514683314732
patch: return search CaMeL Chars [ j ] . equals ( cs ) ;
rank: 249
score: 98.92155317826705
patch: return search CaMeL Chars [ j ] . value ;
rank: 249
score: 98.65616607666016
patch: t = false ; return false ;
rank: 249
score: 98.63660430908203
patch: return null ; else return false ;
rank: 249
score: 98.55121527777777
patch: . char CaMeL At ( i ) )
rank: 249
score: 98.25733184814453
patch: return ; = ; return ; /
rank: 250
score: 98.9827392578125
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String ) ) < 0 ;
rank: 250
score: 98.94387381417411
patch: return String . index CaMeL Of ( String ) != - $NUMBER$ ;
rank: 250
score: 98.92152622767857
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . index CaMeL
rank: 250
score: 98.68564860026042
patch: return search CaMeL Chars [ j ] . length ; }
rank: 250
score: 98.65457153320312
patch: . false * / return true ;
rank: 250
score: 98.63545227050781
patch: return true ; } if return ;
rank: 250
score: 98.61989339192708
patch: CaMeL Range . append ( false ) ;
rank: 250
score: 98.55111694335938
patch: . return false ; return false ;
rank: 250
score: 98.48167419433594
patch: return this . return false ; }
rank: 250
score: 98.25701904296875
patch: CaMeL ^= ) ; return false ;
rank: 251
score: 98.98263888888889
patch: if ( search CaMeL Chars . length >= search CaMeL Chars . length ) return false ;
rank: 251
score: 98.943359375
patch: byte . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ;
rank: 251
score: 98.92096910978618
patch: if ( search CaMeL Chars . length == search CaMeL Chars . length ) { return true ;
rank: 251
score: 98.6846923828125
patch: if ( search CaMeL Chars . length <= search CaMeL Len )
rank: 251
score: 98.65419006347656
patch: return true ; } } false ;
rank: 251
score: 98.63439263237848
patch: return false ; } else if return ;
rank: 251
score: 98.61965603298611
patch: CaMeL Error return false ; return true ;
rank: 251
score: 98.550732421875
patch: . char CaMeL At ( this , i )
rank: 251
score: 98.48166232638889
patch: Plane return false ; } return false ;
rank: 251
score: 98.25453186035156
patch: return 0 ; if return false ;
rank: 252
score: 98.9823974609375
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars ,
rank: 252
score: 98.94137257543103
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . value CaMeL Of ( search CaMeL Chars [ j ] ) ) ) ;
rank: 252
score: 98.92079072840073
patch: return search CaMeL Chars [ j ] == $STRING$ . to CaMeL String ( ) ;
rank: 252
score: 98.68468299278847
patch: return search CaMeL Chars [ j ] . length - 1 ;
rank: 252
score: 98.65349663628473
patch: p = false ; break ; } }
rank: 252
score: 98.63385687934027
patch: return false ; } } = false ;
rank: 252
score: 98.61872694227431
patch: CaMeL List . add ( true ) ;
rank: 252
score: 98.55065307617187
patch: . char CaMeL At ( false , 0 )
rank: 252
score: 98.2540283203125
patch: return 0 ; ; return null ;
rank: 253
score: 98.982216796875
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length ) . trim ( ) ;
rank: 253
score: 98.94114056755515
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 253
score: 98.68378363715277
patch: if ( search CaMeL Len >= 0 )
rank: 253
score: 98.65278625488281
patch: return ( false ) ; ; }
rank: 253
score: 98.63351101345486
patch: return is false ; } return true ;
rank: 253
score: 98.61859130859375
patch: return new Character ( false ) ;
rank: 253
score: 98.54862670898437
patch: CaMeL Enum . char CaMeL At ( j )
rank: 253
score: 98.47962782118056
patch: return false [ i ] == ch ;
rank: 253
score: 98.25396728515625
patch: return 0 + false ; break ;
rank: 254
score: 98.98183371803977
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL
rank: 254
score: 98.9404060609879
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ) ;
rank: 254
score: 98.92010788690476
patch: return cs . contains CaMeL None ( search CaMeL Chars . char CaMeL At ( j ] ) ) ;
rank: 254
score: 98.68335639105902
patch: if ( search CaMeL Len > 0 )
rank: 254
score: 98.65272521972656
patch: p = false ; false * /
rank: 254
score: 98.63302612304688
patch: return is ; return false ; }
rank: 254
score: 98.6185073852539
patch: return new Object ( false ) ;
rank: 254
score: 98.4796142578125
patch: return true ; i ++ ; }
rank: 254
score: 98.2536849975586
patch: return ch ; { return false ;
rank: 255
score: 98.98142496744792
patch: try { char . index CaMeL Of ( String ) ;
rank: 255
score: 98.91943359375
patch: try { return cs . contains CaMeL None ( ) ;
rank: 255
score: 98.68324584960938
patch: return ( ch , search CaMeL Chars ) ;
rank: 255
score: 98.63185119628906
patch: return true ; if return false ;
rank: 255
score: 98.61796569824219
patch: CaMeL Range ; return false ; }
rank: 255
score: 98.54717145647321
patch: . return this . false ;
rank: 255
score: 98.47941589355469
patch: contains [ j ] return false ;
rank: 255
score: 98.25365447998047
patch: return 0 != 0 ; break ;
rank: 256
score: 98.981142578125
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . String . char CaMeL
rank: 256
score: 98.91875899465461
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length || search CaMeL Chars .
rank: 256
score: 98.68317260742188
patch: if ( j < search CaMeL Len ) {
rank: 256
score: 98.65187290736607
patch: return false ; continue ; }
rank: 256
score: 98.63182983398437
patch: return is CaMeL Supported ( false , false ;
rank: 256
score: 98.61727566189236
patch: CaMeL Range = false ; while false ;
rank: 256
score: 98.54616970486111
patch: . return ( ch + false ) ;
rank: 256
score: 98.47789849175348
patch: return false ; i ++ ; } }
rank: 256
score: 98.25308227539062
patch: return size ; ; return false ;
rank: 257
score: 98.98099459134616
patch: try { char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String ) ) ) ;
rank: 257
score: 98.93953450520833
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ) ;
rank: 257
score: 98.91829641241776
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) . trim ( ) ;
rank: 257
score: 98.68269856770833
patch: return contains CaMeL None ( false ) ;
rank: 257
score: 98.65178680419922
patch: return false ; } continue ; }
rank: 257
score: 98.63167724609374
patch: return false ; } finally { return false ;
rank: 257
score: 98.61712646484375
patch: CaMeL Range return false ; ;
rank: 257
score: 98.54466417100694
patch: CaMeL return ( ch == $STRING$ ) ;
rank: 257
score: 98.47761535644531
patch: return new int [ j ] ;
rank: 257
score: 98.25164794921875
patch: return ! false ; return true ;
rank: 258
score: 98.980302734375
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . value CaMeL Of ( search CaMeL Chars . char CaMeL
rank: 258
score: 98.93920110887096
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . to CaMeL String ( ) ) ) ) ;
rank: 258
score: 98.68235426682692
patch: if ( cs . ends CaMeL With ( ch ) ) {
rank: 258
score: 98.65135362413194
patch: . return false ; } break ; }
rank: 258
score: 98.63078962053571
patch: return true ; } catch ;
rank: 258
score: 98.61701795789931
patch: CaMeL value = false ; return true ;
rank: 258
score: 98.54369506835937
patch: . char CaMeL At ( j , i ;
rank: 258
score: 98.4768295288086
patch: contains [ j ] = true ;
rank: 258
score: 98.25131225585938
patch: return 0 ; iterator return false ;
rank: 259
score: 98.98018022017045
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length ) 1 ;
rank: 259
score: 98.91785888671875
patch: return String . index CaMeL Of ( String . index CaMeL Of ( $STRING$ . char CaMeL At (
rank: 259
score: 98.6817294034091
patch: if ( cs . equals ( ch ) ) {
rank: 259
score: 98.65134684244792
patch: ( false ) . return false ; }
rank: 259
score: 98.63070678710938
patch: return this . false ; return false ; }
rank: 259
score: 98.61550903320312
patch: CaMeL String = false ;
rank: 259
score: 98.54256591796874
patch: . starts CaMeL With ( false , false )
rank: 259
score: 98.4759750366211
patch: return true ; j ++ ; }
rank: 259
score: 98.2511978149414
patch: return 0 . 0 | false ;
rank: 260
score: 98.97989555027173
patch: return ( search CaMeL Chars . char CaMeL At ( cs . char CaMeL At ( search CaMeL Chars . char CaMeL
rank: 260
score: 98.93746243990384
patch: return search CaMeL Chars [ j ] == ch . $STRING$ ;
rank: 260
score: 98.91754509420956
patch: return ! ! search CaMeL Chars [ j ] . contains CaMeL None ( ) ;
rank: 260
score: 98.68030894886364
patch: if ( cs . length ( ) == 0 )
rank: 260
score: 98.65037706163194
patch: return ( false , false , true ;
rank: 260
score: 98.61272430419922
patch: return new false ; return false ;
rank: 260
score: 98.54180908203125
patch: . char CaMeL At ( i + $NUMBER$ )
rank: 260
score: 98.47368706597223
patch: String return [ j ] == ch ;
rank: 260
score: 98.25099182128906
patch: ( false ) ; return 0 ;
rank: 261
score: 98.9796893780048
patch: return String . index CaMeL Of ( String ) - 1 ;
rank: 261
score: 98.93562534877232
patch: return search CaMeL Chars [ j ] contains CaMeL None ( ) ;
rank: 261
score: 98.68015700120192
patch: if ( cs . starts CaMeL With ( $STRING$ ) ) {
rank: 261
score: 98.6480712890625
patch: s = false ; return true ;
rank: 261
score: 98.61076524522569
patch: CaMeL List != null ; return false ;
rank: 261
score: 98.54110378689236
patch: return 0 . equals ( false ) ;
rank: 261
score: 98.25082397460938
patch: return 0 ; ; return $NUMBER$ ;
rank: 262
score: 98.97968084161931
patch: return contains CaMeL None ( search CaMeL Chars , search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 262
score: 98.93377896012932
patch: return String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) ) == 0 ;
rank: 262
score: 98.6800067608173
patch: return cs . char CaMeL At ( search CaMeL Len ) ;
rank: 262
score: 98.64666748046875
patch: return ! is CaMeL Empty ; }
rank: 262
score: 98.62784830729167
patch: return this . return false ; } }
rank: 262
score: 98.61039225260417
patch: CaMeL Error = false ; return null ;
rank: 262
score: 98.54095458984375
patch: . char CaMeL At ( j ) ; }
rank: 262
score: 98.47298855251736
patch: return false ; } } return null ;
rank: 262
score: 98.25011189778645
patch: return 0 . 0 ;
rank: 263
score: 98.97966202445652
patch: return cs . char CaMeL At ( j ) . to CaMeL String ( ) . to CaMeL String ( ) ;
rank: 263
score: 98.93365293560606
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) , ch ) ;
rank: 263
score: 98.916376953125
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( j )
rank: 263
score: 98.67916870117188
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 263
score: 98.64541625976562
patch: logger = false ; return false ;
rank: 263
score: 98.62763061523438
patch: return true ; } } ; return false ;
rank: 263
score: 98.60941569010417
patch: CaMeL FALSE = false ; return false ;
rank: 263
score: 98.53956298828125
patch: . char CaMeL At ( i ) ; ;
rank: 263
score: 98.4727071126302
patch: ( ) return false ;
rank: 263
score: 98.25009155273438
patch: return false ; return - 0 ;
rank: 264
score: 98.9335186298077
patch: return super . contains CaMeL None ( cs , cs ) ;
rank: 264
score: 98.91600884331598
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . value CaMeL
rank: 264
score: 98.6781514485677
patch: return ( search CaMeL Chars [ j ] ) ; }
rank: 264
score: 98.64504665798611
patch: ( false ) . return true ; }
rank: 264
score: 98.62734646267361
patch: return false ; while return false ; }
rank: 264
score: 98.60940212673611
patch: CaMeL Range . return ( true ) ;
rank: 264
score: 98.53946261935764
patch: . value = false ; return true ;
rank: 264
score: 98.47239854600694
patch: return ( ( char ) ch ) ;
rank: 264
score: 98.25003814697266
patch: return 0 == 0 ; break ;
rank: 265
score: 98.97959899902344
patch: return . index CaMeL Of ( String . index CaMeL Of ( String ) )
rank: 265
score: 98.93287071814903
patch: return search CaMeL Chars [ j ] == null . $STRING$ ;
rank: 265
score: 98.91588070518092
patch: if ( search CaMeL Chars . length != search CaMeL Chars . length ) { return false ;
rank: 265
score: 98.64476013183594
patch: r = false ; return false ;
rank: 265
score: 98.60860866970486
patch: return new Array CaMeL List ( ; ;
rank: 265
score: 98.53925170898438
patch: . char CaMeL At ( j , matches )
rank: 265
score: 98.4722900390625
patch: Plane return false ; } return true ;
rank: 265
score: 98.24992152622768
patch: ( false ) ; false ;
rank: 266
score: 98.9795913696289
patch: return contains CaMeL None ( String . index CaMeL Of ( String . index CaMeL
rank: 266
score: 98.9319839477539
patch: . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 266
score: 98.91502796519886
patch: return this . search CaMeL Chars [ j ] . to CaMeL String ( ) . equals ( $STRING$ ) ;
rank: 266
score: 98.6771484375
patch: return ( String . search CaMeL Chars ) ;
rank: 266
score: 98.64444308810764
patch: . return true ; } return false ;
rank: 266
score: 98.62723795572917
patch: CaMeL Builder . return return false ; }
rank: 266
score: 98.60840521918402
patch: CaMeL Exception = false ; if false ;
rank: 266
score: 98.53865814208984
patch: return get CaMeL Language ( ; }
rank: 266
score: 98.46986389160156
patch: return null ; } j ++ ;
rank: 266
score: 98.2471923828125
patch: return true ; return $NUMBER$ ;
rank: 267
score: 98.978759765625
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . equals ( $STRING$ ) ;
rank: 267
score: 98.93193817138672
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( ) ) ) ) ;
rank: 267
score: 98.91497247869319
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . starts CaMeL With ( String ) ;
rank: 267
score: 98.67665608723958
patch: throw new Illegal CaMeL State CaMeL Exception ( ch ) ;
rank: 267
score: 98.64425659179688
patch: return is ? false : true ;
rank: 267
score: 98.6268310546875
patch: return is CaMeL Supported ( false ) ;
rank: 267
score: 98.60768636067708
patch: CaMeL Exception false return this . false ;
rank: 267
score: 98.5384521484375
patch: . char CaMeL At ( false , i ;
rank: 267
score: 98.46954345703125
patch: ( ) return false ; }
rank: 267
score: 98.24586486816406
patch: return ! return ; return false ;
rank: 268
score: 98.93158830915179
patch: try { ch = cs . char CaMeL At ( j ) ;
rank: 268
score: 98.91476307744566
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( ) ;
rank: 268
score: 98.6261978149414
patch: return return false ; } * /
rank: 268
score: 98.60740152994792
patch: return false ; false ; return true ;
rank: 268
score: 98.53724365234375
patch: . return ( ( int ) false ) ;
rank: 268
score: 98.46922084263393
patch: Plane false return false ; }
rank: 268
score: 98.2449951171875
patch: return false ; ; if return ;
rank: 269
score: 98.97856059827302
patch: try { char . index CaMeL Of ( String . index CaMeL Of ( $STRING$ ) ) ;
rank: 269
score: 98.93004189768145
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( i ) ) ) ) ;
rank: 269
score: 98.91433481069711
patch: return search CaMeL Chars [ j ] . run ( ) ;
rank: 269
score: 98.64364284939236
patch: return Character . ends CaMeL With ( ;
rank: 269
score: 98.62602233886719
patch: return return false ; } return ;
rank: 269
score: 98.60581970214844
patch: CaMeL List false false return false ;
rank: 269
score: 98.53466118706598
patch: . return ( ch ) == 0 ;
rank: 269
score: 98.46891954210069
patch: return i [ j ] == ch ;
rank: 269
score: 98.24457550048828
patch: return 0 $NUMBER$ ; return false ;
rank: 270
score: 98.9784927368164
patch: try { search CaMeL Chars [ j ] . contains CaMeL None ( ) ;
rank: 270
score: 98.9298828125
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . value CaMeL Of ( cs . to CaMeL String ( ) ) ) ) ;
rank: 270
score: 98.91432542067308
patch: return cs . contains CaMeL None ( [ i ] ) ;
rank: 270
score: 98.67498779296875
patch: if ( ! search CaMeL Chars [ j ] ) {
rank: 270
score: 98.62557373046874
patch: return false ; break ; } return false ;
rank: 270
score: 98.60490417480469
patch: return false ; return null ; }
rank: 270
score: 98.53345404730902
patch: CaMeL ; if ; return true ; }
rank: 270
score: 98.46846226283482
patch: Plane return return true ; }
rank: 270
score: 98.24342346191406
patch: return 0 . 0 || false ;
rank: 271
score: 98.9784765625
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . starts CaMeL With ( String ) ;
rank: 271
score: 98.91386862362133
patch: return search CaMeL Chars [ j ] . get CaMeL Property ( String . index CaMeL
rank: 271
score: 98.67404513888889
patch: if ( search CaMeL Len <= 0 )
rank: 271
score: 98.64348493303571
patch: return false false ; } }
rank: 271
score: 98.62421875
patch: return false ; } if return true ; }
rank: 271
score: 98.60479736328125
patch: CaMeL Number false ; return false ;
rank: 271
score: 98.53330485026042
patch: CaMeL Enum return false ;
rank: 271
score: 98.46755642361111
patch: return count [ j ] == ch ;
rank: 271
score: 98.24301583426339
patch: CaMeL Builder ( false ) ;
rank: 272
score: 98.97845458984375
patch: if ( search CaMeL Chars . length 1 < search CaMeL Chars . length )
rank: 272
score: 98.92938035534274
patch: byte . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ) ;
rank: 272
score: 98.67380981445312
patch: if ( j == search CaMeL Len ) {
rank: 272
score: 98.64315032958984
patch: return false ; ; } } ;
rank: 272
score: 98.62383422851562
patch: return false ; } / * return false ;
rank: 272
score: 98.60464816623264
patch: CaMeL Boolean return false ; return false ;
rank: 272
score: 98.5332275390625
patch: . char CaMeL At ( i , null )
rank: 272
score: 98.46741594587054
patch: return true ; i ++ ;
rank: 272
score: 98.24174499511719
patch: return 0 1 ; return false ;
rank: 273
score: 98.97819967830883
patch: return search CaMeL Chars . char CaMeL At ( j ) == String . ch ;
rank: 273
score: 98.92894490559895
patch: return contains CaMeL None ( cs , search CaMeL Chars ;
rank: 273
score: 98.9136962890625
patch: throw String . index CaMeL Of ( String . index CaMeL Of ( String ) ) ;
rank: 273
score: 98.67340087890625
patch: return contains CaMeL None ; } }
rank: 273
score: 98.64312744140625
patch: return ( false , false ; }
rank: 273
score: 98.62364959716797
patch: return true ; } catch ; }
rank: 273
score: 98.60289171006944
patch: CaMeL Class = false ; return false ;
rank: 273
score: 98.53275146484376
patch: . starts CaMeL With ( false , $STRING$ )
rank: 273
score: 98.46611785888672
patch: Plane { return true ; } }
rank: 273
score: 98.24124145507812
patch: return false . false ;
rank: 274
score: 98.91358032226563
patch: return search CaMeL Chars [ j ] . to CaMeL Char CaMeL Array ( ) . length ++ ;
rank: 274
score: 98.6728515625
patch: val = cs . char CaMeL At ( j ) ;
rank: 274
score: 98.62225341796875
patch: return is ; } }
rank: 274
score: 98.60009765625
patch: CaMeL Range . ; return false ;
rank: 274
score: 98.46592881944444
patch: Plane [ i ] return false ; }
rank: 274
score: 98.24073137555804
patch: return false ; ; return ;
rank: 275
score: 98.97787710336539
patch: return search CaMeL Chars . equals ( search CaMeL Chars ) ;
rank: 275
score: 98.92791748046875
patch: return ! search CaMeL Chars [ j ] . close ( ) ;
rank: 275
score: 98.91338820684524
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) . get CaMeL Value ( ) ;
rank: 275
score: 98.67242986505681
patch: return search CaMeL Chars [ j ] + ch ;
rank: 275
score: 98.62142605251736
patch: CaMeL Error ; return false ; } }
rank: 275
score: 98.59982638888889
patch: CaMeL List . ; if return false ;
rank: 275
score: 98.52816772460938
patch: . char CaMeL At ( ; return false ;
rank: 275
score: 98.4632059733073
patch: Plane this return false ;
rank: 275
score: 98.24031829833984
patch: false ; return ; = false ;
rank: 276
score: 98.9776027513587
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . [ search CaMeL Chars . char CaMeL
rank: 276
score: 98.92636021205357
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 276
score: 98.91325109145221
patch: return search CaMeL Chars [ i ] != ch . to CaMeL String ( ) ;
rank: 276
score: 98.67237267127403
patch: throw new Illegal CaMeL Access CaMeL Exception ( , $STRING$ ) ;
rank: 276
score: 98.59974161783855
patch: CaMeL List = false ;
rank: 276
score: 98.46320258246527
patch: return true [ j ] == ch ;
rank: 276
score: 98.23889923095703
patch: return 0 != 0 + false ;
rank: 277
score: 98.97754923502605
patch: return search CaMeL Chars . to CaMeL String ( ) . equals ( String . index CaMeL Of ( $STRING$ ) ) ;
rank: 277
score: 98.92591271033653
patch: return ( search CaMeL Chars [ j ] == $STRING$ ) ;
rank: 277
score: 98.91306715745192
patch: return cs . contains CaMeL None ( ch , ch ) ;
rank: 277
score: 98.671630859375
patch: if ( search CaMeL Len <= cs . length )
rank: 277
score: 98.64163208007812
patch: p = ; return true ; }
rank: 277
score: 98.619140625
patch: return ; * * * * /
rank: 277
score: 98.5994873046875
patch: return super . return ( false ) ;
rank: 277
score: 98.52744750976562
patch: . char CaMeL At ( i , 1 ;
rank: 277
score: 98.46314832899306
patch: return $NUMBER$ [ j ] == ch ;
rank: 278
score: 98.92527077414773
patch: . index CaMeL Of ( ch , ch ) ;
rank: 278
score: 98.67120916193181
patch: if ( search CaMeL Len <= search CaMeL Len )
rank: 278
score: 98.64155409071181
patch: g = false ; return false ; }
rank: 278
score: 98.61699761284723
patch: return false ; } if ; return ;
rank: 278
score: 98.59930419921875
patch: CaMeL Class ( ; return false ;
rank: 278
score: 98.52724609375
patch: . return ( ( byte ) false ) ;
rank: 278
score: 98.4625244140625
patch: return chars [ j ] == ch ;
rank: 278
score: 98.23817443847656
patch: CaMeL ch = false ; false ;
rank: 279
score: 98.97664701021634
patch: return search CaMeL Chars . get ( j ) == ch ;
rank: 279
score: 98.92526681082589
patch: return search CaMeL Chars [ j ] boolean CaMeL Value ( ) ;
rank: 279
score: 98.67096502130681
patch: if ( 0 == search CaMeL Chars . length )
rank: 279
score: 98.64073181152344
patch: return false ; ; } else {
rank: 279
score: 98.6158935546875
patch: return false ; } else if ; return ;
rank: 279
score: 98.59878200954861
patch: CaMeL List . false return true ; ;
rank: 279
score: 98.52471923828125
patch: . char CaMeL At ( i - 1 )
rank: 279
score: 98.46194458007812
patch: return new String [ 0 ] ;
rank: 279
score: 98.2372817993164
patch: return - ) ; return 1 ;
rank: 280
score: 98.92498309795673
patch: return String . index CaMeL Of ( String ) > 0 ;
rank: 280
score: 98.91282145182292
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( search CaMeL Chars ) ;
rank: 280
score: 98.670654296875
patch: if ( search CaMeL Len <= cs CaMeL Len )
rank: 280
score: 98.63668060302734
patch: return false ; } ; } ;
rank: 280
score: 98.61585083007813
patch: return false ; } else { return true ;
rank: 280
score: 98.59799533420139
patch: CaMeL List false return new String false ;
rank: 280
score: 98.52347819010417
patch: CaMeL Error return true ;
rank: 280
score: 98.46144321986607
patch: return false ; false ; }
rank: 280
score: 98.23638916015625
patch: return ! 1 ; return 0 ;
rank: 281
score: 98.97639770507813
patch: return search CaMeL Chars . get ( cs . char CaMeL At ( j ) ) == ch ;
rank: 281
score: 98.92345319475446
patch: return search CaMeL Chars [ j ] . append ( $STRING$ ) ;
rank: 281
score: 98.91248430524554
patch: return search CaMeL Chars [ j ] . equals ( String ) ;
rank: 281
score: 98.6693623860677
patch: x = cs . char CaMeL At ( j ) ;
rank: 281
score: 98.63590494791667
patch: return is CaMeL Whitespace ( ch ) ;
rank: 281
score: 98.59733751085069
patch: CaMeL Exception = false ; for false ;
rank: 281
score: 98.52204725477431
patch: return false . equals ( ch ) ;
rank: 281
score: 98.46104600694444
patch: return false ; j ++ ; } }
rank: 281
score: 98.23596954345703
patch: return 1 ; ; return false ;
rank: 282
score: 98.91248139880952
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL Object ( ) ;
rank: 282
score: 98.61398315429688
patch: return return false ; } else return false ;
rank: 282
score: 98.59726969401042
patch: return true ; ; ;
rank: 282
score: 98.52152709960937
patch: . char CaMeL At ( i , $STRING$ )
rank: 282
score: 98.46063232421875
patch: return false ; } } else { }
rank: 282
score: 98.23582458496094
patch: return next ; { return false ;
rank: 283
score: 98.92278180803571
patch: return null . contains ( search CaMeL Chars [ j ] ) ;
rank: 283
score: 98.91246880425348
patch: if ( search CaMeL Chars . length >= search CaMeL Chars . length ) return true ;
rank: 283
score: 98.66839130108173
patch: return ( String . search CaMeL Chars [ j ] ) ;
rank: 283
score: 98.63202582465277
patch: . return ( false ) ; } }
rank: 283
score: 98.61306423611111
patch: return return false ; } } if ;
rank: 283
score: 98.5970458984375
patch: return false ; return ( false ) ;
rank: 283
score: 98.46022033691406
patch: return return false ; } } }
rank: 283
score: 98.23382568359375
patch: return 0 == false ; ;
rank: 284
score: 98.97599991508152
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . cs , search CaMeL Chars . char CaMeL
rank: 284
score: 98.92022114415323
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( cs . char CaMeL At ( j ) ) ) ) ;
rank: 284
score: 98.91121732271634
patch: return cs . contains CaMeL None ( search CaMeL Chars . char CaMeL At ( j ) . to CaMeL String ( ) ) ;
rank: 284
score: 98.66796875
patch: if ( search CaMeL Chars [ j ] == null ) {
rank: 284
score: 98.63197835286458
patch: return Character . is CaMeL Empty ( ;
rank: 284
score: 98.61231146918402
patch: return is ; } else return false ;
rank: 284
score: 98.59701199001736
patch: CaMeL char = false ; return false ;
rank: 284
score: 98.46017795138889
patch: return ( false || false ) ; }
rank: 284
score: 98.23294067382812
patch: return ( ) ; return false ;
rank: 285
score: 98.97581176757812
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String ) ) == ) ;
rank: 285
score: 98.9196044921875
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . to CaMeL String ( ) ) ) ) ;
rank: 285
score: 98.91117778577302
patch: if ( search CaMeL Chars . length <= search CaMeL Chars . length ) { return false ;
rank: 285
score: 98.6677754720052
patch: if ( search CaMeL Len <= cs . length ) {
rank: 285
score: 98.63163248697917
patch: return true ; } } if ( ;
rank: 285
score: 98.61219482421875
patch: return is CaMeL True ( false ) ; ;
rank: 285
score: 98.59671359592014
patch: CaMeL Number return false ; return null ;
rank: 285
score: 98.51463971819196
patch: $NUMBER$ * / return true ;
rank: 285
score: 98.45999145507812
patch: Plane * / return false ; }
rank: 285
score: 98.23165893554688
patch: return equals ; { return false ;
rank: 286
score: 98.97547822840073
patch: return String . index CaMeL Of ( String . index CaMeL Of ( $STRING$ ) )
rank: 286
score: 98.91958821614584
patch: return String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) ) == - 1 ;
rank: 286
score: 98.91116672092014
patch: return search CaMeL Chars [ j ] . char CaMeL At ( 0 ) == ch ;
rank: 286
score: 98.66774338942308
patch: return search CaMeL Chars [ j ] . char CaMeL At (
rank: 286
score: 98.63091362847223
patch: return false ; } } else if ;
rank: 286
score: 98.59581756591797
patch: CaMeL List false return false ; ;
rank: 286
score: 98.51439073350694
patch: . return ( false , this ) ;
rank: 286
score: 98.4596939086914
patch: Plane return true ; return false ;
rank: 286
score: 98.23090471540179
patch: ( false ; return false ;
rank: 287
score: 98.9753926595052
patch: return search CaMeL Chars . to CaMeL String ( ) . equals ( String . index CaMeL Of ( ch ) ) ;
rank: 287
score: 98.91920979817708
patch: return ( ! search CaMeL Chars [ j ] ) ;
rank: 287
score: 98.66764322916667
patch: switch ( String . index CaMeL Of ( String ) )
rank: 287
score: 98.61133490668402
patch: return false ; return false ; } else
rank: 287
score: 98.59566824776786
patch: CaMeL Exception return false ; }
rank: 287
score: 98.51322428385417
patch: $NUMBER$ . char CaMeL At ( i )
rank: 287
score: 98.45968627929688
patch: Basic [ i ] return false ;
rank: 287
score: 98.22848510742188
patch: return length ; ; return false ;
rank: 288
score: 98.97501220703126
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . String . char CaMeL
rank: 288
score: 98.9190444946289
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ) ;
rank: 288
score: 98.91111653645834
patch: return search CaMeL Chars [ cs . char CaMeL At ( j ) ;
rank: 288
score: 98.66756497896634
patch: if ( search CaMeL Chars . length == cs CaMeL Len )
rank: 288
score: 98.62840440538194
patch: return ( ch , false ) ; }
rank: 288
score: 98.61130099826389
patch: return true ; } else = false ;
rank: 288
score: 98.59544372558594
patch: return new String ( return ) ;
rank: 288
score: 98.51214599609375
patch: . false = true ; return true ;
rank: 288
score: 98.45938110351562
patch: buf [ j ] = ch ;
rank: 288
score: 98.22829182942708
patch: CaMeL do = false ;
rank: 289
score: 98.97495631167763
patch: String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars ) ) ;
rank: 289
score: 98.91897348257211
patch: return cs . char CaMeL At ( j ) == $STRING$ ;
rank: 289
score: 98.91074440696023
patch: return this . search CaMeL Chars [ j ] . to CaMeL String ( ) . equals ( ch ) ;
rank: 289
score: 98.66656494140625
patch: if ( cs . equals ( ch ) )
rank: 289
score: 98.6280517578125
patch: return is CaMeL Empty ( false , ;
rank: 289
score: 98.5949478149414
patch: CaMeL Range ( ; return false ;
rank: 289
score: 98.51190185546875
patch: ( ; return true ) ;
rank: 289
score: 98.45930480957031
patch: Basic [ j ] = false ;
rank: 289
score: 98.22788783482143
patch: return 0 . return false ;
rank: 290
score: 98.97453507133152
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length + 1 ) ;
rank: 290
score: 98.91799094460227
patch: return $STRING$ . contains CaMeL None ( ch ) ;
rank: 290
score: 98.66646634615384
patch: if ( search CaMeL Chars [ j ] != ch ) {
rank: 290
score: 98.62691921657986
patch: s = false ; return false ; }
rank: 290
score: 98.61116333007813
patch: CaMeL List return false ; } return false ;
rank: 290
score: 98.59290907118056
patch: CaMeL Range return false ; return null ;
rank: 290
score: 98.51099989149306
patch: CaMeL Pair = false ; return true ;
rank: 290
score: 98.45880998883929
patch: return return return false ; }
rank: 290
score: 98.22503662109375
patch: CaMeL ; = false ; false ;
rank: 291
score: 98.97451171875
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL
rank: 291
score: 98.91776123046876
patch: return ( search CaMeL Chars [ j ] ;
rank: 291
score: 98.91068725585937
patch: return ch . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At (
rank: 291
score: 98.66556803385417
patch: if ( search CaMeL Len > cs CaMeL Len ) {
rank: 291
score: 98.62450408935547
patch: . return false ; break ; }
rank: 291
score: 98.610595703125
patch: return return is ; } return false ;
rank: 291
score: 98.59239850725446
patch: CaMeL String ; return false ;
rank: 291
score: 98.50926378038194
patch: . char CaMeL At ; return false ;
rank: 292
score: 98.91732083834134
patch: return String . index CaMeL Of ( String ) == null ;
rank: 292
score: 98.91053466796875
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . append ( $STRING$ ) ;
rank: 292
score: 98.6649639423077
patch: if ( search CaMeL Chars . length < search CaMeL Chars .
rank: 292
score: 98.60840861002605
patch: return false ; } finally
rank: 292
score: 98.5916748046875
patch: CaMeL Range . return false ; }
rank: 292
score: 98.45650809151786
patch: return ( true ) ; }
rank: 292
score: 98.2248764038086
patch: return ; = ; return 0 ;
rank: 293
score: 98.97413545496323
patch: return . index CaMeL Of ( String . index CaMeL Of ( String ) index CaMeL
rank: 293
score: 98.91656135110294
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 293
score: 98.90931285511364
patch: return cs . contains CaMeL None ( cs , search CaMeL Chars . index CaMeL Of ( ch ) ) ;
rank: 293
score: 98.62295532226562
patch: s = false ; return false ;
rank: 293
score: 98.60797119140625
patch: return this . return false ;
rank: 293
score: 98.59129503038194
patch: CaMeL Range false ; if return false ;
rank: 293
score: 98.50851440429688
patch: . char CaMeL At ( i , this )
rank: 293
score: 98.45597330729167
patch: return return false ; } i ++ ;
rank: 293
score: 98.22432708740234
patch: return start ; { return false ;
rank: 294
score: 98.91623159555289
patch: assert ( search CaMeL Chars [ j ] == ch ) ;
rank: 294
score: 98.90931114783653
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( j ) ;
rank: 294
score: 98.66460712139423
patch: return search CaMeL Chars [ j ] == ch ; } }
rank: 294
score: 98.62236192491319
patch: r = false ; return false ; }
rank: 294
score: 98.60770263671876
patch: return false ; } finally { return ; }
rank: 294
score: 98.59113226996527
patch: CaMeL Range . false ; return false ;
rank: 294
score: 98.50823296440973
patch: . char CaMeL At ( j ) )
rank: 294
score: 98.22396087646484
patch: ; = false ; return false ;
rank: 295
score: 98.973125
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . last CaMeL Index CaMeL
rank: 295
score: 98.91544071320564
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . to CaMeL String ( ) ) ) ) ;
rank: 295
score: 98.90892493206522
patch: return cs . contains CaMeL None ( search CaMeL Chars [ j ] . char CaMeL At ( j ) ) ;
rank: 295
score: 98.6202392578125
patch: return true ; } } } return ;
rank: 295
score: 98.59105767144098
patch: CaMeL List . false return false ; ;
rank: 295
score: 98.50780639648437
patch: . char CaMeL At ( j , j )
rank: 295
score: 98.22366333007812
patch: ( false ; { return false ;
rank: 296
score: 98.97278849283855
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( ch ) ) ) ;
rank: 296
score: 98.91477614182692
patch: return cs . index CaMeL Of ( String ) == 0 ;
rank: 296
score: 98.908447265625
patch: return this . search CaMeL Chars [ j ] != ch . to CaMeL String ( ) ;
rank: 296
score: 98.62016296386719
patch: return false ; ; } ; }
rank: 296
score: 98.6066665649414
patch: CaMeL List return return false ; }
rank: 296
score: 98.59050750732422
patch: return get CaMeL Instance ( ; ;
rank: 296
score: 98.50780571831598
patch: $NUMBER$ . else { return true ; }
rank: 296
score: 98.45501708984375
patch: Plane [ j ] = cs ;
rank: 296
score: 98.22283935546875
patch: return 0 && false ; break ;
rank: 297
score: 98.91313319052419
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) ) ;
rank: 297
score: 98.66236368815105
patch: return contains ( search CaMeL Chars [ j ] ) ;
rank: 297
score: 98.60582885742187
patch: return false ; } } ( return false ;
rank: 297
score: 98.59047444661458
patch: CaMeL Exception = null ; return false ;
rank: 297
score: 98.50745985243056
patch: return 1 . equals ( false ) ;
rank: 297
score: 98.45470513237848
patch: return true ; } i ++ ; }
rank: 298
score: 98.91298976089016
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) , ch ) ;
rank: 298
score: 98.9076416015625
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals ( null ) ;
rank: 298
score: 98.61953396267361
patch: CaMeL false . ; return true ; }
rank: 298
score: 98.60530853271484
patch: return false ; for ; * /
rank: 298
score: 98.59012858072917
patch: CaMeL List != null ? return false ;
rank: 298
score: 98.45381164550781
patch: return false ; false ; } }
rank: 298
score: 98.22209930419922
patch: return false ; ; return ; /
rank: 299
score: 98.97254136029412
patch: return . index CaMeL Of ( String . index CaMeL Of ( String ) ) ;
rank: 299
score: 98.91180419921875
patch: try { search CaMeL Chars [ j ] == ch ;
rank: 299
score: 98.907470703125
patch: return search CaMeL Chars [ j ] . iterator ( ) . has CaMeL Next ( ) ;
rank: 299
score: 98.6614520733173
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + ) ;
rank: 299
score: 98.61937713623047
patch: return false ; ; } break ;
rank: 299
score: 98.60498046875
patch: return null ; } else {
rank: 299
score: 98.58921305338542
patch: CaMeL append ( false ; return false ;
rank: 299
score: 98.5057373046875
patch: CaMeL false ; return true ;
rank: 299
score: 98.4536361694336
patch: return ( [ ] ) true ;
rank: 299
score: 98.22207641601562
patch: return return ) ; return true ;
rank: 300
score: 98.97251825747283
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars , search CaMeL Chars ,
rank: 300
score: 98.91175426136364
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) , ch ) ) ;
rank: 300
score: 98.90726725260417
patch: return search CaMeL Chars [ j ] . length < search CaMeL Len ;
rank: 300
score: 98.66138712565105
patch: if ( search CaMeL Chars [ j ] == $STRING$ )
rank: 300
score: 98.61890326605902
patch: CaMeL false . return false ; } }
rank: 300
score: 98.60468207465277
patch: return false ; } return false ; ;
rank: 300
score: 98.58846028645833
patch: CaMeL List . iterator return return false ;
rank: 300
score: 98.50106811523438
patch: . char CaMeL At ( j ) + $STRING$
rank: 300
score: 98.45228407118056
patch: Plane * * * / return false ;
rank: 300
score: 98.2198715209961
patch: CaMeL do = false ; return ;
rank: 301
score: 98.91111845128677
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . to CaMeL String ( ) ) ) ) ;
rank: 301
score: 98.90712280273438
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length && search CaMeL Chars . length
rank: 301
score: 98.66131591796875
patch: if ( cs . starts CaMeL With ( $STRING$ ) )
rank: 301
score: 98.60458374023438
patch: return true ; } else { if false ;
rank: 301
score: 98.50101725260417
patch: CaMeL return ( ch != null ) ;
rank: 301
score: 98.45200892857143
patch: Plane this return false ; }
rank: 301
score: 98.21919250488281
patch: CaMeL Builder false ; = false ;
rank: 302
score: 98.9069187330163
patch: if ( search CaMeL Chars . length < cs . length ) search CaMeL Chars . index CaMeL Of ( String )
rank: 302
score: 98.61757405598958
patch: return is CaMeL Whitespace ( false ) ;
rank: 302
score: 98.5869140625
patch: CaMeL arraycopy return false ; return false ;
rank: 302
score: 98.50076729910714
patch: CaMeL Enum . return false ;
rank: 302
score: 98.44940863715277
patch: return 0 [ i ] == ch ;
rank: 302
score: 98.21842193603516
patch: CaMeL do . public return false ;
rank: 303
score: 98.97215924944196
patch: Plane return contains CaMeL None ( cs , search CaMeL Chars ) ;
rank: 303
score: 98.90918986002605
patch: throw new String . index CaMeL Of ( String ) ;
rank: 303
score: 98.90680252878289
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals = $STRING$ ;
rank: 303
score: 98.65941273082386
patch: throw new Runtime CaMeL Exception ( , $STRING$ ) ;
rank: 303
score: 98.61743927001953
patch: return ! false ; } } ;
rank: 303
score: 98.58670383029514
patch: CaMeL Number = true ; return true ;
rank: 303
score: 98.50071716308594
patch: CaMeL ; if ( false ) ;
rank: 303
score: 98.44927215576172
patch: return 0 ? false : true ;
rank: 303
score: 98.21780395507812
patch: return ! ) ; return true ;
rank: 304
score: 98.90911395733173
patch: return search CaMeL Chars [ j ] == ch . null ;
rank: 304
score: 98.90677040501645
patch: return search CaMeL Chars [ j ] . equals ( search CaMeL Chars [ j ] ) ;
rank: 304
score: 98.65937943892045
patch: if ( cs . index CaMeL Of ( String .
rank: 304
score: 98.60364532470703
patch: return true ; } * * /
rank: 304
score: 98.58660210503473
patch: return get CaMeL Field ( false ) ;
rank: 304
score: 98.50071207682292
patch: . return ( false ) == 0 ;
rank: 304
score: 98.21758270263672
patch: false = 0 ; return false ;
rank: 305
score: 98.970888671875
patch: return ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . index CaMeL
rank: 305
score: 98.90897253787878
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) ) ) ;
rank: 305
score: 98.906689453125
patch: return search CaMeL Chars [ i ] . to CaMeL String ( ) . equals ( $STRING$ ) ;
rank: 305
score: 98.65906871448864
patch: return ( String . index CaMeL Of ( String .
rank: 305
score: 98.61481475830078
patch: p = false ; i ++ ;
rank: 305
score: 98.58624267578125
patch: CaMeL List . return ( return ) ;
rank: 305
score: 98.49951782226563
patch: CaMeL false = false ; if ( false )
rank: 305
score: 98.4473876953125
patch: CaMeL String [ j ] = ch ;
rank: 305
score: 98.21753692626953
patch: return ch ) ; return false ;
rank: 306
score: 98.97074558423913
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . cs , search CaMeL Chars ) ) ;
rank: 306
score: 98.90851384943181
patch: return ! search CaMeL Chars [ j ] ) ;
rank: 306
score: 98.90652626439145
patch: return cs . contains CaMeL None ( cs . to CaMeL String ( ) , ch ) ;
rank: 306
score: 98.65906778971355
patch: return ( char ) search CaMeL Chars [ j ] ;
rank: 306
score: 98.6033706665039
patch: return true ; for return false ;
rank: 306
score: 98.58615548270089
patch: CaMeL List ; return false ;
rank: 306
score: 98.49925401475694
patch: CaMeL State . return ( ch ) ;
rank: 306
score: 98.44660101996527
patch: return $STRING$ [ j ] == ch ;
rank: 306
score: 98.216064453125
patch: CaMeL *= ( return ) false ;
rank: 307
score: 98.97044067382812
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL
rank: 307
score: 98.90634637129934
patch: return search CaMeL Chars [ j ] . trim ( ) . to CaMeL String ( ) ;
rank: 307
score: 98.61431884765625
patch: return ! false ; } return false ;
rank: 307
score: 98.60327826605902
patch: return false ; this . return false ;
rank: 307
score: 98.58602566189236
patch: CaMeL String = false ; return null ;
rank: 307
score: 98.49776204427083
patch: . append ( false , false ) ;
rank: 307
score: 98.4444808959961
patch: return $STRING$ ? false : false ;
rank: 307
score: 98.21494838169643
patch: return true ; return 0 ;
rank: 308
score: 98.96909693667763
patch: Plane = cs . char CaMeL At ( cs . char CaMeL At ( cs . char CaMeL
rank: 308
score: 98.90625
patch: return null && search CaMeL Chars [ j ] == ch ;
rank: 308
score: 98.90601806640625
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) { return true ; }
rank: 308
score: 98.6578702059659
patch: return cs . search CaMeL Chars [ i ] ;
rank: 308
score: 98.61318630642361
patch: return true ? true : false ; }
rank: 308
score: 98.60307965959821
patch: return true ; } if ;
rank: 308
score: 98.58543565538194
patch: CaMeL Range false return false ; false ;
rank: 308
score: 98.49647216796875
patch: . char CaMeL At ( j , start )
rank: 308
score: 98.44336700439453
patch: return null ? false : false ;
rank: 308
score: 98.21347045898438
patch: CaMeL Thread return ; = false ;
rank: 309
score: 98.9690653483073
patch: return new char [ search CaMeL Chars . length ] ;
rank: 309
score: 98.90590968276516
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( ) ) ) ) ;
rank: 309
score: 98.90574340820312
patch: return String . index CaMeL Of ( String . index CaMeL Of ( cs . char CaMeL At (
rank: 309
score: 98.65740966796875
patch: return return search CaMeL Chars [ j ] ;
rank: 309
score: 98.61294555664062
patch: . return false ; } } ;
rank: 309
score: 98.60222516741071
patch: return return false ; } else
rank: 309
score: 98.49516296386719
patch: . starts CaMeL With ( false )
rank: 309
score: 98.44261932373047
patch: return is [ i ] ; }
rank: 309
score: 98.21339416503906
patch: false = $NUMBER$ ; return false ;
rank: 310
score: 98.96869860197368
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String ) . index CaMeL
rank: 310
score: 98.90548940805289
patch: return String . index CaMeL Of ( String ) == $NUMBER$ ;
rank: 310
score: 98.6573153409091
patch: throw new Illegal CaMeL Argument CaMeL Exception ( String .
rank: 310
score: 98.61195373535156
patch: return return ( false ) ; }
rank: 310
score: 98.60221354166667
patch: CaMeL State . return false ; } }
rank: 310
score: 98.58458116319444
patch: return super . false ; return true ;
rank: 310
score: 98.49510362413194
patch: . append ( ch , true ) ;
rank: 310
score: 98.44219970703125
patch: Plane return return true ; } }
rank: 310
score: 98.21315220424107
patch: CaMeL += ( false ) ;
rank: 311
score: 98.90545457409274
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( i ) ) ) ) ;
rank: 311
score: 98.65720436789773
patch: if ( cs . to CaMeL String ( ) )
rank: 311
score: 98.60042114257813
patch: return is CaMeL Empty return false ; } }
rank: 311
score: 98.584228515625
patch: CaMeL String false return false ;
rank: 311
score: 98.49484592013889
patch: = false ; if ( false ) {
rank: 311
score: 98.44158172607422
patch: Plane [ i ] return true ;
rank: 311
score: 98.21269008091518
patch: return false ; return ; ;
rank: 312
score: 98.96765625
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . starts CaMeL With ( $STRING$ ) ;
rank: 312
score: 98.90508478338069
patch: return search CaMeL Chars [ j ] instanceof String ;
rank: 312
score: 98.90469970703126
patch: return search CaMeL Chars [ j ] . get CaMeL Name ( ) . equals ( ch ) ;
rank: 312
score: 98.65692816840277
patch: throw new Runtime CaMeL Exception ( $STRING$ ;
rank: 312
score: 98.61074393136161
patch: return ! false ; ; }
rank: 312
score: 98.600341796875
patch: return false ; } } else return ;
rank: 312
score: 98.58407592773438
patch: CaMeL Null ( ; return true ;
rank: 312
score: 98.49323187934027
patch: return ( ( char ) false ) ;
rank: 312
score: 98.44122314453125
patch: return true ; else return true ;
rank: 312
score: 98.21222686767578
patch: ( ! ) ; return false ;
rank: 313
score: 98.96724269701087
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL
rank: 313
score: 98.90498490767045
patch: return search CaMeL Chars [ j ] == $NUMBER$ ;
rank: 313
score: 98.90467325846355
patch: return search CaMeL Chars [ i ] . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ;
rank: 313
score: 98.65616861979167
patch: return cs . false ;
rank: 313
score: 98.59846327039931
patch: return true ; } if return true ;
rank: 313
score: 98.58382161458333
patch: CaMeL Throwable = false ; return false ;
rank: 313
score: 98.48963758680556
patch: CaMeL ; if ( false ) false ;
rank: 313
score: 98.4410400390625
patch: return 0 ? true : false ;
rank: 313
score: 98.21082305908203
patch: CaMeL List ( ; return ; /
rank: 314
score: 98.96666463216145
patch: return contains CaMeL None ( search CaMeL Chars , ) ;
rank: 314
score: 98.65509033203125
patch: if ( cs . to CaMeL String ( )
rank: 314
score: 98.61017608642578
patch: return ! false ; } ; }
rank: 314
score: 98.5984130859375
patch: return null ; } else return false ; }
rank: 314
score: 98.58354949951172
patch: return new && ( false ) ;
rank: 314
score: 98.48933919270833
patch: CaMeL false ? * / return true ;
rank: 314
score: 98.21070861816406
patch: ( $NUMBER$ ) ; return false ;
rank: 315
score: 98.96615439967105
patch: return ( cs . char CaMeL At ( cs . char CaMeL At ( cs . char CaMeL
rank: 315
score: 98.6549072265625
patch: if ( search CaMeL Chars . length >= 0 ) {
rank: 315
score: 98.60959201388889
patch: return ! is CaMeL Empty ( false ;
rank: 315
score: 98.59834120008681
patch: CaMeL List return return false ; } }
rank: 315
score: 98.5828857421875
patch: CaMeL List . return this . false ;
rank: 315
score: 98.489013671875
patch: . char CaMeL At ( char ) ;
rank: 315
score: 98.43749237060547
patch: return ( false ) + false ;
rank: 315
score: 98.21025085449219
patch: return false ; ; return $NUMBER$ ;
rank: 316
score: 98.903564453125
patch: return cs . contains CaMeL None ( cs . char CaMeL At ( j ) . get CaMeL Name ( ) ) ;
rank: 316
score: 98.90252870501894
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 316
score: 98.65487905649039
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( , $STRING$ ) ;
rank: 316
score: 98.60957845052083
patch: b = false ; return false ; }
rank: 316
score: 98.598095703125
patch: return true ; } if ; return false ;
rank: 316
score: 98.58208550347223
patch: CaMeL Range ; return this . false ;
rank: 316
score: 98.48667399088542
patch: . value CaMeL Of ( false ) ;
rank: 316
score: 98.43706512451172
patch: return return return false ; } }
rank: 316
score: 98.2100601196289
patch: return && false ; return false ;
rank: 317
score: 98.96541555304276
patch: try { char . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL
rank: 317
score: 98.9032870205966
patch: return cs . contains CaMeL None ( cs , search CaMeL Chars . index CaMeL Of ( $STRING$ ) ) ;
rank: 317
score: 98.90131084735577
patch: return search CaMeL Chars [ j ] == ch . name ;
rank: 317
score: 98.6548563639323
patch: switch ( String . index CaMeL Of ( $STRING$ ) )
rank: 317
score: 98.60920545789931
patch: return true ; ; } return true ;
rank: 317
score: 98.59809112548828
patch: return false ; } ; return ;
rank: 317
score: 98.48603651258681
patch: . return ( ch , true ) ;
rank: 317
score: 98.43596649169922
patch: return true ; } / * /
rank: 317
score: 98.20938110351562
patch: return == false ; return false ;
rank: 318
score: 98.90128326416016
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( i ) ) ) ) ;
rank: 318
score: 98.65478515625
patch: return search CaMeL Chars [ j ]
rank: 318
score: 98.60836029052734
patch: return ! is CaMeL Empty ( ;
rank: 318
score: 98.59794921875
patch: CaMeL State . return ( false ) ; }
rank: 318
score: 98.58169216579861
patch: return false ; return Boolean . false ;
rank: 318
score: 98.48463270399306
patch: . char CaMeL At ( j + ;
rank: 318
score: 98.43537248883929
patch: [ j ] = false ;
rank: 319
score: 98.9642578125
patch: return String . index CaMeL Of ( String ) < search CaMeL Len ;
rank: 319
score: 98.90287475585937
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . contains ( ch ) ;
rank: 319
score: 98.6543960571289
patch: return contains CaMeL None = false ;
rank: 319
score: 98.60822211371527
patch: return true ; } if ( false )
rank: 319
score: 98.59764268663194
patch: return new false ; } return false ;
rank: 319
score: 98.58156331380208
patch: return true ; return null ; false ;
rank: 319
score: 98.43484933035714
patch: return ( return false ) ;
rank: 319
score: 98.20863342285156
patch: return != $NUMBER$ ; return false ;
rank: 320
score: 98.96405584161931
patch: return search CaMeL Chars . equals ( ch ) ;
rank: 320
score: 98.90264337713069
patch: return search CaMeL Chars [ j ] . to CaMeL Char CaMeL Array ( ) . equals ( $STRING$ ) ;
rank: 320
score: 98.89961511948529
patch: . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 320
score: 98.65391031901042
patch: return cs . search CaMeL Chars [ j ] ; }
rank: 320
score: 98.60784149169922
patch: c = false ; false * /
rank: 320
score: 98.59703063964844
patch: return false ; } else * /
rank: 320
score: 98.58133951822917
patch: CaMeL List . append ( $STRING$ ) ;
rank: 320
score: 98.20803833007812
patch: return 0 ; else return false ;
rank: 321
score: 98.964033203125
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . String . char CaMeL
rank: 321
score: 98.902099609375
patch: return cs . contains CaMeL None ( search CaMeL Chars [ j ] . get CaMeL Name ( ) ) ;
rank: 321
score: 98.6538418856534
patch: if ( j > search CaMeL Chars . length )
rank: 321
score: 98.581298828125
patch: CaMeL Null return false ; return true ;
rank: 321
score: 98.48310682508681
patch: CaMeL Builder . char CaMeL At ( ;
rank: 321
score: 98.43348911830357
patch: Plane else return false ; }
rank: 321
score: 98.2073974609375
patch: return is ( false 1 ) ;
rank: 322
score: 98.96366060697116
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length ) . equals ( ch ) ;
rank: 322
score: 98.9020763578869
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) . is CaMeL Empty ( ) ;
rank: 322
score: 98.89724469866071
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 322
score: 98.65309836647727
patch: if ( cs . is CaMeL Empty ( ) )
rank: 322
score: 98.60643005371094
patch: return true ; } } ; ;
rank: 322
score: 98.58036804199219
patch: CaMeL Number = return ) false ;
rank: 322
score: 98.48304578993056
patch: return null . equals ( ch ) ;
rank: 322
score: 98.43299865722656
patch: return new byte [ 0 ] ;
rank: 322
score: 98.20733642578125
patch: ; List ( ; = false ;
rank: 323
score: 98.963642578125
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . value CaMeL Of ( String ) ;
rank: 323
score: 98.90202026367187
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) . contains ( ch ) ;
rank: 323
score: 98.8970614346591
patch: return String ) search CaMeL Chars [ j ] ;
rank: 323
score: 98.65277099609375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( name ) ;
rank: 323
score: 98.60556030273438
patch: return ( false ) ; } ;
rank: 323
score: 98.59547932942708
patch: return false ; } / * * /
rank: 323
score: 98.5802001953125
patch: return get CaMeL Enum ( false ) ;
rank: 323
score: 98.48253038194444
patch: CaMeL System . return ( false ) ;
rank: 323
score: 98.43064662388393
patch: return false + false ; }
rank: 323
score: 98.20631408691406
patch: CaMeL return ) ; return ; {
rank: 324
score: 98.9633076985677
patch: return search CaMeL Chars . size ( ) - 1 ;
rank: 324
score: 98.90184437144886
patch: return cs . contains CaMeL None ( search CaMeL Chars [ i ] . to CaMeL String ( ) ) ;
rank: 324
score: 98.89692826704545
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) , ch ) ) ;
rank: 324
score: 98.65202026367187
patch: ! String . index CaMeL Of ( ch )
rank: 324
score: 98.60540093315973
patch: CaMeL false [ false ] = false ;
rank: 324
score: 98.59476318359376
patch: return false ; return false ; } } ;
rank: 324
score: 98.579833984375
patch: CaMeL Range false false ; return false ;
rank: 324
score: 98.48127577039931
patch: . return ( ch != $STRING$ ) ;
rank: 324
score: 98.42896525065105
patch: Plane return return true ;
rank: 324
score: 98.20625523158482
patch: return ch ; return false ;
rank: 325
score: 98.96321828741776
patch: return . index CaMeL Of ( String . index CaMeL Of ( String ) ) >= 0 ;
rank: 325
score: 98.90138646175987
patch: if ( search CaMeL Chars . length != search CaMeL Chars . length ) { return true ;
rank: 325
score: 98.89624962439903
patch: return ch . index CaMeL Of ( String ) == 0 ;
rank: 325
score: 98.65191180889423
patch: return ( String . index CaMeL Of ( String ) ) ;
rank: 325
score: 98.59467315673828
patch: return this . false ; } }
rank: 325
score: 98.57941351996527
patch: CaMeL Number = false ; for false ;
rank: 325
score: 98.48123931884766
patch: . return - 1 + false ;
rank: 325
score: 98.42867279052734
patch: return true ; * * * /
rank: 325
score: 98.20560455322266
patch: return 0 == 0 + false ;
rank: 326
score: 98.96186908922698
patch: return ( search CaMeL Chars . char CaMeL At ( search CaMeL Len ) == ch ) ;
rank: 326
score: 98.90113589638158
patch: if ( search CaMeL Chars . length < cs . length && search CaMeL Chars . index CaMeL
rank: 326
score: 98.89490855823864
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( cs . char CaMeL At ( j ) ) ) ) ;
rank: 326
score: 98.6518085186298
patch: if ( cs . to CaMeL String ( ) == ch )
rank: 326
score: 98.60479736328125
patch: cp = false ; return true ;
rank: 326
score: 98.59383138020833
patch: return is ; } } return true ;
rank: 326
score: 98.57932535807292
patch: CaMeL append return false ;
rank: 326
score: 98.4812240600586
patch: . return true ; return false ;
rank: 326
score: 98.2049789428711
patch: return return false ; return 0 ;
rank: 327
score: 98.96151968149039
patch: return index CaMeL Of ( search CaMeL Chars , String ) ;
rank: 327
score: 98.9007059733073
patch: if ( search CaMeL Chars . length < cs . length ) search CaMeL Chars . char CaMeL At ( j ] )
rank: 327
score: 98.89466768152573
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) , ch ) ;
rank: 327
score: 98.6513671875
patch: return search CaMeL Chars [ j ] == ) ;
rank: 327
score: 98.60408020019531
patch: d = false ; return true ;
rank: 327
score: 98.59355926513672
patch: return true ; } catch false ;
rank: 327
score: 98.57914733886719
patch: CaMeL Number ( return false ) ;
rank: 327
score: 98.42810930524554
patch: Plane * / return false ;
rank: 327
score: 98.20343017578125
patch: CaMeL ch ( false false ) ;
rank: 328
score: 98.90070543791118
patch: if ( search CaMeL Chars . length <= search CaMeL Chars . length ) { return true ;
rank: 328
score: 98.89423370361328
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( String . to CaMeL String ( ) ) ) ) ;
rank: 328
score: 98.65085856119792
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 328
score: 98.60392252604167
patch: cp = false ; return true ; }
rank: 328
score: 98.57907443576389
patch: CaMeL Range [ return false : false ;
rank: 328
score: 98.4801025390625
patch: . return ( j + 1 ) ;
rank: 328
score: 98.4281005859375
patch: Plane false return false ; } }
rank: 328
score: 98.20280456542969
patch: return matches false ; return false ;
rank: 329
score: 98.96091796875
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL
rank: 329
score: 98.90023099459134
patch: return search CaMeL Chars [ j ] == ch . to CaMeL
rank: 329
score: 98.89422248391544
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) , ch ) ;
rank: 329
score: 98.64971454326923
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } }
rank: 329
score: 98.60301971435547
patch: ( ) . return false ; }
rank: 329
score: 98.59314643012152
patch: return ; } } if return false ;
rank: 329
score: 98.57862091064453
patch: return null ; ; return true ;
rank: 329
score: 98.47934977213542
patch: . return ( ch + $STRING$ ) ;
rank: 329
score: 98.42768859863281
patch: for [ j ] = false ;
rank: 329
score: 98.20233917236328
patch: return 0 ; return return false ;
rank: 330
score: 98.9000934103261
patch: return cs . contains CaMeL None ( search CaMeL Chars [ j ] . char CaMeL At ( i ) ) ;
rank: 330
score: 98.89420835433468
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( cs . char CaMeL At ( j ) ) ) ) ;
rank: 330
score: 98.64905395507813
patch: if ( search CaMeL Chars [ j ] )
rank: 330
score: 98.59203423394098
patch: return false ; if ; return false ;
rank: 330
score: 98.57826232910156
patch: CaMeL Range . ; return true ;
rank: 330
score: 98.47574191623264
patch: = this . false ; return false ;
rank: 330
score: 98.42735944475446
patch: Plane return false ; break ;
rank: 330
score: 98.20208740234375
patch: return 0 ; final return false ;
rank: 331
score: 98.96046206825658
patch: String . index CaMeL Of ( String . index CaMeL Of ( $STRING$ ) , ch ) ;
rank: 331
score: 98.89970092773437
patch: throw String . index CaMeL Of ( String . index CaMeL Of ( $STRING$ ) , ch ) ;
rank: 331
score: 98.64836968315973
patch: return ( Char CaMeL Sequence ) true ;
rank: 331
score: 98.57682969835069
patch: CaMeL value return false ; return false ;
rank: 331
score: 98.47555202907986
patch: CaMeL Error = true ; break ; }
rank: 331
score: 98.42695617675781
patch: if ( true ) return false ;
rank: 331
score: 98.20205688476562
patch: return return 1 ; return true ;
rank: 332
score: 98.95939127604167
patch: return index CaMeL Of ( search CaMeL Chars , search CaMeL Len ) ;
rank: 332
score: 98.89965006510417
patch: return search CaMeL Chars [ j ] . equals ( String . index CaMeL
rank: 332
score: 98.8934795673077
patch: return String . index CaMeL Of ( String ) instanceof String ;
rank: 332
score: 98.64835611979167
patch: if ( cs . ends CaMeL With ( ch ) )
rank: 332
score: 98.60041809082031
patch: return true ; } ++ false ;
rank: 332
score: 98.59105224609375
patch: return true ; } else { return ; }
rank: 332
score: 98.57656521267361
patch: CaMeL List . iterator return false ; ;
rank: 332
score: 98.47490098741319
patch: return Math . abs ( false ) ;
rank: 332
score: 98.20165143694196
patch: return ; { return $NUMBER$ ;
rank: 333
score: 98.95908203125
patch: return contains CaMeL None ( cs , search CaMeL Chars , ch ) ;
rank: 333
score: 98.89949115953948
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL
rank: 333
score: 98.89274597167969
patch: . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 333
score: 98.64716932508681
patch: if ( search CaMeL Len < 0 )
rank: 333
score: 98.59818522135417
patch: return true ; ; } return false ;
rank: 333
score: 98.57616315569196
patch: CaMeL Exception = return false ;
rank: 333
score: 98.47473822699652
patch: . return ( false ) && false ;
rank: 333
score: 98.425537109375
patch: Plane false return false ;
rank: 333
score: 98.20123291015625
patch: return ! $NUMBER$ ; return 1 ;
rank: 334
score: 98.8926669034091
patch: byte . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 334
score: 98.64691772460938
patch: if ( j <= search CaMeL Len ) {
rank: 334
score: 98.59771050347223
patch: d = false ; return true ; }
rank: 334
score: 98.57476806640625
patch: return false ; return - true ;
rank: 334
score: 98.47408040364583
patch: CaMeL ; try { false = true ;
rank: 334
score: 98.42485046386719
patch: ( ) return false ; } }
rank: 335
score: 98.95843975360577
patch: return ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) == ch ) ;
rank: 335
score: 98.8989894701087
patch: if ( search CaMeL Chars . length < cs . length ) search CaMeL Chars . char CaMeL At ( j )
rank: 335
score: 98.89207458496094
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( cs . char CaMeL At ( j ) ) ) ) ;
rank: 335
score: 98.64655010516827
patch: return cs . to CaMeL Char CaMeL Array ( ) ; }
rank: 335
score: 98.59760393415179
patch: p = false ; break ;
rank: 335
score: 98.590380859375
patch: return null ; } else { return false ;
rank: 335
score: 98.47355651855469
patch: parser = false ; return true ;
rank: 335
score: 98.42481231689453
patch: return [ j ] == $STRING$ ;
rank: 335
score: 98.20087541852679
patch: ; return ; = false ;
rank: 336
score: 98.95838341346153
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ;
rank: 336
score: 98.89870198567708
patch: return search CaMeL Chars [ j ] . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ;
rank: 336
score: 98.89178269909274
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( String . char CaMeL At ( j ) ) ) ) ;
rank: 336
score: 98.64654071514423
patch: return cs . char CaMeL At ( 0 ) == ch ;
rank: 336
score: 98.47262912326389
patch: . compare CaMeL To ( ch ) ;
rank: 336
score: 98.42373657226562
patch: cs return false ; }
rank: 336
score: 98.20004708426339
patch: ( false ) ; return ;
rank: 337
score: 98.95815022786458
patch: return contains CaMeL None ( j ) ;
rank: 337
score: 98.89860395951705
patch: return search CaMeL Chars [ j ] . to CaMeL Char CaMeL Array ( ) . equals ( ch ) ;
rank: 337
score: 98.89065317007211
patch: return String . index CaMeL Of ( String ) < ch ;
rank: 337
score: 98.64534912109374
patch: return ( false ;
rank: 337
score: 98.59744262695312
patch: b = false ; return false ;
rank: 337
score: 98.58970424107143
patch: return is return false ; }
rank: 337
score: 98.57366180419922
patch: CaMeL Range [ ] return false ;
rank: 337
score: 98.47256469726562
patch: . return ( false , false ;
rank: 337
score: 98.19993591308594
patch: return return false ; return null ;
rank: 338
score: 98.95775349934895
patch: return ! search CaMeL Chars . get ( ch ) ;
rank: 338
score: 98.898603515625
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 338
score: 98.8900146484375
patch: return String . index CaMeL Of ( String ) == $STRING$ ;
rank: 338
score: 98.57364908854167
patch: CaMeL Error = false ;
rank: 338
score: 98.47222222222223
patch: . char CaMeL At ( 0 , ;
rank: 338
score: 98.19980294363839
patch: return 0 ; throw false ;
rank: 339
score: 98.95759765625
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL
rank: 339
score: 98.8985659950658
patch: return search CaMeL Chars [ j ] . [ 0 ] . contains CaMeL None ( ) ;
rank: 339
score: 98.89000701904297
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( cs . char CaMeL At ( j ) ) ) ) ;
rank: 339
score: 98.643310546875
patch: if ( search CaMeL Chars [ j ] != $STRING$ ) {
rank: 339
score: 98.5968017578125
patch: this . return false ; }
rank: 339
score: 98.58936767578125
patch: return false ; } if ; * * /
rank: 339
score: 98.57356262207031
patch: CaMeL List false false return true ;
rank: 339
score: 98.47188895089286
patch: CaMeL System . return false ;
rank: 339
score: 98.19968668619792
patch: return 0 - false ;
rank: 340
score: 98.95736929086539
patch: return ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL At ( search CaMeL Len ) ) ) ;
rank: 340
score: 98.89827045641448
patch: return false + String . index CaMeL Of ( String ) . to CaMeL String ( ) ;
rank: 340
score: 98.88877175071023
patch: return $STRING$ + search CaMeL Chars [ j ] ;
rank: 340
score: 98.64227905273438
patch: { String . index CaMeL Of ( $STRING$ )
rank: 340
score: 98.59671020507812
patch: return true ; } continue ; }
rank: 340
score: 98.58908420138889
patch: return false ; } if ; * /
rank: 340
score: 98.57339138454861
patch: CaMeL Exception return false ; while false ;
rank: 340
score: 98.47113715277777
patch: . char CaMeL At ( j ) :
rank: 340
score: 98.420654296875
patch: return * * * * * /
rank: 340
score: 98.1994857788086
patch: return - 1 ; return 1 ;
rank: 341
score: 98.957353515625
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . String . index CaMeL
rank: 341
score: 98.888671875
patch: . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) ) ) ;
rank: 341
score: 98.59660993303571
patch: c = false ; break ;
rank: 341
score: 98.58845738002232
patch: return is false ; } }
rank: 341
score: 98.57329644097223
patch: return true ; false ; return false ;
rank: 341
score: 98.4710922241211
patch: . char CaMeL At ( ; }
rank: 341
score: 98.42037963867188
patch: return ch ? false : false ;
rank: 341
score: 98.19879150390625
patch: CaMeL List return ; = false ;
rank: 342
score: 98.957236328125
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( System . last CaMeL Index CaMeL
rank: 342
score: 98.89748021175987
patch: return cs . contains CaMeL None ( cs , search CaMeL Chars . next ( ) ) ;
rank: 342
score: 98.88842010498047
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . to CaMeL String ( ) ) ) , ch ) ;
rank: 342
score: 98.64151705228366
patch: return ( search CaMeL Chars [ j ] ) + 1 ;
rank: 342
score: 98.59606255425348
patch: c = false ; break ; } }
rank: 342
score: 98.58834838867188
patch: return false ; } catch ; return true ;
rank: 342
score: 98.57289632161458
patch: CaMeL Number ( false ; return false ;
rank: 342
score: 98.41981201171875
patch: { return false ;
rank: 342
score: 98.19867815290179
patch: ( 0 ; return false ;
rank: 343
score: 98.9572002704327
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( cs . char CaMeL At ( j ) ) ) ;
rank: 343
score: 98.89743276742789
patch: return search CaMeL Chars [ j ] . to CaMeL Lower CaMeL Case ( ) . equals CaMeL Ignore CaMeL Case ( ch ) ;
rank: 343
score: 98.88820578835227
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) , ch ) ;
rank: 343
score: 98.64093572443181
patch: return ( ( Char CaMeL Sequence ) cs ) ;
rank: 343
score: 98.59511893136161
patch: return ; } return true ;
rank: 343
score: 98.587841796875
patch: return is false ; } } return false ;
rank: 343
score: 98.57195366753473
patch: return true ; return true ; false ;
rank: 343
score: 98.47008599175348
patch: CaMeL return ( ch , false ) ;
rank: 343
score: 98.41973876953125
patch: { return false ; } } }
rank: 343
score: 98.19843401227679
patch: return is ( 0 ) ;
rank: 344
score: 98.95707194010417
patch: return search CaMeL Chars . equals ( String . index CaMeL Of ( String ) . to CaMeL String ( ) ) ;
rank: 344
score: 98.897080078125
patch: return cs . contains CaMeL None ( cs . char CaMeL At ( j ) . char CaMeL At ( j ) ) ;
rank: 344
score: 98.88802315848214
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 344
score: 98.64061390269886
patch: switch ( search CaMeL Chars [ j ] ) ;
rank: 344
score: 98.59473419189453
patch: log = false ; return false ;
rank: 344
score: 98.57183159722223
patch: CaMeL Range = null ; return false ;
rank: 344
score: 98.46970621744792
patch: CaMeL Enum . char CaMeL At ( ;
rank: 344
score: 98.19769287109375
patch: return length ) ; return false ;
rank: 345
score: 98.956953125
patch: return search CaMeL Chars . equals ( String . index CaMeL Of ( String . index CaMeL Of ( String ) ) ) ;
rank: 345
score: 98.89682488692434
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . run ( ) ;
rank: 345
score: 98.88773803710937
patch: search CaMeL Chars [ j ] == ch ;
rank: 345
score: 98.63992919921876
patch: if ( i >= search CaMeL Len ) {
rank: 345
score: 98.59464518229167
patch: return ( false , true , false ;
rank: 345
score: 98.58726196289062
patch: return true ; } catch return false ; }
rank: 345
score: 98.5715560913086
patch: CaMeL Exception = return ) false ;
rank: 345
score: 98.41871861049107
patch: return true ; / * /
rank: 345
score: 98.19746398925781
patch: return is != 0 && false ;
rank: 346
score: 98.956865234375
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String (
rank: 346
score: 98.89655095880681
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) . char CaMeL At ( 0 ) ;
rank: 346
score: 98.88639322916667
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) == 0 ;
rank: 346
score: 98.63899369673295
patch: if ( search CaMeL Len > cs . length )
rank: 346
score: 98.59363555908203
patch: return ; } return false ; }
rank: 346
score: 98.58602142333984
patch: return null ; } } else {
rank: 346
score: 98.57151794433594
patch: CaMeL Exception ; return false ; ;
rank: 346
score: 98.19737243652344
patch: CaMeL ! false ; return false ;
rank: 347
score: 98.8961181640625
patch: return search CaMeL Chars [ j ] . to CaMeL String ( )
rank: 347
score: 98.88571999289773
patch: return search CaMeL Chars [ j ] == 0 ;
rank: 347
score: 98.63890491832386
patch: throw Illegal CaMeL Argument CaMeL Exception [ 0 ] ;
rank: 347
score: 98.59298366970486
patch: ch = false ; return true ; }
rank: 347
score: 98.58551897321429
patch: return return $NUMBER$ == false ;
rank: 347
score: 98.57134331597223
patch: CaMeL TRUE = false ; return false ;
rank: 347
score: 98.4672342936198
patch: CaMeL return false ; ;
rank: 347
score: 98.41718292236328
patch: return false ; . return false ;
rank: 347
score: 98.19719696044922
patch: return ! false ; return 0 ;
rank: 348
score: 98.95653279622395
patch: return ( search CaMeL Chars . char CaMeL At ( cs . char CaMeL At ( j ) ) == ch ) ;
rank: 348
score: 98.89560768821023
patch: return cs . contains CaMeL None ( search CaMeL Chars . char CaMeL At ( j + 1 ) ) ;
rank: 348
score: 98.88570462740384
patch: return contains CaMeL None ( cs , cs CaMeL Len ) ;
rank: 348
score: 98.63813920454545
patch: if ( cs . length ( ) > 0 )
rank: 348
score: 98.59149848090277
patch: = false ; return true ; } }
rank: 348
score: 98.58529052734374
patch: return false ; return false ; } catch ;
rank: 348
score: 98.57091522216797
patch: CaMeL Exception false return false ; }
rank: 348
score: 98.41605050223214
patch: Plane ! return false ; }
rank: 348
score: 98.19701385498047
patch: CaMeL sum . ; return false ;
rank: 349
score: 98.955322265625
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . [ search CaMeL Chars . last CaMeL Index CaMeL
rank: 349
score: 98.8952303799716
patch: throw String . index CaMeL Of ( $STRING$ , search CaMeL Chars . char CaMeL At ( i ) ) ;
rank: 349
score: 98.88553619384766
patch: . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) , ch ) ;
rank: 349
score: 98.584765625
patch: return false ; return false ; } if ;
rank: 349
score: 98.57089233398438
patch: return new Double ( false ) ;
rank: 349
score: 98.46673583984375
patch: $NUMBER$ * / return false ;
rank: 349
score: 98.41585540771484
patch: Plane return false ; break ; }
rank: 349
score: 98.19654846191406
patch: return 0 != false ; return ;
rank: 350
score: 98.9553125
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . to CaMeL String ( ) ) ;
rank: 350
score: 98.8948390794837
patch: return search CaMeL Chars [ j ] . to CaMeL Char CaMeL Array ( ) . to CaMeL String ( ) ;
rank: 350
score: 98.88505554199219
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . to CaMeL Lower CaMeL Case ( ) ) ) ) ;
rank: 350
score: 98.63569779829545
patch: if ( j != search CaMeL Chars . length )
rank: 350
score: 98.58407592773438
patch: return return && false ; } }
rank: 350
score: 98.57058715820312
patch: return this . false ; false ;
rank: 350
score: 98.46657986111111
patch: . starts CaMeL With ( false ) ;
rank: 350
score: 98.41453552246094
patch: Plane * * / return true ;
rank: 350
score: 98.19368743896484
patch: CaMeL List ( return false ) ;
rank: 351
score: 98.95509765625
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length ) . size ( ) ;
rank: 351
score: 98.89457194010417
patch: return ! search CaMeL Chars [ j ] != ch ;
rank: 351
score: 98.885009765625
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 351
score: 98.63568793402777
patch: if ( j >= search CaMeL Len )
rank: 351
score: 98.58987087673611
patch: return true ; } else if ( ;
rank: 351
score: 98.58326721191406
patch: return false ; while return true ;
rank: 351
score: 98.57017517089844
patch: return true ; false return false ;
rank: 351
score: 98.4651870727539
patch: . is CaMeL Empty = true ;
rank: 351
score: 98.41434478759766
patch: Plane return ( false ) ; }
rank: 351
score: 98.19342041015625
patch: CaMeL List ( false false ) ;
rank: 352
score: 98.95291015625
patch: return . index CaMeL Of ( String . index CaMeL Of ( String ) . to CaMeL String ( ) ) == 0 ;
rank: 352
score: 98.88491586538461
patch: return search CaMeL Chars [ j ] == String . cs ;
rank: 352
score: 98.58851318359375
patch: c = false ;
rank: 352
score: 98.58304443359376
patch: return is CaMeL Defined ( false , false ;
rank: 352
score: 98.5687255859375
patch: return false ; return false ; ; ;
rank: 352
score: 98.46480305989583
patch: . char CaMeL At ( i ) .
rank: 352
score: 98.41409301757812
patch: Plane ! return false ;
rank: 352
score: 98.19231305803571
patch: CaMeL ch return false ; ;
rank: 353
score: 98.89382699819711
patch: return this . search CaMeL Chars [ j ] . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ;
rank: 353
score: 98.88409978693181
patch: return search CaMeL Chars [ j ] = ch ;
rank: 353
score: 98.63125
patch: if ( search CaMeL Len <= 1 ) {
rank: 353
score: 98.58846282958984
patch: rt = false ; return true ;
rank: 353
score: 98.58296421595982
patch: return false ; else return ;
rank: 353
score: 98.568359375
patch: return false ; ; ; if false ;
rank: 353
score: 98.46474202473958
patch: . return ( ch ) == false ;
rank: 353
score: 98.4111557006836
patch: return new int [ ] { i
rank: 353
score: 98.19188690185547
patch: return false ; return ( false ;
rank: 354
score: 98.95224233774039
patch: return ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . i ) )
rank: 354
score: 98.88357309194711
patch: return null . index CaMeL Of ( String ) == 1 ;
rank: 354
score: 98.58833312988281
patch: return ( false , ch ) ;
rank: 354
score: 98.5824951171875
patch: return false ; } } * * * /
rank: 354
score: 98.462646484375
patch: . return 0 == false ;
rank: 354
score: 98.41085815429688
patch: Plane this return false ; } }
rank: 354
score: 98.19164276123047
patch: return 0 ; return false ; ;
rank: 355
score: 98.95218599759616
patch: return $STRING$ . index CaMeL Of ( $STRING$ ) == 0 ;
rank: 355
score: 98.89332798549107
patch: return search CaMeL Chars [ j ] . add ( $STRING$ ) ;
rank: 355
score: 98.88346557617187
patch: return ! cs . contains ( ch ) ;
rank: 355
score: 98.62957153320312
patch: if ( i == search CaMeL Len ) {
rank: 355
score: 98.58828396267361
patch: p = false ; ; return true ;
rank: 355
score: 98.56745062934027
patch: return this . false ; ; ; ;
rank: 355
score: 98.40776062011719
patch: return new char [ 1 ] ;
rank: 355
score: 98.19151306152344
patch: false = 1 ; return false ;
rank: 356
score: 98.95172588641827
patch: return String . index CaMeL Of ( ch ) > 0 ;
rank: 356
score: 98.89287923177083
patch: throw String . index CaMeL Of ( $STRING$ , search CaMeL Chars ) ;
rank: 356
score: 98.8831084280303
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . value CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 356
score: 98.62918701171876
patch: return = search CaMeL Chars [ j ] ;
rank: 356
score: 98.58786349826389
patch: . return true ; break ; } }
rank: 356
score: 98.58143310546875
patch: return null ; } else if return false ;
rank: 356
score: 98.4614028930664
patch: . return ( char ) false ;
rank: 356
score: 98.40748596191406
patch: return ( true ) ; } }
rank: 356
score: 98.18936157226562
patch: CaMeL List ( ; return ; :
rank: 357
score: 98.89247349330357
patch: return search CaMeL Chars [ j ] . contains ( String ) ;
rank: 357
score: 98.88290640024039
patch: return ch instanceof String . index CaMeL Of ( String ) ;
rank: 357
score: 98.62819602272727
patch: return search CaMeL Chars [ j + 1 ] ;
rank: 357
score: 98.56734793526786
patch: CaMeL Range ( false ) ;
rank: 357
score: 98.46117401123047
patch: = false ; ch = false ;
rank: 357
score: 98.40748596191406
patch: return $NUMBER$ ? false : true ;
rank: 357
score: 98.18934631347656
patch: return return $NUMBER$ ; return 1 ;
rank: 358
score: 98.95115443638393
patch: return contains CaMeL None ( search CaMeL Chars , String . index CaMeL
rank: 358
score: 98.89236215444711
patch: return search CaMeL Chars [ j ] < search CaMeL Len ;
rank: 358
score: 98.88237915039062
patch: return ! contains CaMeL None ( ch ) ;
rank: 358
score: 98.58738490513393
patch: return true ; ; } ;
rank: 358
score: 98.58114624023438
patch: return false ; if return true ; } }
rank: 358
score: 98.56730821397569
patch: CaMeL Range [ false ] return false ;
rank: 358
score: 98.46077473958333
patch: $NUMBER$ . / * / return true ;
rank: 358
score: 98.18778228759766
patch: return 0 != 0 && false ;
rank: 359
score: 98.95081505408653
patch: return search CaMeL Chars . get ( ch ) == ch ;
rank: 359
score: 98.89185384114583
patch: return search CaMeL Chars [ j ] . [ 0 ] == ch ;
rank: 359
score: 98.88124436598558
patch: return search CaMeL Chars [ j ] . [ j ] ;
rank: 359
score: 98.62575857979911
patch: return return contains CaMeL None ;
rank: 359
score: 98.58711242675781
patch: profile = false ; return true ;
rank: 359
score: 98.58104248046875
patch: return false ; else return true ; } }
rank: 359
score: 98.5672607421875
patch: CaMeL Null return false ;
rank: 359
score: 98.45935736762152
patch: . return ( false , $STRING$ ) ;
rank: 359
score: 98.40135192871094
patch: result [ j ] = ch ;
rank: 359
score: 98.1873550415039
patch: return 0 . size return false ;
rank: 360
score: 98.950048828125
patch: return search CaMeL Chars . get ( cs , search CaMeL Chars ) ;
rank: 360
score: 98.89177911931819
patch: return search CaMeL Chars [ j ] . true ;
rank: 360
score: 98.88117009943181
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( ) ) ) ) ;
rank: 360
score: 98.6240567294034
patch: if ( i < search CaMeL Chars . length )
rank: 360
score: 98.58710588727679
patch: p ; return false ; }
rank: 360
score: 98.581005859375
patch: return false ; } } else = false ;
rank: 360
score: 98.56713104248047
patch: return false ; return true false ;
rank: 360
score: 98.45869954427083
patch: CaMeL return false ; return false ; }
rank: 360
score: 98.39939880371094
patch: Plane = false ; return true ;
rank: 360
score: 98.18714141845703
patch: CaMeL -= ( return ) false ;
rank: 361
score: 98.88007354736328
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . get CaMeL File CaMeL Name ( ) ) ) ) ;
rank: 361
score: 98.58588324652777
patch: return ! is CaMeL Empty ( ) ;
rank: 361
score: 98.58076782226563
patch: return false ; return true ; } } }
rank: 361
score: 98.4576187133789
patch: $NUMBER$ . * / return true ;
rank: 361
score: 98.39873504638672
patch: old [ j ] = false ;
rank: 361
score: 98.18714141845703
patch: CaMeL ch ( false ) ; ;
rank: 362
score: 98.94912923177084
patch: return search CaMeL Chars . char CaMeL At ( j ) == $STRING$ ;
rank: 362
score: 98.88984375
patch: return true . contains CaMeL None ( ) ;
rank: 362
score: 98.87968893612133
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) ) ) ;
rank: 362
score: 98.62324662642045
patch: if ( search CaMeL Chars . length >= 0 )
rank: 362
score: 98.58582414899554
patch: if ( false ) break ;
rank: 362
score: 98.58061981201172
patch: return false ; } throw false ;
rank: 362
score: 98.566650390625
patch: CaMeL Exception false ; return true ;
rank: 362
score: 98.45745086669922
patch: CaMeL return ( false , false ;
rank: 362
score: 98.39712960379464
patch: return false ; } true ;
rank: 362
score: 98.18680572509766
patch: return < ) ; return false ;
rank: 363
score: 98.88948567708333
patch: if ( search CaMeL Chars . length < cs . length ) search CaMeL Chars . char CaMeL At ( j ) ;
rank: 363
score: 98.87918738162878
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) , ch ) ;
rank: 363
score: 98.62321333451705
patch: return search CaMeL Chars [ j ] + 1 ;
rank: 363
score: 98.58515930175781
patch: logger = false ; return true ;
rank: 363
score: 98.56563991970486
patch: return false ; return null == false ;
rank: 363
score: 98.45648193359375
patch: . char CaMeL At ( int i )
rank: 363
score: 98.39665985107422
patch: return true ; } else { }
rank: 363
score: 98.18592834472656
patch: return return ) ; if false ;
rank: 364
score: 98.88938551682692
patch: return search CaMeL Chars [ j ] == ch + $STRING$ ;
rank: 364
score: 98.8790616122159
patch: return false + search CaMeL Chars [ j ] ;
rank: 364
score: 98.58037109375
patch: return false ; } else if ; * /
rank: 364
score: 98.39652252197266
patch: return false ; - * * /
rank: 364
score: 98.18563079833984
patch: return 0 . false ; break ;
rank: 365
score: 98.88930876358695
patch: return this . search CaMeL Chars [ j ] . to CaMeL String ( ) . contains CaMeL None ( ) ;
rank: 365
score: 98.87647202435662
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 365
score: 98.62156168619792
patch: if ( false ) {
rank: 365
score: 98.58389621310764
patch: if ( false ) return true ; }
rank: 365
score: 98.58015272352431
patch: return false ; } finally return false ;
rank: 365
score: 98.56547715928819
patch: CaMeL out = false ; return false ;
rank: 365
score: 98.45487758091518
patch: . * / return true ;
rank: 366
score: 98.94706217447917
patch: return cs . char CaMeL At ( j ) == String . ch ;
rank: 366
score: 98.88849609375
patch: throw String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ;
rank: 366
score: 98.87615966796875
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( ) ) ) ) ;
rank: 366
score: 98.62132679332386
patch: if ( search CaMeL Len > search CaMeL Len )
rank: 366
score: 98.58287811279297
patch: p = false ; if ( ;
rank: 366
score: 98.58012559678819
patch: return false ; } finally { return ;
rank: 366
score: 98.56544494628906
patch: CaMeL List . add return false ;
rank: 366
score: 98.39625767299107
patch: return { return false ; }
rank: 366
score: 98.18468366350446
patch: return ! ( false ) ;
rank: 367
score: 98.94666015625
patch: return . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( cs . char CaMeL
rank: 367
score: 98.88749186197917
patch: return search CaMeL Chars [ j ] . char CaMeL At ( j )
rank: 367
score: 98.87498474121094
patch: . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) , ch ) ) ;
rank: 367
score: 98.62069702148438
patch: return Char CaMeL Sequence . false ;
rank: 367
score: 98.58011474609376
patch: CaMeL List false = false ; return false ;
rank: 367
score: 98.45283726283482
patch: . append ( ch ) ;
rank: 367
score: 98.39605712890625
patch: return / * * * * /
rank: 367
score: 98.1842269897461
patch: CaMeL do . false return false ;
rank: 368
score: 98.94657076322116
patch: return ( search CaMeL Chars . char CaMeL At ( j )
rank: 368
score: 98.88643215013587
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) . to CaMeL Lower CaMeL Case ( ) ;
rank: 368
score: 98.87354255445075
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( i ) ) ) ) ;
rank: 368
score: 98.61958451704545
patch: result = cs . to CaMeL String ( ) ;
rank: 368
score: 98.58266872829861
patch: return is CaMeL Empty ( ; } }
rank: 368
score: 98.56363677978516
patch: CaMeL List . return return false ;
rank: 368
score: 98.45254177517361
patch: . char CaMeL At ( j ) .
rank: 368
score: 98.39468383789062
patch: i [ j ] = false ;
rank: 368
score: 98.18308803013393
patch: return ! false ; return ;
rank: 369
score: 98.9462002840909
patch: return search CaMeL Chars . size ( ) 1 ;
rank: 369
score: 98.88600667317708
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( ) . String . index CaMeL Of ( String ) ;
rank: 369
score: 98.87332060842803
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 369
score: 98.57994733537946
patch: return ; return false ; }
rank: 369
score: 98.56304253472223
patch: CaMeL Range false = new String false ;
rank: 369
score: 98.45176188151042
patch: . return false ; return false ; }
rank: 369
score: 98.39437430245536
patch: [ j ] return false ;
rank: 369
score: 98.18303571428571
patch: return 0 && return false ;
rank: 370
score: 98.9453125
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String ) . to CaMeL String ( ) ) == 0 ;
rank: 370
score: 98.88589079483695
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At (
rank: 370
score: 98.87281013257575
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( i ) ) ) ) ;
rank: 370
score: 98.61876331676136
patch: return search CaMeL Chars [ j ] == true ;
rank: 370
score: 98.58030192057292
patch: return is CaMeL Empty && false ; }
rank: 370
score: 98.57976422991071
patch: return return false ; } ;
rank: 370
score: 98.56253051757812
patch: return new char false ;
rank: 370
score: 98.45169406467014
patch: . return new Character ( false ) ;
rank: 370
score: 98.3940200805664
patch: return false ; count = 0 ;
rank: 370
score: 98.18247985839844
patch: return 0 . 0 & false ;
rank: 371
score: 98.88513671875
patch: return cs . contains CaMeL None ( cs . char CaMeL At ( cs . char CaMeL At ( i ) ) ) ;
rank: 371
score: 98.87197875976562
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( i ) ) ) ) ;
rank: 371
score: 98.61859130859375
patch: return contains CaMeL None = true ;
rank: 371
score: 98.58001030815973
patch: return false ; } break ; } }
rank: 371
score: 98.57835693359375
patch: return is CaMeL True return true ; } }
rank: 371
score: 98.56185574001736
patch: CaMeL Number = false ; if false ;
rank: 371
score: 98.44947160993304
patch: CaMeL State . return true ;
rank: 371
score: 98.39235142299107
patch: Plane true return false ; }
rank: 371
score: 98.18231964111328
patch: return ! ) ; return 0 ;
rank: 372
score: 98.94442983774039
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length ) . equals ( $STRING$ ) ;
rank: 372
score: 98.8718032836914
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ] ) ) ) ) ;
rank: 372
score: 98.6181307705966
patch: if ( i != search CaMeL Chars . length )
rank: 372
score: 98.57954915364583
patch: . return false ; } } else {
rank: 372
score: 98.57723388671874
patch: return false ; } } ; return true ;
rank: 372
score: 98.56151580810547
patch: return get CaMeL Instance ( ) ;
rank: 372
score: 98.44685194227431
patch: $NUMBER$ . char CaMeL At ( j ;
rank: 372
score: 98.39229583740234
patch: return false + false ; } }
rank: 372
score: 98.18229457310268
patch: return return false ; return ;
rank: 373
score: 98.8837890625
patch: return search CaMeL Chars [ j ] != ch . value ;
rank: 373
score: 98.8707978219697
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( j ) ) ) ) ;
rank: 373
score: 98.61750932173295
patch: return String . index CaMeL Of ( ch ) ;
rank: 373
score: 98.57895236545139
patch: cb = false ; return true ; }
rank: 373
score: 98.57659912109375
patch: return false ; } catch ; * * /
rank: 373
score: 98.5614013671875
patch: CaMeL Range ; return false ; false ;
rank: 373
score: 98.3922119140625
patch: cs return false ; } }
rank: 373
score: 98.17839050292969
patch: return 0 ; return - $NUMBER$ ;
rank: 374
score: 98.94411057692308
patch: return search CaMeL Chars . substring ( search CaMeL Chars . length , search CaMeL Chars . length ) . length ( ) 1 ;
rank: 374
score: 98.87033081054688
patch: . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) , ch ) ;
rank: 374
score: 98.57650756835938
patch: return false ; if ; return ;
rank: 374
score: 98.56130981445312
patch: CaMeL Number false false return false ;
rank: 374
score: 98.44666290283203
patch: = false ? false : true ;
rank: 374
score: 98.39208984375
patch: return false . false ; }
rank: 374
score: 98.17829132080078
patch: CaMeL return ( false ) ; ;
rank: 375
score: 98.9439697265625
patch: return contains CaMeL None ( search CaMeL Chars , String ) ;
rank: 375
score: 98.88264973958333
patch: return ! search CaMeL Chars [ i ] == ch ;
rank: 375
score: 98.86953735351562
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ; }
rank: 375
score: 98.615869140625
patch: return ( Char CaMeL Sequence ) false ; }
rank: 375
score: 98.57868787977431
patch: return true ? true : true ; }
rank: 375
score: 98.57592163085937
patch: return is CaMeL Alive return false ; } }
rank: 375
score: 98.56094699435764
patch: CaMeL Range = false ; for false ;
rank: 375
score: 98.4450912475586
patch: $NUMBER$ . char CaMeL At ( ;
rank: 375
score: 98.39036560058594
patch: return cs . length * * /
rank: 375
score: 98.1778564453125
patch: CaMeL Thread ( false ) ;
rank: 376
score: 98.943828125
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars ,
rank: 376
score: 98.86739349365234
patch: . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) , ch ) ) ;
rank: 376
score: 98.6150894165039
patch: return ( String ) false ; }
rank: 376
score: 98.57685004340277
patch: return is CaMeL Empty ( ch , ;
rank: 376
score: 98.57591552734375
patch: return return is ; } } return false ;
rank: 376
score: 98.5604476928711
patch: CaMeL Range = return ) false ;
rank: 376
score: 98.44474029541016
patch: . char CaMeL Count += false ;
rank: 376
score: 98.38789876302083
patch: { return true ; }
rank: 376
score: 98.17761993408203
patch: return 0 != false ; false ;
rank: 377
score: 98.94375813802084
patch: return String . index CaMeL Of ( String ) >= search CaMeL Len ;
rank: 377
score: 98.88235473632812
patch: return search CaMeL Chars [ j ] . to CaMeL Lower CaMeL Case ( ) . starts CaMeL With ( $STRING$ ) ;
rank: 377
score: 98.86682891845703
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( i ) ) ) ) ;
rank: 377
score: 98.57682969835069
patch: cr = false ; return true ; }
rank: 377
score: 98.57589721679688
patch: return ; = false ; } }
rank: 377
score: 98.5601806640625
patch: return true ; false ;
rank: 377
score: 98.44422743055556
patch: . char CaMeL At ( next ) ;
rank: 377
score: 98.3877665201823
patch: return false . true ;
rank: 377
score: 98.17681884765625
patch: return 0 ; ; ;
rank: 378
score: 98.94375375600961
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( $STRING$ ) ) ) ;
rank: 378
score: 98.88212076822917
patch: return this . search CaMeL Chars [ j ] . to CaMeL String ( ) . starts CaMeL With ( $STRING$ ) ;
rank: 378
score: 98.86624792850378
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) , $STRING$ ) ) ;
rank: 378
score: 98.6126708984375
patch: return ( cs , cs ) ;
rank: 378
score: 98.57665337456598
patch: return ; } } } return true ;
rank: 378
score: 98.55918375651042
patch: CaMeL String return false ;
rank: 378
score: 98.44415283203125
patch: CaMeL Error = false ; break ; }
rank: 378
score: 98.38700103759766
patch: return false / * * * /
rank: 378
score: 98.17654418945312
patch: return ; = false ; ; ;
rank: 379
score: 98.94342510516827
patch: return String . index CaMeL Of ( ch ) == 1 ;
rank: 379
score: 98.86612955729167
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . last CaMeL Index CaMeL Of ( $STRING$ ) ) ) ) ;
rank: 379
score: 98.61121961805556
patch: return contains CaMeL None ( ) ; }
rank: 379
score: 98.57581922743056
patch: CaMeL List false return false ; } }
rank: 379
score: 98.55913434709821
patch: CaMeL append ( false ) ;
rank: 379
score: 98.44407145182292
patch: CaMeL false return true ;
rank: 379
score: 98.38651275634766
patch: Plane else return false ; } }
rank: 379
score: 98.17642647879464
patch: return false ; ; false ;
rank: 380
score: 98.94290364583334
patch: return search CaMeL Chars [ j ] == String . search CaMeL Chars ;
rank: 380
score: 98.86558948863636
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) , $STRING$ ) ) ;
rank: 380
score: 98.61090850830078
patch: return ( cs , false ) ;
rank: 380
score: 98.57512817382812
patch: return false ; return false ; } return ;
rank: 380
score: 98.55807059151786
patch: CaMeL Range false return null ;
rank: 380
score: 98.443115234375
patch: scanner = false ; return true ;
rank: 380
score: 98.38612365722656
patch: return { return false ; } }
rank: 380
score: 98.17592947823661
patch: return 0 . return 1 ;
rank: 381
score: 98.94188514122597
patch: return String . index CaMeL Of ( $STRING$ ) == 1 ;
rank: 381
score: 98.88192085597827
patch: return search CaMeL Chars [ j ] . contains CaMeL All ( String . index CaMeL Of ( $STRING$ ) ) ;
rank: 381
score: 98.86457170758929
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( String . char CaMeL At ( j ) ) ) , ch ) ;
rank: 381
score: 98.57615831163194
patch: logger = false ; return false ; }
rank: 381
score: 98.57388916015626
patch: return return false ; } } return true ;
rank: 381
score: 98.55680629185268
patch: CaMeL Null ( false ) ;
rank: 381
score: 98.44275665283203
patch: CaMeL ; if ; return true ;
rank: 381
score: 98.38380432128906
patch: return ( return false ) ; }
rank: 381
score: 98.17564392089844
patch: return return 1 ; return $NUMBER$ ;
rank: 382
score: 98.9417724609375
patch: return index CaMeL Of ( search CaMeL Chars , ch ) ;
rank: 382
score: 98.88162667410714
patch: return cs != null ? String . index CaMeL Of ( String )
rank: 382
score: 98.8636474609375
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) , ch ) ) ;
rank: 382
score: 98.6070785522461
patch: return ( Char CaMeL Sequence ) ;
rank: 382
score: 98.57603454589844
patch: cb = false ; return true ;
rank: 382
score: 98.55624728732639
patch: CaMeL j return false ; return false ;
rank: 382
score: 98.4420166015625
patch: . char ; ch = false ;
rank: 382
score: 98.3833999633789
patch: return [ j ] == null ;
rank: 382
score: 98.17521449497768
patch: CaMeL atan ( false ) ;
rank: 383
score: 98.941455078125
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . value CaMeL Of ( $STRING$ ) ;
rank: 383
score: 98.8813946063702
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL String ( ) . equals ( $STRING$ ) ;
rank: 383
score: 98.86356238162878
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 383
score: 98.60664672851563
patch: else String . index CaMeL Of ( ch )
rank: 383
score: 98.57568359375
patch: return ( ( char ) ch ;
rank: 383
score: 98.57369995117188
patch: return false ; if ; return true ; }
rank: 383
score: 98.5557861328125
patch: CaMeL List . false = true ;
rank: 383
score: 98.441162109375
patch: . return - 1 ;
rank: 383
score: 98.38336944580078
patch: return cs . length > 0 ;
rank: 383
score: 98.17488606770833
patch: return size != false ;
rank: 384
score: 98.9413330078125
patch: return this . search CaMeL Chars [ j ] == search CaMeL Chars ;
rank: 384
score: 98.88122106481481
patch: return cs . contains CaMeL None ( search CaMeL Chars . char CaMeL At ( j ) . char CaMeL At ( j ) ) ;
rank: 384
score: 98.863037109375
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) , ch ) ;
rank: 384
score: 98.6059326171875
patch: return ( Char CaMeL Sequence ) return false ;
rank: 384
score: 98.57561577690973
patch: profile = false ; return true ; }
rank: 384
score: 98.57315063476562
patch: return true ; } } else return false ;
rank: 384
score: 98.5543212890625
patch: CaMeL i = false ; return false ;
rank: 384
score: 98.44094848632812
patch: CaMeL ; try { return false ;
rank: 384
score: 98.38218688964844
patch: return ( true && true ) ;
rank: 384
score: 98.1748555501302
patch: return 0 ; false ;
rank: 385
score: 98.940869140625
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . String . index CaMeL
rank: 385
score: 98.88053385416667
patch: throw $STRING$ ? String . index CaMeL Of ( String )
rank: 385
score: 98.86277142693015
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( j ) ) ) ) ;
rank: 385
score: 98.60535278320313
patch: result += search CaMeL Chars [ j ] ;
rank: 385
score: 98.57542588975694
patch: z = false ; return true ; }
rank: 385
score: 98.55118136935764
patch: return true ; ; ; return true ;
rank: 385
score: 98.44044712611607
patch: . return i == false ;
rank: 385
score: 98.37999267578125
patch: return . false ;
rank: 385
score: 98.17252349853516
patch: CaMeL sum = return ) false ;
rank: 386
score: 98.94078650841347
patch: return contains CaMeL None ( search CaMeL Chars , j ) ;
rank: 386
score: 98.87955375339673
patch: return search CaMeL Chars [ j ] . to CaMeL Object ( ) . to CaMeL Char CaMeL Array ( ) ;
rank: 386
score: 98.86270059121621
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 386
score: 98.60532633463542
patch: if ( search CaMeL Len == 0 )
rank: 386
score: 98.57183837890625
patch: return false ; } * ;
rank: 386
score: 98.55025482177734
patch: CaMeL Enum . false return false ;
rank: 386
score: 98.37983049665179
patch: return cs [ j ] ;
rank: 386
score: 98.17244720458984
patch: return 0 . 1 ; break ;
rank: 387
score: 98.94046875
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . char CaMeL At ( j ) ;
rank: 387
score: 98.879384765625
patch: throw String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( i ) ) ) ;
rank: 387
score: 98.86199273003473
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 387
score: 98.57508850097656
patch: profile = false ; return false ;
rank: 387
score: 98.570361328125
patch: CaMeL State . false return false ; } }
rank: 387
score: 98.54951985677083
patch: return false ; ; if return true ;
rank: 387
score: 98.43825954861111
patch: $NUMBER$ . char CaMeL Count += false ;
rank: 387
score: 98.37884521484375
patch: [ i ] return false ; }
rank: 387
score: 98.17239379882812
patch: return 0 . 0 / false ;
rank: 388
score: 98.94015737680289
patch: return contains CaMeL None ( ch , search CaMeL Len ) ;
rank: 388
score: 98.87930733816964
patch: return true ? String . index CaMeL Of ( String . index CaMeL
rank: 388
score: 98.86183035714286
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) , ch ) ) ;
rank: 388
score: 98.60291399274554
patch: return contains CaMeL None true ;
rank: 388
score: 98.56928168402777
patch: return true ; return true ; } }
rank: 388
score: 98.54803466796875
patch: CaMeL Range . false = true ;
rank: 388
score: 98.43628692626953
patch: CaMeL ; if ( ! false )
rank: 388
score: 98.37682088216145
patch: return String ) false ;
rank: 388
score: 98.17210388183594
patch: return ! false ; return ; {
rank: 389
score: 98.87727573939732
patch: return search CaMeL Chars [ cs . length 1 ] == ch ;
rank: 389
score: 98.86153527462122
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) , ch ) ) ;
rank: 389
score: 98.57342529296875
patch: return false ; continue ; } }
rank: 389
score: 98.56876373291016
patch: return true ; } catch return ;
rank: 389
score: 98.54740600585937
patch: return null ; ;
rank: 389
score: 98.4349365234375
patch: . char CaMeL At ( j ) ?
rank: 389
score: 98.37461635044643
patch: return ! return false ; }
rank: 389
score: 98.17108154296875
patch: CaMeL do . add return false ;
rank: 390
score: 98.87671959918478
patch: return this . search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL String ( ) ;
rank: 390
score: 98.86114316998106
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 390
score: 98.59720187717014
patch: if ( j == search CaMeL Chars .
rank: 390
score: 98.57298278808594
patch: . return false ; } false ;
rank: 390
score: 98.56873779296875
patch: return true ; } else = false ; }
rank: 390
score: 98.54740397135417
patch: CaMeL Pair = false ; return false ;
rank: 390
score: 98.43379211425781
patch: . return ( false , true ;
rank: 390
score: 98.16959054129464
patch: CaMeL ! ( false ) ;
rank: 391
score: 98.939228515625
patch: return . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) )
rank: 391
score: 98.87577601841518
patch: return false + String . index CaMeL Of ( String . index CaMeL
rank: 391
score: 98.86077521829044
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) , ch ) ;
rank: 391
score: 98.59590657552083
patch: return ( $STRING$ ) ;
rank: 391
score: 98.57182312011719
patch: return ch != null || false ;
rank: 391
score: 98.56856689453124
patch: return false ; } finally { false ; }
rank: 391
score: 98.54664829799107
patch: CaMeL Error ; return false ;
rank: 391
score: 98.37322235107422
patch: return new Object [ ] { ch
rank: 391
score: 98.16951751708984
patch: return false ; ; return ; *
rank: 392
score: 98.939013671875
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars , String . search CaMeL Chars ,
rank: 392
score: 98.875400390625
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . index CaMeL Of ( String )
rank: 392
score: 98.86031457149622
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( i ) ) ) , ch ) ;
rank: 392
score: 98.59516252790179
patch: return ( boolean ) false ;
rank: 392
score: 98.57148742675781
patch: return true ; } if ( ;
rank: 392
score: 98.56846110026042
patch: return false ; } return return false ;
rank: 392
score: 98.5460205078125
patch: return true ; return null false ;
rank: 392
score: 98.37300109863281
patch: return false . * * * /
rank: 392
score: 98.16938127790179
patch: return return 1 != false ;
rank: 393
score: 98.938720703125
patch: return ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . j ) )
rank: 393
score: 98.87416770241477
patch: Plane return cs . contains CaMeL None ( ) ;
rank: 393
score: 98.8596435546875
patch: return ! ch . equals ( ch ) ;
rank: 393
score: 98.59442901611328
patch: return Char CaMeL Sequence . true ;
rank: 393
score: 98.57036590576172
patch: return true ; ; } } ;
rank: 393
score: 98.5684585571289
patch: return return ; } return false ;
rank: 393
score: 98.54531860351562
patch: CaMeL Exception false false return false ;
rank: 393
score: 98.37188720703125
patch: return return false ; break ;
rank: 393
score: 98.16840362548828
patch: CaMeL += ) ) ; false ;
rank: 394
score: 98.93836388221153
patch: try { char . index CaMeL Of ( String . index CaMeL Of ( cs . char CaMeL At ( j ) ) ) ;
rank: 394
score: 98.87408447265625
patch: return $STRING$ . contains CaMeL None ( ) ;
rank: 394
score: 98.85932473575367
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( i ) ) ) ) ;
rank: 394
score: 98.59271240234375
patch: return search CaMeL Chars [ j ] ) ;
rank: 394
score: 98.57014465332031
patch: return ; } return true ; }
rank: 394
score: 98.56841430664062
patch: return is CaMeL Empty && false ; } }
rank: 394
score: 98.5447006225586
patch: CaMeL Number false ; return true ;
rank: 394
score: 98.42742919921875
patch: CaMeL ; ch = false ; break ;
rank: 394
score: 98.3707987467448
patch: return false + true ;
rank: 394
score: 98.168212890625
patch: return 0 ; throws false ;
rank: 395
score: 98.937744140625
patch: try { char . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ;
rank: 395
score: 98.8737460049716
patch: return search CaMeL Chars [ j ] <= ch ;
rank: 395
score: 98.85927142518939
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) ) ) ;
rank: 395
score: 98.59248046875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( String
rank: 395
score: 98.56833224826389
patch: return null ; return false ; } }
rank: 395
score: 98.56796603732639
patch: return true ; } } else if ;
rank: 395
score: 98.5445556640625
patch: CaMeL Enum . false return true ;
rank: 395
score: 98.42615509033203
patch: CaMeL return true ; return true ;
rank: 395
score: 98.36995442708333
patch: return false && false ;
rank: 395
score: 98.16698201497395
patch: return length != false ;
rank: 396
score: 98.873251953125
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( 0 )
rank: 396
score: 98.85922703598484
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( ch ) ) ) ) ;
rank: 396
score: 98.5912109375
patch: if ( cs . equals ( cs ) )
rank: 396
score: 98.56751251220703
patch: return ( char ) ch ; }
rank: 396
score: 98.56739044189453
patch: return is CaMeL Empty && false ;
rank: 396
score: 98.54448784722223
patch: return false ; return new int false ;
rank: 396
score: 98.42488606770833
patch: CaMeL ; try { return false ; }
rank: 396
score: 98.36678641183036
patch: Plane try { return false ;
rank: 396
score: 98.16360473632812
patch: CaMeL ch = false ;
rank: 397
score: 98.93621356670673
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String ) ) ) == 0 ;
rank: 397
score: 98.85849178538604
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) , ch ) ) ;
rank: 397
score: 98.59074183872768
patch: return cs . false ; }
rank: 397
score: 98.56721327039931
patch: return ! ( false , false ) ;
rank: 397
score: 98.5671157836914
patch: return is false ; } return ;
rank: 397
score: 98.54417419433594
patch: CaMeL Range . return ( false ;
rank: 397
score: 98.42479112413194
patch: $NUMBER$ . char CaMeL At ( j )
rank: 397
score: 98.36522565569196
patch: Plane [ j ] ++ ;
rank: 397
score: 98.16163635253906
patch: return is != 0 != false ;
rank: 398
score: 98.935810546875
patch: return ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL At ( cs CaMeL Len ) ) ;
rank: 398
score: 98.85842063210227
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) , ch ) ;
rank: 398
score: 98.59041748046874
patch: return ( cs , cs CaMeL Len ) ;
rank: 398
score: 98.56712341308594
patch: return ( false , $STRING$ ) ;
rank: 398
score: 98.56702338324652
patch: return is CaMeL Empty return false ; }
rank: 398
score: 98.54290771484375
patch: CaMeL List false return false ; }
rank: 398
score: 98.36297607421875
patch: Plane System return false ; }
rank: 398
score: 98.16111755371094
patch: return false ; return new false ;
rank: 399
score: 98.935673828125
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars , search CaMeL Chars ) ) ;
rank: 399
score: 98.87129350142045
patch: return search CaMeL Chars [ j ] . false ;
rank: 399
score: 98.85765883501838
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( i ) ) ) ) ;
rank: 399
score: 98.58981323242188
patch: this return search CaMeL Chars [ j ] ;
rank: 399
score: 98.56651306152344
patch: return is CaMeL True ( false ;
rank: 399
score: 98.56645965576172
patch: return false ; } false * /
rank: 399
score: 98.54085867745536
patch: CaMeL List false return null ;
rank: 399
score: 98.42219543457031
patch: $NUMBER$ . * / return false ;
rank: 399
score: 98.16093444824219
patch: return 0 ; return false ; else
rank: 400
score: 98.9352734375
patch: return search CaMeL Chars . to CaMeL String ( ) . to CaMeL String ( ) . starts CaMeL With ( ch ) ;
rank: 400
score: 98.87127216045673
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( j ] )
rank: 400
score: 98.85763642282197
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( cs . char CaMeL At ( j ) ) ) , ch ) ;
rank: 400
score: 98.58961704799107
patch: return ( String ) cs ;
rank: 400
score: 98.56584930419922
patch: return false ; } * / ;
rank: 400
score: 98.56553431919643
patch: return return is return false ;
rank: 400
score: 98.53938293457031
patch: return get CaMeL Length ( ) ;
rank: 400
score: 98.42115020751953
patch: . starts CaMeL With ( $STRING$ )
rank: 400
score: 98.15985107421875
patch: return 0 return false ;
rank: 401
score: 98.93501499720982
patch: return contains CaMeL None ( search CaMeL Chars , search CaMeL Chars ,
rank: 401
score: 98.870859375
patch: return this . search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL Char CaMeL Array ( ) ;
rank: 401
score: 98.85749585700758
patch: byte . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) , ch ) ;
rank: 401
score: 98.56517876519098
patch: return false ; } } return $NUMBER$ ;
rank: 401
score: 98.53748914930556
patch: return get CaMeL Type ( false ) ;
rank: 401
score: 98.42075602213542
patch: CaMeL false return false ;
rank: 401
score: 98.35582478841145
patch: return true . false ;
rank: 401
score: 98.15962727864583
patch: return size != 0 ;
rank: 402
score: 98.93460286458334
patch: return String . index CaMeL Of ( search CaMeL Chars ) == 0 ;
rank: 402
score: 98.87059607872597
patch: return search CaMeL Chars [ j ] != ch . length ;
rank: 402
score: 98.85738796657986
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 402
score: 98.58687337239583
patch: return ( ) ; }
rank: 402
score: 98.56459350585938
patch: return false ; } if false * * /
rank: 402
score: 98.53668891059027
patch: CaMeL Error = true ; return false ;
rank: 402
score: 98.42068481445312
patch: . return ( ch == $STRING$ ;
rank: 402
score: 98.35577392578125
patch: Plane true return false ;
rank: 402
score: 98.15938313802083
patch: return return false ; ;
rank: 403
score: 98.934296875
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL
rank: 403
score: 98.85698106553819
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 403
score: 98.586865234375
patch: return cs . char CaMeL At ( ) ;
rank: 403
score: 98.56497192382812
patch: d = false ; return false ;
rank: 403
score: 98.42034912109375
patch: CaMeL ; if ( false ) { ;
rank: 403
score: 98.35496303013393
patch: Plane . return true ; }
rank: 403
score: 98.15849304199219
patch: CaMeL sum = false ; false ;
rank: 404
score: 98.93408203125
patch: return ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . char CaMeL At ( search CaMeL Chars . Char CaMeL
rank: 404
score: 98.87027994791667
patch: return search CaMeL Chars [ j ] . get CaMeL Name ( ) . equals CaMeL Ignore CaMeL Case ( ch ) ;
rank: 404
score: 98.85695578835227
patch: return contains CaMeL None ( ch , cs ) ;
rank: 404
score: 98.58677978515625
patch: return ! true ;
rank: 404
score: 98.56415557861328
patch: ? * / return false ; }
rank: 404
score: 98.56361083984375
patch: return true ; else return false ; } }
rank: 404
score: 98.5362548828125
patch: CaMeL List . return ( true ;
rank: 404
score: 98.42033168247768
patch: [ i ] = false ;
rank: 404
score: 98.35389200846355
patch: Plane else return false ;
rank: 404
score: 98.15797424316406
patch: return return false ; return ; {
rank: 405
score: 98.93385532924107
patch: if ( search CaMeL Chars . length 1 [ cs CaMeL Len ]
rank: 405
score: 98.87010701497395
patch: return && search CaMeL Chars [ j ] == ch ;
rank: 405
score: 98.85586085464016
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) , ch ) ) ;
rank: 405
score: 98.58639526367188
patch: if ( String . index CaMeL Of ( String
rank: 405
score: 98.56245930989583
patch: p = false ; ; return false ;
rank: 405
score: 98.56196424696181
patch: return false ; } catch ; * /
rank: 405
score: 98.5354995727539
patch: CaMeL Thread . false return false ;
rank: 405
score: 98.15785435267857
patch: return 0 , return 1 ;
rank: 406
score: 98.93377685546875
patch: return search CaMeL Chars . to CaMeL String ( ) == null ;
rank: 406
score: 98.86952561598558
patch: return search CaMeL Chars [ j ] == ch . next ;
rank: 406
score: 98.85514562270221
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) == - 1 ;
rank: 406
score: 98.58604736328125
patch: if ( search CaMeL Len < 1 ) {
rank: 406
score: 98.56223551432292
patch: log = false ; return false ; }
rank: 406
score: 98.56189836774554
patch: return ; = false ; }
rank: 406
score: 98.53542073567708
patch: CaMeL List . append ( true ) ;
rank: 406
score: 98.42002868652344
patch: . char CaMeL At ( false )
rank: 406
score: 98.3492431640625
patch: return true ; * /
rank: 406
score: 98.15782928466797
patch: return 0 . 0 return 0 ;
rank: 407
score: 98.93367513020833
patch: return search CaMeL Len - search CaMeL Chars . length ;
rank: 407
score: 98.86838942307692
patch: return search CaMeL Chars [ j ] instanceof Char CaMeL Sequence ;
rank: 407
score: 98.8551025390625
patch: return search CaMeL Chars [ j ] == 1 ;
rank: 407
score: 98.56216430664062
patch: z = false ; return true ;
rank: 407
score: 98.56110491071429
patch: return false ; } } else
rank: 407
score: 98.53531319754464
patch: CaMeL Class . return false ;
rank: 407
score: 98.41974748883929
patch: . return Boolean . TRUE ;
rank: 407
score: 98.34867640904018
patch: Plane ) return false ; }
rank: 407
score: 98.15715789794922
patch: return 0 . get return false ;
rank: 408
score: 98.8675870028409
patch: return search CaMeL Chars [ j ] . index CaMeL
rank: 408
score: 98.58580864800348
patch: return cs . contains ( cs ) ;
rank: 408
score: 98.55997043185764
patch: return true ; } } if false ;
rank: 408
score: 98.53530883789062
patch: CaMeL Range . false = false ;
rank: 408
score: 98.4186782836914
patch: . return - 1 != false ;
rank: 408
score: 98.15679059709821
patch: return return ) ; return ;
rank: 409
score: 98.93346296037946
patch: return cs . char CaMeL At ( j ) == ch ) ;
rank: 409
score: 98.86756310096153
patch: return this . search CaMeL Chars [ j ] . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( ch ) ;
rank: 409
score: 98.85435162168561
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( String . char CaMeL At ( i ) ) ) ) ;
rank: 409
score: 98.58558146158855
patch: return ! return true ;
rank: 409
score: 98.5594253540039
patch: return is ; } } return ;
rank: 409
score: 98.53509521484375
patch: CaMeL List . return ( false ; ;
rank: 409
score: 98.41836111886161
patch: $NUMBER$ . return false ; }
rank: 409
score: 98.15625762939453
patch: return - ) ; return 0 ;
rank: 410
score: 98.86750932173295
patch: throw System . index CaMeL Of ( $STRING$ ) ;
rank: 410
score: 98.85298295454545
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) ) == 0 ;
rank: 410
score: 98.56057739257812
patch: log = false ; return true ;
rank: 410
score: 98.55938042534723
patch: return false ; for ; * * /
rank: 410
score: 98.53424835205078
patch: return true ; ; return null ;
rank: 410
score: 98.41646321614583
patch: . return false ; ;
rank: 410
score: 98.3439453125
patch: cs return false ;
rank: 411
score: 98.8670654296875
patch: return cs . contains CaMeL None ( 1 ) ;
rank: 411
score: 98.84901751893939
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . get CaMeL File CaMeL Name ( ) ) ) ) ;
rank: 411
score: 98.5801513671875
patch: result = false ;
rank: 411
score: 98.55990261501736
patch: return is ? false : false ; }
rank: 411
score: 98.55870971679687
patch: return false ; for ; * * * /
rank: 411
score: 98.53367106119792
patch: return false ; ; catch return false ;
rank: 411
score: 98.41387939453125
patch: . return - 1 && false ;
rank: 411
score: 98.34343610491071
patch: { return true ; } }
rank: 411
score: 98.1548563639323
patch: CaMeL Builder return false ;
rank: 412
score: 98.9313213641827
patch: return String . index CaMeL Of ( String ) <= 0 ;
rank: 412
score: 98.86704508463542
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( cs ) ;
rank: 412
score: 98.84882668887867
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( ) ) ) , ch ) ;
rank: 412
score: 98.55973815917969
patch: return true ; } else { ;
rank: 412
score: 98.5335922241211
patch: CaMeL Range . return return false ;
rank: 412
score: 98.4121805826823
patch: CaMeL return true ; }
rank: 412
score: 98.15439278738839
patch: CaMeL do = false ; ;
rank: 413
score: 98.93105844350961
patch: try { char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( $STRING$ ) ) ) ;
rank: 413
score: 98.86698404947917
patch: return || search CaMeL Chars [ j ] == ch ;
rank: 413
score: 98.848681640625
patch: return cs . size ( ) == 0 ;
rank: 413
score: 98.57704671223958
patch: return index CaMeL Of ( String ) ;
rank: 413
score: 98.55931091308594
patch: CaMeL System . return false ; }
rank: 413
score: 98.53314208984375
patch: CaMeL Error false return false ;
rank: 413
score: 98.40982491629464
patch: . * / return false ;
rank: 413
score: 98.3427734375
patch: return false ; true ;
rank: 413
score: 98.153564453125
patch: return 0 == false ; false ;
rank: 414
score: 98.93050711495536
patch: Plane return this . search CaMeL Chars [ j ] == ch ;
rank: 414
score: 98.86509352463942
patch: return true && search CaMeL Chars [ j ] == ch ;
rank: 414
score: 98.8485810250947
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ; }
rank: 414
score: 98.57513427734375
patch: return return contains CaMeL None ; }
rank: 414
score: 98.55818684895833
patch: return false ; } else { ; }
rank: 414
score: 98.53265380859375
patch: CaMeL Class . false return false ;
rank: 414
score: 98.40859985351562
patch: . return ! false ;
rank: 414
score: 98.34019978841145
patch: Plane { return true ;
rank: 415
score: 98.86479048295455
patch: return search CaMeL Chars [ j ] >= ch ;
rank: 415
score: 98.8483368844697
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) == 1 ;
rank: 415
score: 98.55707397460938
patch: return false ; } } false * * /
rank: 415
score: 98.53234100341797
patch: CaMeL Thread . false return true ;
rank: 415
score: 98.408203125
patch: $NUMBER$ . / * return false ;
rank: 415
score: 98.3378194173177
patch: contains return false ; }
rank: 415
score: 98.15279388427734
patch: return return 1 ; if false ;
rank: 416
score: 98.92870154747597
patch: return $STRING$ . index CaMeL Of ( ch ) == 0 ;
rank: 416
score: 98.84780704273896
patch: . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 416
score: 98.55754258897569
patch: . ; if ( false ) break ;
rank: 416
score: 98.53217230902777
patch: CaMeL Exception return false ; if false ;
rank: 416
score: 98.40509033203125
patch: = false ; break ; }
rank: 416
score: 98.33503069196429
patch: contains return false ; } }
rank: 416
score: 98.15255301339286
patch: return 0 + return false ;
rank: 417
score: 98.92856852213542
patch: return contains CaMeL None ( cs , search CaMeL Chars ,
rank: 417
score: 98.84770651424633
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) ) ) ;
rank: 417
score: 98.55723063151042
patch: rt = false ; return true ; }
rank: 417
score: 98.55696868896484
patch: return is return false ; } }
rank: 417
score: 98.5316162109375
patch: CaMeL Range [ j ] = false ;
rank: 417
score: 98.40035574776786
patch: CaMeL false ? return true ;
rank: 417
score: 98.33447265625
patch: return true ; * * /
rank: 418
score: 98.86410757211539
patch: return search CaMeL Chars [ j ] . contains ( ) ;
rank: 418
score: 98.84735662286931
patch: return contains CaMeL None ( cs , false ) ;
rank: 418
score: 98.55697195870536
patch: CaMeL ; if ( false ;
rank: 418
score: 98.55689154730902
patch: CaMeL Builder ; return false ; } }
rank: 418
score: 98.53119574652777
patch: CaMeL List . iterator return true ; ;
rank: 418
score: 98.39973667689732
patch: . char ; return true ;
rank: 418
score: 98.33392333984375
patch: Plane System return false ;
rank: 418
score: 98.15096609933036
patch: CaMeL do = return false ;
rank: 419
score: 98.92800668569711
patch: return String . index CaMeL Of ( ch ) >= 0 ;
rank: 419
score: 98.86317795973558
patch: return Boolean . index CaMeL Of ( ch ) == 0 ;
rank: 419
score: 98.84554268973214
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 419
score: 98.56298065185547
patch: return ( true , false ) ;
rank: 419
score: 98.55667114257812
patch: return 0 ; } return false ;
rank: 419
score: 98.55587768554688
patch: = false ; break ; } }
rank: 419
score: 98.52926635742188
patch: CaMeL Class false ; return false ;
rank: 419
score: 98.39769490559895
patch: CaMeL Exception return true ;
rank: 419
score: 98.33333914620536
patch: return false ; - * /
rank: 419
score: 98.15076446533203
patch: return ch ; while return false ;
rank: 420
score: 98.92611694335938
patch: Plane return contains CaMeL None ( cs ) ;
rank: 420
score: 98.86253865559895
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( null ) ;
rank: 420
score: 98.84470436789773
patch: return is = search CaMeL Chars [ j ] ;
rank: 420
score: 98.56163194444444
patch: return Char CaMeL Sequence . false ; }
rank: 420
score: 98.5556640625
patch: return ( false , null ) ;
rank: 420
score: 98.55549621582031
patch: return ; , * * * /
rank: 420
score: 98.52895100911458
patch: CaMeL List . ; return false ; ;
rank: 420
score: 98.39740753173828
patch: . is CaMeL Empty = false ;
rank: 420
score: 98.15054757254464
patch: return ; = return 1 ;
rank: 421
score: 98.9244854266827
patch: return search CaMeL Chars . get ( ch ) != null ;
rank: 421
score: 98.86243614783653
patch: return ( search CaMeL Chars [ j ] < ch ) ;
rank: 421
score: 98.84465997869319
patch: return null == search CaMeL Chars [ j ] ;
rank: 421
score: 98.56138780381944
patch: return contains CaMeL None ( String ) ;
rank: 421
score: 98.55520629882812
patch: admin = false ; return false ;
rank: 421
score: 98.5545654296875
patch: return null ; } else return true ;
rank: 421
score: 98.52857317243304
patch: CaMeL List . return null ;
rank: 421
score: 98.33217947823661
patch: return false + true ; }
rank: 421
score: 98.15031433105469
patch: return 0 && 0 == false ;
rank: 422
score: 98.92388305664062
patch: return contains CaMeL None ( cs , ) ;
rank: 422
score: 98.86214505709134
patch: return false && search CaMeL Chars [ j ] == ch ;
rank: 422
score: 98.84442497702206
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( j ) ) ) ) ;
rank: 422
score: 98.56119537353516
patch: return contains CaMeL None true ; }
rank: 422
score: 98.55455780029297
patch: return null ; if return false ;
rank: 422
score: 98.5278091430664
patch: return false ; return 0 ; ;
rank: 422
score: 98.33168247767857
patch: return false && false ; }
rank: 422
score: 98.1500015258789
patch: return 0 ; equals return false ;
rank: 423
score: 98.92270132211539
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) )
rank: 423
score: 98.5604248046875
patch: return ( Char CaMeL Sequence ) ch ;
rank: 423
score: 98.55441284179688
patch: return false ; } } else { if ;
rank: 423
score: 98.55359758649554
patch: return true false ; } }
rank: 423
score: 98.52776421440973
patch: CaMeL List . equals ( false ) ;
rank: 423
score: 98.39314270019531
patch: CaMeL false * / return true ;
rank: 423
score: 98.33020891462054
patch: return true ; } false ;
rank: 423
score: 98.1499532063802
patch: return 0 || false ;
rank: 424
score: 98.92269461495536
patch: if ( search CaMeL Chars . length > 0 ) return false ;
rank: 424
score: 98.86093971946023
patch: return search CaMeL Chars [ j ] & $STRING$ ;
rank: 424
score: 98.84410184972427
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 424
score: 98.55731201171875
patch: return char CaMeL At ( ch ) ;
rank: 424
score: 98.55418701171875
patch: return false ; for return false ; } }
rank: 424
score: 98.5535888671875
patch: return ( byte ) - 1 ;
rank: 424
score: 98.52745819091797
patch: return false ; ; ; else {
rank: 424
score: 98.39226422991071
patch: $NUMBER$ . return true ; }
rank: 424
score: 98.33001708984375
patch: Plane : return false ; }
rank: 424
score: 98.14976283482143
patch: return ! ) ; return ;
rank: 425
score: 98.859345703125
patch: return cs . contains CaMeL None ( cs . char CaMeL At ( j ) . char CaMeL At ( i ) ) ;
rank: 425
score: 98.84368341619319
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . to CaMeL String ( ) ) ) , ch ) ;
rank: 425
score: 98.55612182617188
patch: return cs ; }
rank: 425
score: 98.55320739746094
patch: CaMeL Error return false ; } }
rank: 425
score: 98.55268012152777
patch: z = false ; return false ; }
rank: 425
score: 98.5272216796875
patch: return get CaMeL Property ( $STRING$ ) ;
rank: 425
score: 98.39044952392578
patch: return ( ch == $STRING$ ) ;
rank: 425
score: 98.32972063337054
patch: return cs [ i ] ;
rank: 425
score: 98.14921569824219
patch: CaMeL |= ) ; return ; {
rank: 426
score: 98.922119140625
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( $STRING$ ) ) ) == 0 ;
rank: 426
score: 98.85777869591347
patch: return search CaMeL Chars [ j ] < search CaMeL Chars ;
rank: 426
score: 98.8435287475586
patch: return ( ch != null ) ;
rank: 426
score: 98.55610656738281
patch: return cs . false ; } }
rank: 426
score: 98.55281372070313
patch: return true ; } } if ; return ;
rank: 426
score: 98.52672576904297
patch: ( this ) ; return false ;
rank: 426
score: 98.38737487792969
patch: . return is CaMeL Empty ( ;
rank: 426
score: 98.328857421875
patch: return String ) false ; }
rank: 426
score: 98.14869689941406
patch: return return $NUMBER$ ; return 0 ;
rank: 427
score: 98.9218280498798
patch: return cs . contains ( cs , search CaMeL Chars ) ;
rank: 427
score: 98.85740966796875
patch: return ! search CaMeL Chars [ i ] ;
rank: 427
score: 98.84319709329044
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) != - 1 ;
rank: 427
score: 98.55520968967014
patch: if ( i == search CaMeL Chars .
rank: 427
score: 98.55279541015625
patch: return false ; while return false ; } }
rank: 427
score: 98.55129665798611
patch: log = false ; return true ; }
rank: 427
score: 98.5264663696289
patch: return new || ( false ) ;
rank: 427
score: 98.3271993001302
patch: Plane : return false ;
rank: 427
score: 98.14839172363281
patch: CaMeL List ( false ) ; false
rank: 428
score: 98.55520290798611
patch: return ( String . [ ] ) ;
rank: 428
score: 98.55275472005208
patch: return false ; else return true ; }
rank: 428
score: 98.55127825055804
patch: . ; return false ; }
rank: 428
score: 98.38569641113281
patch: CaMeL ; * / return true ;
rank: 428
score: 98.32517787388393
patch: return false . true ; }
rank: 428
score: 98.14750671386719
patch: ( false ) ; return ; {
rank: 429
score: 98.91953688401442
patch: return . index CaMeL Of ( String . index CaMeL Of ( String ) search CaMeL Chars . char CaMeL At ( j ) )
rank: 429
score: 98.85646409254808
patch: return search CaMeL Chars [ j ] . to CaMeL Lower CaMeL Case ( ) . equals CaMeL Ignore CaMeL Case ( String ) ;
rank: 429
score: 98.84280831473214
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) ) , ch ) ;
rank: 429
score: 98.55220540364583
patch: return false ; } else return null ;
rank: 429
score: 98.55049438476563
patch: return ; } }
rank: 429
score: 98.32461111886161
patch: return false ; true ; }
rank: 429
score: 98.14665876116071
patch: CaMeL do ( false ) ;
rank: 430
score: 98.91951810396634
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) )
rank: 430
score: 98.85634765625
patch: return search CaMeL Chars [ j ] . contains CaMeL None ( search CaMeL Chars . char CaMeL At ( i ) ) ;
rank: 430
score: 98.84275864109848
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) != 0 ;
rank: 430
score: 98.55363246372768
patch: return ( cs ) ; }
rank: 430
score: 98.54988098144531
patch: z = false ; return false ;
rank: 430
score: 98.52546909877232
patch: CaMeL List return false ; ;
rank: 430
score: 98.32383510044643
patch: Plane ; return false ; }
rank: 430
score: 98.14431326729911
patch: return 0 , return false ;
rank: 431
score: 98.91759381975446
patch: return ( String ) cs . char CaMeL At ( i ) ;
rank: 431
score: 98.84249230587122
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 431
score: 98.55359649658203
patch: return ( cs , ch ) ;
rank: 431
score: 98.55182495117188
patch: return false ; } catch return true ; }
rank: 431
score: 98.5494384765625
patch: return is CaMeL Empty . false ;
rank: 431
score: 98.52545928955078
patch: CaMeL Error false ; return false ;
rank: 431
score: 98.38507080078125
patch: ( false , false , true )
rank: 431
score: 98.14411926269531
patch: return true ; return - $NUMBER$ ;
rank: 432
score: 98.91712364783653
patch: try { String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( ch ) ) ) ;
rank: 432
score: 98.84246063232422
patch: result = false ; return false ;
rank: 432
score: 98.55358208550348
patch: return cs . is [ j ] ;
rank: 432
score: 98.54943169487848
patch: manifest = false ; return true ; }
rank: 432
score: 98.52508544921875
patch: CaMeL List . contains ( false ) ;
rank: 432
score: 98.38310241699219
patch: return false ; if ( false )
rank: 432
score: 98.31922403971355
patch: static return false ; }
rank: 432
score: 98.1432393391927
patch: return is != 0 ;
rank: 433
score: 98.91690767728366
patch: return String . index CaMeL Of ( ch ) != 0 ;
rank: 433
score: 98.85582557091347
patch: try { String . index CaMeL Of ( String . index CaMeL
rank: 433
score: 98.84226296164773
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . index CaMeL Of ( ch ) ) ) ) ;
rank: 433
score: 98.55349731445312
patch: throw new Error ( $STRING$ ) ;
rank: 433
score: 98.55089111328125
patch: return false ; } } else return true ;
rank: 433
score: 98.54942321777344
patch: return is CaMeL Empty ; } }
rank: 433
score: 98.52434624565973
patch: CaMeL List . ; return true ; ;
rank: 433
score: 98.38232421875
patch: CaMeL return ( false , true ;
rank: 433
score: 98.31829833984375
patch: return search CaMeL Len ;
rank: 433
score: 98.14315795898438
patch: return false ; return return 1 ;
rank: 434
score: 98.9167949969952
patch: return this . index CaMeL Of ( ch ) == 0 ;
rank: 434
score: 98.853515625
patch: throw $STRING$ * String . index CaMeL Of ( String )
rank: 434
score: 98.84181167140152
patch: byte . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) , ch ) ;
rank: 434
score: 98.55316162109375
patch: return contains CaMeL None ( true ) ;
rank: 434
score: 98.55021362304687
patch: CaMeL Thread . return ( false ) ; }
rank: 434
score: 98.54914686414931
patch: profile = false ; return false ; }
rank: 434
score: 98.3822021484375
patch: ( false , false , false )
rank: 434
score: 98.31748744419643
patch: return this . ! false ;
rank: 434
score: 98.14256068638393
patch: return return ) ; break ;
rank: 435
score: 98.91664817116477
patch: return search CaMeL Chars . get ( ch ) ;
rank: 435
score: 98.85032301682692
patch: return false + cs . char CaMeL At ( j ) ;
rank: 435
score: 98.55135769314236
patch: if ( j == search CaMeL Len )
rank: 435
score: 98.54995727539062
patch: return false ; else if return false ; }
rank: 435
score: 98.5489273071289
patch: return ch == null || false ;
rank: 435
score: 98.52281358506944
patch: return true ; ; if return false ;
rank: 435
score: 98.38194783528645
patch: CaMeL Enum return true ;
rank: 435
score: 98.31636555989583
patch: return . false ; }
rank: 435
score: 98.14210510253906
patch: return ! ( false ; return ;
rank: 436
score: 98.91621616908482
patch: if ( search CaMeL Chars . length 1 < search CaMeL Chars .
rank: 436
score: 98.85017578125
patch: return String . index CaMeL Of ( String . cs , search CaMeL Chars . to CaMeL String ( ) ) == 0 ;
rank: 436
score: 98.8416415127841
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) < 0 ;
rank: 436
score: 98.55084906684027
patch: return ( String CaMeL Buffer ) false ;
rank: 436
score: 98.5486068725586
patch: ( false ) . return true ;
rank: 436
score: 98.52196502685547
patch: CaMeL List . false = false ;
rank: 436
score: 98.3817367553711
patch: = false ? false : false ;
rank: 436
score: 98.31486002604167
patch: ) return false ; }
rank: 436
score: 98.14131382533482
patch: CaMeL do { return false ;
rank: 437
score: 98.9160625751202
patch: return String . index CaMeL Of ( $STRING$ ) != 0 ;
rank: 437
score: 98.8496844951923
patch: if ( search CaMeL Chars . length >= search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( j ) ;
rank: 437
score: 98.84153793797348
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) , ch ) ) ;
rank: 437
score: 98.55005754743304
patch: return return ( true ) ;
rank: 437
score: 98.54836697048611
patch: return true ; } if ( false ;
rank: 437
score: 98.52186584472656
patch: CaMeL Class . false return true ;
rank: 437
score: 98.38039143880208
patch: * / return true ;
rank: 437
score: 98.14097377232143
patch: CaMeL false ( false ) ;
rank: 438
score: 98.8489453125
patch: return cs . contains CaMeL None ( cs . char CaMeL At ( j ) . char CaMeL At ( 0 ) ) ;
rank: 438
score: 98.84142020089286
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 438
score: 98.54966735839844
patch: return false ; while false ; }
rank: 438
score: 98.54768880208333
patch: return false false ; } return true ;
rank: 438
score: 98.52067057291667
patch: CaMeL Number false = new String false ;
rank: 438
score: 98.37904357910156
patch: . char CaMeL Count return false ;
rank: 438
score: 98.3103535970052
patch: return ! true ; }
rank: 438
score: 98.14096505301339
patch: CaMeL List ( return ) ;
rank: 439
score: 98.91453043619792
patch: return search CaMeL Chars . size ( ) > 0 ;
rank: 439
score: 98.84649188701923
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( i ) ;
rank: 439
score: 98.84139229910714
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . index CaMeL Of ( ch ) ) ) ) ;
rank: 439
score: 98.54963902064732
patch: return ; ; return false ;
rank: 439
score: 98.54741559709821
patch: return false ; / * ;
rank: 439
score: 98.54474555121527
patch: return return contains CaMeL None ( ) ;
rank: 439
score: 98.52036539713542
patch: return get CaMeL Fields ( false ) ;
rank: 439
score: 98.3778305053711
patch: server = false ; return true ;
rank: 439
score: 98.30799211774554
patch: CaMeL List return false ; }
rank: 439
score: 98.14031982421875
patch: return return 1 == false ;
rank: 440
score: 98.845947265625
patch: return false . contains CaMeL None ( ) ;
rank: 440
score: 98.84084185431985
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( i ) ) ) ) ;
rank: 440
score: 98.54927825927734
patch: return false ; } return ; ;
rank: 440
score: 98.30491420200893
patch: [ j ] = true ;
rank: 440
score: 98.13984026227679
patch: CaMeL ~ ( false ) ;
rank: 441
score: 98.91329251802884
patch: return index CaMeL Of ( search CaMeL Chars ) == 0 ;
rank: 441
score: 98.84482421875
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) ;
rank: 441
score: 98.84039481026785
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( String . char CaMeL At ( j ) ) , ch ) ) ;
rank: 441
score: 98.54906548394098
patch: return true ; else return false ; }
rank: 441
score: 98.54679870605469
patch: return false ; } ++ i ;
rank: 441
score: 98.54102240668402
patch: return ( search CaMeL Chars [ j ]
rank: 441
score: 98.51976013183594
patch: CaMeL String false ; return false ;
rank: 441
score: 98.37692696707589
patch: CaMeL return ( ch ) ;
rank: 441
score: 98.30466134207589
patch: return true . false ; }
rank: 441
score: 98.13966587611607
patch: CaMeL Builder ; return false ;
rank: 442
score: 98.84474464699075
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) == 0 ;
rank: 442
score: 98.83848987926136
patch: return search CaMeL Chars [ j ] == false ;
rank: 442
score: 98.54612901475694
patch: logger = false ; return true ; }
rank: 442
score: 98.54068332248264
patch: return contains CaMeL None [ 0 ] ;
rank: 442
score: 98.51972961425781
patch: CaMeL Number false return false ; ;
rank: 442
score: 98.37603759765625
patch: . return ( ch == null ;
rank: 442
score: 98.30447823660714
patch: String return [ j ] ;
rank: 442
score: 98.1387939453125
patch: CaMeL List ( ; return ; ;
rank: 443
score: 98.84453790838069
patch: return search CaMeL Chars [ 0 ] == ch ;
rank: 443
score: 98.83832864200367
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 443
score: 98.54874267578126
patch: return false ; } } return return false ;
rank: 443
score: 98.53939480251736
patch: return Char CaMeL Sequence . true ; }
rank: 443
score: 98.51951599121094
patch: CaMeL List . append return false ;
rank: 443
score: 98.37546793619792
patch: CaMeL Pair return false ;
rank: 443
score: 98.30434744698661
patch: return ( ! false ) ;
rank: 443
score: 98.13869222005208
patch: return ; { false ;
rank: 444
score: 98.84451998197116
patch: return this . search CaMeL Chars [ j ] < ch ;
rank: 444
score: 98.83822811351104
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ; return false ;
rank: 444
score: 98.54871215820313
patch: return false ; } } } if false ;
rank: 444
score: 98.54576110839844
patch: return $STRING$ . equals ( ; }
rank: 444
score: 98.51925659179688
patch: return true ; return false false ;
rank: 444
score: 98.3740234375
patch: . char return false ;
rank: 444
score: 98.30214146205357
patch: Plane out return false ; }
rank: 444
score: 98.1383285522461
patch: CaMeL do . return false ; ;
rank: 445
score: 98.9041278545673
patch: return String . index CaMeL Of ( ch ) < 0 ;
rank: 445
score: 98.83805577895221
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . last CaMeL Index CaMeL Of ( $STRING$ ) ) ) ) ;
rank: 445
score: 98.54547119140625
patch: return false ; } ; ;
rank: 445
score: 98.53790283203125
patch: return String . false ;
rank: 445
score: 98.5180892944336
patch: CaMeL Number ( ; return false ;
rank: 445
score: 98.30157470703125
patch: Plane ) return false ;
rank: 445
score: 98.1383056640625
patch: return 0 . 0 - 0 ;
rank: 446
score: 98.90408325195312
patch: Plane = cs . char CaMeL At ( j ) ;
rank: 446
score: 98.84381975446429
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) == - 1 ;
rank: 446
score: 98.8379767922794
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( i ) ) ) ) ;
rank: 446
score: 98.54837646484376
patch: return false ; } false * * * /
rank: 446
score: 98.54466901506696
patch: return ( false , true ;
rank: 446
score: 98.53761800130208
patch: if ( j < search CaMeL Len )
rank: 446
score: 98.51729329427083
patch: return null ; ; ; return false ;
rank: 446
score: 98.371826171875
patch: CaMeL false ; return true ; }
rank: 446
score: 98.13787841796875
patch: return 0 + return 1 ;
rank: 447
score: 98.90142822265625
patch: return String . index CaMeL Of ( String ) 1 ;
rank: 447
score: 98.843271484375
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( i )
rank: 447
score: 98.83774701286765
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) , ch ) ) ;
rank: 447
score: 98.54794747488839
patch: return is ; return true ;
rank: 447
score: 98.54425726996527
patch: d = false ; return false ; }
rank: 447
score: 98.13644845145089
patch: CaMeL ++ ; return false ;
rank: 448
score: 98.901123046875
patch: return search CaMeL Chars ( cs , search CaMeL Chars ) ;
rank: 448
score: 98.84105335582386
patch: return search CaMeL Chars [ j ] > ch ;
rank: 448
score: 98.83720128676471
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( ch ) ) ) ) ;
rank: 448
score: 98.54779052734375
patch: return is ; } if return false ;
rank: 448
score: 98.54424285888672
patch: ( false ) . return false ;
rank: 448
score: 98.51478407118056
patch: return new String ( false ) ; ;
rank: 448
score: 98.29302106584821
patch: return . return false ; }
rank: 448
score: 98.1360855102539
patch: false * * / return false ;
rank: 449
score: 98.840654296875
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( . char CaMeL At (
rank: 449
score: 98.83689371744792
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . to CaMeL String ( ) ) ) , ch ) ;
rank: 449
score: 98.54749891493056
patch: return false ; } else throw null ;
rank: 449
score: 98.54386138916016
patch: return true ; } } ) ;
rank: 449
score: 98.51463317871094
patch: return true ; false return true ;
rank: 449
score: 98.36986541748047
patch: $NUMBER$ ; if ( false ) {
rank: 449
score: 98.29262869698661
patch: static return false ; } }
rank: 449
score: 98.13533782958984
patch: return 0 == false ; return ;
rank: 450
score: 98.83657754434121
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 450
score: 98.54727783203126
patch: return null ; } } if return false ;
rank: 450
score: 98.54375457763672
patch: return is CaMeL Blank ( ch ;
rank: 450
score: 98.53213065011161
patch: return ( String ) true ;
rank: 450
score: 98.51254611545139
patch: return true ; ; else return false ;
rank: 450
score: 98.36944580078125
patch: $NUMBER$ . return this . false ;
rank: 450
score: 98.29191371372768
patch: return false [ j ] ;
rank: 450
score: 98.13410949707031
patch: CaMeL ( ) ; return ; {
rank: 451
score: 98.89743041992188
patch: try { String . index CaMeL Of ( $STRING$ ) ;
rank: 451
score: 98.83358425564236
patch: return null . contains ( ch ) ;
rank: 451
score: 98.5468521118164
patch: return true ; } catch ; ;
rank: 451
score: 98.53140694754464
patch: return contains CaMeL None false ;
rank: 451
score: 98.51235622829861
patch: return false ; ; catch return true ;
rank: 451
score: 98.36758422851562
patch: ( ) * / return true ;
rank: 451
score: 98.28933715820312
patch: Plane . return true ;
rank: 451
score: 98.13376290457589
patch: CaMeL |= ( false ) ;
rank: 452
score: 98.89730130709134
patch: return $STRING$ . index CaMeL Of ( String ) - 1 ;
rank: 452
score: 98.83844866071429
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) != - 1 ;
rank: 452
score: 98.83281393612133
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ; return true ;
rank: 452
score: 98.54643419053819
patch: CaMeL State . false ; return false ;
rank: 452
score: 98.5426025390625
patch: return false ; } false ; }
rank: 452
score: 98.53071424696181
patch: throw new Illegal CaMeL Argument CaMeL Exception (
rank: 452
score: 98.51206752232143
patch: CaMeL Range return return false ;
rank: 452
score: 98.3673095703125
patch: . char CaMeL Count return true ;
rank: 452
score: 98.28873697916667
patch: false return false ; }
rank: 452
score: 98.13243103027344
patch: CaMeL += false ; return ; {
rank: 453
score: 98.89656575520833
patch: return ! String . index CaMeL Of ( String ) ;
rank: 453
score: 98.83765587439903
patch: throw String . index CaMeL Of ( $STRING$ , cs ) ;
rank: 453
score: 98.83279239430146
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 453
score: 98.54584503173828
patch: return is false ; break ; }
rank: 453
score: 98.54166412353516
patch: . return false ; } else {
rank: 453
score: 98.530029296875
patch: return ( false ; }
rank: 453
score: 98.51115587022569
patch: CaMeL Number [ false ] = false ;
rank: 453
score: 98.28764997209821
patch: ) return false ; } }
rank: 453
score: 98.13234165736607
patch: CaMeL -- ; return false ;
rank: 454
score: 98.54559326171875
patch: return true ; while return false ;
rank: 454
score: 98.54147677951389
patch: return false ; } else { break ;
rank: 454
score: 98.51061139787946
patch: return false ; false ; ;
rank: 454
score: 98.36476135253906
patch: CaMeL return false ; } break ;
rank: 454
score: 98.13174438476562
patch: CaMeL = false ; return ; {
rank: 455
score: 98.893798828125
patch: return this . contains CaMeL None ( cs ) ;
rank: 455
score: 98.8303555575284
patch: return $STRING$ == search CaMeL Chars [ j ] ;
rank: 455
score: 98.54551188151042
patch: return false ; if return true ; }
rank: 455
score: 98.52645263671874
patch: b return false ;
rank: 455
score: 98.51020050048828
patch: CaMeL List . add ( false ;
rank: 455
score: 98.36410522460938
patch: . return - 1 <= false ;
rank: 455
score: 98.28704223632812
patch: return 0 ; }
rank: 456
score: 98.83028041294642
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( cs . char CaMeL At ( j ) ) ) , ch ) ;
rank: 456
score: 98.54462432861328
patch: CaMeL Builder return false ; } }
rank: 456
score: 98.52638462611607
patch: return ( char ) false ;
rank: 456
score: 98.51018415178571
patch: CaMeL String . return false ;
rank: 456
score: 98.36282348632812
patch: . if ( false ) break ;
rank: 456
score: 98.284423828125
patch: return false ; } ) ;
rank: 456
score: 98.13077545166016
patch: return 0 ; while return 0 ;
rank: 457
score: 98.8363506610577
patch: return search CaMeL Chars [ j ] < cs . length ;
rank: 457
score: 98.82991297104779
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) , ch ) ) ;
rank: 457
score: 98.54385715060764
patch: return false ; } * * * ;
rank: 457
score: 98.52450900607639
patch: while ( j < search CaMeL Len )
rank: 457
score: 98.51007080078125
patch: CaMeL Number return return false ;
rank: 457
score: 98.36132049560547
patch: $NUMBER$ ? * / return true ;
rank: 457
score: 98.28334263392857
patch: Plane return ( true ) ;
rank: 457
score: 98.13018798828125
patch: return ~ false ; return 1 ;
rank: 458
score: 98.89153583233173
patch: return cs . char CaMeL At ( j ) == null ;
rank: 458
score: 98.83615347055289
patch: return search CaMeL Chars [ j ] == ch . index CaMeL
rank: 458
score: 98.82922014508928
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( i ) ) ) ) ;
rank: 458
score: 98.54081217447917
patch: return false ; } while ( false )
rank: 458
score: 98.52242702907986
patch: return new Char CaMeL Sequence ( ) ;
rank: 458
score: 98.5089340209961
patch: CaMeL Number false return false ; }
rank: 458
score: 98.36104583740234
patch: $NUMBER$ . / / return false ;
rank: 458
score: 98.28201293945312
patch: return true + false ;
rank: 458
score: 98.1300048828125
patch: CaMeL Thread . return false ;
rank: 459
score: 98.83536783854167
patch: Plane return search CaMeL Chars [ j ] != ch ;
rank: 459
score: 98.82771809895833
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) , ch ) ) ;
rank: 459
score: 98.54342312282986
patch: return return false ; } else return ;
rank: 459
score: 98.5404052734375
patch: admin = false ; return false ; }
rank: 459
score: 98.52184041341145
patch: return cs ; } }
rank: 459
score: 98.50809478759766
patch: CaMeL Runtime . false return false ;
rank: 459
score: 98.35946219308036
patch: = true ; return true ;
rank: 459
score: 98.28098842075893
patch: [ i ] return false ;
rank: 459
score: 98.12973458426339
patch: return return ) return false ;
rank: 460
score: 98.89080810546875
patch: return $STRING$ . to CaMeL String ( ) ;
rank: 460
score: 98.82749815244932
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) , ch ) ) ;
rank: 460
score: 98.54341430664063
patch: return ; } else { return false ; }
rank: 460
score: 98.53981018066406
patch: return is CaMeL Blank ( ; }
rank: 460
score: 98.52163696289062
patch: if ( j >= 0 ) {
rank: 460
score: 98.50789642333984
patch: CaMeL Range = false ; break ;
rank: 460
score: 98.35749053955078
patch: $NUMBER$ . char CaMeL Count ++ ;
rank: 460
score: 98.28060477120536
patch: return true ; false ; }
rank: 461
score: 98.89069158380681
patch: return ! String . index CaMeL Of ( String )
rank: 461
score: 98.83341158353366
patch: return search CaMeL Chars [ j ] == ch . start ;
rank: 461
score: 98.82739975873162
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) , $STRING$ ) ) ;
rank: 461
score: 98.54296875
patch: return 0 ; } } return false ;
rank: 461
score: 98.52156575520833
patch: return ( String ) ;
rank: 461
score: 98.5062255859375
patch: return new String false ; return false ;
rank: 461
score: 98.3570785522461
patch: . char CaMeL At ( false ;
rank: 461
score: 98.28056989397321
patch: CaMeL ] return false ; }
rank: 461
score: 98.12754313151042
patch: false ; return false ;
rank: 462
score: 98.83236581307871
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) == 1 ;
rank: 462
score: 98.82721625434027
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) ) ;
rank: 462
score: 98.54283447265625
patch: CaMeL Error . return ( false ) ; }
rank: 462
score: 98.53903198242188
patch: c = ; return false ; }
rank: 462
score: 98.50606536865234
patch: CaMeL List . size return false ;
rank: 462
score: 98.35575358072917
patch: CaMeL State return false ;
rank: 462
score: 98.12725830078125
patch: return is != 0 ; return ;
rank: 463
score: 98.88948880709134
patch: return String . index CaMeL Of ( String ) & 1 ;
rank: 463
score: 98.83181423611111
patch: return cs . contains CaMeL None ( search CaMeL Chars . char CaMeL At ( j ) . char CaMeL At ( i ) ) ;
rank: 463
score: 98.54219970703124
patch: return false ; } for ; * * /
rank: 463
score: 98.53789520263672
patch: rt = false ; return false ;
rank: 463
score: 98.50494384765625
patch: return new false ; return true ;
rank: 463
score: 98.35211181640625
patch: CaMeL return this . false ;
rank: 463
score: 98.27883911132812
patch: contains return false ;
rank: 463
score: 98.12722778320312
patch: CaMeL += ) false ; false ;
rank: 464
score: 98.83061079545455
patch: try { return search CaMeL Chars [ j ] ;
rank: 464
score: 98.82718912760417
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) , ch ) ) ;
rank: 464
score: 98.5420150756836
patch: return false ; } / / ;
rank: 464
score: 98.53760528564453
patch: return false ; ; } * /
rank: 464
score: 98.51365443638393
patch: index CaMeL Of ( String )
rank: 464
score: 98.50487603081598
patch: return null ; false ; return false ;
rank: 464
score: 98.35164642333984
patch: $NUMBER$ . append ( ch ) ;
rank: 464
score: 98.12702287946429
patch: CaMeL sum . return false ;
rank: 465
score: 98.886962890625
patch: return search CaMeL Chars . next ( ) ;
rank: 465
score: 98.83030348557692
patch: return search CaMeL Chars [ i ] == ch . value ;
rank: 465
score: 98.82701200597427
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; }
rank: 465
score: 98.54180908203125
patch: return false ; } } / * * /
rank: 465
score: 98.51363118489583
patch: if ( j <= search CaMeL Len )
rank: 465
score: 98.35073852539062
patch: CaMeL Error = true ; break ;
rank: 465
score: 98.27586146763393
patch: Plane false return true ; }
rank: 465
score: 98.12633514404297
patch: CaMeL List ( ) ; false ;
rank: 466
score: 98.88628595525569
patch: return contains CaMeL None ( cs CaMeL Len ) ;
rank: 466
score: 98.82943612557871
patch: return String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) == 0 ;
rank: 466
score: 98.82647705078125
patch: return cs . size ( ) > 0 ;
rank: 466
score: 98.54059448242188
patch: return true ; } if ; return true ;
rank: 466
score: 98.53736114501953
patch: cr = false ; return true ;
rank: 466
score: 98.51302083333333
patch: return return return true ;
rank: 466
score: 98.5028305053711
patch: CaMeL Class false ; return true ;
rank: 466
score: 98.34914143880208
patch: = false ; break ;
rank: 466
score: 98.27550397600446
patch: return ) return false ; }
rank: 466
score: 98.12608337402344
patch: CaMeL List ( ; return ; {
rank: 467
score: 98.88475623497597
patch: return search CaMeL Chars [ cs CaMeL Len ] != ch ;
rank: 467
score: 98.8293926532452
patch: return this . search CaMeL Chars [ j ] . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( String ) ;
rank: 467
score: 98.82570452008929
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) , ch ) ) ;
rank: 467
score: 98.53990173339844
patch: return false ; for false * /
rank: 467
score: 98.53670501708984
patch: bp = false ; return true ;
rank: 467
score: 98.50263129340277
patch: CaMeL Error = false ; while false ;
rank: 467
score: 98.34830474853516
patch: [ j ] . return false ;
rank: 467
score: 98.275146484375
patch: return . false ; } }
rank: 467
score: 98.12571498325893
patch: CaMeL do . throw false ;
rank: 468
score: 98.8844463641827
patch: return index CaMeL Of ( search CaMeL Chars , cs ) ;
rank: 468
score: 98.82829066685268
patch: return String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) != - 1 ;
rank: 468
score: 98.82553013392857
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 468
score: 98.53912353515625
patch: return null ; } else { if false ;
rank: 468
score: 98.53657749720982
patch: p = ; return false ;
rank: 468
score: 98.51085553850446
patch: if ( ch == null )
rank: 468
score: 98.50217692057292
patch: return new String false ;
rank: 468
score: 98.34770965576172
patch: ( false , false , true ;
rank: 468
score: 98.1239242553711
patch: return ! ) ; return ; {
rank: 469
score: 98.82735770089286
patch: return String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) == - 1 ;
rank: 469
score: 98.82548971737133
patch: . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) , ch ) ) ;
rank: 469
score: 98.53895399305556
patch: return true ; } ; return false ;
rank: 469
score: 98.53596496582031
patch: return true ; ; } else {
rank: 469
score: 98.5018310546875
patch: CaMeL List . return null ; ;
rank: 469
score: 98.34667205810547
patch: CaMeL return - 1 == false ;
rank: 469
score: 98.27435302734375
patch: String . return false ; }
rank: 469
score: 98.12290736607143
patch: ( false ) return false ;
rank: 470
score: 98.88356370192308
patch: return search CaMeL Chars . get ( i ) == ch ;
rank: 470
score: 98.82706392728366
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( 0 ) ;
rank: 470
score: 98.8251594094669
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( j ) ) ) ) ;
rank: 470
score: 98.5388671875
patch: return return false ; } } } return ;
rank: 470
score: 98.51048060825893
patch: return ! contains CaMeL None ;
rank: 470
score: 98.50093841552734
patch: CaMeL Range + ; return false ;
rank: 470
score: 98.34297398158482
patch: CaMeL System . return true ;
rank: 470
score: 98.27351888020833
patch: return true . true ;
rank: 470
score: 98.12078094482422
patch: CaMeL ~ ( ) ; false ;
rank: 471
score: 98.88274591619319
patch: return cs . contains ( search CaMeL Chars ) ;
rank: 471
score: 98.82704897280092
patch: return cs . contains CaMeL None ( search CaMeL Chars . char CaMeL At ( j ) . char CaMeL At ( 0 ) ) ;
rank: 471
score: 98.82487657335069
patch: . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 471
score: 98.53875732421875
patch: return true ; } if ; }
rank: 471
score: 98.53501892089844
patch: return $STRING$ . equals ( false ;
rank: 471
score: 98.50863986545139
patch: if ( search CaMeL Len <= 1 )
rank: 471
score: 98.4993387858073
patch: return new return false ;
rank: 471
score: 98.34081268310547
patch: ( false , false , false ;
rank: 471
score: 98.27306256975446
patch: Plane return false + false ;
rank: 471
score: 98.12007359095982
patch: return ; { return true ;
rank: 472
score: 98.881591796875
patch: search CaMeL Chars [ cs . char CaMeL At ( j )
rank: 472
score: 98.8268291766827
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . index CaMeL Of ( String ) ;
rank: 472
score: 98.53873019748264
patch: CaMeL List . return false ; } }
rank: 472
score: 98.53474426269531
patch: ch = false ; return true ;
rank: 472
score: 98.49851989746094
patch: return this . return false ; ;
rank: 472
score: 98.34062957763672
patch: . ; if ( false ) {
rank: 472
score: 98.27217320033482
patch: return false ; } System .
rank: 472
score: 98.11883544921875
patch: return name ; return false ;
rank: 473
score: 98.88134765625
patch: return search CaMeL Chars [ search CaMeL Len ] != ch ;
rank: 473
score: 98.82679332386364
patch: return search CaMeL Chars [ j ] . contains CaMeL
rank: 473
score: 98.82301958869485
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( ch ) ) ) ) ;
rank: 473
score: 98.53453826904297
patch: return ch == $STRING$ || false ;
rank: 473
score: 98.50789388020833
patch: return cs . is [ i ] ;
rank: 473
score: 98.49846733940973
patch: return false ; return false ; break ;
rank: 473
score: 98.33892822265625
patch: . hash CaMeL Code ( ) ;
rank: 473
score: 98.27187674386161
patch: ( ) return true ; }
rank: 473
score: 98.11844635009766
patch: return ; { return false ; ;
rank: 474
score: 98.8808926669034
patch: return search CaMeL Chars . add ( ch ) ;
rank: 474
score: 98.8267333984375
patch: return search CaMeL Chars [ j ] ++ ;
rank: 474
score: 98.822216796875
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) == 0 ;
rank: 474
score: 98.53792995876736
patch: . set ; return false ; } }
rank: 474
score: 98.53408474392361
patch: return false ; ; } } else {
rank: 474
score: 98.49833170572917
patch: return get CaMeL Instance ( ) ; ;
rank: 474
score: 98.27113560267857
patch: false return false ; } }
rank: 474
score: 98.11838785807292
patch: return length != 0 ;
rank: 475
score: 98.82639723557692
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL String ( ) . equals ( ch ) ;
rank: 475
score: 98.82178431919642
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . last CaMeL Index CaMeL Of ( $STRING$ ) ) ) ) ;
rank: 475
score: 98.53406439887152
patch: return false ; break ; } } ;
rank: 475
score: 98.50496419270833
patch: if ( search CaMeL Chars [ j ]
rank: 475
score: 98.49801635742188
patch: return new Boolean ( false ) ;
rank: 475
score: 98.33662632533482
patch: CaMeL Enum . return true ;
rank: 475
score: 98.27089146205357
patch: ; return false ; } }
rank: 475
score: 98.1181411743164
patch: return ; { return false ; }
rank: 476
score: 98.8802020733173
patch: return index CaMeL Of ( ch , search CaMeL Len ) ;
rank: 476
score: 98.82627516526442
patch: System != null ? String . index CaMeL Of ( String )
rank: 476
score: 98.82177016314338
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( i ) ) ) , ch ) ;
rank: 476
score: 98.53777398003473
patch: return false ; for return false ; }
rank: 476
score: 98.50481499565973
patch: if ( i == search CaMeL Len )
rank: 476
score: 98.49793243408203
patch: CaMeL Range . j return false ;
rank: 476
score: 98.26976667131696
patch: return ! true ; } }
rank: 476
score: 98.11770193917411
patch: return 0 . != 1 ;
rank: 477
score: 98.82527982271634
patch: return search CaMeL Chars [ j ] == ch + ch ;
rank: 477
score: 98.8216219815341
patch: return this == search CaMeL Chars [ j ] ;
rank: 477
score: 98.53687133789063
patch: return false ; } } if ( return ;
rank: 477
score: 98.53291320800781
patch: c = ; return true ; }
rank: 477
score: 98.49774932861328
patch: CaMeL Exception false return false ; ;
rank: 477
score: 98.33584594726562
patch: $NUMBER$ . / / return true ;
rank: 477
score: 98.26749965122768
patch: return / * * * /
rank: 477
score: 98.1176986694336
patch: return return ( false ; return ;
rank: 478
score: 98.82394748263889
patch: return String . index CaMeL Of ( String . cs , search CaMeL Chars . char CaMeL At ( j ) ) != - 1 ;
rank: 478
score: 98.82138241038604
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) ) == - 1 ;
rank: 478
score: 98.53680419921875
patch: return false ; } return 0 ;
rank: 478
score: 98.53271484375
patch: return Character . false ;
rank: 478
score: 98.50181884765625
patch: return = false ;
rank: 478
score: 98.49760437011719
patch: return true ; return - $STRING$ ;
rank: 478
score: 98.11714935302734
patch: return 0 . is != false ;
rank: 479
score: 98.87844848632812
patch: return search CaMeL Chars . char CaMeL At ( j )
rank: 479
score: 98.8231788917824
patch: throw String . index CaMeL Of ( String . index CaMeL Of ( String . last CaMeL Index CaMeL Of ( $STRING$ ) ) ) ;
rank: 479
score: 98.82136804917279
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ) ; return false ;
rank: 479
score: 98.53650774274554
patch: return return is false ; }
rank: 479
score: 98.50141737196181
patch: if ( i >= search CaMeL Len )
rank: 479
score: 98.49725341796875
patch: return new char false ; return false ;
rank: 479
score: 98.33469063895089
patch: ( ; return false ) ;
rank: 479
score: 98.26285226004464
patch: return search CaMeL Len ; }
rank: 479
score: 98.11700439453125
patch: return is ( false false ; :
rank: 480
score: 98.82288860452586
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) == 0 ;
rank: 480
score: 98.82131060431985
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . to CaMeL Object ( ) ) ) ) ;
rank: 480
score: 98.53634643554688
patch: return false ; } if ; = false ;
rank: 480
score: 98.53251647949219
patch: CaMeL ; return false ; } }
rank: 480
score: 98.49674769810268
patch: CaMeL Error return false ; ;
rank: 480
score: 98.33047485351562
patch: CaMeL return null ;
rank: 480
score: 98.11583600725446
patch: return ; = ; return ;
rank: 481
score: 98.87692495492789
patch: return String . index CaMeL Of ( $STRING$ ) > 0 ;
rank: 481
score: 98.82263635706019
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( j + 1 )
rank: 481
score: 98.82127470128677
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 481
score: 98.53605346679687
patch: return true ; if return false ; } }
rank: 481
score: 98.532470703125
patch: CaMeL false . ; return false ;
rank: 481
score: 98.49947357177734
patch: return contains CaMeL None false ; }
rank: 481
score: 98.49658881293402
patch: CaMeL Range . append ( $STRING$ ) ;
rank: 481
score: 98.26161411830357
patch: { { return false ; }
rank: 481
score: 98.11573028564453
patch: return 0 ; while return 1 ;
rank: 482
score: 98.822021484375
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( j ) + $STRING$
rank: 482
score: 98.82072179457721
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ] ) ) ) ) ;
rank: 482
score: 98.53601752387152
patch: return false ; } ( return false ;
rank: 482
score: 98.53168487548828
patch: return true ; ; } break ;
rank: 482
score: 98.49842664930556
patch: return ( ( char ) cs ) ;
rank: 482
score: 98.49590301513672
patch: CaMeL Category . false return false ;
rank: 482
score: 98.32979583740234
patch: CaMeL ; if ; return false ;
rank: 482
score: 98.26124064127605
patch: return false && true ;
rank: 482
score: 98.114892578125
patch: return return ) ;
rank: 483
score: 98.87645545372597
patch: return cs . index CaMeL Of ( ch ) == 0 ;
rank: 483
score: 98.8206787109375
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ; break ;
rank: 483
score: 98.82020060221355
patch: try { return false ;
rank: 483
score: 98.5357437133789
patch: CaMeL State . return false ; }
rank: 483
score: 98.53137885199652
patch: return true ; } break ; } }
rank: 483
score: 98.49531555175781
patch: return false ; false ; ; ;
rank: 483
score: 98.49369049072266
patch: return ( false , cs ) ;
rank: 483
score: 98.25949532645089
patch: return false / * * /
rank: 483
score: 98.1148910522461
patch: return false ; ; ; return ;
rank: 484
score: 98.87470037286931
patch: return search CaMeL Chars . contains ( ch ) ;
rank: 484
score: 98.82057818244485
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( i ) ) ) , ch ) ;
rank: 484
score: 98.82017933238636
patch: return search CaMeL Chars [ j ] == ch _
rank: 484
score: 98.53563232421875
patch: return is CaMeL Empty ; return false ; }
rank: 484
score: 98.53007507324219
patch: return true ; } ; } ;
rank: 484
score: 98.49494171142578
patch: CaMeL Builder . return false ; ;
rank: 484
score: 98.49184744698661
patch: return true ; } } else
rank: 484
score: 98.32513427734375
patch: . return - 1 & false ;
rank: 484
score: 98.25947265625
patch: Plane throw false ;
rank: 484
score: 98.11342075892857
patch: CaMeL List return return ) ;
rank: 485
score: 98.8735018643466
patch: return index CaMeL Of ( ch , ch ) ;
rank: 485
score: 98.82051225142045
patch: return $STRING$ != search CaMeL Chars [ j ] ;
rank: 485
score: 98.53524169921874
patch: return is CaMeL Sealed ( false ) ; }
rank: 485
score: 98.52994113498264
patch: admin = false ; return true ; }
rank: 485
score: 98.49444580078125
patch: CaMeL Category . false return true ;
rank: 485
score: 98.4912109375
patch: return search CaMeL Len == 0 ;
rank: 485
score: 98.32506561279297
patch: . char CaMeL Count = false ;
rank: 485
score: 98.25898960658482
patch: return false ; static * /
rank: 485
score: 98.11236572265625
patch: return 0 ; while false ; ;
rank: 486
score: 98.8197380514706
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ) ;
rank: 486
score: 98.53484429253473
patch: return false false ; } return false ;
rank: 486
score: 98.52935791015625
patch: return return false ; } ; }
rank: 486
score: 98.49385579427083
patch: CaMeL Class return false ;
rank: 486
score: 98.48967742919922
patch: if ( j > 0 ) {
rank: 486
score: 98.11192975725446
patch: return false ; return this ;
rank: 487
score: 98.8722256747159
patch: return search CaMeL Chars . equals ( String ) ;
rank: 487
score: 98.8192138671875
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) + $STRING$ ) ) ;
rank: 487
score: 98.8170166015625
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( ) ) ) == 0 ;
rank: 487
score: 98.53382873535156
patch: CaMeL State . return ( false ;
rank: 487
score: 98.52878243582589
patch: return true ; continue ; }
rank: 487
score: 98.49362521701389
patch: CaMeL Range . add ( true ) ;
rank: 487
score: 98.32415771484375
patch: CaMeL Error = false ; break ;
rank: 487
score: 98.25637381417411
patch: return true + false ; }
rank: 487
score: 98.11192975725446
patch: return 0 ; break ; ;
rank: 488
score: 98.87168579101562
patch: return new String ( search CaMeL Chars ) ;
rank: 488
score: 98.8190056295956
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL Char CaMeL Array ( ) ) ) ) ;
rank: 488
score: 98.8165870949074
patch: return String . index CaMeL Of ( String . cs , search CaMeL Chars . char CaMeL At ( j ) ) == - 1 ;
rank: 488
score: 98.53353881835938
patch: return false ; } return $NUMBER$ ;
rank: 488
score: 98.4932861328125
patch: return false ; return true ; ; ;
rank: 488
score: 98.32234191894531
patch: = false ; while ( false )
rank: 488
score: 98.25595092773438
patch: return . true ;
rank: 488
score: 98.11182403564453
patch: return 0 . is == false ;
rank: 489
score: 98.81887637867646
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( cs . char CaMeL At ( j ) ) ) , ch ) ;
rank: 489
score: 98.81603551793981
patch: return String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) == $STRING$ ;
rank: 489
score: 98.5326919555664
patch: return false ; } throw null ;
rank: 489
score: 98.52683512369792
patch: return false ; / * return false ;
rank: 489
score: 98.49279022216797
patch: CaMeL Builder . false return false ;
rank: 489
score: 98.2552998860677
patch: Plane throw false ; }
rank: 489
score: 98.11091831752232
patch: return 0 . ! 1 ;
rank: 490
score: 98.81857479319854
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . index CaMeL Of ( ch ) ) ) ) ;
rank: 490
score: 98.8157371238426
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . index CaMeL Of ( String . index CaMeL
rank: 490
score: 98.52615695529514
patch: return false ; } } } else {
rank: 490
score: 98.49239349365234
patch: return new return ( return ) ;
rank: 490
score: 98.31938825334821
patch: . char CaMeL Count ++ ;
rank: 490
score: 98.25514729817708
patch: ; return false ; }
rank: 490
score: 98.11031668526786
patch: CaMeL sum = return false ;
rank: 491
score: 98.86957341974431
patch: try { cs . contains CaMeL None ( ) ;
rank: 491
score: 98.81462492766204
patch: throw String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) , $STRING$ ) ;
rank: 491
score: 98.53134494357639
patch: return false ; } finally = false ;
rank: 491
score: 98.52587890625
patch: return ! is CaMeL Empty ;
rank: 491
score: 98.49171956380208
patch: CaMeL Range false return false ; break ;
rank: 491
score: 98.47295379638672
patch: return ( true , true ) ;
rank: 491
score: 98.31850760323661
patch: . return 1 == false ;
rank: 491
score: 98.10818917410714
patch: return 0 ; return ; {
rank: 492
score: 98.86808638139205
patch: return String . index CaMeL Of ( $STRING$ ) ;
rank: 492
score: 98.81833718039773
patch: return contains CaMeL None ( i , ch ) ;
rank: 492
score: 98.81418185763889
patch: return String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) == 1 ;
rank: 492
score: 98.53101348876953
patch: return false ; else return ; }
rank: 492
score: 98.52584838867188
patch: cp = false ; return false ;
rank: 492
score: 98.49107530381944
patch: CaMeL List . add ( $STRING$ ) ;
rank: 492
score: 98.47079467773438
patch: throw new Exception ( $STRING$ ) ;
rank: 492
score: 98.2521240234375
patch: return - false ;
rank: 493
score: 98.81825884650735
patch: . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( i ) ) ) ) ;
rank: 493
score: 98.53072102864583
patch: return return ; } } return false ;
rank: 493
score: 98.52571868896484
patch: manifest = false ; return true ;
rank: 493
score: 98.49068874782986
patch: return false ; ; else return true ;
rank: 493
score: 98.31680297851562
patch: . equals ( ch ) * /
rank: 493
score: 98.25049845377605
patch: Plane out return false ;
rank: 493
score: 98.1061503092448
patch: CaMeL sum = false ;
rank: 494
score: 98.81821576286765
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( cs . char CaMeL At ( j ) ) ) , ch ) ;
rank: 494
score: 98.81287977430556
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) == $STRING$ ;
rank: 494
score: 98.52512032645089
patch: CaMeL return false ; } }
rank: 494
score: 98.49059186662946
patch: CaMeL Range false = false ;
rank: 494
score: 98.4671142578125
patch: switch ( ch )
rank: 494
score: 98.25002615792411
patch: return false ; count ++ ;
rank: 494
score: 98.10331508091518
patch: return return $NUMBER$ ; break ;
rank: 495
score: 98.81777774586396
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) , $STRING$ ) ) ;
rank: 495
score: 98.81212022569444
patch: throw String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( i ) ) , $STRING$ ) ;
rank: 495
score: 98.53045654296875
patch: return return && false ; }
rank: 495
score: 98.52494981553819
patch: if ( ! false ) return false ;
rank: 495
score: 98.48992241753473
patch: CaMeL Null ( ; return false ; ;
rank: 495
score: 98.46695285373264
patch: if ( cs . length ( ) ==
rank: 495
score: 98.10129801432292
patch: return 0 & false ;
rank: 496
score: 98.86555619673295
patch: return contains CaMeL None ( j , ch ) ;
rank: 496
score: 98.81763392857142
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( String . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 496
score: 98.80867513020833
patch: return cs . contains CaMeL None ( cs . char CaMeL At ( cs . char CaMeL At ( j ) ) , ch ) ;
rank: 496
score: 98.53034803602431
patch: CaMeL Thread . return false ; } }
rank: 496
score: 98.52490234375
patch: a = false ; return true ; }
rank: 496
score: 98.48949432373047
patch: CaMeL Number = false ; break ;
rank: 496
score: 98.31217956542969
patch: . return ( ch != null ;
rank: 496
score: 98.24968610491071
patch: Plane return false ; false ;
rank: 496
score: 98.10080392020089
patch: CaMeL List ( ; return ;
rank: 497
score: 98.86489868164062
patch: Plane return contains CaMeL None ( ch ) ;
rank: 497
score: 98.81740315755208
patch: . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) , ch ) ) ;
rank: 497
score: 98.80713794849537
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) > 0 ;
rank: 497
score: 98.53012084960938
patch: return is ; else return false ;
rank: 497
score: 98.46309814453124
patch: this return false ;
rank: 497
score: 98.30943298339844
patch: CaMeL return false ; break ; }
rank: 497
score: 98.24943324497768
patch: Plane this return true ; }
rank: 497
score: 98.09955705915179
patch: ( ) ; return false ;
rank: 498
score: 98.81689453125
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . get CaMeL File CaMeL Name ( ) ) ) , ch ) ;
rank: 498
score: 98.80711206896552
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) == 0 ;
rank: 498
score: 98.52897813585069
patch: return false ; } return ( false ;
rank: 498
score: 98.52469211154514
patch: return false ; this . return true ;
rank: 498
score: 98.48808288574219
patch: CaMeL Runtime . false return true ;
rank: 498
score: 98.46249389648438
patch: if ( ch != null ) {
rank: 498
score: 98.30454799107143
patch: CaMeL ; ch = false ;
rank: 498
score: 98.24789864676339
patch: Plane return false ; * /
rank: 498
score: 98.0986328125
patch: return true ; return $STRING$ ;
rank: 499
score: 98.86330942007211
patch: return contains CaMeL None ( cs , cs , ch ) ;
rank: 499
score: 98.81658063616071
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) , $STRING$ ) ) ;
rank: 499
score: 98.80671830610795
patch: return search CaMeL Chars [ i ] < ch ;
rank: 499
score: 98.52814398871527
patch: return false ; } catch return null ;
rank: 499
score: 98.5244140625
patch: return true ; } / * ;
rank: 499
score: 98.48767852783203
patch: return new Array CaMeL List ( ;
rank: 499
score: 98.46133761935764
patch: return contains CaMeL None ( $STRING$ ) ;
rank: 499
score: 98.303955078125
patch: CaMeL Builder . return true ;
rank: 499
score: 98.24741908482143
patch: Plane return true ; break ;
rank: 499
score: 98.09765625
patch: return 0 . ! false ;
rank: 500
score: 98.86203237680289
patch: return search CaMeL Chars . get ( j ) != null ;
rank: 500
score: 98.81615513392858
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( i ) ) ) ) ;
rank: 500
score: 98.52398681640625
patch: ( ) . return true ; }
rank: 500
score: 98.4874267578125
patch: CaMeL Exception ; return false ; false ;
rank: 500
score: 98.4580078125
patch: return ( String [ ] ) false ;
rank: 500
score: 98.30378723144531
patch: ( false , true , false )
rank: 500
score: 98.2471415201823
patch: return - false ; }
rank: 500
score: 98.09746442522321
patch: CaMeL ch = false ; ;
rank: 501
score: 98.86004169170673
patch: return search CaMeL Chars [ j ] == ch ; break ;
rank: 501
score: 98.81580307904412
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ) ; return true ;
rank: 501
score: 98.80134186921296
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ;
rank: 501
score: 98.52265167236328
patch: return ( false ) false ; }
rank: 501
score: 98.48715549045139
patch: CaMeL List . false return false ; }
rank: 501
score: 98.30342610677083
patch: . return true ; ;
rank: 501
score: 98.24649483816964
patch: Plane * / return true ;
rank: 501
score: 98.09603445870536
patch: return false ; if false ;
rank: 502
score: 98.85650079900569
patch: return index CaMeL Of ( ch ) == 0 ;
rank: 502
score: 98.81540876116071
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ; return false ;
rank: 502
score: 98.8010498046875
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) == - 1 ;
rank: 502
score: 98.52653503417969
patch: return is ; } return true ;
rank: 502
score: 98.52257428850446
patch: . ; return true ; }
rank: 502
score: 98.48651123046875
patch: CaMeL Boolean = false ;
rank: 502
score: 98.45655653211806
patch: if ( i == cs . length )
rank: 502
score: 98.24603271484375
patch: return false - false ;
rank: 502
score: 98.09579903738839
patch: CaMeL do ; return false ;
rank: 503
score: 98.81468406883445
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) , ch ) ) ;
rank: 503
score: 98.8005704012784
patch: return contains CaMeL None ( [ j ] ) ;
rank: 503
score: 98.52633666992188
patch: . set ; return false ; }
rank: 503
score: 98.52225494384766
patch: return true ; ; } ; }
rank: 503
score: 98.48631286621094
patch: return get CaMeL Instance ( ; {
rank: 503
score: 98.45579528808594
patch: return cs . search CaMeL Chars ;
rank: 503
score: 98.24586995442708
patch: return return null ; }
rank: 503
score: 98.09520612444196
patch: CaMeL += ( ch ) ;
rank: 504
score: 98.81424289279514
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 504
score: 98.52218191964286
patch: CaMeL Character . return false ;
rank: 504
score: 98.48603057861328
patch: CaMeL Number [ ; return false ;
rank: 504
score: 98.455078125
patch: if ( ! search CaMeL Len ) {
rank: 504
score: 98.2458251953125
patch: Plane return null ;
rank: 504
score: 98.09368024553571
patch: CaMeL Thread ; return false ;
rank: 505
score: 98.85357666015625
patch: return . contains CaMeL None ( ) ;
rank: 505
score: 98.81407255284927
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) , $STRING$ ) ) ;
rank: 505
score: 98.797412109375
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) != - 1 ;
rank: 505
score: 98.52519226074219
patch: return null ; } catch ; }
rank: 505
score: 98.52215576171875
patch: return false ; default : return false ;
rank: 505
score: 98.48529052734375
patch: CaMeL Exception false false return true ;
rank: 505
score: 98.30021158854167
patch: $NUMBER$ ; return true ;
rank: 505
score: 98.24403686523438
patch: ) return false ;
rank: 505
score: 98.09237234933036
patch: return ; { return 0 ;
rank: 506
score: 98.81394391741071
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; }
rank: 506
score: 98.79544503348214
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . to CaMeL String ( ) ) ) == 0 ;
rank: 506
score: 98.52446153428819
patch: return ; } } else return false ;
rank: 506
score: 98.52208794487848
patch: socket = false ; return true ; }
rank: 506
score: 98.48527526855469
patch: CaMeL Number ; return false ; ;
rank: 506
score: 98.44933064778645
patch: return [ j ] ;
rank: 506
score: 98.30004119873047
patch: CaMeL ; return true ; } }
rank: 506
score: 98.24337332589286
patch: Plane ? return false ; }
rank: 506
score: 98.09219360351562
patch: ; { return false ;
rank: 507
score: 98.81348353794642
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . to CaMeL String ( i ) ) ) ) ;
rank: 507
score: 98.52438693576389
patch: return false ; } } } if ;
rank: 507
score: 98.48451063368056
patch: return null ; return false ; false ;
rank: 507
score: 98.44825236002605
patch: b return false ; }
rank: 507
score: 98.29969787597656
patch: . char CaMeL At ( 0 )
rank: 507
score: 98.24298967633929
patch: return return return true ; }
rank: 507
score: 98.09215436662946
patch: return - 1 ; break ;
rank: 508
score: 98.79164225260416
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) == - 1 ;
rank: 508
score: 98.5216064453125
patch: admin = false ; return true ;
rank: 508
score: 98.44718424479167
patch: return return ! false ;
rank: 508
score: 98.29952239990234
patch: . ends CaMeL With ( $STRING$ )
rank: 508
score: 98.24248395647321
patch: Char CaMeL Sequence return false ;
rank: 509
score: 98.81323920355902
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 509
score: 98.52290852864583
patch: return true ; if return false ; }
rank: 509
score: 98.52139282226562
patch: m = ; return false ; }
rank: 509
score: 98.48336791992188
patch: CaMeL Exception = false ; break ;
rank: 509
score: 98.24185616629464
patch: return * * * * /
rank: 509
score: 98.09041050502232
patch: return is != 0 ; ;
rank: 510
score: 98.81141880580357
patch: byte . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 510
score: 98.78825239701705
patch: return ! ! search CaMeL Chars [ j ] ;
rank: 510
score: 98.52188546316964
patch: return false ; } / ;
rank: 510
score: 98.52061462402344
patch: return false ; } count ++ ;
rank: 510
score: 98.48314666748047
patch: CaMeL Thread . return false ; }
rank: 510
score: 98.44572448730469
patch: return cs . length ( ) ;
rank: 510
score: 98.29803466796875
patch: CaMeL return false ; false ;
rank: 510
score: 98.24167887369792
patch: Plane return ! false ;
rank: 511
score: 98.8404541015625
patch: return index CaMeL Of ( cs , cs ) ;
rank: 511
score: 98.81074482685811
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 511
score: 98.78796807650862
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) == 1 ;
rank: 511
score: 98.52054850260417
patch: return ; ; } else return false ;
rank: 511
score: 98.52048068576389
patch: raw = false ; return true ; }
rank: 511
score: 98.48296356201172
patch: CaMeL List . size return true ;
rank: 511
score: 98.29789515904018
patch: . char CaMeL Count -- ;
rank: 511
score: 98.24053083147321
patch: return false - false ; }
rank: 511
score: 98.08720179966518
patch: CaMeL += ) return false ;
rank: 512
score: 98.81038643973214
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ; return true ;
rank: 512
score: 98.7876609519676
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) == $NUMBER$ ;
rank: 512
score: 98.51923963758681
patch: return return null ; } return false ;
rank: 512
score: 98.44515555245536
patch: return contains ( ch ) ;
rank: 512
score: 98.29541015625
patch: . char CaMeL Count -= false ;
rank: 512
score: 98.24039713541667
patch: ( ) return true ;
rank: 512
score: 98.08594767252605
patch: return return ) ; ;
rank: 513
score: 98.83743896484376
patch: return contains CaMeL None ( cs ) ; }
rank: 513
score: 98.81033664279514
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . to CaMeL String ( ) ) , ch ) ) ;
rank: 513
score: 98.78744070870536
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) == - 1 ;
rank: 513
score: 98.51983642578125
patch: return ; } else return true ;
rank: 513
score: 98.51888020833333
patch: return return false ; return false ; }
rank: 513
score: 98.48182678222656
patch: CaMeL Builder . false return true ;
rank: 513
score: 98.29493059430804
patch: ? * / return true ;
rank: 513
score: 98.23887416294643
patch: Plane ! return true ; }
rank: 513
score: 98.08588518415179
patch: return 0 ; = false ;
rank: 514
score: 98.8364990234375
patch: return return contains CaMeL None ( cs ) ;
rank: 514
score: 98.809423828125
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL Lower CaMeL Case ( i ) ) ) ) ;
rank: 514
score: 98.78726091056035
patch: return String . index CaMeL Of ( String . value CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) == 0 ;
rank: 514
score: 98.48165893554688
patch: CaMeL Number false false return true ;
rank: 514
score: 98.44389997209821
patch: if ( j >= 0 )
rank: 514
score: 98.29354858398438
patch: . starts CaMeL With ( false ;
rank: 514
score: 98.23816789899554
patch: return false && true ; }
rank: 514
score: 98.08274332682292
patch: return 0 , 0 ;
rank: 515
score: 98.83641468394886
patch: return index CaMeL Of ( cs , ch ) ;
rank: 515
score: 98.80905412946429
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( ) ) ) , ch ) ;
rank: 515
score: 98.7854424838362
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length && search CaMeL Chars . length < search CaMeL Len ) { return false ;
rank: 515
score: 98.51876068115234
patch: return return is return false ; }
rank: 515
score: 98.47977992466518
patch: CaMeL Class false return false ;
rank: 515
score: 98.44331359863281
patch: return ! contains CaMeL None ; }
rank: 515
score: 98.29203796386719
patch: $NUMBER$ . else { return true ;
rank: 515
score: 98.23773193359375
patch: ch return false ; }
rank: 515
score: 98.07955496651786
patch: return 1 ; return 1 ;
rank: 516
score: 98.80842895507813
patch: return ! ch . contains ( ch ) ;
rank: 516
score: 98.7845458984375
patch: return search CaMeL Chars [ j ] != cs ;
rank: 516
score: 98.51839773995536
patch: return false ; false * /
rank: 516
score: 98.51808166503906
patch: return char CaMeL At ( ; }
rank: 516
score: 98.47945404052734
patch: return new ? false return false ;
rank: 516
score: 98.29200744628906
patch: CaMeL false ; if ( false )
rank: 516
score: 98.23671177455357
patch: return false . * * /
rank: 516
score: 98.07632882254464
patch: return false . return 1 ;
rank: 517
score: 98.80814732142858
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( ) ) ) , ch ) ;
rank: 517
score: 98.78444126674107
patch: return this . search CaMeL Chars [ j ] . to CaMeL String ( ) . to CaMeL String ( ) . equals ( $STRING$ ) ;
rank: 517
score: 98.51734076605902
patch: cp = false ; return false ; }
rank: 517
score: 98.47903442382812
patch: return new is ( return ) ;
rank: 517
score: 98.28933279854911
patch: . / * return false ;
rank: 517
score: 98.23470052083333
patch: Plane return null ; }
rank: 518
score: 98.807421875
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . value CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 518
score: 98.78433122306035
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( i ) ) ) == 0 ;
rank: 518
score: 98.51723904079861
patch: bp = false ; return true ; }
rank: 518
score: 98.51618109809027
patch: CaMeL Thread ; return false ; } }
rank: 518
score: 98.47894965277777
patch: CaMeL List . false return true ; }
rank: 518
score: 98.43936593191964
patch: return String . false ; }
rank: 518
score: 98.28855678013393
patch: CaMeL false ; return false ;
rank: 518
score: 98.23391287667411
patch: Plane else return true ; }
rank: 518
score: 98.07440185546875
patch: return true . return false ;
rank: 519
score: 98.8296786221591
patch: return contains CaMeL None ( j , cs ) ;
rank: 519
score: 98.78419712611607
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) != - 0 ;
rank: 519
score: 98.51579284667969
patch: return true ; } = false ;
rank: 519
score: 98.47871398925781
patch: CaMeL List . return return true ;
rank: 519
score: 98.43787231445313
patch: return ( true ;
rank: 519
score: 98.28737386067708
patch: CaMeL Character return false ;
rank: 519
score: 98.2335917154948
patch: Plane ; return false ;
rank: 520
score: 98.82967529296874
patch: return cs == false . false . false ;
rank: 520
score: 98.80657784598215
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( i ) ) ) , ch ) ;
rank: 520
score: 98.7838934536638
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) == $STRING$ ;
rank: 520
score: 98.51715087890625
patch: return ch > - 1 ; }
rank: 520
score: 98.51480538504464
patch: return ; * * * /
rank: 520
score: 98.47803497314453
patch: CaMeL Number ; return false ; }
rank: 520
score: 98.43769836425781
patch: if ( i == 0 ) {
rank: 520
score: 98.28713989257812
patch: $NUMBER$ * / return false ; }
rank: 520
score: 98.23197719029018
patch: ch return false ; } }
rank: 520
score: 98.07071358816964
patch: return 0 . != false ;
rank: 521
score: 98.82914428710937
patch: return cs . char CaMeL At ( j )
rank: 521
score: 98.78318628771552
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) > 0 ;
rank: 521
score: 98.51668003627232
patch: p ; return true ; }
rank: 521
score: 98.47798665364583
patch: return new int false ; return false ;
rank: 521
score: 98.43157196044922
patch: return ( String ) return false ;
rank: 521
score: 98.28707122802734
patch: $NUMBER$ . return ( ch ) ;
rank: 521
score: 98.22845458984375
patch: Plane break return false ; }
rank: 521
score: 98.07070486886161
patch: return $NUMBER$ ; return 1 ;
rank: 522
score: 98.82803955078126
patch: return this . search CaMeL Chars [ j ]
rank: 522
score: 98.80508510044643
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ; return false ;
rank: 522
score: 98.78245442708334
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) != - 1 ;
rank: 522
score: 98.51657443576389
patch: if ( false ) break ; } }
rank: 522
score: 98.51268005371094
patch: return true ; break ; } ;
rank: 522
score: 98.47796630859375
patch: CaMeL String false ; return true ;
rank: 522
score: 98.28644561767578
patch: . return true ; break ; }
rank: 522
score: 98.22523716517857
patch: return true . true ; }
rank: 522
score: 98.07012067522321
patch: return ; = ; false ;
rank: 523
score: 98.80493861607142
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 523
score: 98.78130893049568
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length || search CaMeL Chars . length < search CaMeL Len ) { return false ;
rank: 523
score: 98.5163803100586
patch: return false ; default : break ;
rank: 523
score: 98.51266818576389
patch: return false ; } else if ; ;
rank: 523
score: 98.47688293457031
patch: return new char [ false ] ;
rank: 523
score: 98.42862374441964
patch: if ( ch != null )
rank: 523
score: 98.28490447998047
patch: . * / return false ; }
rank: 523
score: 98.22430419921875
patch: return 0 ; } }
rank: 524
score: 98.823974609375
patch: return cs == false . false . true ;
rank: 524
score: 98.80457221137152
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) == - 1 ;
rank: 524
score: 98.77906115301724
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) == 1 ;
rank: 524
score: 98.51266818576389
patch: return false ; } if return null ;
rank: 524
score: 98.47677273220486
patch: return true ; false ; return true ;
rank: 524
score: 98.42794799804688
patch: return String . true ;
rank: 524
score: 98.28463309151786
patch: CaMeL return filter . false ;
rank: 524
score: 98.2236328125
patch: return return null ; } }
rank: 524
score: 98.06472342354911
patch: return true ; return ; {
rank: 525
score: 98.823974609375
patch: return contains CaMeL None ( cs , true ) ;
rank: 525
score: 98.77866036551339
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) != - 1 ;
rank: 525
score: 98.51237487792969
patch: return ; ; } } return ;
rank: 525
score: 98.47657012939453
patch: CaMeL Error false ; return true ;
rank: 525
score: 98.42787388392857
patch: throw new Exception ( ) ;
rank: 525
score: 98.2841796875
patch: . value CaMeL Of ( false )
rank: 525
score: 98.22224934895833
patch: Plane this return true ;
rank: 525
score: 98.06422642299107
patch: return 0 ; if false ;
rank: 526
score: 98.80431450737848
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) ) , ch ) ;
rank: 526
score: 98.77737742456897
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length && search CaMeL Chars . length < search CaMeL Len ) { return true ;
rank: 526
score: 98.51531982421875
patch: socket = false ; return true ;
rank: 526
score: 98.51114908854167
patch: return true ; } * * * /
rank: 526
score: 98.47612653459821
patch: return new String return false ;
rank: 526
score: 98.42737579345703
patch: if ( ch == null ) {
rank: 526
score: 98.28378731863839
patch: . return false ; false ;
rank: 526
score: 98.22166224888393
patch: return - false ; } }
rank: 526
score: 98.06345912388393
patch: return equals ( false ) ;
rank: 527
score: 98.82194213867187
patch: return ! index CaMeL Of ( ch ) ;
rank: 527
score: 98.80413818359375
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . last CaMeL Index CaMeL Of ( $STRING$ ) ) ) ) ;
rank: 527
score: 98.77716936383929
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( i ) ) ) == - 1 ;
rank: 527
score: 98.51528930664062
patch: m = false ; break ; }
rank: 527
score: 98.510498046875
patch: return true ; } return null ;
rank: 527
score: 98.47570122612848
patch: CaMeL String = false ; while false ;
rank: 527
score: 98.42630004882812
patch: return ( cs , true ) ;
rank: 527
score: 98.2832260131836
patch: . char CaMeL Count ( ) ;
rank: 527
score: 98.22157796223958
patch: Plane throw true ; }
rank: 527
score: 98.06235177176339
patch: CaMeL Iterator ( false ) ;
rank: 528
score: 98.82071261935764
patch: return contains CaMeL None ( i ) ;
rank: 528
score: 98.80391438802083
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; }
rank: 528
score: 98.77678811961206
patch: throw String . index CaMeL Of ( String . index CaMeL Of ( String . last CaMeL Index CaMeL Of ( $STRING$ ) ) , $STRING$ ) ;
rank: 528
score: 98.51527404785156
patch: raw = false ; return true ;
rank: 528
score: 98.51040988498264
patch: return ; ; } if return false ;
rank: 528
score: 98.47554779052734
patch: CaMeL Range false return null ; ;
rank: 528
score: 98.42599487304688
patch: if ( false )
rank: 528
score: 98.28314208984375
patch: . float return false ;
rank: 528
score: 98.22144426618304
patch: return false [ i ] ;
rank: 528
score: 98.06168038504464
patch: return return && return false ;
rank: 529
score: 98.81965775923295
patch: return ( cs . char CaMeL At ( j )
rank: 529
score: 98.80355747767857
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) , ch ) == 0 ;
rank: 529
score: 98.776611328125
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . last CaMeL Index CaMeL Of ( $STRING$ ) ) ) == 0 ;
rank: 529
score: 98.5149917602539
patch: . return false ; } ; }
rank: 529
score: 98.50989447699652
patch: return is CaMeL True return true ; }
rank: 529
score: 98.47534942626953
patch: CaMeL Exception ( ; return false ;
rank: 529
score: 98.28206089564732
patch: . return $NUMBER$ == false ;
rank: 529
score: 98.05776541573661
patch: ( 0 != false ) ;
rank: 530
score: 98.80298529730902
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; return false ;
rank: 530
score: 98.51489935980902
patch: if ( false ) return false ; }
rank: 530
score: 98.50910101996527
patch: return false ; } if false * /
rank: 530
score: 98.47492133246527
patch: CaMeL List . return ( true ; {
rank: 530
score: 98.41960144042969
patch: if ( j == 0 ) {
rank: 530
score: 98.2803955078125
patch: * / return false ;
rank: 530
score: 98.2207743326823
patch: Plane / return false ;
rank: 530
score: 98.0577392578125
patch: return return ; return false ;
rank: 531
score: 98.80256483289931
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 531
score: 98.77576555524554
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( ) ) ) > 0 ;
rank: 531
score: 98.50900607638889
patch: return false ; } else = true ;
rank: 531
score: 98.47407362196181
patch: CaMeL List . remove ( false ) ;
rank: 531
score: 98.27828979492188
patch: CaMeL return - 1 ;
rank: 531
score: 98.219873046875
patch: Plane throw true ;
rank: 531
score: 98.05758231026786
patch: CaMeL Builder return false ; ;
rank: 532
score: 98.80243443080357
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; break ;
rank: 532
score: 98.77550006734914
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length || search CaMeL Chars . length < cs . length ) { return false ;
rank: 532
score: 98.50872124565973
patch: return false ; } } false * /
rank: 532
score: 98.47391183035714
patch: CaMeL Number ( false ) ;
rank: 532
score: 98.41698201497395
patch: if ( true ) {
rank: 532
score: 98.21945190429688
patch: c return false ; }
rank: 532
score: 98.05485026041667
patch: return true ; return ;
rank: 533
score: 98.81267700195312
patch: search CaMeL Chars [ j ] return false ;
rank: 533
score: 98.80217149522569
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) ) , ch ) ;
rank: 533
score: 98.77544955549568
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length && search CaMeL Chars . length < cs . length ) { return false ;
rank: 533
score: 98.5142822265625
patch: . false ; return false ; }
rank: 533
score: 98.47325134277344
patch: CaMeL Enum . return false ; ;
rank: 533
score: 98.41623360770089
patch: return ( String ) ch ;
rank: 533
score: 98.27707926432292
patch: CaMeL State return true ;
rank: 533
score: 98.21893310546875
patch: return contains CaMeL None 1 ;
rank: 533
score: 98.05449567522321
patch: return ! 1 ; break ;
rank: 534
score: 98.81097966974431
patch: return search CaMeL Chars [ ch ] == ch ;
rank: 534
score: 98.80147094726563
patch: return cs . length < cs . length ;
rank: 534
score: 98.774658203125
patch: return String . index CaMeL Of ( String . index CaMeL Of ( cs . char CaMeL At ( j ) ) ) == - 1 ;
rank: 534
score: 98.51325141059027
patch: manifest = false ; return false ; }
rank: 534
score: 98.50778634207589
patch: CaMeL Object . return false ;
rank: 534
score: 98.47324916294643
patch: CaMeL Number false = false ;
rank: 534
score: 98.41511535644531
patch: if ( contains CaMeL None ) {
rank: 534
score: 98.05437360491071
patch: return return false ; false ;
rank: 535
score: 98.8108243075284
patch: return index CaMeL Of ( ch ) != 0 ;
rank: 535
score: 98.80128348214286
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ] ) ) ) ) ;
rank: 535
score: 98.77400996767241
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length || search CaMeL Chars . length < search CaMeL Len ) { return true ;
rank: 535
score: 98.51236724853516
patch: CaMeL Error . return false ; }
rank: 535
score: 98.50737762451172
patch: return ; } } if false ;
rank: 535
score: 98.47225189208984
patch: return true ; return null ; }
rank: 535
score: 98.41501871744792
patch: return ( } ) ;
rank: 535
score: 98.27434430803571
patch: . append ( false ) ;
rank: 535
score: 98.21698869977679
patch: c return false ; } }
rank: 536
score: 98.8092529296875
patch: return ( search CaMeL Chars [ j ) ;
rank: 536
score: 98.80094866071428
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL Lower CaMeL Case ( j ) ) ) ) ;
rank: 536
score: 98.77312601023706
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) > 0 ;
rank: 536
score: 98.51198032924107
patch: s ; return false ; }
rank: 536
score: 98.47213309151786
patch: CaMeL Exception { return false ;
rank: 536
score: 98.41326032366071
patch: throw new Error ( ) ;
rank: 536
score: 98.27247837611607
patch: return get CaMeL Language ( ;
rank: 536
score: 98.21399943033855
patch: CaMeL ] return false ;
rank: 536
score: 98.05218505859375
patch: CaMeL List ( true ) ;
rank: 537
score: 98.806787109375
patch: return INSTANCE . contains CaMeL None ( ) ;
rank: 537
score: 98.80030691964286
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( cs . char CaMeL At ( j ) ) , ch ) ) ;
rank: 537
score: 98.77307549838362
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( j ) ; return false ;
rank: 537
score: 98.50580512152777
patch: return false ; } } return ; ;
rank: 537
score: 98.47188313802083
patch: return true ; false ; if false ;
rank: 537
score: 98.41286010742188
patch: b return true ;
rank: 537
score: 98.27071707589286
patch: CaMeL false ? return false ;
rank: 537
score: 98.21364048549107
patch: Plane continue return false ; }
rank: 537
score: 98.05171421595982
patch: return this ; return false ;
rank: 538
score: 98.80013253348214
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL Char CaMeL Array ( ) ) ) ) ;
rank: 538
score: 98.77118791852679
patch: return String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) != - 0 ;
rank: 538
score: 98.50559488932292
patch: return ; . return false ; } }
rank: 538
score: 98.47165934244792
patch: CaMeL List false return false ; false ;
rank: 538
score: 98.41067504882812
patch: this return false ; }
rank: 538
score: 98.27023751395089
patch: . append ( $STRING$ ) ;
rank: 538
score: 98.212890625
patch: Plane return ! false ; }
rank: 538
score: 98.05002848307292
patch: return 0 . 1 ;
rank: 539
score: 98.80379638671874
patch: return search CaMeL Chars [ j ) ] ;
rank: 539
score: 98.77069091796875
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( j ) ; break ;
rank: 539
score: 98.51158311631944
patch: = false ; return false ; } }
rank: 539
score: 98.50539822048611
patch: return false ; return true ; } ;
rank: 539
score: 98.47096761067708
patch: return new Array CaMeL List ( ; {
rank: 539
score: 98.4088846842448
patch: else return false ; }
rank: 539
score: 98.26863316127232
patch: CaMeL false : return true ;
rank: 539
score: 98.21129150390625
patch: false return false ;
rank: 539
score: 98.04995291573661
patch: return ! false ; false ;
rank: 540
score: 98.80206298828125
patch: return ! contains CaMeL None ( cs ) ;
rank: 540
score: 98.79973493303571
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) , ch ) ) ;
rank: 540
score: 98.76882498604911
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) == - $NUMBER$ ;
rank: 540
score: 98.50940619574652
patch: return true ; } else { return ;
rank: 540
score: 98.50531877790179
patch: return null ; } catch ;
rank: 540
score: 98.47031656901042
patch: CaMeL Number return false ; if false ;
rank: 540
score: 98.26765659877232
patch: CaMeL Exception return true ; }
rank: 540
score: 98.21109444754464
patch: return ! return true ; }
rank: 540
score: 98.04981486002605
patch: CaMeL do return false ;
rank: 541
score: 98.79921177455357
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ; return true ;
rank: 541
score: 98.76839473329741
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length || search CaMeL Chars . length < cs . length ) { return true ;
rank: 541
score: 98.508935546875
patch: return ! ; }
rank: 541
score: 98.505126953125
patch: return null ; for return false ;
rank: 541
score: 98.47012329101562
patch: CaMeL Error false return false ; }
rank: 541
score: 98.40464782714844
patch: if ( i > 0 ) {
rank: 541
score: 98.26664515904018
patch: ( ) . return true ;
rank: 541
score: 98.21078927176339
patch: return return false ; * /
rank: 541
score: 98.04789515904018
patch: return start ; return false ;
rank: 542
score: 98.80101928710937
patch: return search CaMeL Chars . trim ( ) ;
rank: 542
score: 98.79812961154514
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; return true ;
rank: 542
score: 98.76821794181035
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( j ) ; return true ;
rank: 542
score: 98.50464545355902
patch: return false ; } } * * /
rank: 542
score: 98.46917724609375
patch: CaMeL Number ++ ; return false ;
rank: 542
score: 98.40216064453125
patch: return String . false ; } }
rank: 542
score: 98.26446533203125
patch: . char CaMeL At ;
rank: 543
score: 98.79935302734376
patch: return cs == false . true . false ;
rank: 543
score: 98.79767020089285
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 543
score: 98.76783910290948
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length && search CaMeL Chars . length < cs . length ) { return true ;
rank: 543
score: 98.50859917534723
patch: image = false ; return true ; }
rank: 543
score: 98.50432586669922
patch: return null ; break ; } }
rank: 543
score: 98.26331438337054
patch: $NUMBER$ ; if ( false )
rank: 543
score: 98.20955984933036
patch: Plane / return false ; }
rank: 543
score: 98.04658726283482
patch: CaMeL ! ( return ) ;
rank: 544
score: 98.79885864257812
patch: return search CaMeL Chars . clear ( ) ;
rank: 544
score: 98.79704241071428
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 544
score: 98.76752580915179
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( i ) ) ) != - 1 ;
rank: 544
score: 98.50853814019098
patch: p = new false ; return false ;
rank: 544
score: 98.50383758544922
patch: return false ; } -= false ;
rank: 544
score: 98.46896362304688
patch: CaMeL List . add ( ) ;
rank: 544
score: 98.26172892252605
patch: . return return true ;
rank: 544
score: 98.20845540364583
patch: Plane ! return true ;
rank: 544
score: 98.0465087890625
patch: return ! ) ; false ;
rank: 545
score: 98.79767456054688
patch: try { search CaMeL Chars [ j ] ;
rank: 545
score: 98.79681222098215
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , String ) ;
rank: 545
score: 98.76740112304688
patch: if ( search CaMeL Chars ) return false ;
rank: 545
score: 98.50826263427734
patch: return ! false ; } else {
rank: 545
score: 98.4688949584961
patch: CaMeL append false ; return false ;
rank: 545
score: 98.39834158761161
patch: if ( j > 0 )
rank: 545
score: 98.20664469401042
patch: String . return false ;
rank: 545
score: 98.04580252511161
patch: CaMeL char ( false ) ;
rank: 546
score: 98.79541625976563
patch: search CaMeL Chars [ j ] return true ;
rank: 546
score: 98.79414326435811
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 546
score: 98.76737758091518
patch: return String . index CaMeL Of ( String . index CaMeL Of ( cs . char CaMeL At ( j ) ) ) != - 1 ;
rank: 546
score: 98.50801849365234
patch: CaMeL Character . return false ; }
rank: 546
score: 98.50341033935547
patch: return true ; } } catch ;
rank: 546
score: 98.4686050415039
patch: CaMeL Range false return return false ;
rank: 546
score: 98.39784749348958
patch: return { true ; }
rank: 546
score: 98.2048848470052
patch: return / * * /
rank: 546
score: 98.04555838448661
patch: return return ( false ; {
rank: 547
score: 98.79363335503473
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . to CaMeL String ( ) ) ) , $STRING$ ) ;
rank: 547
score: 98.7665283203125
patch: return String . index CaMeL Of ( String . value CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) == - 1 ;
rank: 547
score: 98.5078353881836
patch: return ( $STRING$ + ch ) ;
rank: 547
score: 98.50340440538194
patch: return ; * * * * * /
rank: 547
score: 98.46842956542969
patch: CaMeL List ( ; return true ;
rank: 547
score: 98.39612688337054
patch: return ( false , ) ;
rank: 547
score: 98.25813802083333
patch: . value = false ;
rank: 547
score: 98.20418294270833
patch: return . true ; }
rank: 547
score: 98.04234967912946
patch: return size ; { false ;
rank: 548
score: 98.79358258928572
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ) ;
rank: 548
score: 98.79271240234375
patch: return cs == false . true . true ;
rank: 548
score: 98.76648821149554
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( i ) ) ) == - 1 ;
rank: 548
score: 98.50737762451172
patch: c = false ; i ++ ;
rank: 548
score: 98.50293646918402
patch: return false ; false } return false ;
rank: 548
score: 98.46821594238281
patch: CaMeL Null false ; return false ;
rank: 548
score: 98.25752766927083
patch: . return return false ;
rank: 548
score: 98.203369140625
patch: ( [ j ] ) ;
rank: 548
score: 98.04228864397321
patch: return size ; throws false ;
rank: 549
score: 98.79356166294643
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , cs ) ;
rank: 549
score: 98.76546805245536
patch: return String . index CaMeL Of ( String . char CaMeL At ( cs . char CaMeL At ( j ) ) ) != - 1 ;
rank: 549
score: 98.50720977783203
patch: p = ( String ) false ;
rank: 549
score: 98.4678243001302
patch: return new int false ;
rank: 549
score: 98.39558410644531
patch: if ( i >= 0 ) {
rank: 549
score: 98.25599016462054
patch: CaMeL Error . return true ;
rank: 549
score: 98.20176188151042
patch: return false : false ;
rank: 549
score: 98.04196602957589
patch: return 0 != return 1 ;
rank: 550
score: 98.79337332589286
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( j ) ) ) , ch ) ;
rank: 550
score: 98.76243433459052
patch: throw String . index CaMeL Of ( String . index CaMeL Of ( String . last CaMeL Index CaMeL Of ( $STRING$ ) , ch ) ) ;
rank: 550
score: 98.50653754340277
patch: if ( false ) return false ; ;
rank: 550
score: 98.50080023871527
patch: CaMeL State . false return false ; }
rank: 550
score: 98.46768188476562
patch: CaMeL Thread . return false ; ;
rank: 550
score: 98.3942642211914
patch: return return ( String ) false ;
rank: 550
score: 98.20167759486607
patch: Plane true return true ; }
rank: 550
score: 98.04159981863839
patch: CaMeL += ) return ) ;
rank: 551
score: 98.79317103794642
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; }
rank: 551
score: 98.7860107421875
patch: return new char [ cs CaMeL Len ] ;
rank: 551
score: 98.76232299804687
patch: if ( search CaMeL Chars [ j ] !=
rank: 551
score: 98.50549994574652
patch: ch = false ; return false ; }
rank: 551
score: 98.50023735894098
patch: return true ; } catch return true ;
rank: 551
score: 98.46733262803819
patch: CaMeL Boolean = false ; while false ;
rank: 551
score: 98.20074462890625
patch: cs return true ; } }
rank: 551
score: 98.04117257254464
patch: return 0 ; return $STRING$ ;
rank: 552
score: 98.79309430803572
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ) ;
rank: 552
score: 98.76208917025862
patch: return String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) , ch ) == 0 ;
rank: 552
score: 98.50503540039062
patch: manifest = false ; return false ;
rank: 552
score: 98.49994659423828
patch: return return && return false ; }
rank: 552
score: 98.46724700927734
patch: CaMeL Error ; return false ; }
rank: 552
score: 98.38933715820312
patch: ret = false ;
rank: 552
score: 98.20034354073661
patch: char . return false ; }
rank: 552
score: 98.04025704520089
patch: return return ) != false ;
rank: 553
score: 98.79287806919643
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ) ;
rank: 553
score: 98.76151820591518
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( j + 1 ) ;
rank: 553
score: 98.49991183810764
patch: return false ; * / return false ;
rank: 553
score: 98.46690368652344
patch: CaMeL List . clear ( ) ;
rank: 553
score: 98.38699340820312
patch: throw ( $STRING$ ) ;
rank: 553
score: 98.24758475167411
patch: return - 1 == false ;
rank: 553
score: 98.20011393229167
patch: return . return false ;
rank: 553
score: 98.0400390625
patch: return true ; while false ;
rank: 554
score: 98.79273158482142
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( i ) ) ) , ch ) ;
rank: 554
score: 98.78154296875
patch: return new char [ search CaMeL Len ] ;
rank: 554
score: 98.76139068603516
patch: return cs == null && false ;
rank: 554
score: 98.4993896484375
patch: return false ; } for ; * /
rank: 554
score: 98.46685791015625
patch: CaMeL Range [ ] return true ;
rank: 554
score: 98.38649495442708
patch: return cs : false ;
rank: 554
score: 98.24483235677083
patch: return Boolean . TRUE ;
rank: 554
score: 98.19722493489583
patch: Plane false return true ;
rank: 554
score: 98.03985595703125
patch: return 0 != 1 ;
rank: 555
score: 98.79229910714285
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) + $STRING$ ) ) ;
rank: 555
score: 98.76091657366071
patch: return String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( i ) ) ) != - 1 ;
rank: 555
score: 98.502685546875
patch: return false return false ; }
rank: 555
score: 98.49907769097223
patch: return false ; else if return false ;
rank: 555
score: 98.46600341796875
patch: CaMeL Number false return false ; false ;
rank: 555
score: 98.3855209350586
patch: return false ; } } } else
rank: 555
score: 98.19705200195312
patch: return false || false ;
rank: 556
score: 98.792236328125
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . to CaMeL String ( j ) ) ) ) ;
rank: 556
score: 98.77974853515624
patch: try { contains CaMeL None ( cs ) ;
rank: 556
score: 98.76080111799568
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( ) ) ) != - 1 ;
rank: 556
score: 98.50238037109375
patch: p = false ; j ++ ;
rank: 556
score: 98.49887424045139
patch: return false ; } else throw false ;
rank: 556
score: 98.46579996744792
patch: CaMeL value return false ;
rank: 556
score: 98.24386160714286
patch: $NUMBER$ . else return true ;
rank: 556
score: 98.19623674665179
patch: return cs . length * /
rank: 556
score: 98.0390625
patch: CaMeL ; = false ; ;
rank: 557
score: 98.79190848214286
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) == 1 ;
rank: 557
score: 98.76070556640624
patch: return search CaMeL Chars [ j ] true ;
rank: 557
score: 98.50234985351562
patch: raw = false ; return false ;
rank: 557
score: 98.4984130859375
patch: return null ; break ; }
rank: 557
score: 98.4651870727539
patch: CaMeL Exception ( return false ) ;
rank: 557
score: 98.24323381696429
patch: CaMeL Compiler . return false ;
rank: 557
score: 98.1962178548177
patch: cs return true ; }
rank: 557
score: 98.03799438476562
patch: return ! ) ; ;
rank: 558
score: 98.79185267857143
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( String . char CaMeL At ( j ) ) , $STRING$ ) ) ;
rank: 558
score: 98.77479248046875
patch: return search CaMeL Chars . clone ( ) ;
rank: 558
score: 98.76068987165179
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) ) != - $NUMBER$ ;
rank: 558
score: 98.5022201538086
patch: return ( false , $NUMBER$ ) ;
rank: 558
score: 98.49789089626736
patch: return false ; } catch false * /
rank: 558
score: 98.46514129638672
patch: ( true ) ; return true ;
rank: 558
score: 98.38082449776786
patch: return cs . ( ) ;
rank: 558
score: 98.24175153459821
patch: . char ; return false ;
rank: 558
score: 98.19528198242188
patch: return ) return false ;
rank: 558
score: 98.03733607700893
patch: CaMeL return ) ; return ;
rank: 559
score: 98.79121791294642
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . index CaMeL Of ( cs ) ) ) ) ;
rank: 559
score: 98.76055036272321
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( i ) ) ) != - 1 ;
rank: 559
score: 98.50095912388393
patch: t ; return false ; }
rank: 559
score: 98.46457248263889
patch: return false ; return ; return false ;
rank: 559
score: 98.188916015625
patch: static return false ;
rank: 559
score: 98.03703090122768
patch: CaMeL Range ( return ) ;
rank: 560
score: 98.79111328125
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) == 0 ;
rank: 560
score: 98.75948780980603
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( i ) ) ) == 0 ;
rank: 560
score: 98.75699288504464
patch: contains CaMeL None return false ;
rank: 560
score: 98.49656677246094
patch: return null ; } break ; }
rank: 560
score: 98.46436225043402
patch: return false ; ; return false false ;
rank: 560
score: 98.37861851283482
patch: return ( char ) true ;
rank: 560
score: 98.24103655133929
patch: . this . return false ;
rank: 560
score: 98.1753641764323
patch: return true + true ;
rank: 560
score: 98.03682454427083
patch: return ! false ; ;
rank: 561
score: 98.79100884331598
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) , $STRING$ ) ) ;
rank: 561
score: 98.75926862444196
patch: return String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( i ) ) ) == - 1 ;
rank: 561
score: 98.4964599609375
patch: return this . false && false ;
rank: 561
score: 98.49458821614583
patch: return this . ; }
rank: 561
score: 98.46392822265625
patch: CaMeL Range ( ; return true ;
rank: 561
score: 98.24093627929688
patch: . char return true ;
rank: 561
score: 98.03374372209821
patch: return - ) ; break ;
rank: 562
score: 98.790771484375
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ) ;
rank: 562
score: 98.75912272135416
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( i ) ) ) == - 1 ;
rank: 562
score: 98.7359619140625
patch: contains CaMeL None return true ;
rank: 562
score: 98.49200439453125
patch: return Character . ; }
rank: 562
score: 98.37757110595703
patch: return ( $STRING$ , ch ) ;
rank: 562
score: 98.24003383091518
patch: [ false ] = false ;
rank: 562
score: 98.0334981282552
patch: CaMeL Thread return false ;
rank: 563
score: 98.79013671875
patch: byte . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) , ch ) ) ;
rank: 563
score: 98.75899251302083
patch: return String . index CaMeL Of ( String . value CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) != - 1 ;
rank: 563
score: 98.73206244574652
patch: return . index CaMeL Of ( String )
rank: 563
score: 98.49632263183594
patch: return false ; } return ; }
rank: 563
score: 98.46179962158203
patch: CaMeL String ( ; return false ;
rank: 563
score: 98.37479654947917
patch: return true : false ;
rank: 563
score: 98.23947579520089
patch: CaMeL Category . return false ;
rank: 563
score: 98.03163655598958
patch: return ch != 0 ;
rank: 564
score: 98.79013400607639
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) != - 1 ;
rank: 564
score: 98.75828394396552
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) < 0 ;
rank: 564
score: 98.49080810546874
patch: return ( ; }
rank: 564
score: 98.461669921875
patch: return false ; return null ; ; ;
rank: 564
score: 98.23946707589286
patch: . return is CaMeL Empty ;
rank: 565
score: 98.78947618272569
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; break ;
rank: 565
score: 98.75783081054688
patch: return search CaMeL Chars [ j ] { ch
rank: 565
score: 98.49623107910156
patch: return is ; return true ; }
rank: 565
score: 98.49040876116071
patch: . return ! false ; }
rank: 565
score: 98.4609603881836
patch: CaMeL Range ; return return false ;
rank: 565
score: 98.3745346069336
patch: result = false ; return true ;
rank: 565
score: 98.16688028971355
patch: return String ) true ;
rank: 566
score: 98.78946261935764
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( i ) ) ) , ch ) ;
rank: 566
score: 98.7577392578125
patch: return $NUMBER$ . contains CaMeL None ( ) ;
rank: 566
score: 98.72547064887152
patch: Plane return contains CaMeL None ( ) ;
rank: 566
score: 98.49567328559027
patch: return false ; } * / return ;
rank: 566
score: 98.48952229817708
patch: return ( false , ;
rank: 566
score: 98.46068464006696
patch: CaMeL Number = false ; else
rank: 566
score: 98.37287139892578
patch: return ( ch , cs ) ;
rank: 566
score: 98.23808070591518
patch: . int i = false ;
rank: 566
score: 98.0303955078125
patch: CaMeL += ( ) false ;
rank: 567
score: 98.78886021205358
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . last CaMeL Index CaMeL Of ( $STRING$ ) ) ) , ch ) ;
rank: 567
score: 98.75762532552083
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . to CaMeL String ( ) ) ) == 0 ;
rank: 567
score: 98.72536214192708
patch: return search CaMeL Chars ;
rank: 567
score: 98.49473571777344
patch: return true ; if return true ;
rank: 567
score: 98.489013671875
patch: return ; } ; }
rank: 567
score: 98.46019151475694
patch: return true ; return ( false ) ;
rank: 567
score: 98.37259347098214
patch: if ( ) return false ;
rank: 567
score: 98.23783656529018
patch: = new ; return true ;
rank: 567
score: 98.16419474283855
patch: return true && false ;
rank: 567
score: 98.02968343098958
patch: return 0 != null ;
rank: 568
score: 98.78856724330358
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) ) , ch ) ;
rank: 568
score: 98.75726996527777
patch: return search CaMeL Chars [ j ] !=
rank: 568
score: 98.49471706814236
patch: return true ; } else if ; }
rank: 568
score: 98.48894391741071
patch: return ( ch , false ;
rank: 568
score: 98.46014404296875
patch: CaMeL Range . j return true ;
rank: 568
score: 98.37102399553571
patch: switch ( ch ) { }
rank: 568
score: 98.23780314127605
patch: = this . false ;
rank: 568
score: 98.1620585123698
patch: return * * * /
rank: 568
score: 98.0284423828125
patch: return 0 - return false ;
rank: 569
score: 98.788330078125
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ) ; return false ;
rank: 569
score: 98.75716426454741
patch: return String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) , $STRING$ ) == 0 ;
rank: 569
score: 98.4942855834961
patch: CaMeL Thread . return ( false ;
rank: 569
score: 98.45954132080078
patch: CaMeL List . j return false ;
rank: 569
score: 98.36968994140625
patch: return { false ; }
rank: 569
score: 98.2369893391927
patch: CaMeL Character return true ;
rank: 569
score: 98.160400390625
patch: return this + false ;
rank: 569
score: 98.02649797712054
patch: ( false != false ) ;
rank: 570
score: 98.788330078125
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 570
score: 98.755859375
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( i ) ) ) != - 1 ;
rank: 570
score: 98.70711517333984
patch: return cs == false . false ;
rank: 570
score: 98.4940414428711
patch: return is false ; } else {
rank: 570
score: 98.48681640625
patch: return false ; } continue ;
rank: 570
score: 98.45946393694196
patch: CaMeL Range false return true ;
rank: 570
score: 98.3683349609375
patch: f return false ;
rank: 570
score: 98.2361348470052
patch: CaMeL Error = true ;
rank: 570
score: 98.1595458984375
patch: return - true ; }
rank: 570
score: 98.02615792410714
patch: return 0 && return 1 ;
rank: 571
score: 98.78818359375
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( String . char CaMeL At ( i ) ) ) , ch ) ;
rank: 571
score: 98.75545528017241
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) == $STRING$ ;
rank: 571
score: 98.45945739746094
patch: return new false ; return null ;
rank: 571
score: 98.365234375
patch: else return false ;
rank: 571
score: 98.23609415690105
patch: CaMeL Pair return true ;
rank: 571
score: 98.1592305501302
patch: return false / * /
rank: 571
score: 98.02609688895089
patch: return 0 ; ; false ;
rank: 572
score: 98.787841796875
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) < 0 ;
rank: 572
score: 98.75465550915948
patch: return String . index CaMeL Of ( String . value CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) == 1 ;
rank: 572
score: 98.68726348876953
patch: return this . search CaMeL Chars ;
rank: 572
score: 98.49325561523438
patch: return is CaMeL Empty return false ;
rank: 572
score: 98.45812225341797
patch: CaMeL List false return null ; ;
rank: 572
score: 98.36497279575893
patch: throw new Error ( $STRING$ ;
rank: 572
score: 98.23435465494792
patch: . return ( ch ;
rank: 572
score: 98.02550397600446
patch: ( true ) ; false ;
rank: 573
score: 98.78737444196429
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , null ) ;
rank: 573
score: 98.75400727370689
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( ) ) ) == - 1 ;
rank: 573
score: 98.48368326822917
patch: this . return false ;
rank: 573
score: 98.45724051339286
patch: CaMeL append return false ; ;
rank: 573
score: 98.23433140345982
patch: return new return true ; }
rank: 573
score: 98.15442911783855
patch: Plane byte return false ;
rank: 573
score: 98.02535574776786
patch: return false ; return ; /
rank: 574
score: 98.78726283482143
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) , $STRING$ ) ) ;
rank: 574
score: 98.75372721354167
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) != - 0 ;
rank: 574
score: 98.68368869357639
patch: return search CaMeL Chars . length 1 ;
rank: 574
score: 98.49172973632812
patch: return ; ; return false ; }
rank: 574
score: 98.47959681919643
patch: return ( false , ; }
rank: 574
score: 98.4570821126302
patch: CaMeL Boolean return false ;
rank: 574
score: 98.23373849051339
patch: ? * / return false ;
rank: 574
score: 98.15223185221355
patch: Plane ? return false ;
rank: 574
score: 98.02402750651042
patch: return length == false ;
rank: 575
score: 98.7862449852196
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; return false ;
rank: 575
score: 98.75222252155173
patch: return String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) , ch ) > 0 ;
rank: 575
score: 98.68202039930556
patch: return new String CaMeL Buffer ( ) ;
rank: 575
score: 98.45583089192708
patch: return new byte false ;
rank: 575
score: 98.35748291015625
patch: if ( i == 0 )
rank: 575
score: 98.1521240234375
patch: return return null ;
rank: 575
score: 98.02398681640625
patch: return return 1 ; return ;
rank: 576
score: 98.785546875
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) != 0 ;
rank: 576
score: 98.7516668911638
patch: return String . index CaMeL Of ( String . value CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) > 0 ;
rank: 576
score: 98.49128723144531
patch: return true ; } * * ;
rank: 576
score: 98.45554896763393
patch: CaMeL Range ; return null ;
rank: 576
score: 98.35739135742188
patch: return [ i ] ;
rank: 576
score: 98.15175374348958
patch: return { return false ;
rank: 576
score: 98.02391560872395
patch: return 0 . true ;
rank: 577
score: 98.78526475694444
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) + $STRING$ ) ) ;
rank: 577
score: 98.75006734913794
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) < 0 ;
rank: 577
score: 98.49085998535156
patch: return return is ; return false ;
rank: 577
score: 98.47528076171875
patch: return true ; / * ;
rank: 577
score: 98.45423235212054
patch: return new ( false ) ;
rank: 577
score: 98.34877232142857
patch: result = cs . false ;
rank: 577
score: 98.23120989118304
patch: $NUMBER$ ; return true ; }
rank: 577
score: 98.15030924479167
patch: return false - true ;
rank: 577
score: 98.0233154296875
patch: CaMeL try . return false ;
rank: 578
score: 98.78507486979167
patch: . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 578
score: 98.74839203933189
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( i ) ) ) > 0 ;
rank: 578
score: 98.49066840277777
patch: return false ; } if return $NUMBER$ ;
rank: 578
score: 98.47205810546875
patch: return false false ;
rank: 578
score: 98.45415496826172
patch: CaMeL Enum . ; return false ;
rank: 578
score: 98.34852091471355
patch: return ( true ; }
rank: 578
score: 98.23093087332589
patch: . false ; return true ;
rank: 578
score: 98.02296665736607
patch: CaMeL ch . return false ;
rank: 579
score: 98.78507272820724
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 579
score: 98.74819841056035
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( search CaMeL Chars [ j ] ) ;
rank: 579
score: 98.66703033447266
patch: if ( search CaMeL Chars [ j
rank: 579
score: 98.45410919189453
patch: CaMeL Builder . return ( false ;
rank: 579
score: 98.34800211588542
patch: return return ( false ;
rank: 579
score: 98.23016357421875
patch: CaMeL State false = true ;
rank: 579
score: 98.1498779296875
patch: return - true ;
rank: 579
score: 98.02244059244792
patch: return 0 + 0 ;
rank: 580
score: 98.78477260044643
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) > 0 ;
rank: 580
score: 98.74782799030173
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) , $STRING$ ) == 0 ;
rank: 580
score: 98.66457790798611
patch: return cs . equals ( cs ) ;
rank: 580
score: 98.48981391059027
patch: return false ; } / * * ;
rank: 580
score: 98.45231628417969
patch: CaMeL Class ( ; return true ;
rank: 580
score: 98.3461201985677
patch: b return true ; }
rank: 580
score: 98.22831217447917
patch: . ; return true ;
rank: 580
score: 98.14599609375
patch: { return true ;
rank: 580
score: 98.02151925223214
patch: CaMeL ch ( return ) ;
rank: 581
score: 98.78446568080358
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) , ch ) ) ;
rank: 581
score: 98.7470703125
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) == $NUMBER$ ;
rank: 581
score: 98.48978424072266
patch: return false ; if ( false ;
rank: 581
score: 98.45967320033482
patch: p = ; return true ;
rank: 581
score: 98.45186614990234
patch: return super . false ; ; ;
rank: 581
score: 98.34586588541667
patch: return ( ) false ;
rank: 581
score: 98.22664097377232
patch: CaMeL return is CaMeL Empty ;
rank: 581
score: 98.14562377929687
patch: ch return false ;
rank: 581
score: 98.02035086495536
patch: return 0 . equals false ;
rank: 582
score: 98.78440348307292
patch: return ch != null ;
rank: 582
score: 98.74607691271552
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . to CaMeL String ( ) ) ) != - 1 ;
rank: 582
score: 98.48933919270833
patch: return false ; } catch ; return ;
rank: 582
score: 98.45751953125
patch: return false return true ; }
rank: 582
score: 98.45185852050781
patch: CaMeL String . false return false ;
rank: 582
score: 98.34483991350446
patch: if ( ! false ) {
rank: 582
score: 98.22640555245536
patch: . starts CaMeL With ( ;
rank: 582
score: 98.14552815755208
patch: Plane log return false ;
rank: 582
score: 98.02030436197917
patch: return return 1 ; ;
rank: 583
score: 98.78422154017858
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) , cs ) ) ;
rank: 583
score: 98.74587486530173
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) , ch ) == 0 ;
rank: 583
score: 98.66123962402344
patch: return cs == null . false ;
rank: 583
score: 98.48924255371094
patch: return is return is CaMeL Empty ;
rank: 583
score: 98.4552001953125
patch: return false ; ; ; }
rank: 583
score: 98.4514389038086
patch: CaMeL Exception = new return false ;
rank: 583
score: 98.34476143973214
patch: return String . true ; }
rank: 583
score: 98.01884155273437
patch: return return 1 ;
rank: 584
score: 98.7840576171875
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 584
score: 98.74574858566811
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( i ) ) ) == 1 ;
rank: 584
score: 98.66012912326389
patch: Plane return search CaMeL Chars [ j ]
rank: 584
score: 98.48904418945312
patch: return true ; } if ; ;
rank: 584
score: 98.34437255859375
patch: result return false ;
rank: 584
score: 98.22592599051339
patch: CaMeL Error return true ; }
rank: 584
score: 98.01872035435268
patch: return false ; ; ; ;
rank: 585
score: 98.78369818793402
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) , $STRING$ ) ) ;
rank: 585
score: 98.74488988415948
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . to CaMeL String ( ) ) ) == - 1 ;
rank: 585
score: 98.65934244791667
patch: return ( String ) search CaMeL Len ;
rank: 585
score: 98.45173863002232
patch: return return false ; ; }
rank: 585
score: 98.44861602783203
patch: return new Integer ( return ) ;
rank: 585
score: 98.34413655598958
patch: b return return false ;
rank: 585
score: 98.1414082845052
patch: Plane break return false ;
rank: 585
score: 98.018310546875
patch: return != ) ; return ;
rank: 586
score: 98.78363715277777
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( j ) ) ) , ch ) ;
rank: 586
score: 98.74315564385776
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( i ) ) ) == $STRING$ ;
rank: 586
score: 98.65563201904297
patch: return ( search CaMeL Chars ) ;
rank: 586
score: 98.48822021484375
patch: return false ; } } / ;
rank: 586
score: 98.44803619384766
patch: return false ; return $STRING$ ; ;
rank: 586
score: 98.34269496372768
patch: return ( false } ) ;
rank: 586
score: 98.22458321707589
patch: $NUMBER$ . return - 1 ;
rank: 586
score: 98.01692417689732
patch: CaMeL sum = false ; ;
rank: 587
score: 98.78296576605902
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . last CaMeL Index CaMeL Of ( $STRING$ ) ) ) ) ;
rank: 587
score: 98.7431396484375
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( i ) ) ) == - 1 ;
rank: 587
score: 98.6551742553711
patch: return cs == null . true ;
rank: 587
score: 98.44791957310268
patch: p = false ; * /
rank: 587
score: 98.44788469587054
patch: CaMeL Boolean false return false ;
rank: 587
score: 98.34202067057292
patch: return return ( ) ;
rank: 587
score: 98.22446695963542
patch: . return - false ;
rank: 587
score: 98.13545532226563
patch: return this ; }
rank: 587
score: 98.01600864955357
patch: CaMeL return ( return ) ;
rank: 588
score: 98.7823257446289
patch: return ( cs == ch ) ;
rank: 588
score: 98.74031856142241
patch: return String . index CaMeL Of ( String . value CaMeL Of ( search CaMeL Chars . char CaMeL At ( i ) ) ) == 0 ;
rank: 588
score: 98.48748016357422
patch: return false ; } else ; }
rank: 588
score: 98.44664001464844
patch: CaMeL append ( return false ) ;
rank: 588
score: 98.44512067522321
patch: return ( char ) ; }
rank: 588
score: 98.34157889229911
patch: return ( ) ; } }
rank: 588
score: 98.13510131835938
patch: return false ? false ;
rank: 588
score: 98.01590401785714
patch: return 0 != 0 ; ;
rank: 589
score: 98.78231894003379
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; return false ;
rank: 589
score: 98.73988079202586
patch: return String . index CaMeL Of ( String . value CaMeL Of ( cs . char CaMeL At ( j ) ) , ch ) > 0 ;
rank: 589
score: 98.64573838975694
patch: return search CaMeL Chars ( cs ) ;
rank: 589
score: 98.4866943359375
patch: . set ; return ( false ;
rank: 589
score: 98.444580078125
patch: a ; return false ; }
rank: 589
score: 98.34138997395833
patch: return ( $NUMBER$ ) ;
rank: 589
score: 98.22314453125
patch: $NUMBER$ . return ! false ;
rank: 589
score: 98.13509114583333
patch: return false . * /
rank: 589
score: 98.01585170200893
patch: return 0 + false ; ;
rank: 590
score: 98.78194851345486
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) , ch ) ) ;
rank: 590
score: 98.73935546875
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) != - 0 ;
rank: 590
score: 98.64324951171875
patch: return ( search CaMeL Chars [ j
rank: 590
score: 98.44598388671875
patch: CaMeL Null return false ; ;
rank: 590
score: 98.44417317708333
patch: p = false ; ;
rank: 590
score: 98.34005737304688
patch: return ( i ) ;
rank: 590
score: 98.22304861886161
patch: = false ; j ++ ;
rank: 590
score: 98.13455810546876
patch: c return false ;
rank: 590
score: 98.01497977120536
patch: return $NUMBER$ ; while false ;
rank: 591
score: 98.78162977430556
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , String ) ;
rank: 591
score: 98.73924967447917
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) == - 0 ;
rank: 591
score: 98.63941955566406
patch: return index CaMeL Of ( String )
rank: 591
score: 98.44589233398438
patch: CaMeL Enum . return ( false ;
rank: 591
score: 98.33292061941964
patch: if ( j == 0 )
rank: 591
score: 98.22299630301339
patch: $NUMBER$ . . return true ;
rank: 591
score: 98.1333719889323
patch: return this . true ;
rank: 591
score: 98.01416015625
patch: return ch ; while false ;
rank: 592
score: 98.7816261085304
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; return true ;
rank: 592
score: 98.73867692618535
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length || search CaMeL Chars . length >= search CaMeL Len ) { return false ;
rank: 592
score: 98.63375854492188
patch: return ( ch boolean ) false ;
rank: 592
score: 98.48493194580078
patch: return is ; } * * /
rank: 592
score: 98.44544219970703
patch: CaMeL List != ; return false ;
rank: 592
score: 98.44294084821429
patch: return is CaMeL Empty ; ;
rank: 592
score: 98.22245788574219
patch: = false ;
rank: 592
score: 98.01415143694196
patch: CaMeL += ) ; return ;
rank: 593
score: 98.78125
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( i ) ) ) , ch ) ;
rank: 593
score: 98.63119506835938
patch: return cs == false . true ;
rank: 593
score: 98.44519914899554
patch: CaMeL List return return false ;
rank: 593
score: 98.22222900390625
patch: return - 1 + false ;
rank: 593
score: 98.1315409342448
patch: return true ; true ;
rank: 593
score: 98.01401192801339
patch: return 0 && false ; ;
rank: 594
score: 98.78115102407095
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) , $STRING$ ) ) ;
rank: 594
score: 98.73435816271552
patch: return String . index CaMeL Of ( String . value CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) == $STRING$ ;
rank: 594
score: 98.4443588256836
patch: CaMeL Enum false ; return false ;
rank: 594
score: 98.43983677455357
patch: return false false ; } ;
rank: 594
score: 98.33197021484375
patch: f return false ; }
rank: 594
score: 98.221923828125
patch: CaMeL return false ; } ;
rank: 594
score: 98.130615234375
patch: ! return false ; }
rank: 594
score: 98.01204136439732
patch: return $NUMBER$ ; return null ;
rank: 595
score: 98.78040907118056
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ] ) ) ) ) ;
rank: 595
score: 98.73351236979167
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( i ) ) ) != - 1 ;
rank: 595
score: 98.48412407769098
patch: return false ; if ; return true ;
rank: 595
score: 98.44268798828125
patch: CaMeL Exception + ; return false ;
rank: 595
score: 98.43880789620536
patch: p = false ; return ;
rank: 595
score: 98.32872663225446
patch: return return ( ch ) ;
rank: 595
score: 98.22188895089286
patch: CaMeL false false = true ;
rank: 595
score: 98.1294657389323
patch: Plane true return true ;
rank: 595
score: 98.01134381975446
patch: ( false != 0 ) ;
rank: 596
score: 98.78030734592014
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ) ; return false ;
rank: 596
score: 98.73312062230603
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . last CaMeL Index CaMeL Of ( $STRING$ ) ) ) > 0 ;
rank: 596
score: 98.48344590928819
patch: return false ; } if false ; }
rank: 596
score: 98.44157191685268
patch: CaMeL Range = false ; else
rank: 596
score: 98.43790980747768
patch: . return true ; ; }
rank: 596
score: 98.32795061383929
patch: b return ( false ) ;
rank: 596
score: 98.22157505580357
patch: . this . return true ;
rank: 596
score: 98.12774658203125
patch: logger return false ; }
rank: 596
score: 98.01039341517857
patch: CaMeL sum ( false ) ;
rank: 597
score: 98.77948822846284
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) + $STRING$ ) ) ;
rank: 597
score: 98.7330810546875
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) == - $NUMBER$ ;
rank: 597
score: 98.59203229631696
patch: return ( search CaMeL Chars ;
rank: 597
score: 98.44145202636719
patch: CaMeL System . false return false ;
rank: 597
score: 98.32668050130208
patch: if ( ! false )
rank: 597
score: 98.1256103515625
patch: Plane else return true ;
rank: 597
score: 98.00937325613839
patch: return size != false ; ;
rank: 598
score: 98.77936469184027
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) == - 1 ;
rank: 598
score: 98.732861328125
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( ) ) , $STRING$ ) == 0 ;
rank: 598
score: 98.44125366210938
patch: CaMeL List [ ; return false ;
rank: 598
score: 98.43672398158482
patch: return ( false ) ; ;
rank: 598
score: 98.32654825846355
patch: return return = false ;
rank: 598
score: 98.21917724609375
patch: CaMeL State ; return true ;
rank: 598
score: 98.12374877929688
patch: return this ; } }
rank: 598
score: 98.00876290457589
patch: return is ( return ) ;
rank: 599
score: 98.77909892314189
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) ;
rank: 599
score: 98.73284505208333
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) == - 0 ;
rank: 599
score: 98.58490753173828
patch: return ch == null . true ;
rank: 599
score: 98.48279571533203
patch: return ; * / return false ;
rank: 599
score: 98.32647705078125
patch: result = true ;
rank: 599
score: 98.11720275878906
patch: return this ;
rank: 599
score: 98.0086669921875
patch: CaMeL |= ) ; return ;
rank: 600
score: 98.77831353081598
patch: . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) , $STRING$ ) ) ;
rank: 600
score: 98.73238118489583
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . to CaMeL String ( ) ) , $STRING$ ) == 0 ;
rank: 600
score: 98.43980189732143
patch: CaMeL Exception return return false ;
rank: 600
score: 98.32575334821429
patch: return ( false + ) ;
rank: 600
score: 98.21502685546875
patch: CaMeL ; break ; }
rank: 600
score: 98.11522420247395
patch: return this && false ;
rank: 600
score: 98.00801304408482
patch: CaMeL equals ( false ) ;
rank: 601
score: 98.77825606496711
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; return false ;
rank: 601
score: 98.73176522090517
patch: if ( search CaMeL Chars . length >= search CaMeL Chars . length && search CaMeL Chars . length < search CaMeL Len ) { return false ;
rank: 601
score: 98.43811798095703
patch: CaMeL Process . false return false ;
rank: 601
score: 98.21387590680804
patch: . return 0 & false ;
rank: 601
score: 98.11314900716145
patch: return false ; System .
rank: 601
score: 98.0073954264323
patch: return 0 == 1 ;
rank: 602
score: 98.77750211148648
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; break ;
rank: 602
score: 98.73152949892241
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( j ) ) , $STRING$ ) == 0 ;
rank: 602
score: 98.57386016845703
patch: Plane = cs ; return false ;
rank: 602
score: 98.48236846923828
patch: return ; = false ; break ;
rank: 602
score: 98.21343994140625
patch: [ 0 ] = false ;
rank: 602
score: 98.11057535807292
patch: return cs return false ;
rank: 602
score: 98.00607299804688
patch: return ! return 0 ;
rank: 603
score: 98.77681587837837
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; return true ;
rank: 603
score: 98.73120959051724
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length || search CaMeL Chars . length >= search CaMeL Len ) { return true ;
rank: 603
score: 98.48190307617188
patch: return false ; this . false ;
rank: 603
score: 98.43754577636719
patch: return false ; ; ; ; ;
rank: 603
score: 98.4322509765625
patch: return ( ; } }
rank: 603
score: 98.32456461588542
patch: result return false ; }
rank: 603
score: 98.21343122209821
patch: CaMeL Error false = true ;
rank: 603
score: 98.109130859375
patch: return false ; continue ;
rank: 603
score: 98.00364467075893
patch: CaMeL Enum ( false ) ;
rank: 604
score: 98.77676052517361
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ] ) ) ;
rank: 604
score: 98.73119275323276
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( j + 1 ) + $STRING$
rank: 604
score: 98.56182098388672
patch: return ch == null . false ;
rank: 604
score: 98.48129611545139
patch: return null ; return true ; } }
rank: 604
score: 98.4371566772461
patch: CaMeL EMPTY ( ; return false ;
rank: 604
score: 98.43057250976562
patch: return ;
rank: 604
score: 98.3198013305664
patch: return ! ;
rank: 604
score: 98.21330915178571
patch: . return filter . false ;
rank: 604
score: 98.10905151367187
patch: ; return false ;
rank: 604
score: 98.00233677455357
patch: CaMeL double ( false ) ;
rank: 605
score: 98.73118433459052
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) == $NUMBER$ ;
rank: 605
score: 98.48124694824219
patch: return true ; } += false ;
rank: 605
score: 98.43714141845703
patch: ( this ) ; return true ;
rank: 605
score: 98.31538609095982
patch: return ( , false ) ;
rank: 605
score: 98.21270751953125
patch: CaMeL Process return false ;
rank: 605
score: 98.10784912109375
patch: Plane * * * /
rank: 606
score: 98.77568223741319
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( j ) ) ) , ch ) ;
rank: 606
score: 98.73057819234914
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length || search CaMeL Chars . length >= cs . length ) { return false ;
rank: 606
score: 98.4808349609375
patch: return true ; } else if false ;
rank: 606
score: 98.43673706054688
patch: CaMeL Enum . ; return true ;
rank: 606
score: 98.42816162109375
patch: . return true ; } ;
rank: 606
score: 98.3153788248698
patch: result = false ; }
rank: 606
score: 98.21201869419643
patch: = false ; if ( ;
rank: 606
score: 98.10640462239583
patch: return false != false ;
rank: 606
score: 97.99998256138393
patch: CaMeL do . add false ;
rank: 607
score: 98.77560763888889
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( i ) ) ) ) ;
rank: 607
score: 98.72979525862068
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) != 0 ;
rank: 607
score: 98.48080444335938
patch: return false ; ; } return ;
rank: 607
score: 98.43621826171875
patch: CaMeL System . ; return false ;
rank: 607
score: 98.31405639648438
patch: return = false ; }
rank: 607
score: 98.21028645833333
patch: . return ~ false ;
rank: 607
score: 98.10610961914062
patch: Plane System return true ;
rank: 607
score: 97.99955240885417
patch: return return != false ;
rank: 608
score: 98.77547878689236
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) , ch ) ) ;
rank: 608
score: 98.72919921875
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length || search CaMeL Chars . length ++ < search CaMeL Len ) { return false ;
rank: 608
score: 98.55789184570312
patch: Plane = cs ; return true ;
rank: 608
score: 98.4358901977539
patch: return new byte [ false ] ;
rank: 608
score: 98.42721993582589
patch: CaMeL return true ; } }
rank: 608
score: 98.31399100167411
patch: if ( cs == null )
rank: 608
score: 98.105712890625
patch: Plane continue return false ;
rank: 608
score: 97.9993896484375
patch: return 0 . 0 false ;
rank: 609
score: 98.77530924479167
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( String . char CaMeL At ( j ) ) ) ) ; return true ;
rank: 609
score: 98.72752278645834
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length && search CaMeL Chars . length ++ < search CaMeL Len ) { return false ;
rank: 609
score: 98.47975158691406
patch: return true ; } } else ;
rank: 609
score: 98.43569946289062
patch: CaMeL Exception = false ; try {
rank: 609
score: 98.42475237165179
patch: return true ; } ; ;
rank: 609
score: 98.10384521484374
patch: } return false ;
rank: 609
score: 97.99899727957589
patch: return 0 , false ; ;
rank: 610
score: 98.77482774522569
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( i ) ) ) , ch ) ;
rank: 610
score: 98.72715657552084
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . to CaMeL String ( ) ) , ch ) == 0 ;
rank: 610
score: 98.4796142578125
patch: return false ; } } * ;
rank: 610
score: 98.4354476928711
patch: CaMeL Object . false return false ;
rank: 610
score: 98.42311314174107
patch: return true ; } continue ;
rank: 610
score: 98.30884660993304
patch: switch ( search CaMeL Len )
rank: 610
score: 98.20912388392857
patch: . return true && false ;
rank: 610
score: 98.10333251953125
patch: return false == false ;
rank: 611
score: 98.72655436197917
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length ) search CaMeL Chars . char CaMeL At ( j ) ; else return false ;
rank: 611
score: 98.55299377441406
patch: return cs . close ( ) ;
rank: 611
score: 98.47943793402777
patch: return true ; } } ; return ;
rank: 611
score: 98.43502807617188
patch: CaMeL Class . return false ; ;
rank: 611
score: 98.30820719401042
patch: return true : true ;
rank: 611
score: 98.2086181640625
patch: CaMeL FORMAT . return false ;
rank: 611
score: 98.10256958007812
patch: Plane : return true ;
rank: 611
score: 97.9979248046875
patch: return ! != false ; ;
rank: 612
score: 98.77449544270833
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; }
rank: 612
score: 98.72509765625
patch: return String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) != - $NUMBER$ ;
rank: 612
score: 98.552734375
patch: return cs == false - 1 ;
rank: 612
score: 98.4349365234375
patch: CaMeL List . return ( ) ;
rank: 612
score: 98.10233561197917
patch: String ) return false ;
rank: 612
score: 97.99718366350446
patch: return true ; ; return ;
rank: 613
score: 98.77438766891892
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( i ) ) ) , ch ) ;
rank: 613
score: 98.47895159040179
patch: . set ; return false ;
rank: 613
score: 98.43411254882812
patch: CaMeL Range < ; return false ;
rank: 613
score: 98.30753580729167
patch: true return false ; }
rank: 613
score: 98.1016845703125
patch: CaMeL Object return false ;
rank: 613
score: 97.99625069754464
patch: false * / return false ;
rank: 614
score: 98.77424910261824
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) , $STRING$ ) ) ;
rank: 614
score: 98.55159214564732
patch: return search CaMeL Chars [ j
rank: 614
score: 98.47882758246527
patch: CaMeL Builder . return false ; } else
rank: 614
score: 98.43392944335938
patch: CaMeL String [ ; return false ;
rank: 614
score: 98.419189453125
patch: m = ; return false ;
rank: 614
score: 98.30585588727679
patch: return ( ! true ) ;
rank: 614
score: 98.20779854910714
patch: CaMeL State false = false ;
rank: 614
score: 98.09683227539062
patch: char return false ; }
rank: 614
score: 97.99612862723214
patch: return false ; return start ;
rank: 615
score: 98.77398360402961
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; return true ;
rank: 615
score: 98.72333170572917
patch: return String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) , ch ) != - 1 ;
rank: 615
score: 98.47871616908482
patch: return is false ; } ;
rank: 615
score: 98.43344116210938
patch: CaMeL List ; return false ; ;
rank: 615
score: 98.41912841796875
patch: return ! ; } }
rank: 615
score: 98.30575561523438
patch: t return false ;
rank: 615
score: 98.20770263671875
patch: CaMeL ; if ( ;
rank: 615
score: 97.99455915178571
patch: return size != 0 ; ;
rank: 616
score: 98.77314588758681
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) , ) ;
rank: 616
score: 98.72285970052083
patch: return String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) , ch ) == - 1 ;
rank: 616
score: 98.47841389973958
patch: return is ; } else return true ;
rank: 616
score: 98.4320068359375
patch: return new Integer return false ;
rank: 616
score: 98.30569022042411
patch: return ( false ; } }
rank: 616
score: 98.20724051339286
patch: return new return false ; }
rank: 616
score: 98.09424845377605
patch: Plane ch return false ;
rank: 616
score: 97.99258858816964
patch: return Character ; while false ;
rank: 617
score: 98.77285024282095
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) , cs ) ;
rank: 617
score: 98.7227783203125
patch: if ( search CaMeL Chars . length < search CaMeL Chars . length || search CaMeL Chars . length ++ < search CaMeL Len ) { return true ;
rank: 617
score: 98.54563903808594
patch: return is CaMeL Sealed ( ) ;
rank: 617
score: 98.47828504774306
patch: return false ; } else { if ;
rank: 617
score: 98.43162536621094
patch: CaMeL Exception return false ; ; ;
rank: 617
score: 98.41686139787946
patch: return new false ; } }
rank: 617
score: 98.30471365792411
patch: return return ( cs ) ;
rank: 617
score: 98.20676095145089
patch: ( ) . return false ;
rank: 617
score: 98.0922342936198
patch: contains return true ; }
rank: 617
score: 97.99256243024554
patch: false * ; return false ;
rank: 618
score: 98.77237955729167
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) , ch ) ) ;
rank: 618
score: 98.7221435546875
patch: return String . index CaMeL Of ( String . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) == - $NUMBER$ ;
rank: 618
score: 98.47804768880208
patch: return true ; } } if return ;
rank: 618
score: 98.43069893973214
patch: return new char return false ;
rank: 618
score: 98.30165608723958
patch: return contains ( ) ;
rank: 618
score: 98.20587158203125
patch: = null ; return true ;
rank: 618
score: 98.091162109375
patch: return $NUMBER$ ; }
rank: 618
score: 97.99135916573661
patch: return true ; return ; ;
rank: 619
score: 98.77062658361487
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) , null ) ;
rank: 619
score: 98.5435562133789
patch: return ( ch boolean ) true ;
rank: 619
score: 98.47682189941406
patch: return null ; } catch false ;
rank: 619
score: 98.43045043945312
patch: CaMeL List . clear return false ;
rank: 619
score: 98.41307576497395
patch: return false return false ;
rank: 619
score: 98.30133056640625
patch: return false : true ;
rank: 619
score: 98.20539202008929
patch: = new ; return false ;
rank: 619
score: 98.09112548828125
patch: Plane in return false ;
rank: 619
score: 97.99053083147321
patch: return 0 ; return ; ;
rank: 620
score: 98.76998653927365
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . index CaMeL Of ( ch ) ) ) , ch ) ;
rank: 620
score: 98.72117513020834
patch: return String . index CaMeL Of ( String . index CaMeL Of ( String . last CaMeL Index CaMeL Of ( $STRING$ ) ) ) == - 1 ;
rank: 620
score: 98.54246520996094
patch: throw new char [ 0 ] ;
rank: 620
score: 98.47637176513672
patch: return null ; return null ; }
rank: 620
score: 98.4302749633789
patch: CaMeL Process . false return true ;
rank: 620
score: 98.30087280273438
patch: break [ j ] ;
rank: 620
score: 98.20265415736607
patch: ( false , false , ;
rank: 620
score: 97.99043491908482
patch: CaMeL is ( false ) ;
rank: 621
score: 98.76963297526042
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars [ j ] ) ) ) ) ;
rank: 621
score: 98.71632893880208
patch: return search CaMeL Chars [ j ] .
rank: 621
score: 98.42778778076172
patch: return false ; false false ; ;
rank: 621
score: 98.41234479631696
patch: return false : false ; }
rank: 621
score: 98.30035400390625
patch: t return false ; }
rank: 621
score: 98.20231410435268
patch: . value CaMeL Of ( ;
rank: 621
score: 98.08530680338542
patch: static return true ; }
rank: 622
score: 98.76963297526042
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , cs ) ;
rank: 622
score: 98.71428087022569
patch: return ch . contains ( ch ) ;
rank: 622
score: 98.54081726074219
patch: try { search CaMeL Chars [ j
rank: 622
score: 98.42776925223214
patch: CaMeL Enum ; return false ;
rank: 622
score: 98.41213553292411
patch: return Character . false ; }
rank: 622
score: 98.29970296223958
patch: return false true ; }
rank: 622
score: 98.20191446940105
patch: $NUMBER$ ? return true ;
rank: 622
score: 98.08502197265625
patch: return $NUMBER$ ; } }
rank: 622
score: 97.98938860212054
patch: CaMeL return ( false ; {
rank: 623
score: 98.76780192057292
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; break ;
rank: 623
score: 98.53931427001953
patch: return cs == false + ch ;
rank: 623
score: 98.47376844618056
patch: return is CaMeL Alive return false ; }
rank: 623
score: 98.42751639229911
patch: CaMeL Enum false return false ;
rank: 623
score: 98.41165597098214
patch: c = ; return false ;
rank: 623
score: 98.29898507254464
patch: return contains ( false ) ;
rank: 623
score: 98.20152064732143
patch: CaMeL Enum false = true ;
rank: 623
score: 98.08240763346355
patch: ) return true ; }
rank: 624
score: 98.76717562288852
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) , String ) ;
rank: 624
score: 98.53817749023438
patch: return ( cs boolean ) false ;
rank: 624
score: 98.4736328125
patch: return null ; } else = false ;
rank: 624
score: 98.42749786376953
patch: return false ; false ; else {
rank: 624
score: 98.20109340122768
patch: != null ? return true ;
rank: 624
score: 98.08212280273438
patch: Plane set return false ;
rank: 624
score: 97.98885672433036
patch: return ! 1 ; return ;
rank: 625
score: 98.76714409722223
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL String ( i ) ) ) , ch ) ;
rank: 625
score: 98.47321428571429
patch: return is CaMeL Empty false ;
rank: 625
score: 98.42738342285156
patch: CaMeL Number [ ; return true ;
rank: 625
score: 98.40706089564732
patch: CaMeL Error . return false ;
rank: 625
score: 98.29710170200893
patch: if ( cs != null )
rank: 625
score: 98.20033482142857
patch: m = false ; break ;
rank: 625
score: 98.08146158854167
patch: Plane || return false ;
rank: 625
score: 97.98874918619792
patch: return ! == false ;
rank: 626
score: 98.76494004991319
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , null ) ;
rank: 626
score: 98.53168487548828
patch: if ( search CaMeL Chars . length
rank: 626
score: 98.42699323381696
patch: CaMeL Number return false ; }
rank: 626
score: 98.40662493024554
patch: . false ; return false ;
rank: 626
score: 98.2965087890625
patch: if ( i > 0 )
rank: 626
score: 98.19910539899554
patch: . return 0 != false ;
rank: 626
score: 98.08119710286458
patch: return this ? false ;
rank: 626
score: 97.98696463448661
patch: return 0 - return 1 ;
rank: 627
score: 98.764892578125
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) != - 1 ;
rank: 627
score: 98.5299301147461
patch: return new String ( String ) ;
rank: 627
score: 98.4710693359375
patch: return false ; } else return ; }
rank: 627
score: 98.42681884765625
patch: CaMeL Range . j = false ;
rank: 627
score: 98.40631103515625
patch: return $STRING$ . equals ( ;
rank: 627
score: 98.29633440290179
patch: if ( i >= 0 )
rank: 628
score: 98.76363332648026
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ) ;
rank: 628
score: 98.52767181396484
patch: return String . index CaMeL Of (
rank: 628
score: 98.46999104817708
patch: return true ; } } = false ;
rank: 628
score: 98.4262466430664
patch: CaMeL Range . append return false ;
rank: 628
score: 98.40590994698661
patch: 64 . return false ; }
rank: 628
score: 98.19810267857143
patch: $NUMBER$ . ? return true ;
rank: 628
score: 98.07480875651042
patch: Plane return false ; ;
rank: 628
score: 97.98594447544643
patch: CaMeL ch = return false ;
rank: 629
score: 98.69468688964844
patch: return cs != null && false ;
rank: 629
score: 98.5274658203125
patch: return cs == true . false ;
rank: 629
score: 98.46964518229167
patch: return null ; } ;
rank: 629
score: 98.42610386439732
patch: CaMeL Class ( false ) ;
rank: 629
score: 98.4056396484375
patch: return ( ;
rank: 629
score: 98.29248046875
patch: return ( int ) false ;
rank: 629
score: 98.1978759765625
patch: CaMeL Enum false = false ;
rank: 629
score: 98.07245635986328
patch: return $NUMBER$ ;
rank: 629
score: 97.98352922712054
patch: CaMeL return ( ) ; ;
rank: 630
score: 98.76327853732639
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . last CaMeL Index CaMeL Of ( ch ) ) ) ) ;
rank: 630
score: 98.5273208618164
patch: return false } } return false ;
rank: 630
score: 98.46937391493056
patch: . = false ; return false ; }
rank: 630
score: 98.42564392089844
patch: return this ; return null ; ;
rank: 630
score: 98.2920654296875
patch: switch ( cs )
rank: 630
score: 98.19655936104911
patch: . if ( false ) {
rank: 630
score: 98.07210286458333
patch: return false | false ;
rank: 630
score: 97.9832763671875
patch: CaMeL Integer ( false ) ;
rank: 631
score: 98.76309121621621
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) , String ) ;
rank: 631
score: 98.52725982666016
patch: Plane ( cs ) return false ;
rank: 631
score: 98.46929253472223
patch: return true ; return false ; } ;
rank: 631
score: 98.4252421061198
patch: CaMeL Exception = true ;
rank: 631
score: 98.29111735026042
patch: return cs . true ;
rank: 631
score: 97.98312377929688
patch: return ! != false ;
rank: 632
score: 98.76291910807292
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( ch ) ) ) , ch ) ;
rank: 632
score: 98.52690887451172
patch: Plane = null ; return false ;
rank: 632
score: 98.46812608506944
patch: return false ; return true ; } else
rank: 632
score: 98.42510986328125
patch: CaMeL Range . add return false ;
rank: 632
score: 98.40223185221355
patch: return $STRING$ . equals ;
rank: 632
score: 98.19500732421875
patch: CaMeL Enum ; return true ;
rank: 632
score: 98.06836954752605
patch: ; return true ; }
rank: 632
score: 97.98258463541667
patch: CaMeL do . false ;
rank: 633
score: 98.76268871410473
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( i ) ) ) , ch ) ;
rank: 633
score: 98.40151541573661
patch: return ( byte ) ; }
rank: 633
score: 98.28679809570312
patch: return false true ;
rank: 633
score: 98.19226946149554
patch: . return null == false ;
rank: 633
score: 98.0667215983073
patch: return this : false ;
rank: 633
score: 97.98212541852679
patch: CaMeL String ( false ) ;
rank: 634
score: 98.76264784071181
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ] ) ) ) ) ;
rank: 634
score: 98.52076721191406
patch: return cs == null + ch ;
rank: 634
score: 98.46802629743304
patch: return return $NUMBER$ & false ;
rank: 634
score: 98.42393493652344
patch: return false ; return false ; {
rank: 634
score: 98.28670828683036
patch: return ( char ) ch ;
rank: 634
score: 98.19166056315105
patch: CaMeL ; if false ;
rank: 634
score: 98.06671142578125
patch: Plane ) return true ;
rank: 634
score: 97.9818827311198
patch: return ch != false ;
rank: 635
score: 98.76204427083333
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . to CaMeL String ( ) ) + $STRING$ ) ) ;
rank: 635
score: 98.52007293701172
patch: contains = false ; return false ;
rank: 635
score: 98.42352294921875
patch: CaMeL List . add return true ;
rank: 635
score: 98.28636678059895
patch: v return false ; }
rank: 635
score: 98.19147600446429
patch: . ; if ( false )
rank: 635
score: 98.0665283203125
patch: char . return false ;
rank: 635
score: 97.98080008370536
patch: CaMeL += ) false ; ;
rank: 636
score: 98.761474609375
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) + $STRING$ ) ;
rank: 636
score: 98.52006530761719
patch: return ( ch instanceof String ) ;
rank: 636
score: 98.39616176060268
patch: CaMeL ; if false * /
rank: 636
score: 98.28550211588542
patch: return true true ; }
rank: 636
score: 98.19015938895089
patch: * / return true ; }
rank: 636
score: 98.06636962890624
patch: cs return true ;
rank: 636
score: 97.98074340820312
patch: return is != false ;
rank: 637
score: 98.76137966579861
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , null ) ;
rank: 637
score: 98.51875305175781
patch: return cs . trim ( ) ;
rank: 637
score: 98.46209038628473
patch: return ; } if ; return false ;
rank: 637
score: 98.42142486572266
patch: CaMeL String [ ] return false ;
rank: 637
score: 98.28206961495536
patch: return ( cs , ) ;
rank: 637
score: 98.18960135323661
patch: . return false ; break ;
rank: 637
score: 98.06375122070312
patch: return Boolean ) false ;
rank: 637
score: 97.98064313616071
patch: return length ; while false ;
rank: 638
score: 98.76132202148438
patch: result = true ; return false ;
rank: 638
score: 98.65267508370536
patch: return ( byte ) false ;
rank: 638
score: 98.4619140625
patch: return return $NUMBER$ ; } }
rank: 638
score: 98.41688755580357
patch: CaMeL Boolean ; return false ;
rank: 638
score: 98.27920532226562
patch: state return false ; }
rank: 638
score: 98.18912179129464
patch: . return $NUMBER$ & false ;
rank: 638
score: 98.06358642578125
patch: return / * /
rank: 638
score: 97.98063151041667
patch: return 0 == null ;
rank: 639
score: 98.76079644097223
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . to CaMeL String ( ) ) , $STRING$ ) ) ;
rank: 639
score: 98.51595052083333
patch: return cs == false ;
rank: 639
score: 98.46187337239583
patch: return true ; } else if return ;
rank: 639
score: 98.39505440848214
patch: c ; return false ; }
rank: 639
score: 98.27838134765625
patch: m return false ;
rank: 639
score: 98.188720703125
patch: . return Boolean . FALSE ;
rank: 639
score: 98.06304931640625
patch: return false || true ;
rank: 639
score: 97.97929164341518
patch: return size ( false ) ;
rank: 640
score: 98.76054551866319
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) + $STRING$ ) ) ;
rank: 640
score: 98.63686794704861
patch: return ch . equals ( $STRING$ ) ;
rank: 640
score: 98.5132827758789
patch: Plane = search CaMeL Chars [ j
rank: 640
score: 98.46127658420139
patch: return false ; } else return $NUMBER$ ;
rank: 640
score: 98.41548156738281
patch: return this . return ( false ;
rank: 640
score: 98.39495849609375
patch: return new false ; } ;
rank: 640
score: 98.27777099609375
patch: return } } return true ;
rank: 640
score: 98.18854631696429
patch: . return i < false ;
rank: 640
score: 98.06218872070312
patch: ! return false ;
rank: 640
score: 97.97922770182292
patch: CaMeL ; = false ;
rank: 641
score: 98.76051089638158
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) , ch ) ) ;
rank: 641
score: 98.5110855102539
patch: return false } } return true ;
rank: 641
score: 98.41519927978516
patch: CaMeL Enum . return false ; }
rank: 641
score: 98.18722534179688
patch: return is && false ;
rank: 641
score: 98.06094360351562
patch: s return false ; }
rank: 641
score: 97.97889927455357
patch: ; List ( false ) ;
rank: 642
score: 98.76039632161458
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 642
score: 98.509033203125
patch: return search CaMeL Chars . length ;
rank: 642
score: 98.46110704210069
patch: return ; * * / return false ;
rank: 642
score: 98.41470336914062
patch: CaMeL List ; return false ; }
rank: 642
score: 98.27655639648438
patch: state return false ;
rank: 642
score: 98.18707275390625
patch: . return ( false ;
rank: 642
score: 98.05991617838542
patch: Plane * return false ;
rank: 642
score: 97.97831508091518
patch: return return false ; ; ;
rank: 643
score: 98.76028781467014
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) == - $NUMBER$ ;
rank: 643
score: 98.63093566894531
patch: return cs == null || false ;
rank: 643
score: 98.50492858886719
patch: search CaMeL Chars [ j ] ;
rank: 643
score: 98.2762451171875
patch: return ( 1 ) ;
rank: 643
score: 98.18526785714286
patch: = false ; if false ;
rank: 643
score: 98.05990600585938
patch: return true && true ;
rank: 643
score: 97.97670200892857
patch: return 1 ; while false ;
rank: 644
score: 98.75991482204861
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; return false ;
rank: 644
score: 98.45835367838542
patch: return null ; break ;
rank: 644
score: 98.39131382533482
patch: return false false ; ; }
rank: 644
score: 98.2754150390625
patch: return true true ;
rank: 644
score: 98.18409946986607
patch: CaMeL ; false = true ;
rank: 644
score: 98.05968221028645
patch: return true - false ;
rank: 644
score: 97.97667439778645
patch: return length == 0 ;
rank: 645
score: 98.75944010416667
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , cs ) ;
rank: 645
score: 98.50334167480469
patch: return cs . next ( ) ;
rank: 645
score: 98.45612444196429
patch: return ; ? return false ;
rank: 645
score: 98.41168212890625
patch: return true ; return ( false ;
rank: 645
score: 98.39130510602679
patch: t ; return true ; }
rank: 645
score: 98.18339029947917
patch: CaMeL return ( ; }
rank: 645
score: 98.05945841471355
patch: false return true ; }
rank: 645
score: 97.9765625
patch: return return && false ;
rank: 646
score: 98.75833377322635
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . to CaMeL String ( ) ) ) ) ; return false ;
rank: 646
score: 98.6269760131836
patch: return cs != null || false ;
rank: 646
score: 98.50100708007812
patch: return search CaMeL Chars [ j )
rank: 646
score: 98.41129302978516
patch: CaMeL String ; return false ; }
rank: 646
score: 98.38980538504464
patch: . ; if ( false ;
rank: 646
score: 98.27474539620536
patch: return ( false false ) ;
rank: 646
score: 98.18293980189732
patch: CaMeL return false ; break ;
rank: 646
score: 97.97623697916667
patch: CaMeL return ( ) ;
rank: 647
score: 98.75820583767361
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ) ;
rank: 647
score: 98.50025177001953
patch: Plane = null ; return true ;
rank: 647
score: 98.45393589564732
patch: return null ; } * /
rank: 647
score: 98.41109212239583
patch: CaMeL arraycopy return false ;
rank: 647
score: 98.38873291015625
patch: return return ! false ; }
rank: 647
score: 98.2743408203125
patch: v return false ;
rank: 647
score: 98.18226114908855
patch: . . return false ;
rank: 647
score: 98.05508422851562
patch: log return false ; }
rank: 647
score: 97.97622244698661
patch: return is != false ; ;
rank: 648
score: 98.75786528716216
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) , ch ) ) ;
rank: 648
score: 98.6205825805664
patch: return search CaMeL Chars [ } ;
rank: 648
score: 98.49775913783482
patch: return contains ( cs ) ;
rank: 648
score: 98.4107666015625
patch: CaMeL Range < ] return false ;
rank: 648
score: 98.27242606026786
patch: return ( , ch ) ;
rank: 648
score: 98.18213762555804
patch: CaMeL Error return false ; }
rank: 648
score: 97.97605387369792
patch: return ; . false ;
rank: 649
score: 98.75725823479729
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) + $STRING$ ) ) ;
rank: 649
score: 98.49755096435547
patch: Plane = true ; return false ;
rank: 649
score: 98.40947614397321
patch: CaMeL Class ; return false ;
rank: 649
score: 98.18027169363839
patch: CaMeL false return true ; }
rank: 649
score: 98.0544677734375
patch: return 1 ; }
rank: 649
score: 97.9750264485677
patch: return 0 ; return ;
rank: 650
score: 98.75693766276042
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 650
score: 98.4079818725586
patch: CaMeL Range . add ( false ;
rank: 650
score: 97.97496541341145
patch: return return == false ;
rank: 651
score: 98.75673421223958
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , String ) ;
rank: 651
score: 98.6095199584961
patch: return null ? true : false ;
rank: 651
score: 98.49616241455078
patch: return cs == search CaMeL Chars ;
rank: 651
score: 98.44518171037946
patch: return null ; } return ;
rank: 651
score: 98.38518415178571
patch: c = ; return true ;
rank: 651
score: 98.27080426897321
patch: throw new Exception ( $STRING$ ;
rank: 651
score: 98.17919311523437
patch: $NUMBER$ return false ;
rank: 651
score: 98.05255126953125
patch: return $NUMBER$ + false ;
rank: 651
score: 97.97422572544643
patch: CaMeL += ) ) ; ;
rank: 652
score: 98.44466400146484
patch: return ; ;
rank: 652
score: 98.27037556966145
patch: m return false ; }
rank: 652
score: 98.17850167410714
patch: CaMeL false return false ; }
rank: 652
score: 98.05145263671875
patch: Plane count return false ;
rank: 653
score: 98.75609673394098
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) ) ) ;
rank: 653
score: 98.60604095458984
patch: if ( true ) return true ;
rank: 653
score: 98.49417877197266
patch: return search CaMeL Chars [ i ]
rank: 653
score: 98.40567452566964
patch: CaMeL Process . return false ;
rank: 653
score: 98.38443429129464
patch: return is CaMeL Blank ( ;
rank: 653
score: 98.27030029296876
patch: return true false ;
rank: 653
score: 98.17726353236607
patch: * / return false ; }
rank: 653
score: 98.0502217610677
patch: return false * * /
rank: 653
score: 97.97297014508929
patch: false String ; return false ;
rank: 654
score: 98.75596110026042
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . to CaMeL Object ( ) ) ) , ch ) ;
rank: 654
score: 98.60245768229167
patch: if ( false ) { return false ;
rank: 654
score: 98.49313354492188
patch: contains = false ; return true ;
rank: 654
score: 98.44300188337054
patch: CaMeL Runtime . return false ;
rank: 654
score: 98.40457916259766
patch: CaMeL List . return null ; }
rank: 654
score: 98.38399832589286
patch: f = false ; break ;
rank: 654
score: 98.17558942522321
patch: ( false , false ) ;
rank: 654
score: 98.04667154947917
patch: return false & false ;
rank: 654
score: 97.97295270647321
patch: return - ) ; return ;
rank: 655
score: 98.75583902994792
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) , ch ) == - 1 ;
rank: 655
score: 98.44131033761161
patch: return false ; break ; ;
rank: 655
score: 98.40293375651042
patch: return new && false ;
rank: 655
score: 98.38347516741071
patch: this . return true ; }
rank: 655
score: 98.26648966471355
patch: return cs : true ;
rank: 655
score: 98.1754150390625
patch: return filter . false ;
rank: 655
score: 98.04651896158855
patch: } return false ; }
rank: 655
score: 97.97172037760417
patch: return 0 ; System ;
rank: 656
score: 98.75534470016892
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ] ) ) ) ) ;
rank: 656
score: 98.44105021158855
patch: return ; ; } }
rank: 656
score: 98.40171595982143
patch: CaMeL Range . return null ;
rank: 656
score: 98.38259451729911
patch: return false ; default * /
rank: 656
score: 98.2660420735677
patch: return false + 1 ;
rank: 656
score: 98.17450823102679
patch: * / if ( false )
rank: 656
score: 98.04588826497395
patch: return 1 ; } }
rank: 656
score: 97.97066824776786
patch: CaMeL ch ( true ) ;
rank: 657
score: 98.75526258680556
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) , ch ) ) ) ;
rank: 657
score: 98.4354248046875
patch: return false ; else
rank: 657
score: 98.40043131510417
patch: CaMeL j return false ;
rank: 657
score: 98.38206990559895
patch: $NUMBER$ return false ; }
rank: 657
score: 98.2655517578125
patch: true return false ;
rank: 657
score: 98.17262776692708
patch: . . return true ;
rank: 657
score: 98.04435221354167
patch: System return false ; }
rank: 657
score: 97.97062465122768
patch: return length != false ; ;
rank: 658
score: 98.75508626302083
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . value CaMeL Of ( search CaMeL Chars [ j ] ) ) ) ) ;
rank: 658
score: 98.47692260742187
patch: false return true ;
rank: 658
score: 98.43492780412946
patch: return return || false ; }
rank: 658
score: 98.39641462053571
patch: CaMeL Object false return false ;
rank: 658
score: 98.38093784877232
patch: m ; return false ; }
rank: 658
score: 98.04315185546875
patch: CaMeL List return true ;
rank: 658
score: 97.9696044921875
patch: return ! return 1 ;
rank: 659
score: 98.75497097439236
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( i ) ) , ch ) ) ;
rank: 659
score: 98.43064662388393
patch: return is false return false ;
rank: 659
score: 98.39485386439732
patch: CaMeL Number false return null ;
rank: 659
score: 98.17167445591518
patch: return - 1 & false ;
rank: 659
score: 98.0394287109375
patch: return cs != null ;
rank: 659
score: 97.96690877278645
patch: return size == false ;
rank: 660
score: 98.75468486064189
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) , ch ) ) ) ;
rank: 660
score: 98.5861587524414
patch: return cs == null && true ;
rank: 660
score: 98.42983572823661
patch: return ; } } return ;
rank: 660
score: 98.39440046037946
patch: CaMeL Exception false return null ;
rank: 660
score: 98.25874633789063
patch: s return false ;
rank: 660
score: 98.17067173549107
patch: ( false , true , ;
rank: 660
score: 98.03887939453125
patch: return ( null ) ;
rank: 660
score: 97.96580287388393
patch: return true ; ; false ;
rank: 661
score: 98.75381630345395
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) , ch ) ) ;
rank: 661
score: 98.57597351074219
patch: return ch == null && false ;
rank: 661
score: 98.4271748860677
patch: return false ; while ;
rank: 661
score: 98.39290073939732
patch: CaMeL Null ; return false ;
rank: 661
score: 98.16646321614583
patch: CaMeL ] return true ;
rank: 661
score: 97.96517508370536
patch: return 0 == 0 ; ;
rank: 662
score: 98.75374788851352
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . to CaMeL String ( ) ) ) ) ; return true ;
rank: 662
score: 98.42682756696429
patch: return true ; } else ;
rank: 662
score: 98.37751116071429
patch: s * / return false ;
rank: 662
score: 98.25644356863839
patch: if ( search CaMeL Len >=
rank: 662
score: 98.03369140625
patch: return null && false ;
rank: 662
score: 97.96502685546875
patch: CaMeL read ( false ) ;
rank: 663
score: 98.75355931332237
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; return false ;
rank: 663
score: 98.5635477701823
patch: try { return true ;
rank: 663
score: 98.42624918619792
patch: return ; return true ;
rank: 663
score: 98.38863699776786
patch: CaMeL String return false ; ;
rank: 663
score: 98.16421944754464
patch: . return super . false ;
rank: 663
score: 98.03316243489583
patch: return new String ) ;
rank: 663
score: 97.96358816964286
patch: CaMeL Thread return false ; ;
rank: 664
score: 98.38534545898438
patch: return new Integer false ;
rank: 664
score: 98.37672932942708
patch: return ~ false ; }
rank: 664
score: 98.16395060221355
patch: . if ( false )
rank: 664
score: 98.0321553548177
patch: ( return false ) ;
rank: 664
score: 97.9635009765625
patch: ( true ) ; return ;
rank: 665
score: 98.75116131756756
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; break ;
rank: 665
score: 98.41595458984375
patch: return cs == ch ;
rank: 665
score: 98.25437418619792
patch: return ! return ; }
rank: 665
score: 98.16375732421875
patch: $NUMBER$ ; return false ;
rank: 665
score: 98.0301513671875
patch: return cs . length ;
rank: 665
score: 97.96104213169643
patch: return ! ) ; ; ;
rank: 666
score: 98.74989442567568
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) , cs ) ;
rank: 666
score: 98.38151041666667
patch: return super . false ;
rank: 666
score: 98.37596784319196
patch: return false ; * / ;
rank: 666
score: 98.25128173828125
patch: index CaMeL Of ( ch )
rank: 666
score: 98.16201346261161
patch: CaMeL ; return true ; ;
rank: 666
score: 98.02755737304688
patch: System . return false ;
rank: 666
score: 97.95947265625
patch: return size return false ;
rank: 667
score: 98.74984163851352
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . last CaMeL Index CaMeL Of ( $STRING$ ) ) ) , ch ) ;
rank: 667
score: 98.38058907645089
patch: CaMeL Exception = false ; else
rank: 667
score: 98.37508719308036
patch: return true return false ; }
rank: 667
score: 98.25091552734375
patch: return true + 1 ;
rank: 667
score: 98.02603149414062
patch: Plane out return true ;
rank: 667
score: 97.95936075846355
patch: return size == 0 ;
rank: 668
score: 98.74957110430744
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) , cs ) ) ;
rank: 668
score: 98.54714965820312
patch: return null ? false : true ;
rank: 668
score: 98.41035679408482
patch: return ! search CaMeL Chars ;
rank: 668
score: 98.37479073660714
patch: s . return false ; }
rank: 668
score: 98.247314453125
patch: throw new Throwable ( ) ;
rank: 668
score: 98.15951102120536
patch: . return true ; false ;
rank: 668
score: 98.0225830078125
patch: return 1 ;
rank: 669
score: 98.74920975534539
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; return true ;
rank: 669
score: 98.41135951450893
patch: return ; , return false ;
rank: 669
score: 98.37887137276786
patch: CaMeL Exception ; return true ;
rank: 669
score: 98.2472900390625
patch: this return true ;
rank: 669
score: 98.02162679036458
patch: method return false ; }
rank: 669
score: 97.957275390625
patch: return $NUMBER$ ; break ;
rank: 670
score: 98.74893105996621
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . index CaMeL Of ( ch ) ) , ch ) ) ;
rank: 670
score: 98.41006905691964
patch: return is ; } * /
rank: 670
score: 98.37293352399554
patch: p = false ; ; ;
rank: 670
score: 98.24679565429688
patch: throw new Runnable ( )
rank: 670
score: 98.01877848307292
patch: Plane 0 return false ;
rank: 670
score: 97.95723470052083
patch: ( ; return false ;
rank: 671
score: 98.74842958192568
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , ch ) == 0 ;
rank: 671
score: 98.40696207682292
patch: Plane = false ; }
rank: 671
score: 98.40646798270089
patch: return return is return true ;
rank: 671
score: 98.24601236979167
patch: return ( 0 ) ;
rank: 671
score: 98.15358189174107
patch: . return i != 0 ;
rank: 671
score: 98.0183614095052
patch: Plane ; return true ;
rank: 671
score: 97.9569091796875
patch: return $NUMBER$ . false ;
rank: 672
score: 98.74503800675676
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . to CaMeL String ( i ) ) ) , ch ) ;
rank: 672
score: 98.4058329264323
patch: return this . return ;
rank: 672
score: 98.4045918782552
patch: return false = false ;
rank: 672
score: 98.37726702008929
patch: CaMeL Range return false ; }
rank: 672
score: 98.15275355747768
patch: CaMeL false false = false ;
rank: 672
score: 98.00821940104167
patch: ch return true ; }
rank: 672
score: 97.95588030133929
patch: return ! == false ; ;
rank: 673
score: 98.50408935546875
patch: if ( ) { return false ;
rank: 673
score: 98.40536499023438
patch: return false ; if ;
rank: 673
score: 98.39862060546875
patch: return cs == null ;
rank: 673
score: 98.36798095703125
patch: return ! ( ; }
rank: 673
score: 98.24266706194196
patch: catch ( $STRING$ , $STRING$ )
rank: 673
score: 98.00785319010417
patch: return false ? true ;
rank: 674
score: 98.74456292229729
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) + $STRING$ ) ;
rank: 674
score: 98.40123494466145
patch: return is ; } else
rank: 674
score: 98.37425740559895
patch: CaMeL Byte return false ;
rank: 674
score: 98.36546107700893
patch: b . return false ; }
rank: 674
score: 98.00754801432292
patch: if ] return false ;
rank: 674
score: 97.95023890904018
patch: return 0 . false ; ;
rank: 675
score: 98.74444415118244
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) , false ) ;
rank: 675
score: 98.40043131510417
patch: return ; * * /
rank: 675
score: 98.3741943359375
patch: return false ; false
rank: 675
score: 98.36533900669643
patch: CaMeL ; false = false ;
rank: 675
score: 98.24089704241071
patch: return ( - 1 ) ;
rank: 675
score: 98.14968436104911
patch: $NUMBER$ ; return false ; }
rank: 675
score: 98.0029296875
patch: return ( this ) ;
rank: 675
score: 97.95013427734375
patch: return ch == false ;
rank: 676
score: 98.74421772203948
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 676
score: 98.39817592075893
patch: CaMeL Builder return false ; }
rank: 676
score: 98.3740946451823
patch: return new false ; ;
rank: 676
score: 98.3641357421875
patch: . return false false ; }
rank: 676
score: 98.14944458007812
patch: Utilities . return false ;
rank: 676
score: 97.94947306315105
patch: return $NUMBER$ == false ;
rank: 677
score: 98.74297270903716
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; }
rank: 677
score: 98.39521135602679
patch: return ; } } if ;
rank: 677
score: 98.38214111328125
patch: Plane ( ) return false ;
rank: 677
score: 98.37404087611607
patch: CaMeL Range ; return true ;
rank: 677
score: 98.36275227864583
patch: return ! is ; }
rank: 677
score: 98.14869035993304
patch: CaMeL Exception false = true ;
rank: 677
score: 98.00228881835938
patch: return * * /
rank: 677
score: 97.94932338169643
patch: CaMeL *= ) ; return ;
rank: 678
score: 98.38193184988839
patch: Plane = cs . char CaMeL
rank: 678
score: 98.36167399088542
patch: return false return true ;
rank: 678
score: 98.24007161458333
patch: break . return false ;
rank: 678
score: 98.1478983561198
patch: [ ] return true ;
rank: 678
score: 97.94783238002232
patch: CaMeL ( ) ; false ;
rank: 679
score: 98.74158044763513
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) , cs ) ) ;
rank: 679
score: 98.49220493861607
patch: return ( Character ) false ;
rank: 679
score: 98.39067731584821
patch: return is ; } break ;
rank: 679
score: 98.37706647600446
patch: return new String ( ) ;
rank: 679
score: 98.37138148716518
patch: CaMeL Exception ; return null ;
rank: 679
score: 98.36046491350446
patch: $NUMBER$ return false ; } }
rank: 679
score: 98.23921421595982
patch: return ( boolean ) true ;
rank: 679
score: 98.14778355189732
patch: CaMeL Error false = false ;
rank: 679
score: 97.99989013671875
patch: char return false ;
rank: 679
score: 97.94744001116071
patch: return false . false ; ;
rank: 680
score: 98.73894768792229
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( i ) ) , ch ) ) ;
rank: 680
score: 98.36838204520089
patch: if ( search CaMeL Chars [
rank: 680
score: 98.35833740234375
patch: a * / return false ;
rank: 680
score: 98.23892647879464
patch: if ( search CaMeL Len <=
rank: 680
score: 98.14747837611607
patch: . return - 1 ; }
rank: 680
score: 97.99784342447917
patch: c return true ; }
rank: 680
score: 97.94740513392857
patch: CaMeL ~ ( 1 ) ;
rank: 681
score: 98.73885531038852
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) , $STRING$ ) ;
rank: 681
score: 98.48906598772321
patch: return ( byte ) true ;
rank: 681
score: 98.38735961914062
patch: return is ;
rank: 681
score: 98.36780657087054
patch: return this ; return null ;
rank: 681
score: 98.3580322265625
patch: return true ; ; ; }
rank: 681
score: 98.23583984375
patch: b return false ; } }
rank: 681
score: 98.14649454752605
patch: CaMeL return return false ;
rank: 681
score: 97.9955342610677
patch: { throw null ; }
rank: 681
score: 97.94637625558036
patch: CaMeL ~ ( return ) ;
rank: 682
score: 98.73867715371621
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL Lower CaMeL Case ( i ) ) ) , ch ) ;
rank: 682
score: 98.47815704345703
patch: return ( ! String ) false ;
rank: 682
score: 98.38685099283855
patch: return is return true ;
rank: 682
score: 98.35723005022321
patch: return return true ; ; }
rank: 682
score: 98.2357177734375
patch: this return ( false ) ;
rank: 682
score: 97.99362182617188
patch: temp return false ; }
rank: 683
score: 98.73736407305744
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) , null ) ;
rank: 683
score: 98.46114349365234
patch: for ( int j = 0 )
rank: 683
score: 98.38639613560268
patch: return is false ; } else
rank: 683
score: 98.36444963727679
patch: CaMeL Range + return false ;
rank: 683
score: 98.35877336774554
patch: Plane return ch == ch ;
rank: 683
score: 98.35594831194196
patch: m = ; return true ;
rank: 683
score: 98.23391723632812
patch: return ( char ) ;
rank: 683
score: 97.99185791015626
patch: Plane = false ;
rank: 683
score: 97.94265747070312
patch: return ! && false ;
rank: 684
score: 98.35581752232143
patch: Tools . return false ; }
rank: 684
score: 98.23388671875
patch: if ( ) return true ;
rank: 684
score: 98.14453125
patch: CaMeL Pair = false ;
rank: 684
score: 97.94242350260417
patch: return ! 1 ; ;
rank: 685
score: 98.73680320945945
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . last CaMeL Index CaMeL Of ( $STRING$ ) ) , ch ) ) ;
rank: 685
score: 98.38081577845982
patch: return false ; for false ;
rank: 685
score: 98.36289760044643
patch: CaMeL Null false return false ;
rank: 685
score: 98.23313395182292
patch: return ch == null ;
rank: 685
score: 98.1417236328125
patch: = ( char ) false ;
rank: 685
score: 97.98914794921875
patch: contains return true ;
rank: 685
score: 97.93848673502605
patch: return 0 . $NUMBER$ ;
rank: 686
score: 98.73653927364865
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( i ) ) , ch ) ) ;
rank: 686
score: 98.45680236816406
patch: return cs != null . false ;
rank: 686
score: 98.37816510881696
patch: return false ; break ; else
rank: 686
score: 98.35933140345982
patch: CaMeL List false return true ;
rank: 686
score: 98.3548583984375
patch: return search CaMeL Chars [
rank: 686
score: 98.232666015625
patch: break [ 0 ] ;
rank: 686
score: 98.13993326822917
patch: . return ( ; }
rank: 686
score: 97.98795572916667
patch: ( [ j ] )
rank: 686
score: 97.93389892578125
patch: return - != 0 ;
rank: 687
score: 98.45370483398438
patch: return ch == null + ch ;
rank: 687
score: 98.37797328404018
patch: return null ; } break ;
rank: 687
score: 98.35551234654018
patch: CaMeL Exception return false false ;
rank: 687
score: 98.35479736328125
patch: 16 . return false ; }
rank: 687
score: 97.98734537760417
patch: return this false ; }
rank: 687
score: 97.93387858072917
patch: return $NUMBER$ != false ;
rank: 688
score: 98.73479069890203
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; } }
rank: 688
score: 98.37772042410714
patch: return null ; } } ;
rank: 688
score: 98.35493687220982
patch: CaMeL Exception false return true ;
rank: 688
score: 98.2314697265625
patch: if ( ) {
rank: 688
score: 97.92864990234375
patch: CaMeL += ) ) ;
rank: 689
score: 98.73397249788852
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) ) , true ) ;
rank: 689
score: 98.37763323102679
patch: return false ; if return ;
rank: 689
score: 98.35433523995536
patch: CaMeL Number false return true ;
rank: 689
score: 98.35348074776786
patch: s ; return true ; }
rank: 689
score: 98.23117501395089
patch: return ( char ) cs ;
rank: 689
score: 98.13725062779018
patch: ( false , true ) ;
rank: 689
score: 97.92818196614583
patch: CaMeL += ) false ;
rank: 690
score: 98.37650844029018
patch: return null ; } if ;
rank: 690
score: 98.35251290457589
patch: CaMeL Object ; return false ;
rank: 690
score: 98.2310078938802
patch: return cs = false ;
rank: 690
score: 97.97857666015625
patch: return return 0 ; }
rank: 690
score: 97.92437744140625
patch: return - ) ;
rank: 691
score: 98.73288376266892
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) , String ) ) ;
rank: 691
score: 98.37650553385417
patch: return return is false ;
rank: 691
score: 98.35245186941964
patch: return new Boolean return false ;
rank: 691
score: 98.34686279296875
patch: Plane return search CaMeL Chars ;
rank: 691
score: 98.22837320963542
patch: return ch = false ;
rank: 691
score: 97.97847900390624
patch: Plane * * /
rank: 692
score: 98.35029296875
patch: m = false ;
rank: 692
score: 98.22684326171876
patch: return ! return ;
rank: 692
score: 97.97719319661458
patch: return true ? false ;
rank: 692
score: 97.92197672526042
patch: return count != 0 ;
rank: 693
score: 98.73201277449324
patch: char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) , $STRING$ ) ) ;
rank: 693
score: 98.35098702566964
patch: return false ; return value ;
rank: 693
score: 98.34832763671875
patch: 64 . return false ;
rank: 693
score: 98.34128243582589
patch: return false ( false ) ;
rank: 693
score: 98.12892368861607
patch: . return i == 0 ;
rank: 693
score: 97.9763692220052
patch: return this ? true ;
rank: 693
score: 97.9215087890625
patch: CaMeL return ) ; ;
rank: 694
score: 98.73154428842905
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . index CaMeL Of ( ch ) ) ) , $STRING$ ) ;
rank: 694
score: 98.44138009207589
patch: return ( String ) null ;
rank: 694
score: 98.37286376953125
patch: return ; : return false ;
rank: 694
score: 98.35097249348958
patch: return new ! false ;
rank: 694
score: 98.34652709960938
patch: return ( ch ; }
rank: 694
score: 98.33992222377232
patch: search CaMeL Chars return false ;
rank: 694
score: 98.2246602376302
patch: break [ i ] ;
rank: 694
score: 97.97422281901042
patch: surrogate return false ; }
rank: 694
score: 97.9210205078125
patch: return return != 0 ;
rank: 695
score: 98.73064030827703
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) + ch ) ) ;
rank: 695
score: 98.36936732700893
patch: return ; / * * /
rank: 695
score: 98.2239481608073
patch: finally return false ; }
rank: 695
score: 98.12616838727679
patch: CaMeL return false ; ; }
rank: 695
score: 97.97330322265626
patch: log return false ;
rank: 695
score: 97.91827392578125
patch: return $NUMBER$ return false ;
rank: 696
score: 98.73064030827703
patch: . String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ] ) ) ) ) ;
rank: 696
score: 98.34870256696429
patch: return get ( false ) ;
rank: 696
score: 98.34473528180804
patch: return ! ! false ; }
rank: 696
score: 98.12540980747768
patch: . is false = true ;
rank: 696
score: 97.97306315104167
patch: return false ; } {
rank: 697
score: 98.72984190244932
patch: return . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . char CaMeL At ( j ) ) ) , $STRING$ ) == 0 ;
rank: 697
score: 98.36752755301339
patch: return is return return false ;
rank: 697
score: 98.3480224609375
patch: CaMeL Class return false ; ;
rank: 697
score: 98.33575439453125
patch: return false = true ;
rank: 697
score: 98.22174072265625
patch: this return true ; }
rank: 697
score: 98.12373860677083
patch: . equals ( ch )
rank: 697
score: 97.97212727864583
patch: char return true ; }
rank: 697
score: 97.91612752278645
patch: return 0 - 0 ;
rank: 698
score: 98.72897751266892
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . cs . char CaMeL At ( j ) ) ) ) ; return false ;
rank: 698
score: 98.36692592075893
patch: CaMeL Thread return false ; }
rank: 698
score: 98.34737723214286
patch: CaMeL String false return null ;
rank: 698
score: 98.2213623046875
patch: return boolean false ;
rank: 698
score: 98.12229410807292
patch: $NUMBER$ ? return false ;
rank: 698
score: 97.9694315592448
patch: return true / * /
rank: 698
score: 97.9155985514323
patch: return 0 != true ;
rank: 699
score: 98.72893792229729
patch: . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; return false ;
rank: 699
score: 98.34706333705357
patch: CaMeL List = return false ;
rank: 699
score: 98.34168352399554
patch: return ( Character . ; }
rank: 699
score: 98.12187848772321
patch: return is && false ; }
rank: 699
score: 97.965771484375
patch: ) return true ;
rank: 699
score: 97.91469319661458
patch: return 0 return 0 ;
rank: 700
score: 98.72889833192568
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . char CaMeL At ( j ) ) ) ) ; return false ;
rank: 700
score: 98.408447265625
patch: return ( short ) false ;
rank: 700
score: 98.36458914620536
patch: return ; , * * /
rank: 700
score: 98.34117635091145
patch: c = false ; ;
rank: 700
score: 98.12108764648437
patch: CaMeL ; break ;
rank: 700
score: 97.91162109375
patch: return - ) ; ;
rank: 701
score: 98.72885874155405
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) + $STRING$ ) ) ) ;
rank: 701
score: 98.36366489955357
patch: return is false ; break ;
rank: 701
score: 98.34096272786458
patch: . ; return false ;
rank: 701
score: 98.12076416015626
patch: return - 1 ;
rank: 701
score: 97.91082763671875
patch: return ; return 0 ;
rank: 702
score: 98.72848923141892
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . to CaMeL String ( ) ) ) ) ) ;
rank: 702
score: 98.40316336495536
patch: return ( Boolean ) false ;
rank: 702
score: 98.34059361049107
patch: return char CaMeL At ( ;
rank: 702
score: 98.33933803013393
patch: return true ; false ; ;
rank: 702
score: 98.21944173177083
patch: state . return false ;
rank: 702
score: 98.11942545572917
patch: CaMeL return return true ;
rank: 702
score: 97.9102274576823
patch: return is return 0 ;
rank: 703
score: 98.72831107474663
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . to CaMeL String ( i ) ) , ch ) ) ;
rank: 703
score: 98.34041050502232
patch: p = false ; false ;
rank: 703
score: 98.33894566127232
patch: return new int return false ;
rank: 703
score: 98.1170654296875
patch: return true && false ; }
rank: 703
score: 97.90797932942708
patch: return return != 1 ;
rank: 704
score: 98.72765783361487
patch: . char . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) ) ) ;
rank: 704
score: 98.33904157366071
patch: CaMeL ; for false * /
rank: 704
score: 98.33854457310268
patch: return false ; false false ;
rank: 704
score: 98.32443673270089
patch: return search CaMeL Len 1 ;
rank: 704
score: 98.21508178710937
patch: break = false ;
rank: 704
score: 98.11529541015625
patch: return new return true ;
rank: 704
score: 97.93280029296875
patch: logger return false ;
rank: 704
score: 97.9060567220052
patch: return name return false ;
rank: 705
score: 98.72732204861111
patch: return $STRING$ . contains ( ch ) ;
rank: 705
score: 98.33835274832589
patch: CaMeL String = return false ;
rank: 705
score: 98.336181640625
patch: c ; return true ; }
rank: 705
score: 98.32350667317708
patch: return this == ch ;
rank: 705
score: 98.21466064453125
patch: return true || false ;
rank: 705
score: 98.11269124348958
patch: CaMeL ; j ++ ;
rank: 705
score: 97.9054463704427
patch: return is == 0 ;
rank: 706
score: 98.72688582136824
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( search CaMeL Chars . to CaMeL Lower CaMeL Case ( j ) ) ) , ch ) ;
rank: 706
score: 98.33807373046875
patch: CaMeL Enum = false ;
rank: 706
score: 97.92061614990234
patch: return $STRING$ ;
rank: 706
score: 97.90420532226562
patch: return - != 1 ;
rank: 707
score: 98.72680004222973
patch: . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . to CaMeL String ( cs . char CaMeL At ( j ) ) ) ) ) ;
rank: 707
score: 98.35622732979911
patch: return true ; } * ;
rank: 707
score: 98.3367919921875
patch: return new byte return false ;
rank: 707
score: 98.33564976283482
patch: return ch != null ; }
rank: 707
score: 98.31979806082589
patch: } } } return false ;
rank: 707
score: 98.21225992838542
patch: return cs + 1 ;
rank: 707
score: 98.11192975725446
patch: . return true ; break ;
rank: 707
score: 97.90150960286458
patch: CaMeL Builder . false ;
rank: 708
score: 98.72648331925676
patch: String . index CaMeL Of ( String . index CaMeL Of ( String . index CaMeL Of ( String . search CaMeL Chars . char CaMeL At ( j ) ) ) + $STRING$ ) ;
rank: 708
score: 98.37030029296875
patch: return ( Object ) false ;
rank: 708
score: 98.35580880301339
patch: return true ; else return ;
rank: 708
score: 98.33136858258929
patch: CaMeL Class . return null ;
rank: 708
score: 98.11181640625
patch: CaMeL Process return true ;
rank: 708
score: 97.9151611328125
patch: return false ) ;
rank: 708
score: 97.90102132161458
patch: return ; = ; ;
rank: 709
score: 98.72623443603516
patch: throw new String ( $STRING$ ) ;
rank: 709
score: 98.35560825892857
patch: return is ; return null ;
rank: 709
score: 98.31607491629464
patch: return ( search CaMeL Chars [
rank: 709
score: 97.9148193359375
patch: System return false ;
rank: 710
score: 98.72623258023648
patch: String . index CaMeL Of ( String . char CaMeL At ( search CaMeL Chars . index CaMeL Of ( search CaMeL Chars . char CaMeL At ( j ) ) , null ) ) ;
rank: 710
score: 98.35549926757812
patch: return ; ; } else
rank: 710
score: 98.10850016276042
patch: CaMeL return ! false ;
rank: 710
score: 97.91275024414062
patch: return $STRING$ ; }
rank: 711
score: 98.35294015066964
patch: return ( char ) null ;
rank: 711
score: 98.33400181361607
patch: return false ? false : ;
rank: 711
score: 98.31546630859376
patch: result return true ;
rank: 711
score: 98.1066182454427
patch: . return false false ;
rank: 711
score: 97.90838623046875
patch: Plane return 0 ;
rank: 711
score: 97.89267985026042
patch: return - != false ;
rank: 712
score: 98.71239556206598
patch: . contains CaMeL None ( ch ) ;
rank: 712
score: 98.35036795479911
patch: return ; * return false ;
rank: 712
score: 98.30904134114583
patch: return cs == true ;
rank: 712
score: 98.10600062779018
patch: return get CaMeL Default ( ;
rank: 712
score: 97.90752563476562
patch: return this false ;
rank: 712
score: 97.89204915364583
patch: return ch ; break ;
rank: 713
score: 98.35159737723214
patch: return ( Character ) true ;
rank: 713
score: 98.34871128627232
patch: return ; ; } * /
rank: 713
score: 98.33299037388393
patch: return ch > - 1 ;
rank: 713
score: 98.32552083333333
patch: false { return false ;
rank: 713
score: 98.30638776506696
patch: Plane = false ; } }
rank: 713
score: 98.20613606770833
patch: return return cs ; }
rank: 713
score: 98.10299246651786
patch: return index CaMeL Of ( ;
rank: 713
score: 97.90515747070313
patch: method return false ;
rank: 714
score: 98.69159613715277
patch: ( cs , search CaMeL Chars ) ;
rank: 714
score: 98.32525634765625
patch: CaMeL Number return false false ;
rank: 714
score: 98.30050659179688
patch: return true = false ;
rank: 714
score: 98.20313517252605
patch: return ! ! false ;
rank: 714
score: 98.1019795735677
patch: ( ; break ; }
rank: 714
score: 97.90191040039062
patch: static return true ;
rank: 714
score: 97.88722737630208
patch: return ) + false ;
rank: 715
score: 98.34794108072917
patch: return true ; } finally
rank: 715
score: 98.32974679129464
patch: ( ; return false ; }
rank: 715
score: 98.32310994466145
patch: CaMeL read return false ;
rank: 715
score: 98.30013602120536
patch: return cs == false ) ;
rank: 715
score: 98.20259602864583
patch: return return ; } }
rank: 715
score: 97.8961669921875
patch: Basic return false ;
rank: 716
score: 98.689697265625
patch: result = true ; return true ;
rank: 716
score: 98.34700230189732
patch: return return is CaMeL True ;
rank: 716
score: 98.32861328125
patch: p ; return false ;
rank: 716
score: 98.32138497488839
patch: return $STRING$ ; return false ;
rank: 716
score: 98.29987444196429
patch: return ( cs boolean ) ;
rank: 716
score: 98.20238647460937
patch: return = true ;
rank: 716
score: 98.09994506835938
patch: CaMeL return true ; ;
rank: 716
score: 97.88759765625
patch: Plane [ i ]
rank: 716
score: 97.88491821289062
patch: CaMeL sum return false ;
rank: 717
score: 98.68807220458984
patch: throw new String ( cs ) ;
rank: 717
score: 98.32795933314732
patch: b = false ; break ;
rank: 717
score: 98.3212178548177
patch: CaMeL i return false ;
rank: 717
score: 98.2984110514323
patch: return ( search CaMeL Chars
rank: 717
score: 98.09873453776042
patch: CaMeL return false false ;
rank: 717
score: 97.88413492838542
patch: return 0 ? false ;
rank: 718
score: 98.34417724609375
patch: return false ; } finally {
rank: 718
score: 98.33470807756696
patch: return cs == null * /
rank: 718
score: 98.32108851841518
patch: CaMeL Exception = false ; ;
rank: 718
score: 98.29537527901786
patch: return false { return false ;
rank: 718
score: 98.2005106608073
patch: } } return true ;
rank: 718
score: 98.0933837890625
patch: return i == false ;
rank: 718
score: 97.88455200195312
patch: return return 0 ;
rank: 718
score: 97.88272094726562
patch: return false ; ; /
rank: 719
score: 98.32030232747395
patch: CaMeL Object = false ;
rank: 719
score: 98.09297398158482
patch: . get CaMeL Default ( ;
rank: 719
score: 97.883349609375
patch: ; return true ;
rank: 719
score: 97.8819580078125
patch: return ! ) ;
rank: 720
score: 98.6737060546875
patch: return ( cs == null ) ;
rank: 720
score: 98.31932721819196
patch: CaMeL Exception ( false ) ;
rank: 720
score: 98.29317801339286
patch: return search CaMeL Chars ; }
rank: 720
score: 98.19823201497395
patch: break : return false ;
rank: 720
score: 97.881591796875
patch: return 1 ; break ;
rank: 720
score: 97.880419921875
patch: return == false ;
rank: 721
score: 98.31812540690105
patch: return new return ) ;
rank: 721
score: 98.28725760323661
patch: return ! search CaMeL Len ;
rank: 721
score: 98.19687906901042
patch: t return true ; }
rank: 721
score: 98.09137834821429
patch: CaMeL Exception false = false ;
rank: 721
score: 97.87991333007812
patch: return 0 == true ;
rank: 721
score: 97.87940673828125
patch: return ) ; }
rank: 722
score: 98.66625213623047
patch: throw new String ( ch ) ;
rank: 722
score: 98.32012939453125
patch: 16 . return false ;
rank: 722
score: 98.31722005208333
patch: CaMeL value = false ;
rank: 722
score: 98.19580078125
patch: p return false ; }
rank: 722
score: 97.8679931640625
patch: ch return true ;
rank: 723
score: 98.66165500217014
patch: return cs . equals ( $STRING$ ) ;
rank: 723
score: 98.33850969587054
patch: return null ; } else ;
rank: 723
score: 98.31719098772321
patch: return new is ( ) ;
rank: 723
score: 98.3159891764323
patch: if ( search CaMeL Chars
rank: 723
score: 98.09005737304688
patch: CaMeL false |= false ;
rank: 723
score: 97.8792724609375
patch: return 1 . false ;
rank: 723
score: 97.86712646484375
patch: c return true ;
rank: 724
score: 98.3162841796875
patch: CaMeL List . return true ;
rank: 724
score: 98.31435139973958
patch: return false - 1 ;
rank: 724
score: 97.87845865885417
patch: return ! != 0 ;
rank: 724
score: 97.85326538085937
patch: return false * /
rank: 725
score: 98.65935516357422
patch: throw new String ( String ) ;
rank: 725
score: 98.33672223772321
patch: return false ; while ; }
rank: 725
score: 98.31461879185268
patch: CaMeL Enum return false ; ;
rank: 725
score: 98.29708862304688
patch: return i >= false ;
rank: 725
score: 98.08441162109375
patch: . false return true ;
rank: 725
score: 97.87694295247395
patch: return - == false ;
rank: 725
score: 97.84846801757813
patch: String [ ] )
rank: 726
score: 98.31461007254464
patch: CaMeL Byte false return false ;
rank: 726
score: 98.19260660807292
patch: return return ( true ;
rank: 726
score: 98.08348999023437
patch: CaMeL return ( ;
rank: 726
score: 97.87605794270833
patch: return ch == 0 ;
rank: 726
score: 97.84827880859375
patch: Plane / * /
rank: 727
score: 98.33426339285714
patch: return is ; } if ;
rank: 727
score: 98.31366838727679
patch: CaMeL arraycopy ; return false ;
rank: 727
score: 98.30259486607143
patch: return ( long ) false ;
rank: 727
score: 98.29190673828126
patch: return ; } ;
rank: 727
score: 98.19252319335938
patch: t return true ;
rank: 727
score: 98.07838657924107
patch: [ ; if ( false )
rank: 727
score: 97.87042236328125
patch: return ; = true ;
rank: 727
score: 97.8478759765625
patch: throw true ; }
rank: 728
score: 98.65379333496094
patch: return ( cs != null ) ;
rank: 728
score: 98.33423868815105
patch: return return $NUMBER$ ; }
rank: 728
score: 98.31201171875
patch: CaMeL Number = true ;
rank: 728
score: 98.30036272321429
patch: return true ? return false ;
rank: 728
score: 98.28961181640625
patch: return ( byte ) ;
rank: 728
score: 97.86965942382812
patch: return ; = 0 ;
rank: 728
score: 97.84608154296875
patch: temp return false ;
rank: 729
score: 98.64957682291667
patch: . index CaMeL Of ( ch ) ;
rank: 729
score: 98.31050618489583
patch: CaMeL Range = true ;
rank: 729
score: 98.26397705078125
patch: else return true ;
rank: 729
score: 98.18904622395833
patch: b return return true ;
rank: 729
score: 98.07276407877605
patch: CaMeL Number return true ;
rank: 729
score: 97.86781819661458
patch: CaMeL ch return true ;
rank: 729
score: 97.84595336914063
patch: } return true ;
rank: 730
score: 98.64020538330078
patch: return ( ch != ch ) ;
rank: 730
score: 98.33181326729911
patch: return is CaMeL True false ;
rank: 730
score: 98.31039864676339
patch: CaMeL Boolean return false ; ;
rank: 730
score: 98.2850850423177
patch: return ; } * /
rank: 730
score: 98.18739827473958
patch: ret = false ; }
rank: 730
score: 98.07261149088542
patch: [ ] return false ;
rank: 731
score: 98.32973807198661
patch: return ; } } * /
rank: 731
score: 98.30857631138393
patch: CaMeL value return false ; ;
rank: 731
score: 98.1860860188802
patch: return cs return true ;
rank: 731
score: 98.0717061360677
patch: . value return true ;
rank: 731
score: 97.86329142252605
patch: ( ; = false ;
rank: 731
score: 97.84304809570312
patch: char return true ;
rank: 732
score: 98.32796805245536
patch: return is ; } return ;
rank: 732
score: 98.30852399553571
patch: CaMeL Category false return false ;
rank: 732
score: 98.28920200892857
patch: result try { return false ;
rank: 732
score: 98.28206380208333
patch: return ; } else {
rank: 732
score: 98.1851094563802
patch: do return false ; }
rank: 732
score: 97.8611551920573
patch: return ~ false ; ;
rank: 733
score: 98.2814432779948
patch: return ( ; ; }
rank: 733
score: 98.25653076171875
patch: return is = false ;
rank: 733
score: 98.18508911132812
patch: return ( j ) ;
rank: 733
score: 98.06988525390625
patch: 32 . return false ;
rank: 734
score: 98.32469831194196
patch: return false ; else break ;
rank: 734
score: 98.30447823660714
patch: CaMeL j return false ; ;
rank: 734
score: 98.25146484375
patch: cs . return false ;
rank: 734
score: 98.1847635904948
patch: return contains = false ;
rank: 734
score: 98.06946818033855
patch: CaMeL ] = false ;
rank: 734
score: 97.85841878255208
patch: return ; + false ;
rank: 734
score: 97.83607177734375
patch: ! return true ;
rank: 735
score: 98.32431030273438
patch: return return is ; }
rank: 735
score: 98.28138427734375
patch: ret return false ;
rank: 735
score: 98.27630615234375
patch: return true return false ;
rank: 735
score: 98.18441772460938
patch: return ch : false ;
rank: 735
score: 98.06710815429688
patch: . else return true ;
rank: 735
score: 97.85610961914062
patch: return return $NUMBER$ ; ;
rank: 735
score: 97.83526611328125
patch: throw false ; }
rank: 736
score: 98.30420793805804
patch: CaMeL Iterator false return false ;
rank: 736
score: 98.27515665690105
patch: return ! ; ; }
rank: 736
score: 98.23809814453125
patch: } } return false ;
rank: 736
score: 97.85400390625
patch: return count != false ;
rank: 736
score: 97.82982635498047
patch: return ) ;
rank: 737
score: 98.32095772879464
patch: return new return ( false ;
rank: 737
score: 98.2741455078125
patch: return is ; }
rank: 737
score: 98.18355712890624
patch: return return ; }
rank: 737
score: 98.06422119140625
patch: . return ( ;
rank: 737
score: 97.829345703125
patch: throw null ; }
rank: 738
score: 98.61253356933594
patch: return ( cs instanceof String ) ;
rank: 738
score: 98.31998116629464
patch: return is ; break ; }
rank: 738
score: 98.30291748046875
patch: CaMeL Class = false ;
rank: 738
score: 98.27679443359375
patch: return search CaMeL Chars ) ;
rank: 738
score: 98.27138264973958
patch: return $STRING$ + false ;
rank: 738
score: 98.18239339192708
patch: return ( boolean ) ;
rank: 738
score: 98.06210327148438
patch: . ; break ; }
rank: 738
score: 97.84890747070312
patch: } { return false ;
rank: 738
score: 97.82728881835938
patch: None return false ;
rank: 739
score: 98.27348109654018
patch: Plane ( cs , ch )
rank: 739
score: 98.2340087890625
patch: System . return true ;
rank: 739
score: 98.18186442057292
patch: target return false ; }
rank: 739
score: 98.06075032552083
patch: return Boolean . FALSE ;
rank: 739
score: 97.8478495279948
patch: return length ; break ;
rank: 739
score: 97.82633056640626
patch: return this ) ;
rank: 740
score: 98.58279418945312
patch: return ( ch == null ) ;
rank: 740
score: 98.31675502232143
patch: return ; } return null ;
rank: 740
score: 98.30201067243304
patch: CaMeL List ; return null ;
rank: 740
score: 98.26859537760417
patch: return true ; continue ;
rank: 740
score: 98.17962646484375
patch: return } return false ;
rank: 740
score: 98.0598876953125
patch: return ~ false ;
rank: 740
score: 97.84634399414062
patch: return ; return ; /
rank: 741
score: 98.5813217163086
patch: return ch != null + ch ;
rank: 741
score: 98.31602260044643
patch: return false ; for ; }
rank: 741
score: 98.30126953125
patch: return new false ;
rank: 741
score: 98.26399739583333
patch: t ; return false ;
rank: 741
score: 98.1775614420573
patch: b . return false ;
rank: 741
score: 97.84442138671875
patch: return 1 == false ;
rank: 741
score: 97.81203002929688
patch: / return false ;
rank: 742
score: 98.31598772321429
patch: return ; } else return ;
rank: 742
score: 98.30033656529018
patch: CaMeL Range { return false ;
rank: 742
score: 97.84254964192708
patch: return - && false ;
rank: 743
score: 98.30009242466518
patch: return true ; ; ; ;
rank: 743
score: 98.26593889508929
patch: return new String ( String )
rank: 743
score: 98.17550048828124
patch: if ( true )
rank: 743
score: 98.05557861328126
patch: . return null ;
rank: 743
score: 97.84254964192708
patch: return matches return false ;
rank: 743
score: 97.809619140625
patch: return ch ; }
rank: 744
score: 98.29922921316964
patch: CaMeL Exception = false ; }
rank: 744
score: 98.25518798828125
patch: return ; } } ;
rank: 744
score: 98.17538452148438
patch: impl return false ; }
rank: 744
score: 98.05198160807292
patch: . false = true ;
rank: 744
score: 97.808837890625
patch: Plane
rank: 745
score: 98.56597028459821
patch: throw new String ( ) ;
rank: 745
score: 98.29744466145833
patch: return new Boolean false ;
rank: 745
score: 98.25428263346355
patch: s ; return false ;
rank: 745
score: 98.22738647460938
patch: return contains CaMeL None (
rank: 745
score: 98.0499776204427
patch: CaMeL return null ; }
rank: 745
score: 97.84103393554688
patch: return is == false ;
rank: 746
score: 98.3141581217448
patch: return is CaMeL Alive ;
rank: 746
score: 98.29438999720982
patch: CaMeL Package . return false ;
rank: 746
score: 98.26355997721355
patch: return true - 1 ;
rank: 746
score: 98.25079956054688
patch: CaMeL false . ;
rank: 746
score: 98.22483317057292
patch: return true = true ;
rank: 746
score: 98.17451985677083
patch: result ; return false ;
rank: 746
score: 97.84053548177083
patch: return ; return $NUMBER$ ;
rank: 747
score: 98.31141880580357
patch: return is return true ; }
rank: 747
score: 98.29095458984375
patch: CaMeL Category ; return false ;
rank: 747
score: 98.24930826822917
patch: p ; return true ;
rank: 747
score: 97.8366190592448
patch: return 0 ; ; /
rank: 748
score: 98.31022135416667
patch: return return || false ;
rank: 748
score: 98.29024832589286
patch: CaMeL Thread . return null ;
rank: 748
score: 98.25379289899554
patch: return ch == null * /
rank: 748
score: 98.24901326497395
patch: return i > 0 ;
rank: 748
score: 98.04402669270833
patch: CaMeL return ( false ;
rank: 748
score: 97.83604939778645
patch: CaMeL = ) false ;
rank: 748
score: 97.80098876953124
patch: surrogate return false ;
rank: 749
score: 98.28733607700893
patch: CaMeL Exception return true ; ;
rank: 749
score: 97.83596801757812
patch: false * return false ;
rank: 750
score: 98.30970255533855
patch: return ; break ; }
rank: 750
score: 98.28621128627232
patch: CaMeL arraycopy return false ; ;
rank: 750
score: 98.2451883951823
patch: Tools . return false ;
rank: 750
score: 98.21297607421874
patch: al return false ;
rank: 750
score: 98.1705830891927
patch: else return true ; }
rank: 750
score: 97.83416748046875
patch: return != ) ; ;
rank: 750
score: 97.7971923828125
patch: ret = true ;
rank: 751
score: 98.30863734654018
patch: return is ; } } else
rank: 751
score: 98.28529575892857
patch: CaMeL Range = false ; }
rank: 751
score: 98.24350992838542
patch: return $STRING$ . ; }
rank: 751
score: 98.16941324869792
patch: break return false ; }
rank: 751
score: 97.83233642578125
patch: return $NUMBER$ != 0 ;
rank: 751
score: 97.7967529296875
patch: return * false ;
rank: 752
score: 98.30799211774554
patch: return false ; } while ;
rank: 752
score: 98.23970540364583
patch: return i > false ;
rank: 752
score: 98.21250406901042
patch: cs . return true ;
rank: 752
score: 98.16932169596355
patch: return = false ; ;
rank: 752
score: 97.83175659179688
patch: return 0 > false ;
rank: 752
score: 97.79442138671875
patch: Plane throw null ;
rank: 753
score: 98.54764556884766
patch: ret = false ; return false ;
rank: 753
score: 98.28324381510417
patch: CaMeL Range = null ;
rank: 753
score: 98.24763997395833
patch: return String . index CaMeL
rank: 753
score: 98.16805419921874
patch: return return cs ;
rank: 753
score: 98.0363260904948
patch: 32 . return true ;
rank: 753
score: 97.82815551757812
patch: return ! $NUMBER$ ; ;
rank: 753
score: 97.79173583984375
patch: debug return false ;
rank: 754
score: 98.546630859375
patch: return ch != null - 1 ;
rank: 754
score: 98.30752999441964
patch: return return is ; } else
rank: 754
score: 98.2460225423177
patch: Plane Error return false ;
rank: 754
score: 98.23551432291667
patch: return false * ; }
rank: 754
score: 98.20930989583333
patch: return ch == $STRING$ ;
rank: 754
score: 98.16758219401042
patch: result return true ; }
rank: 754
score: 98.03269449869792
patch: . is return false ;
rank: 754
score: 97.82323201497395
patch: return is , false ;
rank: 754
score: 97.78289184570312
patch: p return false ;
rank: 755
score: 98.54325866699219
patch: result = cs ; return false ;
rank: 755
score: 98.3070068359375
patch: return ; ; return true ;
rank: 755
score: 98.2822265625
patch: CaMeL Thread false return false ;
rank: 755
score: 98.233154296875
patch: this . return true ;
rank: 755
score: 98.16750081380208
patch: return is . false ;
rank: 755
score: 97.78214111328126
patch: return 0 false ;
rank: 756
score: 98.30650111607143
patch: return return is CaMeL Alive ;
rank: 756
score: 98.23214111328124
patch: return ( ch ;
rank: 756
score: 98.1633809407552
patch: return cs ; break ;
rank: 756
score: 98.02811686197917
patch: . length return true ;
rank: 756
score: 97.8196512858073
patch: return return ) false ;
rank: 756
score: 97.7819580078125
patch: break return false ;
rank: 757
score: 98.30516706194196
patch: return is false return true ;
rank: 757
score: 98.28154645647321
patch: return new char false ; ;
rank: 757
score: 98.23134358723958
patch: try { return null ;
rank: 757
score: 97.81852213541667
patch: ( false ) ; ;
rank: 757
score: 97.77601928710938
patch: r return false ;
rank: 758
score: 98.30370221819196
patch: CaMeL Builder . return ; ;
rank: 758
score: 98.27895100911458
patch: CaMeL out return false ;
rank: 758
score: 98.1629638671875
patch: state return true ; }
rank: 758
score: 98.02764892578125
patch: . return ;
rank: 758
score: 97.8181640625
patch: return ! 1 ;
rank: 758
score: 97.77528076171875
patch: return & false ;
rank: 759
score: 98.52947235107422
patch: assert ( ch == ch ) ;
rank: 759
score: 98.30347551618304
patch: return false ; } else }
rank: 759
score: 98.27839878627232
patch: CaMeL Error return return false ;
rank: 759
score: 98.22342936197917
patch: return ; } } }
rank: 759
score: 98.19071451822917
patch: return is = true ;
rank: 759
score: 98.16253051757812
patch: return { true ;
rank: 759
score: 98.0267842610677
patch: . return true false ;
rank: 759
score: 97.81772867838542
patch: return ! != 1 ;
rank: 760
score: 98.52890014648438
patch: return ( ch == cs ) ;
rank: 760
score: 98.30317905970982
patch: return true ; } / ;
rank: 760
score: 98.27766636439732
patch: CaMeL Range = false ; ;
rank: 760
score: 98.21988932291667
patch: s . return false ;
rank: 760
score: 98.18849690755208
patch: return true return true ;
rank: 760
score: 98.02630615234375
patch: m = return false ;
rank: 760
score: 97.77283935546875
patch: return ^ false ;
rank: 761
score: 98.299072265625
patch: return false ; while ; ;
rank: 761
score: 98.2771504720052
patch: CaMeL char return false ;
rank: 761
score: 98.21856689453125
patch: . return ; }
rank: 761
score: 98.0256856282552
patch: CaMeL return - false ;
rank: 761
score: 97.81512451171875
patch: return return $NUMBER$ ;
rank: 761
score: 97.76968994140626
patch: char [ ] )
rank: 762
score: 98.27666364397321
patch: CaMeL Byte ; return false ;
rank: 762
score: 98.21746826171875
patch: 64 return false ; }
rank: 762
score: 98.16746012369792
patch: return this != false ;
rank: 762
score: 98.15976969401042
patch: v . return false ;
rank: 762
score: 98.0251973470052
patch: ( false , false ;
rank: 762
score: 97.81512451171875
patch: return is , 0 ;
rank: 762
score: 97.76879272460937
patch: node return false ;
rank: 763
score: 98.2978515625
patch: . is return false ; }
rank: 763
score: 98.27651977539062
patch: return null ; false ;
rank: 763
score: 98.21700032552083
patch: return ch > false ;
rank: 763
score: 98.2011474609375
patch: do return false ;
rank: 763
score: 98.0246337890625
patch: CaMeL return 0 ;
rank: 763
score: 97.81444091796875
patch: CaMeL return ) ;
rank: 763
score: 97.76672973632813
patch: Sequence return false ;
rank: 764
score: 98.52214050292969
patch: if ( cs == null ) {
rank: 764
score: 98.27643694196429
patch: CaMeL add ( false ) ;
rank: 764
score: 98.15887451171875
patch: this ch return false ;
rank: 764
score: 98.02461751302083
patch: CaMeL Builder return true ;
rank: 764
score: 97.80997721354167
patch: CaMeL capacity = false ;
rank: 764
score: 97.76436157226563
patch: out return false ;
rank: 765
score: 98.27462332589286
patch: return new ? return false ;
rank: 765
score: 98.18417358398438
patch: Plane do return false ;
rank: 765
score: 98.15751953125
patch: f return true ;
rank: 765
score: 97.7556884765625
patch: file return false ;
rank: 766
score: 98.28889973958333
patch: return is CaMeL True ;
rank: 766
score: 98.27310180664062
patch: CaMeL arraycopy = false ;
rank: 766
score: 98.15645141601563
patch: target return false ;
rank: 766
score: 97.80625406901042
patch: return ch . false ;
rank: 766
score: 97.755078125
patch: data return false ;
rank: 767
score: 98.50979614257812
patch: return ( j == ch ) ;
rank: 767
score: 98.21339925130208
patch: p = return false ;
rank: 767
score: 98.15550740559895
patch: return cs == cs ;
rank: 767
score: 98.0172607421875
patch: ? return false ;
rank: 767
score: 97.80602010091145
patch: ; else return false ;
rank: 767
score: 97.755029296875
patch: return FALSE ; }
rank: 768
score: 98.50585065569196
patch: return ch == ch ) ;
rank: 768
score: 98.27280099051339
patch: return new && return false ;
rank: 768
score: 98.21102294921874
patch: r = false ;
rank: 768
score: 98.17612711588542
patch: return this != ch ;
rank: 768
score: 98.15267944335938
patch: else { return false ;
rank: 768
score: 98.01466064453125
patch: ? return true ;
rank: 768
score: 97.80515543619792
patch: return 0 != $NUMBER$ ;
rank: 768
score: 97.75272216796876
patch: sb return false ;
rank: 769
score: 98.27768961588542
patch: return is CaMeL Defined ;
rank: 769
score: 98.27273995535714
patch: CaMeL Number ; return null ;
rank: 769
score: 98.15157470703124
patch: switch ( $STRING$ )
rank: 769
score: 97.80277506510417
patch: return 1 != false ;
rank: 769
score: 97.7498779296875
patch: throw true ;
rank: 770
score: 98.48868233816964
patch: return ch == ch ; }
rank: 770
score: 98.27201625279018
patch: CaMeL Byte ( false ) ;
rank: 770
score: 98.27067057291667
patch: return is CaMeL Whitespace ;
rank: 770
score: 98.20596313476562
patch: return ( char ; }
rank: 770
score: 98.16478474934895
patch: return null || false ;
rank: 770
score: 97.80257161458333
patch: return ; { return ;
rank: 770
score: 97.74889526367187
patch: prev return false ;
rank: 771
score: 98.27126057942708
patch: CaMeL Iterator = false ;
rank: 771
score: 98.16251627604167
patch: throw byte [ ] )
rank: 771
score: 98.14732055664062
patch: v = false ;
rank: 771
score: 98.01417032877605
patch: 64 . return true ;
rank: 771
score: 97.80196126302083
patch: CaMeL do . break ;
rank: 771
score: 97.7455078125
patch: log return true ;
rank: 772
score: 98.26920572916667
patch: return ; } } else
rank: 772
score: 98.20381469726563
patch: b = false ;
rank: 772
score: 98.14407958984376
patch: state return true ;
rank: 772
score: 98.0115458170573
patch: CaMeL State = false ;
rank: 772
score: 97.8015848795573
patch: return size return 0 ;
rank: 772
score: 97.74510498046875
patch: Plane return this ;
rank: 773
score: 98.2036376953125
patch: f = false ;
rank: 773
score: 98.1408203125
patch: return search CaMeL Chars
rank: 773
score: 98.1404052734375
patch: impl return false ;
rank: 773
score: 98.011474609375
patch: CaMeL false |= true ;
rank: 773
score: 97.80153401692708
patch: return - 1 ; ;
rank: 773
score: 97.74195556640625
patch: Plane = true ;
rank: 774
score: 98.27054268973214
patch: CaMeL Range return false false ;
rank: 774
score: 98.26511840820312
patch: return return is ;
rank: 774
score: 98.15639241536458
patch: return null - 1 ;
rank: 774
score: 98.13341267903645
patch: return length > 0 ;
rank: 774
score: 98.00874837239583
patch: . equals ( false )
rank: 774
score: 97.80140177408855
patch: return 1 + false ;
rank: 774
score: 97.73776245117188
patch: return && false ;
rank: 775
score: 98.27040318080357
patch: CaMeL char false return false ;
rank: 775
score: 98.00632731119792
patch: CaMeL break = false ;
rank: 775
score: 97.79897054036458
patch: CaMeL length = false ;
rank: 775
score: 97.73196411132812
patch: return ch ;
rank: 776
score: 98.47276088169643
patch: ( cs , ch ) ;
rank: 776
score: 98.20147705078125
patch: return false false ; ;
rank: 776
score: 98.12566375732422
patch: return FALSE ;
rank: 776
score: 97.7965596516927
patch: return 0 , 1 ;
rank: 776
score: 97.73153686523438
patch: expr return false ;
rank: 777
score: 98.26732526506696
patch: CaMeL Class false return null ;
rank: 777
score: 98.2537333170573
patch: return ; } break ;
rank: 777
score: 98.00160725911458
patch: . switch ( ch )
rank: 777
score: 97.79538981119792
patch: return substring return false ;
rank: 777
score: 97.72990417480469
patch: throw false ;
rank: 778
score: 98.46285574776786
patch: return ch != null ) ;
rank: 778
score: 98.2534688313802
patch: return is ; } ;
rank: 778
score: 98.12289428710938
patch: Plane = cs ; }
rank: 778
score: 98.00087483723958
patch: . short return false ;
rank: 778
score: 97.79500325520833
patch: return ) . false ;
rank: 778
score: 97.72881317138672
patch: throw null ;
rank: 779
score: 98.4519551595052
patch: return null == ch ;
rank: 779
score: 98.19579467773437
patch: t = false ;
rank: 779
score: 98.1146748860677
patch: else { return true ;
rank: 779
score: 97.79471842447917
patch: CaMeL mid = false ;
rank: 779
score: 97.72564697265625
patch: old return false ;
rank: 780
score: 98.26426478794643
patch: CaMeL Number { return false ;
rank: 780
score: 98.24418131510417
patch: . set return false ;
rank: 780
score: 98.19575805664063
patch: g = false ;
rank: 780
score: 98.129248046875
patch: finally return false ;
rank: 780
score: 97.79403686523438
patch: return ! return ) ;
rank: 780
score: 97.72471923828125
patch: logger return true ;
rank: 781
score: 98.26399739583333
patch: return new is false ;
rank: 781
score: 98.24307250976562
patch: return is ; break ;
rank: 781
score: 98.119580078125
patch: return { false ;
rank: 781
score: 97.99859619140625
patch: . length return false ;
rank: 781
score: 97.7940165201823
patch: return next return false ;
rank: 782
score: 98.26338413783482
patch: return false ; false * ;
rank: 782
score: 98.1367899576823
patch: ( cs , ch )
rank: 782
score: 98.11721801757812
patch: s return true ;
rank: 782
score: 98.10959879557292
patch: return cs . char CaMeL
rank: 782
score: 97.99280395507813
patch: $NUMBER$ return true ;
rank: 782
score: 97.79109700520833
patch: return return == 0 ;
rank: 782
score: 97.72216796875
patch: return * /
rank: 783
score: 98.11436767578125
patch: v return true ;
rank: 783
score: 97.99148559570312
patch: CaMeL Error break ;
rank: 783
score: 97.79046630859375
patch: return $NUMBER$ && false ;
rank: 783
score: 97.71478271484375
patch: return | false ;
rank: 784
score: 98.23313395182292
patch: return ; , * /
rank: 784
score: 98.192138671875
patch: return is ; ; }
rank: 784
score: 98.13034057617188
patch: ret return true ;
rank: 784
score: 97.98964436848958
patch: . length = false ;
rank: 784
score: 97.78902180989583
patch: return return == 1 ;
rank: 785
score: 98.25843157087054
patch: CaMeL Number ; return true ;
rank: 785
score: 98.23208618164062
patch: return ; || false ;
rank: 785
score: 98.11048889160156
patch: return return ;
rank: 785
score: 97.71380615234375
patch: return false ; ?
rank: 786
score: 98.25676618303571
patch: CaMeL Range false = null ;
rank: 786
score: 98.2303466796875
patch: return false ; false }
rank: 786
score: 98.18717447916667
patch: 16 return false ; }
rank: 786
score: 98.12130737304688
patch: Plane Error return true ;
rank: 786
score: 97.78666178385417
patch: return ; = ; /
rank: 786
score: 97.71176147460938
patch: return $NUMBER$ false ;
rank: 787
score: 98.25475056966145
patch: return new || false ;
rank: 787
score: 98.22781372070312
patch: return null ; return ;
rank: 787
score: 98.18662719726562
patch: return ; ; }
rank: 787
score: 98.11399332682292
patch: return false . null ;
rank: 787
score: 98.10921630859374
patch: break + 1 ;
rank: 787
score: 98.10380859375
patch: al return true ;
rank: 787
score: 97.98768920898438
patch: CaMeL Exception break ;
rank: 787
score: 97.78582763671875
patch: return length != 1 ;
rank: 787
score: 97.71129150390625
patch: return == true ;
rank: 788
score: 98.25376674107143
patch: CaMeL Float false return false ;
rank: 788
score: 98.1135762532552
patch: return ( ) true ;
rank: 788
score: 97.98708089192708
patch: . equals ( $STRING$ )
rank: 788
score: 97.7841288248698
patch: return ; return 1 ;
rank: 788
score: 97.7063232421875
patch: throw * * /
rank: 789
score: 98.40061442057292
patch: return ch == cs ;
rank: 789
score: 98.25132533482143
patch: CaMeL Range . return true ;
rank: 789
score: 98.21820068359375
patch: return return is ; ;
rank: 789
score: 98.18553670247395
patch: return false ; default :
rank: 790
score: 97.98313395182292
patch: $NUMBER$ : return true ;
rank: 790
score: 97.70172119140625
patch: Plane |= false ;
rank: 791
score: 98.39206949869792
patch: return ch != ch ;
rank: 791
score: 98.25090680803571
patch: CaMeL Error = return false ;
rank: 791
score: 98.21221923828125
patch: return is false ; ;
rank: 791
score: 98.18363444010417
patch: return false ? ; }
rank: 791
score: 98.10220947265626
patch: return false : ;
rank: 791
score: 97.97892252604167
patch: [ ] = false ;
rank: 791
score: 97.78092447916667
patch: CaMeL ! return false ;
rank: 791
score: 97.70162353515624
patch: Plane || false ;
rank: 792
score: 98.25038364955357
patch: return new String false ; ;
rank: 792
score: 98.18346150716145
patch: return i >= $NUMBER$ ;
rank: 792
score: 97.97842407226562
patch: 8 . return false ;
rank: 792
score: 97.77838134765625
patch: return ch && false ;
rank: 792
score: 97.70119018554688
patch: byte return false ;
rank: 793
score: 98.2493896484375
patch: CaMeL Error false return null ;
rank: 793
score: 98.18190511067708
patch: ? return false ; }
rank: 793
score: 97.97659301757812
patch: . else return false ;
rank: 793
score: 97.77798461914062
patch: return 0 != length ;
rank: 793
score: 97.6994140625
patch: return ) false ;
rank: 794
score: 98.24818638392857
patch: CaMeL j = return false ;
rank: 794
score: 98.17836507161458
patch: $NUMBER$ return true ; }
rank: 794
score: 97.97627766927083
patch: . value return false ;
rank: 794
score: 97.77557373046875
patch: CaMeL Builder = false ;
rank: 794
score: 97.6992431640625
patch: tmp return false ;
rank: 795
score: 98.2476806640625
patch: CaMeL Byte return false ; ;
rank: 795
score: 98.20592244466145
patch: return ; } return ;
rank: 795
score: 98.17425537109375
patch: return ch ; } }
rank: 795
score: 98.08815307617188
patch: break = true ;
rank: 795
score: 97.9761962890625
patch: CaMeL return ~ false ;
rank: 795
score: 97.77530924479167
patch: return size != 1 ;
rank: 796
score: 98.36488850911458
patch: return $STRING$ == ch ;
rank: 796
score: 98.24545724051339
patch: CaMeL Class return return false ;
rank: 796
score: 98.20365397135417
patch: return $NUMBER$ & false ;
rank: 796
score: 98.17384847005208
patch: return ch >= 0 ;
rank: 796
score: 98.0823974609375
patch: switch ( ch ) {
rank: 796
score: 97.973388671875
patch: CaMeL return 0 ; }
rank: 796
score: 97.77381388346355
patch: return equals != 0 ;
rank: 796
score: 97.69668579101562
patch: Main return false ;
rank: 797
score: 98.17249552408855
patch: return ! ; } ;
rank: 797
score: 98.0825927734375
patch: return ! cs ;
rank: 797
score: 98.08060709635417
patch: return this == cs ;
rank: 797
score: 97.97190348307292
patch: return i < false ;
rank: 797
score: 97.77083333333333
patch: return && return false ;
rank: 797
score: 97.6953857421875
patch: if return false ;
rank: 798
score: 98.19629923502605
patch: return ; } if ;
rank: 798
score: 98.08179931640625
patch: return true : ;
rank: 798
score: 97.7708231608073
patch: return null + false ;
rank: 798
score: 97.69347534179687
patch: config return false ;
rank: 799
score: 98.34861537388393
patch: return ! ch == ch ;
rank: 799
score: 98.24276733398438
patch: CaMeL Iterator return false ;
rank: 799
score: 98.17029825846355
patch: return ! false false ;
rank: 799
score: 98.08082275390625
patch: found = false ;
rank: 799
score: 98.06575927734374
patch: return true ) ;
rank: 799
score: 98.0631103515625
patch: throw return false ;
rank: 799
score: 97.770751953125
patch: return length && false ;
rank: 799
score: 97.6928466796875
patch: Plane break * /
rank: 800
score: 98.23255411783855
patch: return null ; ; ;
rank: 800
score: 98.1884256998698
patch: return 0 ; } else
rank: 800
score: 98.17000325520833
patch: return return ( ; }
rank: 800
score: 97.96786499023438
patch: 8 . return true ;
rank: 800
score: 97.68818969726563
patch: return false 1 ;
rank: 801
score: 98.18370564778645
patch: return is CaMeL Blank ;
rank: 801
score: 98.16909790039062
patch: impl . return false ;
rank: 801
score: 98.0608622233073
patch: Plane return - 1 ;
rank: 801
score: 98.05631713867187
patch: throw $STRING$ * /
rank: 801
score: 97.96616617838542
patch: ( false , false )
rank: 801
score: 97.76856486002605
patch: CaMeL ( false ) ;
rank: 802
score: 98.16898600260417
patch: 1 . return false ;
rank: 802
score: 98.0701416015625
patch: switch ( j )
rank: 802
score: 98.0548604329427
patch: return $STRING$ + ch ;
rank: 802
score: 97.768310546875
patch: return ! return $NUMBER$ ;
rank: 802
score: 97.68665771484375
patch: Plane return $NUMBER$ ;
rank: 803
score: 98.32783726283482
patch: return ( cs == null ;
rank: 803
score: 98.1680399576823
patch: return ( Character ; }
rank: 803
score: 98.06942138671874
patch: log = false ;
rank: 803
score: 98.05423990885417
patch: return search CaMeL Chars }
rank: 803
score: 97.96315511067708
patch: . false return false ;
rank: 803
score: 97.76821899414062
patch: break ; return false ;
rank: 804
score: 98.32699148995536
patch: return cs . length ++ ;
rank: 804
score: 98.21746826171875
patch: CaMeL name return false ;
rank: 804
score: 98.06644287109376
patch: res return false ;
rank: 804
score: 97.95924886067708
patch: . is return true ;
rank: 804
score: 97.76795450846355
patch: CaMeL List ( ) ;
rank: 804
score: 97.68489990234374
patch: set return false ;
rank: 805
score: 98.06121826171875
patch: handler return false ;
rank: 805
score: 97.9581807454427
patch: . return ( ( ;
rank: 805
score: 97.76670328776042
patch: return matches return 0 ;
rank: 805
score: 97.6848388671875
patch: return false ; ,
rank: 806
score: 98.31094360351562
patch: Multics return false ;
rank: 806
score: 98.21176147460938
patch: CaMeL Exception = null ;
rank: 806
score: 98.17289225260417
patch: return is CaMeL Sealed ;
rank: 806
score: 98.1615498860677
patch: return ( ; } ;
rank: 806
score: 98.0587158203125
patch: break true ;
rank: 806
score: 98.04276529947917
patch: return false - $NUMBER$ ;
rank: 806
score: 97.76637776692708
patch: return - == 0 ;
rank: 806
score: 97.6736572265625
patch: contains * * /
rank: 807
score: 98.20548502604167
patch: return false ; false *
rank: 807
score: 98.1614278157552
patch: c ; return false ;
rank: 807
score: 98.05789794921876
patch: return return ( ;
rank: 807
score: 97.76536051432292
patch: return 0 ; / ;
rank: 808
score: 98.20449829101562
patch: CaMeL char = false ;
rank: 808
score: 98.15875244140625
patch: return null ; ; }
rank: 808
score: 98.05249633789063
patch: e return false ;
rank: 808
score: 97.95192260742188
patch: , return false ;
rank: 808
score: 97.76497395833333
patch: return 0 == $NUMBER$ ;
rank: 808
score: 97.67260131835937
patch: true return true ;
rank: 809
score: 98.19361368815105
patch: CaMeL FALSE = false ;
rank: 809
score: 97.94891357421875
patch: = false ; * /
rank: 809
score: 97.67167358398437
patch: info return false ;
rank: 810
score: 98.30472819010417
patch: throw new String ) ;
rank: 810
score: 98.1918436686198
patch: CaMeL List . false ;
rank: 810
score: 98.16885986328126
patch: return is ; ;
rank: 810
score: 98.1572265625
patch: . return ; } }
rank: 810
score: 98.05108642578125
patch: res = false ;
rank: 810
score: 98.03476969401042
patch: search CaMeL Chars [ j
rank: 810
score: 97.94839477539062
patch: . false = false ;
rank: 810
score: 97.66945190429688
patch: return & true ;
rank: 811
score: 98.1646016438802
patch: return is ; return ;
rank: 811
score: 98.0336201985677
patch: return cs == $STRING$ ;
rank: 811
score: 97.9425048828125
patch: CaMeL return new ; }
rank: 811
score: 97.76259358723958
patch: return ! ch ; ;
rank: 812
score: 98.18756103515625
patch: CaMeL Throwable return false ;
rank: 812
score: 98.16397094726562
patch: return null ; } finally
rank: 812
score: 98.04931640625
patch: try return false ;
rank: 812
score: 97.9381815592448
patch: ( false , true ;
rank: 812
score: 97.7611796061198
patch: return 0 , null ;
rank: 812
score: 97.66571655273438
patch: tree return false ;
rank: 813
score: 98.3014424641927
patch: return $STRING$ != ch ;
rank: 813
score: 98.17225138346355
patch: CaMeL j = false ;
rank: 813
score: 98.16389973958333
patch: return ; / * /
rank: 813
score: 98.04769897460938
patch: break true ; }
rank: 813
score: 98.0260498046875
patch: return false } }
rank: 813
score: 98.01071166992188
patch: return false + ch ;
rank: 813
score: 97.663232421875
patch: fine return false ;
rank: 814
score: 98.1710205078125
patch: return true ; false
rank: 814
score: 98.16334025065105
patch: return is CaMeL Supported ;
rank: 814
score: 98.15231323242188
patch: return ( Character . ;
rank: 814
score: 98.03889770507813
patch: return false ? ;
rank: 814
score: 97.75722249348958
patch: return ; return ; ;
rank: 814
score: 97.65845336914063
patch: { throw null ;
rank: 815
score: 98.29355875651042
patch: return is == ch ;
rank: 815
score: 98.15721638997395
patch: return ; ; } ;
rank: 815
score: 98.14864095052083
patch: t ; return true ;
rank: 815
score: 98.03880615234375
patch: buffer return false ;
rank: 815
score: 97.997607421875
patch: do return true ;
rank: 815
score: 97.92479451497395
patch: . value += false ;
rank: 815
score: 97.75607299804688
patch: return false + 0 ;
rank: 815
score: 97.6572265625
patch: return cs ) ;
rank: 816
score: 98.29305013020833
patch: throw 0 . null ;
rank: 816
score: 98.15171305338542
patch: return is CaMeL Numeric ;
rank: 816
score: 98.1481221516927
patch: return this . contains ;
rank: 816
score: 98.03765869140625
patch: break ; } }
rank: 816
score: 97.92254638671875
patch: ( false , true )
rank: 816
score: 97.754150390625
patch: CaMeL length return false ;
rank: 816
score: 97.65689086914062
patch: || return false ;
rank: 817
score: 98.1474853515625
patch: cp = false ;
rank: 817
score: 98.0343505859375
patch: return true ? ;
rank: 817
score: 97.91202799479167
patch: . switch ( false )
rank: 817
score: 97.7528076171875
patch: return false , false ;
rank: 817
score: 97.65484008789062
patch: Plane break false ;
rank: 818
score: 98.1492411295573
patch: return ; ; return ;
rank: 818
score: 98.14513142903645
patch: CaMeL false . ; ;
rank: 818
score: 98.03345336914063
patch: m return true ;
rank: 818
score: 97.91035970052083
patch: CaMeL Exception break ; }
rank: 818
score: 97.747802734375
patch: return - == 1 ;
rank: 818
score: 97.6541748046875
patch: return . * /
rank: 819
score: 98.16110229492188
patch: CaMeL Throwable = false ;
rank: 819
score: 98.14902750651042
patch: return is ; * /
rank: 819
score: 98.14340209960938
patch: return ! >= false ;
rank: 819
score: 98.0308349609375
patch: return ( cs ;
rank: 819
score: 97.90611775716145
patch: . return new ; }
rank: 819
score: 97.7447509765625
patch: return 0 , true ;
rank: 819
score: 97.6526123046875
patch: Plane return 1 ;
rank: 820
score: 98.14266967773438
patch: return false ; * ;
rank: 820
score: 98.1420186360677
patch: return && false ; }
rank: 820
score: 97.9054667154948
patch: CaMeL false ? * /
rank: 820
score: 97.7431640625
patch: return $NUMBER$ , false ;
rank: 821
score: 98.15895589192708
patch: return new is ) ;
rank: 821
score: 97.89530436197917
patch: . ch = false ;
rank: 821
score: 97.74268595377605
patch: CaMeL List ( ) .
rank: 821
score: 97.651611328125
patch: continue return false ;
rank: 822
score: 98.1568094889323
patch: return new is true ;
rank: 822
score: 97.893798828125
patch: is false = false ;
rank: 822
score: 97.74261474609375
patch: return null . false ;
rank: 822
score: 97.64990844726563
patch: method return true ;
rank: 823
score: 98.15573120117188
patch: CaMeL Category return false ;
rank: 823
score: 97.891845703125
patch: return - 1 ; }
rank: 823
score: 97.74180094401042
patch: return 0 + null ;
rank: 824
score: 98.1556396484375
patch: CaMeL FALSE return false ;
rank: 824
score: 98.13394165039062
patch: return ( ch , ;
rank: 824
score: 98.0179931640625
patch: d return false ;
rank: 824
score: 97.8898213704427
patch: is false = true ;
rank: 824
score: 97.74119059244792
patch: return 0 >= false ;
rank: 824
score: 97.64833984375
patch: System return true ;
rank: 825
score: 98.14852905273438
patch: false { return true ;
rank: 825
score: 98.13136800130208
patch: return $STRING$ . false ;
rank: 825
score: 97.95623168945312
patch: fine return true ;
rank: 825
score: 97.88583374023438
patch: CaMeL return ( ch ;
rank: 825
score: 97.74055989583333
patch: return ; = $NUMBER$ ;
rank: 825
score: 97.64429931640625
patch: connection return false ;
rank: 826
score: 98.24100748697917
patch: result = return false ;
rank: 826
score: 98.12936401367188
patch: return ! ! ; }
rank: 826
score: 98.01054077148437
patch: return cs false ;
rank: 826
score: 97.95539855957031
patch: return false }
rank: 826
score: 97.740478515625
patch: return ch , false ;
rank: 826
score: 97.64279174804688
patch: Plane [ j ]
rank: 827
score: 98.14614868164062
patch: CaMeL native return false ;
rank: 827
score: 98.13798014322917
patch: return return && return ;
rank: 827
score: 98.12889607747395
patch: return ! is false ;
rank: 827
score: 98.009521484375
patch: p return true ;
rank: 827
score: 97.87551879882812
patch: CaMeL private = false ;
rank: 827
score: 97.7399393717448
patch: return is != ) ;
rank: 828
score: 98.14021809895833
patch: CaMeL TRUE = false ;
rank: 828
score: 98.13608805338542
patch: return ; return ; }
rank: 828
score: 98.12888590494792
patch: dispatcher . return false ;
rank: 828
score: 98.00865478515625
patch: exception return false ;
rank: 828
score: 97.8748270670573
patch: . return null ; }
rank: 828
score: 97.7393798828125
patch: return size , 0 ;
rank: 829
score: 98.12692260742188
patch: return ch > ; }
rank: 829
score: 98.00699462890626
patch: switch ( i )
rank: 829
score: 97.9274658203125
patch: return - 0 ;
rank: 829
score: 97.87002563476562
patch: . append ( ch ;
rank: 829
score: 97.738525390625
patch: CaMeL protected return false ;
rank: 829
score: 97.55033111572266
patch: Plane * /
rank: 830
score: 98.13333129882812
patch: return new ? false ;
rank: 830
score: 98.13132731119792
patch: return ; , break ;
rank: 830
score: 98.12599690755208
patch: return ( false ; ;
rank: 830
score: 98.00664672851562
patch: e = false ;
rank: 830
score: 97.91893310546875
patch: set return true ;
rank: 830
score: 97.91863403320312
patch: return - $NUMBER$ ;
rank: 830
score: 97.86558227539062
patch: return new ; }
rank: 830
score: 97.73757934570312
patch: return 0 + 1 ;
rank: 830
score: 97.48133087158203
patch: Plane break ;
rank: 831
score: 98.13228352864583
patch: return new Range false ;
rank: 831
score: 98.12551879882812
patch: / * return false ;
rank: 831
score: 98.0021484375
patch: return return return ;
rank: 831
score: 97.91586303710938
patch: throw System ) ;
rank: 831
score: 97.848388671875
patch: . ; break ;
rank: 831
score: 97.73708089192708
patch: return 0 == length ;
rank: 831
score: 97.43698120117188
patch: Plane ++ ;
rank: 832
score: 98.0001953125
patch: return cs true ;
rank: 832
score: 97.90610961914062
patch: return true } }
rank: 832
score: 97.73514811197917
patch: return length return false ;
rank: 832
score: 97.36726379394531
patch: return Boolean ;
rank: 833
score: 98.12784830729167
patch: return is return is ;
rank: 833
score: 98.12501017252605
patch: pt . return false ;
rank: 833
score: 97.9913330078125
patch: get return false ;
rank: 833
score: 97.89856567382813
patch: None return true ;
rank: 833
score: 97.83751220703125
patch: CaMeL ; return ;
rank: 833
score: 97.73391723632812
patch: return != 1 ; ;
rank: 833
score: 97.34848022460938
patch: return break ;
rank: 834
score: 98.12681884765625
patch: CaMeL Range false ;
rank: 834
score: 98.12567138671875
patch: return true ; while ;
rank: 834
score: 98.12486775716145
patch: return ! ( false ;
rank: 834
score: 97.8934814453125
patch: display return false ;
rank: 834
score: 97.83615112304688
patch: : return false ;
rank: 834
score: 97.73251342773438
patch: return read return false ;
rank: 834
score: 97.3456802368164
patch: return TRUE ;
rank: 835
score: 98.21575927734375
patch: return null + ch ;
rank: 835
score: 98.12620035807292
patch: CaMeL out = false ;
rank: 835
score: 98.12547810872395
patch: CaMeL set return false ;
rank: 835
score: 98.12474568684895
patch: buffer . return false ;
rank: 835
score: 97.9902099609375
patch: target return true ;
rank: 835
score: 97.7313741048177
patch: return 0 : false ;
rank: 836
score: 98.12587483723958
patch: return false ; ; else
rank: 836
score: 98.1239725748698
patch: . false * / ;
rank: 836
score: 97.88272705078126
patch: return ( index CaMeL
rank: 836
score: 97.8234634399414
patch: CaMeL false ;
rank: 836
score: 97.73086547851562
patch: return 0 ; this ;
rank: 836
score: 97.33415985107422
patch: return } }
rank: 837
score: 98.12300618489583
patch: CaMeL false . false ;
rank: 837
score: 98.12012736002605
patch: CaMeL SIZE return false ;
rank: 837
score: 97.98936767578125
patch: IAST return false ;
rank: 837
score: 97.8727798461914
patch: throw System ;
rank: 837
score: 97.7288330078125
patch: ( false ) ;
rank: 837
score: 97.30944061279297
patch: return * ;
rank: 838
score: 98.21007283528645
patch: return null : false ;
rank: 838
score: 98.12259928385417
patch: ? return true ; }
rank: 838
score: 98.11795043945312
patch: CaMeL i = false ;
rank: 838
score: 97.875537109375
patch: warn return false ;
rank: 838
score: 97.72721354166667
patch: return length , false ;
rank: 839
score: 98.20648193359375
patch: Multics return true ;
rank: 839
score: 98.12132771809895
patch: return $STRING$ ; } }
rank: 839
score: 98.11812337239583
patch: return ; * * ;
rank: 839
score: 97.985546875
patch: throw ( $STRING$ ;
rank: 839
score: 97.81419067382812
patch: CaMeL return $NUMBER$ ;
rank: 839
score: 97.724560546875
patch: return 0 ) ;
rank: 839
score: 97.2773666381836
patch: return true }
rank: 840
score: 97.98511962890625
patch: update = false ;
rank: 840
score: 97.81385498046875
patch: ( false , ;
rank: 840
score: 97.7239278157552
patch: return equals return false ;
rank: 840
score: 97.27484130859375
patch: ( ch )
rank: 841
score: 98.11641438802083
patch: . return is ; }
rank: 841
score: 98.11521402994792
patch: return is false ; else
rank: 841
score: 98.1124979654948
patch: return value != null ;
rank: 841
score: 97.98434448242188
patch: found = true ;
rank: 841
score: 97.80703735351562
patch: : return true ;
rank: 841
score: 97.7223409016927
patch: return 1 && false ;
rank: 841
score: 97.25749206542969
patch: { System .
rank: 842
score: 98.11622111002605
patch: return ch >= $NUMBER$ ;
rank: 842
score: 97.98364868164063
patch: switch ( String )
rank: 842
score: 97.8591796875
patch: Basic return true ;
rank: 842
score: 97.849609375
patch: Accessible return false ;
rank: 842
score: 97.72091674804688
patch: CaMeL matches return false ;
rank: 842
score: 97.24586486816406
patch: throw 0 ;
rank: 843
score: 98.11600748697917
patch: return ; } false ;
rank: 843
score: 97.98151245117188
patch: return boolean true ;
rank: 843
score: 97.8545654296875
patch: Plane += false ;
rank: 843
score: 97.71999104817708
patch: return ! == 0 ;
rank: 843
score: 97.23472595214844
patch: Plane return ;
rank: 844
score: 98.1093241373698
patch: return true ; if ;
rank: 844
score: 98.10420735677083
patch: CaMeL Number = null ;
rank: 844
score: 97.97054443359374
patch: exception = false ;
rank: 844
score: 97.8501953125
patch: match return false ;
rank: 844
score: 97.71824137369792
patch: return 0 . ; :
rank: 844
score: 97.23460388183594
patch: return false .
rank: 845
score: 98.11564127604167
patch: return ( byte ; }
rank: 845
score: 98.108984375
patch: return ; * /
rank: 845
score: 98.10408528645833
patch: CaMeL iterator return false ;
rank: 845
score: 97.84596557617188
patch: result return null ;
rank: 845
score: 97.8347412109375
patch: instance return false ;
rank: 845
score: 97.77529296875
patch: so return false ;
rank: 845
score: 97.71778361002605
patch: return is ( ) ;
rank: 845
score: 97.22787475585938
patch: throw * /
rank: 846
score: 98.1141357421875
patch: Toolkit . return false ;
rank: 846
score: 98.10391235351562
patch: CaMeL sleep return false ;
rank: 846
score: 97.96630859375
patch: function return false ;
rank: 846
score: 97.8453857421875
patch: Thread return false ;
rank: 846
score: 97.71640014648438
patch: return count == 0 ;
rank: 847
score: 98.11121826171875
patch: return this . ;
rank: 847
score: 98.10376993815105
patch: return return ( return ;
rank: 847
score: 97.9648681640625
patch: throw : true ;
rank: 847
score: 97.8257568359375
patch: process return false ;
rank: 847
score: 97.76660766601563
patch: in return false ;
rank: 847
score: 97.7163798014323
patch: return 0 <= false ;
rank: 847
score: 97.20142364501953
patch: ( false )
rank: 848
score: 98.10982259114583
patch: t . return false ;
rank: 848
score: 98.10134887695312
patch: return new Float false ;
rank: 848
score: 97.96310424804688
patch: break ;
rank: 848
score: 97.82449340820312
patch: Plane = cs ;
rank: 848
score: 97.76495361328125
patch: CaMeL |= false ;
rank: 848
score: 97.71615600585938
patch: CaMeL catch return false ;
rank: 848
score: 97.19837951660156
patch: { break ;
rank: 849
score: 98.10976155598958
patch: return Boolean . false ;
rank: 849
score: 98.0994364420573
patch: CaMeL List return return ;
rank: 849
score: 97.95859985351562
patch: VM = false ;
rank: 849
score: 97.75985717773438
patch: CaMeL false ( ;
rank: 849
score: 97.7151590983073
patch: CaMeL Integer return false ;
rank: 849
score: 97.19636535644531
patch: throw 1 ;
rank: 850
score: 98.10923258463542
patch: return i >= ; }
rank: 850
score: 98.09757486979167
patch: return new false false ;
rank: 850
score: 98.09739176432292
patch: return get return false ;
rank: 850
score: 97.95780029296876
patch: super return false ;
rank: 850
score: 97.82965698242188
patch: parser return false ;
rank: 850
score: 97.7129414876302
patch: return size , false ;
rank: 850
score: 97.1843973795573
patch: Plane this
rank: 851
score: 98.10858154296875
patch: m ; return false ;
rank: 851
score: 98.09752400716145
patch: CaMeL Range return true ;
rank: 851
score: 97.825927734375
patch: return null false ;
rank: 851
score: 97.81876220703126
patch: return ! index CaMeL
rank: 851
score: 97.17681884765625
patch: contains * /
rank: 852
score: 98.1688232421875
patch: / / return false ;
rank: 852
score: 97.95591430664062
patch: break false ; }
rank: 852
score: 97.74771728515626
patch: ( ) * /
rank: 852
score: 97.71265665690105
patch: return length , 0 ;
rank: 852
score: 97.17392985026042
patch: Plane false
rank: 853
score: 98.16810099283855
patch: throw 1 . null ;
rank: 853
score: 98.10512288411458
patch: a ; return false ;
rank: 853
score: 98.0968526204427
patch: CaMeL chars return false ;
rank: 853
score: 98.0957539876302
patch: CaMeL Runtime return false ;
rank: 853
score: 97.73973999023437
patch: of return false ;
rank: 853
score: 97.7113545735677
patch: return ; = ; _
rank: 853
score: 97.17027282714844
patch: return value ;
rank: 854
score: 98.10378011067708
patch: return Character . equals ;
rank: 854
score: 98.09513346354167
patch: CaMeL Float return false ;
rank: 854
score: 98.09498087565105
patch: return false false break ;
rank: 854
score: 97.953466796875
patch: log = true ;
rank: 854
score: 97.80012817382813
patch: throw return true ;
rank: 854
score: 97.72125244140625
patch: field return false ;
rank: 854
score: 97.71133422851562
patch: return $NUMBER$ == 0 ;
rank: 854
score: 97.16737365722656
patch: return static ;
rank: 855
score: 97.951416015625
patch: break ; }
rank: 855
score: 97.81314086914062
patch: warn return true ;
rank: 855
score: 97.798046875
patch: Error return false ;
rank: 855
score: 97.72066650390624
patch: $NUMBER$ . return ;
rank: 855
score: 97.71096801757812
patch: return is != 1 ;
rank: 855
score: 97.16596984863281
patch: return i ;
rank: 856
score: 98.10304768880208
patch: implementation . return false ;
rank: 856
score: 97.95123291015625
patch: buffer return true ;
rank: 856
score: 97.79754638671875
patch: return || false ;
rank: 856
score: 97.71737060546874
patch: CaMeL return new ;
rank: 856
score: 97.70889282226562
patch: return ; return ; :
rank: 856
score: 97.1572265625
patch: return / *
rank: 857
score: 98.09291585286458
patch: CaMeL append return true ;
rank: 857
score: 97.95117797851563
patch: re return false ;
rank: 857
score: 97.79617919921876
patch: return ) true ;
rank: 857
score: 97.7085673014323
patch: return == ) ; ;
rank: 857
score: 97.1379623413086
patch: Plane -- ;
rank: 858
score: 98.10291544596355
patch: c ; return true ;
rank: 858
score: 98.09217325846355
patch: return ; && false ;
rank: 858
score: 97.9483154296875
patch: default return false ;
rank: 858
score: 97.810205078125
patch: match return true ;
rank: 858
score: 97.79013671875
patch: Plane throw System ;
rank: 858
score: 97.70829264322917
patch: return ! | false ;
rank: 858
score: 97.70319213867188
patch: CaMeL ; * /
rank: 858
score: 97.12966918945312
patch: assert false ;
rank: 859
score: 98.10231526692708
patch: m = false ; ;
rank: 859
score: 98.09143676757813
patch: return true ; else
rank: 859
score: 98.0867411295573
patch: return this != null ;
rank: 859
score: 97.94546508789062
patch: return cs . ;
rank: 859
score: 97.80957641601563
patch: error return false ;
rank: 859
score: 97.70823160807292
patch: return ch != 1 ;
rank: 859
score: 97.69674072265624
patch: def return false ;
rank: 859
score: 97.12394714355469
patch: return continue ;
rank: 860
score: 98.09967041015625
patch: return new ; } }
rank: 860
score: 98.091064453125
patch: return return . false ;
rank: 860
score: 98.08633422851562
patch: return value == null ;
rank: 860
score: 97.94512939453125
patch: return , false ;
rank: 860
score: 97.705810546875
patch: return 0 . $STRING$ ;
rank: 860
score: 97.06918334960938
patch: Plane /
rank: 861
score: 98.09926350911458
patch: return ch == ; }
rank: 861
score: 98.08317057291667
patch: return value . false ;
rank: 861
score: 97.94151611328125
patch: return contains false ;
rank: 861
score: 97.80218505859375
patch: display return true ;
rank: 861
score: 97.7057393391927
patch: return ; = 1 ;
rank: 861
score: 97.69232788085938
patch: = return false ;
rank: 861
score: 97.06873575846355
patch: Plane true
rank: 862
score: 98.15073649088542
patch: return value > 0 ;
rank: 862
score: 98.09920654296874
patch: s = false ;
rank: 862
score: 98.08773803710938
patch: return ; . return ;
rank: 862
score: 97.93989868164063
patch: throw : false ;
rank: 862
score: 97.70493570963542
patch: return 0 - 1 ;
rank: 862
score: 97.68762817382813
patch: . return i ;
rank: 862
score: 97.05311075846355
patch: Plane !
rank: 863
score: 98.08059692382812
patch: return ( is ) ;
rank: 863
score: 97.9384765625
patch: return , true ;
rank: 863
score: 97.77154541015625
patch: return $STRING$ false ;
rank: 863
score: 97.704345703125
patch: CaMeL size = false ;
rank: 863
score: 97.0226338704427
patch: return }
rank: 864
score: 98.08006795247395
patch: CaMeL equals return false ;
rank: 864
score: 97.937939453125
patch: return ( $STRING$ ;
rank: 864
score: 97.79962158203125
patch: try { break ;
rank: 864
score: 97.69911702473958
patch: return matches != 0 ;
rank: 864
score: 96.82840983072917
patch: Plane }
rank: 865
score: 98.07684326171875
patch: CaMeL Byte = false ;
rank: 865
score: 98.07415771484375
patch: return false false } }
rank: 865
score: 97.79766845703125
patch: Plane += ch ;
rank: 865
score: 97.76629638671875
patch: return false ? false
rank: 865
score: 97.6990966796875
patch: CaMeL do . ; ;
rank: 865
score: 97.67308349609375
patch: CaMeL State . ;
rank: 865
score: 96.8181660970052
patch: ( )
rank: 866
score: 98.07297770182292
patch: CaMeL Category = false ;
rank: 866
score: 97.93521728515626
patch: object return false ;
rank: 866
score: 97.6981913248698
patch: return is ( false ;
rank: 866
score: 97.67013549804688
patch: $NUMBER$ . * /
rank: 866
score: 96.7922871907552
patch: String )
rank: 867
score: 98.0933837890625
patch: return Character . is ;
rank: 867
score: 98.0730692545573
patch: return return false ; else
rank: 867
score: 98.07137044270833
patch: CaMeL reverse return false ;
rank: 867
score: 97.9348388671875
patch: tmp = false ;
rank: 867
score: 97.789599609375
patch: return length 1 ;
rank: 867
score: 97.76116943359375
patch: byte [ ] )
rank: 867
score: 97.69718424479167
patch: CaMeL += ) 1 ;
rank: 867
score: 97.66671752929688
patch: . |= false ;
rank: 867
score: 96.78927612304688
patch: Plane ?
rank: 868
score: 98.12373860677083
patch: return null != ch ;
rank: 868
score: 97.93305969238281
patch: break false ;
rank: 868
score: 97.78668212890625
patch: return false ?
rank: 868
score: 97.69669799804687
patch: return ; return ;
rank: 868
score: 97.66279907226563
patch: the return false ;
rank: 868
score: 96.76641845703125
patch: return {
rank: 869
score: 98.09114583333333
patch: return true * ; }
rank: 869
score: 98.0718282063802
patch: return get ; } }
rank: 869
score: 98.06846110026042
patch: return new ! true ;
rank: 869
score: 97.93089599609375
patch: return { ; }
rank: 869
score: 97.75836181640625
patch: Output return false ;
rank: 869
score: 97.69639078776042
patch: return 0 = false ;
rank: 869
score: 97.66163330078125
patch: CaMeL == null ?
rank: 869
score: 96.74381510416667
patch: Plane out
rank: 870
score: 98.11592610677083
patch: return null == cs ;
rank: 870
score: 98.09092712402344
patch: . false ;
rank: 870
score: 98.07114664713542
patch: return return $NUMBER$ false ;
rank: 870
score: 98.06714884440105
patch: return new && true ;
rank: 870
score: 97.92739868164062
patch: report = false ;
rank: 870
score: 97.779150390625
patch: cs return null ;
rank: 870
score: 97.69490559895833
patch: return count == false ;
rank: 870
score: 97.661083984375
patch: . return $NUMBER$ ;
rank: 870
score: 96.71826171875
patch: CaMeL Array
rank: 871
score: 98.07066853841145
patch: return false ; else }
rank: 871
score: 98.0667724609375
patch: return new is ( ;
rank: 871
score: 97.77236938476562
patch: surrogate return true ;
rank: 871
score: 97.69390869140625
patch: return 0 . ; ;
rank: 871
score: 97.66007080078126
patch: ( ; * /
rank: 871
score: 96.71487426757812
patch: return false
rank: 872
score: 98.08633422851562
patch: profile = false ;
rank: 872
score: 98.06503295898438
patch: CaMeL Null return true ;
rank: 872
score: 97.92669677734375
patch: val = false ;
rank: 872
score: 97.69378662109375
patch: CaMeL ~ ( ) ;
rank: 872
score: 97.65775756835937
patch: token return true ;
rank: 872
score: 96.69549560546875
patch: {
rank: 873
score: 98.06229654947917
patch: CaMeL Builder . return ;
rank: 873
score: 98.06215413411458
patch: CaMeL delete return false ;
rank: 873
score: 97.9260986328125
patch: switch ( false )
rank: 873
score: 97.74201049804688
patch: peer return false ;
rank: 873
score: 97.69336954752605
patch: CaMeL List return ) ;
rank: 873
score: 97.65742797851563
patch: token return false ;
rank: 873
score: 96.66018676757812
patch: Plane *
rank: 874
score: 98.10130818684895
patch: result = ! false ;
rank: 874
score: 98.06756591796875
patch: . false * /
rank: 874
score: 98.06057739257812
patch: return is return ; ;
rank: 874
score: 98.0604756673177
patch: CaMeL next return false ;
rank: 874
score: 97.9247802734375
patch: val return false ;
rank: 874
score: 97.76569213867188
patch: Plane return $STRING$ ;
rank: 874
score: 97.741162109375
patch: break return true ;
rank: 874
score: 97.69192504882812
patch: return 0 != size ;
rank: 874
score: 96.6232401529948
patch: Plane :
rank: 875
score: 98.09955444335938
patch: return ! ch ;
rank: 875
score: 98.05897827148438
patch: logger = false ;
rank: 875
score: 98.05511474609375
patch: return is CaMeL False ;
rank: 875
score: 97.76094360351563
patch: out return true ;
rank: 875
score: 97.6910400390625
patch: return 0 . this ;
rank: 875
score: 97.65587158203125
patch: my return false ;
rank: 875
score: 96.60060628255208
patch: if (
rank: 876
score: 98.05971272786458
patch: CaMeL byte = false ;
rank: 876
score: 98.05885009765625
patch: = false ; ;
rank: 876
score: 97.92427978515624
patch: v = true ;
rank: 876
score: 97.71184692382812
patch: throw $STRING$ - 1
rank: 876
score: 97.69034830729167
patch: CaMeL filter = false ;
rank: 876
score: 97.65545654296875
patch: , return true ;
rank: 876
score: 96.58585611979167
patch: Plane .
rank: 877
score: 98.0587158203125
patch: if ( false ;
rank: 877
score: 98.05795288085938
patch: CaMeL name = false ;
rank: 877
score: 97.92376708984375
patch: return is $NUMBER$ ;
rank: 877
score: 97.70731201171876
patch: throw $STRING$ * ?
rank: 877
score: 97.65238647460937
patch: CaMeL break false ;
rank: 877
score: 96.55596923828125
patch: Plane break
rank: 878
score: 98.05751546223958
patch: CaMeL capacity return false ;
rank: 878
score: 97.92276611328126
patch: color return false ;
rank: 878
score: 97.64346313476562
patch: CaMeL Error false ;
rank: 878
score: 96.52908325195312
patch: } }
rank: 879
score: 98.056640625
patch: return name . false ;
rank: 879
score: 98.0510986328125
patch: z = false ;
rank: 879
score: 98.04702758789062
patch: return ; , * ;
rank: 879
score: 97.75672607421875
patch: process return true ;
rank: 879
score: 97.68883260091145
patch: return return - 1 ;
rank: 879
score: 96.51161702473958
patch: return ,
rank: 880
score: 98.0469258626302
patch: return return ) ; }
rank: 880
score: 98.04196166992188
patch: ch = false ;
rank: 880
score: 97.92175903320313
patch: return cs ? ;
rank: 880
score: 97.75574951171875
patch: error return true ;
rank: 880
score: 97.68721008300781
patch: throw $STRING$ ?
rank: 880
score: 97.679150390625
patch: return ! $NUMBER$ ;
rank: 880
score: 96.50956217447917
patch: return (
rank: 881
score: 98.0740966796875
patch: inst return false ;
rank: 881
score: 98.03828735351563
patch: return ! is ;
rank: 881
score: 97.91965942382812
patch: update return false ;
rank: 881
score: 97.67637939453125
patch: return $NUMBER$ ; ;
rank: 881
score: 97.63899536132813
patch: CaMeL false false ;
rank: 881
score: 96.48819986979167
patch: char .
rank: 882
score: 98.05401611328125
patch: return new Object false ;
rank: 882
score: 98.03198852539063
patch: return ( char ;
rank: 882
score: 97.9173355102539
patch: if ( }
rank: 882
score: 97.66832478841145
patch: throw $STRING$
rank: 882
score: 97.6550537109375
patch: return ) ; ;
rank: 882
score: 97.63704681396484
patch: |= false ;
rank: 882
score: 96.47686767578125
patch: Plane code
rank: 883
score: 98.02677612304687
patch: . false ; ;
rank: 883
score: 97.75133666992187
patch: return ! break ;
rank: 883
score: 97.6432373046875
patch: return 1 ; ;
rank: 883
score: 97.63533935546874
patch: $NUMBER$ ; break ;
rank: 883
score: 96.4512430826823
patch: CaMeL List
rank: 884
score: 98.0511962890625
patch: found return false ;
rank: 884
score: 98.04795328776042
patch: CaMeL Range . false ;
rank: 884
score: 98.03961181640625
patch: return false ; else ;
rank: 884
score: 97.91618041992187
patch: n return false ;
rank: 884
score: 97.65234375
patch: Plane throw true ?
rank: 884
score: 97.63880004882813
patch: return != ) ;
rank: 884
score: 97.63230590820312
patch: ( ; break ;
rank: 884
score: 96.43697102864583
patch: Plane System
rank: 885
score: 98.04586791992188
patch: CaMeL byte return false ;
rank: 885
score: 97.63141479492188
patch: $NUMBER$ . false ;
rank: 885
score: 96.40876770019531
patch: }
rank: 886
score: 98.04433186848958
patch: CaMeL close return false ;
rank: 886
score: 98.03695678710938
patch: . set ; return ;
rank: 886
score: 98.018798828125
patch: return ! ( ;
rank: 886
score: 97.911474609375
patch: impl return true ;
rank: 886
score: 97.6297119140625
patch: CaMeL continue false ;
rank: 886
score: 96.40299479166667
patch: Plane count
rank: 887
score: 98.0407002766927
patch: return new short false ;
rank: 887
score: 98.03695678710938
patch: CaMeL Error false * /
rank: 887
score: 97.90927734375
patch: switch return false ;
rank: 887
score: 97.6257568359375
patch: CaMeL ^= false ;
rank: 887
score: 97.61862182617188
patch: return false . ;
rank: 887
score: 97.50997924804688
patch: try { false
rank: 887
score: 96.3972676595052
patch: CaMeL ]
rank: 888
score: 98.03751627604167
patch: return new ! 0 ;
rank: 888
score: 98.03666178385417
patch: return is return null ;
rank: 888
score: 97.90797729492188
patch: throw : * /
rank: 888
score: 97.74490966796876
patch: Plane return cs ;
rank: 888
score: 97.62532958984374
patch: . return is ;
rank: 888
score: 97.60606384277344
patch: return ; {
rank: 888
score: 97.42547607421875
patch: throw $STRING$ ;
rank: 888
score: 96.39058430989583
patch: return *
rank: 889
score: 98.03713989257812
patch: return new char ; ;
rank: 889
score: 98.00958862304688
patch: d = false ;
rank: 889
score: 97.90684204101562
patch: retval = false ;
rank: 889
score: 96.38718668619792
patch: Plane _
rank: 890
score: 98.03647867838542
patch: CaMeL String = true ;
rank: 890
score: 98.0316670735677
patch: return return ; * /
rank: 890
score: 98.00194091796875
patch: rt = false ;
rank: 890
score: 97.90617065429687
patch: result = cs ;
rank: 890
score: 97.62042236328125
patch: CaMeL Error ++ ;
rank: 890
score: 97.585400390625
patch: return 0 1 ;
rank: 890
score: 97.28063201904297
patch: return System ;
rank: 890
score: 96.38125610351562
patch: Plane in
rank: 891
score: 97.9041748046875
patch: use = false ;
rank: 891
score: 97.73427124023438
patch: if ( index CaMeL
rank: 891
score: 97.61975860595703
patch: CaMeL return ;
rank: 891
score: 97.57972412109375
patch: CaMeL Builder false ;
rank: 891
score: 96.36922200520833
patch: CaMeL Index
rank: 892
score: 98.03436279296875
patch: CaMeL List != null ;
rank: 892
score: 97.98950805664063
patch: return true * /
rank: 892
score: 97.9035400390625
patch: return { } ;
rank: 892
score: 97.7300048828125
patch: false return null ;
rank: 892
score: 97.61897583007813
patch: . return 0 ;
rank: 892
score: 97.5761962890625
patch: return ; = ;
rank: 892
score: 96.3648681640625
patch: return new
rank: 893
score: 98.03345743815105
patch: CaMeL intern return false ;
rank: 893
score: 97.98865966796875
patch: return ( Character ;
rank: 893
score: 96.3643290201823
patch: CaMeL Type
rank: 894
score: 98.03255208333333
patch: CaMeL abs return false ;
rank: 894
score: 97.2721939086914
patch: throw true ?
rank: 894
score: 96.3490702311198
patch: false false
rank: 895
score: 98.02317301432292
patch: CaMeL List return ; ;
rank: 895
score: 97.99855346679688
patch: return == ch ;
rank: 895
score: 97.55397338867188
patch: CaMeL do . ;
rank: 895
score: 97.25387573242188
patch: Plane throw $STRING$
rank: 895
score: 96.34769694010417
patch: return true
rank: 896
score: 98.03074137369792
patch: return new return 0 ;
rank: 896
score: 98.02201334635417
patch: return return || return ;
rank: 896
score: 97.99548950195313
patch: expr return true ;
rank: 896
score: 97.97196044921876
patch: cb = false ;
rank: 896
score: 97.89993286132812
patch: if ( } }
rank: 896
score: 97.5455322265625
patch: CaMeL do .
rank: 896
score: 96.3405049641927
patch: Plane 0
rank: 897
score: 98.02506510416667
patch: CaMeL SIZE = false ;
rank: 897
score: 97.9909423828125
patch: position return false ;
rank: 897
score: 97.69490356445313
patch: contains = false ;
rank: 897
score: 97.60800170898438
patch: . return break ;
rank: 897
score: 97.54166259765626
patch: return == ) ;
rank: 897
score: 97.23571014404297
patch: return value $NUMBER$
rank: 897
score: 96.32755533854167
patch: CaMeL Class
rank: 898
score: 98.02353922526042
patch: return true ; false *
rank: 898
score: 97.94979248046874
patch: manifest = false ;
rank: 898
score: 97.89846801757812
patch: if ( )
rank: 898
score: 97.69149780273438
patch: String . char CaMeL
rank: 898
score: 97.60656127929687
patch: CaMeL ~ false ;
rank: 898
score: 97.54049682617188
patch: return 0 $NUMBER$ ;
rank: 898
score: 97.22714233398438
patch: throw false ?
rank: 898
score: 96.32345581054688
patch: Plane case
rank: 899
score: 98.023193359375
patch: CaMeL count return false ;
rank: 899
score: 97.98101196289062
patch: thread return false ;
rank: 899
score: 97.9353271484375
patch: 64 return false ;
rank: 899
score: 97.60540771484375
patch: CaMeL false = ;
rank: 899
score: 97.53984069824219
patch: return Character ;
rank: 899
score: 97.20733642578125
patch: return true )
rank: 899
score: 96.32042439778645
patch: Plane log
rank: 900
score: 98.02079264322917
patch: CaMeL append ( false ;
rank: 900
score: 97.89727783203125
patch: return ( this ;
rank: 900
score: 97.62367248535156
patch: return true ?
rank: 900
score: 97.60010375976563
patch: scanner = false ;
rank: 900
score: 97.53901977539063
patch: return ~ ) ;
rank: 900
score: 97.20354461669922
patch: return String ;
rank: 900
score: 96.3134053548177
patch: Plane check
rank: 901
score: 97.9231689453125
patch: 16 return false ;
rank: 901
score: 97.89578857421876
patch: return { true }
rank: 901
score: 97.59815063476563
patch: CaMeL Error -- ;
rank: 901
score: 97.53504943847656
patch: return name ;
rank: 901
score: 96.30958048502605
patch: contains false
rank: 902
score: 98.01888020833333
patch: CaMeL Float = false ;
rank: 902
score: 98.0041015625
patch: return null ; else
rank: 902
score: 97.61557006835938
patch: return index CaMeL
rank: 902
score: 97.59586791992187
patch: parser = false ;
rank: 902
score: 97.53216552734375
patch: return ch ) ;
rank: 902
score: 97.18611145019531
patch: return null }
rank: 902
score: 96.30777994791667
patch: Plane type
rank: 903
score: 97.92059326171875
patch: bp = false ;
rank: 903
score: 97.8931884765625
patch: handle return false ;
rank: 903
score: 97.5941162109375
patch: CaMeL false * /
rank: 903
score: 97.52846069335938
patch: return 0 ; /
rank: 903
score: 96.30588785807292
patch: ++ ;
rank: 904
score: 98.01568603515625
patch: CaMeL TRUE return false ;
rank: 904
score: 97.592431640625
patch: CaMeL return 1 ;
rank: 904
score: 97.18292999267578
patch: return cs !=
rank: 904
score: 96.27886962890625
patch: return /
rank: 905
score: 98.01514689127605
patch: return list . false ;
rank: 905
score: 97.93821411132812
patch: label return false ;
rank: 905
score: 97.907421875
patch: cr = false ;
rank: 905
score: 97.89201049804687
patch: state = false ;
rank: 905
score: 97.59121704101562
patch: . *= $NUMBER$ ;
rank: 905
score: 97.56192779541016
patch: return length ;
rank: 905
score: 97.5205322265625
patch: return 0 ; iterator
rank: 905
score: 96.2435811360677
patch: Plane ch
rank: 906
score: 98.01439412434895
patch: return ; return null ;
rank: 906
score: 97.989599609375
patch: CaMeL List return ;
rank: 906
score: 97.9380859375
patch: use return false ;
rank: 906
score: 97.90128784179687
patch: image = false ;
rank: 906
score: 97.5870849609375
patch: . return new ;
rank: 906
score: 97.5092544555664
patch: return Math ;
rank: 906
score: 97.05056762695312
patch: return )
rank: 906
score: 96.21985880533855
patch: Plane value
rank: 907
score: 98.01341756184895
patch: CaMeL Exception return null ;
rank: 907
score: 97.93436889648437
patch: result = null ;
rank: 907
score: 97.90026245117187
patch: cs = false ;
rank: 907
score: 97.510009765625
patch: try {
rank: 907
score: 96.21376546223958
patch: Plane )
rank: 908
score: 97.9340576171875
patch: found return true ;
rank: 908
score: 97.89661254882813
patch: socket = false ;
rank: 908
score: 97.88746337890625
patch: res return true ;
rank: 908
score: 97.5856689453125
patch: $NUMBER$ && false ;
rank: 908
score: 97.50462646484375
patch: return != 1 ;
rank: 908
score: 97.47483825683594
patch: return false {
rank: 908
score: 96.20519002278645
patch: CaMeL Object
rank: 909
score: 98.01165161132812
patch: CaMeL List false ;
rank: 909
score: 97.8919189453125
patch: return false ; default
rank: 909
score: 97.88351440429688
patch: return ( } ;
rank: 909
score: 97.45225524902344
patch: return ( (
rank: 909
score: 96.93128458658855
patch: Plane do
rank: 909
score: 96.19690958658855
patch: contains true
rank: 910
score: 97.8820068359375
patch: return ( ; ;
rank: 910
score: 97.87930908203126
patch: catch ( $STRING$ )
rank: 910
score: 97.5839111328125
patch: token = false ;
rank: 910
score: 97.49268798828125
patch: return 0 ; try
rank: 910
score: 97.43253326416016
patch: return size ;
rank: 910
score: 96.19346110026042
patch: Plane continue
rank: 911
score: 98.01065063476562
patch: false false return false ;
rank: 911
score: 97.88138427734376
patch: img = false ;
rank: 911
score: 97.87916259765625
patch: cached = false ;
rank: 911
score: 97.58339233398438
patch: output = false ;
rank: 911
score: 97.48611450195312
patch: return ~ 1 ;
rank: 911
score: 96.81538899739583
patch: LOG .
rank: 911
score: 96.15229797363281
patch: .
rank: 912
score: 97.96922607421875
patch: return ; } else
rank: 912
score: 97.92763671875
patch: component return false ;
rank: 912
score: 97.8718505859375
patch: CaMeL false ? ;
rank: 912
score: 97.45274658203125
patch: ; return $NUMBER$ ;
rank: 912
score: 96.81046549479167
patch: logger .
rank: 912
score: 96.14730834960938
patch: false
rank: 913
score: 98.00490315755208
patch: CaMeL Range false false ;
rank: 913
score: 97.92477416992188
patch: inst return true ;
rank: 913
score: 97.87626342773437
patch: return } break ;
rank: 913
score: 97.86922607421874
patch: return ! ; ;
rank: 913
score: 97.576904296875
patch: . return 1 ;
rank: 913
score: 97.45079956054687
patch: return 0 ; System
rank: 913
score: 96.1315689086914
patch: return
rank: 914
score: 98.0048828125
patch: CaMeL Long return false ;
rank: 914
score: 97.86595458984375
patch: channel = false ;
rank: 914
score: 97.44249877929687
patch: return == 1 ;
rank: 914
score: 96.74481201171875
patch: return TRUE
rank: 914
score: 96.07266998291016
patch: cs
rank: 915
score: 98.00379435221355
patch: return new return null ;
rank: 915
score: 97.94644775390626
patch: CaMeL Thread return ;
rank: 915
score: 97.87449951171875
patch: buf return false ;
rank: 915
score: 97.56915283203125
patch: . * /
rank: 915
score: 97.44097290039062
patch: CaMeL |= ) ;
rank: 915
score: 95.87318420410156
patch: contains
rank: 916
score: 97.94035034179687
patch: return return ; ;
rank: 916
score: 97.87432861328125
patch: sb return true ;
rank: 916
score: 97.8470703125
patch: inst = false ;
rank: 916
score: 97.56630249023438
patch: CaMeL State false ;
rank: 916
score: 95.8436279296875
patch: c
rank: 917
score: 97.84434814453125
patch: file = false ;
rank: 917
score: 97.56611938476563
patch: CaMeL return is ;
rank: 917
score: 97.43676147460937
patch: false = false ;
rank: 917
score: 96.64339192708333
patch: throw !
rank: 917
score: 95.83060455322266
patch: ;
rank: 918
score: 97.99784342447917
patch: return new Double false ;
rank: 918
score: 97.86513671875
patch: set = false ;
rank: 918
score: 97.56446838378906
patch: CaMeL break ;
rank: 918
score: 97.43157958984375
patch: return name ; ;
rank: 918
score: 97.308349609375
patch: Plane log .
rank: 918
score: 95.8241195678711
patch: !
rank: 919
score: 97.99676513671875
patch: false out return false ;
rank: 919
score: 97.8423828125
patch: pa = false ;
rank: 919
score: 97.5635986328125
patch: CaMeL return $STRING$ ;
rank: 919
score: 97.42572021484375
patch: return matches false ;
rank: 919
score: 97.29192352294922
patch: return true {
rank: 919
score: 96.61111450195312
patch: throw ?
rank: 919
score: 95.76654052734375
patch: static
rank: 920
score: 97.99659220377605
patch: return new ( ) ;
rank: 920
score: 97.84046020507813
patch: molecule = false ;
rank: 920
score: 97.5545425415039
patch: = true ;
rank: 920
score: 97.42415771484374
patch: return ; { ;
rank: 920
score: 95.73159790039062
patch: /
rank: 921
score: 97.89712524414062
patch: entry return false ;
rank: 921
score: 97.893017578125
patch: CaMeL Error return ;
rank: 921
score: 97.861767578125
patch: addr return false ;
rank: 921
score: 97.8365234375
patch: raw = false ;
rank: 921
score: 97.55272216796875
patch: . trim ( ;
rank: 921
score: 96.52232869466145
patch: throw default
rank: 921
score: 95.72724151611328
patch: ch
rank: 922
score: 97.83253173828125
patch: return ( byte ;
rank: 922
score: 97.55257568359374
patch: $NUMBER$ ? * /
rank: 922
score: 97.27421569824219
patch: String . }
rank: 922
score: 95.64166259765625
patch: )
rank: 923
score: 97.87967529296876
patch: return ; * ;
rank: 923
score: 97.85820922851562
patch: o return false ;
rank: 923
score: 97.83173217773438
patch: j = false ;
rank: 923
score: 97.40924682617188
patch: ( true ) ;
rank: 923
score: 97.26596069335938
patch: false try {
rank: 923
score: 96.50595092773438
patch: Plane Error
rank: 923
score: 95.58583068847656
patch: this
rank: 924
score: 97.9467041015625
patch: return this ; ;
rank: 924
score: 97.87892456054688
patch: return ; ; ;
rank: 924
score: 97.85670166015625
patch: throw new ch ;
rank: 924
score: 97.83024597167969
patch: return new ;
rank: 924
score: 97.5515625
patch: . equals ( ;
rank: 924
score: 95.57234191894531
patch: true
rank: 925
score: 97.88601684570312
patch: input return false ;
rank: 925
score: 97.8645263671875
patch: return false ; try
rank: 925
score: 97.85645751953125
patch: source return false ;
rank: 925
score: 95.48896789550781
patch: boolean
rank: 926
score: 97.8425537109375
patch: . return ; ;
rank: 926
score: 97.82115478515625
patch: score = false ;
rank: 926
score: 97.53641967773437
patch: . if ( ;
rank: 926
score: 97.23246765136719
patch: return $STRING$ ?
rank: 926
score: 96.44976806640625
patch: return $STRING$
rank: 926
score: 95.43268585205078
patch: (
rank: 927
score: 97.90287017822266
patch: CaMeL Exception ;
rank: 927
score: 97.8545654296875
patch: match = false ;
rank: 927
score: 97.53594970703125
patch: CaMeL ; if ;
rank: 927
score: 97.38850708007813
patch: CaMeL *= ) ;
rank: 927
score: 97.22950744628906
patch: return - ;
rank: 927
score: 96.42909749348958
patch: return in
rank: 927
score: 95.41791534423828
patch: m
rank: 928
score: 97.89847412109376
patch: return null ; false
rank: 928
score: 97.8407974243164
patch: assert true ;
rank: 928
score: 97.81189575195313
patch: is return false ;
rank: 928
score: 95.3597412109375
patch: s
rank: 929
score: 97.87135009765625
patch: position return true ;
rank: 929
score: 97.8335952758789
patch: return char ;
rank: 929
score: 97.81756591796875
patch: finder = false ;
rank: 929
score: 97.3820556640625
patch: CaMeL ( ) ;
rank: 929
score: 97.22467041015625
patch: return TRUE ?
rank: 929
score: 96.40594482421875
patch: throw
rank: 929
score: 95.26484680175781
patch: logger
rank: 930
score: 97.87882690429687
patch: CaMeL Class false ;
rank: 930
score: 97.87060546875
patch: return ! $STRING$ ;
rank: 930
score: 97.83351135253906
patch: return contains ;
rank: 930
score: 97.81419677734375
patch: bc = false ;
rank: 930
score: 97.78851318359375
patch: CaMeL Builder return ;
rank: 930
score: 97.5349609375
patch: server = false ;
rank: 930
score: 97.38094482421874
patch: return 0 . ;
rank: 930
score: 97.2234878540039
patch: Plane System .
rank: 930
score: 95.25984954833984
patch: break
rank: 931
score: 97.85731201171875
patch: CaMeL Null ( ;
rank: 931
score: 97.81855773925781
patch: switch ( )
rank: 931
score: 97.81358642578125
patch: doc = false ;
rank: 931
score: 97.38046875
patch: CaMeL = false ;
rank: 931
score: 97.22288513183594
patch: Plane try {
rank: 931
score: 95.22929382324219
patch: check
rank: 932
score: 97.86615600585938
patch: body return false ;
rank: 932
score: 97.81212158203125
patch: . false ? ;
rank: 932
score: 97.37264404296874
patch: return ; false ;
rank: 932
score: 97.21967315673828
patch: } } }
rank: 932
score: 96.37686157226562
patch: linguout
rank: 932
score: 95.17359161376953
patch: Char
rank: 933
score: 97.8646728515625
patch: string return false ;
rank: 933
score: 97.85011596679688
patch: CaMeL Exception false ;
rank: 933
score: 97.76811218261719
patch: return get ;
rank: 933
score: 97.52483520507812
patch: . substring ( ;
rank: 933
score: 97.36552734375
patch: return 0 ; this
rank: 933
score: 95.12776947021484
patch: final
rank: 934
score: 97.84270629882812
patch: CaMeL Range [ ;
rank: 934
score: 97.76148681640625
patch: return ; / ;
rank: 934
score: 97.51721954345703
patch: . char ;
rank: 934
score: 97.36498413085937
patch: return true . ;
rank: 934
score: 97.21514892578125
patch: return ! }
rank: 934
score: 96.310546875
patch: Plane throw
rank: 934
score: 95.09817504882812
patch: surrogate
rank: 935
score: 97.79400634765625
patch: control = false ;
rank: 935
score: 97.68428039550781
patch: return } ;
rank: 935
score: 97.51719970703125
patch: . int ++ ;
rank: 935
score: 96.30422973632812
patch: for $NUMBER$
rank: 935
score: 95.08760070800781
patch: ,
rank: 936
score: 97.83255004882812
patch: CaMeL String false ;
rank: 936
score: 97.79122924804688
patch: character = false ;
rank: 936
score: 97.758837890625
patch: return is return ;
rank: 936
score: 97.51329040527344
patch: CaMeL continue ;
rank: 936
score: 97.35115966796874
patch: return 0 ; public
rank: 936
score: 96.29257202148438
patch: Multi:
rank: 936
score: 95.03777313232422
patch: search
rank: 937
score: 97.82279663085937
patch: CaMeL Number false ;
rank: 937
score: 97.7903564453125
patch: a return false ;
rank: 937
score: 97.51212768554687
patch: CaMeL Enum false ;
rank: 937
score: 97.3503662109375
patch: ( return ) ;
rank: 937
score: 96.28122965494792
patch: log .
rank: 937
score: 95.03280639648438
patch: log
rank: 938
score: 97.85800170898438
patch: fail = false ;
rank: 938
score: 97.80977630615234
patch: CaMeL Range ;
rank: 938
score: 97.7900390625
patch: admin = false ;
rank: 938
score: 97.74805908203125
patch: return false ; finally
rank: 938
score: 97.61870574951172
patch: return return }
rank: 938
score: 97.18081665039062
patch: return $STRING$ .
rank: 938
score: 95.02268981933594
patch: r
rank: 939
score: 97.85732421875
patch: stream return false ;
rank: 939
score: 97.79796752929687
patch: CaMeL Range ( ;
rank: 939
score: 97.7898681640625
patch: return read ; }
rank: 939
score: 97.7374267578125
patch: return false ; do
rank: 939
score: 97.61231994628906
patch: return { ;
rank: 939
score: 97.33598022460937
patch: return ch ; ;
rank: 939
score: 97.18061065673828
patch: return null ?
rank: 939
score: 96.26773071289062
patch: lingucode
rank: 939
score: 94.994384765625
patch: p
rank: 940
score: 97.85174560546875
patch: thread return true ;
rank: 940
score: 97.78986206054688
patch: ip = false ;
rank: 940
score: 97.78129272460937
patch: return $STRING$ ; ;
rank: 940
score: 97.47512817382812
patch: $NUMBER$ * /
rank: 940
score: 96.25913492838542
patch: logger )
rank: 940
score: 94.9619140625
patch: None
rank: 941
score: 97.77925415039063
patch: return true ; default
rank: 941
score: 97.7775146484375
patch: CaMeL List . ;
rank: 941
score: 97.58108520507812
patch: throw ch ;
rank: 941
score: 97.4744644165039
patch: &= false ;
rank: 941
score: 94.91610717773438
patch: out
rank: 942
score: 97.8462646484375
patch: removed return false ;
rank: 942
score: 97.77797241210938
patch: ( ) . ;
rank: 942
score: 97.77388916015624
patch: CaMeL List ( ;
rank: 942
score: 97.5753173828125
patch: break * /
rank: 942
score: 97.47053527832031
patch: . break ;
rank: 942
score: 97.3243408203125
patch: return ; . ;
rank: 942
score: 94.90106964111328
patch: method
rank: 943
score: 97.84435424804687
patch: use return true ;
rank: 943
score: 97.77069091796875
patch: return new char ;
rank: 943
score: 97.56586456298828
patch: break $NUMBER$ ;
rank: 943
score: 97.3214599609375
patch: return size ; ;
rank: 943
score: 95.8548355102539
patch: do
rank: 943
score: 94.8992691040039
patch: temp
rank: 944
score: 97.76881408691406
patch: CaMeL Number ;
rank: 944
score: 97.765869140625
patch: packet = false ;
rank: 944
score: 97.42469787597656
patch: $NUMBER$ . ;
rank: 944
score: 97.31620483398437
patch: CaMeL += false ;
rank: 944
score: 95.75431823730469
patch: result
rank: 944
score: 94.87907409667969
patch: code
rank: 945
score: 97.8393310546875
patch: z return false ;
rank: 945
score: 97.76705932617188
patch: ( this ) ;
rank: 945
score: 97.76554565429687
patch: ct = false ;
rank: 945
score: 97.39230346679688
patch: ? * /
rank: 945
score: 96.6929219563802
patch: throw new
rank: 945
score: 95.71428680419922
patch: else
rank: 945
score: 94.82794952392578
patch: data
rank: 946
score: 97.70244140625
patch: return get false ;
rank: 946
score: 97.49282836914062
patch: if ( {
rank: 946
score: 97.31551513671874
patch: return - ch ;
rank: 946
score: 96.62120564778645
patch: System .
rank: 946
score: 94.7920150756836
patch: i
rank: 947
score: 97.76298217773437
patch: book = false ;
rank: 947
score: 97.76087646484375
patch: CaMeL List false false
rank: 947
score: 97.69343872070313
patch: CaMeL State return ;
rank: 947
score: 97.46653747558594
patch: return = ;
rank: 947
score: 97.31417846679688
patch: return false ; /
rank: 947
score: 96.60003662109375
patch: String [
rank: 947
score: 94.78627014160156
patch: prev
rank: 948
score: 97.75521240234374
patch: CaMeL Range false false
rank: 948
score: 97.7503662109375
patch: roster = false ;
rank: 948
score: 97.45954895019531
patch: if ( ;
rank: 948
score: 97.34465026855469
patch: += false ;
rank: 948
score: 97.31395263671875
patch: CaMeL do . false
rank: 948
score: 96.59888712565105
patch: Plane [
rank: 949
score: 97.74974365234375
patch: return Character . ;
rank: 949
score: 97.73113403320312
patch: return get ; ;
rank: 949
score: 97.6839599609375
patch: return equals false ;
rank: 949
score: 97.44927978515625
patch: b return ;
rank: 949
score: 97.3377456665039
patch: ( false ;
rank: 949
score: 97.31224365234375
patch: return is ) ;
rank: 949
score: 95.21727752685547
patch: ret
rank: 949
score: 94.77278137207031
patch: b
rank: 950
score: 97.82368774414063
patch: result = $STRING$ ;
rank: 950
score: 97.748779296875
patch: . ; ;
rank: 950
score: 97.32083129882812
patch: *= false ;
rank: 950
score: 97.310888671875
patch: return length ; ;
rank: 950
score: 95.14337158203125
patch: Thread
rank: 950
score: 94.75607299804688
patch: node
rank: 951
score: 97.82298583984375
patch: Variable return false ;
rank: 951
score: 97.7483154296875
patch: return $STRING$ . ;
rank: 951
score: 97.72733154296876
patch: CaMeL Exception = ;
rank: 951
score: 97.41552734375
patch: } else {
rank: 951
score: 94.73340606689453
patch: sb
rank: 952
score: 97.81928100585938
patch: call return false ;
rank: 952
score: 97.74794311523438
patch: color = false ;
rank: 952
score: 97.72508544921875
patch: CaMeL Class ( ;
rank: 952
score: 97.67783813476562
patch: return ( return ;
rank: 952
score: 97.41544342041016
patch: switch 1 ;
rank: 952
score: 97.29460144042969
patch: || false ;
rank: 952
score: 95.11825561523438
patch: continue
rank: 952
score: 94.7304458618164
patch: Sequence
rank: 953
score: 97.74786987304688
patch: 1 return false ;
rank: 953
score: 97.6608154296875
patch: CaMeL Class return ;
rank: 953
score: 97.40680694580078
patch: break [ ;
rank: 953
score: 97.30633544921875
patch: return ) return ;
rank: 953
score: 96.48895263671875
patch: cs .
rank: 954
score: 97.81390380859375
patch: exception return true ;
rank: 954
score: 97.74104614257813
patch: CaMeL Builder . ;
rank: 954
score: 97.40402221679688
patch: } break ;
rank: 954
score: 97.28783416748047
patch: CaMeL false ?
rank: 954
score: 97.2211685180664
patch: CaMeL do ;
rank: 954
score: 96.4764404296875
patch: String .
rank: 954
score: 95.07263946533203
patch: Object
rank: 954
score: 94.70367431640625
patch: for
rank: 955
score: 97.74046630859375
patch: return false * ;
rank: 955
score: 97.27516174316406
patch: if false ;
rank: 955
score: 96.45973714192708
patch: return !
rank: 955
score: 94.65780639648438
patch: info
rank: 956
score: 97.70968627929688
patch: return value ; ;
rank: 956
score: 97.6474853515625
patch: return ; , ;
rank: 956
score: 97.4020767211914
patch: ( ) ;
rank: 956
score: 97.26366424560547
patch: && false ;
rank: 956
score: 97.19808959960938
patch: CaMeL Builder ;
rank: 956
score: 96.45039876302083
patch: Asserts .
rank: 956
score: 94.65504455566406
patch: expr
rank: 957
score: 97.739404296875
patch: byte = false ;
rank: 957
score: 97.400634765625
patch: break ? ;
rank: 957
score: 97.25822448730469
patch: = null ;
rank: 957
score: 94.64532470703125
patch: *
rank: 958
score: 97.78359375
patch: ( cs ) ;
rank: 958
score: 97.73846435546875
patch: return ! contains ;
rank: 958
score: 97.40010833740234
patch: switch false ;
rank: 958
score: 97.13641357421875
patch: return ; .
rank: 958
score: 96.42030843098958
patch: Logger .
rank: 958
score: 94.6231918334961
patch: file
rank: 959
score: 97.39242553710938
patch: this return ;
rank: 959
score: 97.19192504882812
patch: return start ;
rank: 959
score: 97.07627868652344
patch: return ] ;
rank: 959
score: 94.59932708740234
patch: t
rank: 960
score: 97.779345703125
patch: fail = true ;
rank: 960
score: 97.73642578125
patch: if ( ! ;
rank: 960
score: 97.64022216796874
patch: CaMeL Object return ;
rank: 960
score: 97.38513946533203
patch: return list ;
rank: 960
score: 97.06642150878906
patch: return Range ;
rank: 960
score: 94.59111785888672
patch: tmp
rank: 961
score: 97.736279296875
patch: Channel return false ;
rank: 961
score: 97.6697265625
patch: CaMeL String false false
rank: 961
score: 97.37701416015625
patch: break : ;
rank: 961
score: 97.16604614257812
patch: . append ;
rank: 961
score: 97.03829956054688
patch: CaMeL ++ ;
rank: 961
score: 94.57086181640625
patch: handler
rank: 962
score: 97.63885498046875
patch: return new byte ;
rank: 962
score: 97.365478515625
patch: break -- ;
rank: 962
score: 97.16326904296875
patch: == null ?
rank: 962
score: 97.02635192871094
patch: CaMeL -- ;
rank: 962
score: 94.54401397705078
patch: config
rank: 963
score: 97.1560287475586
patch: return default ;
rank: 963
score: 94.81791687011719
patch: in
rank: 963
score: 94.53608703613281
patch: count
rank: 964
score: 97.6273193359375
patch: . ;
rank: 964
score: 97.35517120361328
patch: else return ;
rank: 964
score: 97.14822387695312
patch: . compare ;
rank: 964
score: 94.53044128417969
patch: String
rank: 965
score: 97.6334716796875
patch: return ! null ;
rank: 965
score: 97.61646728515625
patch: && return false ;
rank: 965
score: 97.55176544189453
patch: return read ;
rank: 965
score: 97.34334309895833
patch: break :
rank: 965
score: 94.71578216552734
patch: set
rank: 965
score: 94.51313781738281
patch: tree
rank: 966
score: 94.6922607421875
patch: type
rank: 966
score: 94.50920104980469
patch: ||
rank: 967
score: 97.627880859375
patch: CaMeL List . false
rank: 967
score: 97.13755798339844
patch: CaMeL Error ;
rank: 967
score: 96.96385192871094
patch: return Double ;
rank: 967
score: 94.50297546386719
patch: ?
rank: 968
score: 97.62542114257812
patch: CaMeL Boolean false ;
rank: 968
score: 97.61082763671875
patch: . return ) ;
rank: 968
score: 97.50802612304688
patch: . false ?
rank: 968
score: 97.33195495605469
patch: switch $NUMBER$ ;
rank: 968
score: 97.12469482421875
patch: return max ;
rank: 968
score: 96.96051025390625
patch: CaMeL Thread ;
rank: 968
score: 94.49336242675781
patch: d
rank: 969
score: 97.32490539550781
patch: -- true ;
rank: 969
score: 97.12313079833984
patch: . float ;
rank: 969
score: 94.56202697753906
patch: Accessible
rank: 969
score: 94.49168395996094
patch: low
rank: 970
score: 97.62315673828125
patch: CaMeL Number ( ;
rank: 970
score: 97.10684204101562
patch: != null ?
rank: 970
score: 96.8963394165039
patch: return padding ;
rank: 970
score: 94.54682922363281
patch: peer
rank: 970
score: 94.48702239990234
patch: l
rank: 971
score: 97.59632873535156
patch: return ; ?
rank: 971
score: 97.31956481933594
patch: break = ;
rank: 971
score: 94.5452880859375
patch: Error
rank: 971
score: 94.47262573242188
patch: z
rank: 972
score: 97.48417663574219
patch: return filter ;
rank: 972
score: 97.47576904296875
patch: return reverse ;
rank: 972
score: 97.31838989257812
patch: break . ;
rank: 972
score: 97.09757995605469
patch: ; break ;
rank: 972
score: 96.87751007080078
patch: return Short ;
rank: 972
score: 94.54049682617188
patch: init
rank: 973
score: 97.14016723632812
patch: break ?
rank: 973
score: 97.09440612792969
patch: CaMeL Enum ;
rank: 973
score: 96.87405395507812
patch: CaMeL sum .
rank: 973
score: 94.52572631835938
patch: parser
rank: 973
score: 94.44546508789062
patch: buffer
rank: 974
score: 97.07902018229167
patch: break .
rank: 974
score: 96.8534927368164
patch: return SIZE ;
rank: 974
score: 94.44444274902344
patch: path
rank: 975
score: 97.43133544921875
patch: p = ;
rank: 975
score: 97.30406951904297
patch: false * /
rank: 975
score: 97.0709228515625
patch: CaMeL State ;
rank: 975
score: 94.51812744140625
patch: f
rank: 975
score: 94.4427490234375
patch: o
rank: 976
score: 97.42623138427734
patch: CaMeL String ;
rank: 976
score: 97.32215881347656
patch: throw i ;
rank: 976
score: 97.25022888183594
patch: return in ;
rank: 976
score: 97.06504821777344
patch: . short ;
rank: 976
score: 96.84522247314453
patch: return Integer ;
rank: 976
score: 94.50543212890625
patch: al
rank: 977
score: 97.24497985839844
patch: return ; :
rank: 977
score: 97.05111694335938
patch: ( ; ;
rank: 977
score: 96.87209065755208
patch: break }
rank: 977
score: 96.81409454345703
patch: ( ) .
rank: 977
score: 94.49311828613281
patch: Context
rank: 977
score: 94.4188461303711
patch: answer
rank: 978
score: 97.40253448486328
patch: CaMeL Exception false
rank: 978
score: 97.28119659423828
patch: throw $NUMBER$ ;
rank: 978
score: 97.04642486572266
patch: CaMeL false .
rank: 978
score: 96.86965942382812
patch: result ;
rank: 978
score: 94.48178100585938
patch: Variable
rank: 978
score: 94.4122085571289
patch: _
rank: 979
score: 97.35037994384766
patch: CaMeL Null ;
rank: 979
score: 97.21753692626953
patch: return equals ;
rank: 979
score: 97.02252197265625
patch: $NUMBER$ . ?
rank: 979
score: 96.82515462239583
patch: continue ;
rank: 979
score: 96.78019714355469
patch: false ; ;
rank: 979
score: 94.81851196289062
patch: and
rank: 979
score: 94.39664459228516
patch: debug
rank: 980
score: 97.16058349609375
patch: return matches ;
rank: 980
score: 97.01283264160156
patch: . . .
rank: 980
score: 96.77093505859375
patch: ; false ;
rank: 980
score: 94.43441009521484
patch: register
rank: 980
score: 94.38809967041016
patch: System
rank: 981
score: 97.27081298828125
patch: CaMeL List ;
rank: 981
score: 97.14289093017578
patch: CaMeL Class ;
rank: 981
score: 97.01213073730469
patch: $NUMBER$ ( ;
rank: 981
score: 96.7489013671875
patch: return Subset ;
rank: 981
score: 96.67909749348958
patch: return cs
rank: 981
score: 94.38799285888672
patch: :
rank: 982
score: 97.00798034667969
patch: . substring ;
rank: 982
score: 96.73407745361328
patch: return US ;
rank: 982
score: 94.38789367675781
patch: Script
rank: 982
score: 94.38558959960938
patch: bytes
rank: 983
score: 97.07206726074219
patch: return set ;
rank: 983
score: 96.71570587158203
patch: CaMeL matches ;
rank: 983
score: 94.37208557128906
patch: cx
rank: 983
score: 94.3439712524414
patch: buf
rank: 984
score: 97.22685241699219
patch: return EMPTY ;
rank: 984
score: 96.99905395507812
patch: . equals ;
rank: 984
score: 96.64646402994792
patch: -- ;
rank: 984
score: 94.33853149414062
patch: Logger
rank: 985
score: 96.97648111979167
patch: ( ;
rank: 985
score: 94.32665252685547
patch: rect
rank: 985
score: 94.31086730957031
patch: trace
rank: 986
score: 97.02300262451172
patch: return sum ;
rank: 986
score: 96.8905537923177
patch: CaMeL ;
rank: 986
score: 96.6877212524414
patch: return Void ;
rank: 986
score: 96.55558268229167
patch: } else
rank: 986
score: 96.5502421061198
patch: result =
rank: 986
score: 94.31841278076172
patch: stream
rank: 986
score: 94.28550720214844
patch: line
rank: 987
score: 97.26954650878906
patch: this . ;
rank: 987
score: 97.13019561767578
patch: CaMeL arraycopy ;
rank: 987
score: 96.80063883463542
patch: * /
rank: 987
score: 96.67637634277344
patch: CaMeL finally .
rank: 987
score: 96.54776000976562
patch: exception .
rank: 987
score: 94.38627624511719
patch: not
rank: 987
score: 94.27076721191406
patch: Configuration
rank: 988
score: 97.24305725097656
patch: 16 . ;
rank: 988
score: 96.6712646484375
patch: CaMeL do {
rank: 988
score: 96.64339192708333
patch: $NUMBER$ ;
rank: 988
score: 94.31033325195312
patch: obj
rank: 988
score: 94.27046203613281
patch: flags
rank: 989
score: 97.0989761352539
patch: CaMeL Error false
rank: 989
score: 96.51019287109375
patch: } ;
rank: 989
score: 94.30540466308594
patch: output
rank: 989
score: 94.25840759277344
patch: Method
rank: 990
score: 97.21627807617188
patch: ^= false ;
rank: 990
score: 97.08940887451172
patch: CaMeL Boolean ;
rank: 990
score: 96.66898345947266
patch: CaMeL matches .
rank: 990
score: 96.46512858072917
patch: else }
rank: 990
score: 94.34217834472656
patch: ignore
rank: 990
score: 94.29580688476562
patch: case
rank: 990
score: 94.25717163085938
patch: record
rank: 991
score: 97.21210479736328
patch: c = ;
rank: 991
score: 97.06805419921875
patch: CaMeL Byte ;
rank: 991
score: 96.41942342122395
patch: return return
rank: 991
score: 96.22981770833333
patch: http :
rank: 991
score: 94.33576202392578
patch: List
rank: 991
score: 94.29484558105469
patch: owner
rank: 992
score: 97.20654296875
patch: . ; }
rank: 992
score: 96.66395568847656
patch: return true .
rank: 992
score: 96.41717529296875
patch: } )
rank: 992
score: 94.30874633789062
patch: have
rank: 992
score: 94.29420471191406
patch: cl
rank: 993
score: 97.04808807373047
patch: CaMeL Exception {
rank: 993
score: 96.95672607421875
patch: return left ;
rank: 993
score: 96.19590250651042
patch: $NUMBER$ .
rank: 993
score: 94.27984619140625
patch: if
rank: 994
score: 97.00906372070312
patch: CaMeL Number false
rank: 994
score: 96.95196533203125
patch: return format ;
rank: 994
score: 96.64729309082031
patch: CaMeL sum ;
rank: 994
score: 96.07731628417969
patch: try
rank: 994
score: 94.27425384521484
patch: parent
rank: 994
score: 94.25717163085938
patch: os
rank: 995
score: 96.99392700195312
patch: CaMeL Range false
rank: 995
score: 96.94892883300781
patch: return decode ;
rank: 995
score: 96.71942138671875
patch: ? ;
rank: 995
score: 94.2539291381836
patch: like
rank: 995
score: 94.21493530273438
patch: no
rank: 996
score: 96.64402770996094
patch: false * ;
rank: 996
score: 94.25625610351562
patch: fine
rank: 996
score: 94.20976257324219
patch: impl
rank: 997
score: 96.40189615885417
patch: = ;
rank: 997
score: 95.99643961588542
patch: false ;
rank: 997
score: 94.24105834960938
patch: source
rank: 997
score: 94.20381927490234
patch: bad
rank: 997
score: 94.19416046142578
patch: names
rank: 998
score: 96.39907836914062
patch: p ;
rank: 998
score: 96.38525390625
patch: false {
rank: 998
score: 94.88113403320312
patch: finally
rank: 998
score: 94.21751403808594
patch: a
rank: 998
score: 94.17916870117188
patch: DEBUG
rank: 999
score: 95.65863037109375
patch: ; {
rank: 999
score: 94.21426391601562
patch: super
rank: 999
score: 94.18122863769531
patch: report
rank: 999
score: 94.17902374267578
patch: Map
rank: 1000
score: 94.20957946777344
patch: v
rank: 1000
score: 94.15864562988281
patch: Params
