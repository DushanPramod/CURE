rank: 1
score: 99.89591471354167
patch: continue ;
rank: 1
score: 99.5633316040039
patch: continue ; }
rank: 1
score: 99.43305206298828
patch: return INDEX _ NOT _ FOUND ;
rank: 1
score: 99.43000030517578
patch: continue INDEX _ NOT _ FOUND ;
rank: 1
score: 99.3658447265625
patch: break ; }
rank: 1
score: 99.35924530029297
patch: continue ; } else { continue ;
rank: 1
score: 99.33548990885417
patch: continue - 1 ; }
rank: 1
score: 98.96211751302083
patch: continue ; } continue ;
rank: 2
score: 99.47015380859375
patch: search CaMeL Chars [ j ] = ch ;
rank: 2
score: 99.41398111979167
patch: return search CaMeL Chars [ j ] ;
rank: 2
score: 99.41356811523437
patch: continue ; } }
rank: 2
score: 99.40394897460938
patch: continue ; continue ;
rank: 2
score: 99.39669460720486
patch: return INDEX _ NOT _ FOUND ; }
rank: 2
score: 99.29962158203125
patch: continue ; } continue ; }
rank: 3
score: 99.295166015625
patch: continue ; } ; }
rank: 3
score: 99.29347737630208
patch: continue ; } else { continue ; }
rank: 3
score: 99.118212890625
patch: result = INDEX _ NOT _ FOUND ; }
rank: 3
score: 99.07014465332031
patch: continue ; ;
rank: 3
score: 98.85858917236328
patch: return continue ; } if continue ;
rank: 4
score: 99.31821017795139
patch: continue INDEX _ NOT _ FOUND ; }
rank: 4
score: 99.23048706054688
patch: search CaMeL Len ++ ; break ; } }
rank: 4
score: 99.13589477539062
patch: count ++ ; break ; } }
rank: 4
score: 99.117041015625
patch: break ; } }
rank: 4
score: 99.03714752197266
patch: continue ; continue ; if continue ;
rank: 4
score: 98.85581752232143
patch: return continue ; } continue ;
rank: 5
score: 99.33315207741477
patch: return cs . char CaMeL At ( j ) ;
rank: 5
score: 99.27749197823661
patch: continue ; } } continue ;
rank: 5
score: 99.2590576171875
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 5
score: 99.25724029541016
patch: continue ; } } return i ;
rank: 5
score: 99.09137573242188
patch: return INDEX _ NOT _ FOUND ; } }
rank: 5
score: 99.02428436279297
patch: continue ; continue ; } continue ;
rank: 5
score: 98.83993530273438
patch: continue ; ; } if continue ;
rank: 6
score: 99.27259826660156
patch: return 1 ; } } continue ;
rank: 6
score: 99.20506184895834
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs , ch ) ;
rank: 6
score: 99.07345920138889
patch: result = INDEX _ NOT _ FOUND ;
rank: 6
score: 98.8342514038086
patch: continue ; / else { continue ;
rank: 7
score: 99.32666954627403
patch: return search CaMeL Chars . char CaMeL At ( j ) ;
rank: 7
score: 99.27253069196429
patch: search CaMeL Chars [ j ] = INDEX _ NOT _ FOUND ;
rank: 7
score: 99.20635986328125
patch: return 0 ; } } continue ;
rank: 7
score: 99.2018710049716
patch: search CaMeL Chars [ j ] = ch ; }
rank: 7
score: 99.1739501953125
patch: continue continue ; }
rank: 7
score: 99.12386474609374
patch: continue false ; }
rank: 7
score: 99.02968343098958
patch: tmp = cs . char CaMeL At ( j ) ;
rank: 7
score: 98.85719807942708
patch: continue ; if continue ;
rank: 7
score: 98.82913208007812
patch: continue continue ; } if continue ;
rank: 8
score: 99.32012329101562
patch: return search CaMeL Chars [ j ] ; }
rank: 8
score: 99.212158203125
patch: continue ; } return INDEX _ NOT _ FOUND ;
rank: 8
score: 99.1981709798177
patch: return 1 ; } }
rank: 8
score: 99.16378784179688
patch: continue ; } if ( ; }
rank: 8
score: 99.04718017578125
patch: break - 1 ; } }
rank: 8
score: 98.85277557373047
patch: continue ; if continue ; break ;
rank: 8
score: 98.80788748604911
patch: continue ; } if continue ;
rank: 9
score: 99.24845377604167
patch: continue ; } } return INDEX _ NOT _ FOUND ;
rank: 9
score: 99.17097691127232
patch: break ; } } continue ;
rank: 9
score: 99.12412806919643
patch: continue ; break ; } }
rank: 9
score: 99.039697265625
patch: continue search CaMeL Chars [ j ] ; }
rank: 9
score: 99.02745472301136
patch: table . return INDEX _ NOT _ FOUND ; }
rank: 9
score: 98.84320068359375
patch: continue ; continue ; break ;
rank: 10
score: 99.29597691127232
patch: return search CaMeL Chars . char CaMeL At ( j ) ; }
rank: 10
score: 99.16792805989583
patch: continue ? INDEX _ NOT _ FOUND : INDEX _ NOT _ FOUND ;
rank: 10
score: 99.159814453125
patch: return 0 ; }
rank: 10
score: 99.14723205566406
patch: continue ; } else if continue ;
rank: 10
score: 99.12307303292411
patch: continue ; } break ; }
rank: 10
score: 99.02728271484375
patch: break ; } } return i ;
rank: 10
score: 99.01688232421876
patch: continue 1 ; }
rank: 10
score: 98.83836146763393
patch: continue ; if ; continue ;
rank: 10
score: 98.80541314019098
patch: continue ; } continue ; if continue ;
rank: 11
score: 99.29182942708333
patch: return cs . char CaMeL At ( j ) ; }
rank: 11
score: 99.15479193793402
patch: return search CaMeL Chars [ i ] ;
rank: 11
score: 99.133544921875
patch: continue ; } else = continue ;
rank: 11
score: 99.01826985677083
patch: search CaMeL Len = search CaMeL Chars . length ; }
rank: 11
score: 98.82754952566964
patch: continue ; ; if continue ;
rank: 11
score: 98.7921142578125
patch: return continue - 0 ;
rank: 12
score: 99.21205647786458
patch: ch = cs . char CaMeL At ( j ) ;
rank: 12
score: 99.15406901041666
patch: continue index CaMeL Of CaMeL Any CaMeL But ( cs , ch ) ;
rank: 12
score: 99.1373046875
patch: search CaMeL Chars [ i ] = ch ;
rank: 12
score: 99.1267318725586
patch: continue ; } if ( continue ;
rank: 12
score: 99.082275390625
patch: continue ; } } if ( ;
rank: 12
score: 99.01788330078125
patch: res = cs . char CaMeL At ( j ) ;
rank: 12
score: 98.8233642578125
patch: continue ; if ; continue ; break ;
rank: 12
score: 98.79206848144531
patch: continue ; / / * continue ;
rank: 13
score: 99.14467486213235
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( cs , ch ) ;
rank: 13
score: 99.122607421875
patch: ch = search CaMeL Chars [ j ] ;
rank: 13
score: 98.988525390625
patch: Arrays . is CaMeL Empty ( search CaMeL Chars ) ;
rank: 13
score: 98.97660064697266
patch: continue - 1 ; } break ;
rank: 13
score: 98.81949869791667
patch: continue ; continue ; ;
rank: 13
score: 98.78094482421875
patch: continue * continue - 1 ;
rank: 14
score: 99.14453125
patch: return this . search CaMeL Chars [ j ] ;
rank: 14
score: 99.10879516601562
patch: continue ; } } if continue ;
rank: 14
score: 98.98404947916667
patch: prefix = cs . char CaMeL At ( j ) ;
rank: 14
score: 98.9748026529948
patch: break - 1 ; }
rank: 14
score: 98.7925796508789
patch: continue ; continue ; if ; ;
rank: 14
score: 98.77759660993304
patch: continue continue ; } continue ;
rank: 15
score: 99.19654337565105
patch: return INDEX _ NOT _ FOUND ; } return i ;
rank: 15
score: 99.17025052584134
patch: return index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 15
score: 99.14415690104167
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( cs ) ;
rank: 15
score: 99.10546875
patch: return 0 ; } }
rank: 15
score: 99.07685852050781
patch: continue ; } ; } continue ;
rank: 15
score: 98.97828165690105
patch: t = cs . char CaMeL At ( j ) ;
rank: 15
score: 98.97073800223214
patch: continue ; } if ( ;
rank: 15
score: 98.78097873263889
patch: continue ; continue ; if ; continue ;
rank: 15
score: 98.7765401204427
patch: return continue - 1 ;
rank: 16
score: 99.16982797475961
patch: return ( cs . char CaMeL At ( j ) ) ;
rank: 16
score: 99.14219755284927
patch: continue INDEX _ NOT _ FOUND + cs . char CaMeL At ( j ) ;
rank: 16
score: 99.08848571777344
patch: continue ; } } } continue ;
rank: 16
score: 99.08265032087054
patch: continue ; } return i ;
rank: 16
score: 99.07547607421876
patch: search CaMeL Len ++ ; continue ; } }
rank: 16
score: 98.97798461914063
patch: true + INDEX _ NOT _ FOUND ; }
rank: 16
score: 98.97032928466797
patch: continue - 1 ; } continue ;
rank: 16
score: 98.77964952256944
patch: continue ; ; if continue ; break ;
rank: 17
score: 99.17464447021484
patch: return i ;
rank: 17
score: 99.16252790178571
patch: search CaMeL Len += cs . char CaMeL At ( j ) ;
rank: 17
score: 99.13951200597427
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs , search CaMeL Chars ) ;
rank: 17
score: 99.07550811767578
patch: continue ; } j ++ ; }
rank: 17
score: 99.0750961303711
patch: pos ++ ; break ; } }
rank: 17
score: 98.97593180338542
patch: b = cs . char CaMeL At ( j ) ;
rank: 17
score: 98.9517822265625
patch: count ++ ; break ; }
rank: 17
score: 98.77473958333333
patch: continue ; continue ; }
rank: 17
score: 98.77125549316406
patch: continue ; } continue ; break ;
rank: 18
score: 99.17308553059895
patch: search CaMeL Chars . char CaMeL At ( j ) ;
rank: 18
score: 99.16215006510417
patch: search CaMeL Chars [ j ] = search CaMeL Chars [ j ] ;
rank: 18
score: 99.12998046875
patch: return index CaMeL Of CaMeL Any CaMeL But ( ch , ch ) ;
rank: 18
score: 99.06896209716797
patch: continue ; } if ; continue ;
rank: 18
score: 99.06733049665179
patch: continue ; } j ++ ;
rank: 18
score: 99.06179809570312
patch: continue ; } else { continue ; } }
rank: 18
score: 98.962109375
patch: ret = INDEX _ NOT _ FOUND ; }
rank: 18
score: 98.9455078125
patch: continue true ; }
rank: 18
score: 98.77366807725694
patch: continue ; continue ; } if continue ;
rank: 19
score: 99.12861902573529
patch: return search CaMeL Chars . index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 19
score: 99.06378173828125
patch: continue ; } else return continue ;
rank: 19
score: 99.05739339192708
patch: continue ; default : break ; } }
rank: 19
score: 99.05494384765625
patch: continue ; } } return cs CaMeL Len ;
rank: 19
score: 98.95789591471355
patch: res = cs . char CaMeL At ( i ) ;
rank: 19
score: 98.93783569335938
patch: count -- ; break ; } }
rank: 19
score: 98.75898960658482
patch: continue ; continue ; continue ;
rank: 20
score: 99.17249474158653
patch: return i ; } } return INDEX _ NOT _ FOUND ;
rank: 20
score: 99.148876953125
patch: search CaMeL Chars [ j ] = $STRING$ ;
rank: 20
score: 99.12835334329044
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs , search CaMeL Len ) ;
rank: 20
score: 99.0539794921875
patch: { return INDEX _ NOT _ FOUND ; }
rank: 20
score: 99.04099527994792
patch: return i ; } }
rank: 20
score: 98.95712515024039
patch: res = cs . char CaMeL At ( j ) ; }
rank: 20
score: 98.93184988839286
patch: continue - 1 ; } }
rank: 20
score: 98.75023057725694
patch: continue ; continue ; ; if continue ;
rank: 21
score: 99.16327373798077
patch: return INDEX _ NOT _ FOUND ; } } return i ;
rank: 21
score: 99.12815856933594
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( ch ) ; }
rank: 21
score: 99.05547332763672
patch: break ; } } } continue ;
rank: 21
score: 99.04082489013672
patch: continue ; default : continue ; }
rank: 21
score: 99.03186645507813
patch: continue INDEX _ NOT _ FOUND ; } }
rank: 21
score: 98.95442708333333
patch: tmp = cs . char CaMeL At ( i ) ;
rank: 21
score: 98.74681091308594
patch: continue ; * / if continue ;
rank: 21
score: 98.73858642578125
patch: continue ; continue ; } break ;
rank: 22
score: 99.1561767578125
patch: return search CaMeL Chars [ i ] ; }
rank: 22
score: 99.03997802734375
patch: continue ; } } return continue ;
rank: 22
score: 99.03639526367188
patch: continue ; } else { break ; } }
rank: 22
score: 99.02342224121094
patch: continue ; } return i ; }
rank: 22
score: 98.93015747070312
patch: continue - 1 ;
rank: 22
score: 98.73448944091797
patch: continue ; if ; ; continue ;
rank: 22
score: 98.730078125
patch: continue - 0 ;
rank: 23
score: 99.1530253092448
patch: search CaMeL Chars [ j ] = search CaMeL Len ;
rank: 23
score: 99.11930577895221
patch: return index CaMeL Of CaMeL Any CaMeL But ( ch , search CaMeL Chars ) ;
rank: 23
score: 99.0312271118164
patch: break ; } else { continue ;
rank: 23
score: 99.02587127685547
patch: continue ; default : break ; }
rank: 23
score: 98.95293579101562
patch: res = INDEX _ NOT _ FOUND ; }
rank: 23
score: 98.92245483398438
patch: continue ; } if ( continue )
rank: 23
score: 98.73365020751953
patch: continue ; ; if ; continue ;
rank: 23
score: 98.71744537353516
patch: continue ; ; ; if continue ;
rank: 24
score: 99.15056903545673
patch: return 0 ; } } return INDEX _ NOT _ FOUND ;
rank: 24
score: 99.13675537109376
patch: result = search CaMeL Chars [ j ] ;
rank: 24
score: 99.11927897135416
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs , cs ) ;
rank: 24
score: 99.02217102050781
patch: break ; } } if continue ;
rank: 24
score: 99.01890055338542
patch: continue ; } continue ; } continue ;
rank: 24
score: 98.99227905273438
patch: return 0 ; } return i ;
rank: 24
score: 98.94901529947917
patch: c = cs . char CaMeL At ( j ) ;
rank: 24
score: 98.9183578491211
patch: continue - 1 ; break ; }
rank: 24
score: 98.7159423828125
patch: return continue ;
rank: 24
score: 98.70256958007812
patch: outer ; continue ;
rank: 25
score: 99.14776611328125
patch: search CaMeL Chars . char CaMeL At ( j + 1 ) ;
rank: 25
score: 99.13150728665866
patch: continue ; } } } return INDEX _ NOT _ FOUND ;
rank: 25
score: 99.11189539292279
patch: return index CaMeL Of CaMeL Any CaMeL But ( ch , search CaMeL Len ) ;
rank: 25
score: 99.0172119140625
patch: continue ; } } ;
rank: 25
score: 99.01556396484375
patch: return $NUMBER$ ; } } continue ;
rank: 25
score: 98.9899569424716
patch: search CaMeL Chars [ i ] = ch ; }
rank: 25
score: 98.94451904296875
patch: search CaMeL Len += search CaMeL Chars . length ; }
rank: 25
score: 98.90914154052734
patch: continue 1 ; break 1 ; }
rank: 25
score: 98.70318603515625
patch: return continue ; } ; if continue ;
rank: 25
score: 98.69499206542969
patch: continue ; if ; ; break ;
rank: 26
score: 99.14666278545673
patch: search CaMeL Chars . char CaMeL At ( j ) ; }
rank: 26
score: 99.12313138521634
patch: continue ( cs . char CaMeL At ( j ) ) ;
rank: 26
score: 99.10634478400735
patch: result = i ? INDEX _ NOT _ FOUND : INDEX _ NOT _ FOUND ;
rank: 26
score: 99.01554361979167
patch: search CaMeL Len ++ ; continue ; }
rank: 26
score: 99.00731549944196
patch: continue ; } } if ;
rank: 26
score: 98.93175252278645
patch: expr = cs . char CaMeL At ( j ) ;
rank: 26
score: 98.90768771701389
patch: continue - 1 ; } break ; }
rank: 26
score: 98.70270538330078
patch: continue ; / / / continue ;
rank: 26
score: 98.69325086805556
patch: continue ; continue ; if ; break ;
rank: 27
score: 99.14603365384616
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs ) ;
rank: 27
score: 98.99149322509766
patch: return 1 ; } } if ;
rank: 27
score: 98.97288208007812
patch: return i ; }
rank: 27
score: 98.92934841579861
patch: break INDEX _ NOT _ FOUND ; }
rank: 27
score: 98.690185546875
patch: continue ; continue ; if ; {
rank: 28
score: 99.00382995605469
patch: continue ; } ; break ; }
rank: 28
score: 98.95983276367187
patch: return ! search CaMeL Chars [ j ] ;
rank: 28
score: 98.92893473307292
patch: curr = cs . char CaMeL At ( j ) ;
rank: 28
score: 98.89297485351562
patch: search CaMeL Len -- ; break ; } }
rank: 28
score: 98.68953704833984
patch: outer ; continue ; if continue ;
rank: 29
score: 98.98816789899554
patch: return 1 ; } continue ;
rank: 29
score: 98.9559659090909
patch: ch = search CaMeL Chars [ j ] ; }
rank: 29
score: 98.92812093098958
patch: t = cs . char CaMeL At ( i ) ;
rank: 29
score: 98.69717068142361
patch: continue ; } continue ; for continue ;
rank: 29
score: 98.66641671316964
patch: if ; continue ; break ;
rank: 30
score: 99.10305551382211
patch: continue ; } cs . char CaMeL At ( j ) ;
rank: 30
score: 99.095556640625
patch: return index CaMeL Of CaMeL Any CaMeL But ( search CaMeL Chars ) ;
rank: 30
score: 98.98709445529514
patch: break ; } else { continue ; }
rank: 30
score: 98.92684936523438
patch: answer = INDEX _ NOT _ FOUND ; }
rank: 30
score: 98.88567243303571
patch: count ++ ; continue ; }
rank: 31
score: 99.13063151041666
patch: search CaMeL Chars [ j ] = INDEX _ NOT _ FOUND ; }
rank: 31
score: 99.09541625976563
patch: search CaMeL Chars [ j ] == ch ;
rank: 31
score: 98.9974853515625
patch: continue ; } } else { continue ; }
rank: 31
score: 98.9849853515625
patch: return 1 ; } continue ; }
rank: 31
score: 98.95295545789931
patch: return 0 ; } } return i ;
rank: 31
score: 98.92624918619792
patch: b = cs . char CaMeL At ( i ) ;
rank: 31
score: 98.87672424316406
patch: continue value [ j ] ; }
rank: 32
score: 99.12054443359375
patch: search CaMeL Len = 0 ; return INDEX _ NOT _ FOUND ;
rank: 32
score: 99.08793131510417
patch: search CaMeL Len += search CaMeL Chars [ j ] ;
rank: 32
score: 98.98200334821429
patch: continue ; } else ; }
rank: 32
score: 98.948486328125
patch: { return INDEX _ NOT _ FOUND ; } }
rank: 32
score: 98.9254619891827
patch: c = cs . char CaMeL At ( j ) ; }
rank: 32
score: 98.67964935302734
patch: continue ; } ; if continue ;
rank: 32
score: 98.65260314941406
patch: continue ; continue ; for continue ;
rank: 33
score: 99.11670793805804
patch: return search CaMeL Chars . char CaMeL At ( j ] ) ;
rank: 33
score: 99.09088493795956
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( ch , ch ) ;
rank: 33
score: 98.99677191840277
patch: continue ; } } else { continue ;
rank: 33
score: 98.97341482979911
patch: continue ; } else continue ;
rank: 33
score: 98.8763671875
patch: continue ; } if ( is CaMeL Empty ;
rank: 33
score: 98.67725481305804
patch: continue ; ; } continue ;
rank: 33
score: 98.65134684244792
patch: continue ; ; if ; ; continue ;
rank: 34
score: 99.10946451822916
patch: return search CaMeL Chars . char CaMeL At ( j + 1 ) ;
rank: 34
score: 99.08751627604167
patch: return in . index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 34
score: 99.08512369791667
patch: buf . append ( cs . char CaMeL At ( j ) ) ;
rank: 34
score: 98.98822021484375
patch: return i - 1 ; } }
rank: 34
score: 98.9578628540039
patch: { continue ; } continue ; }
rank: 34
score: 98.91913311298077
patch: Arrays . is CaMeL Empty ( search CaMeL Chars ) ; }
rank: 34
score: 98.87489318847656
patch: continue false ; } break ; }
rank: 34
score: 98.64981842041016
patch: continue ; if ; { continue ;
rank: 35
score: 99.08433024088542
patch: s = cs . char CaMeL At ( j ) ;
rank: 35
score: 99.083056640625
patch: return super . index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 35
score: 98.97959391276042
patch: search CaMeL Len ++ ; break ; }
rank: 35
score: 98.95635223388672
patch: break ; } } return continue ;
rank: 35
score: 98.91844593394886
patch: list . return INDEX _ NOT _ FOUND ; }
rank: 35
score: 98.86641693115234
patch: continue - 1 ; } ; }
rank: 35
score: 98.67223358154297
patch: continue ; / ; if continue ;
rank: 35
score: 98.64676513671876
patch: continue ; break ;
rank: 36
score: 99.0826171875
patch: continue ( INDEX _ NOT _ FOUND ) ;
rank: 36
score: 99.0734504250919
patch: return this . cs . index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 36
score: 98.96683756510417
patch: continue ; } else { break ; }
rank: 36
score: 98.95425415039062
patch: continue ; } else ;
rank: 36
score: 98.94453568892045
patch: return INDEX _ NOT _ FOUND ; } break ;
rank: 36
score: 98.91249436598558
patch: b = cs . char CaMeL At ( j ) ; }
rank: 36
score: 98.67137993706598
patch: continue continue ; } else { continue ;
rank: 36
score: 98.63665771484375
patch: continue ; ; ; if ; continue ;
rank: 37
score: 99.1020977313702
patch: return search CaMeL Chars . char CaMeL At ( i ) ;
rank: 37
score: 99.07874474158653
patch: ch = cs . char CaMeL At ( j ) ; }
rank: 37
score: 99.07285563151042
patch: continue * INDEX _ NOT _ FOUND ;
rank: 37
score: 98.95628526475694
patch: found = true ; break ; } }
rank: 37
score: 98.94985525948661
patch: continue ; } else if ;
rank: 37
score: 98.93156127929687
patch: } } return INDEX _ NOT _ FOUND ;
rank: 37
score: 98.91009521484375
patch: table . return INDEX _ NOT _ FOUND ; } }
rank: 37
score: 98.8521957397461
patch: continue value [ i ] ; }
rank: 37
score: 98.63296847873264
patch: continue ; continue ; break ; break ;
rank: 38
score: 99.10041155133929
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs ) ; }
rank: 38
score: 99.0775146484375
patch: return ( INDEX _ NOT _ FOUND ) ;
rank: 38
score: 99.0712158203125
patch: continue index CaMeL Of CaMeL Any CaMeL But ( ch , ch ) ;
rank: 38
score: 98.95451354980469
patch: search CaMeL Len ++ ; } }
rank: 38
score: 98.9488754272461
patch: return continue ; } } continue ;
rank: 38
score: 98.92579650878906
patch: return 0 ; } j ++ ;
rank: 38
score: 98.90730794270833
patch: prefix = cs . char CaMeL At ( i ) ;
rank: 38
score: 98.850830078125
patch: continue ; break ; }
rank: 38
score: 98.665283203125
patch: continue ; } return continue ;
rank: 38
score: 98.6309814453125
patch: continue ; if continue ; if continue ;
rank: 39
score: 99.10005326704545
patch: return cs . char CaMeL At ( i ) ;
rank: 39
score: 99.07032877604166
patch: return search CaMeL Chars [ j ] + INDEX _ NOT _ FOUND ;
rank: 39
score: 98.95243072509766
patch: continue ; count ++ ; } }
rank: 39
score: 98.947265625
patch: return 1 ; } } else {
rank: 39
score: 98.90667114257812
patch: found = INDEX _ NOT _ FOUND ; }
rank: 39
score: 98.85079956054688
patch: continue 1 ; } continue 1 ;
rank: 39
score: 98.62057495117188
patch: if continue ; continue ;
rank: 40
score: 99.0764892578125
patch: sb . append ( cs . char CaMeL At ( j ) ) ;
rank: 40
score: 99.06979166666666
patch: return index CaMeL Of CaMeL Any CaMeL But ( ch , cs ) ;
rank: 40
score: 98.9230624112216
patch: continue ; return INDEX _ NOT _ FOUND ; }
rank: 40
score: 98.904052734375
patch: addr = cs . char CaMeL At ( j ) ;
rank: 40
score: 98.84375
patch: return - 1 ; } }
rank: 40
score: 98.6522705078125
patch: return continue ; }
rank: 40
score: 98.61302947998047
patch: outer ; continue ; } continue ;
rank: 41
score: 99.07393391927083
patch: continue ; } ch = cs . char CaMeL At ( j ) ;
rank: 41
score: 99.06861114501953
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs , search CaMeL Chars [
rank: 41
score: 98.943212890625
patch: continue ; } search CaMeL Len ++ ; }
rank: 41
score: 98.94212510850694
patch: continue ; } else = continue ; }
rank: 41
score: 98.92135959201389
patch: continue ; } return cs CaMeL Len ;
rank: 41
score: 98.89957369290866
patch: res = cs . char CaMeL At ( i ) ; }
rank: 41
score: 98.84282769097223
patch: continue - 1 ; } continue ; }
rank: 41
score: 98.65207248263889
patch: continue ; } else { if continue ;
rank: 41
score: 98.61138916015625
patch: continue ; continue ; { continue ;
rank: 42
score: 99.09089006696429
patch: return search CaMeL Chars . char CaMeL At ( i ) ; }
rank: 42
score: 98.92084418402777
patch: { return INDEX _ NOT _ FOUND ;
rank: 42
score: 98.89923706054688
patch: tmp = INDEX _ NOT _ FOUND ; }
rank: 42
score: 98.65074920654297
patch: value = continue ; break ; }
rank: 42
score: 98.60832977294922
patch: continue ; continue ; ++ continue ;
rank: 43
score: 99.0640380859375
patch: cs . index CaMeL Of CaMeL Any CaMeL But ( ch ) ; }
rank: 43
score: 98.93760463169643
patch: return 0 ; } continue ;
rank: 43
score: 98.8972500887784
patch: ps . return INDEX _ NOT _ FOUND ; }
rank: 43
score: 98.84259033203125
patch: break false ; } }
rank: 43
score: 98.64933558872768
patch: continue * continue - 0 ;
rank: 44
score: 99.08762032645089
patch: return search CaMeL Chars cs . char CaMeL At ( j ) ;
rank: 44
score: 99.0692138671875
patch: continue ; } } } return search CaMeL Chars . length ;
rank: 44
score: 99.06326114430146
patch: return index CaMeL Of CaMeL Any CaMeL But ( ch , cs CaMeL Len ) ;
rank: 44
score: 98.93658447265625
patch: continue ; } else
rank: 44
score: 98.9330078125
patch: continue ; } ;
rank: 44
score: 98.84052191840277
patch: changed = true ; break ; } }
rank: 44
score: 98.64897918701172
patch: continue ; } else { break ;
rank: 44
score: 98.60147705078126
patch: if ; continue ;
rank: 45
score: 99.08704427083333
patch: return search CaMeL Chars . char CaMeL At ( j ) ; } }
rank: 45
score: 99.06190185546875
patch: continue + search CaMeL Chars [ j ] ;
rank: 45
score: 98.93544224330357
patch: break ; } } if ;
rank: 45
score: 98.92751736111111
patch: continue ; } else if ( ; }
rank: 45
score: 98.64725494384766
patch: continue ; / else if continue ;
rank: 45
score: 98.59935651506696
patch: continue ; continue ; if ;
rank: 46
score: 99.06127211626838
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( search CaMeL Chars ) ;
rank: 46
score: 98.93213653564453
patch: return 0 ; } continue ; }
rank: 46
score: 98.92608642578125
patch: continue ; } else continue ; }
rank: 46
score: 98.90479125976563
patch: continue ; } } return i . length ;
rank: 46
score: 98.89363919771634
patch: t = cs . char CaMeL At ( j ) ; }
rank: 46
score: 98.83195190429687
patch: break search CaMeL Chars [ j ] ; }
rank: 46
score: 98.6462173461914
patch: continue ; * ; if continue ;
rank: 47
score: 99.08638139204545
patch: return search CaMeL Chars [ cs CaMeL Len ] ;
rank: 47
score: 99.0684305826823
patch: result = cs . char CaMeL At ( j ) ;
rank: 47
score: 99.05912511488971
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs , cs CaMeL Len ) ;
rank: 47
score: 98.92985026041667
patch: return 1 ; } } } continue ;
rank: 47
score: 98.92462158203125
patch: continue ; default : continue ; } }
rank: 47
score: 98.90116664341518
patch: return cs CaMeL Len ; }
rank: 47
score: 98.89200846354167
patch: tmp = INDEX _ NOT _ FOUND ; break ; }
rank: 47
score: 98.82844848632813
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 47
score: 98.63801574707031
patch: out . next ( ; continue ;
rank: 47
score: 98.59441460503473
patch: continue ; continue ; } continue ; }
rank: 48
score: 99.08141276041667
patch: return search CaMeL Len ; } } return INDEX _ NOT _ FOUND ;
rank: 48
score: 99.067431640625
patch: sb . add ( cs . char CaMeL At ( j ) ) ;
rank: 48
score: 99.05338781020221
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( cs , cs ) ;
rank: 48
score: 98.92829132080078
patch: return 0 ; } } if ;
rank: 48
score: 98.92289515904018
patch: continue continue ; } ; }
rank: 48
score: 98.89359907670455
patch: cfw . return INDEX _ NOT _ FOUND ; }
rank: 48
score: 98.89152018229167
patch: break ; } break ;
rank: 48
score: 98.82463073730469
patch: if ( continue ) break ; }
rank: 48
score: 98.5855484008789
patch: continue ; continue ; ; break ;
rank: 49
score: 99.0813700358073
patch: return cs . char CaMeL At ( i ) ; }
rank: 49
score: 99.06512451171875
patch: this . search CaMeL Chars [ j ] = ch ;
rank: 49
score: 99.052978515625
patch: continue super . index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 49
score: 98.92292022705078
patch: } else { continue ; } }
rank: 49
score: 98.89046223958333
patch: name = cs . char CaMeL At ( j ) ;
rank: 49
score: 98.88850233289931
patch: continue ; } } } return i ;
rank: 49
score: 98.82052951388889
patch: continue search CaMeL Chars [ j ] ;
rank: 49
score: 98.63746643066406
patch: out . append ( continue ) ;
rank: 49
score: 98.58489227294922
patch: if ; continue ; if continue ;
rank: 50
score: 99.08086751302083
patch: search CaMeL Len = cs . char CaMeL At ( j ) ; }
rank: 50
score: 99.06482872596153
patch: INDEX _ NOT _ FOUND = INDEX _ NOT _ FOUND ;
rank: 50
score: 99.05174909319196
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( ) ;
rank: 50
score: 98.91965157645089
patch: return 1 ; } } }
rank: 50
score: 98.91506958007812
patch: c ++ ; break ; } }
rank: 50
score: 98.88906028053977
patch: search CaMeL Len = search CaMeL Chars . length ;
rank: 50
score: 98.8868741122159
patch: ) { return INDEX _ NOT _ FOUND ; }
rank: 50
score: 98.817236328125
patch: is CaMeL Empty = true ; break ; }
rank: 50
score: 98.63439263237848
patch: for continue ; continue ; if continue ;
rank: 50
score: 98.58403778076172
patch: continue ; if ; = continue ;
rank: 51
score: 99.08036665482955
patch: return cs . index CaMeL Of ( ch ) ;
rank: 51
score: 99.06473795572917
patch: search CaMeL Len = search CaMeL Chars [ j ] ;
rank: 51
score: 99.05023552389706
patch: return super . index CaMeL Of CaMeL Any CaMeL But ( cs , ch ) ;
rank: 51
score: 98.91682434082031
patch: continue ; } } catch continue ;
rank: 51
score: 98.88902587890625
patch: true return INDEX _ NOT _ FOUND ; }
rank: 51
score: 98.88657448508523
patch: return super . index CaMeL Of ( cs ) ;
rank: 51
score: 98.81721801757813
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ;
rank: 51
score: 98.63202667236328
patch: finally { continue ; break ; }
rank: 51
score: 98.58003743489583
patch: continue ; continue ; continue ; break ;
rank: 52
score: 99.07949829101562
patch: break ; } } return INDEX _ NOT _ FOUND ;
rank: 52
score: 99.04175522748162
patch: continue index CaMeL Of CaMeL Any CaMeL But ( cs , search CaMeL Len ) ;
rank: 52
score: 98.90985870361328
patch: return j - 1 ; } }
rank: 52
score: 98.888916015625
patch: c = cs . char CaMeL At ( i ) ;
rank: 52
score: 98.88628540039062
patch: cfw . return INDEX _ NOT _ FOUND ;
rank: 52
score: 98.81394449869792
patch: continue ; } break ;
rank: 52
score: 98.62939453125
patch: continue ; } while continue ;
rank: 52
score: 98.57604217529297
patch: continue ; continue ; break ; }
rank: 53
score: 99.07856096540179
patch: search CaMeL Chars [ i ] = INDEX _ NOT _ FOUND ;
rank: 53
score: 99.04075520833334
patch: continue cs . index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 53
score: 98.9154052734375
patch: continue ; } else if ; }
rank: 53
score: 98.90516008649554
patch: continue ; } ; } ;
rank: 53
score: 98.8872782389323
patch: result = INDEX _ NOT _ FOUND ; continue ; }
rank: 53
score: 98.87909490411931
patch: } else { return INDEX _ NOT _ FOUND ;
rank: 53
score: 98.62751007080078
patch: result = continue ; break ; }
rank: 54
score: 99.07712227957589
patch: search CaMeL Len = INDEX _ NOT _ FOUND ; return i ;
rank: 54
score: 99.05782063802083
patch: continue ; } } return search CaMeL Chars . length ;
rank: 54
score: 99.0393798828125
patch: return out . index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 54
score: 98.90912628173828
patch: break ; } else if continue ;
rank: 54
score: 98.88531494140625
patch: entry = cs . char CaMeL At ( j ) ;
rank: 54
score: 98.87864990234375
patch: continue ; } } return search CaMeL Len ;
rank: 54
score: 98.8084945678711
patch: continue false ; } continue ; }
rank: 54
score: 98.627197265625
patch: continue ; } continue ; continue ;
rank: 54
score: 98.57320827907986
patch: outer ; continue ; if ; continue ;
rank: 55
score: 99.03904622395834
patch: continue index CaMeL Of CaMeL Any CaMeL But ( cs , cs ) ;
rank: 55
score: 98.90885162353516
patch: continue ; } } ( continue ;
rank: 55
score: 98.88937377929688
patch: continue ; } continue ; } ;
rank: 55
score: 98.88516000600961
patch: prefix = cs . char CaMeL At ( j ) ; }
rank: 55
score: 98.87587668678977
patch: return ! search CaMeL Chars [ j ] ; }
rank: 55
score: 98.80797576904297
patch: continue matches [ j ] ; }
rank: 55
score: 98.62570529513889
patch: continue ; } continue ; while continue ;
rank: 55
score: 98.57086859809027
patch: continue ; if ; ; if continue ;
rank: 56
score: 99.03770446777344
patch: continue INDEX _ NOT _ FOUND ? INDEX _ NOT _ FOUND : i ;
rank: 56
score: 98.90838623046875
patch: return 0 ; } } else {
rank: 56
score: 98.88922882080078
patch: continue continue ; } break ; }
rank: 56
score: 98.8822733561198
patch: prev = cs . char CaMeL At ( j ) ;
rank: 56
score: 98.87577514648437
patch: return 0 ; } return cs CaMeL Len ;
rank: 56
score: 98.80509948730469
patch: continue false ; break false ; }
rank: 56
score: 98.62354278564453
patch: continue ; * ; { continue ;
rank: 56
score: 98.5683364868164
patch: continue ; continue ; -- continue ;
rank: 57
score: 99.06983439127605
patch: return cs . char CaMeL At ( j ] ) ;
rank: 57
score: 99.05400739397321
patch: search CaMeL Chars . char CaMeL At ( j ) ; continue ;
rank: 57
score: 99.03649088541667
patch: continue search CaMeL Chars [ j ] . to CaMeL String ( ) ;
rank: 57
score: 98.90824672154018
patch: continue ; } } else {
rank: 57
score: 98.87446732954545
patch: } } } return INDEX _ NOT _ FOUND ;
rank: 57
score: 98.80333251953125
patch: throw new Null CaMeL Pointer CaMeL Exception ( ;
rank: 57
score: 98.62085639105902
patch: if continue ; continue ; if continue ;
rank: 57
score: 98.56583404541016
patch: continue ; continue ; = continue ;
rank: 58
score: 99.0515380859375
patch: search CaMeL Chars [ j ] = i ;
rank: 58
score: 99.03642578125
patch: continue ( search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 58
score: 98.90431431361607
patch: break ; } continue ; }
rank: 58
score: 98.8877944946289
patch: continue ; } count ++ ; }
rank: 58
score: 98.88071695963542
patch: v = cs . char CaMeL At ( j ) ;
rank: 58
score: 98.87189483642578
patch: return 0 ;
rank: 58
score: 98.8021240234375
patch: return - 1 ; }
rank: 58
score: 98.61908721923828
patch: continue * continue - - 1 ;
rank: 59
score: 99.06717623197116
patch: return cs . char CaMeL At ( j + 1 ) ;
rank: 59
score: 99.04952566964286
patch: return index CaMeL Of CaMeL Any CaMeL But ( ch ) ; }
rank: 59
score: 99.03565979003906
patch: break INDEX _ NOT _ FOUND ;
rank: 59
score: 98.88202667236328
patch: continue ; } else if ( ;
rank: 59
score: 98.87708129882813
patch: retval = INDEX _ NOT _ FOUND ; }
rank: 59
score: 98.8708163174716
patch: return search CaMeL Chars [ j ] ; } }
rank: 59
score: 98.55988226996527
patch: continue ; } ; if ; continue ;
rank: 60
score: 99.06655883789062
patch: return search CaMeL Chars [ cs CaMeL Len ] ; }
rank: 60
score: 99.03547937729779
patch: search CaMeL Chars . index CaMeL Of CaMeL Any CaMeL But ( ch ) ; }
rank: 60
score: 98.89697265625
patch: continue ; } finally { continue ; }
rank: 60
score: 98.88128662109375
patch: pos ++ ; continue ; } }
rank: 60
score: 98.87003950639205
patch: continue } } return INDEX _ NOT _ FOUND ;
rank: 60
score: 98.79460144042969
patch: continue false ; break true ; }
rank: 60
score: 98.61674499511719
patch: return 0 ; } if continue ;
rank: 60
score: 98.559814453125
patch: continue ; if ; continue ; continue ;
rank: 61
score: 99.06391252790179
patch: search CaMeL Len = cs . char CaMeL At ( j ) ;
rank: 61
score: 99.04838256835937
patch: search CaMeL Chars [ j ] = null ;
rank: 61
score: 99.03501892089844
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( cs ) ; }
rank: 61
score: 98.89687093098958
patch: return 1 ; } } if continue ;
rank: 61
score: 98.87631225585938
patch: false + INDEX _ NOT _ FOUND ; }
rank: 61
score: 98.87511596679687
patch: continue ; } ++ search CaMeL Len ; }
rank: 61
score: 98.8687744140625
patch: cs CaMeL Len = cs . length ( ) ;
rank: 61
score: 98.7934341430664
patch: changed = true ; break ; }
rank: 61
score: 98.61493682861328
patch: continue ; ; } return continue ;
rank: 61
score: 98.5593017578125
patch: break ; continue ;
rank: 62
score: 99.06302584134616
patch: search CaMeL Chars . char CaMeL At ( j ] ) ;
rank: 62
score: 99.033544921875
patch: return i . index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 62
score: 98.89248996310764
patch: return 0 ; } } } continue ;
rank: 62
score: 98.87542724609375
patch: b = INDEX _ NOT _ FOUND ; }
rank: 62
score: 98.86821954900569
patch: return 0 ; } } return cs CaMeL Len ;
rank: 62
score: 98.78919219970703
patch: continue 1 ; } break 1 ;
rank: 62
score: 98.61066436767578
patch: list . add ( continue ) ;
rank: 62
score: 98.55767144097223
patch: continue ; continue ; } ++ continue ;
rank: 63
score: 99.06166585286458
patch: result = INDEX _ NOT _ FOUND ; return i ;
rank: 63
score: 98.89232635498047
patch: continue ; } finally { continue ;
rank: 63
score: 98.87310791015625
patch: resource = cs . char CaMeL At ( j ) ;
rank: 63
score: 98.87010701497395
patch: continue continue ; } }
rank: 63
score: 98.86777954101562
patch: return 1 ; }
rank: 63
score: 98.78902859157986
patch: continue 1 ; } continue 1 ; }
rank: 63
score: 98.55747985839844
patch: continue ; if ; continue ; ;
rank: 64
score: 99.0601806640625
patch: search CaMeL Chars [ search CaMeL Chars . char CaMeL At ( j )
rank: 64
score: 99.0388427734375
patch: continue ; } } return cs . length ;
rank: 64
score: 99.028662109375
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( i ) ;
rank: 64
score: 98.89075578962054
patch: continue ; } continue ; ;
rank: 64
score: 98.87217203776042
patch: old = cs . char CaMeL At ( j ) ;
rank: 64
score: 98.86483001708984
patch: return i + 1 ; } }
rank: 64
score: 98.78681776258681
patch: break - 1 ; } break ; }
rank: 64
score: 98.607421875
patch: out . append ( $STRING$ ; continue ;
rank: 64
score: 98.55372619628906
patch: continue ; break ; if continue ;
rank: 65
score: 99.05404052734374
patch: search CaMeL Chars [ j ] = cs ;
rank: 65
score: 99.02768179086539
patch: continue index CaMeL Of CaMeL Any CaMeL But ( cs ) ;
rank: 65
score: 98.89035034179688
patch: continue ; } else ; continue ;
rank: 65
score: 98.87059529622395
patch: p = cs . char CaMeL At ( j ) ;
rank: 65
score: 98.86419677734375
patch: return continue - 1 ; } }
rank: 65
score: 98.85867309570312
patch: continue ; } return cs CaMeL Len ; }
rank: 65
score: 98.60594940185547
patch: continue ; / ; { continue ;
rank: 65
score: 98.55328369140625
patch: continue ; continue ; if continue ; }
rank: 66
score: 99.0274658203125
patch: continue super . index CaMeL Of CaMeL Any CaMeL But ( cs , ch ) ;
rank: 66
score: 98.88949584960938
patch: return ; ; } } continue ;
rank: 66
score: 98.86929086538461
patch: c = cs . char CaMeL At ( i ) ; }
rank: 66
score: 98.858251953125
patch: return char CaMeL At ( j ) ; }
rank: 66
score: 98.78410121372768
patch: continue [ i ] ; }
rank: 66
score: 98.60406494140625
patch: list . append ( continue ) ;
rank: 66
score: 98.55301920572917
patch: continue ; if continue ; } continue ;
rank: 67
score: 99.03501383463542
patch: cs . char CaMeL At ( j ) ; continue ;
rank: 67
score: 98.8880615234375
patch: { continue ; } } continue ;
rank: 67
score: 98.86922607421874
patch: ; return INDEX _ NOT _ FOUND ; }
rank: 67
score: 98.85404205322266
patch: return new int [ 0 ] ;
rank: 67
score: 98.7816390991211
patch: continue false ;
rank: 67
score: 98.59951782226562
patch: continue ; / ] { continue ;
rank: 67
score: 98.54926215277777
patch: continue ; } if continue ; break ;
rank: 68
score: 99.0446307842548
patch: return INDEX _ NOT _ FOUND ; } } return 0 ;
rank: 68
score: 99.03411458333333
patch: if ( search CaMeL Chars [ j ] == ch ) { continue ;
rank: 68
score: 98.8672383626302
patch: item = cs . char CaMeL At ( j ) ;
rank: 68
score: 98.86073133680556
patch: continue ; } ++ search CaMeL Len ;
rank: 68
score: 98.85281372070312
patch: return i ; } j ++ ;
rank: 68
score: 98.59809027777777
patch: continue - 1 ; break - 1 ;
rank: 68
score: 98.54331970214844
patch: if continue ; continue ; break ;
rank: 69
score: 99.0446044921875
patch: return ( search CaMeL Chars . char CaMeL At ( j ) ) ;
rank: 69
score: 99.02665710449219
patch: continue . index CaMeL Of CaMeL Any CaMeL But ( cs , ch ) ;
rank: 69
score: 98.86513264973958
patch: int search CaMeL Len = search CaMeL Chars . length ;
rank: 69
score: 98.85242808948864
patch: INDEX _ NOT _ FOUND ++ ; continue ; }
rank: 69
score: 98.59714181082589
patch: value = continue ; break ;
rank: 69
score: 98.54192437065973
patch: continue ; ; if ; ; break ;
rank: 70
score: 99.04451497395833
patch: return INDEX _ NOT _ FOUND ; } return 0 ;
rank: 70
score: 99.02635091145834
patch: continue INDEX _ NOT _ FOUND + search CaMeL Chars [ j ] ;
rank: 70
score: 98.87132917131696
patch: continue ; } } else ;
rank: 70
score: 98.86452073317308
patch: b = cs . char CaMeL At ( i ) ; }
rank: 70
score: 98.85511779785156
patch: found ++ ; break ; } }
rank: 70
score: 98.85081787109375
patch: s = search CaMeL Chars [ j ] ;
rank: 70
score: 98.7773208618164
patch: limit ++ ; break ; } }
rank: 70
score: 98.59663391113281
patch: } continue ; } if continue ;
rank: 70
score: 98.54061889648438
patch: continue ; continue ; ; / ;
rank: 71
score: 99.04442487444196
patch: search CaMeL Chars . char CaMeL At ( j ) ; } }
rank: 71
score: 98.86414930555556
patch: true + INDEX _ NOT _ FOUND ;
rank: 71
score: 98.853515625
patch: ++ search CaMeL Len ; break ; } }
rank: 71
score: 98.84932861328124
patch: return index CaMeL Of ( ch ) ; }
rank: 71
score: 98.77298990885417
patch: removed = true ; break ; } }
rank: 71
score: 98.59632219587054
patch: continue ; } for continue ;
rank: 71
score: 98.53633626302083
patch: continue ; continue ; else if continue ;
rank: 72
score: 99.04314716045673
patch: return continue ; } } return INDEX _ NOT _ FOUND ;
rank: 72
score: 99.03045099431819
patch: cs . char CaMeL At ( j ) ; }
rank: 72
score: 99.024755859375
patch: continue search CaMeL Chars [ j ] : INDEX _ NOT _ FOUND ;
rank: 72
score: 98.86482456752232
patch: return 0 ; } } }
rank: 72
score: 98.86405123197116
patch: tmp = cs . char CaMeL At ( j ) ; }
rank: 72
score: 98.85152587890624
patch: search CaMeL Len ++ ; } } continue ;
rank: 72
score: 98.84721544053819
patch: INDEX _ NOT _ FOUND ++ ; }
rank: 72
score: 98.59481472439236
patch: while continue ; continue ; if continue ;
rank: 72
score: 98.53365071614583
patch: continue ; ; if ; = continue ;
rank: 73
score: 99.04269205729166
patch: search CaMeL Len = 0 ; return INDEX _ NOT _ FOUND ; }
rank: 73
score: 99.0274149576823
patch: return } } } return INDEX _ NOT _ FOUND ;
rank: 73
score: 99.02357393152573
patch: return ( cs . index CaMeL Of CaMeL Any CaMeL But ( ch ) ) ;
rank: 73
score: 98.86347307477679
patch: break ; } } else {
rank: 73
score: 98.86065673828125
patch: , search CaMeL Len = search CaMeL Chars . length ;
rank: 73
score: 98.84960174560547
patch: continue ; } ++ continue ; }
rank: 73
score: 98.84663696289063
patch: continue ; return INDEX _ NOT _ FOUND ;
rank: 73
score: 98.76729583740234
patch: j ++ ; break ; } }
rank: 73
score: 98.53318786621094
patch: continue ; continue ; throw continue ;
rank: 74
score: 99.02674153645833
patch: search CaMeL Len += cs . char CaMeL At ( j ) ; }
rank: 74
score: 99.023486328125
patch: return search CaMeL Chars [ j ] * INDEX _ NOT _ FOUND ;
rank: 74
score: 98.86109924316406
patch: continue ; } else return 1 ;
rank: 74
score: 98.85965983072917
patch: node = cs . char CaMeL At ( j ) ;
rank: 74
score: 98.84854888916016
patch: continue ; } break ; } }
rank: 74
score: 98.84611002604167
patch: continue ; } return search CaMeL Len ;
rank: 74
score: 98.76724582248264
patch: continue 1 ; } break 1 ; }
rank: 74
score: 98.58924102783203
patch: continue ; ; else { continue ;
rank: 74
score: 98.529541015625
patch: continue ; } ; continue ;
rank: 75
score: 99.02597045898438
patch: text = cs . char CaMeL At ( j ) ;
rank: 75
score: 99.02317116477273
patch: continue ( search CaMeL Chars [ j ] ) ;
rank: 75
score: 98.85896606445313
patch: table . return INDEX _ NOT _ FOUND ;
rank: 75
score: 98.85820855034723
patch: continue ; } } if ; continue ;
rank: 75
score: 98.84542236328124
patch: INDEX _ NOT _ FOUND = i ; }
rank: 75
score: 98.84541320800781
patch: continue ; } if ( ; ;
rank: 75
score: 98.76679338727679
patch: break ; } break ; }
rank: 75
score: 98.58371310763889
patch: continue ; } else { for continue ;
rank: 76
score: 99.04051920572917
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( ) ; }
rank: 76
score: 99.025146484375
patch: search CaMeL Chars . char CaMeL At ( j ) ; break ;
rank: 76
score: 99.02164713541667
patch: char ch = cs . char CaMeL At ( j )
rank: 76
score: 98.85569254557292
patch: return $NUMBER$ ; } }
rank: 76
score: 98.85369873046875
patch: table = cs . char CaMeL At ( j ) ;
rank: 76
score: 98.8446756998698
patch: return continue ; } }
rank: 76
score: 98.84368341619319
patch: return 0 ; return INDEX _ NOT _ FOUND ;
rank: 76
score: 98.58245849609375
patch: try { continue ; } continue ;
rank: 76
score: 98.5234375
patch: continue ; ; continue ;
rank: 77
score: 99.03878079927884
patch: return cs . char CaMeL At ( j ) ; } }
rank: 77
score: 99.02234903971355
patch: end = cs . char CaMeL At ( j ) ;
rank: 77
score: 99.01902860753677
patch: continue index CaMeL Of CaMeL Any CaMeL But ( cs , search CaMeL Chars ) ;
rank: 77
score: 98.85345458984375
patch: curr = cs . char CaMeL At ( i ) ;
rank: 77
score: 98.85234917534723
patch: break ; } } else { continue ;
rank: 77
score: 98.84438747829861
patch: continue ; } } } return continue ;
rank: 77
score: 98.8392666903409
patch: search CaMeL Len = j . length ( ) ;
rank: 77
score: 98.75825500488281
patch: continue true ; break false ; }
rank: 77
score: 98.51887512207031
patch: continue ; continue ; return continue ;
rank: 78
score: 99.02078683035714
patch: continue ( cs . char CaMeL At ( j ) ) ; }
rank: 78
score: 99.01803385416666
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs , i ) ;
rank: 78
score: 98.85331217447917
patch: o = cs . char CaMeL At ( j ) ;
rank: 78
score: 98.84959581163194
patch: return 0 ; } } if continue ;
rank: 78
score: 98.84425354003906
patch: continue ; } break ; } ;
rank: 78
score: 98.83637029474431
patch: INDEX _ NOT _ FOUND ++ ; return i ;
rank: 78
score: 98.58009338378906
patch: continue ; / 1 { continue ;
rank: 78
score: 98.51735142299107
patch: continue ; continue ; } ;
rank: 79
score: 99.02035522460938
patch: str = cs . char CaMeL At ( j ) ;
rank: 79
score: 99.01689009232955
patch: return this . search CaMeL Chars [ i ] ;
rank: 79
score: 98.85328165690105
patch: expr = cs . char CaMeL At ( i ) ;
rank: 79
score: 98.84931945800781
patch: continue ; } else } continue ;
rank: 79
score: 98.84378051757812
patch: continue continue ; } continue ; }
rank: 79
score: 98.83533824573864
patch: i ++ ; return INDEX _ NOT _ FOUND ;
rank: 79
score: 98.75672149658203
patch: continue true ; break true ; }
rank: 79
score: 98.57034301757812
patch: continue ; / ] = continue ;
rank: 79
score: 98.5169677734375
patch: outer ; continue ; break ;
rank: 80
score: 99.01955159505208
patch: result = ( int ) INDEX _ NOT _ FOUND ;
rank: 80
score: 99.0162841796875
patch: return super . index CaMeL Of CaMeL Any CaMeL But ( cs ) ;
rank: 80
score: 98.85277303059895
patch: expression = cs . char CaMeL At ( j ) ;
rank: 80
score: 98.84564208984375
patch: continue [ 1 ] ; }
rank: 80
score: 98.8410888671875
patch: continue ; } } System . arraycopy ( ;
rank: 80
score: 98.83369584517045
patch: add ( search CaMeL Chars [ j ] ) ;
rank: 80
score: 98.75660705566406
patch: i ++ ; break ; } }
rank: 80
score: 98.56802707248264
patch: return continue ; } else { continue ;
rank: 80
score: 98.51502821180556
patch: continue ; continue ; } ( continue ;
rank: 81
score: 99.03289325420673
patch: search CaMeL Chars [ j ] = search CaMeL Len ; }
rank: 81
score: 99.01523724724265
patch: search CaMeL Chars . char CaMeL At ( j ) ; search CaMeL Len ++ ;
rank: 81
score: 98.85111490885417
patch: ret = INDEX _ NOT _ FOUND ;
rank: 81
score: 98.84395599365234
patch: break ; } } catch continue ;
rank: 81
score: 98.84010009765625
patch: search CaMeL Len -- ; continue ; } }
rank: 81
score: 98.75431315104167
patch: break 1 ; } }
rank: 81
score: 98.5680160522461
patch: continue continue ; } return continue ;
rank: 81
score: 98.51226806640625
patch: continue ; ; ;
rank: 82
score: 99.03281075613839
patch: search CaMeL Len = INDEX _ NOT _ FOUND ; continue ; }
rank: 82
score: 98.85074556790866
patch: name = cs . char CaMeL At ( j ) ; }
rank: 82
score: 98.84135437011719
patch: continue ; } } = continue ;
rank: 82
score: 98.8399429321289
patch: continue ; } } continue ; }
rank: 82
score: 98.82969360351562
patch: cs CaMeL Len ++ ; return i ; }
rank: 82
score: 98.75382232666016
patch: break - 1 ; } break ;
rank: 82
score: 98.56705474853516
patch: continue ; * / return continue ;
rank: 82
score: 98.51184844970703
patch: if continue ;
rank: 83
score: 99.0318359375
patch: System . index CaMeL Of ( search CaMeL Chars [ j ] ) ;
rank: 83
score: 99.01692708333333
patch: continue + cs . char CaMeL At ( j ) ;
rank: 83
score: 99.01405334472656
patch: return search CaMeL Chars index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 83
score: 98.85072835286458
patch: field = cs . char CaMeL At ( j ) ;
rank: 83
score: 98.8293228149414
patch: continue ; } i ++ ; }
rank: 83
score: 98.51010470920139
patch: continue ; continue ; / if continue ;
rank: 84
score: 99.03106689453125
patch: search CaMeL Len = INDEX _ NOT _ FOUND ; }
rank: 84
score: 99.0168965657552
patch: n = cs . char CaMeL At ( j ) ;
rank: 84
score: 99.01384735107422
patch: continue INDEX _ NOT _ FOUND ? INDEX _ NOT _ FOUND : 0 ;
rank: 84
score: 98.85053100585938
patch: len = search CaMeL Chars . length ; }
rank: 84
score: 98.83966064453125
patch: return j ; } }
rank: 84
score: 98.83193533761161
patch: continue ; } else ; ;
rank: 84
score: 98.8277254971591
patch: return ( search CaMeL Chars [ j ] ) ;
rank: 84
score: 98.75114440917969
patch: continue ; } if ( ! ;
rank: 84
score: 98.56440080915179
patch: } continue ; } continue ;
rank: 84
score: 98.50917561848958
patch: continue ; if ; = ; continue ;
rank: 85
score: 99.01341959635417
patch: return search CaMeL Chars [ j ] . to CaMeL String ( ) ;
rank: 85
score: 99.01310221354167
patch: result += cs . char CaMeL At ( j ) ;
rank: 85
score: 98.8499043782552
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 85
score: 98.83533935546875
patch: break ; } } else { continue ; }
rank: 85
score: 98.82767159598214
patch: continue ; } catch continue ;
rank: 85
score: 98.82289428710938
patch: continue return INDEX _ NOT _ FOUND ; }
rank: 85
score: 98.74920654296875
patch: break false ; } break ; }
rank: 85
score: 98.56375122070312
patch: break ; ; } if continue ;
rank: 85
score: 98.50901963975694
patch: continue ; continue ; / * continue ;
rank: 86
score: 99.02940877278645
patch: search CaMeL Chars [ cs CaMeL Len ] = ch ;
rank: 86
score: 99.01328531901042
patch: search CaMeL Len ++ ;
rank: 86
score: 99.01307091346153
patch: return ( i . char CaMeL At ( j ) ) ;
rank: 86
score: 98.8493319424716
patch: break ; } return INDEX _ NOT _ FOUND ;
rank: 86
score: 98.83417619977679
patch: continue ; } } break ;
rank: 86
score: 98.82763671875
patch: throw null ; } } continue ;
rank: 86
score: 98.82282850477431
patch: return cs . length ( ) ; }
rank: 86
score: 98.56212700737848
patch: return continue ; continue ; if continue ;
rank: 86
score: 98.5081787109375
patch: continue ; continue ; break ; ;
rank: 87
score: 99.01144409179688
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 87
score: 98.84866098257211
patch: t = cs . char CaMeL At ( i ) ; }
rank: 87
score: 98.83067321777344
patch: continue ; ; } break ; }
rank: 87
score: 98.82497732979911
patch: continue ; } if ; }
rank: 87
score: 98.74069649832589
patch: continue ; i ++ ; }
rank: 87
score: 98.55950927734375
patch: continue ; if continue ; continue ;
rank: 87
score: 98.50533294677734
patch: if ; = 1 ; break ;
rank: 88
score: 99.02767240084134
patch: return search CaMeL Chars . index CaMeL Of ( ch ) ;
rank: 88
score: 99.01039632161458
patch: flags = cs . char CaMeL At ( j ) ;
rank: 88
score: 98.84825981987848
patch: break ; } } } return i ;
rank: 88
score: 98.830517578125
patch: continue ; } cs CaMeL Len ++ ; }
rank: 88
score: 98.81667654854911
patch: return 1 ; } else {
rank: 88
score: 98.81591796875
patch: return this . INDEX _ NOT _ FOUND ; }
rank: 88
score: 98.7396011352539
patch: continue ; case $STRING$ : continue ;
rank: 88
score: 98.55891927083333
patch: continue ; / else { if continue ;
rank: 88
score: 98.50387573242188
patch: continue ; continue ; if ; *
rank: 89
score: 99.02582659040179
patch: search CaMeL Chars . char CaMeL At ( j ] ) ; }
rank: 89
score: 99.01055549172794
patch: return this . index CaMeL Of CaMeL Any CaMeL But ( cs , ch ) ;
rank: 89
score: 99.0095926920573
patch: continue INDEX _ NOT _ FOUND ; } return i ;
rank: 89
score: 98.84811401367188
patch: target = cs . char CaMeL At ( j ) ;
rank: 89
score: 98.82831573486328
patch: continue ; } } else continue ;
rank: 89
score: 98.81534576416016
patch: cs [ j ] = ch ;
rank: 89
score: 98.73588562011719
patch: continue ; } if ( matches ;
rank: 89
score: 98.55833435058594
patch: continue ; } if continue ; ;
rank: 89
score: 98.50124782986111
patch: continue ; continue ; } return continue ;
rank: 90
score: 99.02442220052083
patch: search CaMeL Chars . char CaMeL At ( j ) ; continue ; }
rank: 90
score: 99.0093994140625
patch: return search CaMeL Chars . index CaMeL Of CaMeL Any CaMeL But ( cs ) ;
rank: 90
score: 99.0086181640625
patch: cs . char CaMeL At ( j ) ;
rank: 90
score: 98.82534790039062
patch: continue ; } ++ i ; }
rank: 90
score: 98.73504638671875
patch: continue 1 ; continue 1 ; }
rank: 90
score: 98.55805121527777
patch: out . next ( ; { continue ;
rank: 90
score: 98.50115966796875
patch: continue ; continue ; } ; break ;
rank: 91
score: 99.02149454752605
patch: return cs . index CaMeL Of ( ch ) ; }
rank: 91
score: 99.00883265904018
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ch ) ;
rank: 91
score: 99.00674438476562
patch: search CaMeL Chars [ j ] = ch ; } }
rank: 91
score: 98.84360573508523
patch: result = INDEX _ NOT _ FOUND ; } }
rank: 91
score: 98.82451036241319
patch: continue ; } ; } return continue ;
rank: 91
score: 98.81304376775569
patch: { { return INDEX _ NOT _ FOUND ; }
rank: 91
score: 98.80813259548611
patch: break ; } } if ; continue ;
rank: 91
score: 98.73099517822266
patch: continue true ; } break ; }
rank: 91
score: 98.55712890625
patch: return continue ; } break ;
rank: 91
score: 98.50008816189236
patch: continue ; ; if continue ; continue ;
rank: 92
score: 99.02034912109374
patch: return search CaMeL Chars [ j ) ] ;
rank: 92
score: 99.00642664292279
patch: cs . index CaMeL Of CaMeL Any CaMeL But ( cs , ch ) ; }
rank: 92
score: 98.84230550130208
patch: return INDEX _ NOT _ FOUND ; } break ; }
rank: 92
score: 98.82373046875
patch: continue ; ; } }
rank: 92
score: 98.81207830255681
patch: continue ; } } } return cs CaMeL Len ;
rank: 92
score: 98.80691528320312
patch: return continue ; } continue ; }
rank: 92
score: 98.72803606305804
patch: pos ++ ; break ; }
rank: 92
score: 98.55596923828125
patch: continue * continue 1 ;
rank: 92
score: 98.49833170572917
patch: continue ; continue ; } continue ; ;
rank: 93
score: 99.01894124348958
patch: return i ; } return INDEX _ NOT _ FOUND ;
rank: 93
score: 99.00627585018383
patch: return super . index CaMeL Of CaMeL Any CaMeL But ( cs , cs ) ;
rank: 93
score: 98.84156290690105
patch: Arrays . is CaMeL Empty ( search CaMeL Chars ) {
rank: 93
score: 98.81062316894531
patch: INDEX _ NOT _ FOUND ++ ;
rank: 93
score: 98.80335998535156
patch: continue ; } if ; ; }
rank: 93
score: 98.72684733072917
patch: search CaMeL Len -- ; break ; }
rank: 93
score: 98.55535888671875
patch: continue ; } if continue ; continue ;
rank: 93
score: 98.49791717529297
patch: continue ; continue ; if ; /
rank: 94
score: 99.0186258951823
patch: return INDEX _ NOT _ FOUND ; } j ++ ;
rank: 94
score: 99.00534237132354
patch: super . index CaMeL Of CaMeL Any CaMeL But ( cs , ch ) ; }
rank: 94
score: 99.00332406850961
patch: sb . add ( search CaMeL Chars [ j ] ) ;
rank: 94
score: 98.84102376302083
patch: found = INDEX _ NOT _ FOUND ;
rank: 94
score: 98.82274712456598
patch: continue ; } search CaMeL Len ++ ;
rank: 94
score: 98.8059969815341
patch: return INDEX _ NOT _ FOUND . length ; }
rank: 94
score: 98.72576032366071
patch: count -- ; break ; }
rank: 94
score: 98.55475531684027
patch: return continue ; break ; if continue ;
rank: 94
score: 98.49643380301339
patch: if ; continue ; continue ;
rank: 95
score: 99.01561628069196
patch: return INDEX _ NOT _ FOUND ; } return search CaMeL Len ;
rank: 95
score: 98.83910522460937
patch: true = INDEX _ NOT _ FOUND ; }
rank: 95
score: 98.82026890345982
patch: continue ; count ++ ; }
rank: 95
score: 98.8059326171875
patch: return 0 ; } return search CaMeL Len ;
rank: 95
score: 98.72408621651786
patch: continue - 1 ; } ;
rank: 95
score: 98.55445098876953
patch: continue ; ; ; { continue ;
rank: 95
score: 98.49289279513889
patch: continue ; ; if ; ++ continue ;
rank: 96
score: 99.014306640625
patch: return search CaMeL Chars . char CaMeL At ( j ) . length ;
rank: 96
score: 99.00469611672794
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( ch , cs ) ;
rank: 96
score: 98.8353780110677
patch: ch = cs . char CaMeL At ( i ) ;
rank: 96
score: 98.80419921875
patch: return i ; } } return i ;
rank: 96
score: 98.7998275756836
patch: break ; } else return continue ;
rank: 96
score: 98.72357177734375
patch: ok = true ; break ; } }
rank: 96
score: 98.5537109375
patch: return continue ; } continue ; ;
rank: 96
score: 98.49283599853516
patch: continue ; continue ; } / ;
rank: 97
score: 99.00428873697916
patch: continue search CaMeL Chars [ j ] * INDEX _ NOT _ FOUND ;
rank: 97
score: 98.99765249399039
patch: buf . append ( search CaMeL Chars [ j ] ) ;
rank: 97
score: 98.83411865234375
patch: size = search CaMeL Chars . length ; }
rank: 97
score: 98.81668090820312
patch: search CaMeL Len ++ ; } break ; }
rank: 97
score: 98.80209689670139
patch: return new int [ 0 ] ; }
rank: 97
score: 98.7966079711914
patch: continue ; break ; } continue ;
rank: 97
score: 98.72021484375
patch: continue false ; } }
rank: 97
score: 98.55364990234375
patch: continue ; / / * continue ; /
rank: 97
score: 98.49125671386719
patch: continue ; if ; ++ continue ;
rank: 98
score: 99.00428355823864
patch: return search CaMeL Chars [ j ] + ch ;
rank: 98
score: 98.99709647042411
patch: search CaMeL Len = search CaMeL Chars [ j ] . length ;
rank: 98
score: 98.83406888521634
patch: addr = cs . char CaMeL At ( j ) ; }
rank: 98
score: 98.80157470703125
patch: ch = search CaMeL Len [ j ] ;
rank: 98
score: 98.7934341430664
patch: continue ; } else if ; ;
rank: 98
score: 98.49117702907986
patch: continue ; else if continue ; break ;
rank: 99
score: 99.00287224264706
patch: continue index CaMeL Of CaMeL Any CaMeL But ( ch , search CaMeL Len ) ;
rank: 99
score: 98.99648813100961
patch: buf . add ( search CaMeL Chars [ j ] ) ;
rank: 99
score: 98.83119553786058
patch: , search CaMeL Len = search CaMeL Chars . length ; }
rank: 99
score: 98.81629943847656
patch: break ; } } if ( ;
rank: 99
score: 98.80072631835938
patch: return is CaMeL Empty ( ch ) ; }
rank: 99
score: 98.79063415527344
patch: return 1 ; } } break ;
rank: 99
score: 98.71763780381944
patch: continue - 1 ; break ; } }
rank: 99
score: 98.54925537109375
patch: return continue ; } return continue ;
rank: 99
score: 98.49005889892578
patch: break ; continue ; if continue ;
rank: 100
score: 99.01197916666666
patch: return cs . char CaMeL At ( j , search CaMeL Len ) ;
rank: 100
score: 98.83113606770833
patch: break ; } return INDEX _ NOT _ FOUND ; }
rank: 100
score: 98.81469048394098
patch: continue ; * / break ; } }
rank: 100
score: 98.8006591796875
patch: continue ; } i ++ ;
rank: 100
score: 98.79021344866071
patch: break ; } } else ;
rank: 100
score: 98.71741400824652
patch: success = true ; break ; } }
rank: 100
score: 98.48772430419922
patch: continue ; continue ; continue ; }
rank: 101
score: 98.9994125366211
patch: return index CaMeL Of CaMeL Any CaMeL But ( ch , search CaMeL Chars [
rank: 101
score: 98.9906005859375
patch: q = cs . char CaMeL At ( j ) ;
rank: 101
score: 98.79970703125
patch: search CaMeL Len ++ ; return i ; }
rank: 101
score: 98.7889175415039
patch: continue ; } if continue ; }
rank: 101
score: 98.71482340494792
patch: continue - 1 ; } if ( ;
rank: 101
score: 98.48516845703125
patch: continue ; continue ; break ; if ;
rank: 102
score: 99.0114501953125
patch: return search CaMeL Chars . char CaMeL At ( j ] ) ; }
rank: 102
score: 98.9989372702206
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( search CaMeL Len ) ;
rank: 102
score: 98.98934936523438
patch: return new int [ INDEX _ NOT _ FOUND ] ;
rank: 102
score: 98.82848011363636
patch: switch ( search CaMeL Chars . length ) { }
rank: 102
score: 98.81427764892578
patch: continue ; break ; } ; }
rank: 102
score: 98.79796253551136
patch: return super . index CaMeL Of ( ch ) ;
rank: 102
score: 98.78781127929688
patch: continue ; } else return 0 ;
rank: 102
score: 98.71359252929688
patch: continue 1 ;
rank: 102
score: 98.54866027832031
patch: -- continue ; } if continue ;
rank: 102
score: 98.48337227957589
patch: return new continue ; break ;
rank: 103
score: 99.01130894252232
patch: x = search CaMeL Chars . char CaMeL At ( j ) ;
rank: 103
score: 98.99867600661058
patch: continue index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 103
score: 98.98839460100446
patch: continue ; } return cs . char CaMeL At ( j ) ;
rank: 103
score: 98.82712131076389
patch: res = INDEX _ NOT _ FOUND ;
rank: 103
score: 98.79776000976562
patch: return return INDEX _ NOT _ FOUND ; }
rank: 103
score: 98.78754534040179
patch: continue ; } if ; ;
rank: 103
score: 98.7118148803711
patch: break 1 ; break 1 ; }
rank: 103
score: 98.54817199707031
patch: continue ; / else = continue ;
rank: 103
score: 98.48295762803819
patch: continue ; if ; ; ; continue ;
rank: 104
score: 99.010986328125
patch: search CaMeL Chars . char CaMeL At ( j + 1 ) ; }
rank: 104
score: 98.99806123621323
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( [ j ] ) ;
rank: 104
score: 98.82692649147727
patch: tmp = INDEX _ NOT _ FOUND ; break ;
rank: 104
score: 98.81252712673611
patch: continue ; } } this . continue ;
rank: 104
score: 98.79747009277344
patch: return i ; } return i ;
rank: 104
score: 98.78724888392857
patch: continue ; } else { }
rank: 104
score: 98.71160210503473
patch: continue ; } if ( continue ) {
rank: 104
score: 98.48038736979167
patch: continue ; continue ; ; ++ continue ;
rank: 105
score: 99.010888671875
patch: search CaMeL Len = INDEX _ NOT _ FOUND ; return i ; }
rank: 105
score: 98.99681899126838
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( cs , i ) ;
rank: 105
score: 98.987646484375
patch: System . append ( cs . char CaMeL At ( j ) ) ;
rank: 105
score: 98.8263651529948
patch: key = cs . char CaMeL At ( j ) ;
rank: 105
score: 98.79723011363636
patch: continue ; } j ++ ; } return i ;
rank: 105
score: 98.78720528738839
patch: } else { continue ; }
rank: 105
score: 98.71044921875
patch: count ++ ; } }
rank: 105
score: 98.54686737060547
patch: continue ; * else { continue ;
rank: 106
score: 98.99640299479167
patch: continue INDEX _ NOT _ FOUND + search CaMeL Chars [ i ] ;
rank: 106
score: 98.82626342773438
patch: arg = cs . char CaMeL At ( j ) ;
rank: 106
score: 98.80992780412946
patch: break ; break ; } }
rank: 106
score: 98.794189453125
patch: search CaMeL Chars [ j ] = j ;
rank: 106
score: 98.78668212890625
patch: continue ; } else if ; continue ;
rank: 106
score: 98.70928192138672
patch: removed = true ; break ; }
rank: 106
score: 98.54454040527344
patch: value continue ; } if continue ;
rank: 106
score: 98.47802734375
patch: continue ; continue ; ; } continue ;
rank: 107
score: 98.99506022135417
patch: continue static . index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 107
score: 98.98721313476562
patch: param = cs . char CaMeL At ( j ) ;
rank: 107
score: 98.82618408203125
patch: state = INDEX _ NOT _ FOUND ; }
rank: 107
score: 98.8096694946289
patch: return i ; break ; } }
rank: 107
score: 98.79217529296875
patch: try { return INDEX _ NOT _ FOUND ;
rank: 107
score: 98.7089131673177
patch: continue ; } if ;
rank: 107
score: 98.47293090820312
patch: if ; = 1 ; continue ;
rank: 108
score: 98.99268687855114
patch: result = INDEX _ NOT _ FOUND ; break ;
rank: 108
score: 98.8247578938802
patch: addr = cs . char CaMeL At ( i ) ;
rank: 108
score: 98.80958387586806
patch: continue ; } break ; } continue ;
rank: 108
score: 98.79146728515624
patch: continue search CaMeL Chars [ i ] ; }
rank: 108
score: 98.78199986049107
patch: continue ; } else return ;
rank: 108
score: 98.70765686035156
patch: continue - 1 ; continue ; }
rank: 108
score: 98.5439453125
patch: return continue - 1 ; if continue ;
rank: 108
score: 98.47039794921875
patch: continue ; if ; { break ;
rank: 109
score: 98.99129028320313
patch: continue return search CaMeL Chars [ j ] ;
rank: 109
score: 98.986572265625
patch: return ( cs . char CaMeL At ( j ) ) ; }
rank: 109
score: 98.82464130108173
patch: entry = cs . char CaMeL At ( j ) ; }
rank: 109
score: 98.8083724975586
patch: continue ; j ++ ; } }
rank: 109
score: 98.79083251953125
patch: return cs CaMeL Len ; } return i ;
rank: 109
score: 98.77884347098214
patch: { return 1 ; } }
rank: 109
score: 98.70560302734376
patch: break false ; }
rank: 109
score: 98.54296003069196
patch: continue ; / else continue ;
rank: 109
score: 98.4674301147461
patch: continue ; continue ; while continue ;
rank: 110
score: 99.00338541666666
patch: return INDEX _ NOT _ FOUND ; } } return search CaMeL Len ;
rank: 110
score: 98.99107450597427
patch: return this . cs . index CaMeL Of CaMeL Any CaMeL But ( cs ) ;
rank: 110
score: 98.98631873497597
patch: sb . append ( search CaMeL Chars [ j ] ) ;
rank: 110
score: 98.80595397949219
patch: found = true ; break ; }
rank: 110
score: 98.78951416015624
patch: ch = search CaMeL Chars [ i ] ;
rank: 110
score: 98.77834065755208
patch: continue ; } continue ; } else {
rank: 110
score: 98.70503452845982
patch: continue false ; } continue ;
rank: 110
score: 98.54171752929688
patch: continue - - 1 ;
rank: 110
score: 98.46549987792969
patch: if ; = continue ; break ;
rank: 111
score: 99.00243030894886
patch: return search CaMeL Chars [ search CaMeL Len ] ;
rank: 111
score: 98.98574594350961
patch: continue INDEX _ NOT _ FOUND ; } } return i ;
rank: 111
score: 98.82398399939903
patch: v = cs . char CaMeL At ( j ) ; }
rank: 111
score: 98.80516052246094
patch: continue ; } ++ count ; }
rank: 111
score: 98.78666548295455
patch: cs CaMeL Len = INDEX _ NOT _ FOUND ;
rank: 111
score: 98.77572631835938
patch: continue ; } else break ; }
rank: 111
score: 98.70440673828125
patch: continue count [ i ] ; }
rank: 111
score: 98.53985595703125
patch: continue ; for continue ;
rank: 111
score: 98.46531168619792
patch: continue ; ; if ; + continue ;
rank: 112
score: 99.002294921875
patch: return INDEX _ NOT _ FOUND ; } } return cs . length ;
rank: 112
score: 98.80475463867188
patch: continue ; ; } else { continue ; }
rank: 112
score: 98.78585205078124
patch: continue ; } search CaMeL Len = j ;
rank: 112
score: 98.7698745727539
patch: continue ; } catch ; continue ;
rank: 112
score: 98.70428466796875
patch: position ++ ; break ; } }
rank: 112
score: 98.53730010986328
patch: continue ; / / if continue ;
rank: 112
score: 98.46512603759766
patch: continue ; if ; if continue ;
rank: 113
score: 99.0005634014423
patch: search CaMeL Len = search CaMeL Chars [ j ] ; }
rank: 113
score: 98.98710123697917
patch: continue : cs . char CaMeL At ( j ) ;
rank: 113
score: 98.98423258463542
patch: outer = cs . char CaMeL At ( j ) ;
rank: 113
score: 98.82154337565105
patch: result = INDEX _ NOT _ FOUND ; break ; }
rank: 113
score: 98.80453491210938
patch: continue ; } } else if ;
rank: 113
score: 98.78392444957386
patch: else { return INDEX _ NOT _ FOUND ; }
rank: 113
score: 98.76968722873264
patch: this . continue ; } } continue ;
rank: 113
score: 98.70378112792969
patch: continue false ; continue true ; }
rank: 113
score: 98.46456570095486
patch: continue ; continue ; ; if ; ;
rank: 114
score: 98.99947916666666
patch: search CaMeL Chars [ i ] = search CaMeL Chars [ j ] ;
rank: 114
score: 98.98688507080078
patch: return search CaMeL Chars index CaMeL Of CaMeL Any CaMeL But ( cs ) ;
rank: 114
score: 98.98417154947917
patch: search CaMeL Chars [ j ] = ch ; break ;
rank: 114
score: 98.80391235351563
patch: search CaMeL Len ++ ; ; break ; }
rank: 114
score: 98.7695541381836
patch: continue ; } } ; continue ;
rank: 114
score: 98.70314025878906
patch: continue - 1 ; } else {
rank: 114
score: 98.53616333007812
patch: continue - 1 ; break true ;
rank: 114
score: 98.4623794555664
patch: continue ; for continue ; break ;
rank: 115
score: 98.9865363625919
patch: cs . index CaMeL Of CaMeL Any CaMeL But ( ch , ch ) ; }
rank: 115
score: 98.8211669921875
patch: ch = cs . char CaMeL At ( i ) ; }
rank: 115
score: 98.78129438920455
patch: cs CaMeL Len = j . length ( ) ;
rank: 115
score: 98.76930745442708
patch: return 1 ; } else { continue ;
rank: 115
score: 98.70204162597656
patch: continue ; case $STRING$ : break ;
rank: 115
score: 98.46167864118304
patch: continue ; ; { continue ;
rank: 116
score: 98.9944356282552
patch: x = cs . char CaMeL At ( j ) ;
rank: 116
score: 98.98551432291667
patch: return index CaMeL Of CaMeL Any CaMeL But ( ch , i ) ;
rank: 116
score: 98.98155721028645
patch: prop = cs . char CaMeL At ( j ) ;
rank: 116
score: 98.82106526692708
patch: old = cs . char CaMeL At ( i ) ;
rank: 116
score: 98.80035400390625
patch: continue ; break ; } } ;
rank: 116
score: 98.7803622159091
patch: log . { return INDEX _ NOT _ FOUND ;
rank: 116
score: 98.76836286272321
patch: continue ; } } catch ;
rank: 116
score: 98.70109049479167
patch: break true ; } }
rank: 116
score: 98.535888671875
patch: if continue ; continue ; } continue ;
rank: 116
score: 98.46055094401042
patch: continue ; continue ; } } continue ;
rank: 117
score: 98.9812255859375
patch: INDEX _ NOT _ FOUND = INDEX _ NOT _ FOUND ; break ;
rank: 117
score: 98.8209228515625
patch: z = cs . char CaMeL At ( j ) ;
rank: 117
score: 98.80029296875
patch: continue ; } this . continue ; }
rank: 117
score: 98.77929077148437
patch: search CaMeL Len = j ; j ++ ;
rank: 117
score: 98.76788330078125
patch: break ; } if ( continue ;
rank: 117
score: 98.69903564453125
patch: count ++ ; } break ; }
rank: 117
score: 98.53487396240234
patch: continue - 1 ; if continue ;
rank: 117
score: 98.46051703559027
patch: if ; continue ; break ; break ;
rank: 118
score: 98.99283040364584
patch: return INDEX _ NOT _ FOUND ; } } return cs CaMeL Len ;
rank: 118
score: 98.98273064108456
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs , search CaMeL Chars [ j
rank: 118
score: 98.98093087332589
patch: super . index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 118
score: 98.82063598632813
patch: false return INDEX _ NOT _ FOUND ; }
rank: 118
score: 98.80018446180556
patch: continue ; break ; } } continue ;
rank: 118
score: 98.77882080078125
patch: continue ; } return search CaMeL Len ; }
rank: 118
score: 98.76616668701172
patch: return 1 ; } } return ;
rank: 118
score: 98.69725799560547
patch: assert true ; break ; } }
rank: 118
score: 98.5340576171875
patch: list . next ( ; continue ;
rank: 118
score: 98.4595947265625
patch: if ; continue ; if ; continue ;
rank: 119
score: 98.99278846153847
patch: out . add ( search CaMeL Chars [ j ] ) ;
rank: 119
score: 98.98272298177083
patch: continue index CaMeL Of CaMeL Any CaMeL But ( search CaMeL Chars ) ;
rank: 119
score: 98.9801025390625
patch: cs CaMeL Len = search CaMeL Chars [ j ] ;
rank: 119
score: 98.82033962673611
patch: answer = INDEX _ NOT _ FOUND ;
rank: 119
score: 98.77765447443181
patch: continue ( INDEX _ NOT _ FOUND ) ; }
rank: 119
score: 98.76611328125
patch: return 1 ; break ; } }
rank: 119
score: 98.69666290283203
patch: n ++ ; break ; } }
rank: 119
score: 98.45936584472656
patch: continue ; if ; continue ; }
rank: 120
score: 98.99251302083333
patch: search CaMeL Len = INDEX _ NOT _ FOUND ; } return i ;
rank: 120
score: 98.98210592830883
patch: continue cs . index CaMeL Of CaMeL Any CaMeL But ( cs , ch ) ;
rank: 120
score: 98.97914632161458
patch: pos = cs . char CaMeL At ( j ) ;
rank: 120
score: 98.8198750813802
patch: tag = cs . char CaMeL At ( j ) ;
rank: 120
score: 98.77617853338069
patch: return ( INDEX _ NOT _ FOUND ) ; }
rank: 120
score: 98.76580810546875
patch: continue ; } } return ;
rank: 120
score: 98.69536590576172
patch: end ++ ; break ; } }
rank: 120
score: 98.53019205729167
patch: continue ; } else { while continue ;
rank: 120
score: 98.45905219184027
patch: continue ; continue ; ; { continue ;
rank: 121
score: 98.992431640625
patch: search CaMeL Chars [ j ] = 0 ;
rank: 121
score: 98.819775390625
patch: length = search CaMeL Chars . length ; }
rank: 121
score: 98.79403686523438
patch: continue true ; } }
rank: 121
score: 98.7759676846591
patch: search CaMeL Len = cs . length ( ) ;
rank: 121
score: 98.69274030412946
patch: continue false ; break ; }
rank: 121
score: 98.52849578857422
patch: return - 1 ; for continue ;
rank: 121
score: 98.45869276258681
patch: continue ; continue ; } -- continue ;
rank: 122
score: 98.99034016927084
patch: return search CaMeL Chars . char CaMeL At ( j - 1 ) ;
rank: 122
score: 98.98126579733456
patch: return super . index CaMeL Of CaMeL Any CaMeL But ( search CaMeL Chars ) ;
rank: 122
score: 98.97786458333333
patch: search CaMeL Chars [ j ] = search CaMeL Chars [ i ] ;
rank: 122
score: 98.81894938151042
patch: token = cs . char CaMeL At ( j ) ;
rank: 122
score: 98.79363250732422
patch: continue ; } if ( ch ;
rank: 122
score: 98.7752685546875
patch: return char CaMeL At ( j ) ;
rank: 122
score: 98.76385498046875
patch: { continue ; } }
rank: 122
score: 98.69225311279297
patch: break - 1 ; break ; }
rank: 122
score: 98.52828216552734
patch: out . add ( continue ) ;
rank: 122
score: 98.4586181640625
patch: return ( continue ; break ; break ;
rank: 123
score: 98.99004255022321
patch: return INDEX _ NOT _ FOUND ; } return cs . length ;
rank: 123
score: 98.97777303059895
patch: continue } cs . char CaMeL At ( j ) ;
rank: 123
score: 98.79280308314732
patch: continue ; * continue ; }
rank: 123
score: 98.77510375976563
patch: continue ; } j = search CaMeL Len ;
rank: 123
score: 98.76350233289931
patch: continue ; } else if continue ; }
rank: 123
score: 98.69167073567708
patch: break ; default : break ; } }
rank: 123
score: 98.52773708767361
patch: return 0 ; } ; if continue ;
rank: 123
score: 98.45849609375
patch: continue ; continue ; false ;
rank: 124
score: 98.98680623372395
patch: return 0 ; } return INDEX _ NOT _ FOUND ;
rank: 124
score: 98.97990417480469
patch: return index CaMeL Of CaMeL Any CaMeL But ( ( char ) ch ) ;
rank: 124
score: 98.9772440592448
patch: cs = cs . char CaMeL At ( j ) ;
rank: 124
score: 98.7927490234375
patch: continue ; ; }
rank: 124
score: 98.774609375
patch: return this . INDEX _ NOT _ FOUND ;
rank: 124
score: 98.76341029575893
patch: continue ; } else break ;
rank: 124
score: 98.69107055664062
patch: continue false ; continue false ; }
rank: 124
score: 98.52582465277777
patch: char continue ; continue ; if continue ;
rank: 124
score: 98.4578628540039
patch: continue ; else ; if continue ;
rank: 125
score: 98.9798095703125
patch: return index CaMeL Of CaMeL Any CaMeL But ( i , ch ) ;
rank: 125
score: 98.97623384915866
patch: s = cs . char CaMeL At ( j ) ; }
rank: 125
score: 98.81825949928977
patch: true ; return INDEX _ NOT _ FOUND ; }
rank: 125
score: 98.77433471679687
patch: return - INDEX _ NOT _ FOUND ; }
rank: 125
score: 98.68964301215277
patch: break - 1 ; break ; } }
rank: 125
score: 98.52560424804688
patch: continue * - 1 ;
rank: 125
score: 98.45634629991319
patch: continue ; if continue ; for continue ;
rank: 126
score: 98.97978659237133
patch: return super . index CaMeL Of CaMeL Any CaMeL But ( ch , ch ) ;
rank: 126
score: 98.97555541992188
patch: f = cs . char CaMeL At ( j ) ;
rank: 126
score: 98.81824747721355
patch: comp = cs . char CaMeL At ( j ) ;
rank: 126
score: 98.77400512695313
patch: return INDEX _ NOT _ FOUND ; ; }
rank: 126
score: 98.68834686279297
patch: continue false ; break ; } }
rank: 126
score: 98.52464948381696
patch: -- continue ; } continue ;
rank: 126
score: 98.4561996459961
patch: return 1 ;
rank: 127
score: 98.985498046875
patch: search CaMeL Len = 0 ; return i ;
rank: 127
score: 98.9792724609375
patch: continue INDEX _ NOT _ FOUND + ch ;
rank: 127
score: 98.8177998860677
patch: name = cs . char CaMeL At ( i ) ;
rank: 127
score: 98.79145812988281
patch: continue ; ; } continue ; }
rank: 127
score: 98.77330322265625
patch: search CaMeL Len [ j ] = ch ;
rank: 127
score: 98.76081848144531
patch: break ; } else = continue ;
rank: 127
score: 98.68672943115234
patch: continue matches [ i ] ; }
rank: 127
score: 98.52249484592014
patch: return continue ; } continue ; break ;
rank: 127
score: 98.45615641276042
patch: outer ; continue ; break ; break ;
rank: 128
score: 98.98529052734375
patch: cs . index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 128
score: 98.97829302619485
patch: continue index CaMeL Of CaMeL Any CaMeL But ( cs , cs CaMeL Len ) ;
rank: 128
score: 98.8167215983073
patch: obj = cs . char CaMeL At ( j ) ;
rank: 128
score: 98.79122161865234
patch: continue ; } ; } return ;
rank: 128
score: 98.77158900669643
patch: return search CaMeL Len ; }
rank: 128
score: 98.68252902560764
patch: continue ; default : break false ; }
rank: 128
score: 98.52231174045139
patch: continue ; } break ; if continue ;
rank: 128
score: 98.4549789428711
patch: if ; continue ; } continue ;
rank: 129
score: 98.97779947916666
patch: continue super . index CaMeL Of CaMeL Any CaMeL But ( cs ) ;
rank: 129
score: 98.9733174641927
patch: cs . char CaMeL At ( j ) ; break ;
rank: 129
score: 98.81546724759616
patch: prefix = cs . char CaMeL At ( i ) ; }
rank: 129
score: 98.78778076171875
patch: continue ; } ++ cs CaMeL Len ; }
rank: 129
score: 98.76781463623047
patch: search CaMeL Len = j ; }
rank: 129
score: 98.75916205512152
patch: continue ; } else { continue ; ;
rank: 129
score: 98.6805419921875
patch: limit -- ; break ; } }
rank: 129
score: 98.52224731445312
patch: continue ; / * * continue ;
rank: 129
score: 98.45332166883681
patch: continue ; continue ; ; = continue ;
rank: 130
score: 98.98455810546875
patch: search CaMeL Chars [ i ] = search CaMeL Len ;
rank: 130
score: 98.97310180664063
patch: n = search CaMeL Chars [ j ] ;
rank: 130
score: 98.8131815592448
patch: v = cs . char CaMeL At ( i ) ;
rank: 130
score: 98.78673553466797
patch: return i ; } break ; }
rank: 130
score: 98.76779174804688
patch: t = search CaMeL Chars [ j ] ;
rank: 130
score: 98.75872802734375
patch: return $NUMBER$ ; } continue ; }
rank: 130
score: 98.51978302001953
patch: continue ; / / * break ;
rank: 130
score: 98.4522933959961
patch: break ; continue ; } continue ;
rank: 131
score: 98.98445638020833
patch: return cs . char CaMeL At ( j ) . length ( ) ;
rank: 131
score: 98.97252400716145
patch: if ( INDEX _ NOT _ FOUND ) { continue ;
rank: 131
score: 98.81284401633523
patch: search CaMeL Len += search CaMeL Chars . length ;
rank: 131
score: 98.78669084821429
patch: continue ; } count ++ ;
rank: 131
score: 98.76699490017361
patch: return index CaMeL Of ( ch ) ;
rank: 131
score: 98.67612130301339
patch: count -- ; continue ; }
rank: 131
score: 98.51976776123047
patch: outer continue ; } if continue ;
rank: 131
score: 98.44845581054688
patch: if false ; continue ; break ;
rank: 132
score: 98.98281860351562
patch: return search CaMeL Chars [ search CaMeL Len ] ; }
rank: 132
score: 98.97705796185662
patch: return in . index CaMeL Of CaMeL Any CaMeL But ( cs , ch ) ;
rank: 132
score: 98.97184244791667
patch: continue INDEX _ NOT _ FOUND ; } } return cs . length ;
rank: 132
score: 98.81186930338542
patch: val = cs . char CaMeL At ( j ) ;
rank: 132
score: 98.76631673177083
patch: } return INDEX _ NOT _ FOUND ;
rank: 132
score: 98.75710720486111
patch: continue ; } if ; continue ; }
rank: 132
score: 98.5188980102539
patch: continue ; / * = continue ;
rank: 132
score: 98.44821602957589
patch: continue ; else if continue ;
rank: 133
score: 98.9812255859375
patch: search CaMeL Chars [ i ] = INDEX _ NOT _ FOUND ; }
rank: 133
score: 98.97594275841347
patch: continue search CaMeL Chars . char CaMeL At ( j ) ;
rank: 133
score: 98.8111572265625
patch: list . return INDEX _ NOT _ FOUND ; } }
rank: 133
score: 98.78440348307292
patch: continue ; } * /
rank: 133
score: 98.76606889204545
patch: continue INDEX _ NOT _ FOUND + i ; }
rank: 133
score: 98.75344848632812
patch: return ; ; } }
rank: 133
score: 98.67168426513672
patch: continue false ; } if ( ;
rank: 133
score: 98.51829528808594
patch: return continue ; ; if continue ;
rank: 134
score: 98.98026820591518
patch: search CaMeL Chars . char CaMeL At ( j - 1 ) ;
rank: 134
score: 98.97563171386719
patch: continue index CaMeL Of CaMeL Any CaMeL But ( cs , search CaMeL Chars [
rank: 134
score: 98.80943806966145
patch: a = cs . char CaMeL At ( j ) ;
rank: 134
score: 98.78410121372768
patch: pos ++ ; continue ; }
rank: 134
score: 98.7650146484375
patch: return 0 ; } return 0 ;
rank: 134
score: 98.75204031808036
patch: return 1 ; } } ;
rank: 135
score: 98.98014613560268
patch: return INDEX _ NOT _ FOUND ; } else { return i ;
rank: 135
score: 98.9754638671875
patch: return continue . index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 135
score: 98.80943603515625
patch: break INDEX _ NOT _ FOUND ; } }
rank: 135
score: 98.76248168945312
patch: continue ; } } return 0 ;
rank: 135
score: 98.74932861328125
patch: return ] ; } } continue ;
rank: 135
score: 98.51786804199219
patch: finally { continue ; if continue ;
rank: 135
score: 98.44655064174107
patch: return - 1 ; break ;
rank: 136
score: 98.9783935546875
patch: return search CaMeL Chars . index CaMeL Of ( ch ) ; }
rank: 136
score: 98.7826416015625
patch: continue ; } continue ; } continue ; }
rank: 136
score: 98.74893188476562
patch: break ; } } ( continue ;
rank: 136
score: 98.66565813337054
patch: continue false ; } break ;
rank: 136
score: 98.51705496651786
patch: value = continue ; continue ;
rank: 136
score: 98.44636535644531
patch: continue ; continue ; ( continue ;
rank: 137
score: 98.9768575032552
patch: return this . search CaMeL Chars [ j ] ; }
rank: 137
score: 98.9741943359375
patch: continue index CaMeL Of CaMeL Any CaMeL But ( ch , cs ) ;
rank: 137
score: 98.96951293945312
patch: return search CaMeL Chars char CaMeL At ( j ) ;
rank: 137
score: 98.7816162109375
patch: search CaMeL Len ++ ; ; continue ; }
rank: 137
score: 98.75935581752232
patch: cs CaMeL Len ++ ; }
rank: 137
score: 98.74781799316406
patch: continue ; } else throw continue ;
rank: 137
score: 98.66483561197917
patch: return - 1 ; } break ; }
rank: 137
score: 98.51616668701172
patch: else continue ; } if continue ;
rank: 137
score: 98.4459228515625
patch: continue ; ; if continue ; }
rank: 138
score: 98.8052978515625
patch: ns = cs . char CaMeL At ( j ) ;
rank: 138
score: 98.75855601917614
patch: try { return search CaMeL Chars [ j ] ;
rank: 138
score: 98.74745686848958
patch: break ; } } }
rank: 138
score: 98.51598358154297
patch: return next ( ; { continue ;
rank: 138
score: 98.44501410590277
patch: continue ; continue ; * / continue ;
rank: 139
score: 98.97220284598214
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs , ) ;
rank: 139
score: 98.96925455729166
patch: super . index CaMeL Of CaMeL Any CaMeL But ( ch ) ; }
rank: 139
score: 98.80477201021634
patch: expr = cs . char CaMeL At ( j ) ; }
rank: 139
score: 98.77931213378906
patch: continue ; } / * continue ;
rank: 139
score: 98.75732421875
patch: continue INDEX _ NOT _ FOUND + j ; }
rank: 139
score: 98.7470703125
patch: continue ; * * * * /
rank: 139
score: 98.65798950195312
patch: ok = true ; break ; }
rank: 139
score: 98.51543511284723
patch: continue ; / else ; if continue ;
rank: 139
score: 98.44426133897569
patch: continue ; ; if ; { continue ;
rank: 140
score: 98.975341796875
patch: return search CaMeL Chars . get ( j ) ;
rank: 140
score: 98.97187356387867
patch: super . index CaMeL Of CaMeL Any CaMeL But ( ch ) ; return i ;
rank: 140
score: 98.8040771484375
patch: byte ch = cs . char CaMeL At ( i ) ;
rank: 140
score: 98.7787857055664
patch: continue ; break ; } } }
rank: 140
score: 98.75693969726562
patch: outer = search CaMeL Chars [ j ] ;
rank: 140
score: 98.7452392578125
patch: return start ; } } continue ;
rank: 140
score: 98.65586547851562
patch: continue 0 ; }
rank: 140
score: 98.44389343261719
patch: if ; = continue ; continue ;
rank: 141
score: 98.966552734375
patch: search CaMeL Chars [ j ] = $STRING$ ; }
rank: 141
score: 98.77663845486111
patch: continue ; } } else if ( ;
rank: 141
score: 98.75666947798295
patch: continue search CaMeL Chars [ j ] = ch ;
rank: 141
score: 98.74388122558594
patch: continue ; ; } } continue ;
rank: 141
score: 98.65349731445312
patch: break 1 ; }
rank: 141
score: 98.44385528564453
patch: return ( continue ; ; break ;
rank: 142
score: 98.97428385416667
patch: if ( search CaMeL Chars [ cs . char CaMeL At ( j )
rank: 142
score: 98.97121294806985
patch: return in . index CaMeL Of CaMeL Any CaMeL But ( ch , ch ) ;
rank: 142
score: 98.79986102764423
patch: byte ch = cs . char CaMeL At ( j ) ;
rank: 142
score: 98.77580261230469
patch: continue ; } ; continue ; }
rank: 142
score: 98.7559326171875
patch: c = search CaMeL Chars [ j ] ;
rank: 142
score: 98.74380493164062
patch: continue ; } else {
rank: 142
score: 98.65196990966797
patch: continue false ; } continue true ;
rank: 142
score: 98.50952911376953
patch: continue ; / else { break ;
rank: 142
score: 98.44379534040179
patch: return ( continue ; break ;
rank: 143
score: 98.97403390066964
patch: search CaMeL Len = search CaMeL Chars . length ; return i ;
rank: 143
score: 98.9708251953125
patch: continue || search CaMeL Chars [ j ] == ch ;
rank: 143
score: 98.96478271484375
patch: end = search CaMeL Chars [ j ] ;
rank: 143
score: 98.79920450846355
patch: tmp = INDEX _ NOT _ FOUND ; continue ; }
rank: 143
score: 98.77471923828125
patch: continue ; } if ( continue ; }
rank: 143
score: 98.75469970703125
patch: search CaMeL Len ++ ; j ++ ; }
rank: 143
score: 98.7433090209961
patch: * * * * / continue ;
rank: 143
score: 98.64853922526042
patch: changed = false ; break ; } }
rank: 143
score: 98.50886535644531
patch: continue finally ; } if continue ;
rank: 143
score: 98.44346110026042
patch: continue ; if ; ;
rank: 144
score: 98.97035435267857
patch: return search CaMeL Len ? INDEX _ NOT _ FOUND : i ;
rank: 144
score: 98.7991434733073
patch: p = cs . char CaMeL At ( i ) ;
rank: 144
score: 98.77169799804688
patch: break ; } else { break ; } }
rank: 144
score: 98.75261094835069
patch: INDEX _ NOT _ FOUND = i ;
rank: 144
score: 98.74326869419643
patch: break ; } } catch ;
rank: 144
score: 98.64787292480469
patch: success = true ; break ; }
rank: 144
score: 98.50801849365234
patch: continue ; / * / continue ;
rank: 144
score: 98.44158257378473
patch: continue ; continue ; } throw continue ;
rank: 145
score: 98.97267252604166
patch: return cs . char CaMeL At ( j ) . size ( ) ;
rank: 145
score: 98.96985626220703
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs , ch ) ; }
rank: 145
score: 98.96212768554688
patch: cs . char CaMeL At ( j ) ; } }
rank: 145
score: 98.77139892578126
patch: continue ; } if ( ; break ; }
rank: 145
score: 98.7524642944336
patch: return 1 ; } return i ;
rank: 145
score: 98.74220106336806
patch: continue ; } else return continue ; }
rank: 145
score: 98.64427354600694
patch: count ++ ; break ; } break ;
rank: 145
score: 98.44122314453125
patch: continue ; return continue ; break ;
rank: 146
score: 98.97213541666666
patch: search CaMeL Chars [ j ] = char CaMeL At ( j ) ;
rank: 146
score: 98.96876878004808
patch: continue ( i . char CaMeL At ( j ) ) ;
rank: 146
score: 98.96063232421875
patch: super . index CaMeL Of CaMeL Any CaMeL But ( cs ) ;
rank: 146
score: 98.7988993326823
patch: attr = cs . char CaMeL At ( j ) ;
rank: 146
score: 98.77081298828125
patch: cursor ++ ; break ; } }
rank: 146
score: 98.74100494384766
patch: continue ; } else throw null ;
rank: 146
score: 98.50662570529514
patch: continue ; ; } continue ; break ;
rank: 147
score: 98.96862074908088
patch: continue ( search CaMeL Chars [ j ] . to CaMeL String ( ) ) ;
rank: 147
score: 98.79838053385417
patch: table = cs . char CaMeL At ( i ) ;
rank: 147
score: 98.76909637451172
patch: continue ; * / break ; }
rank: 147
score: 98.751123046875
patch: return cs CaMeL Len ; } j ++ ;
rank: 147
score: 98.64293755425348
patch: continue iterator . next ( ) ; }
rank: 147
score: 98.50524139404297
patch: continue ; } ; { continue ;
rank: 147
score: 98.44107055664062
patch: continue ; ; / if continue ;
rank: 148
score: 98.96842687270221
patch: return index CaMeL Of CaMeL Any CaMeL But ( search CaMeL Chars , ch ) ;
rank: 148
score: 98.9600360576923
patch: break ; } } } return INDEX _ NOT _ FOUND ;
rank: 148
score: 98.79726155598958
patch: prev = cs . char CaMeL At ( i ) ;
rank: 148
score: 98.76898193359375
patch: continue ; } if ( ; continue ; }
rank: 148
score: 98.7501220703125
patch: super . index CaMeL Of ( cs ) ; }
rank: 148
score: 98.74003601074219
patch: break ; } else if ; }
rank: 148
score: 98.6428451538086
patch: break ; default : break ; }
rank: 148
score: 98.50519561767578
patch: i continue ; } if continue ;
rank: 148
score: 98.4402084350586
patch: continue ; if ; = 1 ;
rank: 149
score: 98.79723182091347
patch: search CaMeL Len = search CaMeL Chars . length ; } }
rank: 149
score: 98.76850128173828
patch: continue ; } count -- ; }
rank: 149
score: 98.75000871930804
patch: search CaMeL Len ++ ; }
rank: 149
score: 98.73884582519531
patch: return 1 ; } catch continue ;
rank: 149
score: 98.64237976074219
patch: count ++ ; continue ; } }
rank: 149
score: 98.50514221191406
patch: value = continue ; break ; ;
rank: 149
score: 98.43817816840277
patch: continue ; ; = continue ; break ;
rank: 150
score: 98.97150065104167
patch: super . index CaMeL Of CaMeL Any CaMeL But ( cs ) ; }
rank: 150
score: 98.96414005055146
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( i , ch ) ;
rank: 150
score: 98.95936168323864
patch: buffer . char CaMeL At ( j ) ; }
rank: 150
score: 98.79705341045673
patch: curr = cs . char CaMeL At ( j ) ; }
rank: 150
score: 98.76775360107422
patch: pos -- ; break ; } }
rank: 150
score: 98.7497787475586
patch: return 1 ; } j ++ ;
rank: 150
score: 98.73801967075893
patch: { continue ; } continue ;
rank: 150
score: 98.43644714355469
patch: continue ; continue ; ; if ;
rank: 151
score: 98.97116524832589
patch: search CaMeL Len = INDEX _ NOT _ FOUND ; return 0 ;
rank: 151
score: 98.79661051432292
patch: r = cs . char CaMeL At ( j ) ;
rank: 151
score: 98.76753997802734
patch: continue ; } continue ; ; }
rank: 151
score: 98.74976806640625
patch: super . index CaMeL Of ( cs ) ;
rank: 151
score: 98.73683166503906
patch: continue ; } * * * /
rank: 152
score: 98.97044959435097
patch: cs . add ( search CaMeL Chars [ j ] ) ;
rank: 152
score: 98.96330430772569
patch: continue + INDEX _ NOT _ FOUND ;
rank: 152
score: 98.79660866477273
patch: return index CaMeL Of CaMeL Any CaMeL But ; }
rank: 152
score: 98.73455810546875
patch: continue ; } } if ; ;
rank: 152
score: 98.63932037353516
patch: break ; } if ( ; }
rank: 152
score: 98.43459743923611
patch: continue ; ; if continue ; if ;
rank: 153
score: 98.97010294596355
patch: search CaMeL Chars [ search CaMeL Len ] = ch ;
rank: 153
score: 98.96227155412946
patch: continue . index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 153
score: 98.79653930664062
patch: ! search CaMeL Chars [ j ] ; }
rank: 153
score: 98.76525268554687
patch: continue ; } if ( ; } continue ;
rank: 153
score: 98.7483154296875
patch: continue ; } else { return i ; }
rank: 153
score: 98.73416900634766
patch: throw null ; } } else {
rank: 153
score: 98.6388931274414
patch: break - 1 ; } ; }
rank: 153
score: 98.50021362304688
patch: continue ; } break ; break ;
rank: 153
score: 98.43250274658203
patch: continue ; continue ; / / ;
rank: 154
score: 98.96578275240384
patch: result = INDEX _ NOT _ FOUND ; return i ; }
rank: 154
score: 98.79369099934895
patch: entry = cs . char CaMeL At ( i ) ;
rank: 154
score: 98.76429748535156
patch: continue ; } } } return ;
rank: 154
score: 98.74736993963069
patch: return INDEX _ NOT _ FOUND ; i ++ ;
rank: 154
score: 98.7333984375
patch: continue ; } return 1 ;
rank: 154
score: 98.63848876953125
patch: continue ; i ++ ; } }
rank: 154
score: 98.49857330322266
patch: else { continue ; } break ;
rank: 154
score: 98.43184407552083
patch: outer ; continue ; ; if continue ;
rank: 155
score: 98.95139567057292
patch: buffer . char CaMeL At ( j ) ; continue ;
rank: 155
score: 98.79218885633681
patch: retval = INDEX _ NOT _ FOUND ;
rank: 155
score: 98.76343451605902
patch: continue ; } } if ( continue ;
rank: 155
score: 98.7470703125
patch: cs = search CaMeL Chars [ j ] ;
rank: 155
score: 98.72892761230469
patch: continue * 1 ; } continue ;
rank: 155
score: 98.63732147216797
patch: continue true ; continue true ; }
rank: 155
score: 98.49810028076172
patch: return continue - 1 ; break ;
rank: 155
score: 98.43123372395833
patch: continue ; continue ; if ++ continue ;
rank: 156
score: 98.95933180588942
patch: return search CaMeL Chars [ j ] . size ( ) ;
rank: 156
score: 98.95065307617188
patch: path = cs . char CaMeL At ( j ) ;
rank: 156
score: 98.76341417100694
patch: search CaMeL Len -- ; continue ; }
rank: 156
score: 98.7469815340909
patch: return search CaMeL Chars [ i ] ; } }
rank: 156
score: 98.72653198242188
patch: continue ; } } if ; }
rank: 156
score: 98.63709513346355
patch: continue 1 ; } }
rank: 156
score: 98.49744415283203
patch: value = continue ; continue ; }
rank: 156
score: 98.43122016059027
patch: continue ; continue ; if continue ; ;
rank: 157
score: 98.95860877403847
patch: return search CaMeL Chars [ j ] . length ( ) ;
rank: 157
score: 98.94947509765625
patch: buffer . char CaMeL At ( j ) ;
rank: 157
score: 98.79103597005208
patch: resource = cs . char CaMeL At ( i ) ;
rank: 157
score: 98.746435546875
patch: cs CaMeL Len ++ ; j ++ ; }
rank: 157
score: 98.7264633178711
patch: if ( continue ; break ; }
rank: 157
score: 98.63671112060547
patch: continue ; } continue ; default :
rank: 157
score: 98.43087429470486
patch: continue ; continue ; ; ( continue ;
rank: 158
score: 98.96427408854167
patch: return search CaMeL Chars cs . char CaMeL At ( j ) ; }
rank: 158
score: 98.95855712890625
patch: sb . add ( cs . char CaMeL At ( j ) ) ; }
rank: 158
score: 98.7907245342548
patch: tmp = cs . char CaMeL At ( i ) ; }
rank: 158
score: 98.76055036272321
patch: return continue - 1 ; }
rank: 158
score: 98.74611206054688
patch: return INDEX _ NOT _ FOUND . length ;
rank: 158
score: 98.72471788194444
patch: this . continue ; } continue ; }
rank: 158
score: 98.63349066840277
patch: break 1 ; break 1 ; } }
rank: 158
score: 98.49556732177734
patch: try { continue ; break ; }
rank: 158
score: 98.43070220947266
patch: continue ; continue ; while ; ;
rank: 159
score: 98.96408081054688
patch: return INDEX _ NOT _ FOUND ; } else { }
rank: 159
score: 98.95784214564732
patch: result = INDEX _ NOT _ FOUND ; search CaMeL Len ++ ;
rank: 159
score: 98.94741821289062
patch: continue ; } return search CaMeL Chars [ j ] ;
rank: 159
score: 98.74610595703125
patch: i = search CaMeL Chars [ j ] ;
rank: 159
score: 98.72457449776786
patch: break ; } else if ;
rank: 159
score: 98.63324737548828
patch: length ++ ; break ; } }
rank: 159
score: 98.49514770507812
patch: return continue ; } while continue ;
rank: 159
score: 98.43044704861111
patch: continue ; continue ; if ; * /
rank: 160
score: 98.7891094501202
patch: resource = cs . char CaMeL At ( j ) ; }
rank: 160
score: 98.75781860351563
patch: break ; } else { continue ; } }
rank: 160
score: 98.7459383877841
patch: return index CaMeL Of CaMeL Any ( ch ) ;
rank: 160
score: 98.72415500217014
patch: continue ; } else if ; * /
rank: 160
score: 98.49428304036458
patch: for continue ; continue ;
rank: 160
score: 98.42964680989583
patch: continue ; continue ; = ; continue ;
rank: 161
score: 98.95714518229167
patch: cs . index CaMeL Of CaMeL Any CaMeL But ( cs ) ; }
rank: 161
score: 98.94596724076705
patch: throw ( String ) INDEX _ NOT _ FOUND ;
rank: 161
score: 98.78899591619319
patch: result = INDEX _ NOT _ FOUND ; continue ;
rank: 161
score: 98.75480143229167
patch: continue ; } ; } } continue ;
rank: 161
score: 98.74375406901042
patch: cs CaMeL Len ++ ;
rank: 161
score: 98.723876953125
patch: continue * 1 ; } }
rank: 161
score: 98.63206651475694
patch: break 1 ; } break 1 ; }
rank: 161
score: 98.49418131510417
patch: continue - 0 ; }
rank: 161
score: 98.42951202392578
patch: if continue ; continue ; continue ;
rank: 162
score: 98.95693969726562
patch: return in . index CaMeL Of CaMeL Any CaMeL But ( ch ) ; }
rank: 162
score: 98.7546875
patch: return ; } } else { continue ; }
rank: 162
score: 98.7432861328125
patch: continue ; } return 0 ;
rank: 162
score: 98.722900390625
patch: continue ; } else ; } continue ;
rank: 162
score: 98.63172743055556
patch: continue 1 ; break 1 ; } }
rank: 162
score: 98.49329291449652
patch: continue ; / else { for continue ;
rank: 162
score: 98.4294204711914
patch: continue ; if ; continue ; /
rank: 163
score: 98.95640563964844
patch: return index CaMeL Of CaMeL Any CaMeL But ( search CaMeL Chars ) ; }
rank: 163
score: 98.78782301682692
patch: result = cs . char CaMeL At ( j ) ; }
rank: 163
score: 98.75303819444444
patch: continue continue ; } ; } continue ;
rank: 163
score: 98.74159071180556
patch: continue ; } return i . length ;
rank: 163
score: 98.71929931640625
patch: break ; } } continue ; }
rank: 163
score: 98.63018120659723
patch: sb . append ( $STRING$ ) ; }
rank: 163
score: 98.49324035644531
patch: result = continue ; if continue ;
rank: 163
score: 98.42833116319444
patch: continue ; continue ; / / continue ;
rank: 164
score: 98.95594371448864
patch: continue search CaMeL Chars [ j ] + ch ;
rank: 164
score: 98.78669877485795
patch: return INDEX _ NOT _ FOUND ; } } else
rank: 164
score: 98.74994574652777
patch: continue ; } if ( ! ; }
rank: 164
score: 98.74131081321023
patch: return Math . index CaMeL Of ( ch ) ;
rank: 164
score: 98.71883719308036
patch: return 0 ; } else {
rank: 164
score: 98.6297607421875
patch: break ] ; break ; } }
rank: 164
score: 98.49216037326389
patch: continue continue ; } continue ; break ;
rank: 164
score: 98.42674037388393
patch: continue ; ; = continue ;
rank: 165
score: 98.95877075195312
patch: return index CaMeL Of CaMeL Any CaMeL But ( ) ;
rank: 165
score: 98.95526885986328
patch: return super . index CaMeL Of CaMeL Any CaMeL But ( ch ) ; }
rank: 165
score: 98.9441250887784
patch: continue cs . char CaMeL At ( j ) ;
rank: 165
score: 98.78652121803977
patch: return INDEX _ NOT _ FOUND ; } } }
rank: 165
score: 98.740966796875
patch: return INDEX _ NOT _ FOUND ; return i ;
rank: 165
score: 98.71880340576172
patch: continue ; } if ; break ;
rank: 165
score: 98.62867431640625
patch: continue count ; }
rank: 165
score: 98.49065551757812
patch: end new continue ;
rank: 165
score: 98.42601860894098
patch: continue ; if ; * / continue ;
rank: 166
score: 98.95838274274554
patch: continue ; } search CaMeL Len = search CaMeL Chars . length ;
rank: 166
score: 98.955078125
patch: buf . index CaMeL Of CaMeL Any CaMeL But ( ch ) ; }
rank: 166
score: 98.78618915264423
patch: return INDEX _ NOT _ FOUND ; } } return count ;
rank: 166
score: 98.74595642089844
patch: break ; } ; break ; }
rank: 166
score: 98.74054509943181
patch: logger . { return INDEX _ NOT _ FOUND ;
rank: 166
score: 98.71853637695312
patch: return 0 ; } } break ;
rank: 166
score: 98.62331814236111
patch: continue ; case $STRING$ : break ; }
rank: 166
score: 98.42522515190973
patch: continue ; continue ; continue ; if ;
rank: 167
score: 98.95807291666667
patch: cs CaMeL Len = cs . char CaMeL At ( j ) ; }
rank: 167
score: 98.94996744791666
patch: return i . index CaMeL Of CaMeL Any CaMeL But ( cs ) ;
rank: 167
score: 98.94356595552884
patch: continue ; } } return search CaMeL Chars [ j ] ;
rank: 167
score: 98.7847149188702
patch: name = cs . char CaMeL At ( i ) ; }
rank: 167
score: 98.7448486328125
patch: continue ; } System . arraycopy ( ; }
rank: 167
score: 98.740478515625
patch: cs CaMeL Len ++ ; cs CaMeL Len ++ ;
rank: 167
score: 98.71536690848214
patch: return $NUMBER$ ; } continue ;
rank: 167
score: 98.62290954589844
patch: break false ; break false ; }
rank: 167
score: 98.48968505859375
patch: continue ; / ++ * continue ;
rank: 167
score: 98.42444525824652
patch: continue ; continue ; } ; continue ;
rank: 168
score: 98.95707194010417
patch: if ( Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars [
rank: 168
score: 98.94867412860577
patch: this . search CaMeL Chars [ j ] = ch ; }
rank: 168
score: 98.9426025390625
patch: INDEX _ NOT _ FOUND = INDEX _ NOT _ FOUND ; continue ;
rank: 168
score: 98.78293863932292
patch: throw new Null CaMeL Pointer CaMeL Exception ( ) ; }
rank: 168
score: 98.74232700892857
patch: continue ; default : break ;
rank: 168
score: 98.73983764648438
patch: cs CaMeL Len = j ; j ++ ;
rank: 168
score: 98.71450805664062
patch: continue ; } } }
rank: 168
score: 98.62157440185547
patch: continue - 1 ; } if ;
rank: 168
score: 98.4894027709961
patch: continue ; } try { continue ;
rank: 168
score: 98.423583984375
patch: continue ; if ; continue ; if ;
rank: 169
score: 98.956787109375
patch: search CaMeL Len = INDEX _ NOT _ FOUND ; continue ;
rank: 169
score: 98.94077370383523
patch: return } } return INDEX _ NOT _ FOUND ;
rank: 169
score: 98.78179931640625
patch: table . return search CaMeL Chars [ j ] ; }
rank: 169
score: 98.74211120605469
patch: return continue ; } break ; }
rank: 169
score: 98.73876953125
patch: return 1 ; } } return i ;
rank: 169
score: 98.71429443359375
patch: continue ; } else . continue ;
rank: 169
score: 98.62096405029297
patch: continue 1 ; } if ( ;
rank: 169
score: 98.48930528428819
patch: continue ; ; continue ; if continue ;
rank: 169
score: 98.42354910714286
patch: if continue ; ; continue ;
rank: 170
score: 98.94591522216797
patch: continue super . index CaMeL Of CaMeL Any CaMeL But ( ch ) ; }
rank: 170
score: 98.7816162109375
patch: att = cs . char CaMeL At ( j ) ;
rank: 170
score: 98.74142020089286
patch: continue ; } ; break ;
rank: 170
score: 98.73845880681819
patch: return cs CaMeL Len ; } } return i ;
rank: 170
score: 98.7134297688802
patch: break ; } continue ;
rank: 170
score: 98.48878479003906
patch: continue ; / else return continue ;
rank: 170
score: 98.42289733886719
patch: continue ; continue ; = ; ;
rank: 171
score: 98.95487758091518
patch: search CaMeL Chars . char CaMeL At ( j + 0 ) ;
rank: 171
score: 98.9457015991211
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs , search CaMeL Chars ;
rank: 171
score: 98.94000244140625
patch: INDEX _ NOT _ FOUND = search CaMeL Chars [ j ] ;
rank: 171
score: 98.77829996744792
patch: target = cs . char CaMeL At ( i ) ;
rank: 171
score: 98.74076625279018
patch: continue ; } ++ count ;
rank: 171
score: 98.73843383789062
patch: cs CaMeL Len = j ; }
rank: 171
score: 98.71327209472656
patch: return 1 ; } } else ;
rank: 171
score: 98.61803588867187
patch: count ++ ; }
rank: 171
score: 98.48824734157986
patch: j * continue ; } if continue ;
rank: 171
score: 98.41944885253906
patch: continue ; continue ; ; false ;
rank: 172
score: 98.95465959821429
patch: result = search CaMeL Chars . char CaMeL At ( j ) ;
rank: 172
score: 98.9433124248798
patch: return search CaMeL Len - search CaMeL Chars [ j ] ;
rank: 172
score: 98.7771747295673
patch: p = cs . char CaMeL At ( j ) ; }
rank: 172
score: 98.74050903320312
patch: continue ; } } return count ;
rank: 172
score: 98.73699396306819
patch: return Integer . INDEX _ NOT _ FOUND ; }
rank: 172
score: 98.71268463134766
patch: return $NUMBER$ ; } } if ;
rank: 172
score: 98.48731825086806
patch: throw new Interrupted CaMeL Exception ( ) ;
rank: 172
score: 98.41839599609375
patch: continue ; continue ; continue ; ;
rank: 173
score: 98.95414225260417
patch: return INDEX _ NOT _ FOUND ; } i ++ ;
rank: 173
score: 98.9391377766927
patch: ch = ch . char CaMeL At ( j ) ;
rank: 173
score: 98.73942347935268
patch: continue ; ; } ; }
rank: 173
score: 98.7360506924716
patch: return i ; } } return cs CaMeL Len ;
rank: 173
score: 98.71224212646484
patch: continue ; } else { * /
rank: 173
score: 98.61431121826172
patch: continue true ; } continue true ;
rank: 173
score: 98.48707798549107
patch: continue ; / ] continue ;
rank: 173
score: 98.41722106933594
patch: return ( continue ; ? continue ;
rank: 174
score: 98.95374407087054
patch: return cs . char CaMeL At ( j + 1 ) ; }
rank: 174
score: 98.93967507102273
patch: continue search CaMeL Chars [ j ] : ch ;
rank: 174
score: 98.93750813802083
patch: continue INDEX _ NOT _ FOUND ; } } return search CaMeL Len ;
rank: 174
score: 98.77545166015625
patch: return INDEX _ NOT _ FOUND ; } } else {
rank: 174
score: 98.73856608072917
patch: break ; } ; }
rank: 174
score: 98.735107421875
patch: search CaMeL Chars [ j ] = i ; }
rank: 174
score: 98.71179962158203
patch: continue ; } else { } }
rank: 174
score: 98.61275482177734
patch: continue 0 ; break 0 ; }
rank: 174
score: 98.48697662353516
patch: out . arraycopy ( continue ) ;
rank: 174
score: 98.4166259765625
patch: continue ; if ; if ; continue ;
rank: 175
score: 98.95283203125
patch: return INDEX _ NOT _ FOUND ; } else { return i ; }
rank: 175
score: 98.77540283203125
patch: res = search CaMeL Chars [ j ] ;
rank: 175
score: 98.73467462713069
patch: return INDEX _ NOT _ FOUND + i ; }
rank: 175
score: 98.71143934461806
patch: continue ; } else ; if continue ;
rank: 175
score: 98.61126708984375
patch: break false ; break true ; }
rank: 175
score: 98.48690456814236
patch: continue ; / * * continue ; /
rank: 176
score: 98.95118126502403
patch: return cs . char CaMeL At ( j - 1 ) ;
rank: 176
score: 98.93765462239584
patch: return index CaMeL Of CaMeL Any CaMeL But ( search CaMeL Len ) ;
rank: 176
score: 98.9370361328125
patch: continue ; } } return cs . char CaMeL At ( j ) ;
rank: 176
score: 98.77456665039062
patch: tmp = search CaMeL Chars [ j ] ;
rank: 176
score: 98.73441772460937
patch: return new int [ search CaMeL Len ] ;
rank: 176
score: 98.71025848388672
patch: return value ; } } continue ;
rank: 176
score: 98.61118570963542
patch: break search CaMeL Chars [ j ] ;
rank: 176
score: 98.48316955566406
patch: continue ; / / ; continue ;
rank: 176
score: 98.414306640625
patch: / if continue ; continue ; break ;
rank: 177
score: 98.93744303385417
patch: continue index CaMeL Of CaMeL Any CaMeL But ( cs , i ) ;
rank: 177
score: 98.93656099759616
patch: if ( INDEX _ NOT _ FOUND ) { continue ; }
rank: 177
score: 98.77392578125
patch: += search CaMeL Chars [ j ] ; }
rank: 177
score: 98.73426513671875
patch: INDEX _ NOT _ FOUND = j ; }
rank: 177
score: 98.48271179199219
patch: continue continue ; } while continue ;
rank: 178
score: 98.95066481370192
patch: search CaMeL Chars [ cs CaMeL Len ++ ] = ch ;
rank: 178
score: 98.77385796440973
patch: += INDEX _ NOT _ FOUND ; }
rank: 178
score: 98.73645782470703
patch: continue ; } ; } * /
rank: 178
score: 98.7339200106534
patch: search CaMeL Len ++ ; } } return i ;
rank: 178
score: 98.71011352539062
patch: continue [ 1 ] ; } }
rank: 178
score: 98.48168182373047
patch: return continue ; } for continue ;
rank: 178
score: 98.41266547309027
patch: continue ; continue ; * if continue ;
rank: 179
score: 98.9503173828125
patch: if ( search CaMeL Chars [ j ] == ch ) {
rank: 179
score: 98.93548583984375
patch: cs . index CaMeL Of CaMeL Any CaMeL But ( ch ) ; continue ;
rank: 179
score: 98.93421349158653
patch: search CaMeL Len += search CaMeL Chars [ j ] ; }
rank: 179
score: 98.77315266927083
patch: o = cs . char CaMeL At ( i ) ;
rank: 179
score: 98.7364501953125
patch: continue ; } } while ;
rank: 179
score: 98.73359375
patch: cs CaMeL Len ++ ; } return i ;
rank: 179
score: 98.70958709716797
patch: continue ; } else return ; ;
rank: 179
score: 98.6095199584961
patch: return - 1 ; } break ;
rank: 179
score: 98.48120880126953
patch: j * continue ; if continue ;
rank: 179
score: 98.41197967529297
patch: continue ; continue ; } false ;
rank: 180
score: 98.9482891376202
patch: return cs . char CaMeL At ( j ] ) ; }
rank: 180
score: 98.93525834517045
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 180
score: 98.77269287109375
patch: result += INDEX _ NOT _ FOUND ; }
rank: 180
score: 98.73358154296875
patch: p = search CaMeL Chars [ j ] ;
rank: 180
score: 98.70824517144098
patch: continue ; } } if ; break ;
rank: 180
score: 98.60865783691406
patch: continue true ; continue false ; }
rank: 180
score: 98.47966766357422
patch: char continue ; ; if continue ;
rank: 180
score: 98.41172960069444
patch: continue ; continue ; } = continue ;
rank: 181
score: 98.94740513392857
patch: search CaMeL Chars [ cs CaMeL Len ] = search CaMeL Len ;
rank: 181
score: 98.7724100748698
patch: result = cs . char CaMeL At ( i ) ;
rank: 181
score: 98.73291015625
patch: continue } return INDEX _ NOT _ FOUND ;
rank: 181
score: 98.7069320678711
patch: continue ; } } return 1 ;
rank: 181
score: 98.47911241319444
patch: continue - 0 ; if continue 1 ;
rank: 181
score: 98.41019439697266
patch: continue ; ; * if continue ;
rank: 182
score: 98.93444061279297
patch: continue search CaMeL Chars [ j ] . char CaMeL At ( j ) ;
rank: 182
score: 98.93346228966347
patch: continue ; } search CaMeL Chars [ j ] = ch ;
rank: 182
score: 98.77180989583333
patch: qname = cs . char CaMeL At ( j ) ;
rank: 182
score: 98.70682525634766
patch: break ; } ; } continue ;
rank: 182
score: 98.608154296875
patch: continue ] ; }
rank: 182
score: 98.47910853794643
patch: continue - 1 ; break ;
rank: 182
score: 98.4100341796875
patch: continue ; ; if ; break ;
rank: 183
score: 98.93404134114583
patch: break index CaMeL Of CaMeL Any CaMeL But ( cs , ch ) ;
rank: 183
score: 98.93317205255681
patch: return cs . search CaMeL Chars [ j ] ;
rank: 183
score: 98.7309903231534
patch: cs CaMeL Len ++ ; } } return i ;
rank: 183
score: 98.7060546875
patch: continue += 1 ; } continue ;
rank: 183
score: 98.60512288411458
patch: continue ; case $STRING$ : continue ; }
rank: 183
score: 98.47903442382812
patch: iter . next ( ; continue ;
rank: 183
score: 98.40981716579861
patch: outer ; continue ; if ; break ;
rank: 184
score: 98.94515286959134
patch: return true ; } } return INDEX _ NOT _ FOUND ;
rank: 184
score: 98.933642578125
patch: return in . index CaMeL Of CaMeL Any CaMeL But ( cs ) ;
rank: 184
score: 98.93299153645833
patch: search CaMeL Chars . char CaMeL At ( j ) ; return i ;
rank: 184
score: 98.7706768329327
patch: field = cs . char CaMeL At ( j ) ; }
rank: 184
score: 98.7303799715909
patch: result = search CaMeL Chars [ j ] ; }
rank: 184
score: 98.728076171875
patch: search CaMeL Len ++ ; break ; } ;
rank: 184
score: 98.70528411865234
patch: break ; } } ; continue ;
rank: 184
score: 98.60440402560764
patch: continue ; } default : break ; }
rank: 184
score: 98.47886827256944
patch: assert continue ; continue ; if continue ;
rank: 184
score: 98.40947808159723
patch: continue ; ; if ; continue ; }
rank: 185
score: 98.93326822916667
patch: continue : INDEX _ NOT _ FOUND ;
rank: 185
score: 98.76986355251736
patch: switch ( search CaMeL Chars . length )
rank: 185
score: 98.72998046875
patch: cfw . index CaMeL Of ( ch ) ;
rank: 185
score: 98.7049331665039
patch: continue ; } continue ; } }
rank: 185
score: 98.478759765625
patch: continue ; * ; } continue ;
rank: 185
score: 98.40826416015625
patch: continue ; continue ; ; * ;
rank: 186
score: 98.94427083333333
patch: search CaMeL Len = search CaMeL Chars . length ; } return i ;
rank: 186
score: 98.93181903545673
patch: search CaMeL Len ( search CaMeL Chars [ j ] ) ;
rank: 186
score: 98.76976521809895
patch: switch ( cs . char CaMeL At ( j ) )
rank: 186
score: 98.72989327566964
patch: search CaMeL Len = j ;
rank: 186
score: 98.7048110961914
patch: } else { return 1 ; }
rank: 186
score: 98.6024169921875
patch: continue - 1 ; ; }
rank: 186
score: 98.47855631510417
patch: i * continue ; } if continue ;
rank: 186
score: 98.40729522705078
patch: if continue ; ; if continue ;
rank: 187
score: 98.7692159016927
patch: node = cs . char CaMeL At ( i ) ;
rank: 187
score: 98.72971801757812
patch: INDEX _ NOT _ FOUND = 1 ; }
rank: 187
score: 98.7266845703125
patch: continue continue ; } else { continue ; }
rank: 187
score: 98.70313262939453
patch: } else { break ; } }
rank: 187
score: 98.60232883029514
patch: completed = true ; break ; } }
rank: 187
score: 98.47766985212054
patch: continue ; if continue ; ;
rank: 187
score: 98.40664672851562
patch: break ;
rank: 188
score: 98.9427490234375
patch: return index CaMeL Of CaMeL Any CaMeL But ( i ) ;
rank: 188
score: 98.93142903645834
patch: continue cs . index CaMeL Of CaMeL Any CaMeL But ( cs ) ;
rank: 188
score: 98.93081665039062
patch: return ( cs . char CaMeL At ( j ) ;
rank: 188
score: 98.76915564903847
patch: table = cs . char CaMeL At ( j ) ; }
rank: 188
score: 98.72965864701705
patch: return INDEX _ NOT _ FOUND + j ; }
rank: 188
score: 98.70192464192708
patch: continue ; } else ; continue ; }
rank: 188
score: 98.60126495361328
patch: continue true ; } continue ; }
rank: 188
score: 98.40659586588542
patch: outer ; continue ; } if continue ;
rank: 189
score: 98.94161783854166
patch: return cs . index CaMeL Of ( cs , search CaMeL Chars ) ;
rank: 189
score: 98.92962239583333
patch: continue search CaMeL Chars [ j ] . is CaMeL Empty ( ) ;
rank: 189
score: 98.76903279622395
patch: font = cs . char CaMeL At ( j ) ;
rank: 189
score: 98.72952270507812
patch: search CaMeL Len = j + 0 ; }
rank: 189
score: 98.726171875
patch: continue ; } if ( ch == $STRING$ ;
rank: 189
score: 98.70074462890625
patch: return 1 ; } else if ;
rank: 189
score: 98.47744750976562
patch: continue ; * / { continue ;
rank: 189
score: 98.40579223632812
patch: continue ; else continue ;
rank: 190
score: 98.9413592998798
patch: if ( search CaMeL Chars . char CaMeL At ( j )
rank: 190
score: 98.9290771484375
patch: search CaMeL Len return search CaMeL Chars [ j ] ;
rank: 190
score: 98.92884318033855
patch: continue cs . char CaMeL At ( j ) ; }
rank: 190
score: 98.76708984375
patch: res += INDEX _ NOT _ FOUND ; }
rank: 190
score: 98.72947862413194
patch: return 0 ; } return i ; }
rank: 190
score: 98.70038604736328
patch: continue ; } while ( continue ;
rank: 190
score: 98.60078430175781
patch: continue [ i ] ; } }
rank: 190
score: 98.47669135199652
patch: return continue ; } continue ; continue ;
rank: 190
score: 98.40492757161458
patch: continue ; continue ; while ; break ;
rank: 191
score: 98.94105631510416
patch: search CaMeL Len = INDEX _ NOT _ FOUND ; return 0 ; }
rank: 191
score: 98.92873313210227
patch: return search CaMeL Chars [ j ] . length ;
rank: 191
score: 98.76706949869792
patch: var = cs . char CaMeL At ( j ) ;
rank: 191
score: 98.7281494140625
patch: return INDEX _ NOT _ FOUND ; } System .
rank: 191
score: 98.69907633463542
patch: return $NUMBER$ ; } } } continue ;
rank: 191
score: 98.47648620605469
patch: continue ; * else if continue ;
rank: 191
score: 98.40393829345703
patch: continue ; continue ; else continue ;
rank: 192
score: 98.94089762369792
patch: return new char [ INDEX _ NOT _ FOUND ] ;
rank: 192
score: 98.92800903320312
patch: d = cs . char CaMeL At ( j ) ;
rank: 192
score: 98.7667987530048
patch: [ search CaMeL Len ] = INDEX _ NOT _ FOUND ;
rank: 192
score: 98.72341579861111
patch: continue ; } if ; break ; }
rank: 192
score: 98.69879913330078
patch: this . continue ; } continue ;
rank: 192
score: 98.476123046875
patch: value = continue ;
rank: 193
score: 98.9404052734375
patch: x = search CaMeL Chars . char CaMeL At ( j ) ; }
rank: 193
score: 98.92757161458333
patch: cs CaMeL Len += search CaMeL Chars [ j ] ;
rank: 193
score: 98.76670328776042
patch: += cs . char CaMeL At ( j ) ; }
rank: 193
score: 98.72665405273438
patch: } return INDEX _ NOT _ FOUND ; }
rank: 193
score: 98.72030029296874
patch: continue ; } if ( Character . ; }
rank: 193
score: 98.47598702566964
patch: continue ; } ++ continue ;
rank: 193
score: 98.40066528320312
patch: continue ; continue ; } if ;
rank: 194
score: 98.94039212740384
patch: search CaMeL Chars [ j ] = search CaMeL Chars [ j
rank: 194
score: 98.92764485677084
patch: index CaMeL Of CaMeL Any CaMeL But ( cs , ch ) ; }
rank: 194
score: 98.92754657451923
patch: break ( cs . char CaMeL At ( j ) ) ;
rank: 194
score: 98.76666259765625
patch: ps . return INDEX _ NOT _ FOUND ; } }
rank: 194
score: 98.725732421875
patch: search CaMeL Len = j ; return i ;
rank: 194
score: 98.72014024522569
patch: return ; } } else { continue ;
rank: 194
score: 98.47589111328125
patch: } * * / return continue ;
rank: 194
score: 98.40046522352431
patch: continue ; if continue ; break ; }
rank: 195
score: 98.9402099609375
patch: return INDEX _ NOT _ FOUND ; } } return search CaMeL Chars ;
rank: 195
score: 98.927490234375
patch: return ( cs . char CaMeL At ( i ) ) ;
rank: 195
score: 98.927392578125
patch: continue index CaMeL Of CaMeL Any CaMeL But ( i , ch ) ;
rank: 195
score: 98.76632080078124
patch: end = INDEX _ NOT _ FOUND ; }
rank: 195
score: 98.72470092773438
patch: return to CaMeL String ( ch ) ; }
rank: 195
score: 98.72012939453126
patch: search CaMeL Len ++ ; continue ; } ;
rank: 195
score: 98.69692993164062
patch: return 1 ; continue ; } }
rank: 195
score: 98.59937286376953
patch: idx ++ ; break ; } }
rank: 195
score: 98.47584533691406
patch: return continue ; } continue ; int
rank: 195
score: 98.40022786458333
patch: continue ; continue ; } { continue ;
rank: 196
score: 98.93926595052083
patch: return search CaMeL Chars . char CaMeL At ( i + 1 ) ;
rank: 196
score: 98.92655436197917
patch: throw ( String ) search CaMeL Chars [ j ] ;
rank: 196
score: 98.76527756911058
patch: v = cs . char CaMeL At ( i ) ; }
rank: 196
score: 98.72369995117188
patch: continue ; } i = search CaMeL Len ;
rank: 196
score: 98.6965560913086
patch: return max ; } } continue ;
rank: 196
score: 98.59899139404297
patch: continue false ; } continue false ;
rank: 196
score: 98.40020751953125
patch: continue ; continue ; if 1 ;
rank: 197
score: 98.92555930397727
patch: search CaMeL Chars [ j ] = ch ) ;
rank: 197
score: 98.92304144965277
patch: continue - INDEX _ NOT _ FOUND ;
rank: 197
score: 98.7645263671875
patch: s = cs . char CaMeL At ( i ) ;
rank: 197
score: 98.7225570678711
patch: cs [ i ] = ch ;
rank: 197
score: 98.69592963324652
patch: continue ; } continue ; continue ; }
rank: 197
score: 98.47527313232422
patch: table . add ( continue ) ;
rank: 197
score: 98.39968872070312
patch: continue ; continue ; return 1 ;
rank: 198
score: 98.92513020833333
patch: l = cs . char CaMeL At ( j ) ;
rank: 198
score: 98.92194073016827
patch: return search CaMeL Len + search CaMeL Chars [ j ] ;
rank: 198
score: 98.76441446940105
patch: argument = cs . char CaMeL At ( j ) ;
rank: 198
score: 98.72236772017045
patch: return index CaMeL Of CaMeL Any ( cs ) ;
rank: 198
score: 98.71930609809027
patch: search CaMeL Len ; break ; } }
rank: 198
score: 98.69452582465277
patch: break ; } } } return continue ;
rank: 198
score: 98.59603881835938
patch: ctr ++ ; break ; } }
rank: 198
score: 98.47502983940973
patch: continue - 1 ; } if continue ;
rank: 198
score: 98.39869689941406
patch: if ; continue ; break ; ;
rank: 199
score: 98.93728201729911
patch: return INDEX _ NOT _ FOUND ; } } } return i ;
rank: 199
score: 98.92143249511719
patch: sb . append ( cs . char CaMeL At ( j ) ) ; }
rank: 199
score: 98.7214111328125
patch: ) { return INDEX _ NOT _ FOUND ;
rank: 199
score: 98.69169786241319
patch: break ; } continue ; } continue ;
rank: 199
score: 98.59575737847223
patch: continue ( i + 1 ) ; }
rank: 199
score: 98.47501627604167
patch: return continue ; } else if continue ;
rank: 200
score: 98.93646709735577
patch: return index CaMeL Of CaMeL Any CaMeL But ( ) ; }
rank: 200
score: 98.92066955566406
patch: return out . index CaMeL Of CaMeL Any CaMeL But ( ch ) ; }
rank: 200
score: 98.76414905894886
patch: true { return INDEX _ NOT _ FOUND ; }
rank: 200
score: 98.72001953125
patch: cs CaMeL Len = j ; return i ;
rank: 200
score: 98.71567111545139
patch: continue ; } if ( ; continue ;
rank: 200
score: 98.6907958984375
patch: * * * * / continue ; }
rank: 200
score: 98.593994140625
patch: success = false ; break ; } }
rank: 200
score: 98.4741439819336
patch: return - 1 ; if continue ;
rank: 200
score: 98.39856828962054
patch: } if continue ; continue ;
rank: 201
score: 98.93631417410714
patch: search CaMeL Len = search CaMeL Chars . length ( ) ; }
rank: 201
score: 98.76315542367789
patch: z = cs . char CaMeL At ( j ) ; }
rank: 201
score: 98.71971299913194
patch: continue ; } else { return i ;
rank: 201
score: 98.71483612060547
patch: continue ; - 1 ; } }
rank: 201
score: 98.69064767020089
patch: continue [ 0 ] ; }
rank: 201
score: 98.5929183959961
patch: continue 0 ; } continue 1 ;
rank: 201
score: 98.47396414620536
patch: return continue - 0 ; ;
rank: 201
score: 98.39730495876736
patch: continue ; } ; continue ; break ;
rank: 202
score: 98.93602701822917
patch: return search CaMeL Chars . char CaMeL At ( j + 0 ) ;
rank: 202
score: 98.91951751708984
patch: search CaMeL Chars [ j ] = search CaMeL Chars [ j ] ; }
rank: 202
score: 98.7626201923077
patch: return INDEX _ NOT _ FOUND ; } } return 1 ;
rank: 202
score: 98.71944173177083
patch: return cs CaMeL Len ;
rank: 202
score: 98.69021606445312
patch: } else { if continue ; }
rank: 202
score: 98.59291585286458
patch: if ( continue ) break ; } }
rank: 202
score: 98.39727105034723
patch: if ( continue ; continue ; break ;
rank: 203
score: 98.92340959821429
patch: name = cs . char CaMeL At ( j ) ; continue ;
rank: 203
score: 98.76244178185097
patch: char ch = cs . char CaMeL At ( j ) ;
rank: 203
score: 98.71930541992188
patch: b = search CaMeL Chars [ j ] ;
rank: 203
score: 98.71345350477431
patch: continue ; ; } else { continue ;
rank: 203
score: 98.68982696533203
patch: continue ; } else return ; }
rank: 203
score: 98.59171549479167
patch: continue ; } if ( ; break ;
rank: 203
score: 98.47383880615234
patch: ++ continue ; } if continue ;
rank: 204
score: 98.93551199776786
patch: search CaMeL Chars [ j ] = cs . char CaMeL At (
rank: 204
score: 98.76238335503473
patch: ! search CaMeL Chars [ j ] ;
rank: 204
score: 98.71234809027777
patch: continue continue ; } if ( ; }
rank: 204
score: 98.68974473741319
patch: continue [ 1 ] ; } continue ;
rank: 204
score: 98.59077453613281
patch: priority ++ ; break ; } }
rank: 204
score: 98.47360665457589
patch: return continue - 1 ; ;
rank: 204
score: 98.39627838134766
patch: continue ; continue ; ; / /
rank: 205
score: 98.93531290690105
patch: result = INDEX _ NOT _ FOUND ; return 0 ;
rank: 205
score: 98.91843872070312
patch: } return search CaMeL Chars [ j ] ;
rank: 205
score: 98.76227276141827
patch: addr = cs . char CaMeL At ( i ) ; }
rank: 205
score: 98.71739196777344
patch: return cs CaMeL Len ; } }
rank: 205
score: 98.71222601996527
patch: continue ; break ; } break ; }
rank: 205
score: 98.68962751116071
patch: break ; } } return ;
rank: 205
score: 98.58992004394531
patch: ret ++ ; break ; } }
rank: 205
score: 98.47334289550781
patch: sb . next ( ; continue ;
rank: 205
score: 98.39583333333333
patch: continue ; continue ; } for continue ;
rank: 206
score: 98.93468424479167
patch: result = search CaMeL Chars . char CaMeL At ( j ) ; }
rank: 206
score: 98.9217196377841
patch: search CaMeL Chars [ j ] == ch ; }
rank: 206
score: 98.91807556152344
patch: if ( search CaMeL Len >= search CaMeL Chars . length ) { continue ;
rank: 206
score: 98.76219685872395
patch: obj = cs . char CaMeL At ( i ) ;
rank: 206
score: 98.7160400390625
patch: search CaMeL Len ++ ; } return i ;
rank: 206
score: 98.71206665039062
patch: continue ; count -- ; } }
rank: 206
score: 98.6885986328125
patch: return 1 ; } } ; continue ;
rank: 206
score: 98.5896224975586
patch: changed = false ; break ; }
rank: 206
score: 98.47311401367188
patch: finally { continue ; }
rank: 206
score: 98.39544677734375
patch: continue ; continue ; } ; ;
rank: 207
score: 98.93426513671875
patch: cs . char CaMeL At ( j + 1 ) ;
rank: 207
score: 98.92072405133929
patch: ch = cs . char CaMeL At ( j ) ; } }
rank: 207
score: 98.91761610243056
patch: continue | INDEX _ NOT _ FOUND ;
rank: 207
score: 98.71597900390626
patch: continue cs CaMeL Len ; } return i ;
rank: 207
score: 98.7116928100586
patch: ++ count ; break ; } }
rank: 207
score: 98.68797471788194
patch: break ; } finally { continue ; }
rank: 207
score: 98.47243826729911
patch: result = continue ; break ;
rank: 207
score: 98.39531792534723
patch: continue ; } ; ; if continue ;
rank: 208
score: 98.9339111328125
patch: search CaMeL Len = search CaMeL Chars . length ; return i ; }
rank: 208
score: 98.91947115384616
patch: append ( cs . char CaMeL At ( j ) ) ;
rank: 208
score: 98.91719055175781
patch: continue cs . index CaMeL Of CaMeL Any CaMeL But ( ch ) ; }
rank: 208
score: 98.76070149739583
patch: b = INDEX _ NOT _ FOUND ;
rank: 208
score: 98.71572043678977
patch: return get CaMeL Length ( cs CaMeL Len ) ;
rank: 208
score: 98.7115966796875
patch: continue ; } if ( ch == ; }
rank: 208
score: 98.47184753417969
patch: continue ; * / / continue ;
rank: 208
score: 98.39472113715277
patch: continue ; continue ; ; / break ;
rank: 209
score: 98.93280029296875
patch: search CaMeL Chars [ j ] = search CaMeL Chars [
rank: 209
score: 98.91863544170673
patch: cs . char CaMeL At ( j ) ; continue ; }
rank: 209
score: 98.9168701171875
patch: return i . index CaMeL Of CaMeL Any CaMeL But ( ch ) ; }
rank: 209
score: 98.75977579752605
patch: object = cs . char CaMeL At ( j ) ;
rank: 209
score: 98.71118842230902
patch: continue ; default : break ; ; }
rank: 209
score: 98.68497721354167
patch: break ; } } } if continue ;
rank: 209
score: 98.58817291259766
patch: continue ; break ; } break ;
rank: 209
score: 98.4716796875
patch: continue ; } continue ; * /
rank: 209
score: 98.39325629340277
patch: continue ; break ; } if continue ;
rank: 210
score: 98.93161245492789
patch: search CaMeL Chars [ cs CaMeL Len ] = ch ; }
rank: 210
score: 98.91845703125
patch: search CaMeL Chars . char CaMeL At ( j ) ; } break ;
rank: 210
score: 98.9162841796875
patch: continue search CaMeL Chars [ j ] . to CaMeL Object ( ) ;
rank: 210
score: 98.759619140625
patch: return INDEX _ NOT _ FOUND ; } else
rank: 210
score: 98.71417791193181
patch: search CaMeL Chars [ j ] = null ; }
rank: 210
score: 98.71099853515625
patch: continue ; } ; ; }
rank: 210
score: 98.58797200520833
patch: ret = 0 ; break ; } }
rank: 210
score: 98.47152709960938
patch: continue ; / ; } continue ;
rank: 210
score: 98.39181179470486
patch: continue ; else ; if ; continue ;
rank: 211
score: 98.92931315104167
patch: search CaMeL Len = cs . char CaMeL At ( i ) ; }
rank: 211
score: 98.91817626953124
patch: return ( search CaMeL Chars [ j ] ;
rank: 211
score: 98.91495768229167
patch: return search CaMeL Chars [ i ] . to CaMeL String ( ) ;
rank: 211
score: 98.71389770507812
patch: continue ; } return 0 ; }
rank: 211
score: 98.71080017089844
patch: continue ; } } continue ; ;
rank: 211
score: 98.68489837646484
patch: return 1 ; } else continue ;
rank: 211
score: 98.58722601996527
patch: break ; } else { break ; }
rank: 211
score: 98.47087860107422
patch: return - 1 ; while continue ;
rank: 211
score: 98.39065890842014
patch: continue ; ; / ; if continue ;
rank: 212
score: 98.9277852376302
patch: return search CaMeL Chars . get ( j ) ; }
rank: 212
score: 98.91624755859375
patch: search CaMeL Chars [ j ] = $NUMBER$ ;
rank: 212
score: 98.913525390625
patch: return search CaMeL Chars [ j ] * search CaMeL Chars . length ;
rank: 212
score: 98.75918344350961
patch: tmp = INDEX _ NOT _ FOUND ; break ; } }
rank: 212
score: 98.71337890625
patch: return 0 ; } j ++ ; }
rank: 212
score: 98.47075544084821
patch: end new continue ; break ;
rank: 212
score: 98.38975694444444
patch: continue ; } continue ; break ; }
rank: 213
score: 98.9277010830966
patch: search CaMeL Len = INDEX _ NOT _ FOUND ;
rank: 213
score: 98.9155742938702
patch: str = cs . char CaMeL At ( j ) ; }
rank: 213
score: 98.91168975830078
patch: if ( search CaMeL Len < search CaMeL Chars . length ) { continue ;
rank: 213
score: 98.75853553185097
patch: search CaMeL Len = search CaMeL Chars . length - j ;
rank: 213
score: 98.71311257102273
patch: ch = ! search CaMeL Chars [ j ] ;
rank: 213
score: 98.70985412597656
patch: continue ; } else { ; }
rank: 213
score: 98.58651733398438
patch: return - 1 ; break ; }
rank: 213
score: 98.47066824776786
patch: } continue ; if continue ;
rank: 213
score: 98.38918728298611
patch: continue ; ; -- continue ; break ;
rank: 214
score: 98.9155742938702
patch: break ; } } } return search CaMeL Chars . length ;
rank: 214
score: 98.71234130859375
patch: continue i ; } } return i ;
rank: 214
score: 98.70873413085937
patch: continue ; } if ( search CaMeL Chars ;
rank: 214
score: 98.68183898925781
patch: break ; ; } } continue ;
rank: 214
score: 98.5864486694336
patch: break 1 ; } break 1 ;
rank: 214
score: 98.46961212158203
patch: continue continue ; } continue ; ;
rank: 214
score: 98.38872419084821
patch: continue ; continue ; System ;
rank: 215
score: 98.91490827287946
patch: INDEX _ NOT _ FOUND = INDEX _ NOT _ FOUND ; }
rank: 215
score: 98.75796508789062
patch: += cs . char CaMeL At ( i ) ; }
rank: 215
score: 98.7122802734375
patch: return search CaMeL Len ; } return i ;
rank: 215
score: 98.70829772949219
patch: found ++ ; continue ; } }
rank: 215
score: 98.68157958984375
patch: continue ; } else ( continue ;
rank: 215
score: 98.5861587524414
patch: break true ; } break ; }
rank: 215
score: 98.46952311197917
patch: continue ; / / * for continue ;
rank: 215
score: 98.38871256510417
patch: continue ; ; if ; continue ; ;
rank: 216
score: 98.9147237141927
patch: method = cs . char CaMeL At ( j ) ;
rank: 216
score: 98.90966033935547
patch: continue INDEX _ NOT _ FOUND + cs . char CaMeL At ( j )
rank: 216
score: 98.7578125
patch: temp = cs . char CaMeL At ( j ) ;
rank: 216
score: 98.7107177734375
patch: return 0 ; } return i . length ;
rank: 216
score: 98.68035210503473
patch: continue ; } else { return continue ;
rank: 216
score: 98.58577728271484
patch: continue 0 ; break 1 ; }
rank: 216
score: 98.46930694580078
patch: continue ; / * ] continue ;
rank: 216
score: 98.38704136439732
patch: continue ; ; if ; ;
rank: 217
score: 98.92353959517045
patch: search CaMeL Chars [ j ] ( ch ) ;
rank: 217
score: 98.913818359375
patch: name = search CaMeL Chars [ j ] ;
rank: 217
score: 98.90951538085938
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( search CaMeL Chars [
rank: 217
score: 98.75743689903847
patch: break INDEX _ NOT _ FOUND ; } } return i ;
rank: 217
score: 98.71019287109375
patch: continue ; } cs CaMeL Len = i ;
rank: 217
score: 98.70643615722656
patch: continue ; * / continue ; }
rank: 217
score: 98.68004014756944
patch: return 0 ; } else { continue ;
rank: 217
score: 98.46609933035714
patch: continue continue ; } break ;
rank: 217
score: 98.38603210449219
patch: continue ; continue ; ; continue ;
rank: 218
score: 98.9126688639323
patch: cs . char CaMeL At ( j ] ) ; }
rank: 218
score: 98.90757751464844
patch: return super . index CaMeL Of CaMeL Any CaMeL But ( cs ) ; }
rank: 218
score: 98.7565166766827
patch: result = cs . char CaMeL At ( i ) ; }
rank: 218
score: 98.71015082465277
patch: return return INDEX _ NOT _ FOUND ;
rank: 218
score: 98.70602756076389
patch: continue ; } ; } continue ; }
rank: 218
score: 98.67906188964844
patch: continue ; } return ++ continue ;
rank: 218
score: 98.58366394042969
patch: continue ; break - 1 ; }
rank: 218
score: 98.46479797363281
patch: continue ; / else ; break ;
rank: 218
score: 98.38527425130208
patch: continue ; continue ; break ; continue ;
rank: 219
score: 98.91266479492188
patch: val = search CaMeL Chars [ j ] ;
rank: 219
score: 98.90641276041667
patch: return search CaMeL Chars [ j ] . get CaMeL Name ( ) ;
rank: 219
score: 98.75489298502605
patch: column = cs . char CaMeL At ( j ) ;
rank: 219
score: 98.70884874131944
patch: cs CaMeL Len ++ ; return i ;
rank: 219
score: 98.70479736328124
patch: continue ; } else { continue ; ; }
rank: 219
score: 98.67862701416016
patch: return continue ; } } if ;
rank: 219
score: 98.5831298828125
patch: continue true ; break true ; } }
rank: 219
score: 98.46478271484375
patch: continue ; / ] if continue ;
rank: 219
score: 98.38481309678819
patch: } if continue ; continue ; break ;
rank: 220
score: 98.92324594350961
patch: return INDEX _ NOT _ FOUND ; } } return $STRING$ ;
rank: 220
score: 98.90635681152344
patch: continue index CaMeL Of CaMeL Any CaMeL But ( ch , search CaMeL Chars [
rank: 220
score: 98.75473022460938
patch: bytes = cs . char CaMeL At ( j ) ;
rank: 220
score: 98.70834350585938
patch: return new int [ 1 ] ;
rank: 220
score: 98.70381927490234
patch: continue continue ; } if ( ;
rank: 220
score: 98.67831420898438
patch: continue ; } catch ; ; }
rank: 220
score: 98.58258056640625
patch: break - 1 ; } continue ;
rank: 220
score: 98.46434868706598
patch: return continue ; ; ; if continue ;
rank: 220
score: 98.38435872395833
patch: continue ; continue ; while ; continue ;
rank: 221
score: 98.9114013671875
patch: pos = search CaMeL Chars [ j ] ;
rank: 221
score: 98.9058837890625
patch: continue index CaMeL Of CaMeL Any CaMeL But ( ( char ) ch ) ;
rank: 221
score: 98.754638671875
patch: key = cs . char CaMeL At ( i ) ;
rank: 221
score: 98.70816650390626
patch: continue ; } search CaMeL Len = i ;
rank: 221
score: 98.67768096923828
patch: break ; } } return 0 ;
rank: 221
score: 98.58249918619792
patch: buffer . append ( ch ) ; }
rank: 221
score: 98.46394348144531
patch: continue ; ; ; return continue ;
rank: 221
score: 98.38432481553819
patch: continue ; continue ; } if ; ;
rank: 222
score: 98.92099609375
patch: search CaMeL Chars [ j ] = search CaMeL Chars [ j ) ;
rank: 222
score: 98.70744018554687
patch: continue INDEX _ NOT _ FOUND ; ; }
rank: 222
score: 98.67665318080357
patch: throw continue ; } continue ;
rank: 222
score: 98.463623046875
patch: continue ; / continue ; if continue ;
rank: 222
score: 98.38285997178819
patch: continue ; ; if ; if continue ;
rank: 223
score: 98.90519205729167
patch: continue continue INDEX _ NOT _ FOUND ;
rank: 223
score: 98.754150390625
patch: found = INDEX _ NOT _ FOUND ; continue ; }
rank: 223
score: 98.70738389756944
patch: return is CaMeL Empty ( ch ) ;
rank: 223
score: 98.70170593261719
patch: continue ; } } while ( ;
rank: 223
score: 98.67639923095703
patch: throw null ; } catch continue ;
rank: 223
score: 98.58146667480469
patch: return 1 ; } break ; }
rank: 223
score: 98.46320258246527
patch: logger . append ( $STRING$ ; continue ;
rank: 223
score: 98.38279724121094
patch: continue ; ; ; if ; ;
rank: 224
score: 98.91040910993304
patch: ch = cs . char CaMeL At ( j ) ; continue ;
rank: 224
score: 98.90380096435547
patch: return cs . index CaMeL Of CaMeL Any CaMeL But ( i ) ; }
rank: 224
score: 98.754150390625
patch: value = cs . char CaMeL At ( j ) ;
rank: 224
score: 98.70454237196181
patch: return - INDEX _ NOT _ FOUND ;
rank: 224
score: 98.70108032226562
patch: ch = ; break ; } }
rank: 224
score: 98.6762466430664
patch: break ; } } else continue ;
rank: 224
score: 98.46296522352431
patch: out . next ( ; continue ; }
rank: 224
score: 98.38271755642361
patch: continue ; continue ; if ; false ;
rank: 225
score: 98.9190673828125
patch: search CaMeL Len = INDEX _ NOT _ FOUND ; } }
rank: 225
score: 98.90348597935268
patch: sb . add ( search CaMeL Chars [ j ] ) ; }
rank: 225
score: 98.75386555989583
patch: item = cs . char CaMeL At ( i ) ;
rank: 225
score: 98.70409545898437
patch: return index CaMeL Of ( cs ) ; }
rank: 225
score: 98.69960239955357
patch: return i - 1 ; }
rank: 225
score: 98.67622375488281
patch: return j ; } } continue ;
rank: 225
score: 98.58026801215277
patch: continue false ; break true ; } }
rank: 225
score: 98.38233778211806
patch: continue ; continue ; / / break ;
rank: 226
score: 98.9190340909091
patch: search CaMeL Chars [ j ++ ] = ch ;
rank: 226
score: 98.90167236328125
patch: continue : search CaMeL Chars [ j ] ;
rank: 226
score: 98.7537841796875
patch: item = cs . char CaMeL At ( j ) ; }
rank: 226
score: 98.6979751586914
patch: c ++ ; continue ; } }
rank: 226
score: 98.67593819754464
patch: break ; } } break ;
rank: 226
score: 98.57913208007812
patch: continue ; return - 1 ; }
rank: 226
score: 98.46235656738281
patch: j continue ; } if continue ;
rank: 226
score: 98.38218180338542
patch: continue ; ; ; ;
rank: 227
score: 98.90859985351562
patch: search CaMeL Chars [ j ] = ch ; continue ;
rank: 227
score: 98.90071411132813
patch: continue ( search CaMeL Chars [ j ] ;
rank: 227
score: 98.75304236778847
patch: node = cs . char CaMeL At ( j ) ; }
rank: 227
score: 98.70360107421875
patch: outer += search CaMeL Chars [ j ] ;
rank: 227
score: 98.69792829241071
patch: continue ; default : continue ;
rank: 227
score: 98.57832166883681
patch: continue value [ j ] ; } }
rank: 227
score: 98.4604721069336
patch: continue continue ;
rank: 227
score: 98.37965223524306
patch: continue ; ; if ; ( continue ;
rank: 228
score: 98.91836983816964
patch: cs CaMeL Len = cs . char CaMeL At ( j ) ;
rank: 228
score: 98.89955832741477
patch: continue search CaMeL Chars [ i ] = ch ;
rank: 228
score: 98.75302124023438
patch: comp = cs . char CaMeL At ( i ) ;
rank: 228
score: 98.70339965820312
patch: inst = search CaMeL Chars [ j ] ;
rank: 228
score: 98.67515733506944
patch: continue ; } else throw null ; }
rank: 228
score: 98.57831682477679
patch: continue ; i -- ; }
rank: 228
score: 98.45957946777344
patch: i * continue ; if continue ;
rank: 228
score: 98.37949625651042
patch: continue ; if continue ; break ; ;
rank: 229
score: 98.91826923076923
patch: search CaMeL Chars [ cs . char CaMeL At ( j )
rank: 229
score: 98.89822387695312
patch: result = INDEX _ NOT _ FOUND ; i ++ ;
rank: 229
score: 98.7528584798177
patch: atom = cs . char CaMeL At ( j ) ;
rank: 229
score: 98.70235443115234
patch: continue i ; } return i ;
rank: 229
score: 98.69672987196181
patch: continue ; } ++ cs CaMeL Len ;
rank: 229
score: 98.67477077907986
patch: throw new Runtime CaMeL Exception ( $STRING$ ;
rank: 229
score: 98.45921325683594
patch: continue ; / / / break ;
rank: 229
score: 98.379150390625
patch: continue ; continue ; if ; / /
rank: 230
score: 98.89785766601562
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs , cs ) ; }
rank: 230
score: 98.75223795572917
patch: ns = cs . char CaMeL At ( i ) ;
rank: 230
score: 98.70046997070312
patch: return get CaMeL Value ( j ) ; }
rank: 230
score: 98.67469024658203
patch: continue ; } this . continue ;
rank: 230
score: 98.57605658637152
patch: removed = false ; break ; } }
rank: 230
score: 98.37754821777344
patch: if ; continue ; for continue ;
rank: 231
score: 98.90592447916667
patch: ! search CaMeL Chars [ j ] . is CaMeL Empty ( ) ;
rank: 231
score: 98.89763641357422
patch: if ( search CaMeL Len == INDEX _ NOT _ FOUND ) { continue ;
rank: 231
score: 98.75201416015625
patch: field = cs . char CaMeL At ( i ) ;
rank: 231
score: 98.69577026367188
patch: search CaMeL Len ++ ; continue ; ; }
rank: 231
score: 98.67364501953125
patch: break ; } } = continue ;
rank: 231
score: 98.57508680555556
patch: continue - 1 ; } return i ;
rank: 231
score: 98.37577311197917
patch: continue ; continue ; ; -- continue ;
rank: 232
score: 98.91651407877605
patch: search CaMeL Chars [ j ] = cs CaMeL Len ;
rank: 232
score: 98.75200946514423
patch: search CaMeL Len += search CaMeL Chars . length ; } }
rank: 232
score: 98.70002885298295
patch: continue } return INDEX _ NOT _ FOUND ; }
rank: 232
score: 98.69575330946181
patch: continue ; } } if ( ; ;
rank: 232
score: 98.67239815848214
patch: break ; } if continue ;
rank: 232
score: 98.57485622829861
patch: break - 1 ; } continue ; }
rank: 232
score: 98.45718383789062
patch: continue true ; } if continue ;
rank: 232
score: 98.37570529513889
patch: continue ; continue ; if ; ; ;
rank: 233
score: 98.90493539663461
patch: n = cs . char CaMeL At ( j ) ; }
rank: 233
score: 98.8960189819336
patch: continue index CaMeL Of CaMeL Any CaMeL But ( cs , ch ) ; }
rank: 233
score: 98.7518310546875
patch: arg = cs . char CaMeL At ( i ) ;
rank: 233
score: 98.6999178799716
patch: return 0 ; } } return i . length ;
rank: 233
score: 98.67215728759766
patch: break ; } } return 1 ;
rank: 233
score: 98.57421875
patch: changed = true ; continue ; }
rank: 233
score: 98.45708465576172
patch: continue -- continue ; } continue ;
rank: 233
score: 98.37534586588542
patch: continue ; ; ; ; if continue ;
rank: 234
score: 98.90481567382812
patch: ret = cs . char CaMeL At ( j ) ;
rank: 234
score: 98.69915216619319
patch: continue cs CaMeL Len ; } } return i ;
rank: 234
score: 98.69320068359374
patch: continue ; } } System . out . ;
rank: 234
score: 98.67196219308036
patch: continue ; if continue ; }
rank: 234
score: 98.57245635986328
patch: break ; i ++ ; } }
rank: 234
score: 98.456787109375
patch: j ++ ; continue ; if continue ;
rank: 234
score: 98.37429470486111
patch: continue ; if ; ; ; break ;
rank: 235
score: 98.9148837002841
patch: return cs . char CaMeL At ( 0 ) ;
rank: 235
score: 98.904296875
patch: text = cs . char CaMeL At ( j ) ; }
rank: 235
score: 98.75096546519886
patch: table . return search CaMeL Chars [ j ] ;
rank: 235
score: 98.69855291193181
patch: continue return INDEX _ NOT _ FOUND ; } }
rank: 235
score: 98.69259304470486
patch: return i ; } } } continue ;
rank: 235
score: 98.67195892333984
patch: break ; } if ; continue ;
rank: 235
score: 98.57238006591797
patch: break ; } if ( continue )
rank: 235
score: 98.45595974392361
patch: continue continue ; } else if continue ;
rank: 235
score: 98.37396918402777
patch: continue ; continue ; / ; break ;
rank: 236
score: 98.91450639204545
patch: search CaMeL Chars [ j ] = cs ; }
rank: 236
score: 98.904296875
patch: cs . char CaMeL At ( j ) ; } return i ;
rank: 236
score: 98.89486929086539
patch: return search CaMeL Chars [ j ] + search CaMeL Len ;
rank: 236
score: 98.75072303185097
patch: Arrays . is CaMeL Empty ( search CaMeL Chars ) ) {
rank: 236
score: 98.6983642578125
patch: return Integer . INDEX _ NOT _ FOUND ;
rank: 236
score: 98.69010416666667
patch: pos ++ ; ; break ; } }
rank: 236
score: 98.67140706380208
patch: continue ; break ; } continue ; }
rank: 236
score: 98.57063802083333
patch: index CaMeL Of ; break ; } }
rank: 236
score: 98.45477973090277
patch: continue ; * continue ; if continue ;
rank: 236
score: 98.37310028076172
patch: true ; continue ; if continue ;
rank: 237
score: 98.91417846679687
patch: search CaMeL Chars [ j ] ( ) ;
rank: 237
score: 98.9041748046875
patch: cs . char CaMeL At ( j ) ; return i ;
rank: 237
score: 98.89479758522727
patch: return ch . char CaMeL At ( j ) ;
rank: 237
score: 98.75052897135417
patch: r = cs . char CaMeL At ( i ) ;
rank: 237
score: 98.69807572798295
patch: INDEX _ NOT _ FOUND = i ; } }
rank: 237
score: 98.68892822265624
patch: continue ; } ; } else { continue ;
rank: 237
score: 98.56822204589844
patch: continue ] ; break ; } }
rank: 237
score: 98.45450592041016
patch: value = continue ; for continue ;
rank: 237
score: 98.371826171875
patch: continue ; continue ; /
rank: 238
score: 98.89378255208334
patch: return index CaMeL Of CaMeL Any CaMeL But ( ch , 0 ) ;
rank: 238
score: 98.75033804086539
patch: return INDEX _ NOT _ FOUND ; } return i ; }
rank: 238
score: 98.69766235351562
patch: search CaMeL Len = j + 1 ; }
rank: 238
score: 98.68734741210938
patch: System . arraycopy ( ; continue ; } }
rank: 238
score: 98.66996934678819
patch: continue ; } } else = continue ;
rank: 238
score: 98.45418972439236
patch: continue * continue ++ continue - 1 ;
rank: 238
score: 98.371826171875
patch: continue ; ; ; continue ;
rank: 239
score: 98.90317208426339
patch: throw ( String ) cs . char CaMeL At ( j ) ;
rank: 239
score: 98.8934834798177
patch: buf [ j ] = INDEX _ NOT _ FOUND ;
rank: 239
score: 98.75023475060097
patch: val = cs . char CaMeL At ( j ) ; }
rank: 239
score: 98.69655539772727
patch: return INDEX _ NOT _ FOUND ; } else {
rank: 239
score: 98.68618774414062
patch: search CaMeL Len += continue ; break ; }
rank: 239
score: 98.66987440321181
patch: return 1 ; } else if continue ;
rank: 239
score: 98.45392608642578
patch: j ] = continue ; break ;
rank: 239
score: 98.37144470214844
patch: continue ; continue ; if false ;
rank: 240
score: 98.91118915264423
patch: return cs . char CaMeL At ( i + 1 ) ;
rank: 240
score: 98.75014241536458
patch: val = cs . char CaMeL At ( i ) ;
rank: 240
score: 98.69588012695313
patch: INDEX _ NOT _ FOUND ++ ; continue ;
rank: 240
score: 98.68617248535156
patch: continue ; ++ count ; } }
rank: 240
score: 98.66970825195312
patch: return $NUMBER$ ; } } else {
rank: 240
score: 98.56535508897569
patch: result = 0 ; break ; } }
rank: 240
score: 98.4532979329427
patch: while continue ; continue ;
rank: 240
score: 98.3709716796875
patch: continue ; continue ; / false ;
rank: 241
score: 98.91109466552734
patch: search CaMeL Len = 0 ; }
rank: 241
score: 98.90243094308036
patch: ch = cs . char CaMeL At ( j ) ; break ;
rank: 241
score: 98.89270782470703
patch: buf . append ( cs . char CaMeL At ( j ) ) ; }
rank: 241
score: 98.74826049804688
patch: desc = cs . char CaMeL At ( j ) ;
rank: 241
score: 98.69509887695312
patch: continue ; } return i . length ; }
rank: 241
score: 98.68535505022321
patch: continue ; } ; } }
rank: 241
score: 98.6694564819336
patch: continue ; } else ; ; }
rank: 241
score: 98.45271301269531
patch: continue ; / finally { continue ;
rank: 241
score: 98.37004089355469
patch: continue ; ; ; = continue ;
rank: 242
score: 98.9106689453125
patch: return INDEX _ NOT _ FOUND ; } else { return 0 ; }
rank: 242
score: 98.9023907001202
patch: continue ; } cs . index CaMeL Of ( ch ) ;
rank: 242
score: 98.89202880859375
patch: continue + search CaMeL Chars [ i ] ;
rank: 242
score: 98.74808078342014
patch: false + INDEX _ NOT _ FOUND ;
rank: 242
score: 98.69493865966797
patch: return cs . length ( ) ;
rank: 242
score: 98.66938018798828
patch: * * * / continue ; }
rank: 242
score: 98.56412760416667
patch: continue ; default : break true ; }
rank: 242
score: 98.45242648654514
patch: continue ; } break ; for continue ;
rank: 242
score: 98.36820983886719
patch: continue ; ; ; } continue ;
rank: 243
score: 98.90187290736607
patch: if ( search CaMeL Chars [ j ] == ch ) continue ;
rank: 243
score: 98.74779163707386
patch: res = search CaMeL Chars [ j ] ; }
rank: 243
score: 98.69452459161931
patch: return 1 ; } } return cs CaMeL Len ;
rank: 243
score: 98.683349609375
patch: return - 1 ; break ; } }
rank: 243
score: 98.6690673828125
patch: return 0 ; break ; } }
rank: 243
score: 98.36782836914062
patch: continue ; continue ; ; * /
rank: 244
score: 98.91053118024554
patch: search CaMeL Len += search CaMeL Chars [ j ] . length ;
rank: 244
score: 98.90165571732955
patch: continue ; } } } return cs . length ;
rank: 244
score: 98.89156087239583
patch: return search CaMeL Chars [ j ] + search CaMeL Chars . length ;
rank: 244
score: 98.747314453125
patch: true + INDEX _ NOT _ FOUND ; continue ; }
rank: 244
score: 98.69451032366071
patch: cs CaMeL Len = j ;
rank: 244
score: 98.68255615234375
patch: continue ; ++ i ; } }
rank: 244
score: 98.45205078125
patch: return continue ; ;
rank: 244
score: 98.36650933159723
patch: continue ; ; / if ; continue ;
rank: 245
score: 98.91033063616071
patch: return index CaMeL Of CaMeL Any CaMeL But ( i ) ; }
rank: 245
score: 98.90073649088542
patch: buffer . char CaMeL At ( j ) ; break ;
rank: 245
score: 98.88872884114583
patch: continue search CaMeL Chars [ j ] . get CaMeL Name ( ) ;
rank: 245
score: 98.74707970252403
patch: super . index CaMeL Of CaMeL Any CaMeL But ( ) ;
rank: 245
score: 98.69423828125
patch: return i ; } return cs CaMeL Len ;
rank: 245
score: 98.68169294084821
patch: continue continue - 1 ; }
rank: 245
score: 98.66845703125
patch: return 0 ; } } ;
rank: 245
score: 98.56226264105902
patch: break false ; break true ; } }
rank: 245
score: 98.45193142361111
patch: throw new Runtime CaMeL Exception ( ) ;
rank: 245
score: 98.36638726128473
patch: continue ; ; * ; / continue ;
rank: 246
score: 98.90987141927083
patch: return cs . char CaMeL At ( 0 ) ; }
rank: 246
score: 98.89873860677083
patch: search CaMeL Chars . char CaMeL At ( j ) ; break ; }
rank: 246
score: 98.7470194498698
patch: e = cs . char CaMeL At ( j ) ;
rank: 246
score: 98.69261932373047
patch: return $STRING$ ; } return i ;
rank: 246
score: 98.68089294433594
patch: break ; default : continue ; }
rank: 246
score: 98.66822814941406
patch: return 0 ; } } return ;
rank: 246
score: 98.5620346069336
patch: return j + 1 ; } }
rank: 246
score: 98.45160675048828
patch: table . append ( continue ) ;
rank: 246
score: 98.36567518446181
patch: continue ; ; if ; ? continue ;
rank: 247
score: 98.88631863064236
patch: continue return INDEX _ NOT _ FOUND ;
rank: 247
score: 98.74672241210938
patch: curr = search CaMeL Chars [ j ] ;
rank: 247
score: 98.69249131944444
patch: return $STRING$ ; } } return i ;
rank: 247
score: 98.68025207519531
patch: return count - 1 ; } }
rank: 247
score: 98.66807725694444
patch: return 1 ; } } continue ; }
rank: 247
score: 98.5611343383789
patch: return 0 ; } break ; }
rank: 247
score: 98.45146179199219
patch: continue ; / - * continue ;
rank: 247
score: 98.36558532714844
patch: outer ; continue ; if ; ;
rank: 248
score: 98.88546048677884
patch: return search CaMeL Len - search CaMeL Chars [ i ] ;
rank: 248
score: 98.7465069110577
patch: table . return INDEX _ NOT _ FOUND ; } break ;
rank: 248
score: 98.67990451388889
patch: search CaMeL Len ++ ; ; } }
rank: 248
score: 98.66720920138889
patch: return continue ; } } } continue ;
rank: 248
score: 98.5600357055664
patch: break matches [ j ] ; }
rank: 248
score: 98.45057508680556
patch: continue ; } continue ; next continue ;
rank: 248
score: 98.36515299479167
patch: continue ; continue ; = ++ continue ;
rank: 249
score: 98.9095947265625
patch: if ( Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars ,
rank: 249
score: 98.7459208170573
patch: expression = cs . char CaMeL At ( i ) ;
rank: 249
score: 98.6904629794034
patch: search CaMeL Len = j ; j ++ ; }
rank: 249
score: 98.67915852864583
patch: break ; } } ;
rank: 249
score: 98.66683197021484
patch: throw continue ; } } continue ;
rank: 249
score: 98.55950249565973
patch: continue ; } System . arraycopy ( ;
rank: 249
score: 98.44998508029514
patch: continue - 0 ; break - 1 ;
rank: 249
score: 98.36438666449652
patch: continue ; continue ; ; throw continue ;
rank: 250
score: 98.90929236778847
patch: return INDEX _ NOT _ FOUND ; } } return cs ;
rank: 250
score: 98.88321940104167
patch: continue index CaMeL Of CaMeL Any CaMeL But ( ch , i ) ;
rank: 250
score: 98.68959554036458
patch: return is CaMeL Empty ( ) ; }
rank: 250
score: 98.66651153564453
patch: return [ 1 ] ; } }
rank: 250
score: 98.55781555175781
patch: continue . length ( ) ; }
rank: 250
score: 98.36435372488839
patch: continue ; ; -- continue ;
rank: 251
score: 98.74547322591145
patch: switch ( search CaMeL Chars [ j ] ) { }
rank: 251
score: 98.6891756924716
patch: return return INDEX _ NOT _ FOUND ; } }
rank: 251
score: 98.67897542317708
patch: continue ; } } while ( continue ;
rank: 251
score: 98.66632758246527
patch: { continue ; } } } continue ;
rank: 251
score: 98.5573501586914
patch: break 1 ; continue 1 ; }
rank: 251
score: 98.44921875
patch: value = continue ; if continue ;
rank: 252
score: 98.90873209635417
patch: throw new int [ INDEX _ NOT _ FOUND ] ;
rank: 252
score: 98.74535115559895
patch: res = INDEX _ NOT _ FOUND ; continue ; }
rank: 252
score: 98.68890380859375
patch: continue ; } cs CaMeL Len = j ;
rank: 252
score: 98.66620551215277
patch: { return 1 ; } } continue ;
rank: 252
score: 98.55597686767578
patch: count ++ ; return i ; }
rank: 252
score: 98.44911702473958
patch: return continue - 0 ; if continue ;
rank: 252
score: 98.36137390136719
patch: continue ; ; = ; continue ;
rank: 253
score: 98.89459838867188
patch: replace CaMeL Chars [ j ] = ch ;
rank: 253
score: 98.8801025390625
patch: index CaMeL Of CaMeL Any CaMeL But ( ch , ch ) ; }
rank: 253
score: 98.74393717447917
patch: k = cs . char CaMeL At ( j ) ;
rank: 253
score: 98.68885387073864
patch: cs CaMeL Len = j ; return i ; }
rank: 253
score: 98.67881469726562
patch: continue ; default : break ; } } ;
rank: 253
score: 98.555908203125
patch: break false ; break false ; } }
rank: 253
score: 98.44826931423611
patch: return continue ; / else { continue ;
rank: 253
score: 98.36111450195312
patch: if ; ; continue ; break ;
rank: 254
score: 98.89388333834134
patch: if ( INDEX _ NOT _ FOUND ) { return i ;
rank: 254
score: 98.87933349609375
patch: continue && search CaMeL Chars [ j ] == ch ;
rank: 254
score: 98.74353966346153
patch: attr = cs . char CaMeL At ( j ) ; }
rank: 254
score: 98.68736436631944
patch: return case INDEX _ NOT _ FOUND ;
rank: 254
score: 98.67875453404018
patch: return continue ; } ; }
rank: 254
score: 98.66522894965277
patch: return 1 ; } } return 1 ;
rank: 254
score: 98.55562591552734
patch: continue ; } default : break ;
rank: 254
score: 98.44772677951389
patch: while continue ; continue ; } continue ;
rank: 254
score: 98.35919189453125
patch: continue ; return continue ;
rank: 255
score: 98.90719401041666
patch: search CaMeL Len = search CaMeL Chars [ j ] . length ; }
rank: 255
score: 98.89373779296875
patch: t = cs . char CaMeL At ( j ) ; continue ;
rank: 255
score: 98.7431640625
patch: char ch = cs . char CaMeL At ( i ) ;
rank: 255
score: 98.68677867542614
patch: search CaMeL Len = j ; return i ; }
rank: 255
score: 98.66483561197917
patch: continue ; } if ( continue $NUMBER$ ;
rank: 255
score: 98.5554428100586
patch: break length - 1 ; } }
rank: 255
score: 98.44651794433594
patch: continue - 0 ; } continue ;
rank: 255
score: 98.35718536376953
patch: continue ; continue ; } * ;
rank: 256
score: 98.87860514322917
patch: return index CaMeL Of CaMeL Any CaMeL But ( i , cs ) ;
rank: 256
score: 98.686767578125
patch: continue search CaMeL Chars [ i ] ;
rank: 256
score: 98.67804718017578
patch: found = true ; continue ; }
rank: 256
score: 98.66403198242188
patch: throw new Runtime CaMeL Exception continue ;
rank: 256
score: 98.55525716145833
patch: continue value [ i ] ; } }
rank: 256
score: 98.44648742675781
patch: break ; } ; if continue ;
rank: 256
score: 98.3563003540039
patch: continue ; continue ; else break ;
rank: 257
score: 98.90670776367188
patch: return cs . search CaMeL Chars [ j ] ; }
rank: 257
score: 98.89079066685268
patch: continue ; } cs . char CaMeL At ( j ) ; }
rank: 257
score: 98.87732872596153
patch: continue search CaMeL Chars [ j ] : search CaMeL Len ;
rank: 257
score: 98.74292670355902
patch: break ; } } return i ; }
rank: 257
score: 98.68657836914062
patch: return ! search CaMeL Len [ j ] ;
rank: 257
score: 98.66377766927083
patch: continue ; } else { return 1 ;
rank: 257
score: 98.55497911241319
patch: break value [ i ] ; } }
rank: 257
score: 98.4461669921875
patch: continue continue ; / else { continue ;
rank: 257
score: 98.3561019897461
patch: continue ; continue ; = 1 ;
rank: 258
score: 98.90651157924107
patch: result = index CaMeL Of CaMeL Any CaMeL But ( cs ) ;
rank: 258
score: 98.8907470703125
patch: filename = cs . char CaMeL At ( j ) ;
rank: 258
score: 98.87462506975446
patch: return index CaMeL Of CaMeL Any CaMeL But ( search CaMeL Chars [
rank: 258
score: 98.67679850260417
patch: break ; default : continue ; } }
rank: 258
score: 98.66363525390625
patch: return ; = continue ; } }
rank: 258
score: 98.55478922526042
patch: done = true ; break ; } }
rank: 258
score: 98.44576263427734
patch: result = continue ; break ; ;
rank: 258
score: 98.355712890625
patch: continue ; break ; if ; ;
rank: 259
score: 98.90638834635416
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs ) ; } }
rank: 259
score: 98.87389197716347
patch: buf [ j ] = INDEX _ NOT _ FOUND ; }
rank: 259
score: 98.68539428710938
patch: continue index CaMeL Of ( ch ) ; }
rank: 259
score: 98.55271911621094
patch: break false ; break ; } }
rank: 259
score: 98.44498019748264
patch: return continue ; / ; if continue ;
rank: 260
score: 98.87376302083334
patch: continue INDEX _ NOT _ FOUND : search CaMeL Chars [ j ] ;
rank: 260
score: 98.68529052734375
patch: return cs . length ( ) ; } }
rank: 260
score: 98.676025390625
patch: found = true ; continue ; } }
rank: 260
score: 98.66194152832031
patch: return 0 ; continue ; } }
rank: 260
score: 98.5526123046875
patch: continue true ; break false ; } }
rank: 260
score: 98.44368743896484
patch: } * * / if continue ;
rank: 260
score: 98.35131072998047
patch: continue ; if ; continue ; *
rank: 261
score: 98.88901774088542
patch: base = cs . char CaMeL At ( j ) ;
rank: 261
score: 98.74190266927083
patch: other = cs . char CaMeL At ( j ) ;
rank: 261
score: 98.68467407226562
patch: return new int [ cs CaMeL Len ] ;
rank: 261
score: 98.6759765625
patch: continue ; } if ( search CaMeL Len ;
rank: 261
score: 98.66167449951172
patch: = continue ; } } continue ;
rank: 261
score: 98.44318389892578
patch: continue ; continue ; } else {
rank: 261
score: 98.3504409790039
patch: return ( continue ; / break ;
rank: 262
score: 98.8882587139423
patch: param = cs . char CaMeL At ( j ) ; }
rank: 262
score: 98.87157331194196
patch: continue INDEX _ NOT _ FOUND : search CaMeL Chars [ j ]
rank: 262
score: 98.74136352539062
patch: ret = INDEX _ NOT _ FOUND ; continue ; }
rank: 262
score: 98.68397105823864
patch: search CaMeL Chars [ j ] = j ; }
rank: 262
score: 98.67595672607422
patch: continue ; break ; ; } }
rank: 262
score: 98.66057586669922
patch: return 1 ; } ; continue ;
rank: 262
score: 98.55220540364583
patch: continue false ; break false ; } }
rank: 262
score: 98.44306182861328
patch: count continue ; } if continue ;
rank: 262
score: 98.34976196289062
patch: outer ; continue ; for continue ;
rank: 263
score: 98.88815307617188
patch: retval = search CaMeL Chars [ j ] ;
rank: 263
score: 98.87061903211806
patch: buf [ j ] = ch ; }
rank: 263
score: 98.74120076497395
patch: z = cs . char CaMeL At ( i ) ;
rank: 263
score: 98.5497817993164
patch: break count [ i ] ; }
rank: 263
score: 98.44229125976562
patch: value = continue ; while continue ;
rank: 263
score: 98.34581756591797
patch: outer ; continue ; } break ;
rank: 264
score: 98.904541015625
patch: return cs . char CaMeL At ( j ) . length ; }
rank: 264
score: 98.88772583007812
patch: return search CaMeL Len ;
rank: 264
score: 98.87038352272727
patch: result = continue : INDEX _ NOT _ FOUND ;
rank: 264
score: 98.74078369140625
patch: block = cs . char CaMeL At ( j ) ;
rank: 264
score: 98.68324584960938
patch: INDEX _ NOT _ FOUND ++ ; } }
rank: 264
score: 98.6756103515625
patch: ++ search CaMeL Len ; continue ; } }
rank: 264
score: 98.65948486328125
patch: return 1 ; } ;
rank: 264
score: 98.54959869384766
patch: count ++ ; break true ; }
rank: 264
score: 98.44204711914062
patch: continue - 1 ; ;
rank: 264
score: 98.34512329101562
patch: return ( continue ; { continue ;
rank: 265
score: 98.90426432291666
patch: search CaMeL Chars . char CaMeL At ( j - 1 ) ; }
rank: 265
score: 98.88753051757813
patch: search CaMeL Chars [ j ] = 1 ;
rank: 265
score: 98.68232865767045
patch: continue ; } else { return cs CaMeL Len ;
rank: 265
score: 98.67418212890625
patch: search CaMeL Len ++ ; break ; ; }
rank: 265
score: 98.65806070963542
patch: break ; } } if ( continue ;
rank: 265
score: 98.34202575683594
patch: continue ; continue ; while ; {
rank: 266
score: 98.8870340983073
patch: buffer . char CaMeL At ( j ) ; } }
rank: 266
score: 98.86847393329327
patch: return cs . char CaMeL At ( j + $NUMBER$ ) ;
rank: 266
score: 98.73995267427884
patch: value = cs . char CaMeL At ( j ) ; }
rank: 266
score: 98.68206232244319
patch: INDEX _ NOT _ FOUND = i ; continue ;
rank: 266
score: 98.65732150607639
patch: continue ; } else if ; break ;
rank: 266
score: 98.54792022705078
patch: continue . trim ( ) ; }
rank: 266
score: 98.44129943847656
patch: j ++ ; } if continue ;
rank: 266
score: 98.34162248883929
patch: continue ; continue ; true ;
rank: 267
score: 98.88671875
patch: buffer . char CaMeL At ( j ] ) ; }
rank: 267
score: 98.8682528409091
patch: break search CaMeL Chars [ j ] = ch ;
rank: 267
score: 98.73990572415866
patch: entry = cs . char CaMeL At ( i ) ; }
rank: 267
score: 98.68101806640625
patch: search CaMeL Chars [ i ] = $STRING$ ;
rank: 267
score: 98.67390441894531
patch: continue ; / * continue ; }
rank: 267
score: 98.54766845703125
patch: continue true ; } continue false ;
rank: 267
score: 98.34144592285156
patch: continue ; ; if continue ; ;
rank: 268
score: 98.90377371651786
patch: return INDEX _ NOT _ FOUND ; } else { return 0 ;
rank: 268
score: 98.8850606282552
patch: attribute = cs . char CaMeL At ( j ) ;
rank: 268
score: 98.86797626201923
patch: continue search CaMeL Chars [ j ] - search CaMeL Len ;
rank: 268
score: 98.73971557617188
patch: bytes = cs . char CaMeL At ( i ) ;
rank: 268
score: 98.68088989257812
patch: super . index CaMeL Of ( ch ) ;
rank: 268
score: 98.67323303222656
patch: break ; count ++ ; } }
rank: 268
score: 98.656005859375
patch: continue ; } } catch ; ;
rank: 268
score: 98.44035508897569
patch: continue ; } continue ; } break ;
rank: 268
score: 98.34101867675781
patch: continue ; continue ; if ; }
rank: 269
score: 98.902587890625
patch: return INDEX _ NOT _ FOUND ; } } i ++ ;
rank: 269
score: 98.8845926920573
patch: continue ; } } return cs . length ( ) ;
rank: 269
score: 98.86789175180289
patch: return search CaMeL Len + search CaMeL Chars [ i ] ;
rank: 269
score: 98.73966471354167
patch: index CaMeL Of CaMeL Any CaMeL But ( ch ) ;
rank: 269
score: 98.68074174360795
patch: { search CaMeL Chars [ j ] = ch ;
rank: 269
score: 98.6556625366211
patch: break ; } } if ; }
rank: 269
score: 98.54718695746527
patch: continue ; } if ( continue && ;
rank: 269
score: 98.44015842013889
patch: return continue ; } ; { continue ;
rank: 270
score: 98.90211704799107
patch: return index CaMeL Of ( search CaMeL Chars [ j ] ) ;
rank: 270
score: 98.88431222098214
patch: return Math . length ( search CaMeL Chars [ j ] ) ;
rank: 270
score: 98.86759127103366
patch: return search CaMeL Chars [ j ] - search CaMeL Len ;
rank: 270
score: 98.73921712239583
patch: symbol = cs . char CaMeL At ( j ) ;
rank: 270
score: 98.67902289496527
patch: return INDEX _ NOT _ FOUND ; ;
rank: 270
score: 98.6711196899414
patch: continue ; } while ( ; }
rank: 270
score: 98.65426296657986
patch: continue ; } if ( continue continue ;
rank: 270
score: 98.43959554036458
patch: catch continue ; continue ; if continue ;
rank: 270
score: 98.33937290736607
patch: if ( continue ; continue ;
rank: 271
score: 98.9018085186298
patch: search CaMeL Chars . char CaMeL At ( i ) ; }
rank: 271
score: 98.88414417613636
patch: throw 0 + search CaMeL Chars [ j ] ;
rank: 271
score: 98.73914513221153
patch: ! Array CaMeL Utils . is CaMeL Empty ( cs ) ;
rank: 271
score: 98.67890625
patch: ch = INDEX _ NOT _ FOUND ; }
rank: 271
score: 98.65377807617188
patch: continue ; } for ; ; }
rank: 271
score: 98.54666476779514
patch: count ++ ; continue ; } continue ;
rank: 271
score: 98.43935818142361
patch: value = continue ; continue - 1 ;
rank: 271
score: 98.33753967285156
patch: outer ; ; continue ; break ;
rank: 272
score: 98.67877960205078
patch: index CaMeL Of ( ch ) ;
rank: 272
score: 98.67092895507812
patch: p ++ ; break ; } }
rank: 272
score: 98.65316772460938
patch: continue $NUMBER$ ; } continue 1 ;
rank: 272
score: 98.54652404785156
patch: count ++ ; break false ; }
rank: 272
score: 98.43837193080357
patch: continue ; / ++ continue ;
rank: 272
score: 98.33717346191406
patch: if continue ; ; ; continue ;
rank: 273
score: 98.8644775390625
patch: index CaMeL Of CaMeL Any CaMeL But ( cs , cs ) ; }
rank: 273
score: 98.73880615234376
patch: table . index CaMeL Of ( ch ) ;
rank: 273
score: 98.67823028564453
patch: return 0 ; } i ++ ;
rank: 273
score: 98.67060004340277
patch: continue ; } ; } ; continue ;
rank: 273
score: 98.65254041883681
patch: throw new Illegal CaMeL Argument CaMeL Exception ;
rank: 273
score: 98.43761335100446
patch: return continue ; for continue ;
rank: 273
score: 98.33702087402344
patch: if ; = 0 ; break ;
rank: 274
score: 98.90082341974431
patch: return INDEX _ NOT _ FOUND ; } ) ;
rank: 274
score: 98.88202776227679
patch: s = cs . char CaMeL At ( j ) ; continue ;
rank: 274
score: 98.7385762532552
patch: token = cs . char CaMeL At ( i ) ;
rank: 274
score: 98.6781494140625
patch: continue INDEX _ NOT _ FOUND + i ;
rank: 274
score: 98.6705551147461
patch: search CaMeL Len -- ; } }
rank: 274
score: 98.65204620361328
patch: continue ; } continue ; } else
rank: 274
score: 98.43691677517361
patch: continue ; if continue ; while continue ;
rank: 275
score: 98.90003380408653
patch: switch ( cs . char CaMeL At ( j ) ) {
rank: 275
score: 98.88180541992188
patch: flags = search CaMeL Chars [ j ] ;
rank: 275
score: 98.86260114397321
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs , ch ;
rank: 275
score: 98.73812866210938
patch: a = cs . char CaMeL At ( i ) ;
rank: 275
score: 98.67812093098958
patch: return i ; } j ++ ; }
rank: 275
score: 98.6701889038086
patch: outer ++ ; break ; } }
rank: 275
score: 98.65198516845703
patch: throw null ; } else if ;
rank: 275
score: 98.54545084635417
patch: break count [ i ] ; } }
rank: 275
score: 98.436279296875
patch: break ; ; ; if continue ;
rank: 276
score: 98.89974975585938
patch: search CaMeL Len = search CaMeL Len ; return i ;
rank: 276
score: 98.67790083451705
patch: return new int [ search CaMeL Len ] ; }
rank: 276
score: 98.67015245225694
patch: System . arraycopy ( ; continue ; }
rank: 276
score: 98.54507010323661
patch: continue [ j ] ; }
rank: 276
score: 98.43597412109375
patch: continue ; / else ; continue ;
rank: 276
score: 98.33183942522321
patch: continue ; continue ; / ;
rank: 277
score: 98.89962064302884
patch: x = cs . char CaMeL At ( j ) ; }
rank: 277
score: 98.88037109375
patch: return cs . char CaMeL At ( j ) ; } break ;
rank: 277
score: 98.86205240885417
patch: continue search CaMeL Chars [ j ] . get CaMeL Value ( ) ;
rank: 277
score: 98.736572265625
patch: expression = cs . char CaMeL At ( j ) ; }
rank: 277
score: 98.67727322048611
patch: search CaMeL Len ++ ; return i ;
rank: 277
score: 98.66945393880208
patch: continue count ; } }
rank: 277
score: 98.65163167317708
patch: return $NUMBER$ ; } } if continue ;
rank: 277
score: 98.54494803292411
patch: j ++ ; break ; }
rank: 277
score: 98.43592180524554
patch: continue ; } continue ; int
rank: 277
score: 98.33161163330078
patch: if ; continue ; ; break ;
rank: 278
score: 98.89942278180804
patch: search CaMeL Len = cs . char CaMeL At ( i ) ;
rank: 278
score: 98.87968139648437
patch: entry = search CaMeL Chars [ j ] ;
rank: 278
score: 98.86147732204861
patch: continue & INDEX _ NOT _ FOUND ;
rank: 278
score: 98.73423414963942
patch: found = INDEX _ NOT _ FOUND ; return i ; }
rank: 278
score: 98.67679172092014
patch: search CaMeL Len = j + 0 ;
rank: 278
score: 98.65140533447266
patch: break ; } } if ; ;
rank: 278
score: 98.54483468191964
patch: limit ++ ; break ; }
rank: 278
score: 98.43558502197266
patch: continue ; out . arraycopy continue ;
rank: 278
score: 98.33011627197266
patch: continue ; continue ; += continue ;
rank: 279
score: 98.89922688802083
patch: return index CaMeL Of CaMeL Any CaMeL But ( search CaMeL Chars [ j
rank: 279
score: 98.87792029747597
patch: end = cs . char CaMeL At ( j ) ; }
rank: 279
score: 98.86067417689732
patch: buf . add ( search CaMeL Chars [ j ] ) ; }
rank: 279
score: 98.73419189453125
patch: found += INDEX _ NOT _ FOUND ; }
rank: 279
score: 98.67534790039062
patch: continue ; } } else { return i ;
rank: 279
score: 98.66746520996094
patch: continue ; } break ; ; }
rank: 279
score: 98.65126037597656
patch: return 0 ; } } else ;
rank: 279
score: 98.43557739257812
patch: return continue ; continue ;
rank: 279
score: 98.32889556884766
patch: } if ; continue ; break ;
rank: 280
score: 98.89911499023438
patch: search CaMeL Len = search CaMeL Len ; }
rank: 280
score: 98.8601962002841
patch: ch = cs . char CaMeL At ( j )
rank: 280
score: 98.7341552734375
patch: ps . return INDEX _ NOT _ FOUND ;
rank: 280
score: 98.67352294921875
patch: return 0 ; } } return 0 ;
rank: 280
score: 98.66744656032986
patch: char ch = ; break ; } }
rank: 280
score: 98.54386393229167
patch: ok = false ; break ; } }
rank: 280
score: 98.43518829345703
patch: iter . append ( continue ) ;
rank: 280
score: 98.3282241821289
patch: continue ; ; else if continue ;
rank: 281
score: 98.7335674579327
patch: arg = cs . char CaMeL At ( j ) ; }
rank: 281
score: 98.67338344029018
patch: continue cs CaMeL Len ; }
rank: 281
score: 98.6669692993164
patch: continue ; } } break ; }
rank: 281
score: 98.65061732700893
patch: continue ; } else * /
rank: 281
score: 98.54316711425781
patch: break [ i ] ; } }
rank: 281
score: 98.32820129394531
patch: / ; continue ; if continue ;
rank: 282
score: 98.8989013671875
patch: return cs . char CaMeL At ( j ) ; } return i ;
rank: 282
score: 98.87677001953125
patch: System . i [ j ] = ch ;
rank: 282
score: 98.85990397135417
patch: info . index CaMeL Of CaMeL Any CaMeL But ( ch ) ; }
rank: 282
score: 98.73275052584134
patch: expr = cs . char CaMeL At ( i ) ; }
rank: 282
score: 98.6728759765625
patch: return 1 ; } return cs CaMeL Len ;
rank: 282
score: 98.66695556640624
patch: continue ; } } else { break ; }
rank: 282
score: 98.65048556857639
patch: continue ; } else if ( continue ;
rank: 282
score: 98.43310546875
patch: for continue ; continue ; } continue ;
rank: 282
score: 98.3280258178711
patch: if ; { continue ; break ;
rank: 283
score: 98.7327129657452
patch: comp = cs . char CaMeL At ( j ) ; }
rank: 283
score: 98.6666259765625
patch: continue ; } } ; ;
rank: 283
score: 98.65020073784723
patch: return continue ; } } if continue ;
rank: 283
score: 98.54257202148438
patch: outer : continue ; }
rank: 283
score: 98.43262396918402
patch: end continue ; continue ; if continue ;
rank: 283
score: 98.32732391357422
patch: continue ; ; * / continue ;
rank: 284
score: 98.89734825721153
patch: return INDEX _ NOT _ FOUND ; } } return false ;
rank: 284
score: 98.858056640625
patch: return index CaMeL Of CaMeL Any CaMeL But ( cs , j ) ;
rank: 284
score: 98.73253455528847
patch: tag = cs . char CaMeL At ( j ) ; }
rank: 284
score: 98.67267456054688
patch: return is CaMeL Empty ( cs ) ; }
rank: 284
score: 98.66651068793402
patch: continue ; } } while ( true )
rank: 284
score: 98.64655303955078
patch: = 0 ; break ; } }
rank: 284
score: 98.54243687220982
patch: continue length - 1 ; }
rank: 284
score: 98.43251255580357
patch: return continue ; if continue ;
rank: 284
score: 98.32731628417969
patch: continue ; continue ; - 1 ;
rank: 285
score: 98.87391075721153
patch: f = cs . char CaMeL At ( j ) ; }
rank: 285
score: 98.85728870738636
patch: search CaMeL Chars [ j ] = ch } ;
rank: 285
score: 98.7320556640625
patch: n = INDEX _ NOT _ FOUND ; }
rank: 285
score: 98.6722412109375
patch: search CaMeL Len = j ? 0 : 0 ;
rank: 285
score: 98.66435411241319
patch: continue ; ; } ; } continue ;
rank: 285
score: 98.64649200439453
patch: continue ; } * / continue ;
rank: 285
score: 98.54118347167969
patch: break - 1 ; continue ; }
rank: 285
score: 98.43228488498264
patch: continue continue ; } ; if continue ;
rank: 285
score: 98.325439453125
patch: continue ; ; / ; break ;
rank: 286
score: 98.85677664620536
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ - 1 ) ;
rank: 286
score: 98.73165893554688
patch: b = INDEX _ NOT _ FOUND ; continue ; }
rank: 286
score: 98.67208251953124
patch: return $STRING$ ; }
rank: 286
score: 98.66377088758681
patch: continue ; } } return - 1 ;
rank: 286
score: 98.64605034722223
patch: continue ; } * * * * /
rank: 286
score: 98.54105377197266
patch: prev ++ ; break ; } }
rank: 286
score: 98.43225775824652
patch: continue ; } else { ( continue ;
rank: 286
score: 98.32532755533855
patch: continue ; continue ; else
rank: 287
score: 98.896435546875
patch: return search CaMeL Chars . char CaMeL At ( i ) ; } }
rank: 287
score: 98.87250627790179
patch: continue ; } cs . char CaMeL At ( j ] ) ;
rank: 287
score: 98.73087252103366
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 287
score: 98.67197875976562
patch: cs CaMeL Len = search CaMeL Len ; }
rank: 287
score: 98.66301727294922
patch: continue ; } * continue ; }
rank: 287
score: 98.64590793185764
patch: * * * * * / continue ;
rank: 287
score: 98.54091099330357
patch: continue false ; } ; }
rank: 287
score: 98.43201361762152
patch: list . add ( continue ) ; }
rank: 287
score: 98.32451629638672
patch: return false ;
rank: 288
score: 98.85460316051136
patch: return search CaMeL Chars [ i ] + ch ;
rank: 288
score: 98.73062744140626
patch: t = INDEX _ NOT _ FOUND ; }
rank: 288
score: 98.67166476779514
patch: return false ; } } return i ;
rank: 288
score: 98.662841796875
patch: continue ; } ; } else continue ;
rank: 288
score: 98.64590018136161
patch: break ; } else continue ;
rank: 288
score: 98.54003228081598
patch: buffer . append ( $STRING$ ) ; }
rank: 288
score: 98.43199327256944
patch: list . add ( continue ; continue ;
rank: 288
score: 98.32413736979167
patch: if false ; continue ;
rank: 289
score: 98.895654296875
patch: if ( search CaMeL Len - cs . char CaMeL At ( j )
rank: 289
score: 98.8721454326923
patch: outer = cs . char CaMeL At ( j ) ; }
rank: 289
score: 98.85433255709134
patch: search CaMeL Chars [ j ] = ch ; } break ;
rank: 289
score: 98.7300313313802
patch: tag = cs . char CaMeL At ( i ) ;
rank: 289
score: 98.67117309570312
patch: return 0 ; } return j ;
rank: 289
score: 98.66229926215277
patch: search CaMeL Len += continue ; } }
rank: 289
score: 98.64547729492188
patch: return 0 - 1 ; } }
rank: 289
score: 98.43199157714844
patch: continue ; } return continue ; }
rank: 289
score: 98.32371520996094
patch: continue ; continue ; } / /
rank: 290
score: 98.87183227539063
patch: result += search CaMeL Chars [ j ] ;
rank: 290
score: 98.72943584735577
patch: ! Array CaMeL Utils . is CaMeL Empty ( search CaMeL Chars
rank: 290
score: 98.64451599121094
patch: break ; } } } if ;
rank: 290
score: 98.5390625
patch: retval ++ ; break ; } }
rank: 290
score: 98.43174743652344
patch: * continue ; } if continue ;
rank: 290
score: 98.32356262207031
patch: continue ; } ; = continue ;
rank: 291
score: 98.894140625
patch: return return search CaMeL Chars [ j ] ;
rank: 291
score: 98.87116350446429
patch: break ( cs . char CaMeL At ( j ) ) ; }
rank: 291
score: 98.72936072716347
patch: Object ch = cs . char CaMeL At ( j ) ;
rank: 291
score: 98.66965553977273
patch: return 0 ; } } return search CaMeL Len ;
rank: 291
score: 98.64436340332031
patch: if ( continue ; continue ; }
rank: 291
score: 98.53867013113839
patch: continue ; break true ; }
rank: 291
score: 98.32099260602679
patch: continue ; continue ; ; /
rank: 292
score: 98.85098970853366
patch: return search CaMeL Chars [ i ] . size ( ) ;
rank: 292
score: 98.66959381103516
patch: return 1 ; } return 0 ;
rank: 292
score: 98.66011352539063
patch: continue ; } if ( ch != $STRING$ ;
rank: 292
score: 98.642333984375
patch: continue ; } else ; * /
rank: 292
score: 98.53849283854167
patch: break ] ; } }
rank: 292
score: 98.43028428819444
patch: return continue - 1 ; for continue ;
rank: 292
score: 98.32059733072917
patch: continue ; ; break ;
rank: 293
score: 98.85061645507812
patch: continue * search CaMeL Chars [ j ] ;
rank: 293
score: 98.728125
patch: expr = INDEX _ NOT _ FOUND ; }
rank: 293
score: 98.6692626953125
patch: return INDEX _ NOT _ FOUND + i ;
rank: 293
score: 98.6593246459961
patch: pos ++ ; ; break ; }
rank: 293
score: 98.64208984375
patch: { return 1 ; } } }
rank: 293
score: 98.53797912597656
patch: continue count [ j ] ; }
rank: 293
score: 98.31991141183036
patch: return * continue ; break ;
rank: 294
score: 98.89255777994792
patch: search CaMeL Chars . char CaMeL At ( i ) ;
rank: 294
score: 98.87071533203125
patch: f = search CaMeL Chars [ j ] ;
rank: 294
score: 98.85052020733173
patch: continue search CaMeL Chars [ j ] + search CaMeL Len ;
rank: 294
score: 98.72765174278847
patch: curr = cs . char CaMeL At ( i ) ; }
rank: 294
score: 98.6690673828125
patch: return search CaMeL Len ; } } return i ;
rank: 294
score: 98.64141082763672
patch: break ; } else return 1 ;
rank: 294
score: 98.42905099051339
patch: continue ; * / continue ;
rank: 294
score: 98.3179702758789
patch: continue ; continue ; count ++ ;
rank: 295
score: 98.72737630208333
patch: state = cs . char CaMeL At ( j ) ;
rank: 295
score: 98.66896750710227
patch: ch = search CaMeL Chars [ i ] ; }
rank: 295
score: 98.65712280273438
patch: search CaMeL Len ++ ; ++ count ; }
rank: 295
score: 98.64134216308594
patch: return length ; } } continue ;
rank: 295
score: 98.53646087646484
patch: changed ++ ; break ; } }
rank: 295
score: 98.42876519097223
patch: continue ; / / * j * /
rank: 295
score: 98.31726837158203
patch: if 1 ; continue ; break ;
rank: 296
score: 98.88973999023438
patch: search CaMeL Len = search CaMeL Chars [ i ] ;
rank: 296
score: 98.8703104654948
patch: search CaMeL Len += search CaMeL Chars [ i ] ;
rank: 296
score: 98.84878976004464
patch: continue index CaMeL Of CaMeL Any CaMeL But ( cs ) ; }
rank: 296
score: 98.65692138671875
patch: search CaMeL Len ++ ; break ;
rank: 296
score: 98.64100477430556
patch: return 1 ; } ; } continue ;
rank: 296
score: 98.53585379464286
patch: continue value [ j ] ;
rank: 296
score: 98.42864118303571
patch: throw new Throwable ( ) ;
rank: 296
score: 98.31697845458984
patch: true ; continue ; } continue ;
rank: 297
score: 98.88844807942708
patch: search CaMeL Len = cs . length ( ) ; }
rank: 297
score: 98.8486661044034
patch: return search CaMeL Chars [ j ] : 0 ;
rank: 297
score: 98.72721041165866
patch: token = cs . char CaMeL At ( j ) ; }
rank: 297
score: 98.66824340820312
patch: search CaMeL Len [ i ] = ch ;
rank: 297
score: 98.64051649305556
patch: continue ; } continue ; } if ;
rank: 298
score: 98.88837890625
patch: search CaMeL Chars [ cs CaMeL Len ] = search CaMeL Len ; }
rank: 298
score: 98.86952514648438
patch: ret = search CaMeL Chars [ j ] ;
rank: 298
score: 98.84738159179688
patch: return search CaMeL Chars [ j ] . length 1 ;
rank: 298
score: 98.72623384915866
patch: target = cs . char CaMeL At ( j ) ; }
rank: 298
score: 98.6681396484375
patch: INDEX _ NOT _ FOUND = false ; }
rank: 298
score: 98.65596923828124
patch: return ; } else { continue ; } }
rank: 298
score: 98.64021131727431
patch: continue ; } } } if continue ;
rank: 298
score: 98.533447265625
patch: break ; default : break false ; }
rank: 298
score: 98.42781575520833
patch: continue - 0 ; ;
rank: 298
score: 98.31509399414062
patch: continue ; } ; ;
rank: 299
score: 98.86942232572116
patch: throw new Illegal CaMeL Argument CaMeL Exception ( , $STRING$ ) ;
rank: 299
score: 98.84678431919643
patch: Char CaMeL Sequence ch = cs . char CaMeL At ( j )
rank: 299
score: 98.66801147460937
patch: INDEX _ NOT _ FOUND = true ; }
rank: 299
score: 98.65580749511719
patch: c = ; break ; } }
rank: 299
score: 98.63857014973958
patch: break ; } } else = continue ;
rank: 299
score: 98.42746310763889
patch: continue ; } continue ; ( continue ;
rank: 299
score: 98.31507110595703
patch: continue ; continue ; / / /
rank: 300
score: 98.88790189302884
patch: out . append ( search CaMeL Chars [ j ] ) ;
rank: 300
score: 98.86940354567308
patch: cs = cs . char CaMeL At ( j ) ; }
rank: 300
score: 98.84529331752232
patch: continue search CaMeL Chars . char CaMeL At ( j ) ; }
rank: 300
score: 98.72467041015625
patch: v = INDEX _ NOT _ FOUND ; }
rank: 300
score: 98.66756863064236
patch: cs CaMeL Len ++ ; j ++ ;
rank: 300
score: 98.65441022600446
patch: continue ; } count -- ;
rank: 300
score: 98.63824462890625
patch: throw new Error ( $STRING$ ) ;
rank: 300
score: 98.53240203857422
patch: count ++ ; } continue ; }
rank: 300
score: 98.42745208740234
patch: sb . append ( continue ) ;
rank: 300
score: 98.314208984375
patch: return new continue ; if continue ;
rank: 301
score: 98.88718825120192
patch: return INDEX _ NOT _ FOUND ; } else return i ;
rank: 301
score: 98.8451397235577
patch: return search CaMeL Chars [ j ] * search CaMeL Len ;
rank: 301
score: 98.72451782226562
patch: prefix = INDEX _ NOT _ FOUND ; }
rank: 301
score: 98.65419311523438
patch: continue continue ; } search CaMeL Len ++ ;
rank: 301
score: 98.63773600260417
patch: continue ; } } catch ; continue ;
rank: 301
score: 98.53208923339844
patch: continue 1 ; } continue $NUMBER$ ;
rank: 301
score: 98.42693413628473
patch: } continue ; } else { continue ;
rank: 301
score: 98.313232421875
patch: continue ; continue ; ; ;
rank: 302
score: 98.88681265024039
patch: return INDEX _ NOT _ FOUND ; } } return true ;
rank: 302
score: 98.84473595252403
patch: continue search CaMeL Chars [ j ] . length ( ) ;
rank: 302
score: 98.7236797626202
patch: Object ch = cs . char CaMeL At ( i ) ;
rank: 302
score: 98.66695556640624
patch: INDEX _ NOT _ FOUND = 0 ; }
rank: 302
score: 98.6541015625
patch: return ; } }
rank: 302
score: 98.63716125488281
patch: return 1 ; } } } }
rank: 302
score: 98.53092193603516
patch: break value [ i ] ; }
rank: 302
score: 98.31169128417969
patch: continue ; continue ; } System ;
rank: 303
score: 98.88567645733173
patch: return INDEX _ NOT _ FOUND ; } } return null ;
rank: 303
score: 98.84434000651042
patch: search CaMeL Len ++ ; search CaMeL Len ++ ; }
rank: 303
score: 98.72349039713542
patch: tmp = INDEX _ NOT _ FOUND ;
rank: 303
score: 98.66598946707589
patch: continue ; } return j ;
rank: 303
score: 98.65367974175348
patch: continue ; } if ( ch ; }
rank: 303
score: 98.63658311631944
patch: continue ; } else ; break ; }
rank: 303
score: 98.53070068359375
patch: priority -- ; break ; } }
rank: 303
score: 98.42618815104167
patch: continue ; / / / for continue ;
rank: 303
score: 98.3102798461914
patch: continue ; } ; ; continue ;
rank: 304
score: 98.88551025390625
patch: return search CaMeL Chars [ i ) ] ;
rank: 304
score: 98.86736188616071
patch: start = cs . char CaMeL At ( j ) ; continue ;
rank: 304
score: 98.84412638346355
patch: result = i . to CaMeL String ( ) ; }
rank: 304
score: 98.72304280598958
patch: state = INDEX _ NOT _ FOUND ; continue ; }
rank: 304
score: 98.6649169921875
patch: cs CaMeL Len = j + 0 ; }
rank: 304
score: 98.65184190538194
patch: found = false ; break ; } }
rank: 304
score: 98.63590240478516
patch: continue ; } } * * /
rank: 304
score: 98.52999877929688
patch: continue 0 ; } break 1 ;
rank: 304
score: 98.42523956298828
patch: end continue ; } if continue ;
rank: 304
score: 98.31024169921875
patch: continue ; ; ; break ;
rank: 305
score: 98.84402465820312
patch: char name = cs . char CaMeL At ( j )
rank: 305
score: 98.72299429086539
patch: table = cs . char CaMeL At ( i ) ; }
rank: 305
score: 98.65072970920139
patch: search CaMeL Len ++ ; } } ;
rank: 305
score: 98.63483537946429
patch: break ; } catch continue ;
rank: 305
score: 98.42491149902344
patch: value = continue ; continue ; ;
rank: 305
score: 98.30937957763672
patch: if ; continue ; else continue ;
rank: 306
score: 98.86562093098958
patch: position = cs . char CaMeL At ( j ) ;
rank: 306
score: 98.72213040865384
patch: impl . index CaMeL Of CaMeL Any CaMeL But ( ) ;
rank: 306
score: 98.66437322443181
patch: continue INDEX _ NOT _ FOUND ; return i ;
rank: 306
score: 98.65013885498047
patch: ++ i ; break ; } }
rank: 306
score: 98.63446044921875
patch: throw continue ; } continue ; }
rank: 306
score: 98.52867780412946
patch: continue value [ i ] ;
rank: 306
score: 98.42462158203125
patch: start continue ; } if continue ;
rank: 306
score: 98.309326171875
patch: } continue ;
rank: 307
score: 98.88446655273438
patch: return search CaMeL Chars [ j ++ ] ;
rank: 307
score: 98.86512169471153
patch: return cs . char CaMeL At ( j ) ; break ;
rank: 307
score: 98.84339488636364
patch: return count - search CaMeL Chars [ j ] ;
rank: 307
score: 98.72146371694711
patch: att = cs . char CaMeL At ( j ) ; }
rank: 307
score: 98.66350763494319
patch: ch = search CaMeL Len [ j ] ; }
rank: 307
score: 98.65009901258681
patch: continue ; } } if ( continue )
rank: 307
score: 98.6343765258789
patch: continue ; * * * continue ;
rank: 307
score: 98.52802870008681
patch: visible = true ; break ; } }
rank: 307
score: 98.30887603759766
patch: continue ; continue ; = ; {
rank: 308
score: 98.88379845252403
patch: search CaMeL Chars [ i ] = search CaMeL Len ; }
rank: 308
score: 98.86449323381696
patch: name = cs . char CaMeL At ( j ) ; break ;
rank: 308
score: 98.8411114032452
patch: this . search CaMeL Chars [ i ] = ch ; }
rank: 308
score: 98.72137451171875
patch: group = cs . char CaMeL At ( j ) ;
rank: 308
score: 98.66312255859376
patch: ch = char CaMeL At ( j ) ;
rank: 308
score: 98.65008544921875
patch: continue ; } if ( ch != ; }
rank: 308
score: 98.634033203125
patch: return 1 ; } } * /
rank: 308
score: 98.52783966064453
patch: notify CaMeL All ( ) ; }
rank: 308
score: 98.42385864257812
patch: return continue ; } continue ; {
rank: 308
score: 98.30718994140625
patch: if $NUMBER$ ; continue ; break ;
rank: 309
score: 98.88365589488636
patch: return cs . index CaMeL Of ( cs ) ;
rank: 309
score: 98.8388671875
patch: return search CaMeL Len - cs CaMeL Len ;
rank: 309
score: 98.72095665564903
patch: o = cs . char CaMeL At ( j ) ; }
rank: 309
score: 98.66235961914063
patch: return ! INDEX _ NOT _ FOUND ; }
rank: 309
score: 98.64993896484376
patch: return i ; } else { continue ; }
rank: 309
score: 98.63321940104167
patch: continue ; } else throw continue ; }
rank: 309
score: 98.52644178602431
patch: retval = 0 ; break ; } }
rank: 309
score: 98.42355007595486
patch: continue continue ; } continue ; continue ;
rank: 309
score: 98.3046875
patch: continue ; ; / ;
rank: 310
score: 98.88321627103366
patch: else ch = cs . char CaMeL At ( j ) ;
rank: 310
score: 98.8387920673077
patch: return search CaMeL Chars [ i ] . length ( ) ;
rank: 310
score: 98.72039794921875
patch: meta = cs . char CaMeL At ( j ) ;
rank: 310
score: 98.66184488932292
patch: continue ; } cs CaMeL Len ++ ;
rank: 310
score: 98.64984130859375
patch: found = ; break ; } }
rank: 310
score: 98.63294135199652
patch: continue ; * * * continue ; }
rank: 310
score: 98.52607557508681
patch: count ++ ; break ; } continue ;
rank: 310
score: 98.42258707682292
patch: assert false ; continue ; if continue ;
rank: 310
score: 98.30467224121094
patch: } ; continue ; } continue ;
rank: 311
score: 98.88266225961539
patch: search CaMeL Len = search CaMeL Chars [ i ] ; }
rank: 311
score: 98.8626708984375
patch: str = search CaMeL Chars [ j ] ;
rank: 311
score: 98.71935424804687
patch: prev = search CaMeL Chars [ j ] ;
rank: 311
score: 98.66151012073864
patch: INDEX _ NOT _ FOUND = cs CaMeL Len ;
rank: 311
score: 98.64978705512152
patch: continue ; default : continue ; ; }
rank: 311
score: 98.63189019097223
patch: break ; } else = continue ; }
rank: 311
score: 98.52537536621094
patch: count ++ ; return 0 ; }
rank: 311
score: 98.42250569661458
patch: return 0 ; } else if continue ;
rank: 311
score: 98.30222865513393
patch: } if continue ; break ;
rank: 312
score: 98.88026780348558
patch: sb . add ( search CaMeL Chars [ i ] ) ;
rank: 312
score: 98.6614990234375
patch: return new int [ 1 ] ; }
rank: 312
score: 98.64808485243056
patch: continue ; } ; ; } continue ;
rank: 312
score: 98.63178253173828
patch: result ; * * * * /
rank: 312
score: 98.52505154079861
patch: count ++ ; continue ; } break ;
rank: 312
score: 98.30073547363281
patch: if ; = 0 ; continue ;
rank: 313
score: 98.88014729817708
patch: System . arraycopy ( search CaMeL Chars , j ) ;
rank: 313
score: 98.86056753305289
patch: continue ( search CaMeL Chars [ j ] == ch ) ;
rank: 313
score: 98.66146850585938
patch: l = INDEX _ NOT _ FOUND ; }
rank: 313
score: 98.64754638671874
patch: continue ; break ; } } } continue ;
rank: 313
score: 98.63091362847223
patch: continue ; } else return 1 ; }
rank: 313
score: 98.52448272705078
patch: continue ] ; } continue ; }
rank: 313
score: 98.42072889539931
patch: continue ; / 1 ; if continue ;
rank: 313
score: 98.30062103271484
patch: continue ; continue ; } * /
rank: 314
score: 98.86036376953125
patch: search CaMeL Chars [ j ] = ) ;
rank: 314
score: 98.83590932992789
patch: result = i ? INDEX _ NOT _ FOUND : 0 ;
rank: 314
score: 98.71878756009616
patch: qname = cs . char CaMeL At ( j ) ; }
rank: 314
score: 98.66034490411931
patch: return 0 + search CaMeL Chars [ j ] ;
rank: 314
score: 98.64712185329861
patch: ch = continue ; break ; } }
rank: 314
score: 98.63038635253906
patch: return 1 ; } else ; }
rank: 314
score: 98.52447509765625
patch: continue + 1 ; }
rank: 314
score: 98.29999542236328
patch: continue ; continue ; ? continue ;
rank: 315
score: 98.87806114783653
patch: return cs . char CaMeL At ( j ) . length ;
rank: 315
score: 98.83507361778847
patch: ch = ch . char CaMeL At ( j ) ; }
rank: 315
score: 98.71775465745192
patch: column = cs . char CaMeL At ( j ) ; }
rank: 315
score: 98.65892444957386
patch: return 0 ; } return cs CaMeL Len ; }
rank: 315
score: 98.645751953125
patch: continue ; } ; } ; ;
rank: 315
score: 98.6299057006836
patch: continue ; } if ; * /
rank: 315
score: 98.52438354492188
patch: outer = continue ; break ; }
rank: 315
score: 98.42033555772569
patch: return - 1 ; } if continue ;
rank: 316
score: 98.8778827373798
patch: result = INDEX _ NOT _ FOUND ; return 0 ; }
rank: 316
score: 98.85956682477679
patch: buf . append ( search CaMeL Chars [ j ] ) ; }
rank: 316
score: 98.83463911576705
patch: continue ( search CaMeL Chars [ i ] ) ;
rank: 316
score: 98.65860595703126
patch: continue i ; }
rank: 316
score: 98.6292953491211
patch: throw new Runtime CaMeL Exception ; }
rank: 316
score: 98.52428436279297
patch: continue true ; } if ( ;
rank: 316
score: 98.41986955915179
patch: ++ continue ; } continue ;
rank: 316
score: 98.29833221435547
patch: continue ; } ; ; break ;
rank: 317
score: 98.87752591646634
patch: search CaMeL Len = search CaMeL Chars . length ( ) ;
rank: 317
score: 98.8594482421875
patch: text = search CaMeL Chars [ j ] ;
rank: 317
score: 98.83397498497597
patch: continue search CaMeL Chars [ j ] . trim ( ) ;
rank: 317
score: 98.71761380709134
patch: key = cs . char CaMeL At ( j ) ; }
rank: 317
score: 98.65840657552083
patch: search CaMeL Len = j + 1 ;
rank: 317
score: 98.64461941189236
patch: pos ++ ; continue ; } ; }
rank: 317
score: 98.62928602430556
patch: continue ; } if ; ; continue ;
rank: 317
score: 98.52369520399306
patch: continue false ; } if ( continue )
rank: 317
score: 98.41974555121527
patch: j ++ ; break ; if continue ;
rank: 317
score: 98.29830932617188
patch: if ; { continue ;
rank: 318
score: 98.8775126139323
patch: continue ; } return INDEX _ NOT _ FOUND ; }
rank: 318
score: 98.8591778094952
patch: prop = cs . char CaMeL At ( j ) ; }
rank: 318
score: 98.64447021484375
patch: match ; break ; } }
rank: 318
score: 98.62918090820312
patch: continue ; } / * * /
rank: 318
score: 98.52354600694444
patch: count ++ ; break true ; } }
rank: 318
score: 98.29652622767857
patch: continue ; ; ++ continue ;
rank: 319
score: 98.82795854048295
patch: result = continue . to CaMeL String ( ) ;
rank: 319
score: 98.71676870492789
patch: r = cs . char CaMeL At ( j ) ; }
rank: 319
score: 98.65811157226562
patch: search CaMeL Chars [ i ] = i ;
rank: 319
score: 98.64358956473214
patch: continue ; ; } break ;
rank: 319
score: 98.62906646728516
patch: * * * * continue ; }
rank: 319
score: 98.52336968315973
patch: count ++ ; break ; } ; }
rank: 319
score: 98.41807047526042
patch: out . next ( ; ; continue ;
rank: 319
score: 98.29540252685547
patch: continue ; if ; -- continue ;
rank: 320
score: 98.8584735576923
patch: continue ( cs . char CaMeL At ( i ) ) ;
rank: 320
score: 98.82735595703124
patch: return search CaMeL Chars [ j ] ) ;
rank: 320
score: 98.71633911132812
patch: elem = cs . char CaMeL At ( j ) ;
rank: 320
score: 98.657958984375
patch: new [ search CaMeL Len ] = ch ;
rank: 320
score: 98.64311981201172
patch: continue ; } switch ( ch )
rank: 320
score: 98.62834167480469
patch: return continue ; } } else {
rank: 320
score: 98.5228271484375
patch: break - 1 ; } } }
rank: 320
score: 98.41680908203125
patch: continue ; } return continue ; break ;
rank: 320
score: 98.295166015625
patch: continue ; continue ; if ; continue
rank: 321
score: 98.85825805664062
patch: param = search CaMeL Chars [ j ] ;
rank: 321
score: 98.82681039663461
patch: search CaMeL Chars [ j ] = ch ; return i ;
rank: 321
score: 98.65704345703125
patch: search CaMeL Len ++ ; j ++ ;
rank: 321
score: 98.62828572591145
patch: throw null ; } }
rank: 321
score: 98.522705078125
patch: continue true ;
rank: 321
score: 98.41666259765626
patch: continue ; * /
rank: 321
score: 98.29512023925781
patch: continue ; continue ; / break ;
rank: 322
score: 98.87322443181819
patch: search CaMeL Len = 0 ; return i ; }
rank: 322
score: 98.85654907226562
patch: search CaMeL Chars [ j ] = false ;
rank: 322
score: 98.82672119140625
patch: return search CaMeL Chars [ j ] . length ; }
rank: 322
score: 98.71612079326923
patch: search CaMeL Len = search CaMeL Chars . length - i ;
rank: 322
score: 98.65606689453125
patch: return INDEX _ NOT _ FOUND + j ;
rank: 322
score: 98.64222063337054
patch: return i ; } ; }
rank: 322
score: 98.6268310546875
patch: return ++ 1 ; } }
rank: 322
score: 98.5219955444336
patch: j -- ; break ; } }
rank: 322
score: 98.41654459635417
patch: list . append ( $STRING$ ; continue ;
rank: 322
score: 98.29507446289062
patch: outer if ; continue ; break ;
rank: 323
score: 98.87273615056819
patch: return search CaMeL Chars [ j ) ] ; }
rank: 323
score: 98.85616629464286
patch: sb . append ( search CaMeL Chars [ j ] ) ; }
rank: 323
score: 98.71610201322116
patch: result = INDEX _ NOT _ FOUND ; } return i ;
rank: 323
score: 98.6559814453125
patch: System . [ j ] = ch ; }
rank: 323
score: 98.52195521763393
patch: continue ; break false ; }
rank: 323
score: 98.29488372802734
patch: continue ; continue ; ++ break ;
rank: 324
score: 98.87258911132812
patch: if ( search CaMeL Chars [ j
rank: 324
score: 98.85548706054688
patch: value = search CaMeL Chars [ j ] ;
rank: 324
score: 98.7158447265625
patch: true ; return INDEX _ NOT _ FOUND ;
rank: 324
score: 98.6412109375
patch: continue ; } break ; } continue ; }
rank: 324
score: 98.6259765625
patch: break ; } else ; }
rank: 324
score: 98.52145385742188
patch: success = false ; break ; }
rank: 324
score: 98.29385375976562
patch: continue ; if ; ; ; ;
rank: 325
score: 98.87180739182692
patch: search CaMeL Chars [ search CaMeL Len ] = ch ; }
rank: 325
score: 98.85508510044643
patch: continue ; } search CaMeL Len = cs . length ( ) ;
rank: 325
score: 98.82415161132812
patch: continue continue * INDEX _ NOT _ FOUND ;
rank: 325
score: 98.7157958984375
patch: table . char CaMeL At ( j ) ;
rank: 325
score: 98.6543701171875
patch: index CaMeL Of CaMeL Any ( cs ) ;
rank: 325
score: 98.62569851345486
patch: break ; } } if ; break ;
rank: 325
score: 98.52024623325893
patch: continue ] ; break ; }
rank: 325
score: 98.41402180989583
patch: return continue ; } ;
rank: 325
score: 98.2937240600586
patch: continue ; continue ; else / ;
rank: 326
score: 98.71572875976562
patch: result = cs . index CaMeL Of ( ch ) ;
rank: 326
score: 98.65317604758523
patch: cs CaMeL Len = j ; j ++ ; }
rank: 326
score: 98.63941955566406
patch: continue ; * continue ; } }
rank: 326
score: 98.6250228881836
patch: return 1 ; } return 1 ;
rank: 326
score: 98.41352674696181
patch: continue ; } } continue ; break ;
rank: 326
score: 98.2935791015625
patch: try if continue ; continue ;
rank: 327
score: 98.870166015625
patch: x = search CaMeL Chars [ j ] ;
rank: 327
score: 98.82262166341145
patch: return this . search CaMeL Chars [ i ] ; }
rank: 327
score: 98.65161810980902
patch: cs CaMeL Len = search CaMeL Len ;
rank: 327
score: 98.63902282714844
patch: search CaMeL Len ++ ; ; }
rank: 327
score: 98.6247329711914
patch: continue * * * continue ; }
rank: 327
score: 98.52005004882812
patch: continue false ; i ++ ; }
rank: 327
score: 98.41328430175781
patch: continue * continue - 1 ; ;
rank: 327
score: 98.29286193847656
patch: continue ; if ; + continue ;
rank: 328
score: 98.71522013346355
patch: file = cs . char CaMeL At ( j ) ;
rank: 328
score: 98.65087212456598
patch: INDEX _ NOT _ FOUND = j ;
rank: 328
score: 98.63869018554688
patch: continue ; } else { if ( ; }
rank: 328
score: 98.51984998914931
patch: continue - 1 ; break false ; }
rank: 328
score: 98.41317409939236
patch: case 0 ] continue ; if continue ;
rank: 328
score: 98.29186248779297
patch: continue ; continue ; catch continue ;
rank: 329
score: 98.82091175426136
patch: continue search CaMeL Chars [ j ] : 0 ;
rank: 329
score: 98.7151630108173
patch: p = cs . char CaMeL At ( i ) ; }
rank: 329
score: 98.6502685546875
patch: continue ; } } return return i ;
rank: 329
score: 98.63841029575893
patch: continue ; } ++ ; }
rank: 329
score: 98.62295532226562
patch: return ; ; } continue ; }
rank: 329
score: 98.41276550292969
patch: continue ; * * / continue ;
rank: 329
score: 98.29124450683594
patch: continue ; continue ; ; true ;
rank: 330
score: 98.86620154747597
patch: cs CaMeL Len = search CaMeL Chars [ j ] ; }
rank: 330
score: 98.85214468149039
patch: continue + cs . char CaMeL At ( j ) ; }
rank: 330
score: 98.81973970853366
patch: result = i ? INDEX _ NOT _ FOUND : i ;
rank: 330
score: 98.71480305989583
patch: if ( search CaMeL Chars [ j ] == ch )
rank: 330
score: 98.64957885742187
patch: continue INDEX _ NOT _ FOUND + j ;
rank: 330
score: 98.51900906032986
patch: break value [ j ] ; } }
rank: 330
score: 98.4127197265625
patch: list . append ( continue ) ; }
rank: 330
score: 98.29116821289062
patch: if ; continue ; return continue ;
rank: 331
score: 98.86466471354167
patch: search CaMeL Len |= search CaMeL Chars [ j ] ;
rank: 331
score: 98.85208834134616
patch: continue ; } ch = search CaMeL Chars [ j ] ;
rank: 331
score: 98.81885986328125
patch: continue | search CaMeL Chars [ j ] ;
rank: 331
score: 98.7144266764323
patch: return index CaMeL Of CaMeL Any CaMeL But ; } }
rank: 331
score: 98.649560546875
patch: cs CaMeL Len ++ ; return 0 ; }
rank: 331
score: 98.63695068359375
patch: break ; } } System . arraycopy ( ;
rank: 331
score: 98.62254333496094
patch: { continue ; } break ; }
rank: 331
score: 98.41229248046875
patch: continue ; / / / if continue ;
rank: 331
score: 98.2908706665039
patch: continue ; continue ; for ; ;
rank: 332
score: 98.86353648792614
patch: search CaMeL Chars [ j ] = 0 ; }
rank: 332
score: 98.8518954190341
patch: ret = INDEX _ NOT _ FOUND ; break ;
rank: 332
score: 98.81809692382812
patch: return index CaMeL Of CaMeL Any CaMeL But ;
rank: 332
score: 98.713623046875
patch: table . index CaMeL Of ( ch ) ; }
rank: 332
score: 98.64854736328125
patch: search CaMeL Len = j - 0 ; }
rank: 332
score: 98.63506317138672
patch: c -- ; break ; } }
rank: 332
score: 98.51789008246527
patch: break matches [ j ] ; } }
rank: 332
score: 98.41136169433594
patch: continue ; / out { continue ;
rank: 332
score: 98.29078674316406
patch: continue ; continue ; ; / *
rank: 333
score: 98.85165640024039
patch: base = cs . char CaMeL At ( j ) ; }
rank: 333
score: 98.64765625
patch: search CaMeL Chars [ j ] ++ ; }
rank: 333
score: 98.63421630859375
patch: ++ search CaMeL Len ; } }
rank: 333
score: 98.62220764160156
patch: return 1 ; } else { }
rank: 333
score: 98.51788330078125
patch: continue ; count -- ; }
rank: 333
score: 98.41118706597223
patch: continue ; / else { continue ; }
rank: 333
score: 98.29073333740234
patch: if ; continue ; ; continue ;
rank: 334
score: 98.851611328125
patch: y = search CaMeL Chars [ j ] ;
rank: 334
score: 98.81526014539931
patch: return * INDEX _ NOT _ FOUND ;
rank: 334
score: 98.71251424153645
patch: fn = cs . char CaMeL At ( j ) ;
rank: 334
score: 98.6448974609375
patch: search CaMeL Chars [ i ] = j ;
rank: 334
score: 98.62199401855469
patch: return 0 ; } else if ;
rank: 334
score: 98.41033257378473
patch: continue ; * ; { if continue ;
rank: 334
score: 98.28846740722656
patch: continue ; ; / * continue ;
rank: 335
score: 98.8135235126202
patch: return cs . char CaMeL At ( j ) + ch ;
rank: 335
score: 98.71214803059895
patch: attr = cs . char CaMeL At ( i ) ;
rank: 335
score: 98.64451904296875
patch: { { return INDEX _ NOT _ FOUND ;
rank: 335
score: 98.63296169704861
patch: continue ; } * / continue ; }
rank: 335
score: 98.62163434709821
patch: throw null ; } continue ;
rank: 335
score: 98.51629638671875
patch: continue 1 ; break 0 ; }
rank: 335
score: 98.4100112915039
patch: else { continue - 1 ; }
rank: 335
score: 98.28807067871094
patch: continue ; if ; ; / /
rank: 336
score: 98.71071370442708
patch: res = cs . index CaMeL Of ( ch ) ;
rank: 336
score: 98.64398193359375
patch: cs CaMeL Len ++ ; continue ; }
rank: 336
score: 98.51622178819444
patch: break - 1 ; } } continue ;
rank: 336
score: 98.40990447998047
patch: sb . add ( continue ) ;
rank: 336
score: 98.28800201416016
patch: continue ; ; continue ; break ;
rank: 337
score: 98.85040752704327
patch: cs . char CaMeL At ( j ) ; } break ;
rank: 337
score: 98.81235573508523
patch: continue ? INDEX _ NOT _ FOUND : i ;
rank: 337
score: 98.71061567826705
patch: true + INDEX _ NOT _ FOUND ; } }
rank: 337
score: 98.64302368164063
patch: return new INDEX _ NOT _ FOUND ; }
rank: 337
score: 98.63192749023438
patch: return - 1 ; } } }
rank: 337
score: 98.62122938368056
patch: return 0 ; } } ; continue ;
rank: 337
score: 98.40985107421875
patch: return 1 ; } if continue ;
rank: 337
score: 98.28787231445312
patch: continue ; continue ; if / ;
rank: 338
score: 98.85011596679688
patch: return cs . to CaMeL String ( ) ;
rank: 338
score: 98.7105204264323
patch: f = cs . char CaMeL At ( i ) ;
rank: 338
score: 98.63984985351563
patch: cs CaMeL Len = j + 1 ; }
rank: 338
score: 98.62088775634766
patch: break ; } finally { continue ;
rank: 338
score: 98.51449584960938
patch: result = 0 ; break ; }
rank: 338
score: 98.40953717912946
patch: continue * - 1 ; ;
rank: 338
score: 98.28733825683594
patch: continue ; continue ; } true ;
rank: 339
score: 98.8592529296875
patch: result = i . char CaMeL At ( j ) ;
rank: 339
score: 98.84853891225961
patch: search CaMeL Chars [ j ] = ch ; break ; }
rank: 339
score: 98.71031697591145
patch: character = cs . char CaMeL At ( j ) ;
rank: 339
score: 98.63786010742187
patch: return get CaMeL Value ( ch ) ; }
rank: 339
score: 98.63150024414062
patch: continue ; } break ; } } continue ;
rank: 339
score: 98.62047576904297
patch: return ; ; } } if ;
rank: 339
score: 98.51414489746094
patch: if ( continue ) continue ; }
rank: 339
score: 98.40862274169922
patch: throw new Exception ( $STRING$ ) ;
rank: 339
score: 98.2863540649414
patch: next false ; continue ; break ;
rank: 340
score: 98.85822088068181
patch: return cs . char CaMeL At ( ch ) ;
rank: 340
score: 98.80992713341347
patch: return this . search CaMeL Chars [ j ] + ch ;
rank: 340
score: 98.71022338867188
patch: flags = INDEX _ NOT _ FOUND ; }
rank: 340
score: 98.62006487165179
patch: return 1 ; } } else
rank: 340
score: 98.51354108537946
patch: i ++ ; break ; }
rank: 340
score: 98.40802873883929
patch: return continue - - 1 ;
rank: 340
score: 98.28543526785714
patch: continue ; break ; break ;
rank: 341
score: 98.84822904146634
patch: q = cs . char CaMeL At ( j ) ; }
rank: 341
score: 98.70969460227273
patch: throw new Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 341
score: 98.63688354492187
patch: return * INDEX _ NOT _ FOUND ; }
rank: 341
score: 98.63105991908482
patch: continue ; j ++ ; }
rank: 341
score: 98.61994171142578
patch: throw null ; } } if ;
rank: 341
score: 98.51309967041016
patch: removed ++ ; break ; } }
rank: 341
score: 98.40719943576389
patch: continue ; * * / if continue ;
rank: 341
score: 98.28520202636719
patch: if ( continue ; ; continue ;
rank: 342
score: 98.80851606889205
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 342
score: 98.70950317382812
patch: label = cs . char CaMeL At ( j ) ;
rank: 342
score: 98.6366943359375
patch: cs CaMeL Len = i ; return i ;
rank: 342
score: 98.63099670410156
patch: continue ; } if ( count ;
rank: 342
score: 98.61965603298611
patch: { continue ; } } continue ; }
rank: 342
score: 98.40715196397569
patch: continue ; ; } ; if continue ;
rank: 342
score: 98.28325653076172
patch: if ; continue ; break ; }
rank: 343
score: 98.80792236328125
patch: String ch = cs . char CaMeL At ( j )
rank: 343
score: 98.63392333984375
patch: cs CaMeL Len ++ ; i ++ ; }
rank: 343
score: 98.63057708740234
patch: return ; } } if ( ;
rank: 343
score: 98.61945258246527
patch: { continue ; } } if continue ;
rank: 343
score: 98.51292588975694
patch: continue - 1 ; i ++ ; }
rank: 343
score: 98.40611572265625
patch: continue = continue ;
rank: 343
score: 98.28111049107143
patch: continue ; continue ; j ;
rank: 344
score: 98.84712727864583
patch: buffer . char CaMeL At ( j + 1 ) ;
rank: 344
score: 98.70832963423295
patch: ret = INDEX _ NOT _ FOUND ; } }
rank: 344
score: 98.63159857855902
patch: return i ; } } return 0 ;
rank: 344
score: 98.62992640904018
patch: continue ; - 1 ; }
rank: 344
score: 98.51266043526786
patch: position ++ ; break ; }
rank: 344
score: 98.2806625366211
patch: break ; continue ; if ; ;
rank: 345
score: 98.85225830078124
patch: search CaMeL Len = 0 ; continue ; }
rank: 345
score: 98.84708658854167
patch: finally { search CaMeL Chars [ j ] = ch ;
rank: 345
score: 98.70831298828125
patch: false + INDEX _ NOT _ FOUND ; continue ; }
rank: 345
score: 98.63109588623047
patch: continue ; } return j ; }
rank: 345
score: 98.62953016493056
patch: continue ; default : break ; } ;
rank: 345
score: 98.61925506591797
patch: return 1 ; } catch ; }
rank: 345
score: 98.51252746582031
patch: continue true ; break ; } }
rank: 345
score: 98.40431043836806
patch: out . append ( continue ) ; }
rank: 345
score: 98.27982330322266
patch: continue ; if continue ; false ;
rank: 346
score: 98.85063032670455
patch: return INDEX _ NOT _ FOUND ; } * /
rank: 346
score: 98.84701772836539
patch: path = cs . char CaMeL At ( j ) ; }
rank: 346
score: 98.80562337239583
patch: continue public int index CaMeL Of CaMeL Any CaMeL But (
rank: 346
score: 98.62962341308594
patch: return i ; } return 0 ;
rank: 346
score: 98.62943725585937
patch: continue ; } } continue ; } continue ;
rank: 346
score: 98.61795479910714
patch: continue ; } catch ; ;
rank: 346
score: 98.51231553819444
patch: col . append ( ch ) ; }
rank: 346
score: 98.40174696180556
patch: continue ; / finally ; if continue ;
rank: 346
score: 98.27849578857422
patch: continue ; if continue ; if ;
rank: 347
score: 98.84699041193181
patch: start = INDEX _ NOT _ FOUND ; continue ;
rank: 347
score: 98.80506310096153
patch: return search CaMeL Chars [ j ] + ch . length ;
rank: 347
score: 98.70765380859375
patch: list . return INDEX _ NOT _ FOUND ;
rank: 347
score: 98.62937927246094
patch: ch ++ ; break ; } }
rank: 347
score: 98.62871704101562
patch: search CaMeL Chars [ j ] = continue ;
rank: 347
score: 98.61663818359375
patch: { continue ; } } }
rank: 347
score: 98.51155090332031
patch: completed = true ; break ; }
rank: 347
score: 98.40158081054688
patch: continue ; continue ; / else {
rank: 347
score: 98.27846854073661
patch: break ; ; if continue ;
rank: 348
score: 98.84629603794643
patch: buffer . char CaMeL At ( j ) ; } return i ;
rank: 348
score: 98.8042879971591
patch: return search CaMeL Chars [ i ] . length ;
rank: 348
score: 98.70762125651042
patch: found = INDEX _ NOT _ FOUND ; return i ;
rank: 348
score: 98.62936401367188
patch: return continue ; } else { continue ; }
rank: 348
score: 98.62710571289062
patch: search CaMeL Len = j - 1 ; }
rank: 348
score: 98.61566162109375
patch: continue ; } else ; } }
rank: 348
score: 98.27644566127232
patch: continue ; continue ; / /
rank: 349
score: 98.84605994591347
patch: buffer . char CaMeL At ( j ) ; continue ; }
rank: 349
score: 98.62930636935764
patch: continue ; } while ( continue ; }
rank: 349
score: 98.62687852647569
patch: return to CaMeL String ( ch ) ;
rank: 349
score: 98.51034884982639
patch: style = 0 ; break ; } }
rank: 349
score: 98.400390625
patch: out . arraycopy continue continue ;
rank: 349
score: 98.27535574776786
patch: outer ; continue ; continue ;
rank: 350
score: 98.84500826322116
patch: start = cs . char CaMeL At ( j ) ; }
rank: 350
score: 98.8407870205966
patch: search CaMeL Chars [ j ] ( cs ) ;
rank: 350
score: 98.70389811197917
patch: object = cs . char CaMeL At ( i ) ;
rank: 350
score: 98.62848578559027
patch: search CaMeL Len ; continue ; } }
rank: 350
score: 98.6266845703125
patch: return false ; }
rank: 350
score: 98.61466471354167
patch: return ++ 1 ; } } continue ;
rank: 350
score: 98.509521484375
patch: out . append ( $STRING$ ) ; }
rank: 350
score: 98.4002685546875
patch: return 0 ; break ; if continue ;
rank: 350
score: 98.26590983072917
patch: outer ; ; continue ;
rank: 351
score: 98.84425048828125
patch: k = search CaMeL Chars [ j ] ;
rank: 351
score: 98.80219060724431
patch: replace CaMeL Chars [ j ] = ch ; }
rank: 351
score: 98.70259232954545
patch: table . char CaMeL At ( j ) ; }
rank: 351
score: 98.62666151258681
patch: continue ; } } if ( ! ;
rank: 351
score: 98.62590026855469
patch: return false ; } return i ;
rank: 351
score: 98.61456298828125
patch: continue [ 1 ] ; } else
rank: 351
score: 98.50870090060764
patch: continue 1 ; } else if ( ;
rank: 351
score: 98.40010288783482
patch: continue ; / / continue ;
rank: 352
score: 98.70222778320313
patch: Arrays . is CaMeL Empty ( cs ) ;
rank: 352
score: 98.62566528320312
patch: char [ ] search CaMeL Chars = { ch
rank: 352
score: 98.62557983398438
patch: continue ; } } return index CaMeL Of ;
rank: 352
score: 98.40008544921875
patch: logger . arraycopy ( continue ) ;
rank: 352
score: 98.26386369977679
patch: continue ; continue ; while ;
rank: 353
score: 98.84363664899554
patch: base = cs . char CaMeL At ( j ) ; continue ;
rank: 353
score: 98.8384676846591
patch: if ( INDEX _ NOT _ FOUND ) continue ;
rank: 353
score: 98.80164683948864
patch: search CaMeL Len ++ ; search CaMeL Len ++ ;
rank: 353
score: 98.7019755045573
patch: id = cs . char CaMeL At ( j ) ;
rank: 353
score: 98.62468610491071
patch: found ; break ; } }
rank: 353
score: 98.61402130126953
patch: continue ; } } } if ;
rank: 353
score: 98.39998953683036
patch: } * * / continue ;
rank: 353
score: 98.26233927408855
patch: continue ; ; false ;
rank: 354
score: 98.84349646935097
patch: cs . char CaMeL At ( j ) ; break ; }
rank: 354
score: 98.83570445667614
patch: switch ( search CaMeL Chars [ j ] ) {
rank: 354
score: 98.701904296875
patch: tmp = cs . index CaMeL Of ( ch ) ;
rank: 354
score: 98.62491861979167
patch: return cs CaMeL Len - j ; }
rank: 354
score: 98.62449137369792
patch: continue ; ; } else continue ; }
rank: 354
score: 98.61319986979167
patch: continue ; } } continue ; continue ;
rank: 354
score: 98.50820486886161
patch: break ; } if ( ;
rank: 354
score: 98.39990234375
patch: break ; } continue ; if continue ;
rank: 355
score: 98.70069580078125
patch: expression = INDEX _ NOT _ FOUND ; }
rank: 355
score: 98.62443712022569
patch: continue ; } ; } return count ;
rank: 355
score: 98.6129862467448
patch: return 1 ; } else
rank: 355
score: 98.50801849365234
patch: break false ; } continue ; }
rank: 355
score: 98.39943440755208
patch: continue ; / else { while continue ;
rank: 356
score: 98.83382568359374
patch: cs . index CaMeL Of ( ch ) ;
rank: 356
score: 98.80087280273438
patch: continue || search CaMeL Chars [ i ] == ch ;
rank: 356
score: 98.69978841145833
patch: qname = cs . char CaMeL At ( i ) ;
rank: 356
score: 98.62407769097223
patch: continue ; } if ; } continue ;
rank: 356
score: 98.62274169921875
patch: INDEX _ NOT _ FOUND = ++ j ;
rank: 356
score: 98.6129150390625
patch: return 0 ; } ; } continue ;
rank: 356
score: 98.50796169704861
patch: false = true ; break ; } }
rank: 356
score: 98.260009765625
patch: continue ; ; return continue ;
rank: 357
score: 98.79905348557692
patch: return search CaMeL Chars [ i ] + search CaMeL Len ;
rank: 357
score: 98.6995849609375
patch: b = search CaMeL Chars [ j ] ; }
rank: 357
score: 98.62400512695312
patch: continue ; } } finally { continue ; }
rank: 357
score: 98.62263319227431
patch: return length ; } } return i ;
rank: 357
score: 98.61265563964844
patch: continue ; } else * * /
rank: 357
score: 98.50780487060547
patch: ret = 0 ; break ; }
rank: 357
score: 98.39912923177083
patch: continue * continue ] ;
rank: 357
score: 98.25882568359376
patch: true ; continue ;
rank: 358
score: 98.84068952287946
patch: ! search CaMeL Chars [ j ] . equals ( ch ) ;
rank: 358
score: 98.69838460286458
patch: row = cs . char CaMeL At ( j ) ;
rank: 358
score: 98.62328338623047
patch: found -- ; break ; } }
rank: 358
score: 98.6217041015625
patch: index CaMeL Of ( ch ) ; }
rank: 358
score: 98.61226399739583
patch: return 1 ; } } return continue ;
rank: 358
score: 98.50577545166016
patch: continue ; } if ( true )
rank: 358
score: 98.39896065848214
patch: continue ; / while continue ;
rank: 358
score: 98.25688825334821
patch: continue ; ; else continue ;
rank: 359
score: 98.83986118861607
patch: tmp = cs . char CaMeL At ( j ) ; continue ;
rank: 359
score: 98.69807942708333
patch: += search CaMeL Chars [ j ] ;
rank: 359
score: 98.62159423828125
patch: continue char CaMeL At ( j ) ; }
rank: 359
score: 98.61176893446181
patch: return 0 ; } } continue ; }
rank: 359
score: 98.50570339626736
patch: count ++ ; break false ; } }
rank: 359
score: 98.39889187282986
patch: } else { continue ; if continue ;
rank: 359
score: 98.25626046316964
patch: if ; = ; continue ;
rank: 360
score: 98.83058860085227
patch: return search CaMeL Chars [ char CaMeL At ] ;
rank: 360
score: 98.79668634588069
patch: return count + search CaMeL Chars [ j ] ;
rank: 360
score: 98.6980692545573
patch: temp = cs . char CaMeL At ( i ) ;
rank: 360
score: 98.62256537543402
patch: c = continue ; break ; } }
rank: 360
score: 98.62073364257813
patch: search CaMeL Chars [ i ] = null ;
rank: 360
score: 98.61134556361607
patch: return $NUMBER$ ; } } }
rank: 360
score: 98.50482177734375
patch: loop ++ ; break ; } }
rank: 360
score: 98.39888763427734
patch: else { continue ; break ; }
rank: 360
score: 98.25274658203125
patch: return - ] ; break ;
rank: 361
score: 98.83921595982143
patch: b = cs . char CaMeL At ( j ) ; continue ;
rank: 361
score: 98.83001154119319
patch: search CaMeL Len = 0 ; } return i ;
rank: 361
score: 98.79461669921875
patch: continue . to CaMeL String ( ) ;
rank: 361
score: 98.69774373372395
patch: font = cs . char CaMeL At ( i ) ;
rank: 361
score: 98.62248011997768
patch: continue ; * / ; }
rank: 361
score: 98.61021423339844
patch: continue ; } else = false ;
rank: 361
score: 98.5047836303711
patch: continue ; continue - 1 ; }
rank: 361
score: 98.3963623046875
patch: continue * ;
rank: 362
score: 98.83873639787946
patch: text = cs . char CaMeL At ( j ) ; continue ;
rank: 362
score: 98.7941006747159
patch: continue search CaMeL Chars [ j ] == ch ;
rank: 362
score: 98.69668579101562
patch: word = cs . char CaMeL At ( j ) ;
rank: 362
score: 98.6219253540039
patch: continue ; } ; } while ;
rank: 362
score: 98.61785210503473
patch: cs CaMeL Len = j + 0 ;
rank: 362
score: 98.61004638671875
patch: result [ i ] = continue ;
rank: 362
score: 98.50432586669922
patch: assert false ; break ; } }
rank: 362
score: 98.39607747395833
patch: continue ; / ; { if continue ;
rank: 362
score: 98.24578094482422
patch: continue ; else
rank: 363
score: 98.82773844401042
patch: return ( INDEX _ NOT _ FOUND ;
rank: 363
score: 98.79348754882812
patch: continue return search CaMeL Chars [ i ] ;
rank: 363
score: 98.69558715820312
patch: bundle = cs . char CaMeL At ( j ) ;
rank: 363
score: 98.61003112792969
patch: return 1 ; } } catch ;
rank: 363
score: 98.5040283203125
patch: count -- ; } break ; }
rank: 363
score: 98.39570448133681
patch: return - 1 ; continue - 1 ;
rank: 363
score: 98.24399820963542
patch: continue ; continue ; try
rank: 364
score: 98.83835274832589
patch: return ( i . char CaMeL At ( j ) ) ; }
rank: 364
score: 98.8275146484375
patch: sb . char CaMeL At ( j ) ; }
rank: 364
score: 98.79312896728516
patch: continue search CaMeL Chars [ j ]
rank: 364
score: 98.62129041883681
patch: continue ; break ; break ; } }
rank: 364
score: 98.61735026041667
patch: cs [ j ] = ch ; }
rank: 364
score: 98.60894775390625
patch: continue ; } } { continue ;
rank: 364
score: 98.39496527777777
patch: if null . continue ; continue ; ;
rank: 364
score: 98.24217006138393
patch: continue continue ; if continue ;
rank: 365
score: 98.83730844350961
patch: ! search CaMeL Chars [ j ] . length ( ) ;
rank: 365
score: 98.69533284505208
patch: ret = INDEX _ NOT _ FOUND ; break ; }
rank: 365
score: 98.62080383300781
patch: char ch = ; break ; }
rank: 365
score: 98.61715359157986
patch: INDEX _ NOT _ FOUND = 1 ;
rank: 365
score: 98.60789659288194
patch: break ; } } catch ; continue ;
rank: 365
score: 98.50309753417969
patch: if ( ; break ; } }
rank: 365
score: 98.23933919270833
patch: continue ; break ; ;
rank: 366
score: 98.83727155412946
patch: return ( cs . char CaMeL At ( j ] ) ) ;
rank: 366
score: 98.69475708007812
patch: return j ; }
rank: 366
score: 98.62057931082589
patch: pos ; break ; } }
rank: 366
score: 98.61705780029297
patch: cs CaMeL Len = i ; }
rank: 366
score: 98.60714285714286
patch: return 1 ; } else ;
rank: 366
score: 98.50304412841797
patch: continue ; i -- ; } }
rank: 366
score: 98.39476860894098
patch: break ; continue ; } if continue ;
rank: 367
score: 98.8369369506836
patch: return j ;
rank: 367
score: 98.79165649414062
patch: return this . index CaMeL Of CaMeL Any CaMeL But ;
rank: 367
score: 98.69468180338542
patch: string = cs . char CaMeL At ( j ) ;
rank: 367
score: 98.62020874023438
patch: return - 1 ; } } ;
rank: 367
score: 98.60659790039062
patch: return 0 ; } catch continue ;
rank: 367
score: 98.3935317993164
patch: continue continue ; } continue ; int
rank: 367
score: 98.231689453125
patch: / if continue ; continue ;
rank: 368
score: 98.8236572265625
patch: sb . char CaMeL At ( j ) ;
rank: 368
score: 98.69454956054688
patch: impl . index CaMeL Of CaMeL Any ( ch ) ;
rank: 368
score: 98.61982073102679
patch: continue ; ; } else {
rank: 368
score: 98.61556667751736
patch: System . [ j ] = ch ;
rank: 368
score: 98.60658482142857
patch: return 1 ; } ; }
rank: 368
score: 98.50267682756696
patch: continue - 1 ; } else
rank: 368
score: 98.3910903930664
patch: return * 1 ; if continue ;
rank: 368
score: 98.23151506696429
patch: if continue ; ; break ;
rank: 369
score: 98.69381103515624
patch: field = INDEX _ NOT _ FOUND ; }
rank: 369
score: 98.61942138671876
patch: found = true ; break ; } } }
rank: 369
score: 98.60512288411458
patch: return 1 ; continue ; } continue ;
rank: 369
score: 98.50236511230469
patch: completed ++ ; break ; } }
rank: 369
score: 98.39090304904514
patch: continue ; / / * / continue ;
rank: 369
score: 98.23036411830357
patch: for ; continue ; break ;
rank: 370
score: 98.822705078125
patch: return search CaMeL Chars . size ( ) ;
rank: 370
score: 98.78949584960938
patch: continue search CaMeL Chars [ j ] ) ;
rank: 370
score: 98.69370524088542
patch: Arrays . is CaMeL Empty ( search CaMeL Chars ) )
rank: 370
score: 98.61797485351562
patch: continue ; } else { break ; ; }
rank: 370
score: 98.611328125
patch: return null ; } } return i ;
rank: 370
score: 98.60507202148438
patch: continue ; } catch continue ; }
rank: 370
score: 98.50203450520833
patch: finished = true ; break ; } }
rank: 370
score: 98.39025115966797
patch: continue - 1 ; break ; {
rank: 370
score: 98.22779337565105
patch: if continue ; break ;
rank: 371
score: 98.834228515625
patch: search CaMeL Chars [ j ] += ch ;
rank: 371
score: 98.8209228515625
patch: System . index CaMeL Of ( ch ) ;
rank: 371
score: 98.78605821397569
patch: continue char CaMeL At ( j ) ;
rank: 371
score: 98.6921142578125
patch: entry = INDEX _ NOT _ FOUND ; }
rank: 371
score: 98.61771647135417
patch: pos ++ ; break ; } ; }
rank: 371
score: 98.61107042100694
patch: return cs CaMeL Len + j ; }
rank: 371
score: 98.60425567626953
patch: ret ; * * * * /
rank: 371
score: 98.50201416015625
patch: break 1 ; } continue 1 ; }
rank: 371
score: 98.38958740234375
patch: throw new Interrupted CaMeL Exception ( ; {
rank: 371
score: 98.22433907645089
patch: outer ; ; ; continue ;
rank: 372
score: 98.78495958116319
patch: sb . add ( ch ) ; }
rank: 372
score: 98.69154866536458
patch: value = cs . char CaMeL At ( i ) ;
rank: 372
score: 98.60416666666667
patch: continue ; } else = false ; }
rank: 372
score: 98.50100708007812
patch: removed = false ; break ; }
rank: 372
score: 98.38867950439453
patch: break ; / else { continue ;
rank: 372
score: 98.22370147705078
patch: for continue ;
rank: 373
score: 98.83355102539062
patch: result = search CaMeL Chars [ i ] ;
rank: 373
score: 98.81922149658203
patch: throw new int [ 0 ] ;
rank: 373
score: 98.78490193684895
patch: search CaMeL Len -- ;
rank: 373
score: 98.6913553873698
patch: decl = cs . char CaMeL At ( j ) ;
rank: 373
score: 98.60795593261719
patch: continue ; } j = i ;
rank: 373
score: 98.5007553100586
patch: break count - 1 ; } }
rank: 373
score: 98.38749186197917
patch: continue - 1 ; if continue 1 ;
rank: 373
score: 98.22339739118304
patch: break ; continue ; break ;
rank: 374
score: 98.83317565917969
patch: buffer [ j ] = ch ;
rank: 374
score: 98.78421359592014
patch: return replace CaMeL Chars [ j ] ;
rank: 374
score: 98.69090779622395
patch: break ; break ; }
rank: 374
score: 98.6165771484375
patch: continue ; } if ( ch == ;
rank: 374
score: 98.60723114013672
patch: new [ i ] = ch ;
rank: 374
score: 98.6033706665039
patch: throw null ; } continue ; }
rank: 374
score: 98.50067138671875
patch: result [ i ] = continue ; }
rank: 374
score: 98.38743591308594
patch: list . arraycopy ( continue ) ;
rank: 374
score: 98.22207205636161
patch: continue ; break ; continue ;
rank: 375
score: 98.690673828125
patch: q = cs . char CaMeL At ( i ) ;
rank: 375
score: 98.60712432861328
patch: return search CaMeL Len ; } }
rank: 375
score: 98.60247039794922
patch: * * * * ; continue ;
rank: 375
score: 98.5006332397461
patch: continue ; break true ; } }
rank: 375
score: 98.38701714409723
patch: return continue ; / / * continue ;
rank: 375
score: 98.22110421316964
patch: continue ; continue ; * /
rank: 376
score: 98.81873779296875
patch: return new char [ cs CaMeL Len ] ;
rank: 376
score: 98.78230794270833
patch: ch = cs . to CaMeL String ( ) ; }
rank: 376
score: 98.68990071614583
patch: definition = cs . char CaMeL At ( j ) ;
rank: 376
score: 98.6162841796875
patch: continue continue ; } continue ; } continue ;
rank: 376
score: 98.60626898871527
patch: cs CaMeL Len = j + 1 ;
rank: 376
score: 98.60228620256696
patch: continue ; } * * /
rank: 376
score: 98.50020599365234
patch: return - 1 ; } ; }
rank: 376
score: 98.38676452636719
patch: try { continue ; return continue ;
rank: 376
score: 98.22092982700893
patch: if continue ; } continue ;
rank: 377
score: 98.83273550180289
patch: d = cs . char CaMeL At ( j ) ; }
rank: 377
score: 98.6895039876302
patch: other = cs . char CaMeL At ( i ) ;
rank: 377
score: 98.61599295479911
patch: continue ; continue ; } }
rank: 377
score: 98.60597737630208
patch: return get CaMeL Value ( j ) ;
rank: 377
score: 98.60201263427734
patch: return 0 - 0 ; } }
rank: 377
score: 98.50010850694444
patch: continue ; } case $STRING$ : break ;
rank: 377
score: 98.21943010602679
patch: continue ; continue ; out ;
rank: 378
score: 98.83049665178571
patch: param = cs . char CaMeL At ( j ) ; continue ;
rank: 378
score: 98.68909708658855
patch: switch ( cs . char CaMeL At ( i ) )
rank: 378
score: 98.61539306640626
patch: pos ++ ; break ; } } continue ;
rank: 378
score: 98.60569932725694
patch: continue INDEX _ NOT _ FOUND ; ;
rank: 378
score: 98.50010172526042
patch: ret = 1 ; break ; } }
rank: 378
score: 98.38594055175781
patch: try { continue ; if continue ;
rank: 378
score: 98.21697998046875
patch: continue ; ; * ;
rank: 379
score: 98.83035714285714
patch: str = cs . char CaMeL At ( j ) ; continue ;
rank: 379
score: 98.77964089133523
patch: return $STRING$ + search CaMeL Chars [ j ] ;
rank: 379
score: 98.68839518229167
patch: res = INDEX _ NOT _ FOUND ; break ; }
rank: 379
score: 98.61535034179687
patch: search CaMeL Len = continue ; break ; }
rank: 379
score: 98.60092502170139
patch: break ; } else if continue ; }
rank: 379
score: 98.49974060058594
patch: break true ; break true ; }
rank: 379
score: 98.38592529296875
patch: continue * ; } continue - 1 ;
rank: 379
score: 98.2155253092448
patch: if ; ; continue ;
rank: 380
score: 98.83015659877232
patch: search CaMeL Chars [ j ] = search CaMeL Len ; } }
rank: 380
score: 98.8157958984375
patch: return search CaMeL Chars [ ch ] ;
rank: 380
score: 98.77951049804688
patch: continue || search CaMeL Chars [ j ] == ch )
rank: 380
score: 98.68810424804687
patch: r = INDEX _ NOT _ FOUND ; }
rank: 380
score: 98.60485076904297
patch: return false ; } j ++ ;
rank: 380
score: 98.60054016113281
patch: return value [ i ] ; }
rank: 380
score: 98.38526746961806
patch: return continue ; ; } if continue ;
rank: 380
score: 98.21353585379464
patch: continue ; if ; break ;
rank: 381
score: 98.82994384765625
patch: search CaMeL Chars [ j ] = name ;
rank: 381
score: 98.77880859375
patch: continue char CaMeL At ( j + 1 ) ;
rank: 381
score: 98.68758138020833
patch: path = cs . char CaMeL At ( i ) ;
rank: 381
score: 98.49967193603516
patch: break true ; break false ; }
rank: 381
score: 98.38510567801339
patch: continue = continue ; break ;
rank: 382
score: 98.82955932617188
patch: break ; } } return cs . length ;
rank: 382
score: 98.60025460379464
patch: return * 1 ; } }
rank: 382
score: 98.38451131184895
patch: return continue + 0 ;
rank: 382
score: 98.20987374441964
patch: continue ; continue ; = ;
rank: 383
score: 98.82952880859375
patch: path = search CaMeL Chars [ j ] ;
rank: 383
score: 98.81371392144098
patch: if ( search CaMeL Chars [ j ]
rank: 383
score: 98.7783203125
patch: return char CaMeL At ( j + 1 ) ;
rank: 383
score: 98.68565784801136
patch: tmp = INDEX _ NOT _ FOUND ; continue ;
rank: 383
score: 98.61448160807292
patch: continue ; } ; } if ( ;
rank: 383
score: 98.60293579101562
patch: return $STRING$ ; } j ++ ;
rank: 383
score: 98.60025363498264
patch: return ; ; } } } continue ;
rank: 383
score: 98.49954223632812
patch: n -- ; break ; } }
rank: 383
score: 98.2076924641927
patch: if ; continue ; ;
rank: 384
score: 98.77821044921875
patch: continue search CaMeL Chars [ j ] 1 ;
rank: 384
score: 98.68560236150569
patch: Arrays . is CaMeL Empty ( cs ) ; }
rank: 384
score: 98.61412811279297
patch: continue ; } ; } break ;
rank: 384
score: 98.5997543334961
patch: break ; } } else if ;
rank: 384
score: 98.59868706597223
patch: l = INDEX _ NOT _ FOUND ;
rank: 384
score: 98.49903869628906
patch: continue ] ; } break ; }
rank: 384
score: 98.38347032335069
patch: -- continue ; } else { continue ;
rank: 385
score: 98.82863071986607
patch: s = cs . char CaMeL At ( j ) ; break ;
rank: 385
score: 98.77777709960938
patch: continue - search CaMeL Chars [ j ] ;
rank: 385
score: 98.68497924804687
patch: v = search CaMeL Chars [ j ] ;
rank: 385
score: 98.61245727539062
patch: return j ; } break ; }
rank: 385
score: 98.59942626953125
patch: return 0 ; } else continue ;
rank: 385
score: 98.59806993272569
patch: return index CaMeL Of ( cs ) ;
rank: 385
score: 98.49884033203125
patch: continue true ; } break ;
rank: 385
score: 98.38344319661458
patch: char continue ; continue ;
rank: 385
score: 98.20526123046875
patch: if false ; ; continue ;
rank: 386
score: 98.81051635742188
patch: else { return INDEX _ NOT _ FOUND ;
rank: 386
score: 98.775146484375
patch: continue search CaMeL Chars [ j ] : i ;
rank: 386
score: 98.61240234375
patch: continue ; ; } else { break ; }
rank: 386
score: 98.5989990234375
patch: continue ; } else if ; ; }
rank: 386
score: 98.59796820746527
patch: search CaMeL Len = j ; } }
rank: 386
score: 98.3834228515625
patch: start continue ; } continue ;
rank: 386
score: 98.20333426339286
patch: continue ; continue ; log ;
rank: 387
score: 98.82801231971153
patch: l = cs . char CaMeL At ( j ) ; }
rank: 387
score: 98.80999200994319
patch: cs . char CaMeL At ( j ] ) ;
rank: 387
score: 98.77425130208333
patch: char ch = cs . char CaMeL At ( i )
rank: 387
score: 98.68220658735795
patch: res = INDEX _ NOT _ FOUND ; } }
rank: 387
score: 98.59894670758929
patch: continue ; * * * /
rank: 387
score: 98.49852752685547
patch: count ++ ; break ; } ;
rank: 387
score: 98.38338797433036
patch: * continue ; } continue ;
rank: 388
score: 98.8279278094952
patch: result += cs . char CaMeL At ( j ) ; }
rank: 388
score: 98.80952758789063
patch: for ( int j = search CaMeL Chars .
rank: 388
score: 98.68118896484376
patch: end = search CaMeL Chars . length ; }
rank: 388
score: 98.61200714111328
patch: return j ; break ; } }
rank: 388
score: 98.59853786892361
patch: } else { continue ; } continue ;
rank: 388
score: 98.59575737847223
patch: return 1 ; } } return 0 ;
rank: 388
score: 98.49830845424107
patch: assert true ; break ; }
rank: 388
score: 98.38320583767361
patch: continue ; / / / ; continue ;
rank: 388
score: 98.19376046316964
patch: continue ; continue ; ; *
rank: 389
score: 98.61096954345703
patch: return i ; } continue ; }
rank: 389
score: 98.59821319580078
patch: return 1 ; } ; } }
rank: 389
score: 98.49790954589844
patch: break value [ j ] ; }
rank: 389
score: 98.3831787109375
patch: j * * continue ; if continue ;
rank: 389
score: 98.19172014508929
patch: break ; if ; continue ;
rank: 390
score: 98.82609340122768
patch: n = cs . char CaMeL At ( j ) ; continue ;
rank: 390
score: 98.80600314670139
patch: search CaMeL Len = search CaMeL Len ;
rank: 390
score: 98.67934841579861
patch: expr = INDEX _ NOT _ FOUND ;
rank: 390
score: 98.61035834418402
patch: pos ++ ; break ; } } ;
rank: 390
score: 98.59818522135417
patch: return * 1 ; } } continue ;
rank: 390
score: 98.59315490722656
patch: return length ; } j ++ ;
rank: 390
score: 98.49774169921875
patch: break ; } default : break ; }
rank: 390
score: 98.38301086425781
patch: continue = continue ; if continue ;
rank: 390
score: 98.19053431919643
patch: continue ; else ; continue ;
rank: 391
score: 98.80537553267045
patch: return search CaMeL Chars . size ( ) ; }
rank: 391
score: 98.7685546875
patch: continue } return search CaMeL Chars [ j ] ;
rank: 391
score: 98.67902166193181
patch: c = search CaMeL Chars [ j ] ; }
rank: 391
score: 98.60984293619792
patch: binding = j ; break ; } }
rank: 391
score: 98.59798431396484
patch: continue ; } else ; if ;
rank: 391
score: 98.59274631076389
patch: search CaMeL Len = j - 0 ;
rank: 391
score: 98.38296847873264
patch: return continue ; } if continue ; ;
rank: 391
score: 98.18712158203125
patch: System ; continue ;
rank: 392
score: 98.82548522949219
patch: buf [ j ] = ch ;
rank: 392
score: 98.76637961647727
patch: return search CaMeL Chars [ j ] : i ;
rank: 392
score: 98.60962524414063
patch: continue true ; } else { continue ; }
rank: 392
score: 98.59769439697266
patch: continue * $NUMBER$ ; } continue ;
rank: 392
score: 98.59115164620536
patch: return size ( ) ; }
rank: 392
score: 98.49735514322917
patch: output . append ( $STRING$ ) ; }
rank: 392
score: 98.3829345703125
patch: continue - 0 ; if continue ;
rank: 392
score: 98.18408203125
patch: if continue ; if continue ;
rank: 393
score: 98.67604758522727
patch: while ( j < search CaMeL Chars . length )
rank: 393
score: 98.6087646484375
patch: continue ; ; break ; } }
rank: 393
score: 98.5976333618164
patch: return 1 ; } catch ; ;
rank: 393
score: 98.58775329589844
patch: continue i ; } j ++ ;
rank: 393
score: 98.49664306640625
patch: level ++ ; break ; } }
rank: 393
score: 98.38177490234375
patch: continue ; / next if continue ;
rank: 393
score: 98.18122209821429
patch: if continue ; continue ; ;
rank: 394
score: 98.75907592773437
patch: return search CaMeL Chars [ j ] } ;
rank: 394
score: 98.67319064670139
patch: expression = INDEX _ NOT _ FOUND ;
rank: 394
score: 98.60789794921875
patch: continue ; default : break ; } ; }
rank: 394
score: 98.59741889105902
patch: continue * 1 ; } } continue ;
rank: 394
score: 98.5876693725586
patch: return null ; } return i ;
rank: 394
score: 98.38148328993056
patch: continue ; / / / ; break ;
rank: 394
score: 98.18108367919922
patch: throw continue ;
rank: 395
score: 98.824462890625
patch: return ( i ? INDEX _ NOT _ FOUND : i ) ;
rank: 395
score: 98.75759055397727
patch: result = i + INDEX _ NOT _ FOUND ;
rank: 395
score: 98.67270729758523
patch: += cs . char CaMeL At ( j ) ;
rank: 395
score: 98.60781424386161
patch: match ; continue ; } }
rank: 395
score: 98.59650336371527
patch: continue ; } } if ; * /
rank: 395
score: 98.5875244140625
patch: return true ; } } return i ;
rank: 395
score: 98.4962158203125
patch: end -- ; break ; } }
rank: 395
score: 98.38075256347656
patch: buf . next ( ; continue ;
rank: 395
score: 98.17799595424107
patch: break ; continue ; continue ;
rank: 396
score: 98.82438829210069
patch: ex = INDEX _ NOT _ FOUND ;
rank: 396
score: 98.80229048295455
patch: return INDEX _ NOT _ FOUND ; } } return
rank: 396
score: 98.671533203125
patch: curr = INDEX _ NOT _ FOUND ; }
rank: 396
score: 98.60760498046875
patch: continue ; * / ; } }
rank: 396
score: 98.59569634331598
patch: return 0 ; continue ; } continue ;
rank: 396
score: 98.58663940429688
patch: cs CaMeL Len ++ ; } }
rank: 396
score: 98.4949951171875
patch: done = true ; break ; }
rank: 396
score: 98.38014051649306
patch: continue continue ; } else { break ;
rank: 396
score: 98.17724609375
patch: return ( continue ; continue ;
rank: 397
score: 98.8234393780048
patch: buffer . char CaMeL At ( j ) ; return i ;
rank: 397
score: 98.8016845703125
patch: return search CaMeL Chars [ j i ] ;
rank: 397
score: 98.66996459960937
patch: start = INDEX _ NOT _ FOUND ; }
rank: 397
score: 98.60718536376953
patch: continue continue ; break ; } }
rank: 397
score: 98.58654022216797
patch: return new char [ 0 ] ;
rank: 397
score: 98.49494764539931
patch: pos ++ ; break ; } break ;
rank: 397
score: 98.38005913628473
patch: / * ] continue ; if continue ;
rank: 398
score: 98.82297926682692
patch: ret = cs . char CaMeL At ( j ) ; }
rank: 398
score: 98.7540771484375
patch: } return search CaMeL Chars [ i ] ;
rank: 398
score: 98.66837565104167
patch: size = search CaMeL Chars . length ;
rank: 398
score: 98.60567898220486
patch: continue ; } } while ( ; )
rank: 398
score: 98.58639187282986
patch: search CaMeL Len = j - 1 ;
rank: 398
score: 98.4948959350586
patch: continue ; } break ; default :
rank: 398
score: 98.17647298177083
patch: continue ; ; true ;
rank: 399
score: 98.80024857954545
patch: x = search CaMeL Chars [ j ] ; }
rank: 399
score: 98.75344016335227
patch: break ( search CaMeL Chars [ j ] ) ;
rank: 399
score: 98.6679443359375
patch: n = search CaMeL Chars . length ; }
rank: 399
score: 98.60567220052083
patch: continue ; } if ( ; } ;
rank: 399
score: 98.59384591238839
patch: continue ; = continue ; }
rank: 399
score: 98.58526611328125
patch: static [ j ] = ch ;
rank: 399
score: 98.49432373046875
patch: removed = true ; continue ; }
rank: 399
score: 98.37982177734375
patch: else { continue ; } if continue ;
rank: 399
score: 98.17640177408855
patch: return continue ; break ;
rank: 400
score: 98.75200861150569
patch: return count - search CaMeL Chars [ i ] ;
rank: 400
score: 98.666748046875
patch: return INDEX _ NOT _ FOUND ; break ; }
rank: 400
score: 98.6056137084961
patch: break ; } } } return ;
rank: 400
score: 98.59332275390625
patch: { break ; } } continue ;
rank: 400
score: 98.58511691623264
patch: return ! INDEX _ NOT _ FOUND ;
rank: 400
score: 98.4935302734375
patch: continue - 1 ; break 1 ; }
rank: 400
score: 98.37960476345486
patch: continue ; * ; ; if continue ;
rank: 400
score: 98.17623465401786
patch: continue ; continue ; } /
rank: 401
score: 98.82224343039773
patch: append ( search CaMeL Chars [ j ] ) ;
rank: 401
score: 98.79823996803977
patch: search CaMeL Chars [ j ) ] = ch ;
rank: 401
score: 98.751953125
patch: return search CaMeL Chars [ j ] + $STRING$ ;
rank: 401
score: 98.66660563151042
patch: state = INDEX _ NOT _ FOUND ;
rank: 401
score: 98.60501861572266
patch: continue ; } i -- ; }
rank: 401
score: 98.59173583984375
patch: continue ; } else ; break ;
rank: 401
score: 98.58499908447266
patch: return i ; } i ++ ;
rank: 401
score: 98.49305555555556
patch: continue - 1 ; break true ; }
rank: 401
score: 98.37957000732422
patch: continue ; System . arraycopy continue ;
rank: 401
score: 98.1758524576823
patch: outer ; continue ; ;
rank: 402
score: 98.82175903320312
patch: l = search CaMeL Chars [ j ] ;
rank: 402
score: 98.66591186523438
patch: switch ( search CaMeL Chars [ j ] )
rank: 402
score: 98.58473205566406
patch: continue ; } j = 0 ;
rank: 402
score: 98.37931823730469
patch: continue ; continue ; / out ;
rank: 402
score: 98.17579345703125
patch: } ; continue ;
rank: 403
score: 98.74826882102273
patch: result = search CaMeL Chars [ i ] ; }
rank: 403
score: 98.66519165039062
patch: max = search CaMeL Chars . length ; }
rank: 403
score: 98.60462036132813
patch: found = true ; ; break ; } }
rank: 403
score: 98.5916748046875
patch: if ( continue ; break ; } }
rank: 403
score: 98.58392333984375
patch: new [ j ] = ch ;
rank: 403
score: 98.49183654785156
patch: position -- ; break ; } }
rank: 403
score: 98.37881469726562
patch: finally { continue ; break ; ;
rank: 403
score: 98.17567661830357
patch: return * 1 ; break ;
rank: 404
score: 98.82096724076705
patch: continue ; } } } return search CaMeL Len ;
rank: 404
score: 98.7477694424716
patch: return i + search CaMeL Chars [ j ] ;
rank: 404
score: 98.6635498046875
patch: prev = INDEX _ NOT _ FOUND ; }
rank: 404
score: 98.60447474888393
patch: continue ; } * / ;
rank: 404
score: 98.58379364013672
patch: return 0 ; j ++ ; }
rank: 404
score: 98.49116346571181
patch: continue ; } do { break ; }
rank: 404
score: 98.37793731689453
patch: end new continue ; break ; }
rank: 404
score: 98.17336018880208
patch: continue ; { continue ;
rank: 405
score: 98.81951032366071
patch: search CaMeL Chars [ j ] = search CaMeL Chars [ } ;
rank: 405
score: 98.79544067382812
patch: return new char [ search CaMeL Len ] ;
rank: 405
score: 98.74721950954861
patch: break * INDEX _ NOT _ FOUND ;
rank: 405
score: 98.66217041015625
patch: break ; } return i ; }
rank: 405
score: 98.60429551866319
patch: return i ; } else { continue ;
rank: 405
score: 98.5908203125
patch: continue continue ; } } continue ;
rank: 405
score: 98.49072265625
patch: continue false ; } continue true ; }
rank: 405
score: 98.37785121372768
patch: i continue ; } continue ;
rank: 405
score: 98.17204938616071
patch: if continue ; for continue ;
rank: 406
score: 98.81892613002232
patch: s = cs . char CaMeL At ( j ) ; } }
rank: 406
score: 98.65851440429688
patch: limit = search CaMeL Chars . length ; }
rank: 406
score: 98.60427856445312
patch: continue count ; } break ; }
rank: 406
score: 98.59080505371094
patch: continue ; } } else break ;
rank: 406
score: 98.58244493272569
patch: return this ; } } return i ;
rank: 406
score: 98.49039132254464
patch: continue Boolean . TRUE ; }
rank: 406
score: 98.17070661272321
patch: continue ; ; for continue ;
rank: 407
score: 98.81867327008929
patch: name = cs . char CaMeL At ( j ) ; } }
rank: 407
score: 98.79372336647727
patch: System . char CaMeL At ( j ) ; }
rank: 407
score: 98.65764024522569
patch: true = INDEX _ NOT _ FOUND ;
rank: 407
score: 98.60339965820313
patch: continue ; } else { continue ; } ;
rank: 407
score: 98.59048025948661
patch: return [ 1 ] ; }
rank: 407
score: 98.58158111572266
patch: Chars [ j ] = ch ;
rank: 407
score: 98.48994954427083
patch: is CaMeL Empty = true ; break ;
rank: 407
score: 98.37699890136719
patch: } continue ; } continue ; }
rank: 407
score: 98.16748046875
patch: continue ; continue ; this ;
rank: 408
score: 98.8184814453125
patch: search CaMeL Chars [ j ] ++ ;
rank: 408
score: 98.79180908203125
patch: search CaMeL Chars [ ch ] = ch ;
rank: 408
score: 98.74368896484376
patch: continue INDEX _ NOT _ FOUND : i ;
rank: 408
score: 98.65732643821023
patch: += cs . char CaMeL At ( i ) ;
rank: 408
score: 98.60304768880208
patch: found = i ; break ; } }
rank: 408
score: 98.59001813616071
patch: throw new Runtime CaMeL Exception ;
rank: 408
score: 98.58042399088542
patch: return i ; } return i ; }
rank: 408
score: 98.48972574869792
patch: n = 0 ; break ; } }
rank: 408
score: 98.16715785435268
patch: if ; * / continue ;
rank: 409
score: 98.81828962053571
patch: c = cs . char CaMeL At ( j ) ; continue ;
rank: 409
score: 98.7899169921875
patch: i ( search CaMeL Chars [ j ] ) ;
rank: 409
score: 98.73873291015624
patch: return INDEX _ NOT _ FOUND + ch ;
rank: 409
score: 98.6569580078125
patch: true { return INDEX _ NOT _ FOUND ;
rank: 409
score: 98.60304478236607
patch: return i ; } } }
rank: 409
score: 98.58926391601562
patch: return 0 ; } ; continue ;
rank: 409
score: 98.57930755615234
patch: return length ; } return i ;
rank: 409
score: 98.16292027064732
patch: continue ; ; * continue ;
rank: 410
score: 98.81695556640625
patch: if ( INDEX _ NOT _ FOUND == ch ) { continue ;
rank: 410
score: 98.7890292080966
patch: else search CaMeL Chars [ j ] = ch ;
rank: 410
score: 98.73834906684027
patch: status = INDEX _ NOT _ FOUND ;
rank: 410
score: 98.6519775390625
patch: tmp = INDEX _ NOT _ FOUND ; } }
rank: 410
score: 98.5887451171875
patch: throw null ; } } if continue ;
rank: 410
score: 98.57574462890625
patch: return true ; } j ++ ;
rank: 410
score: 98.4886983235677
patch: break 0 ; } }
rank: 410
score: 98.1629130045573
patch: continue ; continue ; *
rank: 411
score: 98.81594848632812
patch: d = search CaMeL Chars [ j ] ;
rank: 411
score: 98.78859252929688
patch: search CaMeL Len = 0 ; return 0 ;
rank: 411
score: 98.7380859375
patch: continue || search CaMeL Chars [ j ] ;
rank: 411
score: 98.65057373046875
patch: len = search CaMeL Chars . length ;
rank: 411
score: 98.57518768310547
patch: return size [ j ] ; }
rank: 411
score: 98.48796844482422
patch: break - 1 ; } } ;
rank: 411
score: 98.37486436631944
patch: continue ; ; ; } if continue ;
rank: 411
score: 98.16203090122768
patch: return ++ continue ; break ;
rank: 412
score: 98.81566162109375
patch: search CaMeL Chars [ j ] = true ;
rank: 412
score: 98.649658203125
patch: break ; } return i ;
rank: 412
score: 98.60239955357143
patch: continue ; } ++ i ;
rank: 412
score: 98.58796522352431
patch: continue ; } else { return ; ;
rank: 412
score: 98.574951171875
patch: return true ; } return i ;
rank: 412
score: 98.48790740966797
patch: col ++ ; break ; } }
rank: 412
score: 98.37411838107639
patch: k * continue ; } if continue ;
rank: 413
score: 98.78462357954545
patch: s = search CaMeL Chars [ j ] ; }
rank: 413
score: 98.64870383522727
patch: found = INDEX _ NOT _ FOUND ; } }
rank: 413
score: 98.60190255301339
patch: continue ; ++ continue ; }
rank: 413
score: 98.58730740017361
patch: continue ; } } else { break ;
rank: 413
score: 98.57459106445313
patch: return length ; }
rank: 413
score: 98.48722076416016
patch: break - 1 ; } else {
rank: 413
score: 98.37392849392361
patch: continue ; * ; / if continue ;
rank: 413
score: 98.15699259440105
patch: break ; continue ; ;
rank: 414
score: 98.81431995738636
patch: search CaMeL Len = cs . size ( ) ;
rank: 414
score: 98.7843505859375
patch: continue : INDEX _ NOT _ FOUND ; }
rank: 414
score: 98.64850616455078
patch: break ; } } return count ;
rank: 414
score: 98.601318359375
patch: return i ; } } continue ;
rank: 414
score: 98.58708953857422
patch: continue ; } } } break ;
rank: 414
score: 98.37382676866319
patch: continue ; / / / / continue ;
rank: 414
score: 98.15692138671875
patch: continue ; ; throw continue ;
rank: 415
score: 98.81352887834821
patch: f = cs . char CaMeL At ( j ) ; continue ;
rank: 415
score: 98.73474731445313
patch: return ch . to CaMeL String ( ) ;
rank: 415
score: 98.58696153428819
patch: continue [ 0 ] ; } continue ;
rank: 415
score: 98.37357875279018
patch: value continue ; } continue ;
rank: 415
score: 98.15501185825893
patch: if ; continue ; false ;
rank: 416
score: 98.7832763671875
patch: System . char CaMeL At ( j ) ;
rank: 416
score: 98.73383123224431
patch: return search CaMeL Chars [ j ] + null ;
rank: 416
score: 98.6464510830966
patch: switch ( search CaMeL Chars . length ( ) )
rank: 416
score: 98.60120391845703
patch: search CaMeL Len ++ ; continue ;
rank: 416
score: 98.57280815972223
patch: return Math . size ( ) ; }
rank: 416
score: 98.48646545410156
patch: break [ j ] ; } }
rank: 416
score: 98.37355041503906
patch: continue ; } continue ; * *
rank: 416
score: 98.1534423828125
patch: outer if continue ; break ;
rank: 417
score: 98.78199462890625
patch: return cs . INDEX _ NOT _ FOUND ;
rank: 417
score: 98.60094451904297
patch: return ; } count ++ ; }
rank: 417
score: 98.56903754340277
patch: throw null ; } } return i ;
rank: 417
score: 98.3735122680664
patch: continue ; int else ( continue ;
rank: 417
score: 98.15055338541667
patch: continue ; append continue ;
rank: 418
score: 98.81098284040179
patch: expr = cs . char CaMeL At ( j ) ; continue ;
rank: 418
score: 98.7334872159091
patch: continue search CaMeL Chars [ j ] = $STRING$ ;
rank: 418
score: 98.64438205295139
patch: end = INDEX _ NOT _ FOUND ;
rank: 418
score: 98.59941270616319
patch: ++ search CaMeL Len ; continue ; }
rank: 418
score: 98.58601209852431
patch: return 0 ; } } return 1 ;
rank: 418
score: 98.56841278076172
patch: return 0 ; } return 1 ;
rank: 418
score: 98.48551432291667
patch: count ++ ; return i ; } }
rank: 418
score: 98.37327745225694
patch: return continue ; } if new continue ;
rank: 418
score: 98.14816284179688
patch: continue ; continue ; set
rank: 419
score: 98.81087820870536
patch: outer = cs . char CaMeL At ( j ) ; continue ;
rank: 419
score: 98.73322143554688
patch: return out . to CaMeL String ( ) ;
rank: 419
score: 98.6443758877841
patch: found = INDEX _ NOT _ FOUND ; continue ;
rank: 419
score: 98.58589935302734
patch: continue ; } else return $NUMBER$ ;
rank: 419
score: 98.56775580512152
patch: ch = INDEX _ NOT _ FOUND ;
rank: 419
score: 98.48533630371094
patch: continue ; } if ( matches )
rank: 419
score: 98.37240600585938
patch: text . add ( continue ) ;
rank: 419
score: 98.1466064453125
patch: continue ; for ; continue ;
rank: 420
score: 98.7809814453125
patch: return ++ search CaMeL Chars [ j ] ;
rank: 420
score: 98.73311767578124
patch: return search CaMeL Len - search CaMeL Len ;
rank: 420
score: 98.64373224431819
patch: answer = INDEX _ NOT _ FOUND ; } }
rank: 420
score: 98.5980453491211
patch: break ; } count ++ ; }
rank: 420
score: 98.56614990234375
patch: return true ; }
rank: 420
score: 98.37136840820312
patch: continue ; * continue ;
rank: 420
score: 98.14462280273438
patch: continue ; ; if ;
rank: 421
score: 98.80778198242187
patch: cs [ cs CaMeL Len ] = ch ;
rank: 421
score: 98.72931518554688
patch: continue INDEX _ NOT _ FOUND * 1 ;
rank: 421
score: 98.64345974392361
patch: result += INDEX _ NOT _ FOUND ;
rank: 421
score: 98.59698486328125
patch: continue ; default : continue ; } ; }
rank: 421
score: 98.58483123779297
patch: * * * * * continue ;
rank: 421
score: 98.56585693359375
patch: return new char [ 0 ] ; }
rank: 421
score: 98.48454284667969
patch: ret -- ; break ; } }
rank: 421
score: 98.37093098958333
patch: return continue + continue ;
rank: 421
score: 98.14208221435547
patch: break ; ;
rank: 422
score: 98.72920057508681
patch: sb . append ( ch ) ; }
rank: 422
score: 98.64168294270833
patch: length = search CaMeL Chars . length ;
rank: 422
score: 98.59642791748047
patch: return ; } } } continue ;
rank: 422
score: 98.5846939086914
patch: break ; } else break ; }
rank: 422
score: 98.56553819444444
patch: return name . length ( ) ; }
rank: 422
score: 98.48421805245536
patch: continue 1 ; break 1 ;
rank: 422
score: 98.37088012695312
patch: } * * / continue ; /
rank: 422
score: 98.14011928013393
patch: result if continue ; break ;
rank: 423
score: 98.72843017578126
patch: search CaMeL Chars [ j ] return i ;
rank: 423
score: 98.64157104492188
patch: break ; } } else
rank: 423
score: 98.58464704241071
patch: continue ; } else { ;
rank: 423
score: 98.56465148925781
patch: return this ; } j ++ ;
rank: 423
score: 98.36964246961806
patch: continue ; / * / if continue ;
rank: 423
score: 98.13990783691406
patch: return null ;
rank: 424
score: 98.72820366753473
patch: buf . add ( ch ) ; }
rank: 424
score: 98.59597778320312
patch: break ; } } else { break ; }
rank: 424
score: 98.58449300130208
patch: continue ; } } else ; continue ;
rank: 424
score: 98.56460571289062
patch: continue ; } return 1 ; }
rank: 424
score: 98.4830322265625
patch: continue ( i + 1 ) ;
rank: 424
score: 98.36918640136719
patch: continue ; int i = continue ;
rank: 424
score: 98.13671875
patch: outer if continue ; continue ;
rank: 425
score: 98.77774483816964
patch: search CaMeL Len = 0 ;
rank: 425
score: 98.6393798828125
patch: search CaMeL Len = cs . length ; }
rank: 425
score: 98.58424207899306
patch: continue ; * * * / continue ;
rank: 425
score: 98.56401231553819
patch: return is CaMeL Empty ( cs ) ;
rank: 425
score: 98.48257882254464
patch: if ( continue ) continue ;
rank: 425
score: 98.36887613932292
patch: else { continue ; }
rank: 425
score: 98.13623046875
patch: continue ; continue ; * ;
rank: 426
score: 98.80355834960938
patch: expr = search CaMeL Chars [ j ] ;
rank: 426
score: 98.72503662109375
patch: } else { search CaMeL Len ++ ; }
rank: 426
score: 98.63832397460938
patch: += INDEX _ NOT _ FOUND ; } }
rank: 426
score: 98.59468841552734
patch: continue continue ; } ; } ;
rank: 426
score: 98.56375122070312
patch: return this ; } return i ;
rank: 426
score: 98.48238796657986
patch: continue - 1 ; } } continue ;
rank: 426
score: 98.36865912543402
patch: list . next ( ; continue ; }
rank: 426
score: 98.13496907552083
patch: continue ; throw continue ;
rank: 427
score: 98.72248979048295
patch: break search CaMeL Chars [ i ] = ch ;
rank: 427
score: 98.63820578835227
patch: tmp = search CaMeL Chars [ j ] ; }
rank: 427
score: 98.58375549316406
patch: continue ] ; } } continue ;
rank: 427
score: 98.56196594238281
patch: tmp [ j ] = ch ;
rank: 427
score: 98.36673736572266
patch: string . append ( continue ) ;
rank: 427
score: 98.13450404575893
patch: continue ; continue ; else ;
rank: 428
score: 98.80303400213069
patch: return cs . to CaMeL String ( ) ; }
rank: 428
score: 98.72236328125
patch: return i . to CaMeL String ( ) ;
rank: 428
score: 98.59406195746527
patch: continue - 1 ; break $NUMBER$ ; }
rank: 428
score: 98.58104112413194
patch: continue ; } else return 0 ; }
rank: 428
score: 98.56127166748047
patch: search CaMeL Len = i ; }
rank: 428
score: 98.48209381103516
patch: break false ; continue false ; }
rank: 428
score: 98.36649867466518
patch: end continue ; } continue ;
rank: 428
score: 98.13372802734375
patch: outer ; continue ; if ;
rank: 429
score: 98.72235107421875
patch: continue ( search CaMeL Chars [ i ] ;
rank: 429
score: 98.58001030815973
patch: continue ; } else { return ; }
rank: 429
score: 98.56117757161458
patch: return - false ; }
rank: 429
score: 98.48204888237848
patch: count ++ ; ; break ; } }
rank: 429
score: 98.36636013454861
patch: continue - 1 ; if continue false ;
rank: 430
score: 98.80215793185764
patch: flags = INDEX _ NOT _ FOUND ;
rank: 430
score: 98.77451171875
patch: return search CaMeL Chars [ j ] 1 ;
rank: 430
score: 98.72172407670455
patch: continue continue + search CaMeL Chars [ j ] ;
rank: 430
score: 98.63651899857955
patch: true return INDEX _ NOT _ FOUND ; } }
rank: 430
score: 98.57991790771484
patch: return 0 ; } } } }
rank: 430
score: 98.56075032552083
patch: cs CaMeL Len = j ; } }
rank: 430
score: 98.48114691840277
patch: continue ; } do { continue ; }
rank: 430
score: 98.36615753173828
patch: super . append ( continue ) ;
rank: 430
score: 98.1283203125
patch: continue ; else ;
rank: 431
score: 98.80199085582386
patch: buf . char CaMeL At ( j ) ; }
rank: 431
score: 98.77299194335937
patch: search CaMeL Len = 0 ; j ++ ;
rank: 431
score: 98.63600852272727
patch: table . index CaMeL Of ( cs ) ; }
rank: 431
score: 98.59333801269531
patch: continue continue ; } if ; }
rank: 431
score: 98.56043158637152
patch: continue index CaMeL Of ( ch ) ;
rank: 431
score: 98.36557345920139
patch: continue ; / / * while continue ;
rank: 431
score: 98.12737165178571
patch: true ; continue ; break ;
rank: 432
score: 98.7989990234375
patch: prop = search CaMeL Chars [ j ] ;
rank: 432
score: 98.72138129340277
patch: buf . append ( ch ) ; }
rank: 432
score: 98.63468794389205
patch: true + INDEX _ NOT _ FOUND ; continue ;
rank: 432
score: 98.5924560546875
patch: continue ; } if ( index CaMeL Of ;
rank: 432
score: 98.48050944010417
patch: continue 0 ; } break 1 ; }
rank: 432
score: 98.36551242404514
patch: continue ; / / / / break ;
rank: 432
score: 98.12672642299107
patch: next false ; ; continue ;
rank: 433
score: 98.79755193536931
patch: search CaMeL Chars [ j ] = $STRING$ ) ;
rank: 433
score: 98.76883544921876
patch: else return INDEX _ NOT _ FOUND ; }
rank: 433
score: 98.63330756293402
patch: found += INDEX _ NOT _ FOUND ;
rank: 433
score: 98.59239501953125
patch: continue ; } } if ( ; continue ;
rank: 433
score: 98.57821994357639
patch: break ; } } else if continue ;
rank: 433
score: 98.55936686197917
patch: return Integer . size ( ) ; }
rank: 433
score: 98.48023986816406
patch: continue ; } if ( is ;
rank: 433
score: 98.36527797154018
patch: j continue ; } continue ;
rank: 433
score: 98.1265640258789
patch: return $NUMBER$ ;
rank: 434
score: 98.7197265625
patch: return search CaMeL Chars [ j ] * ch ;
rank: 434
score: 98.63280029296875
patch: System . arraycopy ( search CaMeL Chars ) ;
rank: 434
score: 98.59222412109375
patch: continue ; } else { return ; } }
rank: 434
score: 98.57820129394531
patch: return value [ 0 ] ; }
rank: 434
score: 98.55828094482422
patch: continue ; } return - 1 ;
rank: 434
score: 98.47990587022569
patch: rs . next ( ) ; break ;
rank: 434
score: 98.36363220214844
patch: key . add ( continue ) ;
rank: 434
score: 98.12460327148438
patch: next false ; continue ;
rank: 435
score: 98.76420288085937
patch: return search CaMeL Chars [ ch ] ; }
rank: 435
score: 98.71918334960938
patch: continue index CaMeL Of CaMeL Any CaMeL But ;
rank: 435
score: 98.63250177556819
patch: v = search CaMeL Chars [ j ] ; }
rank: 435
score: 98.59217071533203
patch: continue continue ; } else if ;
rank: 435
score: 98.577880859375
patch: return 0 + 1 ; } }
rank: 435
score: 98.55741882324219
patch: throw null ; } return i ;
rank: 435
score: 98.47984483506944
patch: count -- ; break ; } break ;
rank: 435
score: 98.36346435546875
patch: sb . next ( ; { continue ;
rank: 435
score: 98.12391880580357
patch: / ; continue ; break ;
rank: 436
score: 98.764111328125
patch: search CaMeL Chars [ i ] = 0 ;
rank: 436
score: 98.63238525390625
patch: table . index CaMeL Of ( cs ) ;
rank: 436
score: 98.59175618489583
patch: continue ; break ; } } break ;
rank: 436
score: 98.57775006975446
patch: continue ; } else * ;
rank: 436
score: 98.55558946397569
patch: return 1 ; } j ++ ; }
rank: 436
score: 98.47903781467014
patch: continue 1 ; } continue $NUMBER$ ; }
rank: 436
score: 98.36278618706598
patch: continue -- continue ; } if continue ;
rank: 436
score: 98.12332589285714
patch: continue ; ; * ; /
rank: 437
score: 98.79311301491477
patch: search CaMeL Chars char CaMeL At ( j ) ;
rank: 437
score: 98.76126437717014
patch: search CaMeL Len = 0 ; continue ;
rank: 437
score: 98.71831665039062
patch: break * search CaMeL Chars [ j ] ;
rank: 437
score: 98.6295654296875
patch: tag = INDEX _ NOT _ FOUND ; }
rank: 437
score: 98.57679748535156
patch: continue ; } } else { }
rank: 437
score: 98.47899712456598
patch: pos = i ; break ; } }
rank: 437
score: 98.36256626674107
patch: } * ; if continue ;
rank: 437
score: 98.12296840122768
patch: while ; continue ; break ;
rank: 438
score: 98.7176846590909
patch: continue search CaMeL Chars [ i ] : ch ;
rank: 438
score: 98.62922973632813
patch: switch ( search CaMeL Chars . length ) {
rank: 438
score: 98.59111328125
patch: continue ; case $STRING$ : continue ; } }
rank: 438
score: 98.57664489746094
patch: continue ; } } else * /
rank: 438
score: 98.55513509114583
patch: INDEX _ NOT _ FOUND = true ;
rank: 438
score: 98.47885131835938
patch: break false ; } } continue ;
rank: 438
score: 98.12251790364583
patch: continue ; -- continue ;
rank: 439
score: 98.7912930575284
patch: list . char CaMeL At ( j ) ; }
rank: 439
score: 98.7164306640625
patch: return search CaMeL Chars [ j ] + 0 ;
rank: 439
score: 98.62866821289063
patch: impl . index CaMeL Of ( ch ) ;
rank: 439
score: 98.57640075683594
patch: break ; } } } break ;
rank: 439
score: 98.55315290178571
patch: return 0 ; } break ;
rank: 439
score: 98.12183634440105
patch: continue ; continue ; out
rank: 440
score: 98.71253551136364
patch: return length + search CaMeL Chars [ j ] ;
rank: 440
score: 98.62835693359375
patch: prefix = INDEX _ NOT _ FOUND ;
rank: 440
score: 98.5906494140625
patch: pos ++ ; continue ; } break ; }
rank: 440
score: 98.57590738932292
patch: continue ; } continue ; } else ;
rank: 440
score: 98.55269775390624
patch: return this ; }
rank: 440
score: 98.47816685267857
patch: end ++ ; break ; }
rank: 440
score: 98.36188507080078
patch: i * continue ; break ; }
rank: 441
score: 98.78877397017045
patch: t = search CaMeL Chars [ j ] ; }
rank: 441
score: 98.71133761935764
patch: buf [ i ] = ch ; }
rank: 441
score: 98.62815551757812
patch: found = search CaMeL Chars [ j ] ;
rank: 441
score: 98.59052870008681
patch: continue ; } else if ( ; ;
rank: 441
score: 98.57571072048611
patch: continue ; * * * * * /
rank: 441
score: 98.55209011501736
patch: cs CaMeL Len = j - 1 ;
rank: 441
score: 98.36185709635417
patch: continue - 1 ; if continue true ;
rank: 441
score: 98.12034388950893
patch: return ( continue ; / ;
rank: 442
score: 98.74830457899306
patch: return search CaMeL Chars [ 0 ] ;
rank: 442
score: 98.70973899147727
patch: return search CaMeL Chars [ i ] : 0 ;
rank: 442
score: 98.62736680772569
patch: true return INDEX _ NOT _ FOUND ;
rank: 442
score: 98.59037475585937
patch: pos ++ ; break ; } break ; }
rank: 442
score: 98.55059814453125
patch: index CaMeL Of ( cs ) ;
rank: 442
score: 98.47707112630208
patch: outer = continue ; break ; } }
rank: 442
score: 98.36146545410156
patch: res . add ( continue ) ;
rank: 442
score: 98.12030029296875
patch: continue ; append ; continue ;
rank: 443
score: 98.78593139648437
patch: ex = search CaMeL Chars [ j ] ;
rank: 443
score: 98.74688042534723
patch: search CaMeL Len = 0 ; } }
rank: 443
score: 98.62664794921875
patch: true ; continue ; }
rank: 443
score: 98.58966827392578
patch: continue ; continue ; } ; }
rank: 443
score: 98.57482231987848
patch: break ; } else if ; continue ;
rank: 443
score: 98.54981994628906
patch: new [ 0 ] = ch ;
rank: 443
score: 98.47679307725694
patch: added = true ; break ; } }
rank: 443
score: 98.36127387152777
patch: end continue ; } else { continue ;
rank: 443
score: 98.11997767857143
patch: result if continue ; continue ;
rank: 444
score: 98.7856689453125
patch: break ; } } return cs CaMeL Len ;
rank: 444
score: 98.57474517822266
patch: return 0 ; } } * /
rank: 444
score: 98.54829915364583
patch: cs CaMeL Len = j - 0 ;
rank: 444
score: 98.47654724121094
patch: result ++ ; break ; } }
rank: 444
score: 98.35958862304688
patch: continue ; ; } continue ; *
rank: 444
score: 98.11992536272321
patch: continue ; ; ; if ;
rank: 445
score: 98.78485662286931
patch: n = search CaMeL Chars [ j ] ; }
rank: 445
score: 98.62294699928977
patch: res = INDEX _ NOT _ FOUND ; continue ;
rank: 445
score: 98.58863830566406
patch: continue ; } ; } else {
rank: 445
score: 98.54781765407986
patch: return get CaMeL Value ( ch ) ;
rank: 445
score: 98.3593521118164
patch: return continue ; } ; * /
rank: 446
score: 98.7847900390625
patch: } } return search CaMeL Chars [ j ] ;
rank: 446
score: 98.70245361328125
patch: return search CaMeL Len ? 0 : 0 ;
rank: 446
score: 98.58839721679688
patch: continue ; default : break ; ; } }
rank: 446
score: 98.54751925998264
patch: i = cs . length ( ) ;
rank: 446
score: 98.47595977783203
patch: continue ; default : break false ;
rank: 446
score: 98.35933685302734
patch: super . next ( ; continue ;
rank: 446
score: 98.1182149251302
patch: break ; if continue ;
rank: 447
score: 98.78460138494319
patch: continue + search CaMeL Chars [ j ] ; }
rank: 447
score: 98.72330050998264
patch: else return INDEX _ NOT _ FOUND ;
rank: 447
score: 98.58786349826389
patch: continue ; } } while ( continue )
rank: 447
score: 98.54698944091797
patch: return new int [ i ] ;
rank: 447
score: 98.47515869140625
patch: return i + 1 ; }
rank: 447
score: 98.35902913411458
patch: list . next ( ; { continue ;
rank: 447
score: 98.11812918526786
patch: continue ; if ; ; ;
rank: 448
score: 98.78403542258523
patch: name = search CaMeL Chars [ j ] ; }
rank: 448
score: 98.62158881293402
patch: ; return INDEX _ NOT _ FOUND ;
rank: 448
score: 98.57353210449219
patch: break ; } else return 0 ;
rank: 448
score: 98.54623752170139
patch: result = cs . length ( ) ;
rank: 448
score: 98.47511596679688
patch: break true ; }
rank: 448
score: 98.35890028211806
patch: result = continue ; break ; break ;
rank: 449
score: 98.7013916015625
patch: return search CaMeL Len + cs CaMeL Len ;
rank: 449
score: 98.62132679332386
patch: table . char CaMeL At ( i ) ; }
rank: 449
score: 98.58758544921875
patch: pos ++ ; break ; } } }
rank: 449
score: 98.57222747802734
patch: continue * * * * continue ;
rank: 449
score: 98.47508409288194
patch: break true ; break true ; } }
rank: 449
score: 98.35841064453125
patch: return - 1 ;
rank: 449
score: 98.11585489908855
patch: } continue ; continue ;
rank: 450
score: 98.7181625366211
patch: throw new char [ 0 ] ;
rank: 450
score: 98.62056274414063
patch: target = search CaMeL Chars [ j ] ;
rank: 450
score: 98.54581451416016
patch: return 0 ; i ++ ; }
rank: 450
score: 98.47444661458333
patch: count ++ ; break ; } } }
rank: 450
score: 98.35798645019531
patch: continue ; continue ; break ; *
rank: 450
score: 98.11542358398438
patch: out ; continue ;
rank: 451
score: 98.71690368652344
patch: name [ j ] = ch ;
rank: 451
score: 98.70053932883523
patch: buf [ cs CaMeL Len ] = ch ; }
rank: 451
score: 98.62042236328125
patch: ! INDEX _ NOT _ FOUND ; }
rank: 451
score: 98.57188585069444
patch: return 0 ; } } return continue ;
rank: 451
score: 98.54407416449652
patch: cs [ i ] = ch ; }
rank: 451
score: 98.47380235460069
patch: continue 0 ; } continue 1 ; }
rank: 451
score: 98.35741424560547
patch: key . append ( continue ) ;
rank: 451
score: 98.11522420247395
patch: end false ; continue ;
rank: 452
score: 98.61945134943181
patch: switch ( INDEX _ NOT _ FOUND ) { }
rank: 452
score: 98.58732386997768
patch: continue true ; } ; }
rank: 452
score: 98.57182312011719
patch: continue [ 0 ] ; } }
rank: 452
score: 98.54350450303819
patch: return to CaMeL String ( ) ; }
rank: 452
score: 98.47373657226562
patch: break - 1 ;
rank: 452
score: 98.35666910807292
patch: continue ; } continue ; case 1 ;
rank: 452
score: 98.1101582845052
patch: return 1 ; break ;
rank: 453
score: 98.71312798394098
patch: throw new int [ 0 ] ; }
rank: 453
score: 98.6986083984375
patch: search CaMeL Chars [ i ] = ch } ;
rank: 453
score: 98.61897416548295
patch: ; return INDEX _ NOT _ FOUND ; } }
rank: 453
score: 98.57153998480902
patch: return ; ; } } if continue ;
rank: 453
score: 98.54330105251736
patch: INDEX _ NOT _ FOUND = 0 ;
rank: 453
score: 98.47317165798611
patch: throw new Null CaMeL Pointer CaMeL Exception ;
rank: 453
score: 98.1094462076823
patch: continue ; continue ; {
rank: 454
score: 98.77901611328124
patch: search CaMeL Chars [ i ] == ch ;
rank: 454
score: 98.69838645241477
patch: return count + search CaMeL Chars [ i ] ;
rank: 454
score: 98.61823120117188
patch: switch ( INDEX _ NOT _ FOUND ) {
rank: 454
score: 98.58635711669922
patch: search CaMeL Len ; continue ; }
rank: 454
score: 98.57151285807292
patch: break ; break ; } } continue ;
rank: 454
score: 98.47206115722656
patch: remaining -- ; break ; } }
rank: 454
score: 98.35590362548828
patch: continue ; } continue ; try {
rank: 454
score: 98.10899135044643
patch: return - $NUMBER$ ; break ;
rank: 455
score: 98.77887573242188
patch: continue + INDEX _ NOT _ FOUND ; }
rank: 455
score: 98.69456898082386
patch: continue search CaMeL Chars [ j ] + null ;
rank: 455
score: 98.6168212890625
patch: retval = INDEX _ NOT _ FOUND ; } }
rank: 455
score: 98.58628540039062
patch: continue ; } ++ search CaMeL Len ; ;
rank: 455
score: 98.57135009765625
patch: { continue ; } else ; }
rank: 455
score: 98.54291449652777
patch: continue false ; } } return i ;
rank: 455
score: 98.47166442871094
patch: break ; } i ++ ; }
rank: 455
score: 98.35515679253473
patch: continue ; * continue ; } continue ;
rank: 455
score: 98.10811360677083
patch: continue ; continue ; max
rank: 456
score: 98.77862548828125
patch: break ; } } return search CaMeL Len ;
rank: 456
score: 98.70161268446181
patch: search CaMeL Len += search CaMeL Len ;
rank: 456
score: 98.6939697265625
patch: search CaMeL Chars [ j ] = ch _
rank: 456
score: 98.61615545099431
patch: false + INDEX _ NOT _ FOUND ; } }
rank: 456
score: 98.58599175347223
patch: continue ; } return - 1 ; }
rank: 456
score: 98.57120513916016
patch: continue 1 ; } continue ; ;
rank: 456
score: 98.54258897569444
patch: INDEX _ NOT _ FOUND = false ;
rank: 456
score: 98.47127956814236
patch: continue false ; } if ( continue ;
rank: 456
score: 98.354248046875
patch: continue * 1 ;
rank: 457
score: 98.61527876420455
patch: ret = INDEX _ NOT _ FOUND ; continue ;
rank: 457
score: 98.54202270507812
patch: return is CaMeL Empty ( ) ;
rank: 457
score: 98.47119903564453
patch: break 1 ; } continue 1 ;
rank: 457
score: 98.35423278808594
patch: continue ; continue ; / * /
rank: 457
score: 98.10709926060268
patch: if ; continue ; System ;
rank: 458
score: 98.61358087713069
patch: result += search CaMeL Chars [ j ] ; }
rank: 458
score: 98.585498046875
patch: continue ; } else if ; break ; }
rank: 458
score: 98.47019449869792
patch: count ++ ; break ;
rank: 458
score: 98.35417938232422
patch: text . append ( continue ) ;
rank: 458
score: 98.10693359375
patch: continue ; ; ? continue ;
rank: 459
score: 98.77595520019531
patch: throw INDEX _ NOT _ FOUND ;
rank: 459
score: 98.68612060546874
patch: sb . to CaMeL String ( ) ; }
rank: 459
score: 98.61304820667614
patch: b = INDEX _ NOT _ FOUND ; continue ;
rank: 459
score: 98.5854736328125
patch: continue false ; } else { continue ; }
rank: 459
score: 98.56989203559027
patch: continue ; * * / continue ; }
rank: 459
score: 98.541015625
patch: return new INDEX _ NOT _ FOUND ;
rank: 459
score: 98.46993255615234
patch: break ] ; } break ; }
rank: 459
score: 98.35393608940973
patch: return - 1 ; break - 1 ;
rank: 459
score: 98.10550944010417
patch: continue ; return 1 ;
rank: 460
score: 98.69396294487848
patch: search CaMeL Chars [ j ] = (
rank: 460
score: 98.68135579427083
patch: search CaMeL Len ( ch ) ; }
rank: 460
score: 98.61259155273437
patch: return INDEX _ NOT _ FOUND ; break ;
rank: 460
score: 98.56959364149306
patch: throw null ; } else if continue ;
rank: 460
score: 98.46851942274306
patch: continue true ; } continue true ; }
rank: 460
score: 98.10523332868304
patch: continue ; ; / ; /
rank: 461
score: 98.61181640625
patch: table . char CaMeL At ( i ) ;
rank: 461
score: 98.58499581473214
patch: continue ; } } * /
rank: 461
score: 98.56879340277777
patch: continue ; } } else if continue ;
rank: 461
score: 98.5400390625
patch: return [ j ] ; }
rank: 461
score: 98.46786063058036
patch: position ++ ; continue ; }
rank: 461
score: 98.35194614955357
patch: continue * continue - $NUMBER$ ;
rank: 461
score: 98.10466657366071
patch: continue ; ; / continue ;
rank: 462
score: 98.77279052734374
patch: r = search CaMeL Chars [ j ] ;
rank: 462
score: 98.66072845458984
patch: continue ( 0 + ch ) ;
rank: 462
score: 98.61070033482143
patch: table . return i ; }
rank: 462
score: 98.5845458984375
patch: pos ++ ; continue ; } continue ; }
rank: 462
score: 98.56874302455357
patch: this . continue ; } }
rank: 462
score: 98.53922271728516
patch: return i ; } return j ;
rank: 462
score: 98.46731567382812
patch: loop -- ; break ; } }
rank: 462
score: 98.35145786830357
patch: finally { continue ; break ;
rank: 462
score: 98.10435267857143
patch: return new 1 ; break ;
rank: 463
score: 98.77213911576705
patch: assert search CaMeL Chars [ j ] == ch ;
rank: 463
score: 98.68614196777344
patch: result = 0 ; return i ;
rank: 463
score: 98.58411865234375
patch: continue ; } else { continue continue ; }
rank: 463
score: 98.56874084472656
patch: return 1 + 0 ; } }
rank: 463
score: 98.46669224330357
patch: continue true ; } continue ;
rank: 463
score: 98.10399518694196
patch: continue ; continue ; $STRING$ ;
rank: 464
score: 98.68409075055804
patch: return search CaMeL Chars [ j
rank: 464
score: 98.610107421875
patch: System . arraycopy ( search CaMeL Chars ) ; }
rank: 464
score: 98.58409881591797
patch: char ch = ; continue ; }
rank: 464
score: 98.56849670410156
patch: } * * * * * /
rank: 464
score: 98.46651458740234
patch: ok = false ; break ; }
rank: 464
score: 98.35065375434027
patch: continue ; / / * if continue ;
rank: 464
score: 98.1038818359375
patch: continue ; ; = ; ;
rank: 465
score: 98.7713290127841
patch: end = search CaMeL Chars [ j ] ; }
rank: 465
score: 98.6805419921875
patch: e [ j ] = ch ;
rank: 465
score: 98.65312194824219
patch: return i ? 0 : 0 ;
rank: 465
score: 98.60967339409723
patch: v = INDEX _ NOT _ FOUND ;
rank: 465
score: 98.5837631225586
patch: cursor ++ ; continue ; } }
rank: 465
score: 98.56765747070312
patch: break ; } else { break ;
rank: 465
score: 98.53653717041016
patch: continue false ; } return i ;
rank: 465
score: 98.46649169921875
patch: break - 1 ; ; } }
rank: 465
score: 98.35002899169922
patch: continue * ; } if continue ;
rank: 465
score: 98.10193888346355
patch: break ; continue ; }
rank: 466
score: 98.68033175998264
patch: throw new char [ 0 ] ; }
rank: 466
score: 98.65041097005208
patch: continue ( INDEX _ NOT _ FOUND ;
rank: 466
score: 98.58371988932292
patch: byte ch = ; break ; } }
rank: 466
score: 98.56752232142857
patch: return continue ; } } }
rank: 466
score: 98.53175184461806
patch: return new int [ i ] ; }
rank: 466
score: 98.46638488769531
patch: retval = 0 ; break ; }
rank: 466
score: 98.34923553466797
patch: list . add ( continue ; {
rank: 466
score: 98.0921630859375
patch: continue ; ; System ;
rank: 467
score: 98.6086758700284
patch: b = INDEX _ NOT _ FOUND ; } }
rank: 467
score: 98.58222198486328
patch: continue ; } } this . ;
rank: 467
score: 98.56741672092014
patch: } * * * * / continue ;
rank: 467
score: 98.53164333767361
patch: cs CaMeL Len = cs CaMeL Len ;
rank: 467
score: 98.46615261501736
patch: continue false ; } continue false ; }
rank: 467
score: 98.34906684027777
patch: continue ; / ++ * / continue ;
rank: 468
score: 98.6722412109375
patch: text [ j ] = ch ;
rank: 468
score: 98.63768513997395
patch: continue search CaMeL Len ;
rank: 468
score: 98.58194986979167
patch: continue continue ; } ;
rank: 468
score: 98.5668716430664
patch: break ; } else } continue ;
rank: 468
score: 98.53142632378473
patch: continue ; cs CaMeL Len ++ ; }
rank: 468
score: 98.46614837646484
patch: res ++ ; break ; } }
rank: 468
score: 98.34892054966518
patch: continue ; / ++ * /
rank: 468
score: 98.07709350585938
patch: buffer ; continue ;
rank: 469
score: 98.60736083984375
patch: result = i ; }
rank: 469
score: 98.58136664496527
patch: continue ; default : continue ; } ;
rank: 469
score: 98.56686837332589
patch: continue += 1 ; } }
rank: 469
score: 98.52916717529297
patch: return new String ( ch ) ;
rank: 469
score: 98.07566324869792
patch: outer ; continue ; }
rank: 470
score: 98.76718971946023
patch: buffer . char CaMeL At ( j ] ) ;
rank: 470
score: 98.66761610243056
patch: search CaMeL Len = 0 ; break ;
rank: 470
score: 98.60536702473958
patch: t = INDEX _ NOT _ FOUND ;
rank: 470
score: 98.58098493303571
patch: return j - 1 ; }
rank: 470
score: 98.56656646728516
patch: break ; } else ; continue ;
rank: 470
score: 98.52716742621527
patch: ch = cs . length ( ) ;
rank: 470
score: 98.34864044189453
patch: item . add ( continue ) ;
rank: 470
score: 98.07098388671875
patch: continue ; else ; ;
rank: 471
score: 98.76651340060764
patch: removed = INDEX _ NOT _ FOUND ;
rank: 471
score: 98.6049471768466
patch: impl . index CaMeL Of ( ch ) ; }
rank: 471
score: 98.52532280815973
patch: cs CaMeL Len ++ ; i ++ ;
rank: 471
score: 98.34836154513889
patch: start continue ; } else { continue ;
rank: 471
score: 98.0634765625
patch: continue ; continue ; System
rank: 472
score: 98.7662020596591
patch: outer = search CaMeL Chars [ j ] ; }
rank: 472
score: 98.60357111150569
patch: super . index CaMeL Of ( ch ) ; }
rank: 472
score: 98.58003540039063
patch: continue ; case $STRING$ : break ; } }
rank: 472
score: 98.56588406032986
patch: { continue ; } } return continue ;
rank: 472
score: 98.52452850341797
patch: return new int [ j ] ;
rank: 472
score: 98.46500396728516
patch: continue 1 ; break $NUMBER$ ; }
rank: 472
score: 98.34820556640625
patch: out . arraycopy ( continue ) ; }
rank: 472
score: 98.05546875
patch: result ; continue ;
rank: 473
score: 98.65855577256944
patch: if ( search CaMeL Chars . char CaMeL
rank: 473
score: 98.62037150065105
patch: continue ( 0 ) ;
rank: 473
score: 98.60333806818181
patch: return INDEX _ NOT _ FOUND ; } continue ;
rank: 473
score: 98.57919921875
patch: return i ; } } else { continue ;
rank: 473
score: 98.56568908691406
patch: break ; } * * * /
rank: 473
score: 98.52344428168402
patch: INDEX _ NOT _ FOUND -- ; }
rank: 473
score: 98.46500396728516
patch: continue ; } if ( break )
rank: 473
score: 98.34807671440973
patch: continue true ; } else { continue ;
rank: 473
score: 98.05503845214844
patch: return true ;
rank: 474
score: 98.76091851128473
patch: outer = INDEX _ NOT _ FOUND ;
rank: 474
score: 98.65719943576389
patch: return continue ; } } return i ;
rank: 474
score: 98.61951361762152
patch: buf . equals ( ch ) ; }
rank: 474
score: 98.60333251953125
patch: result = INDEX _ NOT _ FOUND ; ;
rank: 474
score: 98.57876925998264
patch: continue ; } if ( ; ; }
rank: 474
score: 98.56475830078125
patch: continue ; } finally ; }
rank: 474
score: 98.52325439453125
patch: return - true ; }
rank: 474
score: 98.46497938368056
patch: return - 1 ; } continue ; }
rank: 474
score: 98.34776960100446
patch: end continue ; if continue ;
rank: 475
score: 98.75798950195312
patch: buf . char CaMeL At ( j ) ;
rank: 475
score: 98.65646362304688
patch: switch ( search CaMeL Len ) {
rank: 475
score: 98.60094105113636
patch: curr = search CaMeL Chars [ j ] ; }
rank: 475
score: 98.57778930664062
patch: continue ; default : continue ; } } ;
rank: 475
score: 98.56472778320312
patch: return 1 ; } * * /
rank: 475
score: 98.51999240451389
patch: return Math . length ( ) ; }
rank: 475
score: 98.34752739800348
patch: j * - 1 ; if continue ;
rank: 475
score: 98.05420939127605
patch: continue ; continue ; Exception
rank: 476
score: 98.61580403645833
patch: return search CaMeL Chars [ count ] ;
rank: 476
score: 98.59995339133523
patch: res = INDEX _ NOT _ FOUND ; break ;
rank: 476
score: 98.57765028211806
patch: return j ; } } } continue ;
rank: 476
score: 98.56399100167411
patch: return ; ; } continue ;
rank: 476
score: 98.51819525824652
patch: ch = cs . trim ( ) ;
rank: 476
score: 98.46350969587054
patch: continue 1 ; } ; }
rank: 476
score: 98.34612274169922
patch: string . add ( continue ) ;
rank: 476
score: 98.04853515625
patch: throw new continue ;
rank: 477
score: 98.61519077845982
patch: continue + search CaMeL Len ;
rank: 477
score: 98.5994873046875
patch: len = search CaMeL Chars . length ; } }
rank: 477
score: 98.5774154663086
patch: continue ; ; } if ( ;
rank: 477
score: 98.56375122070312
patch: throw continue ; } } else {
rank: 477
score: 98.51705593532986
patch: continue i ; } return i ; }
rank: 477
score: 98.3452880859375
patch: continue ; * ;
rank: 477
score: 98.04547119140625
patch: continue ; ; } ;
rank: 478
score: 98.65266418457031
patch: result = i ; return i ;
rank: 478
score: 98.60448540581598
patch: return search CaMeL Chars [ start ] ;
rank: 478
score: 98.57717556423611
patch: continue ; } ; break ; } ;
rank: 478
score: 98.56353759765625
patch: return 1 ; } } ; }
rank: 478
score: 98.51668294270833
patch: return 0 ; } return 0 ; }
rank: 478
score: 98.46315002441406
patch: length -- ; break ; } }
rank: 478
score: 98.04180908203125
patch: continue ; add continue ;
rank: 479
score: 98.74940490722656
patch: result = ( int ) i ;
rank: 479
score: 98.650634765625
patch: cs . to CaMeL String ( ) ;
rank: 479
score: 98.6026611328125
patch: return this . search CaMeL Len ;
rank: 479
score: 98.5967529296875
patch: answer = search CaMeL Chars [ j ] ;
rank: 479
score: 98.57716878255208
patch: continue ; } ; } return i ;
rank: 479
score: 98.56260850694444
patch: return 1 ; } } } if ;
rank: 479
score: 98.46305847167969
patch: return - 1 ; continue ; }
rank: 479
score: 98.34475368923611
patch: continue = continue ; } if continue ;
rank: 479
score: 98.03964233398438
patch: continue ; ; ; /
rank: 480
score: 98.74700927734375
patch: throw search CaMeL Chars [ j ] ;
rank: 480
score: 98.60264078776042
patch: return char CaMeL At [ j ] ;
rank: 480
score: 98.5967129794034
patch: state = INDEX _ NOT _ FOUND ; continue ;
rank: 480
score: 98.56229400634766
patch: return 1 ; } if ; }
rank: 480
score: 98.51539442274306
patch: new [ i ] = ch ; }
rank: 480
score: 98.46285671657986
patch: cancelled = true ; break ; } }
rank: 480
score: 98.34461805555556
patch: continue - 0 ; } if continue ;
rank: 480
score: 98.03592936197917
patch: if null ; continue ;
rank: 481
score: 98.74661254882812
patch: ret [ j ] = ch ;
rank: 481
score: 98.5955810546875
patch: state = INDEX _ NOT _ FOUND ; break ;
rank: 481
score: 98.576904296875
patch: continue ; } * / ; }
rank: 481
score: 98.51370675223214
patch: continue search CaMeL Len ; }
rank: 481
score: 98.34450276692708
patch: assert false ; continue ;
rank: 481
score: 98.0354232788086
patch: ; continue ;
rank: 482
score: 98.57628716362848
patch: continue ; ; } if ( ; }
rank: 482
score: 98.55992296006944
patch: throw new Illegal CaMeL State CaMeL Exception ;
rank: 482
score: 98.51365661621094
patch: return size [ i ] ; }
rank: 482
score: 98.46273464626736
patch: break true ; break false ; } }
rank: 482
score: 98.03399658203125
patch: continue ; if ; {
rank: 483
score: 98.59532335069444
patch: sb . equals ( ch ) ; }
rank: 483
score: 98.59468217329545
patch: b = INDEX _ NOT _ FOUND ; break ;
rank: 483
score: 98.57579345703125
patch: continue ; } continue ; } } continue ;
rank: 483
score: 98.55991036551339
patch: return 0 ; } ; }
rank: 483
score: 98.51060655381944
patch: return 1 ; } return i ; }
rank: 483
score: 98.46219211154514
patch: continue - 1 ; } } else {
rank: 483
score: 98.34426879882812
patch: continue - 0 ; break ; {
rank: 483
score: 98.0307108561198
patch: continue ; ; out ;
rank: 484
score: 98.63908386230469
patch: start = 0 ; j ++ ;
rank: 484
score: 98.59450461647727
patch: true = INDEX _ NOT _ FOUND ; } }
rank: 484
score: 98.57478841145833
patch: continue ; } / * continue ; }
rank: 484
score: 98.55973307291667
patch: break ; } } else ; continue ;
rank: 484
score: 98.51057264539931
patch: continue ; } } } return 0 ;
rank: 484
score: 98.46197509765625
patch: la ++ ; break ; } }
rank: 484
score: 98.34389919704861
patch: value = continue ; break ; break ;
rank: 485
score: 98.59305419921876
patch: prefix = search CaMeL Chars [ j ] ;
rank: 485
score: 98.55967203776042
patch: continue ; } else { continue ; else
rank: 485
score: 98.51045735677083
patch: continue ; } return i + 0 ;
rank: 485
score: 98.46171061197917
patch: continue ; } if ( matches ; }
rank: 485
score: 98.34370640345982
patch: continue - - 1 ; ;
rank: 485
score: 98.02649943033855
patch: continue ; append ; ;
rank: 486
score: 98.63597869873047
patch: continue ; } } i ++ ;
rank: 486
score: 98.59196333451705
patch: result = INDEX _ NOT _ FOUND ; } else
rank: 486
score: 98.58090549045139
patch: search CaMeL Len ++ ; return 0 ;
rank: 486
score: 98.57322184244792
patch: continue ; } } * / continue ;
rank: 486
score: 98.55962371826172
patch: continue ; } finally = continue ;
rank: 486
score: 98.50798034667969
patch: continue ; } return return i ;
rank: 486
score: 98.34369574652777
patch: continue ; * else { if continue ;
rank: 486
score: 98.02499389648438
patch: if ; = 1 ;
rank: 487
score: 98.63572184244792
patch: return search CaMeL Len - 1 ; }
rank: 487
score: 98.59149724786931
patch: found = search CaMeL Chars [ j ] ; }
rank: 487
score: 98.57884216308594
patch: continue ( 0 - 1 ) ;
rank: 487
score: 98.57313537597656
patch: pos -- ; continue ; } }
rank: 487
score: 98.55844116210938
patch: return start ; } }
rank: 487
score: 98.50722927517361
patch: return new String ( ch ) ; }
rank: 487
score: 98.46053314208984
patch: continue ; } is CaMeL Empty ;
rank: 487
score: 98.34365844726562
patch: continue ; / continue ;
rank: 487
score: 98.02366943359375
patch: / ; continue ;
rank: 488
score: 98.63160536024306
patch: return char CaMeL At ( i ) ;
rank: 488
score: 98.55808803013393
patch: continue * * * continue ;
rank: 488
score: 98.50599670410156
patch: return null ; } j ++ ;
rank: 488
score: 98.459228515625
patch: count -- ; continue ; } }
rank: 488
score: 98.34320068359375
patch: return continue - 0 ; }
rank: 488
score: 98.02158610026042
patch: if true ; continue ;
rank: 489
score: 98.62497965494792
patch: return ++ search CaMeL Chars . length ;
rank: 489
score: 98.57218933105469
patch: continue - 1 ; ; } }
rank: 489
score: 98.5577392578125
patch: return 1 ; } else return ;
rank: 489
score: 98.45921107700893
patch: limit ++ ; continue ; }
rank: 489
score: 98.34272003173828
patch: j * - 1 ; continue ;
rank: 489
score: 98.01880900065105
patch: return ; { continue ;
rank: 490
score: 98.58941095525569
patch: false + INDEX _ NOT _ FOUND ; continue ;
rank: 490
score: 98.57623969184027
patch: out . append ( ch ) ; }
rank: 490
score: 98.57174072265624
patch: continue ; } ; } return - 1 ;
rank: 490
score: 98.55767822265625
patch: break ; } } * * /
rank: 490
score: 98.45909966362848
patch: removed = 1 ; break ; } }
rank: 490
score: 98.34219021267361
patch: iter . next ( ; continue ; }
rank: 490
score: 98.0177001953125
patch: return false ; break ;
rank: 491
score: 98.57431369357639
patch: name [ j ] = ch ; }
rank: 491
score: 98.55623372395833
patch: return 0 ; } ;
rank: 491
score: 98.49732317243304
patch: cs CaMeL Len = i ;
rank: 491
score: 98.34200032552083
patch: out . add ( continue ) ; }
rank: 492
score: 98.7190933227539
patch: buffer [ i ] = ch ;
rank: 492
score: 98.587158203125
patch: search CaMeL Len += search CaMeL Len ; }
rank: 492
score: 98.57115342881944
patch: text [ j ] = ch ; }
rank: 492
score: 98.55577935112848
patch: return 1 ; } else return 1 ;
rank: 492
score: 98.49636840820312
patch: continue ; } i = 0 ;
rank: 492
score: 98.01182047526042
patch: return 1 ; continue ;
rank: 493
score: 98.71771240234375
patch: list [ j ] = ch ;
rank: 493
score: 98.6214370727539
patch: search CaMeL Chars [ j ] ;
rank: 493
score: 98.57119140625
patch: continue continue ; } else { break ; }
rank: 493
score: 98.57114664713542
patch: continue INDEX _ NOT _ FOUND ) ;
rank: 493
score: 98.5553207397461
patch: continue [ i ++ ] ; }
rank: 493
score: 98.49365234375
patch: return new int [ j ] ; }
rank: 493
score: 98.45740509033203
patch: depth ++ ; break ; } }
rank: 493
score: 98.34132893880208
patch: iter . next ( ; { continue ;
rank: 493
score: 98.01071166992188
patch: continue ; ; /
rank: 494
score: 98.56953938802083
patch: System . arraycopy ( search CaMeL Chars ,
rank: 494
score: 98.55459594726562
patch: continue ; } else = ; }
rank: 494
score: 98.4935531616211
patch: return 1 ; } i ++ ;
rank: 494
score: 98.34104410807292
patch: return continue + 1 ;
rank: 494
score: 98.00909423828125
patch: if ; = continue ;
rank: 495
score: 98.71659342447917
patch: |= search CaMeL Chars [ j ] ;
rank: 495
score: 98.61675262451172
patch: sb . append ( ch ) ;
rank: 495
score: 98.57061767578125
patch: return ; } } continue ;
rank: 495
score: 98.566650390625
patch: continue search CaMeL Chars [ i ]
rank: 495
score: 98.55369567871094
patch: continue [ continue 1 ] ; }
rank: 495
score: 98.49349212646484
patch: continue ; } j = j ;
rank: 495
score: 98.45591517857143
patch: continue 1 ; } else {
rank: 495
score: 98.34086608886719
patch: LOG . arraycopy ( continue ) ;
rank: 495
score: 98.0085693359375
patch: false ; continue ;
rank: 496
score: 98.61328803168402
patch: return search CaMeL Chars . length ; }
rank: 496
score: 98.58509410511364
patch: break ; } } else { return i ; }
rank: 496
score: 98.56898803710938
patch: continue ; } else { ++ continue ; }
rank: 496
score: 98.56523301866319
patch: info . add ( ch ) ; }
rank: 496
score: 98.55354309082031
patch: break ; } } break ; }
rank: 496
score: 98.49274444580078
patch: return cs CaMeL Len - j ;
rank: 496
score: 98.45571560329861
patch: ret = i ; break ; } }
rank: 496
score: 98.34051513671875
patch: end new continue ; continue ;
rank: 496
score: 97.9994405110677
patch: for continue ; break ;
rank: 497
score: 98.71244812011719
patch: buf [ i ] = ch ;
rank: 497
score: 98.61155192057292
patch: return ( search CaMeL Chars [ j ]
rank: 497
score: 98.58428400213069
patch: answer = search CaMeL Chars [ j ] ; }
rank: 497
score: 98.56837158203125
patch: continue ; } } } else { continue ;
rank: 497
score: 98.56254747178819
patch: return replace CaMeL Chars [ i ] ;
rank: 497
score: 98.55235290527344
patch: continue * 1 ; } else {
rank: 497
score: 98.49180772569444
patch: continue ; cs CaMeL Len = j ;
rank: 497
score: 98.45549858940973
patch: pos ++ ; continue ; } continue ;
rank: 497
score: 98.34030587332589
patch: return continue ; while continue ;
rank: 497
score: 97.99727376302083
patch: continue ; ++ continue ;
rank: 498
score: 98.71241760253906
patch: throw new String ( ch ) ;
rank: 498
score: 98.60625457763672
patch: b [ j ] = ch ;
rank: 498
score: 98.56822509765625
patch: continue ; } else if ( ! ; }
rank: 498
score: 98.56186930338542
patch: this . search CaMeL Len ++ ; }
rank: 498
score: 98.49178314208984
patch: return cs CaMeL Len + j ;
rank: 498
score: 98.34010823567708
patch: continue ; ; ; { if continue ;
rank: 498
score: 97.99666341145833
patch: continue ; ; * /
rank: 499
score: 98.60196533203126
patch: result = 0 ;
rank: 499
score: 98.5680160522461
patch: ++ j ; break ; } }
rank: 499
score: 98.56135389539931
patch: out . add ( ch ) ; }
rank: 499
score: 98.49102020263672
patch: continue cs CaMeL Len ; } }
rank: 499
score: 98.45420328776042
patch: continue matches [ j ] ; } }
rank: 499
score: 98.33997453962054
patch: continue ; / else break ;
rank: 499
score: 97.98984781901042
patch: continue ; return false ;
rank: 500
score: 98.60189819335938
patch: path [ j ] = ch ;
rank: 500
score: 98.5823641690341
patch: prev = INDEX _ NOT _ FOUND ; break ;
rank: 500
score: 98.5670394897461
patch: pos ++ ; continue ; } ;
rank: 500
score: 98.48980034722223
patch: new [ j ] = ch ; }
rank: 500
score: 98.45352172851562
patch: k ++ ; break ; } }
rank: 500
score: 98.33909776475694
patch: continue ; ; else { if continue ;
rank: 500
score: 97.98275756835938
patch: continue ; ; ; }
rank: 501
score: 98.60105895996094
patch: continue ; } } return $STRING$ ;
rank: 501
score: 98.58217551491477
patch: false return INDEX _ NOT _ FOUND ; } }
rank: 501
score: 98.56687927246094
patch: continue ; } } count ++ ;
rank: 501
score: 98.56037055121527
patch: continue char CaMeL At ( i ) ;
rank: 501
score: 98.55085754394531
patch: break ; } } else * /
rank: 501
score: 98.48968505859375
patch: return cs . length ; }
rank: 501
score: 98.33881293402777
patch: continue ; } continue ; int * /
rank: 501
score: 97.98089599609375
patch: continue ; ; else ;
rank: 502
score: 98.7032699584961
patch: args [ j ] = ch ;
rank: 502
score: 98.59841918945312
patch: names [ j ] = ch ;
rank: 502
score: 98.55946350097656
patch: search CaMeL Len j ++ ; }
rank: 502
score: 98.55055454799107
patch: break ; } ; continue ;
rank: 502
score: 98.4888687133789
patch: return 1 ; j ++ ; }
rank: 502
score: 98.45263671875
patch: count ++ ; ; break ; }
rank: 502
score: 98.33868408203125
patch: string . next ( ; continue ;
rank: 502
score: 97.97808837890625
patch: continue ; continue ; Stack
rank: 503
score: 98.59624481201172
patch: continue ? 0 : 0 ; }
rank: 503
score: 98.58017985026042
patch: prev = INDEX _ NOT _ FOUND ;
rank: 503
score: 98.55308702256944
patch: search CaMeL Len ] = ch ; }
rank: 503
score: 98.48748101128473
patch: return 0 ; } i ++ ; }
rank: 503
score: 98.45232476128473
patch: pos = 0 ; break ; } }
rank: 503
score: 98.33864339192708
patch: continue ; ; } if continue ; ;
rank: 503
score: 97.97376505533855
patch: continue ; if false ;
rank: 504
score: 98.59494018554688
patch: return cs . size ( ) ;
rank: 504
score: 98.57960094105114
patch: ! ! search CaMeL Chars [ j ] ; }
rank: 504
score: 98.56591796875
patch: continue continue ; } else if ( ; }
rank: 504
score: 98.54990641276042
patch: return 1 ; } else = continue ;
rank: 504
score: 98.48506927490234
patch: return i ; j ++ ; }
rank: 504
score: 98.45146942138672
patch: break count - i ; } }
rank: 504
score: 98.33862982855902
patch: continue ; / / * next * /
rank: 505
score: 98.69771321614583
patch: search CaMeL Len = cs . length ;
rank: 505
score: 98.58932495117188
patch: continue ; } } return false ;
rank: 505
score: 98.57847290039062
patch: ! ! search CaMeL Chars [ j ] ;
rank: 505
score: 98.5517349243164
patch: return count - cs CaMeL Len ;
rank: 505
score: 98.54957580566406
patch: break ; } } catch ; ;
rank: 505
score: 98.4839859008789
patch: return i ; } return 1 ;
rank: 505
score: 98.45133209228516
patch: prev = continue ; break ; }
rank: 505
score: 98.33851453993056
patch: return continue - 1 ; while continue ;
rank: 505
score: 97.96368408203125
patch: throw continue ; continue ;
rank: 506
score: 98.58859252929688
patch: return continue ; } return i ;
rank: 506
score: 98.57535129123264
patch: n = INDEX _ NOT _ FOUND ;
rank: 506
score: 98.5511474609375
patch: continue ( 0 . 1 ) ;
rank: 506
score: 98.54722764756944
patch: } else { if ; continue ; }
rank: 506
score: 98.48291778564453
patch: INDEX _ NOT _ FOUND ; }
rank: 506
score: 98.4510498046875
patch: if ( continue ) break false ; }
rank: 506
score: 98.33808898925781
patch: result = continue ; continue ; }
rank: 506
score: 97.96129353841145
patch: if ; continue ; /
rank: 507
score: 98.58827209472656
patch: if ( search CaMeL Chars [ i
rank: 507
score: 98.57459852430556
patch: field = INDEX _ NOT _ FOUND ;
rank: 507
score: 98.56483968098958
patch: return ; } else { continue ; }
rank: 507
score: 98.55088297526042
patch: -- cs CaMeL Len ;
rank: 507
score: 98.54703097873264
patch: break ; } } continue ; continue ;
rank: 507
score: 98.4822006225586
patch: continue ; } } return true ;
rank: 507
score: 98.45052761501736
patch: continue ; case $STRING$ : case $STRING$ :
rank: 507
score: 98.33748081752232
patch: continue - - 1 ; }
rank: 507
score: 97.96048990885417
patch: continue ; return count ;
rank: 508
score: 98.69515652126736
patch: search CaMeL Len ++ ; return j ;
rank: 508
score: 98.56462944878473
patch: continue ; } } ; } continue ;
rank: 508
score: 98.55013020833333
patch: search CaMeL Chars [ j ] ; }
rank: 508
score: 98.54675971137152
patch: return 1 ; } } catch continue ;
rank: 508
score: 98.48167724609375
patch: return null ; }
rank: 508
score: 98.33700997488839
patch: continue ; ; continue ; }
rank: 508
score: 97.95993041992188
patch: continue ; final continue ;
rank: 509
score: 98.58624267578125
patch: result = continue ; }
rank: 509
score: 98.56690809461806
patch: r = INDEX _ NOT _ FOUND ;
rank: 509
score: 98.56394958496094
patch: continue ; default : ; } }
rank: 509
score: 98.54998779296875
patch: continue . get CaMeL Name ( ) ;
rank: 509
score: 98.54654693603516
patch: continue [ 1 ] ; } ;
rank: 509
score: 98.48085530598958
patch: cs CaMeL Len ++ ; return 0 ;
rank: 509
score: 98.44902692522321
patch: continue matches [ j ] ;
rank: 509
score: 98.33585357666016
patch: continue ; continue ; } * *
rank: 509
score: 97.95987955729167
patch: return next ; break ;
rank: 510
score: 98.69201049804687
patch: result = i ;
rank: 510
score: 98.56467692057292
patch: res += INDEX _ NOT _ FOUND ;
rank: 510
score: 98.56336975097656
patch: ch = ; continue ; } }
rank: 510
score: 98.54900444878473
patch: cs . add ( ch ) ; }
rank: 510
score: 98.54650115966797
patch: return 0 + 0 ; } }
rank: 510
score: 98.47846221923828
patch: INDEX _ NOT _ FOUND -- ;
rank: 510
score: 98.44886997767857
patch: continue ; continue true ; }
rank: 510
score: 98.33455984933036
patch: continue ; } continue ; *
rank: 510
score: 97.9595458984375
patch: next ; continue ;
rank: 511
score: 98.58530099051339
patch: search CaMeL Len = i ;
rank: 511
score: 98.56328582763672
patch: cursor -- ; break ; } }
rank: 511
score: 98.562744140625
patch: curr = INDEX _ NOT _ FOUND ;
rank: 511
score: 98.54850260416667
patch: search CaMeL Chars [ j ] = ch
rank: 511
score: 98.54646301269531
patch: } else { if ; continue ;
rank: 511
score: 98.44857025146484
patch: style = 0 ; break ; }
rank: 511
score: 98.33252563476563
patch: return continue ] ;
rank: 511
score: 97.95924886067708
patch: if 1 ; continue ;
rank: 512
score: 98.56316375732422
patch: limit ++ ; continue ; } }
rank: 512
score: 98.54643419053819
patch: continue ; } else * * * /
rank: 512
score: 98.47206115722656
patch: continue ; } else return i ;
rank: 512
score: 98.44834681919643
patch: n ++ ; break ; }
rank: 512
score: 98.33198765345982
patch: count continue ; } continue ;
rank: 512
score: 97.9591776529948
patch: count false ; continue ;
rank: 513
score: 98.68553331163194
patch: = search CaMeL Chars [ j ] ;
rank: 513
score: 98.58469935825893
patch: continue ? 0 : 0 ;
rank: 513
score: 98.5631103515625
patch: continue ; } finally { continue ; } }
rank: 513
score: 98.55713907877605
patch: break ; } else {
rank: 513
score: 98.54627227783203
patch: continue ; = continue ; } }
rank: 513
score: 98.54472351074219
patch: chars [ j ] = ch ;
rank: 513
score: 98.44816080729167
patch: found = 1 ; break ; } }
rank: 513
score: 98.32960001627605
patch: end ( ; continue ;
rank: 513
score: 97.9580790201823
patch: if continue ; ; ;
rank: 514
score: 98.68509347098214
patch: search CaMeL Len -- ; }
rank: 514
score: 98.5832290649414
patch: if ( search CaMeL Len - }
rank: 514
score: 98.54388427734375
patch: return count ? 0 : 0 ;
rank: 514
score: 98.47032165527344
patch: } else { return i ; }
rank: 514
score: 98.32847595214844
patch: return continue ; } continue ; *
rank: 514
score: 97.95625813802083
patch: if $NUMBER$ ; continue ;
rank: 515
score: 98.58232116699219
patch: return search CaMeL Len - 1 ;
rank: 515
score: 98.56207275390625
patch: return - 1 ; } } } continue ;
rank: 515
score: 98.55322943793402
patch: switch ( INDEX _ NOT _ FOUND )
rank: 515
score: 98.46792602539062
patch: f [ j ] = ch ;
rank: 515
score: 98.44783020019531
patch: -- i ; break ; } }
rank: 515
score: 97.95579020182292
patch: m false ; continue ;
rank: 516
score: 98.68458387586806
patch: continue ; } return cs . length ;
rank: 516
score: 98.58100891113281
patch: throw new int [ 1 ] ;
rank: 516
score: 98.56200561523437
patch: continue ; count ++ ; break ; } }
rank: 516
score: 98.54861450195312
patch: table . return i ; } }
rank: 516
score: 98.54339599609375
patch: continue ; } else = continue ; ;
rank: 516
score: 98.53985595703125
patch: return count - search CaMeL Len ;
rank: 516
score: 98.46762084960938
patch: continue ; } } return j ;
rank: 516
score: 98.44756317138672
patch: break ; case $STRING$ : continue ;
rank: 516
score: 98.32686614990234
patch: j * * 1 ; continue ;
rank: 516
score: 97.9545186360677
patch: break ; ; continue ;
rank: 517
score: 98.67427571614583
patch: return cs . append ( ch ) ;
rank: 517
score: 98.58097076416016
patch: sb . add ( ch ) ;
rank: 517
score: 98.56182183159723
patch: continue ; default : throw new ; }
rank: 517
score: 98.5447006225586
patch: is CaMeL Empty = true ; }
rank: 517
score: 98.54325648716518
patch: return 0 ; } } else
rank: 517
score: 98.467529296875
patch: return 0 ; } else { }
rank: 517
score: 98.44678497314453
patch: break count + 1 ; } }
rank: 517
score: 97.95149739583333
patch: continue ; ; ; *
rank: 518
score: 98.58097076416016
patch: search CaMeL Chars [ cs CaMeL Len
rank: 518
score: 98.56152954101563
patch: continue ; } else { return continue ; }
rank: 518
score: 98.54316711425781
patch: return 0 ; } ; } }
rank: 518
score: 98.54151746961806
patch: false return INDEX _ NOT _ FOUND ;
rank: 518
score: 98.46729278564453
patch: static [ i ] = ch ;
rank: 518
score: 98.44676971435547
patch: sb . append ( $STRING$ ) ;
rank: 518
score: 97.95116170247395
patch: System ; ; continue ;
rank: 519
score: 98.6715087890625
patch: a = INDEX _ NOT _ FOUND ;
rank: 519
score: 98.58079528808594
patch: out . append ( ch ) ;
rank: 519
score: 98.56128946940105
patch: return count ; } }
rank: 519
score: 98.54316711425781
patch: continue ; } continue ; if ;
rank: 519
score: 98.53818766276042
patch: break ; } } } return count ;
rank: 519
score: 98.4662094116211
patch: return Integer . size ( ) ;
rank: 519
score: 98.32512817382812
patch: result = continue ;
rank: 519
score: 97.95033772786458
patch: next ( ; continue ;
rank: 520
score: 98.6685791015625
patch: search CaMeL Len -- ; return i ;
rank: 520
score: 98.57913208007812
patch: search CaMeL Chars [ j
rank: 520
score: 98.56124877929688
patch: return i + $NUMBER$ ; } }
rank: 520
score: 98.53087615966797
patch: break ; } } return true ;
rank: 520
score: 98.46404266357422
patch: continue ; } return ch ; }
rank: 520
score: 98.32482147216797
patch: key . next ( ; continue ;
rank: 520
score: 97.94782257080078
patch: outer continue ;
rank: 521
score: 98.66397094726562
patch: return search CaMeL Chars . length ;
rank: 521
score: 98.56089477539062
patch: continue ; } else if ( continue ; }
rank: 521
score: 98.54216851128473
patch: return $NUMBER$ ; } else { continue ;
rank: 521
score: 98.46339634486607
patch: return i ; } break ;
rank: 521
score: 98.44527762276786
patch: j ++ ; continue ; }
rank: 521
score: 97.94478352864583
patch: return false ; continue ;
rank: 522
score: 98.56032889229911
patch: found ; continue ; } }
rank: 522
score: 98.54215240478516
patch: return 1 ; } ; ; }
rank: 522
score: 98.52817111545139
patch: tag = INDEX _ NOT _ FOUND ;
rank: 522
score: 98.44505310058594
patch: continue 1 ; i ++ ; }
rank: 522
score: 98.32437133789062
patch: continue ; } continue ; next ;
rank: 522
score: 97.9438985188802
patch: if false ; break ;
rank: 523
score: 98.54196506076389
patch: return 1 ; } } else if ;
rank: 523
score: 98.52521514892578
patch: result = i ; continue ; }
rank: 523
score: 98.51505279541016
patch: return search CaMeL Chars [ j ]
rank: 523
score: 98.46012878417969
patch: return Math . size ( ) ;
rank: 523
score: 98.32421112060547
patch: iterator . next ( ; continue ;
rank: 523
score: 97.94053141276042
patch: continue ; continue ; this
rank: 524
score: 98.65589141845703
patch: buf . append ( ch ) ;
rank: 524
score: 98.5694351196289
patch: result = search CaMeL Chars [ j
rank: 524
score: 98.55937848772321
patch: return ; break ; } }
rank: 524
score: 98.52497694227431
patch: entry = INDEX _ NOT _ FOUND ;
rank: 524
score: 98.51176452636719
patch: continue continue ? 0 : 0 ;
rank: 524
score: 98.45858328683036
patch: continue ; } return ch ;
rank: 524
score: 98.4442367553711
patch: visible = true ; break ; }
rank: 524
score: 98.32411702473958
patch: return - 1 ; ;
rank: 524
score: 97.94031524658203
patch: { continue ;
rank: 525
score: 98.56822858537946
patch: if ( search CaMeL Chars [
rank: 525
score: 98.55885532924107
patch: continue count ; } ; }
rank: 525
score: 98.5224838256836
patch: += INDEX _ NOT _ FOUND ;
rank: 525
score: 98.50853729248047
patch: buf [ j ] = ch }
rank: 525
score: 98.458251953125
patch: return $STRING$ ; } }
rank: 525
score: 97.93936157226562
patch: continue ; if ; continue
rank: 526
score: 98.65144348144531
patch: return ( 0 - 1 ) ;
rank: 526
score: 98.55884467230902
patch: break ; } } else if ( ;
rank: 526
score: 98.5415267944336
patch: { continue ; } } else {
rank: 526
score: 98.50790841238839
patch: return ++ cs CaMeL Len ;
rank: 526
score: 98.45748138427734
patch: method [ j ] = ch ;
rank: 526
score: 98.32122802734375
patch: do . append ( continue ) ;
rank: 526
score: 97.93783569335938
patch: ; ; continue ;
rank: 527
score: 98.56372833251953
patch: cs . add ( ch ) ;
rank: 527
score: 98.54130723741319
patch: continue [ i ] ; } continue ;
rank: 527
score: 98.45693969726562
patch: return name [ j ] ; }
rank: 527
score: 98.44254302978516
patch: ok ++ ; break ; } }
rank: 527
score: 98.32009887695312
patch: continue ; / ++ * * /
rank: 527
score: 97.93436686197917
patch: continue ; out ; ;
rank: 528
score: 98.55912780761719
patch: arg [ j ] = ch ;
rank: 528
score: 98.55806477864583
patch: return - 1 ; } } continue ;
rank: 528
score: 98.54124450683594
patch: return 0 ; } else ; }
rank: 528
score: 98.4567642211914
patch: expr [ j ] = ch ;
rank: 528
score: 98.44224548339844
patch: return - 1 ; } continue ;
rank: 528
score: 97.92347208658855
patch: true ; ; continue ;
rank: 529
score: 98.5587387084961
patch: return cs . trim ( ) ;
rank: 529
score: 98.54103088378906
patch: return 1 + 1 ; } }
rank: 529
score: 98.51833089192708
patch: found = i ; }
rank: 529
score: 98.45665740966797
patch: continue ; } i = i ;
rank: 529
score: 98.44095865885417
patch: n = i ; break ; } }
rank: 529
score: 97.92302856445312
patch: } if continue ;
rank: 530
score: 98.55854034423828
patch: continue ; } } return null ;
rank: 530
score: 98.54092746310764
patch: break ; } } else { break ;
rank: 530
score: 98.50205993652344
patch: return count ? 0 : i ;
rank: 530
score: 98.31897844587054
patch: outer = continue ; break ;
rank: 530
score: 97.92166137695312
patch: end true ; continue ;
rank: 531
score: 98.64199490017361
patch: name = INDEX _ NOT _ FOUND ;
rank: 531
score: 98.55548095703125
patch: continue ; } ; if ( ; }
rank: 531
score: 98.54078674316406
patch: return 0 ; } } catch ;
rank: 531
score: 98.51478407118056
patch: switch ( search CaMeL Len ) { }
rank: 531
score: 98.50031389508929
patch: return -- cs CaMeL Len ;
rank: 531
score: 98.45236206054688
patch: return chars [ j ] ; }
rank: 531
score: 98.31741768973214
patch: continue * continue 1 ; }
rank: 531
score: 97.91734822591145
patch: / false ; continue ;
rank: 532
score: 98.55522155761719
patch: break ; break ; } } }
rank: 532
score: 98.54063415527344
patch: * * * ; continue ; }
rank: 532
score: 98.498291015625
patch: return search CaMeL Len - 0 ;
rank: 532
score: 98.44028049045139
patch: changed = 1 ; break ; } }
rank: 532
score: 98.31611851283482
patch: continue < continue - 1 ;
rank: 532
score: 97.91676839192708
patch: continue ; ; = ;
rank: 533
score: 98.6396484375
patch: info [ j ] = ch ;
rank: 533
score: 98.55484771728516
patch: bp ++ ; break ; } }
rank: 533
score: 98.54041205512152
patch: throw null ; } } } continue ;
rank: 533
score: 98.50638156467014
patch: max = search CaMeL Chars . length ;
rank: 533
score: 98.44975280761719
patch: continue ; } } j ++ ;
rank: 533
score: 98.44025336371527
patch: continue 0 ; } continue 0 ; }
rank: 533
score: 98.31597900390625
patch: return continue ; ++ continue ;
rank: 533
score: 97.91654052734376
patch: continue ; ; *
rank: 534
score: 98.63838704427083
patch: if ( ch == ch ) continue ;
rank: 534
score: 98.53940255301339
patch: return $NUMBER$ ; } else {
rank: 534
score: 98.50357491629464
patch: true ) { continue ; }
rank: 534
score: 98.49382019042969
patch: return continue ? 0 : 0 ;
rank: 534
score: 98.4491958618164
patch: continue ; } return true ; }
rank: 534
score: 98.43928527832031
patch: pos = i ; break ; }
rank: 534
score: 98.31590053013393
patch: continue - 0 ; break ;
rank: 534
score: 97.91472625732422
patch: return count ;
rank: 535
score: 98.55459594726562
patch: break ; } else continue ; }
rank: 535
score: 98.53923688616071
patch: continue ; } else false ;
rank: 535
score: 98.50332980685764
patch: break ; } } } return 0 ;
rank: 535
score: 98.49363708496094
patch: return 0 + search CaMeL Len ;
rank: 535
score: 98.44915008544922
patch: tmp [ i ] = ch ;
rank: 535
score: 98.43915473090277
patch: continue false ; } if ( ; }
rank: 535
score: 98.31588745117188
patch: continue ; ] continue ;
rank: 535
score: 97.91233317057292
patch: break ; ; ; ;
rank: 536
score: 98.63477918836806
patch: throw INDEX _ NOT _ FOUND ; }
rank: 536
score: 98.53907267252605
patch: return ] ; } }
rank: 536
score: 98.44902038574219
patch: return ( char ) ch ; }
rank: 536
score: 98.43840789794922
patch: continue 0 ; } continue 0 ;
rank: 536
score: 98.31515938895089
patch: continue * continue ++ continue ;
rank: 536
score: 97.9071756998698
patch: continue ; ; / /
rank: 537
score: 98.63398742675781
patch: throw new char [ 1 ] ;
rank: 537
score: 98.55402374267578
patch: pos ++ ; break ; } ;
rank: 537
score: 98.49700927734375
patch: start = INDEX _ NOT _ FOUND ;
rank: 537
score: 98.4900894165039
patch: return search CaMeL Len + ch ;
rank: 537
score: 98.44816589355469
patch: j ++ ; j ++ ; }
rank: 537
score: 98.43672398158482
patch: continue true ; break ; }
rank: 537
score: 97.90380859375
patch: return new continue ;
rank: 538
score: 98.55385044642857
patch: continue ; default ; } }
rank: 538
score: 98.5379638671875
patch: return continue ; } else {
rank: 538
score: 98.49572075737848
patch: while ( j < search CaMeL Len )
rank: 538
score: 98.44573974609375
patch: continue true ; } return i ;
rank: 538
score: 98.43629286024306
patch: binding = 0 ; break ; } }
rank: 538
score: 97.90334065755208
patch: continue ; } ; /
rank: 539
score: 98.55330200195313
patch: continue ; } ; } while ( ; )
rank: 539
score: 98.54975237165179
patch: return cs [ j ] ;
rank: 539
score: 98.53787231445312
patch: continue ; } } / * /
rank: 539
score: 98.48523712158203
patch: return i ? 0 : i ;
rank: 539
score: 98.31107003348214
patch: continue * ; } continue ;
rank: 539
score: 97.9027608235677
patch: next true ; continue ;
rank: 540
score: 98.62995910644531
patch: continue ; } } return cs ;
rank: 540
score: 98.55308024088542
patch: continue ; * continue ; } ; }
rank: 540
score: 98.5372314453125
patch: = 0 ; continue ; } }
rank: 540
score: 98.48297119140625
patch: if ( true ) { continue ;
rank: 540
score: 98.43594699435764
patch: continue true ; } continue false ; }
rank: 540
score: 98.30950927734375
patch: / continue ; } continue ;
rank: 540
score: 97.90133666992188
patch: for ; continue ;
rank: 541
score: 98.62885284423828
patch: result = i ; break ; }
rank: 541
score: 98.53720092773438
patch: return $NUMBER$ ; break ; } }
rank: 541
score: 98.48593478732639
patch: return j ; } } return i ;
rank: 541
score: 98.44271850585938
patch: return size ; } j ++ ;
rank: 541
score: 98.43551974826389
patch: count ++ ; break ; } } ;
rank: 541
score: 98.30855015345982
patch: i * continue ; break ;
rank: 541
score: 97.90066528320312
patch: return $NUMBER$ ; break ;
rank: 542
score: 98.54660034179688
patch: search CaMeL Len ( ch ) ;
rank: 542
score: 98.53683810763889
patch: continue ; * * * * / }
rank: 542
score: 98.44100516183036
patch: return length ( ) ; }
rank: 542
score: 98.43551635742188
patch: pos = 0 ; break ; }
rank: 542
score: 98.30800955636161
patch: else { continue - 1 ;
rank: 542
score: 97.90043131510417
patch: continue ; else break ;
rank: 543
score: 98.55148315429688
patch: return ; } } else continue ;
rank: 543
score: 98.53659493582589
patch: continue * $NUMBER$ ; } }
rank: 543
score: 98.4407730102539
patch: items [ j ] = ch ;
rank: 543
score: 98.4350814819336
patch: n = 0 ; break ; }
rank: 543
score: 98.30517578125
patch: else { continue ; } }
rank: 544
score: 98.54423522949219
patch: cs CaMeL Len = 0 ; }
rank: 544
score: 98.53640407986111
patch: continue ; } else { false ; }
rank: 544
score: 98.4776382446289
patch: continue i ;
rank: 544
score: 98.43484836154514
patch: retval = 1 ; break ; } }
rank: 544
score: 98.30471365792411
patch: / * ] = continue ;
rank: 544
score: 97.89235432942708
patch: continue continue ; continue ;
rank: 545
score: 98.55026681082589
patch: found = true ; break ;
rank: 545
score: 98.54351806640625
patch: result = 0 ; }
rank: 545
score: 98.53599548339844
patch: } else { continue ; ; }
rank: 545
score: 98.48147922092014
patch: [ INDEX _ NOT _ FOUND ; }
rank: 545
score: 98.47664642333984
patch: continue ( i + $NUMBER$ ) ;
rank: 545
score: 98.4395751953125
patch: return size ( ) ; } }
rank: 545
score: 98.43458557128906
patch: false = true ; break ; }
rank: 545
score: 98.30441284179688
patch: } else { continue ;
rank: 545
score: 97.89090983072917
patch: continue ; continue ; j
rank: 546
score: 98.61883544921875
patch: info = INDEX _ NOT _ FOUND ;
rank: 546
score: 98.55007498604911
patch: return ; } break ; }
rank: 546
score: 98.54042053222656
patch: start [ j ] = ch ;
rank: 546
score: 98.53575981987848
patch: continue ; } if ; = continue ;
rank: 546
score: 98.47642299107143
patch: return name [ j ] ;
rank: 546
score: 98.43951416015625
patch: throw null ; }
rank: 546
score: 98.30309041341145
patch: throw new Throwable continue ;
rank: 546
score: 97.88828531901042
patch: } if ; continue ;
rank: 547
score: 98.5386734008789
patch: return index CaMeL Of CaMeL Any ;
rank: 547
score: 98.47708129882812
patch: false ; continue ; }
rank: 547
score: 98.43868001302083
patch: return false ; } }
rank: 547
score: 98.43403455946181
patch: result = 1 ; break ; } }
rank: 547
score: 97.88762817382812
patch: continue ; true ;
rank: 548
score: 98.61604309082031
patch: array [ j ] = ch ;
rank: 548
score: 98.54984283447266
patch: return continue ; break ; } }
rank: 548
score: 98.53721618652344
patch: e [ i ] = ch ;
rank: 548
score: 98.53465270996094
patch: continue ; } } if ; else
rank: 548
score: 98.47364044189453
patch: return ch ? 0 : 0 ;
rank: 548
score: 98.47111511230469
patch: is CaMeL Empty ; continue ; }
rank: 548
score: 98.4370346069336
patch: return i ; } } break ;
rank: 548
score: 98.43379429408482
patch: continue false ; } if ;
rank: 548
score: 98.29963902064732
patch: continue continue ; } else {
rank: 549
score: 98.61412811279297
patch: children [ j ] = ch ;
rank: 549
score: 98.5494384765625
patch: result [ ; break ; } }
rank: 549
score: 98.43541717529297
patch: continue ; } return ++ j ;
rank: 549
score: 98.43361409505208
patch: break count ; } }
rank: 549
score: 98.29828752790179
patch: continue * - 1 ; }
rank: 549
score: 97.88511149088542
patch: return null ; break ;
rank: 550
score: 98.5494384765625
patch: continue ; } search CaMeL Len ++ ; ;
rank: 550
score: 98.53403727213542
patch: continue ; } } else return continue ;
rank: 550
score: 98.4716567993164
patch: if ( false ) { continue ;
rank: 550
score: 98.4677734375
patch: end = search CaMeL Chars . length ;
rank: 550
score: 98.43435668945312
patch: continue ; } } return ch ;
rank: 550
score: 98.43341827392578
patch: continue 0 ; } if ( ;
rank: 550
score: 98.29691859654018
patch: outer continue ; } continue ;
rank: 550
score: 97.87901814778645
patch: throw new Error continue ;
rank: 551
score: 98.54939270019531
patch: continue ; ++ continue ; } }
rank: 551
score: 98.53385925292969
patch: continue ; } else = ; ;
rank: 551
score: 98.533203125
patch: search CaMeL Len = 1 ; }
rank: 551
score: 98.46935272216797
patch: return j ? 0 : 0 ;
rank: 551
score: 98.43384806315105
patch: continue i ; } }
rank: 551
score: 98.43338448660714
patch: limit -- ; break ; }
rank: 551
score: 97.87701416015625
patch: return $STRING$ ;
rank: 552
score: 98.54913330078125
patch: binding = ; break ; } }
rank: 552
score: 98.53350830078125
patch: } else { continue ; } } }
rank: 552
score: 98.46489122178819
patch: limit = search CaMeL Chars . length ;
rank: 552
score: 98.43351745605469
patch: return $NUMBER$ ; } j ++ ;
rank: 552
score: 98.43315124511719
patch: found = false ; break ; }
rank: 552
score: 98.29434640066964
patch: out . arraycopy continue true ;
rank: 552
score: 97.87563069661458
patch: if ; { break ;
rank: 553
score: 98.549072265625
patch: continue ; } } while ( true ;
rank: 553
score: 98.46297200520833
patch: true { continue ; }
rank: 553
score: 98.43308512369792
patch: throw new Error ( $STRING$ ) ; }
rank: 553
score: 98.429443359375
patch: continue ; } return true ;
rank: 553
score: 97.87383422851562
patch: continue ; false ;
rank: 554
score: 98.54855346679688
patch: continue ; } ; if ( ;
rank: 554
score: 98.5331039428711
patch: break ; } else if ; ;
rank: 554
score: 98.52932739257812
patch: start = 0 ; return i ;
rank: 554
score: 98.4602559407552
patch: found = true ; }
rank: 554
score: 98.45846557617188
patch: return System . size ( ) ;
rank: 554
score: 98.43233235677083
patch: col . append ( $STRING$ ) ; }
rank: 554
score: 98.4290262858073
patch: return - 0 ; }
rank: 554
score: 98.29359654017857
patch: } continue ; } break ;
rank: 554
score: 97.87376912434895
patch: continue ; continue ; next
rank: 555
score: 98.60208129882812
patch: column [ j ] = ch ;
rank: 555
score: 98.54840766059027
patch: ++ search CaMeL Len ; break ; }
rank: 555
score: 98.53268432617188
patch: break ; } } else { }
rank: 555
score: 98.45999145507812
patch: break ; } break ; } }
rank: 555
score: 98.42892892020089
patch: return [ i ] ; }
rank: 555
score: 97.87267049153645
patch: found false ; continue ;
rank: 556
score: 98.53221978081598
patch: continue ; } else ; if ; }
rank: 556
score: 98.52682495117188
patch: search CaMeL Len = continue ; }
rank: 556
score: 98.45553152901786
patch: return chars [ j ] ;
rank: 556
score: 98.43199920654297
patch: count ++ ; return 1 ; }
rank: 556
score: 98.42788696289062
patch: vals [ j ] = ch ;
rank: 556
score: 98.29197474888393
patch: continue ; / / break ;
rank: 556
score: 97.87232666015625
patch: if continue ; ;
rank: 557
score: 98.60176595052083
patch: buffer [ j ] = ch ; }
rank: 557
score: 98.53180541992188
patch: break ; } else
rank: 557
score: 98.52619171142578
patch: return search CaMeL Chars . char CaMeL
rank: 557
score: 98.45841979980469
patch: is CaMeL Empty = false ; }
rank: 557
score: 98.4532470703125
patch: return ( i + 1 ) ;
rank: 557
score: 98.42697143554688
patch: continue 1 ; } return i ;
rank: 557
score: 98.29085867745536
patch: out . append continue continue ;
rank: 557
score: 97.87228393554688
patch: continue ; out ;
rank: 558
score: 98.5979232788086
patch: start = 0 ; i ++ ;
rank: 558
score: 98.54654269748264
patch: continue ; break - 1 ; } }
rank: 558
score: 98.53177218967014
patch: continue ; } if ( ! continue ;
rank: 558
score: 98.45278930664062
patch: return count + search CaMeL Len ;
rank: 558
score: 98.43065728081598
patch: count ++ ; return 0 ; } }
rank: 558
score: 98.42632293701172
patch: } } return cs CaMeL Len ;
rank: 558
score: 97.86789957682292
patch: continue ; ; log ;
rank: 559
score: 98.54649658203125
patch: continue ; } } if ( Character . ;
rank: 559
score: 98.53151448567708
patch: break ; } else if ( continue ;
rank: 559
score: 98.45506286621094
patch: found = i ; continue ; }
rank: 559
score: 98.43043518066406
patch: return - 1 ; } else {
rank: 559
score: 98.42608642578125
patch: { return 0 ; }
rank: 559
score: 97.86615600585938
patch: else ; continue ;
rank: 560
score: 98.59645080566406
patch: end [ j ] = ch ;
rank: 560
score: 98.53142632378473
patch: continue ; } else { return $NUMBER$ ;
rank: 560
score: 98.45022583007812
patch: continue ( i + 0 ) ;
rank: 560
score: 98.42449951171875
patch: i ++ ; j ++ ; }
rank: 560
score: 98.28931884765625
patch: for continue ; ;
rank: 560
score: 97.86373901367188
patch: outer if ; continue ;
rank: 561
score: 98.54614935980902
patch: continue ; } else continue ; } ;
rank: 561
score: 98.53102111816406
patch: } else * * * * /
rank: 561
score: 98.4512939453125
patch: continue ; } } return i ; }
rank: 561
score: 98.4295654296875
patch: break - 1 ; } if ( ;
rank: 561
score: 98.42323521205357
patch: continue ; return i ; }
rank: 561
score: 98.28927176339286
patch: j * ; { continue ;
rank: 561
score: 97.86258951822917
patch: out ; ; continue ;
rank: 562
score: 98.5308837890625
patch: continue * * continue ; }
rank: 562
score: 98.51957702636719
patch: result = i ; j ++ ;
rank: 562
score: 98.45079803466797
patch: ! INDEX _ NOT _ FOUND ;
rank: 562
score: 98.44548034667969
patch: return length ? 0 : 0 ;
rank: 562
score: 98.42322540283203
patch: return cs [ j ] ; }
rank: 562
score: 97.86026000976562
patch: continue ; return null ;
rank: 563
score: 98.54596819196429
patch: c ; break ; } }
rank: 563
score: 98.53074815538194
patch: break ; } else return continue ; }
rank: 563
score: 98.51364135742188
patch: cs . append ( ch ) ;
rank: 563
score: 98.44137573242188
patch: return search CaMeL Len - i ;
rank: 563
score: 98.42933000837054
patch: notify CaMeL All ( ) ;
rank: 563
score: 98.42314147949219
patch: return new int [ $NUMBER$ ] ;
rank: 563
score: 98.28836059570312
patch: try { continue ;
rank: 563
score: 97.8553466796875
patch: return true ; break ;
rank: 564
score: 98.59333038330078
patch: ret [ i ] = ch ;
rank: 564
score: 98.54585484095982
patch: outer : continue ; } }
rank: 564
score: 98.53074815538194
patch: * * * continue ; } continue ;
rank: 564
score: 98.44894070095486
patch: < search CaMeL Chars . length ) {
rank: 564
score: 98.441162109375
patch: stack [ j ] = ch ;
rank: 564
score: 98.42925347222223
patch: break - 1 ; } } else {
rank: 564
score: 98.28800746372768
patch: continue ; / catch continue ;
rank: 564
score: 97.85428873697917
patch: continue ; continue ; throws
rank: 565
score: 98.54567260742188
patch: found = true ; break ; } } ;
rank: 565
score: 98.53072781032986
patch: return 0 ; } } } if ;
rank: 565
score: 98.44880676269531
patch: break ; } } } else {
rank: 565
score: 98.42147827148438
patch: return value [ j ] ; }
rank: 565
score: 98.28546142578125
patch: try { continue ; break ;
rank: 565
score: 97.85422770182292
patch: } ; ; continue ;
rank: 566
score: 98.54531521267361
patch: found = j ; break ; } }
rank: 566
score: 98.5300064086914
patch: { { continue ; } } }
rank: 566
score: 98.44053649902344
patch: return i + search CaMeL Len ;
rank: 566
score: 98.42829047309027
patch: count -= 1 ; break ; } }
rank: 566
score: 98.28459821428571
patch: continue ; / next continue ;
rank: 566
score: 97.85365804036458
patch: continue ; } false ;
rank: 567
score: 98.59127807617188
patch: continue ; } } throw 0 ;
rank: 567
score: 98.54528045654297
patch: continue ; } } while ; ;
rank: 567
score: 98.52990044487848
patch: continue ; } finally = continue ; }
rank: 567
score: 98.44662814670139
patch: n = search CaMeL Chars . length ;
rank: 567
score: 98.44023895263672
patch: return to CaMeL String ( ) ;
rank: 567
score: 98.41897583007812
patch: return new long [ 0 ] ;
rank: 567
score: 98.2840576171875
patch: while ( continue ; continue ;
rank: 567
score: 97.85353597005208
patch: continue ; count -- ;
rank: 568
score: 98.59125627790179
patch: result = i ; break ;
rank: 568
score: 98.5448226928711
patch: throw new ; } continue ; }
rank: 568
score: 98.5296630859375
patch: continue ; } else / * /
rank: 568
score: 98.44615681966145
patch: ; return i ; }
rank: 568
score: 98.43830108642578
patch: string [ j ] = ch ;
rank: 568
score: 98.41830444335938
patch: continue ; } ch ++ ; }
rank: 568
score: 98.28386579241071
patch: char continue ; if continue ;
rank: 568
score: 97.85293579101562
patch: continue ; else false ;
rank: 569
score: 98.52899848090277
patch: return 1 ; } } } else {
rank: 569
score: 98.50560651506696
patch: return search CaMeL Chars [ i
rank: 569
score: 98.44291687011719
patch: table [ i ] = ch ;
rank: 569
score: 98.42464870876736
patch: continue ; } else if ( continue )
rank: 569
score: 98.41828155517578
patch: continue i ; } return j ;
rank: 569
score: 97.8510986328125
patch: break ; ; ;
rank: 570
score: 98.54407610212054
patch: continue ; ; ; } }
rank: 570
score: 98.52803802490234
patch: continue ; } else if ; else
rank: 570
score: 98.43997531467014
patch: break ; } } return - 1 ;
rank: 570
score: 98.42318386501736
patch: pos = j ; break ; } }
rank: 570
score: 98.41659545898438
patch: files [ j ] = ch ;
rank: 570
score: 97.85089111328125
patch: if continue ; ; /
rank: 571
score: 98.54347446986607
patch: return i ; } else {
rank: 571
score: 98.50399017333984
patch: result = 0 ; return 0 ;
rank: 571
score: 98.43547821044922
patch: search CaMeL Len i ++ ; }
rank: 571
score: 98.43239339192708
patch: ret = i ; }
rank: 571
score: 98.42170061383929
patch: break false ; } break ;
rank: 571
score: 98.41622924804688
patch: temp [ j ] = ch ;
rank: 571
score: 98.27852085658482
patch: continue ; / / / ;
rank: 571
score: 97.8506571451823
patch: continue ; continue ; check
rank: 572
score: 98.5868631998698
patch: return [ j ] ;
rank: 572
score: 98.54309760199652
patch: continue ; } ; } continue ; ;
rank: 572
score: 98.5273946126302
patch: continue ; } else }
rank: 572
score: 98.50140380859375
patch: search CaMeL Chars [ j ] =
rank: 572
score: 98.43376159667969
patch: continue ( 0 . 0 ) ;
rank: 572
score: 98.41612243652344
patch: bytes [ j ] = ch ;
rank: 572
score: 97.84818522135417
patch: continue ; count ++ ;
rank: 573
score: 98.58397674560547
patch: throw new byte [ 1 ] ;
rank: 573
score: 98.54304504394531
patch: return index CaMeL Of ; } }
rank: 573
score: 98.52706473214286
patch: continue ] ; } continue ;
rank: 573
score: 98.42359161376953
patch: len = search CaMeL Len ; }
rank: 573
score: 98.42087227957589
patch: continue ; length -- ; }
rank: 573
score: 98.27569580078125
patch: j * continue ; break ;
rank: 573
score: 97.84129842122395
patch: end $NUMBER$ ; continue ;
rank: 574
score: 98.54252624511719
patch: result [ ; continue ; } }
rank: 574
score: 98.52549743652344
patch: continue ; } } catch ; }
rank: 574
score: 98.49658966064453
patch: out . add ( ch ) ;
rank: 574
score: 98.42613983154297
patch: continue ( search CaMeL Len ) ;
rank: 574
score: 98.42069498697917
patch: this . continue ; }
rank: 574
score: 98.41948699951172
patch: table [ j ] = ch ;
rank: 574
score: 98.41526794433594
patch: return count ; } return i ;
rank: 574
score: 97.83856201171875
patch: continue ; continue ; first
rank: 575
score: 98.58148193359375
patch: continue } } return i ;
rank: 575
score: 98.52545166015625
patch: continue ; } else ; } else
rank: 575
score: 98.42613220214844
patch: return search CaMeL Len + 1 ;
rank: 575
score: 98.41884940011161
patch: continue ; 1 -- ; }
rank: 575
score: 98.41507720947266
patch: return j ; } j ++ ;
rank: 575
score: 98.27267020089286
patch: break ; } return continue ;
rank: 576
score: 98.54102918836806
patch: continue ; } ; } * continue ;
rank: 576
score: 98.52543640136719
patch: outer * * * continue ; }
rank: 576
score: 98.49452209472656
patch: result = false ; return i ;
rank: 576
score: 98.42449951171875
patch: continue ( ch ) ;
rank: 576
score: 98.41460418701172
patch: return size ; } return i ;
rank: 576
score: 98.41455078125
patch: break ; } } } else
rank: 576
score: 98.27263532366071
patch: * * ] = continue ;
rank: 576
score: 97.83487548828126
patch: do if continue ;
rank: 577
score: 98.58094024658203
patch: a [ j ] = ch ;
rank: 577
score: 98.5409164428711
patch: return continue ; } else if ;
rank: 577
score: 98.52520751953125
patch: return 1 ; } } if ; }
rank: 577
score: 98.42314147949219
patch: result = ( int ) continue ;
rank: 577
score: 98.41458129882812
patch: return name [ i ] ; }
rank: 577
score: 97.83411661783855
patch: next $NUMBER$ ; continue ;
rank: 578
score: 98.54087611607143
patch: continue ; ++ count ; }
rank: 578
score: 98.52480740017361
patch: { continue ; } else { continue ;
rank: 578
score: 98.47884695870536
patch: search CaMeL Len = continue ;
rank: 578
score: 98.42213439941406
patch: return start ? 0 : 0 ;
rank: 578
score: 98.41756863064236
patch: count ++ ; return - 1 ; }
rank: 578
score: 98.41423688616071
patch: return size [ j ] ;
rank: 578
score: 98.41328430175781
patch: break ; } } return cs ;
rank: 578
score: 98.27117047991071
patch: continue ; * ++ continue ;
rank: 578
score: 97.8327128092448
patch: outer ; continue ; /
rank: 579
score: 98.5782699584961
patch: types [ j ] = ch ;
rank: 579
score: 98.54073333740234
patch: pos ++ ; ; continue ; }
rank: 579
score: 98.52428327287946
patch: continue ; } else / ;
rank: 579
score: 98.46994454520089
patch: return cs [ i ] ;
rank: 579
score: 98.41620744977679
patch: if ; break ; } }
rank: 579
score: 98.41192626953125
patch: return new boolean [ 0 ] ;
rank: 579
score: 98.4041748046875
patch: ! search CaMeL Len ++ ; }
rank: 579
score: 98.26778157552083
patch: continue = continue ; }
rank: 579
score: 97.83017578125
patch: while ; continue ;
rank: 580
score: 98.57648468017578
patch: throw new byte [ 0 ] ;
rank: 580
score: 98.54042561848958
patch: continue continue ; } break ; } ;
rank: 580
score: 98.52424452039931
patch: * * * * * ; continue ;
rank: 580
score: 98.4167251586914
patch: continue INDEX _ NOT _ FOUND }
rank: 580
score: 98.41605922154018
patch: continue ; } case $STRING$ :
rank: 580
score: 98.41191101074219
patch: v [ j ] = ch ;
rank: 580
score: 97.8298848470052
patch: continue ; continue ; type
rank: 581
score: 98.54011366102431
patch: continue ; } ++ ; } continue ;
rank: 581
score: 98.52391899956598
patch: continue ; } else throw false ; }
rank: 581
score: 98.41592068142361
patch: break ; case $STRING$ : continue ; }
rank: 581
score: 98.4097900390625
patch: return true ; } }
rank: 581
score: 98.39982096354167
patch: true ) continue ; }
rank: 581
score: 97.82823689778645
patch: return 0 ; break ;
rank: 582
score: 98.53977457682292
patch: continue ; } ; break ; } }
rank: 582
score: 98.523681640625
patch: * * * continue ; } }
rank: 582
score: 98.41583251953125
patch: pos -- ; break ; }
rank: 582
score: 98.40899658203125
patch: } else { return 0 ; }
rank: 582
score: 98.26504080636161
patch: append new $STRING$ + continue ;
rank: 582
score: 97.82749430338542
patch: next -- ; continue ;
rank: 583
score: 98.53950330946181
patch: continue ; * / continue ; } }
rank: 583
score: 98.52367485894098
patch: continue ; } } * * * /
rank: 583
score: 98.4156265258789
patch: for ( int j = 0 )
rank: 583
score: 98.40872955322266
patch: outer [ j ] = ch ;
rank: 583
score: 98.39317321777344
patch: true ; } } return i ;
rank: 583
score: 98.26422991071429
patch: continue ; } break ; ;
rank: 583
score: 97.82649739583333
patch: continue ; ; ; {
rank: 584
score: 98.538818359375
patch: continue continue ; ; }
rank: 584
score: 98.52324761284723
patch: continue ; } if ; ; break ;
rank: 584
score: 98.41551971435547
patch: result [ j ] = ch ;
rank: 584
score: 98.41412353515625
patch: continue 1 ; } break $NUMBER$ ; }
rank: 584
score: 98.40847778320312
patch: continue ; } j -- ; }
rank: 584
score: 97.82638549804688
patch: for ; ; continue ;
rank: 585
score: 98.56546783447266
patch: data [ i ] = ch ;
rank: 585
score: 98.52312469482422
patch: continue ; } finally ; continue ;
rank: 585
score: 98.41399383544922
patch: return i ? 0 : j ;
rank: 585
score: 98.41346958705357
patch: break + 1 ; } }
rank: 585
score: 98.40845489501953
patch: new > ( cs ) ; }
rank: 585
score: 98.26265171595982
patch: j ++ ; if continue ;
rank: 585
score: 97.82625325520833
patch: continue ; while continue ;
rank: 586
score: 98.56486511230469
patch: data [ j ] = ch ;
rank: 586
score: 98.53849029541016
patch: return ; } } continue ; }
rank: 586
score: 98.42034912109375
patch: result = i ; continue ;
rank: 586
score: 98.41305106026786
patch: continue ; continue false ; }
rank: 586
score: 98.40843200683594
patch: return new char [ 1 ] ;
rank: 586
score: 98.40824890136719
patch: result = i ; return 0 ;
rank: 586
score: 98.26248168945312
patch: continue * 0 ; ;
rank: 586
score: 97.82532755533855
patch: add false ; continue ;
rank: 587
score: 98.53827776227679
patch: c ++ ; continue ; }
rank: 587
score: 98.52229817708333
patch: return 1 ; } } if false ;
rank: 587
score: 98.41196114676339
patch: continue ; j -- ; }
rank: 587
score: 98.40728759765625
patch: return [ j ] ; } }
rank: 587
score: 98.38546752929688
patch: synchronized ( search CaMeL Chars ) {
rank: 587
score: 98.26200648716518
patch: continue ; try { continue ;
rank: 587
score: 97.82522583007812
patch: } false ; continue ;
rank: 588
score: 98.53739420572917
patch: continue ; if ; break ; } }
rank: 588
score: 98.52130126953125
patch: continue ; } else { return ;
rank: 588
score: 98.41167534722223
patch: continue ; } case $STRING$ : continue ;
rank: 588
score: 98.40666961669922
patch: return 0 ; return 0 ; }
rank: 588
score: 98.3842061360677
patch: result = j ; }
rank: 588
score: 97.82480875651042
patch: continue ; add ; ;
rank: 589
score: 98.56266021728516
patch: result = ( int ) 0 ;
rank: 589
score: 98.53717719184027
patch: continue ; } } } return count ;
rank: 589
score: 98.52066040039062
patch: throw new Interrupted CaMeL Exception ( ;
rank: 589
score: 98.4110107421875
patch: return i ; break ; }
rank: 589
score: 98.40621948242188
patch: token [ j ] = ch ;
rank: 589
score: 98.4014892578125
patch: continue ( 0 . $NUMBER$ ) ;
rank: 589
score: 98.3789291381836
patch: break ; } j ++ ; }
rank: 589
score: 97.82474772135417
patch: continue ; } ; *
rank: 590
score: 98.53713650173611
patch: continue ; ; } } } continue ;
rank: 590
score: 98.52041286892361
patch: continue ; } if ; ; * /
rank: 590
score: 98.41271100725446
patch: System . else continue ; }
rank: 590
score: 98.41065325055804
patch: i ++ ; continue ; }
rank: 590
score: 98.39939662388393
patch: continue + cs CaMeL Len ;
rank: 590
score: 98.37876892089844
patch: switch ( cs CaMeL Len ) {
rank: 590
score: 98.26073201497395
patch: continue * 1 ; }
rank: 590
score: 97.82275390625
patch: continue ; else / ;
rank: 591
score: 98.53692626953125
patch: continue ; else break ; } }
rank: 591
score: 98.52002716064453
patch: return ; = 0 ; } }
rank: 591
score: 98.40961371527777
patch: continue - 1 ; } continue true ;
rank: 591
score: 98.40571594238281
patch: return count ; } j ++ ;
rank: 591
score: 98.39871978759766
patch: continue i ? 0 : 0 ;
rank: 591
score: 97.82106526692708
patch: true ; continue ; ;
rank: 592
score: 98.53681182861328
patch: continue ; } while ( true )
rank: 592
score: 98.51996612548828
patch: break ; } else { } }
rank: 592
score: 98.40941026475694
patch: continue ; } if ( count < ;
rank: 592
score: 98.40541076660156
patch: return cs [ i ] ; }
rank: 592
score: 98.40241350446429
patch: result = i + 1 ;
rank: 592
score: 98.25972202845982
patch: start continue ; if continue ;
rank: 592
score: 97.82002563476563
patch: Logger ; continue ;
rank: 593
score: 98.55356270926339
patch: break ; } i ++ ;
rank: 593
score: 98.53563581194196
patch: found ++ ; continue ; }
rank: 593
score: 98.40913899739583
patch: count -- ; } }
rank: 593
score: 98.40178571428571
patch: continue ; } } ) ;
rank: 593
score: 98.39592742919922
patch: return search CaMeL Len - j ;
rank: 593
score: 98.37680053710938
patch: ! search CaMeL Chars [ j ]
rank: 593
score: 98.25938197544643
patch: end ( ; { continue ;
rank: 593
score: 97.81703694661458
patch: if ; ; break ;
rank: 594
score: 98.53514268663194
patch: continue ; } default : continue ; }
rank: 594
score: 98.51934814453125
patch: continue ; } if ; } }
rank: 594
score: 98.40913609095982
patch: break ] ; break ; }
rank: 594
score: 98.4048080444336
patch: return list [ j ] ; }
rank: 594
score: 98.40167236328125
patch: continue . length ( ) ;
rank: 594
score: 98.37648228236607
patch: switch ( j ) { }
rank: 594
score: 98.25892857142857
patch: continue ; / case continue ;
rank: 594
score: 97.81599934895833
patch: System ; continue ; ;
rank: 595
score: 98.53480360243056
patch: continue continue ; } else if ( ;
rank: 595
score: 98.51734270368304
patch: continue ; } for ; ;
rank: 595
score: 98.40462493896484
patch: return chars [ i ] ; }
rank: 595
score: 98.40040806361607
patch: continue ? 1 : 0 ;
rank: 595
score: 98.39350891113281
patch: value [ j ] = ch ;
rank: 595
score: 98.3754653930664
patch: true ) { continue ; } }
rank: 595
score: 98.258056640625
patch: continue ; / continue ; }
rank: 595
score: 97.80770874023438
patch: try if continue ;
rank: 596
score: 98.55207824707031
patch: node [ j ] = ch ;
rank: 596
score: 98.51732635498047
patch: } else { if ( continue ;
rank: 596
score: 98.40843370225694
patch: continue ; } if ( ! continue )
rank: 596
score: 98.3985595703125
patch: cs . trim ( ) ;
rank: 596
score: 98.39121500651042
patch: -- search CaMeL Len ;
rank: 596
score: 98.37533569335938
patch: table . { continue ; } }
rank: 596
score: 98.2577412923177
patch: j ] = continue ;
rank: 596
score: 97.80377197265625
patch: end ; continue ;
rank: 597
score: 98.53400530133929
patch: if ; continue ; } }
rank: 597
score: 98.51722063337054
patch: { return 0 ; } }
rank: 597
score: 98.40831841362848
patch: continue false ; } else if ( ;
rank: 597
score: 98.3980712890625
patch: return length ; } }
rank: 597
score: 98.3845458984375
patch: continue : 0 ;
rank: 597
score: 98.36983816964286
patch: list . return i ; }
rank: 597
score: 98.25742885044643
patch: result = continue ; continue ;
rank: 597
score: 97.8011474609375
patch: continue ; System ;
rank: 598
score: 98.5514144897461
patch: args [ i ] = ch ;
rank: 598
score: 98.5338134765625
patch: continue ; ; } } ;
rank: 598
score: 98.51715766059027
patch: continue ] ; } else { continue ;
rank: 598
score: 98.40749782986111
patch: continue ; default : break break ; }
rank: 598
score: 98.39604840959821
patch: if ( search CaMeL Len -
rank: 598
score: 98.39555140904018
patch: continue ; } return count ;
rank: 598
score: 98.38273111979167
patch: return this . i ;
rank: 598
score: 97.78590087890625
patch: * ; continue ;
rank: 599
score: 98.55024719238281
patch: params [ j ] = ch ;
rank: 599
score: 98.51633126395089
patch: return 0 ; } else ;
rank: 599
score: 98.40671115451389
patch: continue ; continue ; } break ; }
rank: 599
score: 98.38576834542411
patch: return - false ; } }
rank: 599
score: 98.25551932198661
patch: continue ; * / break ;
rank: 599
score: 97.77064819335938
patch: } continue ; ;
rank: 600
score: 98.5330810546875
patch: continue ; } ++ j ; }
rank: 600
score: 98.51600646972656
patch: return 1 - 0 ; } }
rank: 600
score: 98.40483940972223
patch: continue true ; } if ( continue )
rank: 600
score: 98.39353724888393
patch: break ; } j ++ ;
rank: 600
score: 98.38514055524554
patch: return i . length ; }
rank: 600
score: 98.25514439174107
patch: char continue ; } continue ;
rank: 600
score: 97.770361328125
patch: start ; continue ;
rank: 601
score: 98.54932403564453
patch: info [ i ] = ch ;
rank: 601
score: 98.51530626085069
patch: return 1 ; } else if ; }
rank: 601
score: 98.37974853515625
patch: continue + ch ;
rank: 601
score: 98.37952677408855
patch: return this ; } }
rank: 601
score: 98.36620076497395
patch: found { continue ; }
rank: 601
score: 98.25449044363839
patch: continue ; else return continue ;
rank: 601
score: 97.767578125
patch: do ; continue ;
rank: 602
score: 98.51507568359375
patch: = 1 ; break ; } }
rank: 602
score: 98.40423583984375
patch: continue false ; } ;
rank: 602
score: 98.3917236328125
patch: cs . length ( ) ;
rank: 602
score: 98.37908063616071
patch: continue return search CaMeL Len ;
rank: 602
score: 98.37852260044643
patch: return i + 0 ; }
rank: 602
score: 98.25356038411458
patch: if ( continue continue ;
rank: 602
score: 97.76157836914062
patch: continue ; ; else
rank: 603
score: 98.54788970947266
patch: buf . add ( ch ) ;
rank: 603
score: 98.53254699707031
patch: ch = continue ; break ; }
rank: 603
score: 98.4041748046875
patch: continue - $NUMBER$ ; }
rank: 603
score: 98.39132690429688
patch: return return i ; }
rank: 603
score: 98.37578473772321
patch: continue ( - 1 ) ;
rank: 603
score: 98.36447143554688
patch: ; continue ; }
rank: 603
score: 97.75391845703125
patch: sb ; continue ;
rank: 604
score: 98.54370880126953
patch: text [ i ] = ch ;
rank: 604
score: 98.53226725260417
patch: c ++ ; } }
rank: 604
score: 98.51351492745536
patch: break ; } else break ;
rank: 604
score: 98.40338134765625
patch: start = i ; break ; } }
rank: 604
score: 98.37434605189732
patch: INDEX _ NOT _ FOUND ;
rank: 604
score: 98.36290740966797
patch: break ; } } return j ;
rank: 604
score: 98.25259835379464
patch: for continue ; } continue ;
rank: 604
score: 97.75283813476562
patch: return ; continue ;
rank: 605
score: 98.53179168701172
patch: continue continue - 1 ; } }
rank: 605
score: 98.51338704427083
patch: return 0 ; } else
rank: 605
score: 98.40329318576389
patch: throw new Unsupported CaMeL Operation CaMeL Exception ;
rank: 605
score: 98.37308175223214
patch: continue - search CaMeL Len ;
rank: 605
score: 98.37062581380208
patch: } } return i ;
rank: 605
score: 98.36271449497768
patch: table . return j ; }
rank: 605
score: 97.74683380126953
patch: return this ;
rank: 606
score: 98.54364776611328
patch: throw new String ( $STRING$ ) ;
rank: 606
score: 98.53078884548611
patch: return i ; count ++ ; } }
rank: 606
score: 98.51333182198661
patch: continue ; } catch ; }
rank: 606
score: 98.40306260850694
patch: continue ; } default : break false ;
rank: 606
score: 98.37028285435268
patch: continue ; return 0 ; }
rank: 606
score: 98.3625717163086
patch: is CaMeL Empty = i ; }
rank: 606
score: 98.25223388671876
patch: continue * continue ;
rank: 606
score: 97.7429931640625
patch: buf ; continue ;
rank: 607
score: 98.54363250732422
patch: elements [ j ] = ch ;
rank: 607
score: 98.53077697753906
patch: if ( ; continue ; } }
rank: 607
score: 98.51318359375
patch: continue ; break ; } ;
rank: 607
score: 98.40277099609375
patch: skip ; break ; } }
rank: 607
score: 98.37925502232143
patch: return ( - 1 ) ;
rank: 607
score: 98.35247802734375
patch: continue ( cs ) ;
rank: 607
score: 98.25034790039062
patch: return continue 1 ;
rank: 607
score: 97.7391357421875
patch: / false continue ;
rank: 608
score: 98.53065321180556
patch: continue ; ; } else { break ;
rank: 608
score: 98.51265462239583
patch: continue ; } else / * * /
rank: 608
score: 98.40262179904514
patch: break ; } case $STRING$ : break ;
rank: 608
score: 98.37628173828125
patch: result = i : 0 ;
rank: 608
score: 98.36685616629464
patch: return - true ; } }
rank: 608
score: 98.36038208007812
patch: result = search CaMeL Len ; }
rank: 608
score: 98.25011189778645
patch: assert continue ; continue ;
rank: 608
score: 97.73298950195313
patch: throw if continue ;
rank: 609
score: 98.53987121582031
patch: end [ i ] = ch ;
rank: 609
score: 98.530517578125
patch: break ; } else if ( ; }
rank: 609
score: 98.51255580357143
patch: = continue ; } continue ;
rank: 609
score: 98.40167914496527
patch: continue ; } if ( matches ( ;
rank: 609
score: 98.37565394810268
patch: System . else break ; }
rank: 609
score: 98.36616734095982
patch: return 0 ; j ++ ;
rank: 609
score: 98.3578389485677
patch: table . break ; }
rank: 609
score: 98.3450927734375
patch: search CaMeL Len return i ;
rank: 609
score: 98.24889119466145
patch: char continue - 0 ;
rank: 609
score: 97.72896118164063
patch: count ; continue ;
rank: 610
score: 98.53040907118056
patch: continue ; } } finally { continue ;
rank: 610
score: 98.40147569444444
patch: count ++ ; i ++ ; } }
rank: 610
score: 98.37541852678571
patch: result = 0 ; continue ;
rank: 610
score: 98.35731506347656
patch: e . { continue ; } }
rank: 610
score: 98.34493582589286
patch: return name [ i ] ;
rank: 610
score: 98.24720110212054
patch: start = continue ; continue ;
rank: 611
score: 98.53035736083984
patch: outer -- ; break ; } }
rank: 611
score: 98.51015218098958
patch: * * * * * continue ; }
rank: 611
score: 98.40095350477431
patch: continue - 1 ; } continue false ;
rank: 611
score: 98.37394496372768
patch: search CaMeL Chars [ j )
rank: 611
score: 98.35702950613839
patch: true ; return i ; }
rank: 611
score: 98.33984375
patch: continue ) ;
rank: 611
score: 98.24669538225446
patch: continue ; * else continue ;
rank: 611
score: 97.71143341064453
patch: if false ;
rank: 612
score: 98.52991400824652
patch: continue ; } if ( count ; }
rank: 612
score: 98.51014539930556
patch: return 1 ; } else return 0 ;
rank: 612
score: 98.40081787109375
patch: break i ; } }
rank: 612
score: 98.3562240600586
patch: ret = i ; break ; }
rank: 612
score: 98.3551025390625
patch: continue ; } ++ j ;
rank: 612
score: 98.24409702845982
patch: out . append continue true ;
rank: 612
score: 97.7068115234375
patch: this ; continue ;
rank: 613
score: 98.5295181274414
patch: search CaMeL Len += continue ; }
rank: 613
score: 98.51009695870536
patch: break ; } if ; }
rank: 613
score: 98.37318115234375
patch: } return i ;
rank: 613
score: 98.35615757533482
patch: found = ; continue ; }
rank: 613
score: 98.35274251302083
patch: continue cs CaMeL Len ;
rank: 613
score: 98.3248291015625
patch: return chars [ i ] ;
rank: 613
score: 97.70509643554688
patch: LOG ; continue ;
rank: 614
score: 98.52949523925781
patch: found = ; continue ; } }
rank: 614
score: 98.39990234375
patch: continue ) ; }
rank: 614
score: 98.367431640625
patch: return cs . char CaMeL
rank: 614
score: 98.3236796061198
patch: ++ cs CaMeL Len ;
rank: 614
score: 97.7006591796875
patch: throw ( continue ;
rank: 615
score: 98.52919006347656
patch: continue ; ; } else continue ;
rank: 615
score: 98.5098876953125
patch: continue ; } } catch ; break ;
rank: 615
score: 98.39963107638889
patch: ret = continue ; break ; } }
rank: 615
score: 98.35453033447266
patch: found = i ; break ; }
rank: 615
score: 98.31740025111607
patch: result = continue : i ;
rank: 615
score: 98.24331229073661
patch: finally { continue ; } }
rank: 615
score: 97.6994873046875
patch: break ; break ;
rank: 616
score: 98.52913665771484
patch: continue ; } while ( ; )
rank: 616
score: 98.50977434430804
patch: continue ; } return ; ;
rank: 616
score: 98.39957101004464
patch: changed = true ; break ;
rank: 616
score: 98.35559953962054
patch: continue ? 0 : i ;
rank: 616
score: 98.35025460379464
patch: return 0 ; i ++ ;
rank: 616
score: 98.31675211588542
patch: continue [ 0 ] ;
rank: 616
score: 98.241943359375
patch: return continue ; break ; }
rank: 616
score: 97.69609375
patch: continue ; if ;
rank: 617
score: 98.52860804966518
patch: return i ; } } ;
rank: 617
score: 98.50924246651786
patch: return ; ; } } }
rank: 617
score: 98.35117885044643
patch: else { return i ; }
rank: 617
score: 98.34635620117187
patch: return $NUMBER$ ; }
rank: 617
score: 98.31483677455357
patch: -- cs CaMeL Len ; }
rank: 617
score: 98.24087088448661
patch: j * ; if continue ;
rank: 617
score: 97.69278564453126
patch: outer if continue ;
rank: 618
score: 98.52820587158203
patch: return ; } i ++ ; }
rank: 618
score: 98.50775146484375
patch: continue ; } return start ;
rank: 618
score: 98.35370635986328
patch: size = search CaMeL Len ; }
rank: 618
score: 98.34812709263393
patch: result = continue - 1 ;
rank: 618
score: 98.34565952845982
patch: continue ; } return false ;
rank: 618
score: 98.23954554966518
patch: } * * / break ;
rank: 618
score: 97.68890991210938
patch: e ; continue ;
rank: 619
score: 98.39784071180556
patch: continue ; default : break - 1 ;
rank: 619
score: 98.34785679408482
patch: return search CaMeL Len 1 ;
rank: 619
score: 98.34159342447917
patch: return ++ j ; }
rank: 619
score: 97.68789672851562
patch: throw false ;
rank: 620
score: 98.5266342163086
patch: dot ++ ; break ; } }
rank: 620
score: 98.39760044642857
patch: continue false ; } else {
rank: 620
score: 98.35171944754464
patch: switch ( i ) { }
rank: 620
score: 98.3458760579427
patch: return return 0 ; }
rank: 620
score: 98.33244105747768
patch: return size [ i ] ;
rank: 620
score: 98.29898507254464
patch: } else { return i ;
rank: 620
score: 98.23646036783855
patch: continue * 1 ; ;
rank: 620
score: 97.68314819335937
patch: / * continue ;
rank: 621
score: 98.52643694196429
patch: c ++ ; break ; }
rank: 621
score: 98.524169921875
patch: ret [ j ] = i ;
rank: 621
score: 98.35137939453125
patch: e . { continue ; }
rank: 621
score: 98.32931518554688
patch: return count ; }
rank: 621
score: 98.23526436941964
patch: return continue ; ; continue ;
rank: 621
score: 97.66990356445312
patch: return * continue ;
rank: 622
score: 98.52544403076172
patch: continue ; } count ++ ; ;
rank: 622
score: 98.5237808227539
patch: header [ j ] = ch ;
rank: 622
score: 98.50421820746527
patch: continue ; } else if ; } }
rank: 622
score: 98.39638264973958
patch: count ++ ; continue ; } ; }
rank: 622
score: 98.34988403320312
patch: if ( continue ; }
rank: 622
score: 98.34268188476562
patch: pos = 0 ; }
rank: 622
score: 98.32903180803571
patch: return - - 1 ; }
rank: 622
score: 97.66840209960938
patch: try ; continue ;
rank: 623
score: 98.52536349826389
patch: return i ; } break ; } }
rank: 623
score: 98.50355360243056
patch: = 0 ; continue ; } continue ;
rank: 623
score: 98.39636908637152
patch: continue false ; break ; } break ;
rank: 623
score: 98.34972127278645
patch: res = continue ; }
rank: 623
score: 98.32638985770089
patch: new > ( cs ) ;
rank: 623
score: 98.29327392578125
patch: throw ( int ) ch ;
rank: 623
score: 98.23330252511161
patch: start = continue ; break ;
rank: 623
score: 97.66513671875
patch: else if continue ;
rank: 624
score: 98.52531602647569
patch: continue ; } } } continue ; ;
rank: 624
score: 98.50344509548611
patch: continue ; } else { if ; }
rank: 624
score: 98.34934488932292
patch: true return i ; }
rank: 624
score: 98.34154401506696
patch: search CaMeL Chars [ j ++
rank: 624
score: 98.32529994419643
patch: continue ; } j -- ;
rank: 624
score: 98.28835623604911
patch: search CaMeL Len return 0 ;
rank: 624
score: 98.23325020926339
patch: continue ; / case 1 ;
rank: 624
score: 97.66498565673828
patch: return next ;
rank: 625
score: 98.52360704210069
patch: return i - 1 ; } } ;
rank: 625
score: 98.50252278645833
patch: continue ; } / * * * /
rank: 625
score: 98.39448765345982
patch: if ( continue ) break ;
rank: 625
score: 98.3451436360677
patch: true ; break ; }
rank: 625
score: 98.34087262834821
patch: INDEX _ NOT _ FOUND :
rank: 625
score: 98.32289341517857
patch: return 1 ; } break ;
rank: 625
score: 97.6639892578125
patch: text ; continue ;
rank: 626
score: 98.5233154296875
patch: continue ; } } else if ; ;
rank: 626
score: 98.5185775756836
patch: throw 0 + search CaMeL Len ;
rank: 626
score: 98.50248887803819
patch: } else { return 1 ; } }
rank: 626
score: 98.39371066623264
patch: changed = true ; continue ; } }
rank: 626
score: 98.31911214192708
patch: return size ( ) ;
rank: 626
score: 98.23001708984376
patch: finally { continue ;
rank: 626
score: 97.66376495361328
patch: throw null ;
rank: 627
score: 98.52302769252232
patch: continue -- count ; } }
rank: 627
score: 98.39301215277777
patch: break ; case $STRING$ : break ; }
rank: 627
score: 98.3445053100586
patch: break ; } return true ; }
rank: 627
score: 98.33965192522321
patch: ++ cs CaMeL Len ; }
rank: 627
score: 98.318603515625
patch: continue ; } ch ++ ;
rank: 627
score: 98.26945277622768
patch: } return search CaMeL Len ;
rank: 627
score: 98.22886149088542
patch: continue ; / else {
rank: 627
score: 97.65896606445312
patch: log ; continue ;
rank: 628
score: 98.5218505859375
patch: deleted = true ; break ; } }
rank: 628
score: 98.51709747314453
patch: System . append ( ch ) ;
rank: 628
score: 98.5015869140625
patch: { return 1 ; } } else {
rank: 628
score: 98.39216831752232
patch: length ++ ; break ; }
rank: 628
score: 98.34449005126953
patch: [ j ] = ch ; }
rank: 628
score: 98.33913748604911
patch: search CaMeL Len = 1 ;
rank: 628
score: 98.22848946707589
patch: return continue ; } ; ;
rank: 628
score: 97.65752410888672
patch: return start ;
rank: 629
score: 98.52085367838542
patch: continue ; } System . out . ;
rank: 629
score: 98.51644897460938
patch: ns [ j ] = ch ;
rank: 629
score: 98.50047810872395
patch: return max ; } }
rank: 629
score: 98.39186314174107
patch: continue count - 1 ; }
rank: 629
score: 98.34384591238839
patch: false ) { continue ; }
rank: 629
score: 98.3336669921875
patch: return return i ;
rank: 629
score: 98.26731363932292
patch: continue } return i ;
rank: 629
score: 98.22670491536458
patch: continue = continue ; ;
rank: 629
score: 97.65701904296876
patch: value ; continue ;
rank: 630
score: 98.52059597439236
patch: continue ; count ++ ; } ; }
rank: 630
score: 98.34344482421875
patch: table . break ; } }
rank: 630
score: 98.26717703683036
patch: continue * search CaMeL Len ;
rank: 630
score: 98.2266845703125
patch: continue * 0 ;
rank: 630
score: 97.65449523925781
patch: result continue ;
rank: 631
score: 98.52031792534723
patch: continue ; } else if ( ! ;
rank: 631
score: 98.51581573486328
patch: list [ i ] = ch ;
rank: 631
score: 98.5
patch: break ; } else { }
rank: 631
score: 98.39113362630208
patch: continue ; } if ( continue ; ;
rank: 631
score: 98.3433837890625
patch: table . { continue ; }
rank: 631
score: 98.22632707868304
patch: return continue - 1 ; if
rank: 631
score: 97.64469604492187
patch: super ; continue ;
rank: 632
score: 98.51953125
patch: continue ; case ; break ; } }
rank: 632
score: 98.5146713256836
patch: stream [ j ] = ch ;
rank: 632
score: 98.49818250868056
patch: return 0 ; } else = continue ;
rank: 632
score: 98.3907470703125
patch: continue ( i ) ; }
rank: 632
score: 98.34320068359375
patch: true ; continue ; } }
rank: 632
score: 98.26206461588542
patch: return $STRING$ + ch ;
rank: 632
score: 98.22616141183036
patch: outer * continue ; break ;
rank: 632
score: 97.64164428710937
patch: continue ; / ;
rank: 633
score: 98.49762641059027
patch: break ; } * * * * /
rank: 633
score: 98.39046902126736
patch: continue ; } if ( continue ) ;
rank: 633
score: 98.34198760986328
patch: found = false ; continue ; }
rank: 633
score: 98.30697195870536
patch: continue ; } return $STRING$ ;
rank: 633
score: 98.26112874348958
patch: continue ( $STRING$ ) ;
rank: 633
score: 98.2259521484375
patch: continue ; / j * /
rank: 633
score: 97.63458251953125
patch: -- continue ;
rank: 634
score: 98.50856018066406
patch: } } return cs . length ;
rank: 634
score: 98.30615234375
patch: return size ; }
rank: 634
score: 98.2523193359375
patch: return count ( cs ) ;
rank: 634
score: 98.22556559244792
patch: try { continue ; ;
rank: 634
score: 97.62760925292969
patch: return name ;
rank: 635
score: 98.51746283637152
patch: continue ; } } } ; continue ;
rank: 635
score: 98.50556182861328
patch: buf [ j ] = $STRING$ ;
rank: 635
score: 98.49702671595982
patch: continue [ i ++ ] ;
rank: 635
score: 98.34060668945312
patch: table . continue ; }
rank: 635
score: 98.32475062779018
patch: else { return 0 ; }
rank: 635
score: 98.30609130859375
patch: return Integer . length ; }
rank: 635
score: 98.25111897786458
patch: return cs . i ;
rank: 635
score: 98.22446986607143
patch: if continue ; while continue ;
rank: 635
score: 97.62017822265625
patch: else continue ;
rank: 636
score: 98.51708306206598
patch: continue ; } } while ( ; ;
rank: 636
score: 98.50479125976562
patch: next [ j ] = ch ;
rank: 636
score: 98.38758680555556
patch: break matches [ i ] ; } }
rank: 636
score: 98.32438151041667
patch: return search CaMeL Chars [
rank: 636
score: 98.29818289620536
patch: return 1 ; j ++ ;
rank: 636
score: 98.24779256184895
patch: search CaMeL Len continue ;
rank: 636
score: 98.22442626953125
patch: list . append continue continue ;
rank: 636
score: 97.61939086914063
patch: Utilities ; continue ;
rank: 637
score: 98.38653564453125
patch: continue ; break ; } if ( ;
rank: 637
score: 98.33838653564453
patch: ret = i ; continue ; }
rank: 637
score: 98.32432338169643
patch: result = search CaMeL Len ;
rank: 637
score: 98.29724993024554
patch: return Math . length ; }
rank: 637
score: 98.24542236328125
patch: continue ( false ) ;
rank: 637
score: 97.61238861083984
patch: continue ; /
rank: 638
score: 98.51309814453126
patch: ++ continue ; }
rank: 638
score: 98.50439453125
patch: throw new char [ i ] ;
rank: 638
score: 98.4962158203125
patch: break ; } } if ; * /
rank: 638
score: 98.38558620876736
patch: continue ; continue ; } if ( ;
rank: 638
score: 98.32366071428571
patch: cs CaMeL Len = 0 ;
rank: 638
score: 98.22396414620536
patch: continue * continue - ; /
rank: 639
score: 98.51275634765625
patch: break continue ; } }
rank: 639
score: 98.49601915147569
patch: continue ; } finally = false ; }
rank: 639
score: 98.38468424479167
patch: break break ; } }
rank: 639
score: 98.2418924967448
patch: break search CaMeL Len ;
rank: 639
score: 98.22343226841518
patch: continue ; * continue ; /
rank: 639
score: 97.60208129882812
patch: outer ; ;
rank: 640
score: 98.51118687220982
patch: if ( continue ; } }
rank: 640
score: 98.50159454345703
patch: return search CaMeL Chars [ } ;
rank: 640
score: 98.49589708116319
patch: break ; } else if ; * /
rank: 640
score: 98.38381522042411
patch: count ; break ; } }
rank: 640
score: 98.33627319335938
patch: prev = j ; break ; }
rank: 640
score: 97.601611328125
patch: throw continue ; ;
rank: 641
score: 98.51099989149306
patch: return i - 1 ; } } }
rank: 641
score: 98.3828125
patch: continue hash CaMeL Code ; }
rank: 641
score: 97.59867858886719
patch: return super ;
rank: 642
score: 98.49980163574219
patch: search CaMeL Len -- ; continue ;
rank: 642
score: 98.49346923828125
patch: return 1 ; continue ; }
rank: 642
score: 98.33267211914062
patch: table . return j ; } }
rank: 642
score: 98.32151576450893
patch: return ++ search CaMeL Len ;
rank: 642
score: 98.23340606689453
patch: return ch ;
rank: 642
score: 98.22183663504464
patch: m continue ; } continue ;
rank: 642
score: 97.5927734375
patch: logger ; continue ;
rank: 643
score: 98.50980050223214
patch: continue ; ++ i ; }
rank: 643
score: 98.49967956542969
patch: result = i ; i ++ ;
rank: 643
score: 98.38015311104911
patch: pos -- ; continue ; }
rank: 643
score: 98.33191680908203
patch: list . return i ; } }
rank: 643
score: 98.32110595703125
patch: search CaMeL Len += ch ;
rank: 643
score: 98.284912109375
patch: search CaMeL Len += j ;
rank: 643
score: 98.23293050130208
patch: return i + 1 ;
rank: 643
score: 98.22176688058036
patch: continue ; } ; * /
rank: 643
score: 97.59129638671875
patch: ; if continue ;
rank: 644
score: 98.50907679966518
patch: continue ; } return ; }
rank: 644
score: 98.49896240234375
patch: refs [ j ] = ch ;
rank: 644
score: 98.48780168805804
patch: { return $NUMBER$ ; } }
rank: 644
score: 98.37847900390625
patch: end ++ ; continue ; }
rank: 644
score: 98.33075714111328
patch: attributes [ j ] = ch ;
rank: 644
score: 98.283203125
patch: return equals ( ch ) ;
rank: 644
score: 98.23250325520833
patch: warn ( ch ) ;
rank: 644
score: 98.21634928385417
patch: continue ; + continue ;
rank: 644
score: 97.59009399414063
patch: continue continue ; ;
rank: 645
score: 98.49847412109375
patch: buffer [ j ] = $STRING$ ;
rank: 645
score: 98.48323567708333
patch: return value ; } }
rank: 645
score: 98.32584635416667
patch: found = 0 ; }
rank: 645
score: 98.31791469029018
patch: result = 0 ; break ;
rank: 645
score: 98.27983747209821
patch: return ( char ) ch ;
rank: 645
score: 98.23124476841518
patch: outer -- ; return i ;
rank: 645
score: 97.5897705078125
patch: context ; continue ;
rank: 646
score: 98.50893147786458
patch: break ; ; } }
rank: 646
score: 98.48112269810268
patch: continue continue ; } else ;
rank: 646
score: 98.37380545479911
patch: outer : break ; } }
rank: 646
score: 98.32542201450893
patch: -- search CaMeL Len ; }
rank: 646
score: 98.31484549386161
patch: return search CaMeL Chars [ }
rank: 646
score: 98.27977643694196
patch: return i ; j ++ ;
rank: 646
score: 98.22889927455357
patch: return - ( 0 ) ;
rank: 646
score: 98.21464029947917
patch: continue ; : continue ;
rank: 646
score: 97.58760375976563
patch: finally if continue ;
rank: 647
score: 98.50861952039931
patch: continue ; } } if ( count ;
rank: 647
score: 98.48032924107143
patch: break ; } } } }
rank: 647
score: 98.3731689453125
patch: continue ) ; break ; }
rank: 647
score: 98.31472342354911
patch: ++ search CaMeL Len ; }
rank: 647
score: 98.22838338216145
patch: append ( ch ) ;
rank: 647
score: 98.214111328125
patch: j * * continue ; /
rank: 648
score: 98.50804985894098
patch: continue ; } } do { continue ;
rank: 648
score: 98.47842843191964
patch: continue * 1 ; } else
rank: 648
score: 98.37289864676339
patch: continue false ; break false ;
rank: 648
score: 98.32271575927734
patch: break ; } break ; break ;
rank: 648
score: 98.31278773716518
patch: if ( search CaMeL Len ;
rank: 648
score: 98.27778843470982
patch: continue ; } return this ;
rank: 648
score: 98.22263881138393
patch: continue ? i : 0 ;
rank: 648
score: 98.21371459960938
patch: end continue ; continue ;
rank: 648
score: 97.57335205078125
patch: continue ; log ;
rank: 649
score: 98.50749376085069
patch: continue false ; } else { continue ;
rank: 649
score: 98.49639129638672
patch: names [ i ] = ch ;
rank: 649
score: 98.37283761160714
patch: continue super . continue ; }
rank: 649
score: 98.32183837890625
patch: break ; } return count ; }
rank: 649
score: 98.31250871930804
patch: result = search CaMeL Chars [
rank: 649
score: 98.27520751953125
patch: return value [ j ] ;
rank: 649
score: 98.22225341796874
patch: continue : i ;
rank: 649
score: 98.21337890625
patch: outer = continue ; continue ;
rank: 650
score: 98.50724283854167
patch: ++ continue ; } }
rank: 650
score: 98.49463653564453
patch: options [ j ] = ch ;
rank: 650
score: 98.47205461774554
patch: { break ; } } }
rank: 650
score: 98.372802734375
patch: return 0 ; break ; }
rank: 650
score: 98.31749616350446
patch: += search CaMeL Len ; }
rank: 650
score: 98.31238664899554
patch: result = continue ; } }
rank: 650
score: 98.27325439453125
patch: i ++ ; }
rank: 650
score: 98.2210693359375
patch: continue : search CaMeL Len ;
rank: 650
score: 98.21158854166667
patch: continue ; / else ;
rank: 650
score: 97.56259765625
patch: found ; continue ;
rank: 651
score: 98.47140938895089
patch: return 0 ; continue ; }
rank: 651
score: 98.37206159319196
patch: continue false ; continue ; }
rank: 651
score: 98.31739298502605
patch: table . return i ;
rank: 651
score: 98.3118896484375
patch: System . else ( ) ;
rank: 651
score: 98.27322387695312
patch: return null ; } }
rank: 651
score: 98.21067301432292
patch: i * continue ; }
rank: 651
score: 97.56171875
patch: outer * continue ;
rank: 652
score: 98.50547960069444
patch: return continue ; } ; } continue ;
rank: 652
score: 98.49391174316406
patch: parameters [ j ] = ch ;
rank: 652
score: 98.47139195033482
patch: continue ; if ( continue ;
rank: 652
score: 98.36821637834821
patch: break - 1 ; } ;
rank: 652
score: 98.3167724609375
patch: break ; } return j ; }
rank: 652
score: 98.31161499023438
patch: continue : 0 ; }
rank: 652
score: 98.27244349888393
patch: new > ( ch ) ;
rank: 652
score: 98.2180419921875
patch: return - 0 ;
rank: 652
score: 98.21058872767857
patch: continue ; : continue ; }
rank: 652
score: 97.55441284179688
patch: continue ; *
rank: 653
score: 98.46870640345982
patch: * * * continue ; }
rank: 653
score: 98.36780657087054
patch: continue & - 1 ; }
rank: 653
score: 98.21771240234375
patch: return cs . length ;
rank: 653
score: 98.21030970982143
patch: char continue ; continue ; }
rank: 653
score: 97.55261840820313
patch: return - ] ;
rank: 654
score: 98.50447300502232
patch: return index CaMeL Of ; }
rank: 654
score: 98.49261474609375
patch: continue . size ( ) ; }
rank: 654
score: 98.46817452566964
patch: break ; } else return ;
rank: 654
score: 98.3143310546875
patch: break i ; }
rank: 654
score: 98.30756487165179
patch: return i ; } ) ;
rank: 654
score: 98.26759556361607
patch: INDEX _ NOT _ FOUND }
rank: 654
score: 98.20907592773438
patch: if ( ! continue ;
rank: 654
score: 97.54970703125
patch: new new continue ;
rank: 655
score: 98.36637369791667
patch: continue 0 ; } }
rank: 655
score: 98.30743408203125
patch: break ? 0 : 0 ;
rank: 655
score: 98.2097396850586
patch: continue cs ;
rank: 655
score: 98.2078857421875
patch: j * ] = continue ;
rank: 655
score: 97.54485473632812
patch: continue ; ; {
rank: 656
score: 98.50394694010417
patch: return ; default : break ; } }
rank: 656
score: 98.46429443359375
patch: return $NUMBER$ ; } } ;
rank: 656
score: 98.3134256998698
patch: found = false ; }
rank: 656
score: 98.26544189453125
patch: { return i ; }
rank: 656
score: 98.20580037434895
patch: finally { continue ; ;
rank: 656
score: 97.53166198730469
patch: return max ;
rank: 657
score: 98.50314670138889
patch: continue count [ i ] ; } }
rank: 657
score: 98.36492047991071
patch: continue ; } continue true ;
rank: 657
score: 98.31181117466518
patch: result = i ; } }
rank: 657
score: 98.30361502511161
patch: return ( char ) i ;
rank: 657
score: 98.20386614118304
patch: name = continue ; break ;
rank: 657
score: 97.52896728515626
patch: continue ; ; try
rank: 658
score: 98.46086774553571
patch: ! continue ; } continue ;
rank: 658
score: 98.36458914620536
patch: break ; i ++ ; }
rank: 658
score: 98.31180245535714
patch: break ; } return count ;
rank: 658
score: 98.30039672851562
patch: return ch ; }
rank: 658
score: 98.26203264508929
patch: j ++ ; j ++ ;
rank: 658
score: 98.20510864257812
patch: continue : - 1 ;
rank: 658
score: 98.20343017578125
patch: continue * continue * ; /
rank: 658
score: 97.52762451171876
patch: switch ; continue ;
rank: 659
score: 98.50217013888889
patch: continue continue ; } break ; } }
rank: 659
score: 98.48964146205357
patch: continue . size ( ) ;
rank: 659
score: 98.36158447265625
patch: continue null ; }
rank: 659
score: 98.31177978515625
patch: found = i ;
rank: 659
score: 98.26090785435268
patch: cs CaMeL Len -- ; }
rank: 659
score: 98.20470174153645
patch: continue ( true ) ;
rank: 659
score: 98.20264543805804
patch: ch = continue ; break ;
rank: 659
score: 97.52684783935547
patch: throw count ;
rank: 660
score: 98.29158528645833
patch: ++ search CaMeL Len ;
rank: 660
score: 98.26070731026786
patch: is CaMeL Empty ( ) ;
rank: 660
score: 98.20242745535714
patch: append new $STRING$ ; continue ;
rank: 660
score: 98.198876953125
patch: continue return i ;
rank: 660
score: 97.522802734375
patch: } else continue ;
rank: 661
score: 98.36031668526786
patch: return j + 1 ; }
rank: 661
score: 98.31102752685547
patch: -- i ; return i ; }
rank: 661
score: 98.26028878348214
patch: { return i ; } }
rank: 661
score: 98.19795227050781
patch: throw 1 ;
rank: 661
score: 97.52113037109375
patch: token ; continue ;
rank: 662
score: 98.48746490478516
patch: start = 0 ; continue ; }
rank: 662
score: 98.35967145647321
patch: limit -- ; continue ; }
rank: 662
score: 98.30976213727679
patch: table . return true ; }
rank: 662
score: 98.29062906901042
patch: System . else continue ;
rank: 662
score: 98.2568359375
patch: return size . length ; }
rank: 662
score: 98.20066324869792
patch: try { continue ; }
rank: 662
score: 97.51856689453125
patch: return ++ continue ;
rank: 663
score: 98.50075276692708
patch: continue continue ; } while ( ; }
rank: 663
score: 98.48616245814732
patch: search CaMeL Chars [ j ]
rank: 663
score: 98.45272391183036
patch: continue $NUMBER$ ; } continue ;
rank: 663
score: 98.358642578125
patch: continue - 1 ; continue ;
rank: 663
score: 98.2528584798177
patch: continue ; } System .
rank: 663
score: 98.20035226004464
patch: continue ; } continue ; /
rank: 663
score: 97.51717529296874
patch: ret ; continue ;
rank: 664
score: 98.49952528211806
patch: continue continue ; } return i ; }
rank: 664
score: 98.48601531982422
patch: log . append ( ch ) ;
rank: 664
score: 98.45177350725446
patch: continue [ $NUMBER$ ] ; }
rank: 664
score: 98.35858154296875
patch: assert ; break ; } }
rank: 664
score: 98.306640625
patch: is CaMeL Empty = true ;
rank: 664
score: 98.25068010602679
patch: return - 0 ; } }
rank: 664
score: 98.20002092633929
patch: j * continue ; continue ;
rank: 664
score: 98.19553920200893
patch: break * search CaMeL Len ;
rank: 664
score: 97.51590576171876
patch: return 1 ; ;
rank: 665
score: 98.49883161272321
patch: return i ; ; } }
rank: 665
score: 98.45126778738839
patch: continue ; } else = ;
rank: 665
score: 98.35667201450893
patch: continue ; length ++ ; }
rank: 665
score: 98.30564371744792
patch: result = true ; }
rank: 665
score: 98.2786153157552
patch: switch ( ch ) {
rank: 665
score: 98.25047084263393
patch: i ++ ; j ++ ;
rank: 665
score: 98.19915771484375
patch: return continue - continue ;
rank: 665
score: 97.50996704101563
patch: Assert ; continue ;
rank: 666
score: 98.49847412109375
patch: continue ; } if ( ch != ;
rank: 666
score: 98.45053536551339
patch: break ; } * * /
rank: 666
score: 98.30426025390625
patch: result = true ; continue ; }
rank: 666
score: 98.24827357700893
patch: continue ; } return length ;
rank: 666
score: 98.198974609375
patch: continue * * - 1 ;
rank: 666
score: 98.19326346261161
patch: if ( true ) continue ;
rank: 666
score: 97.5095703125
patch: outer ; break ;
rank: 667
score: 98.49769422743056
patch: return - 1 ; } } else {
rank: 667
score: 98.45005580357143
patch: continue ; } * * ;
rank: 667
score: 98.35548618861607
patch: break length - 1 ; }
rank: 667
score: 98.30267333984375
patch: ; continue ; } }
rank: 667
score: 98.24801199776786
patch: cs CaMeL Len = ch ;
rank: 667
score: 98.19872174944196
patch: continue ; else { continue ;
rank: 668
score: 98.49705674913194
patch: search CaMeL Len ++ ; } } }
rank: 668
score: 98.44887869698661
patch: * * * / continue ;
rank: 668
score: 98.24728829520089
patch: return ++ j ; } }
rank: 668
score: 98.19627162388393
patch: j ] = continue ; ;
rank: 668
score: 98.19111851283482
patch: if ( ) { continue ;
rank: 668
score: 97.50560760498047
patch: next false ;
rank: 669
score: 98.49674072265626
patch: break continue ; }
rank: 669
score: 98.44451904296875
patch: continue ; } return max ;
rank: 669
score: 98.35395159040179
patch: break super . continue ; }
rank: 669
score: 98.27398681640625
patch: return ( $STRING$ ) ;
rank: 669
score: 98.18800659179688
patch: return - $NUMBER$ ;
rank: 669
score: 97.502880859375
patch: continue ; this ;
rank: 670
score: 98.49603949652777
patch: return continue ; } if ( ; }
rank: 670
score: 98.4630126953125
patch: start = 0 ; continue ;
rank: 670
score: 98.4429219563802
patch: continue += 1 ; }
rank: 670
score: 98.35385131835938
patch: continue false ; ; }
rank: 670
score: 98.2720235188802
patch: else { return i ;
rank: 670
score: 98.19122314453125
patch: continue -- continue ;
rank: 670
score: 98.18649727957589
patch: return search CaMeL Len ) ;
rank: 670
score: 97.5023681640625
patch: iterator ; continue ;
rank: 671
score: 98.49577113560268
patch: continue continue ; } } ;
rank: 671
score: 98.45292445591518
patch: return list [ j ] ;
rank: 671
score: 98.4423828125
patch: continue ; } } } }
rank: 671
score: 98.29925537109375
patch: break ; } } return ] ;
rank: 671
score: 98.26871744791667
patch: search CaMeL Chars [ i
rank: 671
score: 98.24466378348214
patch: continue } return i ; }
rank: 671
score: 98.18603515625
patch: fail ( ch ) ;
rank: 671
score: 97.49767456054687
patch: prev ; continue ;
rank: 672
score: 98.44196428571429
patch: throw null ; } else ;
rank: 672
score: 98.35281982421876
patch: continue break ; }
rank: 672
score: 98.2989501953125
patch: [ INDEX _ NOT _ FOUND ;
rank: 672
score: 98.24400111607143
patch: return - - false ; }
rank: 672
score: 98.18603515625
patch: throw $NUMBER$ + ch ;
rank: 672
score: 98.18585205078125
patch: throw new Exception continue ;
rank: 673
score: 98.49477132161458
patch: c ++ ; ; break ; } }
rank: 673
score: 98.44069126674107
patch: break ; } } * /
rank: 673
score: 98.35051618303571
patch: rs . next ( ) ;
rank: 673
score: 98.2987289428711
patch: prev = j ; continue ; }
rank: 673
score: 97.49642944335938
patch: synchronized ; continue ;
rank: 674
score: 98.49461873372395
patch: continue -- count ; }
rank: 674
score: 98.44058663504464
patch: continue ; } finally ; ;
rank: 674
score: 98.35048130580357
patch: n ++ ; continue ; }
rank: 674
score: 98.2970479329427
patch: break ; } * /
rank: 674
score: 98.26146240234375
patch: pos = 0 ;
rank: 674
score: 98.24251883370536
patch: return value [ i ] ;
rank: 674
score: 98.18343098958333
patch: continue * * 1 ;
rank: 674
score: 98.18270874023438
patch: continue { continue ;
rank: 674
score: 97.49171752929688
patch: result if continue ;
rank: 675
score: 98.49445936414931
patch: continue ; } count ++ ; ; }
rank: 675
score: 98.43998209635417
patch: continue ; } } else
rank: 675
score: 98.34831019810268
patch: continue false ; break true ;
rank: 675
score: 98.2962646484375
patch: switch ( j ) { } }
rank: 675
score: 98.25806681315105
patch: result = - 1 ;
rank: 675
score: 98.1834004720052
patch: return continue - $NUMBER$ ;
rank: 675
score: 98.18232073102679
patch: dispose ( ) ; continue ;
rank: 675
score: 97.486376953125
patch: append ; continue ;
rank: 676
score: 98.49445258246527
patch: success = true ; continue ; } }
rank: 676
score: 98.43917410714286
patch: return 1 ; ; } }
rank: 676
score: 98.34595743815105
patch: count ++ ; continue ;
rank: 676
score: 98.29512786865234
patch: is CaMeL Empty ( cs ) ;
rank: 676
score: 98.24019077845982
patch: return 0 ; } System .
rank: 676
score: 98.18280029296875
patch: continue * continue ; /
rank: 676
score: 98.18111165364583
patch: continue [ j ] ;
rank: 676
score: 97.48606567382812
patch: return * 1 ;
rank: 677
score: 98.49344211154514
patch: continue ; } } / * continue ;
rank: 677
score: 98.43915666852679
patch: throw null ; } } else
rank: 677
score: 97.4857177734375
patch: throw true ;
rank: 678
score: 98.49303521050348
patch: continue ; } continue ; } ; }
rank: 678
score: 98.43898228236607
patch: return ; = continue ; }
rank: 678
score: 98.2393086751302
patch: return - $NUMBER$ ; }
rank: 678
score: 98.17918090820312
patch: } continue ; }
rank: 678
score: 98.1783203125
patch: continue ( ) ;
rank: 678
score: 97.48325805664062
patch: pos ; continue ;
rank: 679
score: 98.49190266927083
patch: continue ; } ; } ++ continue ;
rank: 679
score: 98.24306233723958
patch: return search CaMeL Chars ;
rank: 679
score: 98.17899576822917
patch: continue ; case continue ;
rank: 679
score: 98.1771240234375
patch: System . arraycopy ( cs ,
rank: 679
score: 97.48233642578126
patch: b ; continue ;
rank: 680
score: 98.49167209201389
patch: continue ; } } switch ( ch )
rank: 680
score: 98.43848528180804
patch: found continue ; } continue ;
rank: 680
score: 98.34305245535714
patch: break false ; break ; }
rank: 680
score: 98.24275716145833
patch: continue ; return i ;
rank: 680
score: 98.23739188058036
patch: return ( i ) ; }
rank: 680
score: 98.17293294270833
patch: break ( 0 ) ;
rank: 680
score: 97.47669474283855
patch: outer ;
rank: 681
score: 98.49151611328125
patch: outer ; break ; } }
rank: 681
score: 98.43831961495536
patch: { { continue ; } }
rank: 681
score: 98.34165649414062
patch: break ] ; }
rank: 681
score: 98.28982979910714
patch: true { continue ; } }
rank: 681
score: 98.24165852864583
patch: System . else break ;
rank: 681
score: 98.1785888671875
patch: return 0 ; ;
rank: 681
score: 98.1707763671875
patch: return start : 0 ;
rank: 681
score: 97.47476196289062
patch: ; continue ; ;
rank: 682
score: 98.49102783203125
patch: continue ; * / break ; ; }
rank: 682
score: 98.43797084263393
patch: * * * * continue ;
rank: 682
score: 98.33938162667411
patch: return 1 ; break ; }
rank: 682
score: 98.2892074584961
patch: table . return true ; } }
rank: 682
score: 98.23488071986607
patch: continue ; } return null ;
rank: 682
score: 98.17740885416667
patch: continue ; catch continue ;
rank: 682
score: 98.16990152994792
patch: search CaMeL Len ; }
rank: 682
score: 97.47391967773437
patch: return ( continue ;
rank: 683
score: 98.49094645182292
patch: return ; } } ;
rank: 683
score: 98.43777901785714
patch: continue ; } return $NUMBER$ ;
rank: 683
score: 98.33893585205078
patch: continue count ;
rank: 683
score: 98.28811645507812
patch: end ++ ; return i ; }
rank: 683
score: 98.23784790039062
patch: j ++ ; }
rank: 683
score: 98.17641194661458
patch: end new continue ; ;
rank: 684
score: 98.49080113002232
patch: cursor ++ ; continue ; }
rank: 684
score: 98.43765694754464
patch: continue * * 1 ; }
rank: 684
score: 98.42469133649554
patch: return } } return i ;
rank: 684
score: 98.3385009765625
patch: continue 1 ; } if ;
rank: 684
score: 98.28736877441406
patch: end = i ; continue ; }
rank: 684
score: 98.2341064453125
patch: return cs ; }
rank: 684
score: 98.23148890904018
patch: return $STRING$ ; } break ;
rank: 684
score: 98.1573994954427
patch: continue ( 1 ) ;
rank: 684
score: 97.47117309570312
patch: continue ; ; out
rank: 685
score: 98.49043104383681
patch: continue continue ; } if ( continue ;
rank: 685
score: 98.43633161272321
patch: break ; } ; } }
rank: 685
score: 98.33782958984375
patch: continue [ i ] ;
rank: 685
score: 98.28730773925781
patch: break ; } } return this ;
rank: 685
score: 98.22748674665179
patch: return is CaMeL Empty ; }
rank: 685
score: 98.22660319010417
patch: result = false ; }
rank: 685
score: 98.16963704427083
patch: continue * continue / ;
rank: 685
score: 97.47055053710938
patch: break ; } ;
rank: 686
score: 98.49028669084821
patch: pos ; continue ; } }
rank: 686
score: 98.43599155970982
patch: return 1 ; } * /
rank: 686
score: 98.33400181361607
patch: length ++ ; continue ; }
rank: 686
score: 98.28579711914062
patch: { continue ; }
rank: 686
score: 98.22738211495536
patch: return ( ch ) ; }
rank: 686
score: 98.1685078938802
patch: case continue ; continue ;
rank: 686
score: 97.47052001953125
patch: / continue ;
rank: 687
score: 98.48991563585069
patch: pos ++ ; continue ; } } ;
rank: 687
score: 98.43594796316964
patch: continue ; } } finally ;
rank: 687
score: 98.15084838867188
patch: debug ( ch ) ;
rank: 687
score: 97.4691650390625
patch: arraycopy ; continue ;
rank: 688
score: 98.43492780412946
patch: break ; } catch ; ;
rank: 688
score: 98.32860456194196
patch: continue ; break 1 ; }
rank: 688
score: 98.28359549386161
patch: switch ( cs ) { }
rank: 688
score: 98.21907261439732
patch: return ( j ) ; }
rank: 688
score: 98.1650146484375
patch: continue finally ; }
rank: 688
score: 97.46748046875
patch: m ; continue ;
rank: 689
score: 98.48811848958333
patch: continue ; } } if ( ; }
rank: 689
score: 98.43433489118304
patch: } * * * * /
rank: 689
score: 98.41260986328125
patch: return ++ j ;
rank: 689
score: 98.32797677176339
patch: tab ; break ; } }
rank: 689
score: 98.21797398158482
patch: return - - true ; }
rank: 689
score: 98.16400146484375
patch: char continue ;
rank: 689
score: 98.1488545735677
patch: throw 0 + ch ;
rank: 689
score: 97.4581069946289
patch: continue ; out
rank: 690
score: 98.48741997612848
patch: return j - 1 ; } } }
rank: 690
score: 98.2791748046875
patch: -- i ; }
rank: 690
score: 98.21429443359375
patch: return ! search CaMeL Len ;
rank: 690
score: 98.163671875
patch: continue - continue ;
rank: 690
score: 97.45800170898437
patch: add ; continue ;
rank: 691
score: 98.48719618055556
patch: continue ; } if ( break ; }
rank: 691
score: 98.43354143415179
patch: result continue ; } continue ;
rank: 691
score: 98.40664236886161
patch: continue ; } throw 0 ;
rank: 691
score: 98.32492065429688
patch: continue 1 ; } ;
rank: 691
score: 98.27818806966145
patch: false { continue ; }
rank: 691
score: 98.21439615885417
patch: result = return i ;
rank: 691
score: 98.16366577148438
patch: continue ; - 1 ;
rank: 692
score: 98.48685031467014
patch: break ; } } if ( continue )
rank: 692
score: 98.4327901204427
patch: return 0 ; continue ;
rank: 692
score: 98.3238525390625
patch: count ++ ;
rank: 692
score: 98.27491455078125
patch: found = true ;
rank: 692
score: 98.2139892578125
patch: result = false ;
rank: 692
score: 98.13151041666667
patch: return i + 0 ;
rank: 692
score: 97.4515625
patch: $STRING$ ; continue ;
rank: 693
score: 98.32346017020089
patch: idx ++ ; break ; }
rank: 693
score: 98.274658203125
patch: [ j ] = ch ;
rank: 693
score: 98.2083740234375
patch: return 0 ; ; }
rank: 693
score: 98.20421752929687
patch: result = true ;
rank: 693
score: 98.1309814453125
patch: System . length ++ ;
rank: 693
score: 97.45026245117188
patch: string ; continue ;
rank: 694
score: 98.43259102957589
patch: continue [ continue 1 ] ;
rank: 694
score: 98.40346854073661
patch: ret = i ; break ;
rank: 694
score: 98.32210867745536
patch: continue is CaMeL Empty ; }
rank: 694
score: 98.27383422851562
patch: res = i ; }
rank: 694
score: 98.20830426897321
patch: return 1 ; i ++ ;
rank: 694
score: 98.20057169596355
patch: return i ( ) ;
rank: 694
score: 98.16115315755208
patch: continue -- continue ; }
rank: 694
score: 98.1250508626302
patch: return count - 0 ;
rank: 694
score: 97.44959106445313
patch: / true continue ;
rank: 695
score: 98.48447672526042
patch: c ++ ; break ; } } }
rank: 695
score: 98.43204171316964
patch: break ; ; } continue ;
rank: 695
score: 98.32159423828125
patch: continue matches [ i ] ;
rank: 695
score: 98.19913330078126
patch: return return 0 ;
rank: 695
score: 98.15598551432292
patch: assert true ; continue ;
rank: 695
score: 98.11891479492188
patch: continue } break ;
rank: 695
score: 97.44778442382812
patch: result else continue ;
rank: 696
score: 98.48333740234375
patch: continue continue ; } else continue ; }
rank: 696
score: 98.43106515066964
patch: return 0 ; ; } }
rank: 696
score: 98.27244349888393
patch: return j ; } break ;
rank: 696
score: 98.19813028971355
patch: } return i ; }
rank: 696
score: 98.15144856770833
patch: else { continue ; ;
rank: 696
score: 97.446630859375
patch: msg ; continue ;
rank: 697
score: 98.483154296875
patch: found = continue ; break ; } }
rank: 697
score: 98.32093505859375
patch: count -- ; }
rank: 697
score: 98.26690673828125
patch: table . continue ; } }
rank: 697
score: 98.19740804036458
patch: result = i 1 ;
rank: 697
score: 98.11366780598958
patch: return count ( ) ;
rank: 697
score: 97.44501953125
patch: return false ; ;
rank: 698
score: 98.42902483258929
patch: continue ; if ; } }
rank: 698
score: 98.38741629464286
patch: break ; } return 0 ;
rank: 698
score: 98.32041713169643
patch: count ++ ; } break ;
rank: 698
score: 98.26526750837054
patch: break ; } case $STRING$ :
rank: 698
score: 98.19385782877605
patch: System . break ; }
rank: 698
score: 98.11349487304688
patch: println ( ch ) ;
rank: 698
score: 97.44364624023437
patch: if new continue ;
rank: 699
score: 98.42833600725446
patch: result ; * * * /
rank: 699
score: 98.19383748372395
patch: end = 0 ; }
rank: 699
score: 98.19047037760417
patch: cs CaMeL Len -- ;
rank: 699
score: 98.1510009765625
patch: return continue ; ; ;
rank: 699
score: 98.11304728190105
patch: return ( 0 ) ;
rank: 699
score: 97.44036254882812
patch: error ; continue ;
rank: 700
score: 98.3175048828125
patch: continue -= 1 ; }
rank: 700
score: 98.26003592354911
patch: break ; } return j ;
rank: 700
score: 98.14853922526042
patch: value = continue ; ;
rank: 700
score: 98.10636596679687
patch: continue : 1 ;
rank: 700
score: 97.4387939453125
patch: { if continue ;
rank: 701
score: 98.47858537946429
patch: continue ++ count ; } }
rank: 701
score: 98.42706298828125
patch: return continue ; } else ;
rank: 701
score: 98.31731305803571
patch: priority ++ ; break ; }
rank: 701
score: 98.25910295758929
patch: found = true ; continue ;
rank: 701
score: 98.19054158528645
patch: continue ; return 0 ;
rank: 701
score: 98.14614868164062
patch: continue ; = continue ;
rank: 701
score: 98.10633341471355
patch: end 1 ( ) ;
rank: 701
score: 97.43645477294922
patch: final continue ;
rank: 702
score: 98.47796630859375
patch: pos ++ ; } }
rank: 702
score: 98.3170166015625
patch: continue ; case $STRING$ :
rank: 702
score: 98.18775939941406
patch: System . else
rank: 702
score: 98.1733907063802
patch: return size ; } }
rank: 702
score: 98.14354451497395
patch: continue * continue * ;
rank: 702
score: 98.10205078125
patch: fail ( ) ;
rank: 702
score: 97.43214721679688
patch: method ; continue ;
rank: 703
score: 98.42447335379464
patch: return continue [ 0 ] ;
rank: 703
score: 98.37876674107143
patch: flush ( ) ; continue ;
rank: 703
score: 98.31618826729911
patch: break false ; } ; }
rank: 703
score: 98.25630696614583
patch: impl . continue ; }
rank: 703
score: 98.1852315266927
patch: throw new int [ 0
rank: 703
score: 98.14229329427083
patch: continue ; / break ;
rank: 703
score: 98.10128784179688
patch: continue ( this ) ;
rank: 703
score: 97.42999267578125
patch: outer ; ; ;
rank: 704
score: 98.42434692382812
patch: continue [ 1 ] ;
rank: 704
score: 98.37530517578125
patch: continue ; j ++ ;
rank: 704
score: 98.18349202473958
patch: else return i ; }
rank: 704
score: 98.16514078776042
patch: return - ) ; }
rank: 704
score: 98.09920247395833
patch: warn ( $STRING$ ) ;
rank: 704
score: 97.42972564697266
patch: continue ; try
rank: 705
score: 98.47103445870536
patch: continue continue ; break ; }
rank: 705
score: 98.42350551060268
patch: throw continue ; } else ;
rank: 705
score: 98.31417410714286
patch: continue 1 ; continue 1 ;
rank: 705
score: 98.15946044921876
patch: return max ; }
rank: 705
score: 98.09829711914062
patch: do { return i ;
rank: 705
score: 97.42933959960938
patch: count * continue ;
rank: 706
score: 98.31386021205357
patch: prev ++ ; break ; }
rank: 706
score: 98.25201416015625
patch: table . return ; }
rank: 706
score: 98.17746988932292
patch: continue } return 0 ;
rank: 706
score: 98.15880737304687
patch: return - false ;
rank: 706
score: 98.14060465494792
patch: continue ; / ; ;
rank: 706
score: 98.09771728515625
patch: continue continue : 0 ;
rank: 706
score: 97.42763061523438
patch: / if continue ;
rank: 707
score: 98.4698486328125
patch: return ; } continue ; }
rank: 707
score: 98.42236328125
patch: continue ; if ; ; }
rank: 707
score: 98.31312779017857
patch: break [ i ] ; }
rank: 707
score: 98.25022379557292
patch: tmp = continue ; }
rank: 707
score: 98.09640502929688
patch: return count : i ;
rank: 707
score: 97.42242431640625
patch: return size ;
rank: 708
score: 98.42208426339286
patch: continue ; } else set ;
rank: 708
score: 98.31232561383929
patch: continue ; } continue false ;
rank: 708
score: 98.25001017252605
patch: answer = i ; }
rank: 708
score: 98.17198689778645
patch: return index CaMeL Of ;
rank: 708
score: 98.13985595703124
patch: return next ) ;
rank: 708
score: 97.4216796875
patch: { continue ; ;
rank: 709
score: 98.35797991071429
patch: case $STRING$ : return i ;
rank: 709
score: 98.311279296875
patch: continue ] ; continue ; }
rank: 709
score: 98.17000325520833
patch: end 1 ++ ; }
rank: 709
score: 98.13555908203125
patch: j * continue ; }
rank: 709
score: 98.09501139322917
patch: return count - j ;
rank: 709
score: 97.41429138183594
patch: while continue ;
rank: 710
score: 98.42119489397321
patch: continue / * continue ; }
rank: 710
score: 98.30903843470982
patch: continue true ; break false ;
rank: 710
score: 98.1490478515625
patch: return ++ i ; }
rank: 710
score: 98.09391276041667
patch: error ( $STRING$ ) ;
rank: 710
score: 97.411572265625
patch: r ; continue ;
rank: 711
score: 98.4595947265625
patch: continue ; } } ; }
rank: 711
score: 98.4202880859375
patch: continue += 1 ; } else
rank: 711
score: 98.30763462611607
patch: ret ++ ; break ; }
rank: 711
score: 98.24601236979167
patch: false return i ; }
rank: 711
score: 98.1481221516927
patch: { return 1 ; }
rank: 711
score: 98.13360595703125
patch: return continue -- continue ;
rank: 711
score: 98.09375
patch: end 1 = 0 ;
rank: 711
score: 97.4097412109375
patch: } return continue ;
rank: 712
score: 98.41886683872768
patch: continue ; } else } }
rank: 712
score: 98.30697195870536
patch: assert true ; continue ; }
rank: 712
score: 98.24554443359375
patch: found = i ; continue ;
rank: 712
score: 98.1646728515625
patch: return - - 1 ;
rank: 712
score: 98.14809163411458
patch: } } return 0 ;
rank: 712
score: 98.13140869140625
patch: char continue - 1 ;
rank: 712
score: 97.40337371826172
patch: throw this ;
rank: 713
score: 98.41751534598214
patch: continue ; } } * ;
rank: 713
score: 98.14516194661458
patch: return [ i ] ;
rank: 713
score: 98.13124593098958
patch: throw ( $STRING$ ) ;
rank: 713
score: 98.08519897460937
patch: continue return 0 ;
rank: 713
score: 97.40269775390625
patch: assert ; continue ;
rank: 714
score: 98.45728410993304
patch: continue ; count ; } }
rank: 714
score: 98.41700090680804
patch: continue 1 ; } continue ;
rank: 714
score: 98.30518450055804
patch: continue count [ i ] ;
rank: 714
score: 98.16180419921875
patch: start = 0 ; }
rank: 714
score: 98.1405741373698
patch: i ++ ; } }
rank: 714
score: 97.40189208984376
patch: if ; break ;
rank: 715
score: 98.45717075892857
patch: return ; } } else {
rank: 715
score: 98.30302211216518
patch: continue false ; continue false ;
rank: 715
score: 98.24000767299107
patch: break ; } return true ;
rank: 715
score: 98.13906860351562
patch: return length ;
rank: 715
score: 98.12582397460938
patch: for null ; continue ;
rank: 715
score: 98.08192952473958
patch: continue ( null ) ;
rank: 715
score: 97.39955139160156
patch: * continue ;
rank: 716
score: 98.45692661830357
patch: return j ; } ; }
rank: 716
score: 98.41615513392857
patch: if ( continue ; break ;
rank: 716
score: 98.23863002232143
patch: -- i ; continue ; }
rank: 716
score: 98.1253153483073
patch: continue * 0 ; }
rank: 716
score: 98.07832845052083
patch: return count - i ;
rank: 716
score: 97.39900970458984
patch: count continue ;
rank: 717
score: 98.45676967075893
patch: continue ; } / * ;
rank: 717
score: 98.416015625
patch: ; continue ; } continue ;
rank: 717
score: 98.30295235770089
patch: break - 1 ; break ;
rank: 717
score: 98.23716517857143
patch: table . return ; } }
rank: 717
score: 98.15811157226562
patch: return length ( ) ;
rank: 717
score: 98.12450154622395
patch: synchronized continue ; continue ;
rank: 717
score: 97.36262512207031
patch: end continue ;
rank: 718
score: 98.45540073939732
patch: System . ; continue ; }
rank: 718
score: 98.30252511160714
patch: matches ; break ; } }
rank: 718
score: 98.15758260091145
patch: if ( search CaMeL Chars
rank: 718
score: 98.12363688151042
patch: continue * continue ; ;
rank: 718
score: 97.3565902709961
patch: end false ;
rank: 719
score: 98.45404052734375
patch: System . arraycopy ( ; }
rank: 719
score: 98.41289411272321
patch: break ; } continue ; ;
rank: 719
score: 98.30235944475446
patch: assert false ; break ; }
rank: 719
score: 98.0731201171875
patch: add ( ch ) ;
rank: 719
score: 97.33110046386719
patch: if true ;
rank: 720
score: 98.45113699776786
patch: continue ; } while ; }
rank: 720
score: 98.30203683035714
patch: continue count + 1 ; }
rank: 720
score: 98.15545654296875
patch: search CaMeL Len = }
rank: 720
score: 98.125
patch: return - true ;
rank: 720
score: 98.12168375651042
patch: } continue ; break ;
rank: 720
score: 98.07230631510417
patch: continue + ch ; }
rank: 720
score: 97.31304168701172
patch: count false ;
rank: 721
score: 98.44929722377232
patch: continue ; default : ; }
rank: 721
score: 98.41275460379464
patch: = 0 ; continue ; }
rank: 721
score: 98.33395821707589
patch: continue ; } throw 1 ;
rank: 721
score: 98.15437825520833
patch: return i ; ; }
rank: 721
score: 98.11956787109375
patch: continue ; * ; {
rank: 721
score: 97.31199645996094
patch: return ; ;
rank: 722
score: 98.41237095424107
patch: return 1 ; } catch ;
rank: 722
score: 98.33359200613839
patch: continue ; } return size ;
rank: 722
score: 98.30123465401786
patch: throw new ; } continue ;
rank: 722
score: 98.23136683872768
patch: break ; } if ( }
rank: 722
score: 98.12159220377605
patch: continue return 0 ; }
rank: 722
score: 98.11854858398438
patch: if ( continue ;
rank: 722
score: 97.29560089111328
patch: ! continue ;
rank: 723
score: 98.41181291852679
patch: { throw null ; } }
rank: 723
score: 98.30007498604911
patch: continue true ; break true ;
rank: 723
score: 98.11464233398438
patch: continue - $NUMBER$ ;
rank: 723
score: 98.06595865885417
patch: debug ( $STRING$ ) ;
rank: 723
score: 97.28815460205078
patch: true ; ;
rank: 724
score: 98.44826834542411
patch: return j ; } } }
rank: 724
score: 98.41133335658482
patch: * * * ; continue ;
rank: 724
score: 98.29842703683036
patch: break count - 1 ; }
rank: 724
score: 98.22410074869792
patch: ; break ; } }
rank: 724
score: 98.15146891276042
patch: x = 0 ; }
rank: 724
score: 98.11365966796875
patch: while ( continue ;
rank: 724
score: 98.06417846679688
patch: continue + 1 ;
rank: 724
score: 97.27690887451172
patch: continue ; continue
rank: 725
score: 98.29838344029018
patch: continue ( 1 ) ; }
rank: 725
score: 98.14745076497395
patch: try { return i ;
rank: 725
score: 98.1055399576823
patch: return Integer . length ;
rank: 725
score: 98.06158447265625
patch: return count : 0 ;
rank: 725
score: 97.27579498291016
patch: next continue ;
rank: 726
score: 98.44688197544643
patch: found ++ ; break ; }
rank: 726
score: 98.41014753069196
patch: continue ; } else true ;
rank: 726
score: 98.22303263346355
patch: res { continue ; }
rank: 726
score: 98.11307779947917
patch: continue -- continue ; ;
rank: 726
score: 98.06103515625
patch: fail ( $STRING$ ) ;
rank: 726
score: 97.27478790283203
patch: continue ; max
rank: 727
score: 98.4443359375
patch: do { continue ; } }
rank: 727
score: 98.40992082868304
patch: throw null ; } } }
rank: 727
score: 98.31850760323661
patch: ret = i ; continue ;
rank: 727
score: 98.1422348022461
patch: return cs ;
rank: 727
score: 98.11232503255208
patch: result = continue ; ;
rank: 727
score: 98.10166422526042
patch: } return 0 ; }
rank: 727
score: 97.26959991455078
patch: public continue ;
rank: 728
score: 98.443603515625
patch: continue index CaMeL Of ; }
rank: 728
score: 98.40956333705357
patch: return continue ; } } ;
rank: 728
score: 98.29606119791667
patch: continue ] ; } }
rank: 728
score: 98.22078159877232
patch: is CaMeL Empty = false ;
rank: 728
score: 98.11095174153645
patch: continue ; ( continue ;
rank: 728
score: 98.10057576497395
patch: ) { continue ; }
rank: 728
score: 98.04813232421876
patch: continue + 0 ;
rank: 728
score: 97.26321411132812
patch: buffer continue ;
rank: 729
score: 98.40928431919643
patch: result ; break ; } }
rank: 729
score: 98.09935506184895
patch: return i . length ;
rank: 729
score: 98.0454813639323
patch: continue cs + ch ;
rank: 729
score: 97.2513427734375
patch: continue ; set
rank: 730
score: 98.44047328404018
patch: continue continue ; } if ;
rank: 730
score: 98.40670340401786
patch: continue [ 1 ] ; ;
rank: 730
score: 98.29186139787946
patch: continue false ; continue true ;
rank: 730
score: 98.11050415039062
patch: continue ; * ; ;
rank: 730
score: 98.04461669921875
patch: return i : 0 ;
rank: 730
score: 97.22926330566406
patch: value continue ;
rank: 731
score: 98.43653215680804
patch: continue ; } } } ;
rank: 731
score: 98.29149518694196
patch: continue count - i ; }
rank: 731
score: 98.13273111979167
patch: else { return 0 ;
rank: 731
score: 98.10337320963542
patch: assert null ; continue ;
rank: 731
score: 98.04035949707031
patch: i -- ;
rank: 731
score: 97.22111511230469
patch: start continue ;
rank: 732
score: 98.43401227678571
patch: continue ; break ; ; }
rank: 732
score: 98.40565708705357
patch: break ; } if ; ;
rank: 732
score: 98.29132952008929
patch: break 1 ; } ; }
rank: 732
score: 98.21136474609375
patch: switch ( ch ) { }
rank: 732
score: 98.13236490885417
patch: return ( cs ) ;
rank: 732
score: 98.10202026367188
patch: return * 1 ; ;
rank: 732
score: 98.04018147786458
patch: continue continue + ch ;
rank: 732
score: 97.21768951416016
patch: catch continue ;
rank: 733
score: 98.43288748604911
patch: break ; } ; break ;
rank: 733
score: 98.40540568033855
patch: throw continue ; } }
rank: 733
score: 98.289306640625
patch: removed = true ; break ;
rank: 733
score: 98.21085030691964
patch: found = i ; } }
rank: 733
score: 98.10190836588542
patch: continue - / 1 ;
rank: 733
score: 98.039501953125
patch: continue * true ;
rank: 733
score: 97.21266174316406
patch: continue ; code
rank: 734
score: 98.43064371744792
patch: return ; } ; }
rank: 734
score: 98.40529087611607
patch: ret ; * * * /
rank: 734
score: 98.30827985491071
patch: continue ; else return i ;
rank: 734
score: 98.28724888392857
patch: idx ++ ; continue ; }
rank: 734
score: 98.20841761997768
patch: true ; i ++ ; }
rank: 734
score: 98.09970092773438
patch: continue ; += continue ;
rank: 734
score: 98.039306640625
patch: continue { return i ;
rank: 734
score: 97.20809173583984
patch: System ; ;
rank: 735
score: 98.40375627790179
patch: continue * 0 ; } }
rank: 735
score: 98.30736432756696
patch: break ; j ++ ; }
rank: 735
score: 98.28593226841518
patch: continue ( j ) ; }
rank: 735
score: 98.1234842936198
patch: return ch ; } }
rank: 735
score: 98.096435546875
patch: continue * continue $NUMBER$ ;
rank: 735
score: 97.20182037353516
patch: switch continue ;
rank: 736
score: 98.40373883928571
patch: continue * continue ; } }
rank: 736
score: 98.28549630301339
patch: continue ) ; } continue ;
rank: 736
score: 98.206298828125
patch: found return i ; }
rank: 736
score: 98.12259674072266
patch: i ++ ;
rank: 736
score: 98.09423828125
patch: continue * - 0 ;
rank: 736
score: 97.19792175292969
patch: out continue ;
rank: 737
score: 98.42753383091518
patch: continue continue ; ; } }
rank: 737
score: 98.40354701450893
patch: break ; continue ; } }
rank: 737
score: 98.3004150390625
patch: start = i ; continue ;
rank: 737
score: 98.20587158203125
patch: ; j ++ ; }
rank: 737
score: 98.09217325846355
patch: continue continue - 1 ;
rank: 737
score: 98.07349650065105
patch: continue ; i ++ ;
rank: 737
score: 98.0348612467448
patch: continue ( i ) ;
rank: 737
score: 97.1976318359375
patch: if ; ;
rank: 738
score: 98.4274190266927
patch: match ; continue ; }
rank: 738
score: 98.40314592633929
patch: return continue 1 ; } }
rank: 738
score: 98.29871477399554
patch: append ( ch ) ; }
rank: 738
score: 98.28402273995536
patch: field ; break ; } }
rank: 738
score: 98.20511881510417
patch: state = continue ; }
rank: 738
score: 98.11911010742188
patch: else continue ; }
rank: 738
score: 98.09075927734375
patch: continue ; char continue ;
rank: 738
score: 98.03155517578125
patch: throw $NUMBER$ ;
rank: 738
score: 97.17588806152344
patch: synchronized continue ;
rank: 739
score: 98.40207926432292
patch: throw null ; } else
rank: 739
score: 98.281396484375
patch: break 0 ; }
rank: 739
score: 98.2046407063802
patch: found = j ; }
rank: 739
score: 98.11759440104167
patch: result = continue 1 ;
rank: 739
score: 98.09058634440105
patch: j * continue ; ;
rank: 739
score: 98.03141276041667
patch: continue continue - 0 ;
rank: 740
score: 98.40198625837054
patch: continue & 1 ; } }
rank: 740
score: 98.08953857421875
patch: return continue * continue ;
rank: 740
score: 97.1661148071289
patch: new continue ;
rank: 741
score: 98.40133666992188
patch: { break ; } }
rank: 741
score: 98.27711995442708
patch: continue 1 ; ; }
rank: 741
score: 98.20272827148438
patch: true + j ; }
rank: 741
score: 98.11531575520833
patch: continue : i ; }
rank: 741
score: 98.08924560546875
patch: char continue continue ;
rank: 741
score: 98.06943969726562
patch: return ] ; }
rank: 741
score: 98.02976481119792
patch: result 1 = i ;
rank: 741
score: 97.16572570800781
patch: count true ;
rank: 742
score: 98.40096609933036
patch: } else if continue ; }
rank: 742
score: 98.27510579427083
patch: pos ++ ; break ;
rank: 742
score: 98.20168631417411
patch: false ; continue ; } }
rank: 742
score: 98.1151351928711
patch: j ++ ;
rank: 742
score: 98.0873311360677
patch: value = continue ; }
rank: 742
score: 98.02598063151042
patch: return ch + ch ;
rank: 742
score: 97.15724182128906
patch: next true ;
rank: 743
score: 98.26847330729167
patch: throw new continue ; }
rank: 743
score: 98.20082600911458
patch: true ; return i ;
rank: 743
score: 98.08721313476562
patch: next new continue ;
rank: 743
score: 97.15444946289062
patch: add continue ;
rank: 744
score: 98.42080252511161
patch: continue ; } * continue ;
rank: 744
score: 98.39928327287946
patch: continue ; } else } ;
rank: 744
score: 98.20003255208333
patch: found = continue ; }
rank: 744
score: 98.10877685546875
patch: } return 0 ;
rank: 744
score: 98.08591715494792
patch: continue * 0 ; /
rank: 744
score: 98.06063842773438
patch: return Math . length ;
rank: 744
score: 97.14175415039062
patch: b continue ;
rank: 745
score: 98.41877092633929
patch: break continue ; } ; }
rank: 745
score: 98.39828927176339
patch: and continue ; } continue ;
rank: 745
score: 98.26255289713542
patch: throw 0 - 1 ;
rank: 745
score: 98.25969848632812
patch: break count ; }
rank: 745
score: 98.10098266601562
patch: System . else {
rank: 745
score: 98.0858154296875
patch: continue ; * ; /
rank: 745
score: 98.05704752604167
patch: { return $STRING$ ; }
rank: 745
score: 98.0211181640625
patch: outer -- ; break ;
rank: 745
score: 97.1376724243164
patch: do continue ;
rank: 746
score: 98.41844831194196
patch: break ; } count ++ ;
rank: 746
score: 98.39659772600446
patch: break continue ; } continue ;
rank: 746
score: 98.25961303710938
patch: break false ;
rank: 746
score: 98.19818115234375
patch: prev = continue ; }
rank: 746
score: 98.10037231445312
patch: throw 0 ; }
rank: 746
score: 98.08580525716145
patch: continue = - 1 ;
rank: 746
score: 98.0570068359375
patch: j ++ ; } }
rank: 746
score: 98.0161641438802
patch: case $STRING$ : break ;
rank: 746
score: 97.1299057006836
patch: throw new ;
rank: 747
score: 98.25799560546875
patch: continue false ; break ;
rank: 747
score: 98.09798177083333
patch: return ( ch ) ;
rank: 747
score: 98.08499145507812
patch: continue continue ; break ;
rank: 747
score: 98.01302083333333
patch: case $STRING$ : continue ;
rank: 747
score: 97.12649536132812
patch: ++ continue ;
rank: 748
score: 98.39256940569196
patch: continue ; } / * /
rank: 748
score: 98.25344848632812
patch: break ) ; } }
rank: 748
score: 98.19623674665179
patch: true ; return true ; }
rank: 748
score: 98.0969746907552
patch: continue ; } ) ;
rank: 748
score: 98.08499145507812
patch: end continue ; break ;
rank: 748
score: 98.04838053385417
patch: i = 0 ; }
rank: 748
score: 98.01279703776042
patch: return this . ch ;
rank: 748
score: 97.12577819824219
patch: throw break ;
rank: 749
score: 98.41597202845982
patch: return ; } } break ;
rank: 749
score: 98.39059884207589
patch: return ++ $NUMBER$ ; } }
rank: 749
score: 98.24236450195312
patch: ret = i ;
rank: 749
score: 98.19070434570312
patch: t = continue ; }
rank: 749
score: 98.0830322265625
patch: continue * ; ;
rank: 749
score: 98.01026611328125
patch: continue + i ;
rank: 749
score: 97.12086486816406
patch: count -- ;
rank: 750
score: 98.41245814732143
patch: break ; count ++ ; }
rank: 750
score: 98.23316446940105
patch: break ; j ++ ;
rank: 750
score: 98.19027273995536
patch: found { continue ; } }
rank: 750
score: 98.09356689453125
patch: return new int [ 0
rank: 750
score: 98.08294677734375
patch: continue ; / 1 ;
rank: 750
score: 98.00807698567708
patch: return 0 . 0 ;
rank: 750
score: 97.12083435058594
patch: pos continue ;
rank: 751
score: 98.41183907645089
patch: ++ continue ; } ; }
rank: 751
score: 98.39016287667411
patch: continue ; } } true ;
rank: 751
score: 97.1133041381836
patch: / false ;
rank: 752
score: 98.38893636067708
patch: continue ; } finally ;
rank: 752
score: 98.24363403320312
patch: continue this ; }
rank: 752
score: 98.0904541015625
patch: outer = i ; }
rank: 752
score: 98.0414326985677
patch: continue ; } return }
rank: 752
score: 97.11278533935547
patch: = continue ;
rank: 753
score: 98.40864780970982
patch: outer ++ ; continue ; }
rank: 753
score: 98.38697306315105
patch: = continue ; } }
rank: 753
score: 98.24310302734375
patch: continue << 1 ; }
rank: 753
score: 98.18776448567708
patch: true = i ; }
rank: 753
score: 98.07956949869792
patch: continue * continue ; }
rank: 753
score: 97.11091613769531
patch: m false ;
rank: 754
score: 98.40801130022321
patch: ch ; break ; } }
rank: 754
score: 98.18498883928571
patch: ; return i ; } }
rank: 754
score: 98.08599853515625
patch: return char CaMeL At ;
rank: 754
score: 98.0783920288086
patch: continue value ;
rank: 754
score: 98.03184000651042
patch: return case - 1 ;
rank: 754
score: 98.00316619873047
patch: return break ;
rank: 754
score: 97.1046142578125
patch: buffer ; ;
rank: 755
score: 98.40796770368304
patch: if ( ; continue ; }
rank: 755
score: 98.18268694196429
patch: switch ( search CaMeL Len )
rank: 755
score: 98.07687377929688
patch: continue ; * * /
rank: 755
score: 98.00238037109375
patch: continue { continue ; }
rank: 755
score: 97.10089111328125
patch: continue ; {
rank: 756
score: 98.40603201729911
patch: break ; } } while ;
rank: 756
score: 98.0796407063802
patch: System . i ; }
rank: 756
score: 98.07657877604167
patch: end new int continue ;
rank: 756
score: 98.02932739257812
patch: return + 0 ; }
rank: 757
score: 98.17831420898438
patch: ; i ++ ; }
rank: 757
score: 98.0790303548177
patch: search CaMeL Chars [ }
rank: 757
score: 98.02691650390625
patch: return - ; }
rank: 757
score: 97.99964396158855
patch: return 0 + ch ;
rank: 757
score: 97.09564971923828
patch: } false ;
rank: 758
score: 98.40241350446429
patch: continue ; break continue ; }
rank: 758
score: 98.23508707682292
patch: count -- ; break ;
rank: 758
score: 98.0145772298177
patch: return - i ; }
rank: 758
score: 97.99940999348958
patch: continue 1 + ch ;
rank: 758
score: 97.0911865234375
patch: continue ; finally
rank: 759
score: 98.40060860770089
patch: continue ; } * ; }
rank: 759
score: 98.36123657226562
patch: break ; } else ;
rank: 759
score: 98.2334493001302
patch: break null ; } }
rank: 759
score: 98.17794363839286
patch: true ; break ; } }
rank: 759
score: 98.07785034179688
patch: return cs ; } }
rank: 759
score: 98.01375325520833
patch: { throw null ; }
rank: 759
score: 97.99891153971355
patch: continue continue + 0 ;
rank: 759
score: 97.08848571777344
patch: result false ;
rank: 760
score: 98.39996337890625
patch: ch = ; continue ; }
rank: 760
score: 98.2314453125
patch: continue -- i ; }
rank: 760
score: 98.20377197265626
patch: end = 0 ;
rank: 760
score: 98.07204182942708
patch: -- continue - 0 ;
rank: 760
score: 98.01036580403645
patch: add ( cs ) ;
rank: 760
score: 97.08793640136719
patch: } break ;
rank: 761
score: 98.39982096354167
patch: continue ; } ++ ;
rank: 761
score: 98.34429931640625
patch: return $NUMBER$ ; } ;
rank: 761
score: 98.22894287109375
patch: continue true ; } ;
rank: 761
score: 98.17656860351562
patch: ; break ; }
rank: 761
score: 98.07649739583333
patch: System . else ; }
rank: 761
score: 98.07089233398438
patch: continue ; / ; {
rank: 761
score: 98.0095926920573
patch: return + 1 ; }
rank: 761
score: 97.99151611328125
patch: break : 0 ;
rank: 761
score: 97.08418273925781
patch: throw ( ;
rank: 762
score: 98.39898681640625
patch: ++ ; break ; } }
rank: 762
score: 98.3424580891927
patch: return [ 1 ] ;
rank: 762
score: 98.22772216796875
patch: continue ; } default :
rank: 762
score: 98.17623901367188
patch: -- i ; } }
rank: 762
score: 98.07584635416667
patch: case null : continue ;
rank: 762
score: 98.06908162434895
patch: start continue ; continue ;
rank: 762
score: 97.08243560791016
patch: if ; {
rank: 763
score: 98.33938598632812
patch: } else if continue ;
rank: 763
score: 98.2005126953125
patch: throw i ; }
rank: 763
score: 98.17547607421875
patch: [ i ] = ch ;
rank: 763
score: 98.00722249348958
patch: new > ( ) ;
rank: 763
score: 97.0675048828125
patch: throw next ;
rank: 764
score: 98.39829799107143
patch: break ; } ; } ;
rank: 764
score: 98.33732096354167
patch: continue ; } catch ;
rank: 764
score: 98.22289428710937
patch: continue length ; }
rank: 764
score: 98.17535400390625
patch: ; return true ; }
rank: 764
score: 98.07478841145833
patch: result = return 0 ;
rank: 764
score: 98.06880696614583
patch: return continue || continue ;
rank: 764
score: 98.00684814453125
patch: return start ; }
rank: 764
score: 97.06576538085938
patch: end true ;
rank: 765
score: 98.22118377685547
patch: continue 0 ;
rank: 765
score: 98.072119140625
patch: search CaMeL Len ;
rank: 765
score: 98.06856282552083
patch: return continue ++ continue ;
rank: 765
score: 97.06315612792969
patch: found false ;
rank: 766
score: 98.39740862165179
patch: continue ; ; break ; }
rank: 766
score: 98.21707153320312
patch: continue ] ;
rank: 766
score: 98.17210896809895
patch: break + 1 ; }
rank: 766
score: 98.0670166015625
patch: } else ; continue ;
rank: 766
score: 97.05821228027344
patch: true continue ;
rank: 767
score: 98.21474202473958
patch: throw new ; } }
rank: 767
score: 98.19263712565105
patch: throw 0 ; } }
rank: 767
score: 98.17157854352679
patch: break ; return i ; }
rank: 767
score: 98.0682881673177
patch: result = 1 ; }
rank: 767
score: 98.06653849283855
patch: else return continue ; }
rank: 767
score: 97.05699157714844
patch: continue ; boolean
rank: 768
score: 98.39681570870536
patch: cursor ++ ; break ; }
rank: 768
score: 98.19062042236328
patch: throw i ;
rank: 768
score: 98.06705729166667
patch: return return continue ; }
rank: 768
score: 98.06444295247395
patch: while false ; continue ;
rank: 768
score: 97.99205525716145
patch: { return false ; }
rank: 768
score: 97.056396484375
patch: if ; continue
rank: 769
score: 98.32718912760417
patch: { continue ; } else
rank: 769
score: 98.21321614583333
patch: continue true ; ; }
rank: 769
score: 98.1708475748698
patch: true return true ; }
rank: 769
score: 98.0642801920573
patch: return continue ; / ;
rank: 769
score: 97.99111938476562
patch: return name ; }
rank: 769
score: 97.04815673828125
patch: continue ; System
rank: 770
score: 98.39558919270833
patch: continue ; default ; }
rank: 770
score: 98.16925048828125
patch: return j ; break ; }
rank: 770
score: 98.06406656901042
patch: break ; for continue ;
rank: 770
score: 97.99070231119792
patch: continue - false ; }
rank: 770
score: 97.97021484375
patch: return is CaMeL Empty ;
rank: 770
score: 97.04680633544922
patch: outer false ;
rank: 771
score: 98.39518519810268
patch: return count - 1 ; }
rank: 771
score: 98.20936075846355
patch: continue & 1 ; }
rank: 771
score: 98.16829223632813
patch: -- j ; }
rank: 771
score: 97.04324340820312
patch: ret continue ;
rank: 772
score: 98.39202008928571
patch: continue ++ i ; } }
rank: 772
score: 98.205029296875
patch: pos ++ ; }
rank: 772
score: 98.18369750976562
patch: result = 1 ;
rank: 772
score: 98.06137084960938
patch: while ( continue ; ;
rank: 772
score: 98.06124267578124
patch: log ( ) .
rank: 772
score: 97.98738606770833
patch: ch = ch ; }
rank: 772
score: 97.96875
patch: outer -- ; continue ;
rank: 772
score: 97.04251098632812
patch: throw super ;
rank: 773
score: 98.39164225260417
patch: found ; continue ; }
rank: 773
score: 98.30440266927083
patch: continue $NUMBER$ ; } }
rank: 773
score: 98.20240275065105
patch: count ; continue ; }
rank: 773
score: 98.16710408528645
patch: true ) { continue ;
rank: 773
score: 97.9678955078125
patch: return System . length ;
rank: 773
score: 97.03929138183594
patch: append continue ;
rank: 774
score: 98.39128766741071
patch: continue ; default * / }
rank: 774
score: 98.302001953125
patch: = 0 ; continue ;
rank: 774
score: 98.16563197544643
patch: ret = i ; } }
rank: 774
score: 98.06060180664062
patch: return continue $NUMBER$ ;
rank: 774
score: 97.96692911783855
patch: outer ++ ; break ;
rank: 774
score: 97.03562927246094
patch: break ; else
rank: 775
score: 98.19696044921875
patch: continue 1 ; } else
rank: 775
score: 98.16537475585938
patch: prev = j ; }
rank: 775
score: 98.05857340494792
patch: continue ; out continue ;
rank: 775
score: 97.96429443359375
patch: outer -- ; }
rank: 775
score: 97.02910614013672
patch: return value ;
rank: 776
score: 98.38922991071429
patch: continue ; else continue ; }
rank: 776
score: 98.19363403320312
patch: continue && continue ; }
rank: 776
score: 98.05777994791667
patch: if null . continue ;
rank: 776
score: 98.05241394042969
patch: return ; }
rank: 776
score: 97.9627685546875
patch: continue return continue ;
rank: 776
score: 97.02853393554688
patch: x continue ;
rank: 777
score: 98.19278971354167
patch: continue ++ i ; }
rank: 777
score: 98.16299438476562
patch: c { continue ; }
rank: 777
score: 98.05753580729167
patch: outer * continue ; }
rank: 777
score: 98.04593505859376
patch: else return i ;
rank: 777
score: 97.975341796875
patch: return - $STRING$ ; }
rank: 777
score: 97.96024780273437
patch: dispose ( ) ;
rank: 778
score: 98.3876953125
patch: throw new ; } ; }
rank: 778
score: 98.28456624348958
patch: return ; = continue ;
rank: 778
score: 98.1917724609375
patch: pos ++ ; continue ;
rank: 778
score: 98.17308349609375
patch: ret = 0 ;
rank: 778
score: 98.16152518136161
patch: len = search CaMeL Len ;
rank: 778
score: 98.05689493815105
patch: continue * continue j ;
rank: 778
score: 98.04409790039062
patch: x = 0 ;
rank: 778
score: 97.96951293945312
patch: return size . length ;
rank: 778
score: 97.01911926269531
patch: throw $STRING$ ;
rank: 779
score: 98.28141276041667
patch: } if ( continue ;
rank: 779
score: 98.18917846679688
patch: break 1 ;
rank: 779
score: 98.16121419270833
patch: break ; } / *
rank: 779
score: 98.05654907226562
patch: while continue ; break ;
rank: 779
score: 97.96749267578124
patch: return TRUE ; }
rank: 780
score: 98.27968343098958
patch: log ; continue ; }
rank: 780
score: 98.16081891741071
patch: false ; return i ; }
rank: 780
score: 98.05611165364583
patch: synchronized ( ! continue ;
rank: 780
score: 98.02474365234374
patch: search CaMeL Chars [
rank: 780
score: 97.01460266113281
patch: long continue ;
rank: 781
score: 98.38499232700893
patch: cursor ; break ; } }
rank: 781
score: 98.27781168619792
patch: result continue ; } }
rank: 781
score: 98.18726806640625
patch: continue value ; }
rank: 781
score: 98.16132202148438
patch: throw 1 ; }
rank: 781
score: 98.16063581194196
patch: len ++ ; continue ; }
rank: 781
score: 98.02345581054688
patch: outer ++ ; }
rank: 781
score: 97.00953674316406
patch: for ; ;
rank: 782
score: 98.38449532645089
patch: continue true ; } else {
rank: 782
score: 98.18522135416667
patch: break this ; } }
rank: 782
score: 98.15906372070313
patch: true continue ; }
rank: 782
score: 98.15728759765625
patch: continue ; return j ;
rank: 782
score: 98.02156982421874
patch: return ) ; }
rank: 782
score: 97.00733184814453
patch: fail continue ;
rank: 783
score: 98.27451578776042
patch: if ; continue ; }
rank: 783
score: 98.1846415201823
patch: continue index CaMeL Of ;
rank: 783
score: 98.1581522623698
patch: b { continue ; }
rank: 783
score: 98.0546162923177
patch: continue * continue - ;
rank: 783
score: 98.0215087890625
patch: else { continue ;
rank: 783
score: 97.94649251302083
patch: INDEX _ NOT _ FOUND
rank: 783
score: 97.00555419921875
patch: out ; ;
rank: 784
score: 98.38359723772321
patch: c ; continue ; } }
rank: 784
score: 98.18379516601563
patch: continue $NUMBER$ ; }
rank: 784
score: 98.15616280691964
patch: found = true ; } }
rank: 784
score: 98.051611328125
patch: continue * ] ;
rank: 784
score: 98.01287841796875
patch: end 1 ++ ;
rank: 784
score: 97.95862833658855
patch: { { continue ; }
rank: 784
score: 97.94206237792969
patch: case $STRING$ :
rank: 784
score: 97.00397491455078
patch: continue ; final
rank: 785
score: 98.38260904947917
patch: continue ; * / }
rank: 785
score: 98.27282104492187
patch: } } continue ;
rank: 785
score: 98.18328857421875
patch: count += continue ; }
rank: 785
score: 98.1551513671875
patch: prev { continue ; }
rank: 785
score: 96.98403930664062
patch: ; ; ;
rank: 786
score: 98.38177490234375
patch: return continue ; ; } }
rank: 786
score: 98.26485188802083
patch: break ; } if ;
rank: 786
score: 98.15159098307292
patch: ret = j ; }
rank: 786
score: 98.04443359375
patch: case 0 ] continue ;
rank: 786
score: 98.00771484375
patch: return i ; ;
rank: 786
score: 97.9564921061198
patch: outer = - 1 ;
rank: 786
score: 97.93714141845703
patch: outer -- ;
rank: 786
score: 96.98141479492188
patch: break continue ;
rank: 787
score: 98.38113403320312
patch: continue ++ count ; }
rank: 787
score: 98.26229858398438
patch: return ++ 1 ; }
rank: 787
score: 98.17587280273438
patch: continue super . continue ;
rank: 787
score: 98.14945475260417
patch: result { continue ; }
rank: 787
score: 98.1458231608073
patch: return ( i ) ;
rank: 787
score: 98.04421997070312
patch: return - 0 ; ;
rank: 787
score: 97.95628865559895
patch: continue ; } * ;
rank: 787
score: 96.97901916503906
patch: } ; ;
rank: 788
score: 98.1744384765625
patch: skip ; break ; }
rank: 788
score: 98.04335530598958
patch: catch continue ; continue ;
rank: 788
score: 97.95565185546874
patch: continue ; } {
rank: 788
score: 96.97273254394531
patch: throw name ;
rank: 789
score: 98.380126953125
patch: continue ; ; } } }
rank: 789
score: 98.1440938313802
patch: found = ; continue ;
rank: 789
score: 98.00079956054688
patch: result = null ;
rank: 789
score: 96.97240193684895
patch: true ;
rank: 790
score: 98.37949625651042
patch: continue ; * ; }
rank: 790
score: 98.2606201171875
patch: continue * $NUMBER$ ; }
rank: 790
score: 98.17122395833333
patch: continue is CaMeL Empty ;
rank: 790
score: 98.14335123697917
patch: ret = 0 ; }
rank: 790
score: 97.95203653971355
patch: continue ; } * *
rank: 790
score: 96.97193908691406
patch: if null ;
rank: 791
score: 98.37698800223214
patch: pos ++ ; ; } }
rank: 791
score: 98.2605489095052
patch: return 0 * continue ;
rank: 791
score: 98.16597493489583
patch: continue ; } do {
rank: 791
score: 98.14213053385417
patch: break { break ; }
rank: 791
score: 98.13580322265625
patch: continue } } break ;
rank: 791
score: 98.0421854654948
patch: return continue * 0 ;
rank: 791
score: 97.951220703125
patch: return FALSE ; }
rank: 791
score: 96.97174835205078
patch: error continue ;
rank: 792
score: 98.16347249348958
patch: pos = continue ; }
rank: 792
score: 98.14031982421875
patch: ++ i ; }
rank: 792
score: 98.04193115234375
patch: while null ; continue ;
rank: 792
score: 97.95054117838542
patch: return list . length ;
rank: 792
score: 97.92957305908203
patch: continue $NUMBER$ ;
rank: 792
score: 96.96684265136719
patch: outer ; else
rank: 793
score: 98.16199951171875
patch: continue ; case ;
rank: 793
score: 98.13916015625
patch: curr = continue ; }
rank: 793
score: 98.04128011067708
patch: j * * continue ;
rank: 793
score: 97.98964233398438
patch: System . break ;
rank: 793
score: 97.9291280110677
patch: continue }
rank: 793
score: 96.96551513671875
patch: continue
rank: 794
score: 98.25734456380208
patch: return continue ; } else
rank: 794
score: 98.13807373046875
patch: result = j ;
rank: 794
score: 98.04119873046875
patch: m continue ; continue ;
rank: 794
score: 97.98503875732422
patch: outer ++ ;
rank: 794
score: 97.94643147786458
patch: return - count ; }
rank: 794
score: 97.92781372070313
patch: break + 1 ;
rank: 794
score: 96.96234893798828
patch: result -- ;
rank: 795
score: 98.37223307291667
patch: continue j ; } }
rank: 795
score: 98.25685628255208
patch: } else if ; }
rank: 795
score: 98.16035970052083
patch: do { continue ; }
rank: 795
score: 98.13231404622395
patch: answer = j ; }
rank: 795
score: 98.03873697916667
patch: continue * 1 ; /
rank: 795
score: 97.94612630208333
patch: { return null ; }
rank: 795
score: 96.95762634277344
patch: found continue ;
rank: 796
score: 98.37151227678571
patch: p ++ ; continue ; }
rank: 796
score: 98.13161214192708
patch: true continue ; } }
rank: 796
score: 98.03835042317708
patch: m ( continue ) ;
rank: 796
score: 97.94388834635417
patch: return - FALSE ; }
rank: 796
score: 97.92260131835937
patch: debug ( ) ;
rank: 796
score: 96.95327758789062
patch: buf continue ;
rank: 797
score: 98.2529296875
patch: and continue ; } }
rank: 797
score: 98.15770467122395
patch: match ; break ; }
rank: 797
score: 97.9427998860677
patch: continue - true ; }
rank: 797
score: 96.95271301269531
patch: } true ;
rank: 798
score: 98.251220703125
patch: return $NUMBER$ ; } else
rank: 798
score: 98.1310526529948
patch: b = continue ; }
rank: 798
score: 97.94278971354167
patch: return - ; } }
rank: 798
score: 96.94930267333984
patch: result ; ;
rank: 799
score: 98.25035603841145
patch: that . continue ; }
rank: 799
score: 98.15577189127605
patch: while ( continue ; }
rank: 799
score: 98.13003540039062
patch: folder . continue ; }
rank: 799
score: 98.03656005859375
patch: for continue ; ; ;
rank: 799
score: 97.94254557291667
patch: continue ; } finally {
rank: 799
score: 96.94890594482422
patch: . continue ;
rank: 800
score: 98.15499877929688
patch: dim . continue ; }
rank: 800
score: 98.12674967447917
patch: end = i ; }
rank: 800
score: 97.9605224609375
patch: end ( ) ;
rank: 800
score: 96.9443130493164
patch: / true ;
rank: 801
score: 98.35821533203125
patch: pos ; continue ; }
rank: 801
score: 98.24075317382812
patch: } } if continue ;
rank: 801
score: 98.12638346354167
patch: found = ) ; }
rank: 801
score: 98.02369995117188
patch: i * continue ;
rank: 801
score: 97.95591430664062
patch: System . i ;
rank: 801
score: 97.91680297851562
patch: continue * false ;
rank: 801
score: 96.92898559570312
patch: continue ; next
rank: 802
score: 98.23881022135417
patch: = 0 ; } }
rank: 802
score: 98.12472534179688
patch: ret = continue ; }
rank: 802
score: 97.939208984375
patch: return Long . length ;
rank: 802
score: 97.915673828125
patch: result = ch ;
rank: 802
score: 96.92658233642578
patch: j false ;
rank: 803
score: 98.23751831054688
patch: return $NUMBER$ ; continue ;
rank: 803
score: 98.1432596842448
patch: continue break ; } }
rank: 803
score: 98.0215576171875
patch: continue ++ continue ;
rank: 803
score: 96.92412567138672
patch: outer true ;
rank: 804
score: 98.34190877278645
patch: continue continue continue ; }
rank: 804
score: 98.23712158203125
patch: } if continue ; }
rank: 804
score: 98.122802734375
patch: break ; } return }
rank: 804
score: 98.11764526367188
patch: pos = i ; }
rank: 804
score: 97.9373067220052
patch: return - null ; }
rank: 805
score: 98.32843017578125
patch: continue j ; }
rank: 805
score: 98.11775716145833
patch: retval = i ; }
rank: 805
score: 98.00511474609375
patch: continue += continue ;
rank: 805
score: 97.94347534179687
patch: pos = i ;
rank: 805
score: 96.91494750976562
patch: return out ;
rank: 806
score: 98.32135009765625
patch: continue ++ continue ; }
rank: 806
score: 98.23545328776042
patch: return ; ; continue ;
rank: 806
score: 98.1312255859375
patch: count -- ; continue ;
rank: 806
score: 98.11769612630208
patch: true { break ; }
rank: 806
score: 98.00489501953125
patch: continue < continue ;
rank: 806
score: 97.93693033854167
patch: return Integer . 1 ;
rank: 806
score: 96.9127426147461
patch: return ; {
rank: 807
score: 98.23190307617188
patch: continue * * continue ;
rank: 807
score: 98.10914103190105
patch: break ; return i ;
rank: 807
score: 97.93203735351562
patch: throw 0 ;
rank: 807
score: 96.89985656738281
patch: false ; ;
rank: 808
score: 98.2292989095052
patch: break ; } else }
rank: 808
score: 98.1143798828125
patch: false ; break ; }
rank: 808
score: 98.10860595703124
patch: outer = i ;
rank: 808
score: 98.00167236328124
patch: break ; ; }
rank: 808
score: 97.93241373697917
patch: } } return 1 ;
rank: 808
score: 97.89221801757813
patch: do { continue ;
rank: 809
score: 98.22841389973958
patch: return ; ; } ;
rank: 809
score: 98.128173828125
patch: continue ; } try {
rank: 809
score: 98.11326090494792
patch: global . continue ; }
rank: 809
score: 98.0016357421875
patch: throw new $STRING$ ;
rank: 809
score: 96.89546966552734
patch: continue ; this
rank: 810
score: 98.22768147786458
patch: return TRUE ; } }
rank: 810
score: 98.10929361979167
patch: n = j ; }
rank: 810
score: 98.10687255859375
patch: continue } return j ;
rank: 810
score: 97.99772338867187
patch: j * continue ;
rank: 810
score: 97.93182373046875
patch: continue return i ; }
rank: 810
score: 96.8941650390625
patch: skip continue ;
rank: 811
score: 98.12720743815105
patch: continue ~ 1 ; }
rank: 811
score: 97.98927001953125
patch: synchronized ( continue ;
rank: 811
score: 97.93174235026042
patch: return this + j ;
rank: 812
score: 98.2188008626302
patch: continue = 1 ; }
rank: 812
score: 98.12638346354167
patch: outer : break ; }
rank: 812
score: 97.98267822265625
patch: continue = 0 ;
rank: 812
score: 97.9311014811198
patch: return -- j ; }
rank: 812
score: 97.92205810546875
patch: { return i ;
rank: 812
score: 97.88157348632812
patch: continue * $NUMBER$ ;
rank: 812
score: 96.89019012451172
patch: throw System ;
rank: 813
score: 98.21875
patch: * * * continue ;
rank: 813
score: 98.12574259440105
patch: skip ; continue ; }
rank: 813
score: 98.10690307617188
patch: res = j ; }
rank: 813
score: 98.09049479166667
patch: throw i ; } }
rank: 813
score: 97.97454223632812
patch: continue * ; }
rank: 813
score: 97.87925720214844
patch: pos ++ ;
rank: 813
score: 96.888427734375
patch: add false ;
rank: 814
score: 98.21854654947917
patch: { continue ; } ;
rank: 814
score: 98.12257893880208
patch: continue ) break ; }
rank: 814
score: 98.08917846679688
patch: } return j ;
rank: 814
score: 97.9739990234375
patch: else return continue ;
rank: 814
score: 97.87354125976563
patch: n = 0 ;
rank: 814
score: 96.88813781738281
patch: protected continue ;
rank: 815
score: 98.21743774414062
patch: continue ; } return ;
rank: 815
score: 98.12135823567708
patch: super . continue ; }
rank: 815
score: 98.10604858398438
patch: tmp { continue ; }
rank: 815
score: 97.97362060546875
patch: continue * j ;
rank: 815
score: 97.90754699707031
patch: continue } }
rank: 815
score: 96.8862075805664
patch: continue ; count
rank: 816
score: 98.10565185546875
patch: false + j ; }
rank: 816
score: 97.9720687866211
patch: continue size ;
rank: 816
score: 97.9286600748698
patch: log . return 0 ;
rank: 816
score: 97.86871337890625
patch: pos -- ;
rank: 816
score: 96.88607025146484
patch: return Math ;
rank: 817
score: 98.2880147298177
patch: continue ; count ; }
rank: 817
score: 98.10348510742188
patch: found = false ;
rank: 817
score: 97.86729125976562
patch: continue } continue ;
rank: 817
score: 96.882080078125
patch: assert continue ;
rank: 818
score: 98.11771647135417
patch: assert ; break ; }
rank: 818
score: 97.97025146484376
patch: this . continue ;
rank: 818
score: 96.88050842285156
patch: text continue ;
rank: 819
score: 98.11519368489583
patch: col = continue ; }
rank: 819
score: 97.96968383789063
patch: -- continue ; }
rank: 819
score: 97.86613159179687
patch: i -- ; }
rank: 819
score: 96.87847137451172
patch: -- false ;
rank: 820
score: 98.09808349609375
patch: f = continue ; }
rank: 820
score: 98.07703857421875
patch: ch = ch ;
rank: 820
score: 97.92689005533855
patch: return 0 + j ;
rank: 820
score: 97.85723266601562
patch: continue : false ;
rank: 820
score: 96.87637329101562
patch: close continue ;
rank: 821
score: 98.2049560546875
patch: continue ; } while ;
rank: 821
score: 98.09710693359375
patch: curr = j ; }
rank: 821
score: 97.96490478515625
patch: continue out ; }
rank: 821
score: 97.92586059570313
patch: return value ; }
rank: 821
score: 96.87118530273438
patch: m continue ;
rank: 822
score: 97.95943603515624
patch: continue - next ;
rank: 822
score: 96.86880493164062
patch: / ; ;
rank: 823
score: 98.26743570963542
patch: continue ch ; } }
rank: 823
score: 98.19678751627605
patch: return * 1 ; }
rank: 823
score: 98.10416666666667
patch: continue ; case ; }
rank: 823
score: 98.09458923339844
patch: true ; }
rank: 823
score: 97.95827026367188
patch: continue ; / else
rank: 823
score: 97.87445068359375
patch: { break ; }
rank: 823
score: 96.8680419921875
patch: ( continue ;
rank: 824
score: 98.19618733723958
patch: ret continue ; } }
rank: 824
score: 98.09438069661458
patch: false ) continue ; }
rank: 824
score: 97.91205444335938
patch: { return 0 ;
rank: 824
score: 97.84498901367188
patch: continue + $NUMBER$ ;
rank: 824
score: 96.865478515625
patch: continue ; throw
rank: 825
score: 98.1920878092448
patch: throw null ; } ;
rank: 825
score: 98.1013895670573
patch: continue ) ; } }
rank: 825
score: 98.08951822916667
patch: retval = j ; }
rank: 825
score: 97.90997314453125
patch: continue cs ; }
rank: 825
score: 96.86312866210938
patch: This continue ;
rank: 826
score: 98.26357014973958
patch: return ; } } }
rank: 826
score: 98.19148763020833
patch: found continue ; } }
rank: 826
score: 98.10104370117188
patch: break break ; }
rank: 826
score: 97.908544921875
patch: return left ; }
rank: 826
score: 97.83827514648438
patch: continue - i ;
rank: 826
score: 96.86051177978516
patch: throw finally ;
rank: 827
score: 98.261181640625
patch: continue ch ; }
rank: 827
score: 98.18587239583333
patch: ! continue ; } }
rank: 827
score: 98.09726969401042
patch: if ; break ; }
rank: 827
score: 97.8359130859375
patch: return ++ i ;
rank: 827
score: 96.85358428955078
patch: continue ; do
rank: 828
score: 98.26087443033855
patch: return continue ; ; }
rank: 828
score: 98.18324788411458
patch: end continue ; } }
rank: 828
score: 98.0901611328125
patch: break null ; }
rank: 828
score: 98.08620198567708
patch: switch ( j ) {
rank: 828
score: 97.95318603515625
patch: continue - ] ;
rank: 828
score: 97.89610595703125
patch: i = 0 ;
rank: 828
score: 97.83570556640625
patch: return count 1 ;
rank: 828
score: 96.84788513183594
patch: throw value ;
rank: 829
score: 98.25921630859375
patch: continue continue false ; }
rank: 829
score: 98.08963623046876
patch: continue max ; }
rank: 829
score: 97.95245361328125
patch: continue - $STRING$ ;
rank: 829
score: 96.84489440917969
patch: throw ( Runtime
rank: 830
score: 98.25888061523438
patch: ch ++ ; } }
rank: 830
score: 98.08914184570312
patch: continue == 1 ; }
rank: 830
score: 98.08071899414062
patch: n = 0 ; }
rank: 830
score: 97.9501708984375
patch: start new continue ;
rank: 830
score: 97.85247192382812
patch: result = $STRING$ ;
rank: 830
score: 96.8398208618164
patch: throw for ;
rank: 831
score: 98.0889180501302
patch: continue Boolean . TRUE ;
rank: 831
score: 98.08036295572917
patch: entry { continue ; }
rank: 831
score: 98.04921875
patch: end = i ;
rank: 831
score: 97.88262939453125
patch: return case 1 ;
rank: 831
score: 97.81726837158203
patch: continue ch ;
rank: 831
score: 96.83938598632812
patch: false continue ;
rank: 832
score: 98.16775512695312
patch: return 0 - 1 ;
rank: 832
score: 98.0862528483073
patch: continue ++ j ; }
rank: 832
score: 98.0769287109375
patch: found = 0 ;
rank: 832
score: 97.93525390625
patch: } * * /
rank: 832
score: 97.84927978515626
patch: return ( ) ;
rank: 833
score: 98.07860310872395
patch: continue false ; } else
rank: 833
score: 98.0758768717448
patch: -- j ; } }
rank: 833
score: 97.84608154296875
patch: result = break ;
rank: 833
score: 97.8134765625
patch: continue : true ;
rank: 833
score: 96.83562469482422
patch: mark continue ;
rank: 834
score: 98.25071207682292
patch: continue continue true ; }
rank: 834
score: 98.075439453125
patch: true + 1 ; }
rank: 834
score: 97.80691528320312
patch: return -- i ;
rank: 834
score: 96.83506774902344
patch: ret false ;
rank: 835
score: 98.1590067545573
patch: throw continue ; } else
rank: 835
score: 98.07820638020833
patch: loop : continue ; }
rank: 835
score: 98.07484944661458
patch: found { break ; }
rank: 835
score: 97.84415893554687
patch: return break ; }
rank: 835
score: 96.83191680908203
patch: if $NUMBER$ ;
rank: 836
score: 98.07801310221355
patch: idx ++ ; } }
rank: 836
score: 97.92864990234375
patch: outer = continue ;
rank: 836
score: 97.83587036132812
patch: else return 0 ;
rank: 836
score: 97.79150390625
patch: continue return ch ;
rank: 836
score: 96.83032989501953
patch: = 1 ;
rank: 837
score: 98.07672119140625
patch: count -= continue ; }
rank: 837
score: 97.92021484375
patch: i continue ; }
rank: 837
score: 97.7823974609375
patch: } return ch ;
rank: 837
score: 96.82952880859375
patch: return System ;
rank: 838
score: 98.07511393229167
patch: break length ; } }
rank: 838
score: 98.05413818359375
patch: ++ j ; }
rank: 838
score: 97.82754516601562
patch: start = 0 ;
rank: 838
score: 97.82696533203125
patch: continue static ; }
rank: 838
score: 96.82852172851562
patch: result true ;
rank: 839
score: 98.23548380533855
patch: continue count ; } ;
rank: 839
score: 98.04544677734376
patch: body break ; }
rank: 839
score: 97.91220092773438
patch: continue * continue /
rank: 839
score: 96.82609558105469
patch: return Integer ;
rank: 840
score: 98.22872924804688
patch: c ; continue ; }
rank: 840
score: 98.149658203125
patch: = continue ; }
rank: 840
score: 98.06851196289062
patch: continue % $NUMBER$ ; }
rank: 840
score: 97.91069946289062
patch: continue * next ;
rank: 840
score: 97.8142822265625
patch: System . else ;
rank: 840
score: 96.82347106933594
patch: position continue ;
rank: 841
score: 98.14962768554688
patch: return 1 * continue ;
rank: 841
score: 98.06653849283855
patch: n = continue ; }
rank: 841
score: 97.90880126953125
patch: -- continue ; ;
rank: 841
score: 97.772021484375
patch: continue + false ;
rank: 841
score: 96.82230377197266
patch: for false ;
rank: 842
score: 98.21800740559895
patch: return continue continue ; }
rank: 842
score: 98.14781494140625
patch: continue ; } finally
rank: 842
score: 98.06307983398438
patch: count ++ ; ; }
rank: 842
score: 97.90313720703125
patch: return continue continue ;
rank: 842
score: 97.80165405273438
patch: outer = 1 ;
rank: 842
score: 97.77068481445312
patch: continue return 1 ;
rank: 842
score: 96.8204116821289
patch: println continue ;
rank: 843
score: 98.14664713541667
patch: return FALSE ; } }
rank: 843
score: 98.06099243164063
patch: throw new ; }
rank: 843
score: 98.0368408203125
patch: true ; } }
rank: 843
score: 97.89859619140626
patch: for continue ; }
rank: 843
score: 97.8090087890625
patch: return return continue ;
rank: 843
score: 97.769970703125
patch: continue + true ;
rank: 843
score: 96.81767272949219
patch: throw ( continue
rank: 844
score: 97.89130859375
patch: ret = continue ;
rank: 844
score: 96.81427764892578
patch: continue ; to
rank: 845
score: 98.14548746744792
patch: continue * ; } }
rank: 845
score: 98.05747477213542
patch: continue >= 1 ; }
rank: 845
score: 97.89112548828125
patch: assert ( continue ;
rank: 845
score: 96.81291198730469
patch: found true ;
rank: 846
score: 98.2105000813802
patch: continue count ; ; }
rank: 846
score: 98.05691528320312
patch: limit ++ ; } }
rank: 846
score: 98.0058349609375
patch: ; return i ;
rank: 846
score: 97.76807250976563
patch: continue return j ;
rank: 846
score: 96.81058502197266
patch: next -- ;
rank: 847
score: 98.20961507161458
patch: ch = ; } }
rank: 847
score: 98.14463297526042
patch: throw null ; continue ;
rank: 847
score: 97.992138671875
patch: break j ; }
rank: 847
score: 97.88270874023438
patch: end continue ; }
rank: 847
score: 97.790185546875
patch: return search CaMeL Chars
rank: 847
score: 97.78101806640625
patch: outer = 0 ;
rank: 847
score: 97.76578369140626
patch: continue : $NUMBER$ ;
rank: 847
score: 96.80944061279297
patch: equals continue ;
rank: 848
score: 98.20930989583333
patch: pos ; break ; }
rank: 848
score: 98.1442159016927
patch: continue / * continue ;
rank: 848
score: 97.88003540039062
patch: } catch continue ;
rank: 848
score: 97.76285400390626
patch: return min ; }
rank: 848
score: 97.75985107421874
patch: outer ( ) ;
rank: 848
score: 96.80828857421875
patch: } else ;
rank: 849
score: 98.1396484375
patch: throw continue ; } ;
rank: 849
score: 98.05497233072917
patch: continue length - 1 ;
rank: 849
score: 97.9881591796875
patch: break + 0 ;
rank: 849
score: 97.7593994140625
patch: continue { break ;
rank: 849
score: 96.80772399902344
patch: + 1 ;
rank: 850
score: 98.20315551757812
patch: return ; } * /
rank: 850
score: 97.9689697265625
patch: false continue ; }
rank: 850
score: 97.87843017578125
patch: v = continue ;
rank: 850
score: 97.75880126953125
patch: search CaMeL Len }
rank: 850
score: 96.80422973632812
patch: remaining continue ;
rank: 851
score: 98.13783772786458
patch: continue ; ; } else
rank: 851
score: 98.05368041992188
patch: continue hash CaMeL Code ;
rank: 851
score: 97.77955932617188
patch: System . j ;
rank: 851
score: 96.79801940917969
patch: = false ;
rank: 852
score: 98.19979858398438
patch: continue ; * / ;
rank: 852
score: 98.13344319661458
patch: if continue ; } }
rank: 852
score: 97.96123046875
patch: found = j ;
rank: 852
score: 97.87438354492187
patch: continue = 1 ;
rank: 852
score: 97.7552001953125
patch: repaint ( ) ;
rank: 852
score: 96.79657745361328
patch: continue ; type
rank: 853
score: 98.19866943359375
patch: return i ; } ;
rank: 853
score: 98.13101806640626
patch: throw continue ; }
rank: 853
score: 98.04502360026042
patch: continue % 1 ; }
rank: 853
score: 97.983203125
patch: return } break ;
rank: 853
score: 96.79585266113281
patch: continue ; first
rank: 854
score: 98.04434204101562
patch: continue ; i -- ;
rank: 854
score: 97.9375732421875
patch: c ++ ; }
rank: 854
score: 97.872509765625
patch: continue / continue ;
rank: 854
score: 97.77705383300781
patch: return } }
rank: 854
score: 96.794921875
patch: continue ; Illegal
rank: 855
score: 98.04220581054688
patch: count ; break ; }
rank: 855
score: 97.87227783203124
patch: m continue ; }
rank: 855
score: 97.77452850341797
patch: return ) ;
rank: 855
score: 97.74405670166016
patch: search CaMeL Len
rank: 855
score: 97.74087524414062
patch: return case 0 ;
rank: 855
score: 96.79439544677734
patch: error false ;
rank: 856
score: 98.0412089029948
patch: break count ++ ; }
rank: 856
score: 97.86613159179687
patch: end continue ; ;
rank: 856
score: 97.77239379882812
patch: result ++ ; }
rank: 856
score: 97.73935546875
patch: return NULL ; }
rank: 856
score: 96.7935791015625
patch: skip false ;
rank: 857
score: 98.03927612304688
patch: outer = continue ; }
rank: 857
score: 97.9195556640625
patch: ! continue ; }
rank: 857
score: 97.7712646484375
patch: result = start ;
rank: 857
score: 96.79336547851562
patch: m true ;
rank: 858
score: 98.03871663411458
patch: continue count 1 ; }
rank: 858
score: 97.97423095703125
patch: return } j ;
rank: 858
score: 97.91841430664063
patch: table . break ;
rank: 858
score: 97.8628173828125
patch: ch = continue ;
rank: 858
score: 97.7691162109375
patch: start = i ;
rank: 858
score: 97.71129760742187
patch: return case false ;
rank: 858
score: 96.79246520996094
patch: += 1 ;
rank: 859
score: 97.91483154296876
patch: switch ( j )
rank: 859
score: 97.85999755859375
patch: j continue ; }
rank: 859
score: 97.69989013671875
patch: outer = true ;
rank: 859
score: 96.78971099853516
patch: default false ;
rank: 860
score: 97.91157836914063
patch: switch ( i )
rank: 860
score: 97.85924072265625
patch: continue * ; /
rank: 860
score: 97.72823486328124
patch: break - 0 ;
rank: 860
score: 96.78880310058594
patch: continue ; current
rank: 861
score: 98.18182373046875
patch: cursor ; continue ; }
rank: 861
score: 98.03389485677083
patch: j ++ ; break ;
rank: 861
score: 97.9615966796875
patch: return -- j ;
rank: 861
score: 97.91097412109374
patch: answer = i ;
rank: 861
score: 97.76484375
patch: continue : ; }
rank: 861
score: 97.691552734375
patch: } break ; }
rank: 861
score: 96.78797912597656
patch: name continue ;
rank: 862
score: 98.18086751302083
patch: end ; continue ; }
rank: 862
score: 98.07952880859375
patch: found continue ; }
rank: 862
score: 98.031591796875
patch: continue ; default :
rank: 862
score: 97.90516357421875
patch: private break ; }
rank: 862
score: 97.85850830078125
patch: } while continue ;
rank: 862
score: 96.78781127929688
patch: count break ;
rank: 863
score: 97.90357055664063
patch: res = continue ;
rank: 863
score: 97.685595703125
patch: } return 1 ;
rank: 863
score: 96.78435516357422
patch: continue ; start
rank: 864
score: 98.17691040039062
patch: continue -- j ; }
rank: 864
score: 98.0110595703125
patch: continue TRUE ; }
rank: 864
score: 97.89605712890625
patch: prev = j ;
rank: 864
score: 97.85679321289062
patch: while continue ; ;
rank: 864
score: 96.77934265136719
patch: symbol continue ;
rank: 865
score: 98.04285888671875
patch: if continue ; }
rank: 865
score: 97.85594482421875
patch: char continue ; ;
rank: 865
score: 97.75798034667969
patch: if ( }
rank: 865
score: 97.70438842773437
patch: search CaMeL Len )
rank: 865
score: 97.67969970703125
patch: { return 1 ;
rank: 865
score: 96.778564453125
patch: buffer ;
rank: 866
score: 98.16885375976562
patch: continue ; default * /
rank: 866
score: 98.00640258789062
patch: continue - ; }
rank: 866
score: 97.88470458984375
patch: ref break ; }
rank: 866
score: 97.70164794921875
patch: break : i ;
rank: 866
score: 97.67693481445312
patch: continue ; } *
rank: 866
score: 96.77236938476562
patch: } ;
rank: 867
score: 98.16599527994792
patch: continue continue ; } else
rank: 867
score: 97.99584350585937
patch: break ) ; }
rank: 867
score: 97.7559814453125
patch: level = 0 ;
rank: 867
score: 97.67591857910156
patch: return left ;
rank: 867
score: 96.772216796875
patch: throw ( {
rank: 868
score: 98.16342163085938
patch: return ; } else {
rank: 868
score: 98.02649536132813
patch: and continue ; }
rank: 868
score: 97.98925170898437
patch: continue next ; }
rank: 868
score: 97.87191162109374
patch: found = ; }
rank: 868
score: 97.849609375
patch: } ++ continue ;
rank: 868
score: 97.75572509765625
patch: return ( $STRING$ ;
rank: 868
score: 97.6980712890625
patch: return count ) ;
rank: 868
score: 96.7673110961914
patch: throw start ;
rank: 869
score: 98.16147867838542
patch: continue continue count ; }
rank: 869
score: 97.98898315429688
patch: count continue ; }
rank: 869
score: 97.66951293945313
patch: return - ) ;
rank: 869
score: 96.71824137369792
patch: System ;
rank: 870
score: 97.99166870117188
patch: chunk continue ; }
rank: 870
score: 97.98768920898438
patch: outer : continue ;
rank: 870
score: 97.86836547851563
patch: found = ) ;
rank: 870
score: 97.74938354492187
patch: Array CaMeL Utils .
rank: 870
score: 97.69324951171875
patch: flush ( ) ;
rank: 870
score: 97.66743774414063
patch: return case true ;
rank: 870
score: 96.69307454427083
patch: out ;
rank: 871
score: 97.9869155883789
patch: continue null ;
rank: 871
score: 97.867919921875
patch: true ++ ; }
rank: 871
score: 96.65066528320312
patch: }
rank: 872
score: 97.98433837890624
patch: continue += 1 ;
rank: 872
score: 97.66541748046875
patch: outer = false ;
rank: 872
score: 96.64195251464844
patch: outer
rank: 873
score: 98.15758260091145
patch: -- continue ; } }
rank: 873
score: 97.97989501953126
patch: result continue ; }
rank: 873
score: 97.97686767578125
patch: continue left ; }
rank: 873
score: 97.66367797851562
patch: i = 1 ;
rank: 873
score: 96.51841227213542
patch: } else
rank: 874
score: 97.83438110351562
patch: * continue ; }
rank: 874
score: 96.48507690429688
patch: result ;
rank: 875
score: 97.97538452148437
patch: } else ; }
rank: 875
score: 97.85609130859375
patch: res ++ ; }
rank: 875
score: 97.68216552734376
patch: pos -- ; }
rank: 875
score: 96.46432495117188
patch: false ;
rank: 876
score: 98.15414428710938
patch: found ; break ; }
rank: 876
score: 97.97037963867187
patch: set ; continue ;
rank: 876
score: 97.85419311523438
patch: end ++ ; }
rank: 876
score: 97.82713012695312
patch: value { continue ;
rank: 876
score: 97.68086242675781
patch: break i ;
rank: 876
score: 97.6591552734375
patch: return + 1 ;
rank: 876
score: 96.43379720052083
patch: Logger ;
rank: 877
score: 98.1509297688802
patch: c -- ; } }
rank: 877
score: 97.96661987304688
patch: continue & 1 ;
rank: 877
score: 97.82581787109375
patch: start = continue ;
rank: 877
score: 97.7400390625
patch: search CaMeL Len =
rank: 877
score: 97.67544555664062
patch: continue case $STRING$ :
rank: 877
score: 97.65781860351562
patch: return / 1 ;
rank: 877
score: 96.2900899251302
patch: ; ;
rank: 878
score: 97.8254150390625
patch: else = continue ;
rank: 878
score: 97.67404174804688
patch: n ++ ;
rank: 878
score: 96.26756795247395
patch: / ;
rank: 879
score: 97.96207885742187
patch: c continue ; }
rank: 879
score: 97.93335723876953
patch: break true ;
rank: 879
score: 97.84757690429687
patch: v ++ ; }
rank: 879
score: 97.737548828125
patch: } else {
rank: 879
score: 97.65015869140625
patch: j = 0 ;
rank: 879
score: 96.25059000651042
patch: sb ;
rank: 880
score: 97.93189086914063
patch: continue start ; }
rank: 880
score: 97.84566650390624
patch: true return i ;
rank: 880
score: 97.822119140625
patch: finally = continue ;
rank: 880
score: 97.73431396484375
patch: System . j .
rank: 880
score: 96.24755859375
patch: buf ;
rank: 881
score: 98.14693196614583
patch: continue ; ++ ; }
rank: 881
score: 97.95894775390624
patch: continue * * ;
rank: 881
score: 97.66120910644531
patch: -- j ;
rank: 881
score: 97.62984008789063
patch: outer = j ;
rank: 881
score: 96.11817932128906
patch: try
rank: 882
score: 98.14253743489583
patch: return ; } break ;
rank: 882
score: 97.94972534179688
patch: res continue ; }
rank: 882
score: 97.897705078125
patch: t = ch ;
rank: 882
score: 97.8431884765625
patch: tmp = continue ;
rank: 882
score: 97.81920166015625
patch: key = continue ;
rank: 882
score: 97.65806274414062
patch: close ( ) ;
rank: 882
score: 96.10753377278645
patch: this ;
rank: 883
score: 98.14144897460938
patch: throw new ; } ;
rank: 883
score: 97.89044799804688
patch: } i ++ ;
rank: 883
score: 97.65712280273438
patch: continue ( 0 ;
rank: 883
score: 97.62860717773438
patch: return right ; }
rank: 883
score: 96.0836181640625
patch: e ;
rank: 884
score: 97.84254760742188
patch: res = i ;
rank: 884
score: 97.81669616699219
patch: continue finally ;
rank: 884
score: 97.62698974609376
patch: ch ++ ; }
rank: 884
score: 96.07675170898438
patch: LOG ;
rank: 885
score: 98.13888549804688
patch: return ; break ; }
rank: 885
score: 97.90120849609374
patch: break this ; }
rank: 885
score: 97.81646118164062
patch: continue / 1 ;
rank: 885
score: 97.62411499023438
patch: return static ; }
rank: 885
score: 96.06258138020833
patch: log ;
rank: 886
score: 98.1382344563802
patch: return i - 1 ;
rank: 886
score: 97.84231567382812
patch: table . continue ;
rank: 886
score: 97.81517944335937
patch: value continue ; }
rank: 886
score: 97.61782836914062
patch: return T ; }
rank: 886
score: 96.04885864257812
patch: else ;
rank: 887
score: 97.87603759765625
patch: break ] ;
rank: 887
score: 97.8130126953125
patch: return start ; ;
rank: 887
score: 97.71793212890626
patch: return i ) ;
rank: 887
score: 97.65003051757813
patch: start $NUMBER$ ++ ;
rank: 887
score: 97.61734008789062
patch: return + 0 ;
rank: 887
score: 96.02915445963542
patch: Utilities ;
rank: 888
score: 98.13315836588542
patch: pos ++ ; ; }
rank: 888
score: 97.931591796875
patch: return ++ 1 ;
rank: 888
score: 97.885888671875
patch: return return j ;
rank: 888
score: 97.8689208984375
patch: continue FALSE ; }
rank: 888
score: 97.83587646484375
patch: true ; break ;
rank: 888
score: 97.81285400390625
patch: } for continue ;
rank: 888
score: 97.7158447265625
patch: x = i ;
rank: 888
score: 97.61529541015625
patch: return case $STRING$ ;
rank: 888
score: 96.00059000651042
patch: logger ;
rank: 889
score: 97.85651397705078
patch: continue length ;
rank: 889
score: 97.82882690429688
patch: private continue ; }
rank: 889
score: 97.8128173828125
patch: start continue ; }
rank: 889
score: 97.64910888671875
patch: result = cs ;
rank: 889
score: 97.61123046875
patch: i = i ;
rank: 889
score: 95.98751831054688
patch: context ;
rank: 890
score: 97.85157470703125
patch: idx ++ ; }
rank: 890
score: 97.82462768554687
patch: true return ; }
rank: 890
score: 97.81271362304688
patch: continue start ;
rank: 890
score: 97.71041870117188
patch: throw new null ;
rank: 890
score: 97.64815521240234
patch: flags ++ ;
rank: 890
score: 97.6056640625
patch: continue ; else {
rank: 890
score: 95.98624674479167
patch: / false
rank: 891
score: 98.1281026204427
patch: ++ continue ; } ;
rank: 891
score: 97.9287353515625
patch: ret continue ; }
rank: 891
score: 97.87890014648437
patch: return } } }
rank: 891
score: 97.8165771484375
patch: retval = i ;
rank: 891
score: 97.81001281738281
patch: continue out ;
rank: 891
score: 97.64627685546876
patch: continue ( i ;
rank: 891
score: 97.60507202148438
patch: outer = count ;
rank: 891
score: 95.97758483886719
patch: result
rank: 892
score: 97.84429931640625
patch: continue false ; ;
rank: 892
score: 97.81653442382813
patch: found = continue ;
rank: 892
score: 95.93111165364583
patch: result else
rank: 893
score: 97.92393188476562
patch: return ; ; }
rank: 893
score: 97.84125366210938
patch: n ++ ; }
rank: 893
score: 97.81519775390625
patch: impl . continue ;
rank: 893
score: 97.80634155273438
patch: continue value ; ;
rank: 893
score: 97.63975830078125
patch: n = i ;
rank: 893
score: 97.60159301757812
patch: continue int ; }
rank: 893
score: 95.91227213541667
patch: iterator ;
rank: 894
score: 97.9207275390625
patch: ignore continue ; }
rank: 894
score: 97.80955200195312
patch: break { } }
rank: 894
score: 97.80587158203124
patch: continue size ; }
rank: 894
score: 97.63815307617188
patch: n -- ;
rank: 894
score: 97.59655151367187
patch: { return $STRING$ ;
rank: 894
score: 95.87823486328125
patch: outer /
rank: 895
score: 98.119384765625
patch: c ; break ; }
rank: 895
score: 97.83729248046875
patch: continue matches ; }
rank: 895
score: 97.80895385742187
patch: length ++ ; }
rank: 895
score: 97.67317962646484
patch: result ++ ;
rank: 895
score: 97.63338623046874
patch: return count - }
rank: 895
score: 97.59024658203126
patch: return E ; }
rank: 895
score: 95.8624979654948
patch: ;
rank: 896
score: 98.11789957682292
patch: found ++ ; } }
rank: 896
score: 97.80628051757813
patch: ; return ; }
rank: 896
score: 95.84386189778645
patch: throw (
rank: 897
score: 97.91449584960938
patch: ret ; * /
rank: 897
score: 97.80416259765624
patch: return char ; }
rank: 897
score: 97.80265502929687
patch: ++ continue ; ;
rank: 897
score: 97.635498046875
patch: break } }
rank: 897
score: 95.83725992838542
patch: super ;
rank: 898
score: 97.858837890625
patch: method = ch ;
rank: 898
score: 97.803466796875
patch: true ) {
rank: 898
score: 97.801025390625
patch: m continue ; ;
rank: 898
score: 97.61845703125
patch: warn ( ) ;
rank: 898
score: 97.5765380859375
patch: return ] ;
rank: 898
score: 95.83126831054688
patch: Assert ;
rank: 899
score: 97.90882568359375
patch: result ; * /
rank: 899
score: 97.81756591796875
patch: continue max ;
rank: 899
score: 97.79925537109375
patch: catch continue ; }
rank: 899
score: 97.57455444335938
patch: return - $STRING$ ;
rank: 899
score: 95.8291524251302
patch: do ;
rank: 900
score: 97.89993286132812
patch: } if ; }
rank: 900
score: 97.85548706054688
patch: result = $NUMBER$ ;
rank: 900
score: 97.79671020507813
patch: name = continue ;
rank: 900
score: 97.79475708007813
patch: retval = j ;
rank: 900
score: 97.60627746582031
patch: -- i ;
rank: 900
score: 97.59877014160156
patch: return FALSE ;
rank: 900
score: 95.81931559244792
patch: text ;
rank: 901
score: 97.8067626953125
patch: break length ; }
rank: 901
score: 97.79652099609375
patch: continue true ; ;
rank: 901
score: 97.79173583984375
patch: true { continue ;
rank: 901
score: 97.58274841308594
patch: case null :
rank: 901
score: 95.7779541015625
patch: finally ;
rank: 902
score: 98.10892740885417
patch: continue count -- ; }
rank: 902
score: 97.86506958007813
patch: break ; * /
rank: 902
score: 97.85263061523438
patch: name = ch ;
rank: 902
score: 97.79618530273437
patch: return continue value ;
rank: 902
score: 97.79015502929687
patch: true + j ;
rank: 902
score: 97.5803731282552
patch: return ;
rank: 902
score: 95.77060953776042
patch: ret ;
rank: 903
score: 97.79603881835938
patch: complete new continue ;
rank: 903
score: 97.7900146484375
patch: answer = j ;
rank: 903
score: 97.78291015625
patch: continue compare ; }
rank: 903
score: 97.5768051147461
patch: flags -- ;
rank: 903
score: 97.56723022460938
patch: { break ;
rank: 903
score: 95.7657470703125
patch: outer else
rank: 904
score: 97.8443359375
patch: continue . length ;
rank: 904
score: 97.79523315429688
patch: t = continue ;
rank: 904
score: 97.78135375976562
patch: len ++ ; }
rank: 904
score: 97.55877685546875
patch: position ++ ;
rank: 904
score: 95.75768025716145
patch: try ;
rank: 905
score: 97.55618896484376
patch: j = i ;
rank: 905
score: 97.55331420898438
patch: case 0 :
rank: 905
score: 95.70480346679688
patch: continue /
rank: 906
score: 98.09234619140625
patch: entry ; continue ; }
rank: 906
score: 97.85274658203124
patch: } } if ;
rank: 906
score: 97.8404541015625
patch: throw $NUMBER$ ; }
rank: 906
score: 97.7787353515625
patch: limit ++ ; }
rank: 906
score: 97.7749755859375
patch: found return i ;
rank: 906
score: 97.53924560546875
patch: break ) ;
rank: 906
score: 95.69287109375
patch: /
rank: 907
score: 97.84955444335938
patch: in continue ; }
rank: 907
score: 97.83863525390625
patch: break + $NUMBER$ ;
rank: 907
score: 97.77798461914062
patch: continue break ;
rank: 907
score: 97.52316284179688
patch: continue FALSE ;
rank: 907
score: 97.52139282226562
patch: try {
rank: 907
score: 95.55731964111328
patch: do
rank: 908
score: 97.84905395507812
patch: ret ; } }
rank: 908
score: 97.7918701171875
patch: j ] continue ;
rank: 908
score: 97.7734619140625
patch: ret = j ;
rank: 908
score: 97.52055358886719
patch: z ++ ;
rank: 908
score: 97.50731658935547
patch: return - ;
rank: 909
score: 97.84874267578125
patch: break ; } finally
rank: 909
score: 97.5481201171875
patch: return - i ;
rank: 909
score: 97.50450134277344
patch: result = }
rank: 909
score: 95.44686889648438
patch: buffer
rank: 910
score: 97.84814453125
patch: return 1 ; else
rank: 910
score: 97.49153900146484
patch: System . }
rank: 910
score: 95.38787841796875
patch: out
rank: 911
score: 97.82271728515624
patch: s = ch ;
rank: 911
score: 97.75606689453124
patch: true = ; }
rank: 911
score: 97.74867553710938
patch: continue right ; }
rank: 911
score: 97.53975830078124
patch: return int ; }
rank: 911
score: 97.50386810302734
patch: return right ;
rank: 911
score: 97.48846435546875
patch: LOG .
rank: 911
score: 95.19390106201172
patch: else
rank: 912
score: 97.8420654296875
patch: prev continue ; }
rank: 912
score: 97.78582153320312
patch: outer continue ; }
rank: 912
score: 97.52608642578124
patch: i = j ;
rank: 912
score: 95.18408203125
patch: ret
rank: 913
score: 97.78558959960938
patch: n = continue ;
rank: 913
score: 97.75230712890625
patch: res = j ;
rank: 913
score: 97.73857116699219
patch: continue this ;
rank: 913
score: 95.14775085449219
patch: finally
rank: 914
score: 98.05879516601563
patch: continue -- ; }
rank: 914
score: 97.80940551757813
patch: break - $NUMBER$ ;
rank: 914
score: 97.75176391601562
patch: curr = j ;
rank: 914
score: 97.73560791015625
patch: continue T ; }
rank: 914
score: 97.47181701660156
patch: continue : ;
rank: 914
score: 95.05245971679688
patch: System
rank: 915
score: 97.80490112304688
patch: continue } } }
rank: 915
score: 97.7822998046875
patch: value return continue ;
rank: 915
score: 97.74412231445312
patch: found { continue ;
rank: 915
score: 97.73422241210938
patch: break count ;
rank: 915
score: 95.03221130371094
patch: buf
rank: 916
score: 97.82880859375
patch: } else if ;
rank: 916
score: 97.78104248046876
patch: continue ; * else
rank: 916
score: 97.74302368164062
patch: folder . continue ;
rank: 916
score: 97.73394165039062
patch: dim . continue ;
rank: 916
score: 97.47042846679688
patch: continue ( ;
rank: 916
score: 94.95203399658203
patch: {
rank: 917
score: 97.7957275390625
patch: result += ch ;
rank: 917
score: 97.77864990234374
patch: continue ; 1 ;
rank: 917
score: 97.74039916992187
patch: n = j ;
rank: 917
score: 97.73198852539062
patch: break $NUMBER$ ; }
rank: 917
score: 97.44818878173828
patch: continue + ;
rank: 917
score: 94.89302062988281
patch: start
rank: 918
score: 97.73973388671875
patch: curr = continue ;
rank: 918
score: 97.73088989257812
patch: continue 1 ; ;
rank: 918
score: 97.43829345703125
patch: return }
rank: 918
score: 94.81393432617188
patch: throw
rank: 919
score: 97.82188720703125
patch: set continue ; }
rank: 919
score: 97.79434814453126
patch: throw case ch ;
rank: 919
score: 97.44498443603516
patch: return TRUE ;
rank: 919
score: 97.44200134277344
patch: len ++ ;
rank: 919
score: 94.81127166748047
patch: value
rank: 920
score: 97.98221435546876
patch: return ; } ;
rank: 920
score: 97.791455078125
patch: throw 0 ) ;
rank: 920
score: 97.77650451660156
patch: continue next ;
rank: 920
score: 97.73759155273437
patch: switch ( cs )
rank: 920
score: 97.72457275390624
patch: continue default ; }
rank: 920
score: 97.4407958984375
patch: continue TRUE ;
rank: 920
score: 97.43393961588542
patch: break }
rank: 920
score: 94.80828857421875
patch: break
rank: 921
score: 97.98067016601563
patch: continue ++ ; }
rank: 921
score: 97.770849609375
patch: end null continue ;
rank: 921
score: 97.71949462890625
patch: break max ; }
rank: 921
score: 97.42576599121094
patch: System . ]
rank: 921
score: 94.80435180664062
patch: 
rank: 922
score: 97.71815185546875
patch: pos = continue ;
rank: 922
score: 97.67234802246094
patch: false ; }
rank: 922
score: 97.41061401367188
patch: continue if ;
rank: 922
score: 94.78980255126953
patch: found
rank: 923
score: 97.71680297851563
patch: if ( continue )
rank: 923
score: 97.40921783447266
patch: result = (
rank: 923
score: 94.76299285888672
patch: sb
rank: 924
score: 97.91207275390624
patch: continue name ; }
rank: 924
score: 97.766015625
patch: b = continue ;
rank: 924
score: 97.71678466796875
patch: continue && continue ;
rank: 924
score: 97.40015411376953
patch: ch ++ ;
rank: 924
score: 94.7224349975586
patch: b
rank: 925
score: 97.76488037109375
patch: start continue ; ;
rank: 925
score: 97.71146850585937
patch: skip continue ; }
rank: 925
score: 97.3570785522461
patch: return 0 }
rank: 925
score: 94.70122528076172
patch: max
rank: 926
score: 97.798876953125
patch: in ; continue ;
rank: 926
score: 97.38951110839844
patch: z -- ;
rank: 926
score: 97.38896179199219
patch: if ( {
rank: 926
score: 94.69183349609375
patch: token
rank: 927
score: 97.79818725585938
patch: } ( continue ;
rank: 927
score: 97.76043090820312
patch: k * continue ;
rank: 927
score: 97.3857192993164
patch: break cs ;
rank: 927
score: 97.38129425048828
patch: result = ;
rank: 927
score: 97.33474731445312
patch: System .
rank: 927
score: 94.6583480834961
patch: type
rank: 928
score: 97.79253540039062
patch: do . continue ;
rank: 928
score: 97.76038818359375
patch: continue -- next ;
rank: 928
score: 97.70686645507813
patch: break TRUE ; }
rank: 928
score: 94.55880737304688
patch: context
rank: 929
score: 97.79219360351563
patch: } else * /
rank: 929
score: 97.75692749023438
patch: synchronized continue ; ;
rank: 929
score: 97.37196350097656
patch: end ++ ;
rank: 929
score: 94.50628662109375
patch: n
rank: 930
score: 97.86622314453125
patch: throw ; } }
rank: 930
score: 97.57085418701172
patch: found = ;
rank: 930
score: 97.276123046875
patch: ++ j ;
rank: 930
score: 94.47073364257812
patch: true
rank: 931
score: 97.77716674804688
patch: match continue ; }
rank: 931
score: 97.7729248046875
patch: ret = 1 ;
rank: 931
score: 97.75421752929688
patch: byte continue continue ;
rank: 931
score: 97.69805908203125
patch: continue -= 1 ;
rank: 931
score: 97.3239974975586
patch: continue continue }
rank: 931
score: 94.46882629394531
patch: code
rank: 932
score: 97.74959106445313
patch: continue size ; ;
rank: 932
score: 97.69760131835938
patch: ret ++ ; }
rank: 932
score: 97.54469299316406
patch: body break ;
rank: 932
score: 97.3539047241211
patch: continue - ;
rank: 932
score: 97.26228332519531
patch: return min ;
rank: 932
score: 94.41030883789062
patch: iterator
rank: 933
score: 97.69420166015625
patch: fcontinue ; }
rank: 933
score: 97.52603149414062
patch: break { }
rank: 933
score: 94.40450286865234
patch: method
rank: 934
score: 97.74847412109375
patch: continue * value ;
rank: 934
score: 97.6934814453125
patch: break 0 ;
rank: 934
score: 97.50723266601562
patch: table [ }
rank: 934
score: 97.314208984375
patch: break $NUMBER$ ;
rank: 934
score: 94.37149047851562
patch: this
rank: 935
score: 97.68909912109375
patch: continue -- i ;
rank: 935
score: 97.49630737304688
patch: ; break ;
rank: 935
score: 94.37027740478516
patch: e
rank: 936
score: 97.83589477539063
patch: switch ( ch )
rank: 936
score: 97.76414794921875
patch: that . continue ;
rank: 936
score: 97.74139404296875
patch: i = continue ;
rank: 936
score: 97.48253631591797
patch: false ) {
rank: 936
score: 97.32611846923828
patch: return ( ;
rank: 936
score: 97.30450439453125
patch: x ++ ;
rank: 936
score: 94.36931610107422
patch: symbol
rank: 937
score: 97.82247924804688
patch: ch = ; }
rank: 937
score: 97.759765625
patch: is continue ; }
rank: 937
score: 97.68616943359375
patch: col ++ ; }
rank: 937
score: 94.36145782470703
patch: offset
rank: 938
score: 97.81851806640626
patch: continue -- count ;
rank: 938
score: 97.75804443359375
patch: return = 0 ;
rank: 938
score: 97.32341003417969
patch: case ch ;
rank: 938
score: 97.29314422607422
patch: return else ;
rank: 938
score: 94.35862731933594
patch: text
rank: 939
score: 97.81635131835938
patch: pos continue ; }
rank: 939
score: 97.75730590820312
patch: is ; continue ;
rank: 939
score: 97.72431182861328
patch: continue * /
rank: 939
score: 97.67532348632812
patch: continue $STRING$ ; }
rank: 939
score: 97.3144760131836
patch: i continue ;
rank: 939
score: 94.35415649414062
patch: pos
rank: 940
score: 97.30828857421875
patch: throw new /
rank: 940
score: 97.20794677734375
patch: return while ;
rank: 940
score: 94.3303451538086
patch: string
rank: 941
score: 97.67081298828126
patch: continue == 1 ;
rank: 941
score: 97.43234252929688
patch: case 1 :
rank: 941
score: 97.28239440917969
patch: ++ i ;
rank: 941
score: 94.32974243164062
patch: Logger
rank: 942
score: 97.75186157226562
patch: clear ( ) ;
rank: 942
score: 97.67029418945313
patch: break next ; }
rank: 942
score: 97.2818603515625
patch: continue + }
rank: 942
score: 94.32886505126953
patch: *
rank: 943
score: 97.7476318359375
patch: result ; } }
rank: 943
score: 94.25857543945312
patch: x
rank: 944
score: 97.78385009765626
patch: match ; continue ;
rank: 944
score: 97.74629516601563
patch: c = ch ;
rank: 944
score: 97.3964131673177
patch: table .
rank: 944
score: 97.28384399414062
patch: case true :
rank: 944
score: 94.25797271728516
patch: prev
rank: 945
score: 97.74154052734374
patch: if ; * /
rank: 945
score: 97.25877380371094
patch: } * /
rank: 945
score: 94.24333190917969
patch: c
rank: 946
score: 97.772705078125
patch: c ; } }
rank: 946
score: 97.28253173828125
patch: end 1 ;
rank: 946
score: 94.2406005859375
patch: final
rank: 947
score: 97.73175048828125
patch: flags = 0 ;
rank: 947
score: 97.64502716064453
patch: continue ; :
rank: 947
score: 97.12786865234375
patch: continue int ;
rank: 947
score: 94.22956848144531
patch: super
rank: 948
score: 97.76453857421875
patch: c -- ; }
rank: 948
score: 97.72985229492187
patch: commit ( ) ;
rank: 948
score: 97.59500885009766
patch: continue left ;
rank: 948
score: 97.11686706542969
patch: return 1 }
rank: 948
score: 94.22196960449219
patch: r
rank: 949
score: 97.72789916992187
patch: update continue ; }
rank: 949
score: 97.59162139892578
patch: continue matches ;
rank: 949
score: 97.26180267333984
patch: * * /
rank: 949
score: 94.21954345703125
patch: This
rank: 950
score: 97.72173461914062
patch: * * * /
rank: 950
score: 97.25949096679688
patch: length ++ ;
rank: 950
score: 97.24599202473958
patch: log .
rank: 950
score: 97.09502410888672
patch: return NULL ;
rank: 950
score: 94.20106506347656
patch: public
rank: 951
score: 97.73701171875
patch: continue list ; }
rank: 951
score: 97.574951171875
patch: break null ;
rank: 951
score: 97.32600402832031
patch: private break ;
rank: 951
score: 97.24656677246094
patch: continue : }
rank: 951
score: 94.12069702148438
patch: scope
rank: 952
score: 97.559814453125
patch: assert false ;
rank: 952
score: 97.24292755126953
patch: * / }
rank: 952
score: 97.0791015625
patch: { System .
rank: 952
score: 94.12055969238281
patch: false
rank: 953
score: 97.5499267578125
patch: continue j ;
rank: 953
score: 97.32000732421875
patch: found = }
rank: 953
score: 97.24189758300781
patch: } } }
rank: 953
score: 97.2169418334961
patch: retval ++ ;
rank: 953
score: 94.11587524414062
patch: parent
rank: 954
score: 97.51769256591797
patch: continue compare ;
rank: 954
score: 97.21366882324219
patch: buf [ j
rank: 954
score: 97.03900909423828
patch: return T ;
rank: 954
score: 94.11448669433594
patch: Utilities
rank: 955
score: 97.23251342773438
patch: case false :
rank: 955
score: 94.10087585449219
patch: Assert
rank: 956
score: 97.47528076171875
patch: idx ++ ;
rank: 956
score: 97.02978515625
patch: return if ;
rank: 956
score: 94.08607482910156
patch: iter
rank: 957
score: 97.28153991699219
patch: found ++ ;
rank: 957
score: 97.2218017578125
patch: else { }
rank: 957
score: 97.21185302734375
patch: continue * }
rank: 957
score: 94.07882690429688
patch: next
rank: 958
score: 97.71885986328125
patch: if ( ; }
rank: 958
score: 97.52175903320312
patch: return finally ;
rank: 958
score: 97.27822875976562
patch: v ++ ;
rank: 958
score: 97.02729797363281
patch: System . *
rank: 958
score: 94.0765609741211
patch: content
rank: 959
score: 97.08988444010417
patch: logger .
rank: 959
score: 97.02302551269531
patch: l ++ ;
rank: 959
score: 94.07185363769531
patch: item
rank: 960
score: 97.7135009765625
patch: found ++ ; }
rank: 960
score: 97.43716430664062
patch: break break ;
rank: 960
score: 97.26166534423828
patch: table . }
rank: 960
score: 97.07869466145833
patch: } }
rank: 960
score: 97.02210235595703
patch: return E ;
rank: 960
score: 94.04808044433594
patch: t
rank: 961
score: 97.41848754882812
patch: continue exp ;
rank: 961
score: 94.0458755493164
patch: dim
rank: 962
score: 97.70640869140625
patch: continue add ; }
rank: 962
score: 97.5110092163086
patch: } * ;
rank: 962
score: 97.17005920410156
patch: continue ( }
rank: 962
score: 97.06746419270833
patch: else {
rank: 962
score: 94.0411605834961
patch: line
rank: 963
score: 97.70328979492187
patch: char continue ; }
rank: 963
score: 97.50342559814453
patch: continue / ;
rank: 963
score: 97.16898345947266
patch: retval -- ;
rank: 963
score: 97.00692749023438
patch: continue static ;
rank: 963
score: 97.00091552734375
patch: * *
rank: 963
score: 94.03565216064453
patch: minor
rank: 964
score: 97.70018310546875
patch: continue new ; }
rank: 964
score: 97.46406555175781
patch: Reader continue ;
rank: 964
score: 97.3593978881836
patch: continue default ;
rank: 964
score: 97.21558380126953
patch: switch ( cs
rank: 964
score: 97.15687561035156
patch: continue - }
rank: 964
score: 94.0312728881836
patch: count
rank: 965
score: 97.69906005859374
patch: return >= ; }
rank: 965
score: 97.21378326416016
patch: true } }
rank: 965
score: 96.83231608072917
patch: info .
rank: 965
score: 94.0171127319336
patch: cur
rank: 966
score: 97.698828125
patch: pos ; break ;
rank: 966
score: 97.19084930419922
patch: break j ;
rank: 966
score: 97.1478271484375
patch: continue * this
rank: 966
score: 96.80583953857422
patch: return
rank: 966
score: 94.00729370117188
patch: it
rank: 967
score: 97.4630355834961
patch: case continue ;
rank: 967
score: 97.04215494791667
patch: true {
rank: 967
score: 96.80230712890625
patch: if (
rank: 967
score: 93.99955749511719
patch: retval
rank: 968
score: 97.6935546875
patch: found ; break ;
rank: 968
score: 97.29035949707031
patch: continue digit ;
rank: 968
score: 97.01436360677083
patch: ; }
rank: 968
score: 96.76944986979167
patch: e .
rank: 968
score: 93.9915542602539
patch: LOG
rank: 969
score: 97.69141235351563
patch: pos ++ ; ;
rank: 969
score: 97.42031860351562
patch: return index CaMeL
rank: 969
score: 97.2877197265625
patch: continue new ;
rank: 969
score: 97.13730875651042
patch: continue {
rank: 969
score: 96.93959554036458
patch: outer :
rank: 969
score: 96.93544514973958
patch: true )
rank: 969
score: 96.75948079427083
patch: Log .
rank: 969
score: 93.96659851074219
patch: output
rank: 970
score: 97.68657836914062
patch: cursor ++ ; }
rank: 970
score: 97.28768920898438
patch: continue right ;
rank: 970
score: 97.12748718261719
patch: result ; }
rank: 970
score: 96.9384765625
patch: j -- ;
rank: 970
score: 96.90492757161458
patch: found {
rank: 970
score: 96.75821940104167
patch: do {
rank: 970
score: 93.94601440429688
patch: Asserts
rank: 971
score: 97.680859375
patch: continue padding ; }
rank: 971
score: 97.28694152832031
patch: continue min ;
rank: 971
score: 96.93479919433594
patch: return int ;
rank: 971
score: 96.888671875
patch: true }
rank: 971
score: 96.7507832845052
patch: * /
rank: 971
score: 93.94470977783203
patch: attribute
rank: 972
score: 97.67885131835938
patch: if ; } }
rank: 972
score: 97.27647399902344
patch: assert true ;
rank: 972
score: 96.91459655761719
patch: continue $STRING$ ;
rank: 972
score: 96.8133544921875
patch: break {
rank: 972
score: 96.70198567708333
patch: result =
rank: 972
score: 93.9414291381836
patch: element
rank: 973
score: 97.40057373046875
patch: j continue ;
rank: 973
score: 97.31536865234375
patch: throw ; ;
rank: 973
score: 97.26374816894531
patch: break this ;
rank: 973
score: 96.68959554036458
patch: / *
rank: 973
score: 93.9383544921875
patch: cp
rank: 974
score: 97.30321502685547
patch: continue in ;
rank: 974
score: 97.25190734863281
patch: continue mid ;
rank: 974
score: 93.8890609741211
patch: state
rank: 975
score: 97.39550018310547
patch: < continue ;
rank: 975
score: 97.24523162841797
patch: break max ;
rank: 975
score: 96.7279561360677
patch: continue continue
rank: 975
score: 96.68407185872395
patch: context .
rank: 975
score: 93.85807800292969
patch: Bad
rank: 976
score: 97.39349365234375
patch: f continue ;
rank: 976
score: 96.67519124348958
patch: false }
rank: 976
score: 96.6218770345052
patch: search CaMeL
rank: 976
score: 96.59004720052083
patch: Logger .
rank: 976
score: 93.84619140625
patch: current
rank: 977
score: 97.4268569946289
patch: c ++ ;
rank: 977
score: 97.36172485351562
patch: key continue ;
rank: 977
score: 97.23501586914062
patch: limit ++ ;
rank: 977
score: 96.65130615234375
patch: result {
rank: 977
score: 96.58863321940105
patch: continue int
rank: 977
score: 96.55816650390625
patch: return (
rank: 977
score: 96.34109497070312
patch: return -
rank: 977
score: 93.834716796875
patch: name
rank: 978
score: 97.22486877441406
patch: break length ;
rank: 978
score: 96.6412353515625
patch: state .
rank: 978
score: 93.83082580566406
patch: top
rank: 979
score: 97.27365112304688
patch: } ; }
rank: 979
score: 96.62223307291667
patch: false {
rank: 979
score: 93.82678985595703
patch: node
rank: 980
score: 97.33207702636719
patch: continue ; default
rank: 980
score: 96.5745849609375
patch: continue *
rank: 980
score: 96.51898193359375
patch: f .
rank: 980
score: 93.80150604248047
patch: position
rank: 981
score: 97.31021118164062
patch: assert null ;
rank: 981
score: 97.20762634277344
patch: continue package ;
rank: 981
score: 96.57753499348958
patch: ctx .
rank: 981
score: 96.15401204427083
patch: { }
rank: 981
score: 93.79718017578125
patch: first
rank: 982
score: 97.3031005859375
patch: end ( ;
rank: 982
score: 97.20664978027344
patch: continue enable ;
rank: 982
score: 96.51492309570312
patch: return {
rank: 982
score: 96.48406982421875
patch: false )
rank: 982
score: 93.78413391113281
patch: val
rank: 983
score: 97.29975891113281
patch: += continue ;
rank: 983
score: 97.29119873046875
patch: throw ; }
rank: 983
score: 97.24642944335938
patch: Set continue ;
rank: 983
score: 97.19094848632812
patch: break next ;
rank: 983
score: 96.51454671223958
patch: / /
rank: 983
score: 96.13717651367188
patch: return 0
rank: 983
score: 93.75311279296875
patch: z
rank: 984
score: 96.51187133789062
patch: / 1
rank: 984
score: 93.747802734375
patch: index
rank: 985
score: 97.16189575195312
patch: continue get ;
rank: 985
score: 96.45277913411458
patch: found ;
rank: 985
score: 93.72996520996094
patch: path
rank: 986
score: 97.24891662597656
patch: throw j ;
rank: 986
score: 97.2222900390625
patch: List continue ;
rank: 986
score: 97.16181182861328
patch: level ++ ;
rank: 986
score: 96.4694315592448
patch: prev .
rank: 986
score: 96.4441630045573
patch: connection .
rank: 986
score: 93.67681121826172
patch: comp
rank: 987
score: 96.45595296223958
patch: for (
rank: 987
score: 96.42775472005208
patch: ts .
rank: 987
score: 96.0239766438802
patch: return new
rank: 987
score: 93.6717529296875
patch: slot
rank: 988
score: 97.20511627197266
patch: } } else
rank: 988
score: 97.14411926269531
patch: continue repeat ;
rank: 988
score: 96.41946411132812
patch: this .
rank: 988
score: 93.66999816894531
patch: sequence
rank: 989
score: 97.20482635498047
patch: } if ;
rank: 989
score: 96.4049784342448
patch: res {
rank: 989
score: 96.3969014485677
patch: throw new
rank: 989
score: 96.3662821451823
patch: continue finally
rank: 989
score: 95.976806640625
patch: outer {
rank: 989
score: 93.65699768066406
patch: owner
rank: 990
score: 97.1899185180664
patch: Backtrack continue ;
rank: 990
score: 97.15631866455078
patch: cursor ++ ;
rank: 990
score: 96.39735921223958
patch: ! }
rank: 990
score: 96.3431396484375
patch: err ;
rank: 990
score: 96.31608072916667
patch: continue _
rank: 990
score: 93.65569305419922
patch: message
rank: 991
score: 97.13752746582031
patch: continue exit ;
rank: 991
score: 96.37877400716145
patch: prev {
rank: 991
score: 96.31443277994792
patch: buf [
rank: 991
score: 95.94705200195312
patch: outer =
rank: 991
score: 93.61414337158203
patch: loc
rank: 992
score: 96.36867268880208
patch: Util .
rank: 992
score: 96.28406778971355
patch: continue if
rank: 992
score: 93.60887145996094
patch: ex
rank: 993
score: 97.25454711914062
patch: log continue ;
rank: 993
score: 97.13356018066406
patch: continue insert ;
rank: 993
score: 95.91473388671875
patch: m _
rank: 993
score: 93.60721588134766
patch: folder
rank: 994
score: 97.2529296875
patch: res continue ;
rank: 994
score: 96.36153157552083
patch: b {
rank: 994
score: 93.59637451171875
patch: table
rank: 995
score: 97.24360656738281
patch: v continue ;
rank: 995
score: 95.13777160644531
patch: $STRING$
rank: 995
score: 93.59521484375
patch: logger
rank: 996
score: 97.24356079101562
patch: short continue ;
rank: 996
score: 96.83384195963542
patch: continue )
rank: 996
score: 93.99667358398438
patch: )
rank: 996
score: 93.59324645996094
patch: input
rank: 997
score: 97.23966979980469
patch: t continue ;
rank: 997
score: 96.35721842447917
patch: match ;
rank: 998
score: 96.3116455078125
patch: throw ;
rank: 998
score: 95.46029663085938
patch: _
rank: 998
score: 93.57275390625
patch: parser
rank: 999
score: 96.28072102864583
patch: break )
rank: 999
score: 94.45988464355469
patch: char
rank: 999
score: 93.55703735351562
patch: reader
rank: 1000
score: 96.1912333170573
patch: skip ;
rank: 1000
score: 96.04172770182292
patch: pos ;
rank: 1000
score: 94.4510498046875
patch: i
rank: 1000
score: 93.66716003417969
patch: int
rank: 1000
score: 93.53045654296875
patch: msg
