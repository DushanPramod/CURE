rank: 1
score: 99.7804443359375
patch: days += $NUMBER$ ;
rank: 1
score: 99.6429443359375
patch: days += $NUMBER$ ; }
rank: 1
score: 99.54654947916667
patch: days = end . get ( Calendar . YEAR ) ;
rank: 1
score: 99.47462293836806
patch: days += $NUMBER$ ; days += $NUMBER$ ;
rank: 1
score: 99.45387268066406
patch: months = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 1
score: 99.43817138671875
patch: days -= 1 ;
rank: 1
score: 99.37864685058594
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 2
score: 99.51761881510417
patch: months = end . get ( Calendar . YEAR ) ;
rank: 2
score: 99.46383056640624
patch: days += 0 ;
rank: 2
score: 99.43086242675781
patch: days = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 2
score: 99.40428670247395
patch: minutes = end . get ( Calendar . YEAR ) ;
rank: 3
score: 99.50282118055556
patch: days += $NUMBER$ ; days = $NUMBER$ ;
rank: 3
score: 99.48478480747768
patch: days += $NUMBER$ * $NUMBER$ ;
rank: 3
score: 99.4296875
patch: days += 1 ;
rank: 3
score: 99.41374969482422
patch: months = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 3
score: 99.41108921595982
patch: days += $NUMBER$ + $NUMBER$ ;
rank: 3
score: 99.39451090494792
patch: days = end . get ( Calendar . MONTH ) ;
rank: 3
score: 99.36048889160156
patch: hours += end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 3
score: 99.32867431640625
patch: days += $NUMBER$ ; days -- ;
rank: 4
score: 99.46636962890625
patch: milliseconds = end . get ( Calendar . YEAR ) ;
rank: 4
score: 99.44877794053819
patch: days += 0 ; days += $NUMBER$ ;
rank: 4
score: 99.43893868582589
patch: days += $NUMBER$ * time ;
rank: 4
score: 99.42420247395833
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 4
score: 99.40360260009766
patch: milliseconds = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 4
score: 99.37000528971355
patch: hours = end . get ( Calendar . YEAR ) ;
rank: 4
score: 99.34552001953125
patch: days += start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 5
score: 99.45896402994792
patch: seconds = end . get ( Calendar . YEAR ) ;
rank: 5
score: 99.40069173177083
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 5
score: 99.39093780517578
patch: days = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 5
score: 99.38911437988281
patch: days += $NUMBER$ + $NUMBER$ ; }
rank: 5
score: 99.37136501736111
patch: days += $NUMBER$ ; days += 1 ;
rank: 5
score: 99.34077453613281
patch: hours = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 6
score: 99.38592529296875
patch: days += $NUMBER$ * $NUMBER$ ; }
rank: 6
score: 99.3857650756836
patch: seconds = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 6
score: 99.38523763020834
patch: days -= $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 6
score: 99.351318359375
patch: days = end . get ( Calendar . MILLISECOND ) ;
rank: 6
score: 99.33917999267578
patch: days -= start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 6
score: 99.33206787109376
patch: days += $NUMBER$ ; } days += $NUMBER$ ;
rank: 6
score: 99.32994249131944
patch: days += $NUMBER$ ; days += 0 ;
rank: 7
score: 99.40174357096355
patch: months = end . get ( Calendar . MONTH ) ;
rank: 7
score: 99.3840087890625
patch: days -= $NUMBER$ ;
rank: 7
score: 99.3753433227539
patch: milliseconds = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 7
score: 99.35068766276042
patch: days = start . get ( Calendar . YEAR ) ;
rank: 7
score: 99.33833312988281
patch: hours += start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 7
score: 99.29119873046875
patch: days ++ ; } days += $NUMBER$ ;
rank: 7
score: 99.25260009765626
patch: days = $NUMBER$ ;
rank: 8
score: 99.40170288085938
patch: days = Calendar . get CaMeL Instance ( timezone ) ;
rank: 8
score: 99.3702163696289
patch: minutes = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 8
score: 99.3682861328125
patch: days -= 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 8
score: 99.35258345170455
patch: days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ ;
rank: 8
score: 99.33159637451172
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 8
score: 99.31820068359374
patch: days += $NUMBER$ ; days += $NUMBER$ ; }
rank: 8
score: 99.30691867404514
patch: days += $NUMBER$ ; days = 1 ;
rank: 8
score: 99.26431613498264
patch: days += 0 ; days += 0 ;
rank: 8
score: 99.22180938720703
patch: days += 0 ; days -- ;
rank: 9
score: 99.34428267045455
patch: days += $NUMBER$ * Time CaMeL Zone . MINUTE ;
rank: 9
score: 99.33065795898438
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 9
score: 99.27593122209821
patch: days += $NUMBER$ / $NUMBER$ ;
rank: 9
score: 99.24871148003473
patch: days += 1 ; days += $NUMBER$ ;
rank: 10
score: 99.3665542602539
patch: months = end . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 10
score: 99.337646484375
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 10
score: 99.33750221946023
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ ;
rank: 10
score: 99.32082112630208
patch: days = end . get ( Calendar . MINUTE ) ;
rank: 10
score: 99.28427463107639
patch: days += $NUMBER$ ; days = 0 ;
rank: 10
score: 99.24965598366477
patch: days += $NUMBER$ * Double . MAX _ VALUE ;
rank: 10
score: 99.21068572998047
patch: days = $NUMBER$ ; days -- ;
rank: 11
score: 99.35454559326172
patch: days = end . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 11
score: 99.32965087890625
patch: days += $NUMBER$ * Date CaMeL Utils . ;
rank: 11
score: 99.3199234008789
patch: hours -= start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 11
score: 99.3175381747159
patch: days += reduce CaMeL And CaMeL Correct ( start ,
rank: 11
score: 99.313916015625
patch: return start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 11
score: 99.27119663783482
patch: days += $NUMBER$ + 1 ;
rank: 11
score: 99.24224298650569
patch: days += $NUMBER$ * Long . MAX _ VALUE ;
rank: 11
score: 99.23882293701172
patch: days ++ ; days += $NUMBER$ ;
rank: 12
score: 99.37449137369792
patch: months = end . get ( Calendar . MINUTE ) ;
rank: 12
score: 99.35003662109375
patch: seconds = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 12
score: 99.31962585449219
patch: days += $NUMBER$ * time ; }
rank: 12
score: 99.31703186035156
patch: minutes += end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 12
score: 99.312744140625
patch: minutes = end . get ( Calendar . MONTH ) ;
rank: 12
score: 99.27110072544643
patch: days = $NUMBER$ + $NUMBER$ ;
rank: 12
score: 99.23769124348958
patch: days ++ ; days += $NUMBER$ ; }
rank: 12
score: 99.2313741048177
patch: days += 0 ; }
rank: 12
score: 99.19464789496527
patch: days = $NUMBER$ ; days += $NUMBER$ ;
rank: 13
score: 99.3557637532552
patch: months = end . get ( Calendar . MILLISECOND ) ;
rank: 13
score: 99.34996032714844
patch: seconds -= start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 13
score: 99.3146613625919
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 13
score: 99.3067118326823
patch: days = end . get ( Calendar . SECOND ) ;
rank: 13
score: 99.18605550130208
patch: days += - 1 ;
rank: 14
score: 99.34788004557292
patch: days -= start . get ( Calendar . YEAR ) ;
rank: 14
score: 99.30992974175348
patch: days += $NUMBER$ ; time += $NUMBER$ ;
rank: 14
score: 99.30140177408855
patch: days = Token . get CaMeL Instance ( timezone ) ;
rank: 14
score: 99.29144756610577
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 14
score: 99.20522732204861
patch: days += $NUMBER$ ; days -= $NUMBER$ ;
rank: 14
score: 99.17548963758681
patch: days += $NUMBER$ ; if += $NUMBER$ ;
rank: 15
score: 99.30768181295956
patch: days -= - start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 15
score: 99.28907189002403
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ + $NUMBER$ ;
rank: 15
score: 99.28065074573864
patch: days -= reduce CaMeL And CaMeL Correct ( start ,
rank: 15
score: 99.20473904079861
patch: days += 0 ; days += 1 ;
rank: 15
score: 99.19346110026042
patch: days += $NUMBER$ + $NUMBER$ + $NUMBER$ ;
rank: 15
score: 99.1746597290039
patch: days += days ; days -- ;
rank: 16
score: 99.33523559570312
patch: minutes = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 16
score: 99.3067855834961
patch: hours += end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 16
score: 99.28844536675348
patch: days += $NUMBER$ * time + $NUMBER$ ;
rank: 16
score: 99.28368268694196
patch: start . set ( Calendar . DAY _ OF _ MONTH ) ;
rank: 16
score: 99.27617645263672
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 16
score: 99.24929809570312
patch: days += $NUMBER$ ; ;
rank: 16
score: 99.19102783203125
patch: days += 0 ; days += $NUMBER$ ; }
rank: 16
score: 99.17685275607639
patch: days += $NUMBER$ * $NUMBER$ + $NUMBER$ ;
rank: 16
score: 99.17415364583333
patch: days += days ; days += $NUMBER$ ;
rank: 17
score: 99.33440290178571
patch: days = reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 17
score: 99.33201599121094
patch: months -= start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 17
score: 99.3011245727539
patch: hours -= end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 17
score: 99.28382457386364
patch: days += $NUMBER$ * Date CaMeL Utils . ; }
rank: 17
score: 99.28004964192708
patch: minutes += start . get ( Calendar . YEAR ) ;
rank: 17
score: 99.24878946940105
patch: days += 1 ; }
rank: 17
score: 99.17591010199652
patch: days += $NUMBER$ ? $NUMBER$ : $NUMBER$ ;
rank: 17
score: 99.15676540798611
patch: days += 0 ; if += $NUMBER$ ;
rank: 18
score: 99.32221984863281
patch: milliseconds = end . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 18
score: 99.30033874511719
patch: days += start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 18
score: 99.28352864583333
patch: days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ ; }
rank: 18
score: 99.2785135904948
patch: minutes = end . get ( Calendar . MILLISECOND ) ;
rank: 18
score: 99.24592590332031
patch: days += $NUMBER$ ; += $NUMBER$ ;
rank: 18
score: 99.18121337890625
patch: days [ $NUMBER$ ] = $NUMBER$ ;
rank: 18
score: 99.16977364676339
patch: days = $NUMBER$ * $NUMBER$ ;
rank: 18
score: 99.15248107910156
patch: days += $NUMBER$ ; days ++ ;
rank: 19
score: 99.33237711588542
patch: minutes = end . get ( Calendar . MINUTE ) ;
rank: 19
score: 99.32221069335938
patch: seconds += $NUMBER$ ;
rank: 19
score: 99.299560546875
patch: hours = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 19
score: 99.27586534288194
patch: days += $NUMBER$ * $NUMBER$ * $NUMBER$ ;
rank: 19
score: 99.24337332589286
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; }
rank: 19
score: 99.23980034722223
patch: days += 0 ; days = $NUMBER$ ;
rank: 19
score: 99.16546630859375
patch: days += $NUMBER$ / $NUMBER$ ; }
rank: 19
score: 99.13971557617188
patch: days += $NUMBER$ ; days += - $NUMBER$ ;
rank: 20
score: 99.29907944623162
patch: hours += end . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 20
score: 99.27545166015625
patch: hours = end . get ( Calendar . MONTH ) ;
rank: 20
score: 99.26849920099431
patch: days += $NUMBER$ * Time CaMeL Zone . ; }
rank: 20
score: 99.23836941189236
patch: days += 1 ; days = $NUMBER$ ;
rank: 20
score: 99.23634097450658
patch: days += $NUMBER$ * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 20
score: 99.16157531738281
patch: days [ $NUMBER$ ] += $NUMBER$ ;
rank: 20
score: 99.13458251953125
patch: days += $NUMBER$ ; days += - 1 ;
rank: 21
score: 99.32991536458333
patch: months = end . get ( Calendar . SECOND ) ;
rank: 21
score: 99.31255340576172
patch: seconds += start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 21
score: 99.29803107766544
patch: days = end . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 21
score: 99.2697245279948
patch: days += start . get ( Calendar . YEAR ) ;
rank: 21
score: 99.26783336292614
patch: days += $NUMBER$ * Date CaMeL Utils . MINUTE ;
rank: 21
score: 99.23273468017578
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; }
rank: 21
score: 99.15894664417614
patch: days += $NUMBER$ * Double . MIN _ VALUE ;
rank: 21
score: 99.15770612444196
patch: days += $NUMBER$ - $NUMBER$ ;
rank: 21
score: 99.13238525390625
patch: days = days ; days -- ;
rank: 22
score: 99.30935668945312
patch: days = start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 22
score: 99.29606359145221
patch: days += - start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 22
score: 99.26944986979167
patch: seconds = end . get ( Calendar . MONTH ) ;
rank: 22
score: 99.26776123046875
patch: days += $NUMBER$ ; time += $NUMBER$ ; }
rank: 22
score: 99.2265853881836
patch: days += end . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 22
score: 99.22273763020833
patch: days = $NUMBER$ ; days = $NUMBER$ ;
rank: 22
score: 99.15470377604167
patch: days += $NUMBER$ ; days ++ ; }
rank: 23
score: 99.30888366699219
patch: seconds = end . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 23
score: 99.29170989990234
patch: minutes += start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 23
score: 99.26844278971355
patch: minutes -= start . get ( Calendar . YEAR ) ;
rank: 23
score: 99.26601736886161
patch: days += $NUMBER$ * days ;
rank: 23
score: 99.2216796875
patch: days += end . get ( Calendar . YEAR ) ;
rank: 23
score: 99.19942898220486
patch: days += $NUMBER$ ; if += 1 ;
rank: 23
score: 99.13703918457031
patch: days ++ ;
rank: 24
score: 99.31356811523438
patch: milliseconds = end . get ( Calendar . MONTH ) ;
rank: 24
score: 99.29076385498047
patch: days -= start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 24
score: 99.26786586216518
patch: end . set ( Calendar . DAY _ OF _ MONTH ) ;
rank: 24
score: 99.2525126139323
patch: days += $NUMBER$ * ;
rank: 24
score: 99.2203369140625
patch: days -= 1 ; }
rank: 24
score: 99.19915771484375
patch: days += $NUMBER$ ; += 1 ;
rank: 24
score: 99.13474527994792
patch: days += $NUMBER$ ; } return $NUMBER$ ;
rank: 24
score: 99.11771065848214
patch: days ; days += $NUMBER$ ;
rank: 25
score: 99.30574798583984
patch: seconds -= start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 25
score: 99.28710174560547
patch: hours += start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 25
score: 99.21574964021382
patch: days += 1 * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 25
score: 99.187939453125
patch: days += $NUMBER$ ; ; days += $NUMBER$ ;
rank: 25
score: 99.12834337022569
patch: days += $NUMBER$ ; } days ++ ;
rank: 25
score: 99.124609375
patch: days += - 1 ; days += $NUMBER$ ;
rank: 26
score: 99.3073018391927
patch: milliseconds = end . get ( Calendar . MILLISECOND ) ;
rank: 26
score: 99.3019790649414
patch: minutes -= start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 26
score: 99.26263427734375
patch: hours += start . get ( Calendar . YEAR ) ;
rank: 26
score: 99.24526145241477
patch: days += $NUMBER$ * Time CaMeL Zone . SECOND ;
rank: 26
score: 99.21412658691406
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; }
rank: 26
score: 99.17865862165179
patch: days += $NUMBER$ ; days ;
rank: 26
score: 99.11933729383681
patch: days += - 1 ; days -- ;
rank: 27
score: 99.29911804199219
patch: months += start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 27
score: 99.28433048023896
patch: days += start . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 27
score: 99.262451171875
patch: years = end . get ( Calendar . YEAR ) ;
rank: 27
score: 99.23095092773437
patch: days += $NUMBER$ * Time CaMeL Zone . ;
rank: 27
score: 99.20836385091145
patch: days += end . get ( Calendar . MONTH ) ;
rank: 27
score: 99.17835235595703
patch: days += $NUMBER$ ; if $NUMBER$ ;
rank: 27
score: 99.1156717936198
patch: days += - $NUMBER$ ;
rank: 28
score: 99.30462646484375
patch: milliseconds = end . get ( Calendar . MINUTE ) ;
rank: 28
score: 99.29503631591797
patch: seconds += end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 28
score: 99.28355341372283
patch: start . set ( Calendar . DAY _ OF _ MONTH , end . get ( Calendar . YEAR ) ) ;
rank: 28
score: 99.26205679086539
patch: int years = end . get ( Calendar . YEAR ) ;
rank: 28
score: 99.20830977590461
patch: days -= $NUMBER$ * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 28
score: 99.11490207248264
patch: days += - $NUMBER$ ; days -- ;
rank: 28
score: 99.11224365234375
patch: days = $NUMBER$ * $NUMBER$ + $NUMBER$ ;
rank: 28
score: 99.07618408203125
patch: days += 0 ; } days += $NUMBER$ ;
rank: 29
score: 99.30240885416667
patch: seconds = end . get ( Calendar . MINUTE ) ;
rank: 29
score: 99.29345703125
patch: minutes = end . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 29
score: 99.28173828125
patch: hours = end . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 29
score: 99.15943400065105
patch: days += $NUMBER$ ; days
rank: 29
score: 99.10546875
patch: days = days ; days += $NUMBER$ ;
rank: 30
score: 99.30174763997395
patch: seconds = end . get ( Calendar . MILLISECOND ) ;
rank: 30
score: 99.25815836588542
patch: minutes += end . get ( Calendar . YEAR ) ;
rank: 30
score: 99.19827270507812
patch: days += $NUMBER$ * Time CaMeL Zone . MINUTE ; }
rank: 30
score: 99.19564056396484
patch: days -= end . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 30
score: 99.14891052246094
patch: days += $NUMBER$ ; while $NUMBER$ ;
rank: 30
score: 99.1046142578125
patch: days += $NUMBER$ ; } days -= $NUMBER$ ;
rank: 30
score: 99.07156032986111
patch: days -= $NUMBER$ ; days += $NUMBER$ ;
rank: 31
score: 99.27914826766305
patch: end . get ( Calendar . DAY _ OF _ MONTH ) - start . get ( Calendar . YEAR ) ;
rank: 31
score: 99.19515228271484
patch: days += $NUMBER$ ; break ; }
rank: 31
score: 99.19337864925987
patch: days -= 1 * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 31
score: 99.12816772460937
patch: days += $NUMBER$ ; days days += $NUMBER$ ;
rank: 31
score: 99.10425914417614
patch: days += $NUMBER$ * Float . MAX _ VALUE ;
rank: 31
score: 99.08762613932292
patch: days = $NUMBER$ ; days += 1 ;
rank: 31
score: 99.07107543945312
patch: days += $NUMBER$ ; days += 0 ; }
rank: 32
score: 99.29473005022321
patch: days = Date CaMeL Utils . get CaMeL Instance ( timezone ) ;
rank: 32
score: 99.28512573242188
patch: months -= start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 32
score: 99.27829159007354
patch: hours += start . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 32
score: 99.19001007080078
patch: days += $NUMBER$ * days ; }
rank: 32
score: 99.09885864257812
patch: days += $NUMBER$ ; days -= $NUMBER$ ; }
rank: 32
score: 99.06689453125
patch: days += $NUMBER$ ? $NUMBER$ : 0 ;
rank: 33
score: 99.2946533203125
patch: minutes += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 33
score: 99.2782844094669
patch: hours += - start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 33
score: 99.24900309244792
patch: months += start . get ( Calendar . YEAR ) ;
rank: 33
score: 99.18345133463542
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ ; }
rank: 33
score: 99.1234130859375
patch: days += $NUMBER$ + $NUMBER$ ; ;
rank: 33
score: 99.0959139737216
patch: days = $NUMBER$ * Long . MAX _ VALUE ;
rank: 33
score: 99.08231811523437
patch: days += - $NUMBER$ ; days += $NUMBER$ ;
rank: 33
score: 99.06595284598214
patch: days += 0 + $NUMBER$ ;
rank: 34
score: 99.28282165527344
patch: seconds -= end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 34
score: 99.27827453613281
patch: months += end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 34
score: 99.24761962890625
patch: seconds += start . get ( Calendar . YEAR ) ;
rank: 34
score: 99.18492126464844
patch: days -= $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; }
rank: 34
score: 99.18209134615384
patch: days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ + $NUMBER$ ;
rank: 34
score: 99.11976928710938
patch: days += $NUMBER$ ; ; days = $NUMBER$ ;
rank: 34
score: 99.09539184570312
patch: start . set ( $NUMBER$ , $NUMBER$ ) ;
rank: 34
score: 99.08137817382813
patch: days += - 1 ; days = $NUMBER$ ;
rank: 35
score: 99.2782566236413
patch: end . get ( Calendar . DAY _ OF _ MONTH ) - start . get ( Calendar . MONTH ) ;
rank: 35
score: 99.24474080403645
patch: hours = end . get ( Calendar . MILLISECOND ) ;
rank: 35
score: 99.18491036551339
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; }
rank: 35
score: 99.11817932128906
patch: days += $NUMBER$ ; return $NUMBER$ ;
rank: 35
score: 99.06459045410156
patch: days += $NUMBER$ - $NUMBER$ ; }
rank: 36
score: 99.28932698567708
patch: minutes = end . get ( Calendar . SECOND ) ;
rank: 36
score: 99.27704216452206
patch: hours -= - start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 36
score: 99.18227251838235
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= 1 ;
rank: 36
score: 99.17422049386161
patch: days += $NUMBER$ * ; }
rank: 36
score: 99.11367458767361
patch: days += $NUMBER$ ; days += $STRING$ ;
rank: 36
score: 99.0876973470052
patch: days -= $NUMBER$ ; }
rank: 36
score: 99.06437174479167
patch: days += 1 ; days += 0 ;
rank: 37
score: 99.28607177734375
patch: minutes = Calendar . get CaMeL Instance ( timezone ) ;
rank: 37
score: 99.2769191576087
patch: start . set ( Calendar . DAY _ OF _ MONTH , end . get ( Calendar . MONTH ) ) ;
rank: 37
score: 99.23670305524554
patch: end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 37
score: 99.17967732747395
patch: days -= end . get ( Calendar . YEAR ) ;
rank: 37
score: 99.17400568181819
patch: days += $NUMBER$ * Long . MIN _ VALUE ;
rank: 37
score: 99.10909598214286
patch: days = $NUMBER$ + 1 ;
rank: 37
score: 99.08718532986111
patch: days -- ; days += $NUMBER$ ; }
rank: 37
score: 99.07583957248264
patch: days += $NUMBER$ ; += - 1 ;
rank: 37
score: 99.0613021850586
patch: days ++ ; days += 0 ;
rank: 38
score: 99.28529866536458
patch: months = start . get ( Calendar . YEAR ) ;
rank: 38
score: 99.2360127766927
patch: days = start . get ( Calendar . MONTH ) ;
rank: 38
score: 99.17585305606617
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 38
score: 99.17352764423077
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ + days ;
rank: 38
score: 99.1045633951823
patch: days days += $NUMBER$ ;
rank: 38
score: 99.07432861328125
patch: days += days ;
rank: 38
score: 99.06049194335938
patch: days += 0 ; days += 0 ; }
rank: 39
score: 99.28290201822917
patch: hours = $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 39
score: 99.27819061279297
patch: months = start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 39
score: 99.23421223958333
patch: hours += end . get ( Calendar . YEAR ) ;
rank: 39
score: 99.17282936789773
patch: days += $NUMBER$ * Date CaMeL Utils . days ;
rank: 39
score: 99.172119140625
patch: days -= 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; }
rank: 39
score: 99.09779052734375
patch: days += $NUMBER$ ; days += $NUMBER$ ; ;
rank: 39
score: 99.08471069335937
patch: days += $NUMBER$ ; } days += 1 ;
rank: 39
score: 99.07085503472223
patch: days += 0 ; if += 1 ;
rank: 40
score: 99.2828369140625
patch: milliseconds += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 40
score: 99.27726745605469
patch: milliseconds -= start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 40
score: 99.27295639935662
patch: days -= start . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 40
score: 99.23245239257812
patch: hours -= start . get ( Calendar . YEAR ) ;
rank: 40
score: 99.17148263113839
patch: days += $NUMBER$ ; } ;
rank: 40
score: 99.09532335069444
patch: days += $NUMBER$ ; while += $NUMBER$ ;
rank: 40
score: 99.08262125651042
patch: days += $NUMBER$ ; } days -- ;
rank: 40
score: 99.06613498263889
patch: days += days ; days += 1 ;
rank: 40
score: 99.051513671875
patch: days [ days ] = $NUMBER$ ;
rank: 41
score: 99.28264973958333
patch: seconds += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 41
score: 99.26809512867646
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 41
score: 99.23079136439732
patch: minutes = reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 41
score: 99.16595458984375
patch: days -= end . get ( Calendar . MONTH ) ;
rank: 41
score: 99.0933837890625
patch: days += 1 ; days += 1 ;
rank: 41
score: 99.04816436767578
patch: days ; days += $NUMBER$ ; }
rank: 42
score: 99.27833775111607
patch: seconds = reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 42
score: 99.27067565917969
patch: seconds += start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 42
score: 99.26744169347427
patch: days = end . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 42
score: 99.08971557617187
patch: days += $NUMBER$ ; days days = $NUMBER$ ;
rank: 42
score: 99.0772705078125
patch: start . long CaMeL Value ( ) ;
rank: 42
score: 99.06340874565973
patch: days = $NUMBER$ ; days += 0 ;
rank: 43
score: 99.2689208984375
patch: months -= end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 43
score: 99.26694064670139
patch: days += 1 ; days -= 1 ;
rank: 43
score: 99.22984822591145
patch: seconds += end . get ( Calendar . YEAR ) ;
rank: 43
score: 99.16050809972427
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= 1 ;
rank: 43
score: 99.16015625
patch: days += $NUMBER$ * Time CaMeL Zone . YEAR ;
rank: 43
score: 99.07171630859375
patch: days += $NUMBER$ ; days -- ; }
rank: 43
score: 99.06275634765625
patch: days = days ;
rank: 43
score: 99.04656219482422
patch: days += 0 ; break $NUMBER$ ;
rank: 44
score: 99.27403157552084
patch: hours += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 44
score: 99.26595306396484
patch: minutes += end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 44
score: 99.22891000600961
patch: int days = end . get ( Calendar . YEAR ) ;
rank: 44
score: 99.14258829752605
patch: days += $NUMBER$ * Date CaMeL Utils . days $NUMBER$ ;
rank: 44
score: 99.08867730034723
patch: days += $NUMBER$ ; days = null ;
rank: 44
score: 99.0707674893466
patch: days = $NUMBER$ * Double . MAX _ VALUE ;
rank: 44
score: 99.06147112165179
patch: days += - - $NUMBER$ ;
rank: 45
score: 99.26545516304348
patch: start . set ( Calendar . DAY _ OF _ MONTH , start . get ( Calendar . YEAR ) ) ;
rank: 45
score: 99.22762625558036
patch: start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 45
score: 99.15352136948529
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; years -= 1 ;
rank: 45
score: 99.1400479403409
patch: days += $NUMBER$ * Date CaMeL Utils . SECOND ;
rank: 45
score: 99.0613037109375
patch: days += - $NUMBER$ ; days = $NUMBER$ ;
rank: 45
score: 99.04365539550781
patch: days += $NUMBER$ ; break $NUMBER$ ;
rank: 46
score: 99.26570129394531
patch: seconds -= start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 46
score: 99.26485443115234
patch: hours -= start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 46
score: 99.22584751674107
patch: hours = reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 46
score: 99.15000287224265
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 46
score: 99.1397705078125
patch: days += $NUMBER$ * Date CaMeL Utils . + $NUMBER$ ;
rank: 46
score: 99.08766682942708
patch: days += $NUMBER$ ; while += 1 ;
rank: 46
score: 99.05842590332031
patch: days += 0 ; days ++ ;
rank: 46
score: 99.04317220052083
patch: days [ $NUMBER$ ] = $NUMBER$ ; }
rank: 47
score: 99.26964314778645
patch: months -= start . get ( Calendar . YEAR ) ;
rank: 47
score: 99.26407623291016
patch: hours = end . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 47
score: 99.22501627604167
patch: seconds -= start . get ( Calendar . YEAR ) ;
rank: 47
score: 99.14527994791666
patch: days += $NUMBER$ + Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 47
score: 99.12775127704327
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ + time ;
rank: 47
score: 99.08666314019098
patch: days += $NUMBER$ ; days += null ;
rank: 47
score: 99.05811225043402
patch: days += $NUMBER$ ; += - $NUMBER$ ;
rank: 48
score: 99.26466997931985
patch: minutes -= - start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 48
score: 99.26152038574219
patch: seconds += end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 48
score: 99.22427978515626
patch: hours += $NUMBER$ ;
rank: 48
score: 99.13860724954044
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= 1 ;
rank: 48
score: 99.08473423549107
patch: days += $NUMBER$ ; break ;
rank: 48
score: 99.05988905164931
patch: days = $NUMBER$ * $NUMBER$ * $NUMBER$ ;
rank: 48
score: 99.05565643310547
patch: days += ; days += $NUMBER$ ;
rank: 48
score: 99.03906928168402
patch: days ; if ; days += $NUMBER$ ;
rank: 49
score: 99.25962763247283
patch: start . set ( Calendar . HOUR _ OF _ DAY , end . get ( Calendar . YEAR ) ) ;
rank: 49
score: 99.13411218979779
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= $NUMBER$ ;
rank: 49
score: 99.12368539663461
patch: days += $NUMBER$ * $NUMBER$ * Time CaMeL Zone . MINUTE ;
rank: 49
score: 99.05438232421875
patch: days += $NUMBER$ ; days += 1 ; }
rank: 50
score: 99.2605209350586
patch: minutes -= start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 50
score: 99.25731360394022
patch: start . set ( Calendar . DAY _ OF _ MONTH , start . get ( Calendar . MONTH ) ) ;
rank: 50
score: 99.21938650948661
patch: minutes += reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 50
score: 99.1338399251302
patch: days += end . get ( Calendar . MILLISECOND ) ;
rank: 50
score: 99.1229999248798
patch: days += $NUMBER$ * Calendar . HOUR _ OF _ DAY ;
rank: 50
score: 99.07984754774306
patch: days += $NUMBER$ ; days = $STRING$ ;
rank: 50
score: 99.0542879971591
patch: start . add ( $NUMBER$ * $NUMBER$ * $NUMBER$ ;
rank: 50
score: 99.04926893446181
patch: days += days ; days = $NUMBER$ ;
rank: 50
score: 99.03554958767361
patch: days ++ ; } days += 0 ;
rank: 51
score: 99.25719496783088
patch: hours -= start . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 51
score: 99.13223470052084
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY - hours ;
rank: 51
score: 99.11719360351563
patch: days += $NUMBER$ * time + $NUMBER$ ; }
rank: 51
score: 99.07941351996527
patch: days = $NUMBER$ ; days = 1 ;
rank: 51
score: 99.04623074001736
patch: days += ; days += - 1 ;
rank: 51
score: 99.03275299072266
patch: days += 0 ; return $NUMBER$ ;
rank: 52
score: 99.26588657924107
patch: milliseconds = reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 52
score: 99.25980377197266
patch: days = start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 52
score: 99.25718778722427
patch: minutes += end . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 52
score: 99.21739783653847
patch: days = end . get ( Calendar . YEAR ) ; }
rank: 52
score: 99.13161996694711
patch: days += reduce CaMeL And CaMeL Correct ( start , end ,
rank: 52
score: 99.11497913707386
patch: days += $NUMBER$ * Time CaMeL Zone . MONTH ;
rank: 52
score: 99.07430691189236
patch: days += $NUMBER$ ; days = days ;
rank: 52
score: 99.05126342773437
patch: days += Math . abs ( days ) ;
rank: 52
score: 99.02924940321181
patch: days -= 0 ; days += $NUMBER$ ;
rank: 53
score: 99.25855102539063
patch: seconds += 1 ;
rank: 53
score: 99.2154032389323
patch: hours = start . get ( Calendar . YEAR ) ;
rank: 53
score: 99.12766927083334
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY - 1 ;
rank: 53
score: 99.04132080078125
patch: days = $NUMBER$ ; days ++ ;
rank: 53
score: 99.02389090401786
patch: days += $NUMBER$ - days ;
rank: 54
score: 99.26198323567708
patch: months = Calendar . get CaMeL Instance ( timezone ) ;
rank: 54
score: 99.2565056295956
patch: minutes = end . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 54
score: 99.2539291381836
patch: months += start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 54
score: 99.12688131893383
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; months -= 1 ;
rank: 54
score: 99.10452035757211
patch: days += $NUMBER$ * Calendar . DAY _ OF _ MONTH ;
rank: 54
score: 99.06427612304688
patch: days += $NUMBER$ ; } days = $NUMBER$ ;
rank: 54
score: 99.05052601207386
patch: start . set ( $NUMBER$ , $NUMBER$ , $NUMBER$ ;
rank: 54
score: 99.03899468315973
patch: days += 0 ; days catch $NUMBER$ ;
rank: 55
score: 99.25601016773896
patch: days -= - start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 55
score: 99.21426827566964
patch: hours += reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 55
score: 99.1244384765625
patch: days += 1 + Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 55
score: 99.1034444173177
patch: days += $NUMBER$ * Time CaMeL Zone . SECOND ; }
rank: 55
score: 99.06417236328124
patch: days += $NUMBER$ ; days = $NUMBER$ ; ;
rank: 55
score: 99.04625355113636
patch: start . days += $NUMBER$ ; days += $NUMBER$ ;
rank: 55
score: 99.03768157958984
patch: days -- ; days += $NUMBER$ ;
rank: 55
score: 99.02091979980469
patch: days ; } days += $NUMBER$ ;
rank: 56
score: 99.26123046875
patch: hours = end . get ( Calendar . MINUTE ) ;
rank: 56
score: 99.25471297554348
patch: start . set ( Calendar . HOUR _ OF _ DAY , end . get ( Calendar . MONTH ) ) ;
rank: 56
score: 99.12006293402777
patch: days = Calendar . get CaMeL Instance ( Calendar . DAY _ OF _ MONTH ) ;
rank: 56
score: 99.10277210582386
patch: days += $NUMBER$ * Time CaMeL Zone . LONG ;
rank: 56
score: 99.04564319957386
patch: days += $NUMBER$ * Float . MIN _ VALUE ;
rank: 56
score: 99.035888671875
patch: days += 1 ; days -- ;
rank: 56
score: 99.01652018229167
patch: days ; days += $NUMBER$ + $NUMBER$ ;
rank: 57
score: 99.2544806985294
patch: minutes += - start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 57
score: 99.25005340576172
patch: milliseconds += end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 57
score: 99.11970071231617
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= 1 ;
rank: 57
score: 99.10199444110577
patch: days += $NUMBER$ * $NUMBER$ * Time CaMeL Zone . $NUMBER$ ;
rank: 57
score: 99.05595397949219
patch: days += $NUMBER$ ; days $NUMBER$ ;
rank: 57
score: 99.03936212713069
patch: days += $NUMBER$ * Short . MAX _ VALUE ;
rank: 57
score: 99.03497314453125
patch: days -- ; days += 1 ;
rank: 58
score: 99.26088303786058
patch: months = end . get ( Calendar . YEAR ) ; }
rank: 58
score: 99.25161345108695
patch: end . get ( Calendar . HOUR _ OF _ DAY ) - start . get ( Calendar . MONTH ) ;
rank: 58
score: 99.11591796875
patch: days += 0 * Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 58
score: 99.10067409939236
patch: days += $NUMBER$ * Calendar . SECOND ;
rank: 58
score: 99.05502319335938
patch: days += $NUMBER$ ; days += $NUMBER$ ; days
rank: 58
score: 99.03785705566406
patch: days += $NUMBER$ + 1 ; }
rank: 58
score: 99.03486328125
patch: days += 0 ; days += - $NUMBER$ ;
rank: 58
score: 99.008056640625
patch: days += 0 ; this . days += $NUMBER$ ;
rank: 59
score: 99.26072591145834
patch: months += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 59
score: 99.24987262228261
patch: end . get ( Calendar . HOUR _ OF _ DAY ) - start . get ( Calendar . YEAR ) ;
rank: 59
score: 99.244384765625
patch: seconds -= end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 59
score: 99.21052769252232
patch: days = end . get ( Calendar . YEAR ) - 1 ;
rank: 59
score: 99.11573621961806
patch: days += reduce CaMeL And CaMeL Correct ( start , end , Calendar . MILLISECOND ) ;
rank: 59
score: 99.09908040364583
patch: days += $NUMBER$ * $NUMBER$ ; } ;
rank: 59
score: 99.05113389756944
patch: days += $STRING$ ; days += $NUMBER$ ;
rank: 59
score: 99.03239610460069
patch: days = $NUMBER$ ; if += $NUMBER$ ;
rank: 59
score: 99.0066162109375
patch: days += 1 ; days += $NUMBER$ ; }
rank: 60
score: 99.20982869466145
patch: days = start . get ( Calendar . MILLISECOND ) ;
rank: 60
score: 99.1149040670956
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds -= 1 ;
rank: 60
score: 99.09854830228366
patch: days += $NUMBER$ * Date CaMeL Utils . + $NUMBER$ ; }
rank: 60
score: 99.02893829345703
patch: days = $NUMBER$ * $NUMBER$ ; }
rank: 60
score: 99.00583902994792
patch: days ++ ; days += 0 ; }
rank: 61
score: 99.24932502297794
patch: hours += end . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 61
score: 99.20928083147321
patch: days = end . get ( Calendar . YEAR ) - $NUMBER$ ;
rank: 61
score: 99.11387532552084
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY - $NUMBER$ ;
rank: 61
score: 99.09691443810097
patch: days += $NUMBER$ * Time CaMeL Zone . MINUTE + $NUMBER$ ;
rank: 61
score: 99.04957411024306
patch: days += 1 ; days = 1 ;
rank: 61
score: 99.02822875976562
patch: start . add ( $NUMBER$ ) ;
rank: 61
score: 99.02499050564236
patch: days += $NUMBER$ ; days += false ;
rank: 61
score: 99.00438690185547
patch: days ++ ; if += $NUMBER$ ;
rank: 62
score: 99.25691361860795
patch: days = Calendar . get CaMeL Instance ( ) ;
rank: 62
score: 99.24752987132354
patch: days += - start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 62
score: 99.24210357666016
patch: months += end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 62
score: 99.20805140904018
patch: start . set ( Calendar . HOUR _ OF _ DAY ) ;
rank: 62
score: 99.11373138427734
patch: days += Token . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 62
score: 99.09503173828125
patch: days += $NUMBER$ * days + $NUMBER$ ;
rank: 62
score: 99.02661895751953
patch: long days = days * $NUMBER$ ;
rank: 62
score: 99.02261352539062
patch: days ++ ; days += 1 ;
rank: 62
score: 99.0036376953125
patch: days += 0 ; days += 1 ; }
rank: 63
score: 99.25642903645833
patch: seconds = end . get ( Calendar . SECOND ) ;
rank: 63
score: 99.24648868336396
patch: hours = end . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 63
score: 99.24170684814453
patch: milliseconds += start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 63
score: 99.11341050091912
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 63
score: 99.02255588107639
patch: days = days ; days = $NUMBER$ ;
rank: 63
score: 99.01865234375
patch: days -= $NUMBER$ ; days += $NUMBER$ ; }
rank: 64
score: 99.25634765625
patch: seconds = $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 64
score: 99.23965454101562
patch: days = start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 64
score: 99.11165125229779
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; years -= $NUMBER$ ;
rank: 64
score: 99.09105335582386
patch: days += $NUMBER$ * Integer . MAX _ VALUE ;
rank: 64
score: 99.03789605034723
patch: days = $NUMBER$ ; days = 0 ;
rank: 64
score: 99.02197875976563
patch: days += 0 ; days += - 1 ;
rank: 65
score: 99.24542595358456
patch: int milliseconds = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 65
score: 99.23938751220703
patch: milliseconds -= start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 65
score: 99.20342145647321
patch: end . set ( Calendar . HOUR _ OF _ DAY ) ;
rank: 65
score: 99.11114142922794
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= $NUMBER$ ;
rank: 65
score: 99.03765190972223
patch: days += $STRING$ ; days = $NUMBER$ ;
rank: 65
score: 99.01839870876736
patch: days ++ ; days catch += $NUMBER$ ;
rank: 65
score: 99.01442649147727
patch: start . clear ( ) ; days += $NUMBER$ ;
rank: 66
score: 99.25255330403645
patch: milliseconds = end . get ( Calendar . SECOND ) ;
rank: 66
score: 99.24344004755434
patch: start . set ( Calendar . DAY _ OF _ MONTH , end . get ( Calendar . MINUTE ) ) ;
rank: 66
score: 99.20018513997395
patch: hours = end . get ( Calendar . SECOND ) ;
rank: 66
score: 99.11015768612133
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; years -= 1 ;
rank: 66
score: 99.03471544053819
patch: days += 1 ; days = 0 ;
rank: 66
score: 99.00031873914931
patch: days -- ; } days += $NUMBER$ ;
rank: 67
score: 99.24124278192934
patch: end . set ( Calendar . DAY _ OF _ MONTH , end . get ( Calendar . YEAR ) ) ;
rank: 67
score: 99.23841094970703
patch: months -= start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 67
score: 99.08347574869792
patch: days += $NUMBER$ * Date CaMeL Utils . days ( ;
rank: 67
score: 99.0111416903409
patch: days = $NUMBER$ * Double . MIN _ VALUE ;
rank: 68
score: 99.24103142233456
patch: days += start . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 68
score: 99.23673248291016
patch: milliseconds -= end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 68
score: 99.1993916829427
patch: hours = Calendar . get CaMeL Instance ( timezone ) ;
rank: 68
score: 99.08279418945312
patch: days += $NUMBER$ * Time CaMeL Zone . + $NUMBER$ ;
rank: 68
score: 99.02324083116319
patch: days += 0 ; days = 0 ;
rank: 68
score: 99.01651000976562
patch: days * / days = $NUMBER$ ;
rank: 68
score: 99.01033935546874
patch: days += $NUMBER$ + $NUMBER$ + $NUMBER$ ; }
rank: 68
score: 98.99594116210938
patch: days += $NUMBER$ - days ; }
rank: 69
score: 99.23591613769531
patch: years = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 69
score: 99.10389539930556
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; }
rank: 69
score: 99.02287462022569
patch: days += 0 ; days = 1 ;
rank: 69
score: 99.01409912109375
patch: days * / days += $NUMBER$ ;
rank: 69
score: 99.00828721788194
patch: days = $NUMBER$ ? $NUMBER$ : $NUMBER$ ;
rank: 69
score: 98.99512396918402
patch: days += $NUMBER$ ? 1 : $NUMBER$ ;
rank: 70
score: 99.23915010340073
patch: hours -= end . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 70
score: 99.19608561197917
patch: minutes -= start . get ( Calendar . MONTH ) ;
rank: 70
score: 99.08066030649039
patch: days += $NUMBER$ * Date CaMeL Utils . MINUTE + $NUMBER$ ;
rank: 70
score: 99.01753540039063
patch: days += $NUMBER$ ; days = - 1 ;
rank: 70
score: 99.01194932725694
patch: days * / days += - 1 ;
rank: 70
score: 99.00698513454861
patch: days += $NUMBER$ ; days *= $NUMBER$ ;
rank: 71
score: 99.2472412109375
patch: milliseconds = $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 71
score: 99.0995624248798
patch: days -= reduce CaMeL And CaMeL Correct ( start , end ,
rank: 71
score: 99.07820951021634
patch: days += $NUMBER$ * Date CaMeL Utils . days $NUMBER$ ; }
rank: 71
score: 99.01659545898437
patch: days += $NUMBER$ ; days . += $NUMBER$ ;
rank: 71
score: 99.01044464111328
patch: days else { days = $NUMBER$ ;
rank: 71
score: 99.00679321289063
patch: days += $NUMBER$ * $NUMBER$ + $NUMBER$ ; }
rank: 71
score: 98.9906005859375
patch: days [ $NUMBER$ ] += $NUMBER$ ; }
rank: 72
score: 99.24611118861607
patch: months = reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 72
score: 99.23600968070652
patch: Calendar . get CaMeL Instance ( timezone ) . set CaMeL Time ( Calendar . HOUR _ OF _ DAY ) ;
rank: 72
score: 99.23334503173828
patch: days -= start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 72
score: 99.099169921875
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY - days ;
rank: 72
score: 99.07779634915866
patch: days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ + days ;
rank: 72
score: 99.00970458984375
patch: days += $NUMBER$ ; ; += $NUMBER$ ;
rank: 72
score: 99.00922241210938
patch: days = $NUMBER$ ; days += - $NUMBER$ ;
rank: 72
score: 99.0061279296875
patch: days -= $NUMBER$ ; } days += $NUMBER$ ;
rank: 72
score: 98.98870294744319
patch: days += $NUMBER$ ; this . days += $NUMBER$ ;
rank: 73
score: 99.24380057198661
patch: days -= reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 73
score: 99.23573369565217
patch: start . set ( Calendar . DAY _ OF _ MONTH , end . get ( Calendar . SECOND ) ) ;
rank: 73
score: 99.2326889038086
patch: seconds += start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 73
score: 99.1948750813802
patch: minutes = start . get ( Calendar . YEAR ) ;
rank: 73
score: 99.09843893612133
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; minutes -= 1 ;
rank: 73
score: 99.00800238715277
patch: days += 1 ; if += $NUMBER$ ;
rank: 73
score: 99.00595092773438
patch: start . days += $NUMBER$ ; }
rank: 73
score: 99.00519476996527
patch: days * * / days += $NUMBER$ ;
rank: 73
score: 98.982177734375
patch: days ++ ; } days += $NUMBER$ ; }
rank: 74
score: 99.24056570870536
patch: seconds += reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 74
score: 99.23531087239583
patch: hours += 1 ; days -= 1 ;
rank: 74
score: 99.2325668334961
patch: seconds = start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 74
score: 99.19354248046875
patch: minutes += start . get ( Calendar . MONTH ) ;
rank: 74
score: 99.09764946831598
patch: days = Calendar . get CaMeL Instance ( Calendar . HOUR _ OF _ DAY ) ;
rank: 74
score: 99.07496056189903
patch: days += $NUMBER$ * Time CaMeL Zone . SECOND + $NUMBER$ ;
rank: 74
score: 99.00501708984375
patch: days += 0 ; days catch += $NUMBER$ ;
rank: 74
score: 99.00201970880681
patch: days += $NUMBER$ * Double . Na CaMeL N ;
rank: 74
score: 98.97569691051136
patch: days += $NUMBER$ + $NUMBER$ ; days += $NUMBER$ ;
rank: 75
score: 99.234619140625
patch: end . set ( Calendar . DAY _ OF _ MONTH , end . get ( Calendar . MONTH ) ) ;
rank: 75
score: 99.09525756835937
patch: days += $NUMBER$ * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; }
rank: 75
score: 99.07450561523437
patch: days += $NUMBER$ * Calendar . SECOND ; }
rank: 75
score: 99.00041368272569
patch: start . ; days += $NUMBER$ ; }
rank: 75
score: 98.99978976779514
patch: days += start . get += $NUMBER$ ;
rank: 75
score: 98.995849609375
patch: days += $STRING$ + $NUMBER$ ;
rank: 75
score: 98.97533069957386
patch: days += $NUMBER$ ; days += $NUMBER$ + $NUMBER$ ;
rank: 76
score: 99.23401596966912
patch: minutes += start . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 76
score: 99.23317464192708
patch: seconds = start . get ( Calendar . YEAR ) ;
rank: 76
score: 99.23129272460938
patch: milliseconds = start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 76
score: 99.19315592447917
patch: minutes -= end . get ( Calendar . YEAR ) ;
rank: 76
score: 99.09480365953948
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= 1 ;
rank: 76
score: 99.07150268554688
patch: days += $NUMBER$ * $NUMBER$ ; ;
rank: 76
score: 98.9996337890625
patch: days = $NUMBER$ ; days += - 1 ;
rank: 77
score: 99.23240443638393
patch: days += reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 77
score: 99.23219209558823
patch: int days = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 77
score: 99.23114013671875
patch: minutes += start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 77
score: 99.19259207589286
patch: start . set ( Calendar . DAY _ OF _ YEAR ) ;
rank: 77
score: 99.09461805555556
patch: days -= reduce CaMeL And CaMeL Correct ( start , end , Calendar . MILLISECOND ) ;
rank: 77
score: 99.07080078125
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ + ;
rank: 77
score: 98.99922010633681
patch: days += days ; days += 0 ;
rank: 77
score: 98.97399224175348
patch: days ++ ; if days += $NUMBER$ ;
rank: 78
score: 99.23154584099265
patch: hours += start . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 78
score: 99.23102569580078
patch: months = start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 78
score: 99.23004150390625
patch: days -= start . get ( Calendar . MONTH ) ;
rank: 78
score: 99.09370691636029
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= $NUMBER$ ;
rank: 78
score: 98.9943603515625
patch: days += $NUMBER$ ? $NUMBER$ : $NUMBER$ ; }
rank: 78
score: 98.97001817491319
patch: days ++ ; ; days += $NUMBER$ ;
rank: 79
score: 99.23124363111413
patch: end . get ( Calendar . DAY _ OF _ MONTH ) - start . get ( Calendar . MILLISECOND ) ;
rank: 79
score: 99.2294921875
patch: days = Calendar . get CaMeL Instance ( Calendar . YEAR ) ;
rank: 79
score: 99.19094412667411
patch: milliseconds += reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 79
score: 99.09330240885417
patch: days -= end . get ( Calendar . MILLISECOND ) ;
rank: 79
score: 99.06955788352273
patch: days += $NUMBER$ * Time CaMeL Zone . MEDIUM ;
rank: 79
score: 98.99721272786458
patch: days -- ; days += - 1 ;
rank: 79
score: 98.99431818181819
patch: start . set ( $NUMBER$ , $NUMBER$ ) ; }
rank: 79
score: 98.99241943359375
patch: days += $NUMBER$ ; ; days += 1 ;
rank: 79
score: 98.96485900878906
patch: days [ days ] += $NUMBER$ ;
rank: 80
score: 99.23041130514706
patch: int years = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 80
score: 99.2264912923177
patch: months += end . get ( Calendar . YEAR ) ;
rank: 80
score: 99.08623190487133
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; days += 1 ;
rank: 80
score: 99.06934532752403
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ / days ;
rank: 80
score: 98.98828125
patch: days -= $NUMBER$ * Double . MAX _ VALUE ;
rank: 81
score: 99.2291949728261
patch: start . set ( Calendar . HOUR _ OF _ DAY , start . get ( Calendar . YEAR ) ) ;
rank: 81
score: 99.22621506911058
patch: minutes = end . get ( Calendar . YEAR ) ; }
rank: 81
score: 99.18787231445313
patch: minutes += $NUMBER$ ;
rank: 81
score: 99.08594360351563
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; days -= 1 ;
rank: 81
score: 99.065625
patch: days += $NUMBER$ * Calendar . $NUMBER$ ; }
rank: 81
score: 98.99293348524306
patch: days ++ ; days += - 1 ;
rank: 81
score: 98.98697662353516
patch: long days = days + $NUMBER$ ;
rank: 82
score: 99.22871398925781
patch: hours += end . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 82
score: 99.2271957397461
patch: months -= end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 82
score: 99.1844991048177
patch: days = format . get ( Calendar . YEAR ) ;
rank: 82
score: 99.08577045641448
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= 1 ;
rank: 82
score: 99.06439678485577
patch: days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ / days ;
rank: 82
score: 98.99221801757812
patch: days += days ; days ++ ;
rank: 82
score: 98.98655482700893
patch: start . days += $NUMBER$ ;
rank: 82
score: 98.98624674479167
patch: days days = $NUMBER$ ;
rank: 82
score: 98.95749733664773
patch: days ; days += $NUMBER$ ; days += $NUMBER$ ;
rank: 83
score: 99.22542724609374
patch: seconds -= 1 ;
rank: 83
score: 99.18421427408855
patch: months += start . get ( Calendar . MONTH ) ;
rank: 83
score: 99.08562155330883
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; months -= 1 ;
rank: 83
score: 99.06371131310097
patch: days += $NUMBER$ * Date CaMeL Utils . days + $NUMBER$ ;
rank: 83
score: 98.9921875
patch: days ] += $NUMBER$ ; days -- ;
rank: 83
score: 98.98611789279514
patch: days ++ ; days -= $NUMBER$ ; }
rank: 83
score: 98.98435756138393
patch: days += $NUMBER$ ; days else
rank: 83
score: 98.9573745727539
patch: days = $NUMBER$ * days ; }
rank: 84
score: 99.22641389266305
patch: start . set ( Calendar . HOUR _ OF _ DAY , end . get ( Calendar . MINUTE ) ) ;
rank: 84
score: 99.08204561121323
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; months -= $NUMBER$ ;
rank: 84
score: 99.06310096153847
patch: days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ / $NUMBER$ ;
rank: 84
score: 98.99165344238281
patch: days += $STRING$ ; days -- ;
rank: 84
score: 98.9842862215909
patch: days -= $NUMBER$ * Long . MAX _ VALUE ;
rank: 84
score: 98.98251003689236
patch: days += 1 ; if += 1 ;
rank: 85
score: 99.2254054857337
patch: start . set ( Calendar . DAY _ OF _ MONTH , end . get ( Calendar . MILLISECOND ) ) ;
rank: 85
score: 99.07883126395089
patch: days += reduce CaMeL And CaMeL Correct ( start , days ) ;
rank: 85
score: 99.05980335582386
patch: days += $NUMBER$ * Date CaMeL Utils . YEAR ;
rank: 85
score: 98.99134657118056
patch: days = days ; days += 1 ;
rank: 85
score: 98.97590467664931
patch: days += $NUMBER$ + $NUMBER$ + 1 ;
rank: 85
score: 98.95488947088069
patch: days [ end . get ( $NUMBER$ ) ; }
rank: 86
score: 99.22522690716912
patch: hours += - start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 86
score: 99.18257962740384
patch: int hours = end . get ( Calendar . YEAR ) ;
rank: 86
score: 99.05777994791667
patch: days += $NUMBER$ * time + 1 ;
rank: 86
score: 98.97786712646484
patch: days += $NUMBER$ ; days = ;
rank: 86
score: 98.97531563895089
patch: days = $NUMBER$ / $NUMBER$ ;
rank: 86
score: 98.95441351996527
patch: days += $NUMBER$ ? 1 : 0 ;
rank: 87
score: 99.22502585018383
patch: minutes = end . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 87
score: 99.214599609375
patch: seconds -= $NUMBER$ ;
rank: 87
score: 99.07808227539063
patch: days += 1 * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; }
rank: 87
score: 99.054931640625
patch: days += $NUMBER$ * $NUMBER$ * time ;
rank: 87
score: 98.9775390625
patch: days += $NUMBER$ + 1 ; ;
rank: 87
score: 98.97407670454545
patch: days += $NUMBER$ / Long . MAX _ VALUE ;
rank: 88
score: 99.22443704044117
patch: minutes -= start . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 88
score: 99.21735491071429
patch: start . set ( Calendar . YEAR , start CaMeL Millis ) ;
rank: 88
score: 99.18125406901042
patch: minutes += end . get ( Calendar . MONTH ) ;
rank: 88
score: 99.07694738051471
patch: days += end . get ( Calendar . DAY _ OF _ YEAR ) ; }
rank: 88
score: 99.05409071180556
patch: days += $NUMBER$ + $NUMBER$ ; } ;
rank: 88
score: 98.98609076605902
patch: days += ; days += - $NUMBER$ ;
rank: 88
score: 98.97744140625
patch: days += $NUMBER$ ; ; if += $NUMBER$ ;
rank: 88
score: 98.97258843315973
patch: days += $NUMBER$ ; days -= 1 ;
rank: 88
score: 98.95216369628906
patch: days [ $NUMBER$ ] += 0 ;
rank: 89
score: 99.22435461956522
patch: start . set ( Calendar . DAY _ OF _ MONTH , start . get ( Calendar . MINUTE ) ) ;
rank: 89
score: 99.21709333147321
patch: seconds -= reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 89
score: 99.05281888521634
patch: days += $NUMBER$ * Time CaMeL Zone . get CaMeL Time ;
rank: 89
score: 98.98532443576389
patch: days += $NUMBER$ ; days += days ;
rank: 89
score: 98.97732107979911
patch: days += $NUMBER$ + 0 ;
rank: 90
score: 99.22391510009766
patch: start . set ( Calendar . HOUR _ OF _ DAY , hours ) ;
rank: 90
score: 99.21262613932292
patch: milliseconds -= start . get ( Calendar . YEAR ) ;
rank: 90
score: 99.17613728841145
patch: hours += start . get ( Calendar . MONTH ) ;
rank: 90
score: 99.07518095128677
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds -= 1 ;
rank: 90
score: 99.05126953125
patch: days += $NUMBER$ ; ; }
rank: 90
score: 98.98464965820312
patch: days += $NUMBER$ ; += 0 ;
rank: 90
score: 98.97462768554688
patch: days += $NUMBER$ ; days = $NUMBER$ ; days
rank: 90
score: 98.95012872869319
patch: days += 0 ; days += $NUMBER$ + $NUMBER$ ;
rank: 91
score: 99.2238410500919
patch: days -= start . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 91
score: 99.1751708984375
patch: minutes -= reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 91
score: 99.075
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY - months ;
rank: 91
score: 99.05055930397727
patch: days += $NUMBER$ * HOUR _ OF _ DAY ;
rank: 91
score: 98.97222222222223
patch: days += $NUMBER$ ; ; if $NUMBER$ ;
rank: 91
score: 98.96868341619319
patch: days = $NUMBER$ * Long . MIN _ VALUE ;
rank: 91
score: 98.94744194878473
patch: days += 0 ; days -= $NUMBER$ ;
rank: 92
score: 99.22236463758681
patch: days += 1 - start . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 92
score: 99.2076416015625
patch: milliseconds = Calendar . get CaMeL Instance ( timezone ) ;
rank: 92
score: 99.17491736778847
patch: int years = end . get ( Calendar . MONTH ) ;
rank: 92
score: 99.07493189761513
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; years -= 1 ;
rank: 92
score: 99.05034930889423
patch: days += $NUMBER$ * Time CaMeL Zone . + $NUMBER$ ; }
rank: 92
score: 98.982666015625
patch: days ] += $NUMBER$ ; if $NUMBER$ ;
rank: 92
score: 98.971142578125
patch: days += $NUMBER$ ; days days += 1 ;
rank: 92
score: 98.94565836588542
patch: days ++ ; } days += 1 ;
rank: 93
score: 99.22109587296195
patch: start . set ( Calendar . HOUR _ OF _ DAY , start . get ( Calendar . MONTH ) ) ;
rank: 93
score: 99.174072265625
patch: days += start . get ( Calendar . MONTH ) ;
rank: 93
score: 99.07481282552084
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY - years ;
rank: 93
score: 99.05009321732955
patch: days += $NUMBER$ * Time CaMeL Zone . FULL ;
rank: 93
score: 98.98176879882813
patch: days += - 1 ; if += $NUMBER$ ;
rank: 93
score: 98.966845703125
patch: days += 1 ; } days += $NUMBER$ ;
rank: 94
score: 99.1984130859375
patch: end . set ( end . get ( Calendar . YEAR ) ) ;
rank: 94
score: 99.07449161305146
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= $NUMBER$ ;
rank: 94
score: 98.98151991102431
patch: days += 0 ; += - $NUMBER$ ;
rank: 94
score: 98.9697265625
patch: days = $NUMBER$ + $NUMBER$ ; ;
rank: 94
score: 98.96672058105469
patch: start . set ( $NUMBER$ ) ;
rank: 95
score: 99.20546468098958
patch: milliseconds += end . get ( Calendar . YEAR ) ;
rank: 95
score: 99.17180786132812
patch: hours += 1 ;
rank: 95
score: 99.07394409179688
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ MONTH , days ) ;
rank: 95
score: 99.04863947088069
patch: long days = $NUMBER$ * Date CaMeL Utils . ;
rank: 95
score: 98.9666748046875
patch: days $NUMBER$ ; days += $NUMBER$ ;
rank: 95
score: 98.96464029947917
patch: days ++ ; days += 1 ; }
rank: 95
score: 98.93961588541667
patch: days += $NUMBER$ - $NUMBER$ + $NUMBER$ ;
rank: 96
score: 99.22038717830883
patch: hours -= - start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 96
score: 99.17161051432292
patch: milliseconds += start . get ( Calendar . YEAR ) ;
rank: 96
score: 99.0739387063419
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; years += 1 ;
rank: 96
score: 99.0479227701823
patch: days += $NUMBER$ * Time CaMeL Zone . format ( ;
rank: 96
score: 98.98030090332031
patch: days += start . days $NUMBER$ ;
rank: 96
score: 98.96659342447917
patch: days += $NUMBER$ ; if $NUMBER$ / /
rank: 96
score: 98.9635238647461
patch: long days = days + 1 ;
rank: 96
score: 98.93873180042614
patch: days += start . get ( $NUMBER$ ) ; }
rank: 97
score: 99.21981991038604
patch: months += end . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 97
score: 99.17141723632812
patch: months -= start . get ( Calendar . MONTH ) ;
rank: 97
score: 99.07373046875
patch: days < end . get ( Calendar . DAY _ OF _ MONTH ) {
rank: 97
score: 99.0462646484375
patch: days += $NUMBER$ * Time CaMeL Zone ;
rank: 97
score: 98.93660111860795
patch: days += $NUMBER$ * $NUMBER$ ; days += $NUMBER$ ;
rank: 98
score: 99.21887885199652
patch: days -= 1 ; days -= 1 ;
rank: 98
score: 99.20403180803571
patch: days = Calendar . get CaMeL Instance ( Calendar . MILLISECOND ) ;
rank: 98
score: 99.07218663832721
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; years -= $NUMBER$ ;
rank: 98
score: 99.04617309570312
patch: days += $NUMBER$ * Date CaMeL Utils . ; } ;
rank: 98
score: 98.97876654730902
patch: days += $NUMBER$ ; days return $NUMBER$ ;
rank: 98
score: 98.96580810546875
patch: days += 0 ; ; days += $NUMBER$ ;
rank: 99
score: 99.2186863111413
patch: end . set ( Calendar . DAY _ OF _ MONTH , start . get ( Calendar . YEAR ) ) ;
rank: 99
score: 99.20364815848214
patch: milliseconds -= reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 99
score: 99.16817533052884
patch: int minutes = end . get ( Calendar . YEAR ) ;
rank: 99
score: 99.07170667146382
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= 1 ;
rank: 99
score: 99.04557291666667
patch: days += $NUMBER$ * Calendar . $NUMBER$ ;
rank: 99
score: 98.97820366753473
patch: days = $NUMBER$ ; if += 1 ;
rank: 99
score: 98.96522739955357
patch: days += $NUMBER$ ; $NUMBER$ ;
rank: 99
score: 98.95811878551136
patch: days += Math . abs ( days ) ; }
rank: 99
score: 98.93323974609375
patch: days ++ ; }
rank: 100
score: 99.21852416992188
patch: reduce CaMeL And CaMeL Correct ( start , end , Calendar . HOUR _ OF _ DAY ) ;
rank: 100
score: 99.20270647321429
patch: minutes = Date CaMeL Utils . get CaMeL Instance ( timezone ) ;
rank: 100
score: 99.07049967447917
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY - 1 ;
rank: 100
score: 99.044677734375
patch: days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ . $NUMBER$ ;
rank: 100
score: 98.97781372070312
patch: days ++ ; days = $NUMBER$ ;
rank: 100
score: 98.95758666992188
patch: days += $NUMBER$ ; } days *= $NUMBER$ ;
rank: 100
score: 98.93321990966797
patch: days += $NUMBER$ - += $NUMBER$ ;
rank: 101
score: 99.21691363790761
patch: start . set ( Calendar . HOUR _ OF _ DAY , end . get ( Calendar . SECOND ) ) ;
rank: 101
score: 99.20247977120536
patch: end . set ( Calendar . YEAR , start CaMeL Millis ) ;
rank: 101
score: 99.16672188895089
patch: seconds = end . get ( Calendar . YEAR ) - 1 ;
rank: 101
score: 99.07018280029297
patch: days < $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ) {
rank: 101
score: 99.04464017427884
patch: days += $NUMBER$ * Time CaMeL Zone . MINUTE / $NUMBER$ ;
rank: 101
score: 98.97747802734375
patch: days += - $NUMBER$ ; if += $NUMBER$ ;
rank: 101
score: 98.96021864149306
patch: days += $NUMBER$ ; for += 1 ;
rank: 101
score: 98.93301052517361
patch: days += 0 ; else return $NUMBER$ ;
rank: 102
score: 99.21652088994566
patch: end . set ( Calendar . HOUR _ OF _ DAY , end . get ( Calendar . YEAR ) ) ;
rank: 102
score: 99.20109049479167
patch: days -= start . get ( Calendar . MINUTE ) ;
rank: 102
score: 99.0693359375
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; hours += 1 ;
rank: 102
score: 99.03925238715277
patch: days += $NUMBER$ * time ; } ;
rank: 102
score: 98.97719997829861
patch: days += days ; if += $NUMBER$ ;
rank: 102
score: 98.96016845703124
patch: days += $NUMBER$ ; days = - $NUMBER$ ;
rank: 102
score: 98.9544344815341
patch: start . iterator ( ) . next ( ) ;
rank: 102
score: 98.92888047960069
patch: days [ days ] = $NUMBER$ ; }
rank: 103
score: 99.216064453125
patch: end . get ( Calendar . DAY _ OF _ MONTH ) - start . get ( Calendar . SECOND ) ;
rank: 103
score: 99.16405232747395
patch: seconds += start . get ( Calendar . MONTH ) ;
rank: 103
score: 99.06806640625
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . HOUR _ OF _ DAY , hours ) ;
rank: 103
score: 99.03866811899039
patch: days += $NUMBER$ * $NUMBER$ * Time CaMeL Zone . SECOND ;
rank: 103
score: 98.97627088758681
patch: days += 0 ; += - 1 ;
rank: 103
score: 98.95892333984375
patch: days += $NUMBER$ ; days += 1 ; ;
rank: 103
score: 98.92789916992187
patch: days ; if ; days += $NUMBER$ ; }
rank: 104
score: 99.21581313189338
patch: months = end . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 104
score: 99.19994099934895
patch: seconds = Calendar . get CaMeL Instance ( timezone ) ;
rank: 104
score: 99.06703404017857
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= 1 ;
rank: 104
score: 99.0386454264323
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ ; ;
rank: 104
score: 98.97349548339844
patch: days -- ; days = $NUMBER$ ;
rank: 104
score: 98.95206705729167
patch: days += $NUMBER$ / $NUMBER$ + $NUMBER$ ;
rank: 104
score: 98.92718505859375
patch: days ; if days += $NUMBER$ ;
rank: 105
score: 99.21440887451172
patch: days += start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 105
score: 99.19814828725961
patch: hours = end . get ( Calendar . YEAR ) ; }
rank: 105
score: 99.1795654296875
patch: return end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 105
score: 99.16250610351562
patch: days = start . get ( Calendar . MINUTE ) ;
rank: 105
score: 99.03860473632812
patch: days += $NUMBER$ * time $NUMBER$ ;
rank: 105
score: 98.97317165798611
patch: days ++ ; days += - $NUMBER$ ;
rank: 105
score: 98.95855034722223
patch: days += $NUMBER$ ; days * $NUMBER$ ;
rank: 105
score: 98.926025390625
patch: days += 0 ; break ; }
rank: 106
score: 99.21378580729167
patch: days += 1 ; hours -= 1 ;
rank: 106
score: 99.19756469726562
patch: milliseconds += $NUMBER$ ;
rank: 106
score: 99.06650216238839
patch: days -= reduce CaMeL And CaMeL Correct ( start , days ) ;
rank: 106
score: 99.03668891059027
patch: days -= $NUMBER$ ; time += $NUMBER$ ;
rank: 106
score: 98.97139739990234
patch: days += $NUMBER$ ; days * /
rank: 106
score: 98.95822143554688
patch: days += $NUMBER$ ; else if += $NUMBER$ ;
rank: 106
score: 98.94830322265625
patch: days += $NUMBER$ ; days |= $NUMBER$ ;
rank: 106
score: 98.92587280273438
patch: days += 0 ; if days += $NUMBER$ ;
rank: 107
score: 99.21298615828805
patch: start . set ( Calendar . DAY _ OF _ MONTH , start . get ( Calendar . SECOND ) ) ;
rank: 107
score: 99.1732177734375
patch: months += $NUMBER$ ;
rank: 107
score: 99.16127522786458
patch: hours -= start . get ( Calendar . MONTH ) ;
rank: 107
score: 99.0659538717831
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds -= $NUMBER$ ;
rank: 107
score: 99.03618829900569
patch: days += $NUMBER$ * DAY _ OF _ MONTH ;
rank: 107
score: 98.97134399414062
patch: days += 0 ; if $NUMBER$ ;
rank: 107
score: 98.95814344618056
patch: days += $NUMBER$ + $NUMBER$ ; break ;
rank: 107
score: 98.941943359375
patch: days += start . get ( $NUMBER$ ) ;
rank: 107
score: 98.92566596137152
patch: days += $NUMBER$ - days / $NUMBER$ ;
rank: 108
score: 99.16016496930804
patch: seconds = end . get ( Calendar . YEAR ) - $NUMBER$ ;
rank: 108
score: 99.065185546875
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY - hours ;
rank: 108
score: 99.03334554036458
patch: days += $NUMBER$ * Date CaMeL Utils . MINUTE ; }
rank: 108
score: 98.96823556082589
patch: days += ; += $NUMBER$ ;
rank: 108
score: 98.95454237196181
patch: days ; days = $NUMBER$ + $NUMBER$ ;
rank: 108
score: 98.92319064670139
patch: days += $NUMBER$ ? $NUMBER$ : 1 ;
rank: 109
score: 99.21266771399456
patch: end . get ( Calendar . DAY _ OF _ MONTH ) - start . get ( Calendar . MINUTE ) ;
rank: 109
score: 99.1922607421875
patch: start . set ( Calendar . YEAR , end CaMeL Millis ) ;
rank: 109
score: 99.1600850423177
patch: seconds -= end . get ( Calendar . YEAR ) ;
rank: 109
score: 99.06450805664062
patch: if ( ! Token . contains CaMeL Token CaMeL With CaMeL Value ( tokens , y ) ) {
rank: 109
score: 99.03310139973958
patch: days += $NUMBER$ * Time CaMeL Zone . % $NUMBER$ ;
rank: 109
score: 98.96816677517361
patch: days -- ; days += - $NUMBER$ ;
rank: 109
score: 98.95409545898437
patch: days += 1 ; ; days += $NUMBER$ ;
rank: 109
score: 98.93712269176136
patch: days += $NUMBER$ / Double . MAX _ VALUE ;
rank: 109
score: 98.92057969835069
patch: days += ( days : $NUMBER$ ) ;
rank: 110
score: 99.21179729959239
patch: end . set ( Calendar . HOUR _ OF _ DAY , end . get ( Calendar . MONTH ) ) ;
rank: 110
score: 99.15976388113839
patch: end . set ( Calendar . DAY _ OF _ YEAR ) ;
rank: 110
score: 99.06428833007813
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ MONTH , hours ) ;
rank: 110
score: 98.96538628472223
patch: days * / { days += $NUMBER$ ;
rank: 110
score: 98.93669976128473
patch: days += $NUMBER$ * long CaMeL Value ;
rank: 110
score: 98.91741943359375
patch: days ++ ; if days += $NUMBER$ ; }
rank: 111
score: 99.21116009880515
patch: int end = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 111
score: 99.18792724609375
patch: months += reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 111
score: 99.15943400065105
patch: millis = end . get ( Calendar . YEAR ) ;
rank: 111
score: 99.03226725260417
patch: long days = $NUMBER$ * Time CaMeL Zone . $NUMBER$ ;
rank: 111
score: 98.95269775390625
patch: days += $NUMBER$ ; ; return $NUMBER$ ;
rank: 111
score: 98.91716766357422
patch: days += 0 + $NUMBER$ ; }
rank: 112
score: 99.15943254743304
patch: minutes = end . get ( Calendar . YEAR ) - 1 ;
rank: 112
score: 99.06341911764706
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; days += $NUMBER$ ;
rank: 112
score: 99.0315933227539
patch: days += $NUMBER$ * time ; ;
rank: 112
score: 98.96402994791667
patch: days += $NUMBER$ ; days catch $NUMBER$ ;
rank: 112
score: 98.95029296875
patch: days += $NUMBER$ ; ; days += 0 ;
rank: 112
score: 98.93262396918402
patch: days += $NUMBER$ + $NUMBER$ / $NUMBER$ ;
rank: 113
score: 99.21048106317934
patch: end . set ( Calendar . DAY _ OF _ MONTH , start . get ( Calendar . MONTH ) ) ;
rank: 113
score: 99.18685208834134
patch: seconds = end . get ( Calendar . YEAR ) ; }
rank: 113
score: 99.15862165178571
patch: minutes = end . get ( Calendar . YEAR ) - $NUMBER$ ;
rank: 113
score: 99.0625732421875
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; hours -= 1 ;
rank: 113
score: 99.03139085036058
patch: days += $NUMBER$ * Date CaMeL Utils . SECOND + $NUMBER$ ;
rank: 113
score: 98.96084255642361
patch: days ++ ; days catch += 1 ;
rank: 113
score: 98.91341145833333
patch: days += $NUMBER$ ; else return $NUMBER$ ;
rank: 114
score: 99.2095947265625
patch: minutes += end . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 114
score: 99.15996844951923
patch: milliseconds = reduce CaMeL And CaMeL Correct ( start , end ,
rank: 114
score: 99.15852573939732
patch: days = end . get ( Calendar . MONTH ) - 1 ;
rank: 114
score: 99.06248715049342
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; years -= 1 ;
rank: 114
score: 99.03108723958333
patch: days += $NUMBER$ * Time CaMeL Zone . MINUTE ; ;
rank: 114
score: 98.96037946428571
patch: days += - 1 ; ;
rank: 114
score: 98.94949679904514
patch: days += $NUMBER$ ; += $NUMBER$ ; ;
rank: 115
score: 99.20942687988281
patch: start . set ( Calendar . DAY _ OF _ MONTH , days ) ;
rank: 115
score: 99.15833458533653
patch: int days = end . get ( Calendar . MONTH ) ;
rank: 115
score: 99.06142064144737
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= 1 ;
rank: 115
score: 99.0308125813802
patch: days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ ; ;
rank: 115
score: 98.95945739746094
patch: days = days ; days ++ ;
rank: 115
score: 98.94873046875
patch: days += $NUMBER$ ; else days += $NUMBER$ ;
rank: 115
score: 98.91055908203126
patch: days [ end . get ( $NUMBER$ ) ;
rank: 116
score: 99.20920728600544
patch: start . set ( Calendar . HOUR _ OF _ DAY , end . get ( Calendar . MILLISECOND ) ) ;
rank: 116
score: 99.18338012695312
patch: start . set ( Calendar . YEAR , $NUMBER$ ) ;
rank: 116
score: 99.157470703125
patch: seconds -= start . get ( Calendar . MONTH ) ;
rank: 116
score: 99.0606330422794
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; minutes -= 1 ;
rank: 116
score: 98.95614963107639
patch: days * * / days += 0 ;
rank: 116
score: 98.94736735026042
patch: days += $NUMBER$ ; days = ; {
rank: 116
score: 98.90831909179687
patch: days [ $NUMBER$ ] = $NUMBER$ / $NUMBER$ ;
rank: 117
score: 99.20885291466347
patch: hours += reduce CaMeL And CaMeL Correct ( start , end ,
rank: 117
score: 99.06051199776786
patch: days += reduce CaMeL And CaMeL Correct ( start , hours ) ;
rank: 117
score: 99.0270526592548
patch: days += $NUMBER$ * Time CaMeL Zone . get CaMeL Instance ;
rank: 117
score: 98.95330810546875
patch: days += ; days += 0 ;
rank: 117
score: 98.94580841064453
patch: days += $NUMBER$ ; $NUMBER$ / /
rank: 117
score: 98.92411586216518
patch: days += $NUMBER$ ^ $NUMBER$ ;
rank: 117
score: 98.90760149274554
patch: days += 1 + $NUMBER$ ;
rank: 118
score: 99.20864868164062
patch: hours += start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 118
score: 99.15680401141827
patch: int millis = end . get ( Calendar . YEAR ) ;
rank: 118
score: 99.06019897460938
patch: days -= $NUMBER$ * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; }
rank: 118
score: 99.02580430772569
patch: days += $NUMBER$ ; time ++ ; }
rank: 118
score: 98.95306396484375
patch: days ] = $NUMBER$ ; if $NUMBER$ ;
rank: 118
score: 98.94435424804688
patch: days += $NUMBER$ ; days = += 1 ;
rank: 118
score: 98.92247772216797
patch: start . ; days += $NUMBER$ ;
rank: 118
score: 98.90697564019098
patch: days ++ ; } if += $NUMBER$ ;
rank: 119
score: 99.2081298828125
patch: int hours = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 119
score: 99.17958286830357
patch: hours -= reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 119
score: 99.05900493421052
patch: days -= $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= 1 ;
rank: 119
score: 99.02484600360577
patch: days += $NUMBER$ * $NUMBER$ * Time CaMeL Zone . ; }
rank: 119
score: 98.95292358398437
patch: days += days ; days += - 1 ;
rank: 119
score: 98.94377983940973
patch: days += $NUMBER$ ; for += $NUMBER$ ;
rank: 119
score: 98.92217462713069
patch: start . add ( $NUMBER$ + $NUMBER$ + $NUMBER$ ;
rank: 119
score: 98.90681966145833
patch: days += $NUMBER$ + $NUMBER$ ; if ;
rank: 120
score: 99.20761287913604
patch: int seconds = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 120
score: 99.1502685546875
patch: seconds += reduce CaMeL And CaMeL Correct ( start , end ,
rank: 120
score: 99.05841936383929
patch: days += reduce CaMeL And CaMeL Correct ( start , months ) ;
rank: 120
score: 98.95272827148438
patch: days += - $NUMBER$ ; break ;
rank: 120
score: 98.9063949584961
patch: days += 0 ; += $NUMBER$ ;
rank: 121
score: 99.2075832201087
patch: end . get ( Calendar . HOUR _ OF _ DAY ) - start . get ( Calendar . MILLISECOND ) ;
rank: 121
score: 99.17623197115384
patch: milliseconds = end . get ( Calendar . YEAR ) ; }
rank: 121
score: 99.15421549479167
patch: hours += end . get ( Calendar . MONTH ) ;
rank: 121
score: 99.05833524816177
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds += 1 ;
rank: 121
score: 99.0209491436298
patch: days += $NUMBER$ * Time CaMeL Zone . LONG + $NUMBER$ ;
rank: 121
score: 98.95155843098958
patch: days -- ; days catch += $NUMBER$ ;
rank: 121
score: 98.92167524857955
patch: days = $NUMBER$ * Date CaMeL Utils . $NUMBER$ ;
rank: 121
score: 98.90618896484375
patch: days ; days += 0 ;
rank: 122
score: 99.20620582217262
patch: Calendar . get CaMeL Instance ( timezone ) . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 122
score: 99.17550223214286
patch: months -= reduce CaMeL And CaMeL Correct ( start , end ) ;
rank: 122
score: 99.15331013997395
patch: seconds += end . get ( Calendar . MONTH ) ;
rank: 122
score: 99.05823432074652
patch: days += reduce CaMeL And CaMeL Correct ( start , Calendar . MILLISECOND , milliseconds ) ;
rank: 122
score: 99.02056329900569
patch: days += $NUMBER$ * Time CaMeL Zone . DATE ;
rank: 122
score: 98.94929809570313
patch: days += days ; days += - $NUMBER$ ;
rank: 122
score: 98.942724609375
patch: days += $NUMBER$ ; days $NUMBER$ = $NUMBER$ ;
rank: 122
score: 98.92003284801136
patch: long days = start . get ( $NUMBER$ ) ;
rank: 122
score: 98.90555245535714
patch: days = $NUMBER$ * days ;
rank: 123
score: 99.2061767578125
patch: start . set ( Calendar . HOUR _ OF _ DAY , days ) ;
rank: 123
score: 99.056787109375
patch: return start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 123
score: 99.02028401692708
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ / ;
rank: 123
score: 98.94789428710938
patch: days = start . get ( days ) ;
rank: 123
score: 98.94141981336806
patch: days += $NUMBER$ ; if += 0 ;
rank: 123
score: 98.91924493963069
patch: days += Math . max ( $NUMBER$ , days ;
rank: 124
score: 99.20604112413194
patch: hours += $NUMBER$ ; days -= 1 ;
rank: 124
score: 99.1520487467448
patch: years = start . get ( Calendar . YEAR ) ;
rank: 124
score: 98.94788818359375
patch: days += start . get ( days ) ;
rank: 124
score: 98.94132486979167
patch: days += $NUMBER$ ; days = start ;
rank: 124
score: 98.91900079900569
patch: end . add ( $NUMBER$ * $NUMBER$ * $NUMBER$ ;
rank: 125
score: 99.20516164679276
patch: end . set ( end . get ( Calendar . DAY _ OF _ MONTH ) ) ;
rank: 125
score: 99.1703125
patch: days = end . get ( format ) ;
rank: 125
score: 99.14443969726562
patch: days = end . get ( Calendar . HOUR ) ;
rank: 125
score: 99.05607299804687
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; days -= 1 ;
rank: 125
score: 99.01955003004808
patch: days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ + time ;
rank: 125
score: 98.93939819335938
patch: days += $NUMBER$ ; days += 0 ; ;
rank: 125
score: 98.91803588867188
patch: days = start . get ( $NUMBER$ ) ;
rank: 125
score: 98.89948187934027
patch: days += $NUMBER$ - days * $NUMBER$ ;
rank: 126
score: 99.20485552619485
patch: start . set ( Calendar . HOUR _ OF _ DAY , hours ) ; }
rank: 126
score: 99.16988118489583
patch: months = start . get ( Calendar . MONTH ) ;
rank: 126
score: 99.14899553571429
patch: days = end . get ( Calendar . MONTH ) - $NUMBER$ ;
rank: 126
score: 99.13970947265625
patch: seconds -= start . get ( Calendar . MINUTE ) ;
rank: 126
score: 99.05575125558036
patch: long millis = Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 126
score: 99.01842151988636
patch: days += $NUMBER$ * Time CaMeL Zone . get ;
rank: 126
score: 98.94736735026042
patch: days * ; { days += $NUMBER$ ;
rank: 126
score: 98.9393310546875
patch: days += $NUMBER$ + $NUMBER$ ; days ;
rank: 126
score: 98.89933776855469
patch: days += 0 ; return days ;
rank: 127
score: 99.20411592371323
patch: hours -= start . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 127
score: 99.16940307617188
patch: days = Calendar . get CaMeL Instance ( format ) ;
rank: 127
score: 99.14798990885417
patch: days = start . get ( Calendar . SECOND ) ;
rank: 127
score: 99.05570983886719
patch: days += Token . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 127
score: 99.01819864908855
patch: days += $NUMBER$ * Date CaMeL Utils . << $NUMBER$ ;
rank: 127
score: 98.94702826605902
patch: days += $NUMBER$ ; days -- ; /
rank: 127
score: 98.93714141845703
patch: days += 1 ; if $NUMBER$ ;
rank: 127
score: 98.91590711805556
patch: days |= $NUMBER$ ; days += $NUMBER$ ;
rank: 127
score: 98.89826049804688
patch: days days += $NUMBER$ ; days += $NUMBER$ ;
rank: 128
score: 99.20325237771739
patch: start . set ( Calendar . DAY _ OF _ MONTH , start . get ( Calendar . MILLISECOND ) ) ;
rank: 128
score: 99.1685791015625
patch: days -= start . get ( Calendar . MILLISECOND ) ;
rank: 128
score: 99.1476338704427
patch: hours -= end . get ( Calendar . YEAR ) ;
rank: 128
score: 99.13802083333333
patch: months -= end . get ( Calendar . YEAR ) ;
rank: 128
score: 99.05524040670956
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; years += $NUMBER$ ;
rank: 128
score: 98.94601440429688
patch: days = - 1 ; days += $NUMBER$ ;
rank: 128
score: 98.93581136067708
patch: days days += 0 ;
rank: 128
score: 98.91483931107955
patch: start . set ( $NUMBER$ * $NUMBER$ * $NUMBER$ ;
rank: 128
score: 98.89792209201389
patch: days ; if ( days == null ;
rank: 129
score: 99.20308191636029
patch: seconds = end . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 129
score: 99.16849190848214
patch: end . set ( Calendar . YEAR , end CaMeL Millis ) ;
rank: 129
score: 99.05491943359375
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; days -= 1 ;
rank: 129
score: 99.01579454210069
patch: days += $NUMBER$ * Calendar . MINUTE ;
rank: 129
score: 98.94547526041667
patch: days += $NUMBER$ ; days += true ;
rank: 129
score: 98.91199340820313
patch: days += $NUMBER$ ; days *= $NUMBER$ ; }
rank: 129
score: 98.89695909288194
patch: days += 0 ; for $NUMBER$ * /
rank: 130
score: 99.16594587053571
patch: start . set ( Calendar . MILLISECOND , end CaMeL Millis ) ;
rank: 130
score: 99.14331993689903
patch: int months = end . get ( Calendar . YEAR ) ;
rank: 130
score: 99.1361083984375
patch: months = reduce CaMeL And CaMeL Correct ( start , end ,
rank: 130
score: 99.0548095703125
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY - $NUMBER$ ;
rank: 130
score: 99.01517740885417
patch: days += $NUMBER$ * Time CaMeL Zone . YEAR ; }
rank: 130
score: 98.93354034423828
patch: days = $NUMBER$ ; += $NUMBER$ ;
rank: 130
score: 98.9108642578125
patch: days += $NUMBER$ ; } days += 0 ;
rank: 131
score: 99.20021654211956
patch: end . set ( Calendar . DAY _ OF _ MONTH , end . get ( Calendar . MINUTE ) ) ;
rank: 131
score: 99.14329176682692
patch: days = Calendar . get CaMeL Instance ( timezone ) ; }
rank: 131
score: 99.13494403545673
patch: seconds = reduce CaMeL And CaMeL Correct ( start , end ,
rank: 131
score: 99.05471319901316
patch: days -= 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= 1 ;
rank: 131
score: 99.01415076622597
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ / $NUMBER$ ;
rank: 131
score: 98.94471740722656
patch: days * * / return $NUMBER$ ;
rank: 131
score: 98.93351440429687
patch: days += $NUMBER$ + $NUMBER$ ; += $NUMBER$ ;
rank: 132
score: 99.14283098493304
patch: days = end . get ( Calendar . YEAR ) - days ;
rank: 132
score: 99.05409642269737
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= $NUMBER$ ;
rank: 132
score: 99.01398259943181
patch: days += $NUMBER$ * Date CaMeL Utils . MONTH ;
rank: 132
score: 98.94435628255208
patch: days += 0 ; days += false ;
rank: 132
score: 98.9327392578125
patch: days += $NUMBER$ + $NUMBER$ ; += 1 ;
rank: 132
score: 98.9099365234375
patch: end . set ( $NUMBER$ , $NUMBER$ ) ;
rank: 132
score: 98.8943204012784
patch: days += $NUMBER$ - $NUMBER$ ; days += $NUMBER$ ;
rank: 133
score: 99.1988166360294
patch: int milliseconds = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 133
score: 99.16455950055804
patch: start . set ( Calendar . MILLISECOND , start CaMeL Millis ) ;
rank: 133
score: 99.1376953125
patch: days = end . get ( Calendar . MONTH ) ; }
rank: 133
score: 99.05317993164063
patch: days -= reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY ) ;
rank: 133
score: 99.01300048828125
patch: long days = $NUMBER$ * Date CaMeL Utils . $NUMBER$ ;
rank: 133
score: 98.9437255859375
patch: days ] = $NUMBER$ ; days -- ;
rank: 133
score: 98.93267211914062
patch: days += $NUMBER$ ; days += 1 ; days
rank: 133
score: 98.90941772460937
patch: days += Math . abs ( $NUMBER$ ) ;
rank: 134
score: 99.19783020019531
patch: start . set ( Calendar . DAY _ OF _ MONTH , hours ) ;
rank: 134
score: 99.13763427734375
patch: minutes = Token . get CaMeL Instance ( timezone ) ;
rank: 134
score: 99.13015512319711
patch: days = reduce CaMeL And CaMeL Correct ( start , end ,
rank: 134
score: 99.05239868164062
patch: days -= reduce CaMeL And CaMeL Correct ( Calendar . HOUR _ OF _ DAY , hours ) ;
rank: 134
score: 99.01241361177884
patch: days += $NUMBER$ + $NUMBER$ * Time CaMeL Zone . MINUTE ;
rank: 134
score: 98.94361707899306
patch: days = days ; days += 0 ;
rank: 134
score: 98.93244764539931
patch: days days += $NUMBER$ ; if $NUMBER$ ;
rank: 134
score: 98.9086669921875
patch: days += $NUMBER$ ; days -= 1 ; }
rank: 134
score: 98.89378662109375
patch: days += $NUMBER$ ; days = $NUMBER$ ; }
rank: 135
score: 99.1975628396739
patch: days = Calendar . get CaMeL Instance ( timezone ) . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 135
score: 99.16041056315105
patch: days += start . get ( Calendar . MINUTE ) ;
rank: 135
score: 99.05218912760417
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY - 0 ;
rank: 135
score: 99.01129619891827
patch: days += $NUMBER$ * Time CaMeL Zone . SECOND / $NUMBER$ ;
rank: 135
score: 98.93192836216518
patch: days ; days = $NUMBER$ ;
rank: 135
score: 98.907568359375
patch: days = $NUMBER$ * $NUMBER$ + $NUMBER$ ; }
rank: 135
score: 98.8929443359375
patch: days += $NUMBER$ ; if days += $NUMBER$ ;
rank: 136
score: 99.19617229959239
patch: start . set ( Calendar . HOUR _ OF _ DAY , start . get ( Calendar . MINUTE ) ) ;
rank: 136
score: 99.13461303710938
patch: milliseconds = Token . get CaMeL Instance ( timezone ) ;
rank: 136
score: 99.05186157226562
patch: days -= reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ MONTH , days ) ;
rank: 136
score: 99.01039475661058
patch: days += $NUMBER$ + $NUMBER$ * Time CaMeL Zone . $NUMBER$ ;
rank: 136
score: 98.93060980902777
patch: days = 0 ; days += $NUMBER$ ;
rank: 136
score: 98.90748596191406
patch: long days = days / $NUMBER$ ;
rank: 136
score: 98.89144558376736
patch: days -= $NUMBER$ ; days += 0 ;
rank: 137
score: 99.1945441750919
patch: start . set ( Calendar . DAY _ OF _ MONTH , days ) ; }
rank: 137
score: 99.15891520182292
patch: days -= start . get ( Calendar . SECOND ) ;
rank: 137
score: 99.13214111328125
patch: years = end . get ( Calendar . MONTH ) ;
rank: 137
score: 99.12527669270834
patch: return format CaMeL Duration ( start , end , Calendar . MILLISECOND ) ;
rank: 137
score: 99.05142550998264
patch: days += Calendar . get CaMeL Instance ( Calendar . DAY _ OF _ MONTH ) ;
rank: 137
score: 98.92902374267578
patch: days += $NUMBER$ ; days ; ;
rank: 137
score: 98.90593719482422
patch: start . add ( days ) ;
rank: 137
score: 98.8912353515625
patch: days += $NUMBER$ ; return days ;
rank: 138
score: 99.19302368164062
patch: hours -= start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 138
score: 99.15753643329327
patch: months = end . get ( Calendar . MONTH ) ; }
rank: 138
score: 99.13162667410714
patch: milliseconds = end . get ( Calendar . YEAR ) - 1 ;
rank: 138
score: 99.05062430245536
patch: days += reduce CaMeL And CaMeL Correct ( start , years ) ;
rank: 138
score: 99.00881723257211
patch: days += $NUMBER$ * Time CaMeL Zone . % $NUMBER$ ; }
rank: 138
score: 98.90552978515625
patch: start . set ( $NUMBER$ , 0 ) ;
rank: 138
score: 98.89120822482639
patch: days += $NUMBER$ ; } return days ;
rank: 139
score: 99.19301970108695
patch: end . set ( Calendar . DAY _ OF _ MONTH , end . get ( Calendar . SECOND ) ) ;
rank: 139
score: 99.15469360351562
patch: milliseconds -= end . get ( Calendar . YEAR ) ;
rank: 139
score: 99.13145751953125
patch: days = end . get ( timezone ) ;
rank: 139
score: 99.12371356670673
patch: milliseconds += reduce CaMeL And CaMeL Correct ( start , end ,
rank: 139
score: 99.05015869140625
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; months -= 1 ;
rank: 139
score: 99.00763494318181
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ )
rank: 139
score: 98.94108072916667
patch: days * / { days = $NUMBER$ ;
rank: 139
score: 98.90448608398438
patch: days += $NUMBER$ ; } days -= 1 ;
rank: 139
score: 98.89004080636161
patch: days += $NUMBER$ ; if ;
rank: 140
score: 99.19265879755434
patch: end . get ( Calendar . HOUR _ OF _ DAY ) - start . get ( Calendar . SECOND ) ;
rank: 140
score: 99.13071899414062
patch: minutes += 1 ;
rank: 140
score: 99.05012781479779
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; milliseconds -= 1 ;
rank: 140
score: 99.00612571022727
patch: days += $NUMBER$ * DAY _ OF _ YEAR ;
rank: 140
score: 98.92597045898438
patch: days days += $NUMBER$ ; days = $NUMBER$ ;
rank: 140
score: 98.88969116210937
patch: days += $NUMBER$ ? $NUMBER$ : 0 ; }
rank: 141
score: 99.19260572350544
patch: end . get ( Calendar . HOUR _ OF _ DAY ) - start . get ( Calendar . MINUTE ) ;
rank: 141
score: 99.13028971354167
patch: minutes -= end . get ( Calendar . MONTH ) ;
rank: 141
score: 99.12081298828124
patch: months = $NUMBER$ ;
rank: 141
score: 99.04923095703126
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; years -= 1 ;
rank: 141
score: 99.005908203125
patch: days += $NUMBER$ * Time CaMeL Zone ; }
rank: 141
score: 98.94002532958984
patch: days -- ; if += $NUMBER$ ;
rank: 141
score: 98.90267508370536
patch: days += $NUMBER$ | $NUMBER$ ;
rank: 141
score: 98.88918631417411
patch: days += 0 ; if ;
rank: 142
score: 99.15315755208333
patch: end . set ( Calendar . YEAR , $NUMBER$ ) ;
rank: 142
score: 99.12961989182692
patch: long years = end . get ( Calendar . YEAR ) ;
rank: 142
score: 99.11928304036458
patch: seconds -= start . get ( Calendar . MILLISECOND ) ;
rank: 142
score: 99.04896763392857
patch: days -= reduce CaMeL And CaMeL Correct ( start , hours ) ;
rank: 142
score: 98.9227783203125
patch: days += $NUMBER$ ; days ; += $NUMBER$ ;
rank: 142
score: 98.90227716619319
patch: start . start ( ) ; days += $NUMBER$ ;
rank: 142
score: 98.88906860351562
patch: days ; } days += 0 ;
rank: 143
score: 99.18594180836396
patch: start . set ( Calendar . HOUR _ OF _ DAY , days ) ; }
rank: 143
score: 99.12950788225446
patch: hours = end . get ( Calendar . YEAR ) - 1 ;
rank: 143
score: 99.048828125
patch: days += ( Date CaMeL Utils . MILLIS _ PER _ DAY ) ;
rank: 143
score: 99.00446234809027
patch: days += $NUMBER$ * time - $NUMBER$ ;
rank: 143
score: 98.93844943576389
patch: days += $NUMBER$ ; days / * /
rank: 143
score: 98.92261962890625
patch: days += $NUMBER$ ; days $NUMBER$ += $NUMBER$ ;
rank: 143
score: 98.89924621582031
patch: long days = days - $NUMBER$ ;
rank: 144
score: 99.18581136067708
patch: start . set ( Calendar . DAY _ OF _ MONTH , end . get ( Calendar . YEAR ) ) ; }
rank: 144
score: 99.12936636117789
patch: days = Token . get CaMeL Instance ( timezone ) ; }
rank: 144
score: 99.11874624399039
patch: seconds -= reduce CaMeL And CaMeL Correct ( start , end ,
rank: 144
score: 99.04829624720982
patch: days -= reduce CaMeL And CaMeL Correct ( start , months ) ;
rank: 144
score: 99.00442270132211
patch: days += $NUMBER$ * Time CaMeL Zone . YEAR + $NUMBER$ ;
rank: 144
score: 98.93773542131696
patch: days += 0 ; break ;
rank: 144
score: 98.92222764756944
patch: days += $NUMBER$ ; days += SECOND ;
rank: 144
score: 98.898291015625
patch: days += $NUMBER$ Double . MIN _ VALUE ;
rank: 144
score: 98.885693359375
patch: days += 0 ; days = $NUMBER$ ; }
rank: 145
score: 99.184326171875
patch: minutes += end . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 145
score: 99.12909807477679
patch: days = end . get ( Calendar . YEAR ) - start ;
rank: 145
score: 99.04825846354167
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; } milliseconds -= 1 ;
rank: 145
score: 98.99942016601562
patch: days += $NUMBER$ * Time CaMeL Zone . get ; }
rank: 145
score: 98.93771701388889
patch: days * ; days += - 1 ;
rank: 145
score: 98.89822387695312
patch: days += $NUMBER$ ; } days |= $NUMBER$ ;
rank: 145
score: 98.88557264539931
patch: days += true ; days += $NUMBER$ ;
rank: 146
score: 99.18396714154412
patch: months = end . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 146
score: 99.12843831380208
patch: hours = Token . get CaMeL Instance ( timezone ) ;
rank: 146
score: 99.04821166992187
patch: days -= 1 * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; }
rank: 146
score: 98.99845064603366
patch: days += $NUMBER$ * Time CaMeL Zone . signum ( ) ;
rank: 146
score: 98.8975830078125
patch: days |= $NUMBER$ ; }
rank: 146
score: 98.88523646763393
patch: days += $NUMBER$ / days ;
rank: 147
score: 99.1837158203125
patch: hours += 1 ; hours -= 1 ;
rank: 147
score: 99.12777273995536
patch: hours = end . get ( Calendar . YEAR ) - $NUMBER$ ;
rank: 147
score: 99.04802389705883
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; months += 1 ;
rank: 147
score: 98.99753981370192
patch: days += $NUMBER$ * Calendar . DAY _ OF _ YEAR ;
rank: 147
score: 98.93459743923611
patch: days += $NUMBER$ ; days += ( ;
rank: 147
score: 98.88387722439236
patch: days += $NUMBER$ - days + $NUMBER$ ;
rank: 148
score: 99.18341385690789
patch: start . set ( end . get ( Calendar . DAY _ OF _ MONTH ) ) ;
rank: 148
score: 99.0479024251302
patch: days += end . get ( Calendar . SECOND ) ;
rank: 148
score: 98.99740600585938
patch: days += $NUMBER$ * $NUMBER$ * $NUMBER$ ; }
rank: 148
score: 98.93402099609375
patch: days += - - 1 ;
rank: 148
score: 98.91741943359375
patch: days += $NUMBER$ ; } += $NUMBER$ ;
rank: 148
score: 98.89684448242187
patch: days = $NUMBER$ ; days += $NUMBER$ ; }
rank: 148
score: 98.88341175426136
patch: days ++ ; } days += $NUMBER$ + $NUMBER$ ;
rank: 149
score: 99.14295450846355
patch: months = start . get ( Calendar . MINUTE ) ;
rank: 149
score: 99.04775103400735
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY - 1 ;
rank: 149
score: 98.99690755208333
patch: days += $NUMBER$ * time * time ;
rank: 149
score: 98.93315294053819
patch: days += - $NUMBER$ ; days * /
rank: 149
score: 98.89662679036458
patch: days = $NUMBER$ + $NUMBER$ + $NUMBER$ ;
rank: 149
score: 98.88322618272569
patch: days ++ ; if += $NUMBER$ ; }
rank: 150
score: 99.18263841711956
patch: start . set ( Calendar . HOUR _ OF _ DAY , start . get ( Calendar . SECOND ) ) ;
rank: 150
score: 99.04654693603516
patch: days -= Token . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 150
score: 98.99687194824219
patch: days += 1 + $NUMBER$ ; }
rank: 150
score: 98.9317626953125
patch: days += - 1 ; += $NUMBER$ ;
rank: 150
score: 98.91573486328124
patch: days += $NUMBER$ ; days = $NUMBER$ ++ ;
rank: 150
score: 98.89544677734375
patch: days += Double . MAX _ VALUE ;
rank: 150
score: 98.881689453125
patch: days += 0 ; } days += 0 ;
rank: 151
score: 99.18229166666667
patch: start . set ( Calendar . DAY _ OF _ MONTH , end . get ( Calendar . MONTH ) ) ; }
rank: 151
score: 99.1422627766927
patch: end = end . get ( Calendar . YEAR ) ;
rank: 151
score: 99.04607282366071
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= 1 ;
rank: 151
score: 98.99619140625
patch: days += $NUMBER$ * Calendar . MINUTE ; }
rank: 151
score: 98.91510620117188
patch: days = $NUMBER$ ; ; days += $NUMBER$ ;
rank: 151
score: 98.89459783380681
patch: start . days += $NUMBER$ ; days -= $NUMBER$ ;
rank: 152
score: 99.1822868795956
patch: int millis = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 152
score: 99.14007568359375
patch: milliseconds = start . get ( Calendar . YEAR ) ;
rank: 152
score: 99.04599609375
patch: days -= reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ MONTH , hours ) ;
rank: 152
score: 98.99566650390625
patch: days += $NUMBER$ * millis ;
rank: 152
score: 98.930908203125
patch: days else { days += 1 ;
rank: 152
score: 98.91483561197917
patch: days += $NUMBER$ ; days ++ ; ;
rank: 152
score: 98.8936279296875
patch: start . add ( $NUMBER$ * time ) ;
rank: 152
score: 98.88106079101563
patch: days += 0 ; } days = $NUMBER$ ;
rank: 153
score: 99.18224566915761
patch: end . set ( Calendar . HOUR _ OF _ DAY , end . get ( Calendar . MINUTE ) ) ;
rank: 153
score: 99.12545340401786
patch: seconds = end . get ( Calendar . YEAR ) - days ;
rank: 153
score: 99.04595656622024
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; years -= 1 ;
rank: 153
score: 98.99456317608173
patch: days += $NUMBER$ * Time CaMeL Zone . / $NUMBER$ ; }
rank: 153
score: 98.91477966308594
patch: days += $NUMBER$ ; $NUMBER$ / ;
rank: 153
score: 98.89339870876736
patch: days += $NUMBER$ * $NUMBER$ + 1 ;
rank: 153
score: 98.8807861328125
patch: days += 0 ; days days += $NUMBER$ ;
rank: 154
score: 99.18211454503677
patch: int days = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 154
score: 99.13694254557292
patch: days += end . get ( Calendar . MINUTE ) ;
rank: 154
score: 99.04511176215277
patch: days += end . get ( Calendar . Calendar . HOUR _ OF _ DAY ) ;
rank: 154
score: 98.99415001502403
patch: days += $NUMBER$ * Time CaMeL Zone . this . days ;
rank: 154
score: 98.93059624565973
patch: days * ; { days = $NUMBER$ ;
rank: 154
score: 98.89324951171875
patch: double days = days * $NUMBER$ ;
rank: 154
score: 98.88037109375
patch: days += $NUMBER$ ; days += $NUMBER$ * $NUMBER$ ;
rank: 155
score: 99.18207146139706
patch: start . set ( Calendar . DAY _ OF _ MONTH , hours ) ; }
rank: 155
score: 99.13693237304688
patch: days += start . get ( Calendar . MILLISECOND ) ;
rank: 155
score: 99.12528170072116
patch: int hours = end . get ( Calendar . MONTH ) ;
rank: 155
score: 99.04490966796875
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; days -= $NUMBER$ ;
rank: 155
score: 98.99364471435547
patch: days += $NUMBER$ ; time ++ ;
rank: 155
score: 98.913134765625
patch: days += $NUMBER$ ; days ; if $NUMBER$ ;
rank: 155
score: 98.88998752170139
patch: days += Long . MAX _ VALUE ;
rank: 155
score: 98.88026123046875
patch: days [ $NUMBER$ ] = $NUMBER$ + $NUMBER$ ;
rank: 156
score: 99.18115234375
patch: int minutes = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 156
score: 99.124755859375
patch: minutes += start . get ( Calendar . MILLISECOND ) ;
rank: 156
score: 99.1088358561198
patch: months = end . get ( Calendar . HOUR ) ;
rank: 156
score: 99.04476318359374
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; days += 1 ;
rank: 156
score: 98.99330647786458
patch: days += Integer . parse CaMeL Int ( days ) ;
rank: 156
score: 98.93014090401786
patch: days += $NUMBER$ + days ;
rank: 156
score: 98.91203962053571
patch: days = $NUMBER$ - $NUMBER$ ;
rank: 156
score: 98.88840060763889
patch: Date CaMeL Utils . days += $NUMBER$ ;
rank: 157
score: 99.18089803059895
patch: end . get ( Calendar . DAY _ OF _ MONTH ) - start . get ( Calendar . YEAR ) ; }
rank: 157
score: 99.13388061523438
patch: months -= start . get ( Calendar . MINUTE ) ;
rank: 157
score: 99.124267578125
patch: int milliseconds = end . get ( Calendar . YEAR ) ;
rank: 157
score: 99.04457720588235
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; months -= $NUMBER$ ;
rank: 157
score: 98.99298095703125
patch: days -= $NUMBER$ ; time += $NUMBER$ ; }
rank: 157
score: 98.93012152777777
patch: days += 0 ; days return $NUMBER$ ;
rank: 157
score: 98.91197509765625
patch: days += $NUMBER$ ; if $NUMBER$ + $NUMBER$ ;
rank: 157
score: 98.88800726996527
patch: days += $NUMBER$ ; length += $NUMBER$ ;
rank: 158
score: 99.18042710248162
patch: int years = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 158
score: 99.1332538311298
patch: months = end . get ( Calendar . MINUTE ) ; }
rank: 158
score: 99.12363688151042
patch: months += end . get ( Calendar . MONTH ) ;
rank: 158
score: 99.04407456341912
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; days += 1 ;
rank: 158
score: 98.99190266927083
patch: days += $NUMBER$ + $NUMBER$ ; ; }
rank: 158
score: 98.88641357421875
patch: days -= $NUMBER$ ; days -= $NUMBER$ ;
rank: 158
score: 98.87930297851562
patch: days ] = $NUMBER$ * $NUMBER$ ;
rank: 159
score: 99.18013332201087
patch: end . set ( Calendar . DAY _ OF _ MONTH , end . get ( Calendar . MILLISECOND ) ) ;
rank: 159
score: 99.12311662946429
patch: milliseconds = end . get ( Calendar . YEAR ) - $NUMBER$ ;
rank: 159
score: 99.04391818576389
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . HOUR _ OF _ DAY ) ;
rank: 159
score: 98.98948160807292
patch: days += $NUMBER$ * $NUMBER$ * Time CaMeL Zone . ;
rank: 159
score: 98.92938232421875
patch: days += - 1 ; days += 1 ;
rank: 159
score: 98.91046142578125
patch: days += $STRING$ ;
rank: 159
score: 98.88538953993056
patch: end . long CaMeL Value ( ) ;
rank: 160
score: 99.17934782608695
patch: hours = Calendar . get CaMeL Instance ( timezone ) . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 160
score: 99.1216571514423
patch: int seconds = end . get ( Calendar . YEAR ) ;
rank: 160
score: 99.04301183363971
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; minutes -= $NUMBER$ ;
rank: 160
score: 98.98927659254808
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ + MINUTE ;
rank: 160
score: 98.92811414930556
patch: days * * / days += 1 ;
rank: 160
score: 98.879150390625
patch: days += 0 ; days -- $NUMBER$ ;
rank: 161
score: 99.17848714192708
patch: end . get ( Calendar . DAY _ OF _ MONTH ) - start . get ( Calendar . MONTH ) ; }
rank: 161
score: 99.13068096454327
patch: months ( end . get ( Calendar . YEAR ) ) ;
rank: 161
score: 99.12029157366071
patch: months = end . get ( Calendar . YEAR ) - 1 ;
rank: 161
score: 99.04291735197368
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= $NUMBER$ ;
rank: 161
score: 98.98871404474431
patch: days += $NUMBER$ * Integer . MIN _ VALUE ;
rank: 161
score: 98.92794363839286
patch: days += start += $NUMBER$ ;
rank: 161
score: 98.88446044921875
patch: days -= $NUMBER$ + $NUMBER$ ;
rank: 161
score: 98.87904188368056
patch: days += ( $NUMBER$ * $NUMBER$ ) ;
rank: 162
score: 99.1294453938802
patch: months += start . get ( Calendar . MINUTE ) ;
rank: 162
score: 99.04265280330883
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; hours += $NUMBER$ ;
rank: 162
score: 98.98868815104167
patch: days += 1 ; time += $NUMBER$ ;
rank: 162
score: 98.92786865234375
patch: days += - 1 ; days += 0 ;
rank: 162
score: 98.90939670138889
patch: days = 0 ; days = $NUMBER$ ;
rank: 162
score: 98.88409978693181
patch: days += Math . abs ( $NUMBER$ * $NUMBER$ ;
rank: 162
score: 98.87667507595486
patch: days ; if days += $NUMBER$ ; }
rank: 163
score: 99.17802124023437
patch: days += reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY ) ;
rank: 163
score: 99.1289532001202
patch: days = end . get ( Calendar . MILLISECOND ) ; }
rank: 163
score: 99.10566057477679
patch: months = end . get ( Calendar . YEAR ) - $NUMBER$ ;
rank: 163
score: 99.04262288411458
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) - 1 ;
rank: 163
score: 98.98729529747597
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ + millis ;
rank: 163
score: 98.92752838134766
patch: days += $NUMBER$ ; += false ;
rank: 163
score: 98.88362121582031
patch: start . add ( time ) ;
rank: 163
score: 98.87629917689732
patch: days ; days += 1 ;
rank: 164
score: 99.17712933084239
patch: start . set ( Calendar . HOUR _ OF _ DAY , start . get ( Calendar . MILLISECOND ) ) ;
rank: 164
score: 99.12890625
patch: months = start . get ( Calendar . MILLISECOND ) ;
rank: 164
score: 99.1146952311198
patch: hours = start . get ( Calendar . MONTH ) ;
rank: 164
score: 99.1046630859375
patch: if ( Token . contains CaMeL Token CaMeL With CaMeL Value ( tokens ,
rank: 164
score: 99.04228071732955
patch: days -= reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY , hours ) ;
rank: 164
score: 98.98698207310268
patch: days += $NUMBER$ * ; ;
rank: 164
score: 98.92604573567708
patch: days += days ; if += 1 ;
rank: 164
score: 98.8807373046875
patch: start . add ( $NUMBER$ / $NUMBER$ * $NUMBER$ ;
rank: 165
score: 99.1766941236413
patch: end . set ( Calendar . DAY _ OF _ MONTH , start . get ( Calendar . MINUTE ) ) ;
rank: 165
score: 99.12751988002232
patch: days = reduce CaMeL And CaMeL Correct ( start , false ) ;
rank: 165
score: 99.0421142578125
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) . get CaMeL Time ( ) ;
rank: 165
score: 98.98656116832386
patch: days += $NUMBER$ * Time CaMeL Zone . Double ;
rank: 165
score: 98.90848795572917
patch: days += $NUMBER$ ; else
rank: 165
score: 98.88053131103516
patch: start . append ( $NUMBER$ ) ;
rank: 165
score: 98.87615966796875
patch: days [ $NUMBER$ ++ ] += $NUMBER$ ;
rank: 166
score: 99.17647058823529
patch: hours += end . get ( Calendar . DAY _ OF _ YEAR ) ; }
rank: 166
score: 99.11331176757812
patch: minutes -= start . get ( Calendar . MILLISECOND ) ;
rank: 166
score: 99.0418701171875
patch: days -= reduce CaMeL And CaMeL Correct ( Calendar . HOUR _ OF _ DAY ) ;
rank: 166
score: 98.98560587565105
patch: long days = $NUMBER$ * Date CaMeL Utils . MINUTE ;
rank: 166
score: 98.92258029513889
patch: days = days ; if += $NUMBER$ ;
rank: 166
score: 98.90829806857639
patch: days += null ; days += $NUMBER$ ;
rank: 166
score: 98.87872869318181
patch: days += $NUMBER$ * Double . POSITIVE _ INFINITY ;
rank: 167
score: 99.17559493215461
patch: Calendar . get CaMeL Instance ( timezone ) . set CaMeL Time ( start CaMeL Millis ) ;
rank: 167
score: 99.12574259440105
patch: seconds += start . get ( Calendar . MINUTE ) ;
rank: 167
score: 99.0413882606908
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; months -= 1 ;
rank: 167
score: 98.98477172851562
patch: days += $NUMBER$ % $NUMBER$ ; }
rank: 167
score: 98.92216661241319
patch: days += $NUMBER$ ; days = false ;
rank: 167
score: 98.90635375976562
patch: days += $NUMBER$ ; days = += $NUMBER$ ;
rank: 167
score: 98.87554253472223
patch: days += $NUMBER$ ; days -- $NUMBER$ ;
rank: 168
score: 99.17484966077302
patch: end . set ( end . get ( Calendar . HOUR _ OF _ DAY ) ) ;
rank: 168
score: 99.10020094651442
patch: return start . get ( Calendar . YEAR ) - $NUMBER$ ;
rank: 168
score: 99.04127332899306
patch: days += reduce CaMeL And CaMeL Correct (
rank: 168
score: 98.9847412109375
patch: days += $NUMBER$ * Date CaMeL Utils . LONG ;
rank: 168
score: 98.92202419704861
patch: days += $NUMBER$ ; days -- ; ;
rank: 168
score: 98.90590413411458
patch: days += $NUMBER$ + $NUMBER$ - $NUMBER$ ;
rank: 168
score: 98.87551047585227
patch: days += $NUMBER$ ; days += $NUMBER$ / $NUMBER$ ;
rank: 168
score: 98.87531127929688
patch: start . set ( $NUMBER$ , time ) ;
rank: 169
score: 99.12241036551339
patch: days += $NUMBER$ * end . get ( Calendar . YEAR ) ;
rank: 169
score: 99.11087472098214
patch: seconds = end . get ( Calendar . MONTH ) - 1 ;
rank: 169
score: 99.04013400607639
patch: days += Calendar . get CaMeL Instance ( Calendar . HOUR _ OF _ DAY ) ;
rank: 169
score: 98.98444073016827
patch: days += $NUMBER$ * Date CaMeL Utils . abs ( days ;
rank: 169
score: 98.90561252170139
patch: days += $NUMBER$ ; += 1 ; ;
rank: 169
score: 98.87513427734375
patch: start . set ( time , days ) ;
rank: 169
score: 98.87452392578125
patch: days ++ ; ; days += $NUMBER$ ; }
rank: 170
score: 99.17321246603261
patch: end . set ( Calendar . HOUR _ OF _ DAY , end . get ( Calendar . SECOND ) ) ;
rank: 170
score: 99.1107889811198
patch: years = Calendar . get CaMeL Instance ( timezone ) ;
rank: 170
score: 99.03971557617187
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . HOUR _ OF _ DAY , days ) ;
rank: 170
score: 98.98419952392578
patch: days += $NUMBER$ * long $NUMBER$ ;
rank: 170
score: 98.91942749023437
patch: days += 0 ; days catch += 1 ;
rank: 170
score: 98.90457916259766
patch: days += $NUMBER$ + $NUMBER$ ; days
rank: 171
score: 99.12113444010417
patch: days = reduce CaMeL And CaMeL Correct ( start ) ;
rank: 171
score: 99.1095479329427
patch: hours += start . get ( Calendar . MILLISECOND ) ;
rank: 171
score: 99.03908865792411
patch: days += * Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 171
score: 98.9838397686298
patch: long days = end . get ( Calendar . MINUTE ) ;
rank: 171
score: 98.91927083333333
patch: days * / days += - $NUMBER$ ;
rank: 171
score: 98.87473366477273
patch: days += Math . abs ( $NUMBER$ ) ; }
rank: 171
score: 98.87374114990234
patch: days += $NUMBER$ * days $NUMBER$ ;
rank: 172
score: 99.17239379882812
patch: hours -= end . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 172
score: 99.12086995442708
patch: days -= end . get ( Calendar . MINUTE ) ;
rank: 172
score: 99.10906982421875
patch: minutes = end . get ( Calendar . YEAR ) - days ;
rank: 172
score: 99.03907686121323
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY - hours ;
rank: 172
score: 98.98260967548077
patch: days += $NUMBER$ * Time CaMeL Zone . SECOND / days ;
rank: 172
score: 98.91919623480902
patch: days = $NUMBER$ ; += - 1 ;
rank: 172
score: 98.904052734375
patch: days += 1 ; += $NUMBER$ ;
rank: 172
score: 98.87410888671874
patch: days += $NUMBER$ ; days |= $NUMBER$ ; }
rank: 173
score: 99.17026774088542
patch: days += $NUMBER$ ; hours -= 1 ;
rank: 173
score: 99.11981879340277
patch: seconds += $NUMBER$ ; days -= 1 ;
rank: 173
score: 99.10838826497395
patch: years = end . get ( Calendar . MILLISECOND ) ;
rank: 173
score: 99.09824440696023
patch: return start . get ( Calendar . YEAR ) ;
rank: 173
score: 99.0388119346217
patch: days -= $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; years -= 1 ;
rank: 173
score: 98.98233032226562
patch: days += 1 ; time += $NUMBER$ ; }
rank: 173
score: 98.9189453125
patch: days ++ ; if += 1 ;
rank: 173
score: 98.90370178222656
patch: days += 1 ; days ++ ;
rank: 173
score: 98.87367942116477
patch: days += $NUMBER$ * Calendar . MIN _ VALUE ;
rank: 173
score: 98.8720458984375
patch: days days += 0 ; days += $NUMBER$ ;
rank: 174
score: 99.11970738002232
patch: days = $NUMBER$ * start . get ( Calendar . YEAR ) ;
rank: 174
score: 99.09776000976562
patch: months += 1 ;
rank: 174
score: 99.03780967310855
patch: days -= $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= 1 ;
rank: 174
score: 98.98152669270833
patch: if ( days += $NUMBER$ * Date CaMeL Utils . ;
rank: 174
score: 98.90359497070312
patch: days += $NUMBER$ ; ; days = 1 ;
rank: 174
score: 98.87136840820312
patch: days ++ ; } if days += $NUMBER$ ;
rank: 174
score: 98.8685302734375
patch: start . int CaMeL Value ( ) ;
rank: 175
score: 99.16824161305146
patch: days -= - start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 175
score: 99.106689453125
patch: minutes = end . get ( Calendar . MONTH ) - 1 ;
rank: 175
score: 99.09599165482955
patch: return end . get ( Calendar . YEAR ) ;
rank: 175
score: 99.03636410361842
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds -= 1 ;
rank: 175
score: 98.98133341471355
patch: days += $NUMBER$ * time . get ( $NUMBER$ ) ;
rank: 175
score: 98.91797485351563
patch: days * * / { days = $NUMBER$ ;
rank: 175
score: 98.86792755126953
patch: days = $NUMBER$ / $NUMBER$ ; }
rank: 176
score: 99.16762408088235
patch: days = end . get ( Calendar . DAY _ OF _ YEAR ) ; }
rank: 176
score: 99.1058858235677
patch: minutes += start . get ( Calendar . MINUTE ) ;
rank: 176
score: 99.03611353824013
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; years -= $NUMBER$ ;
rank: 176
score: 98.97916666666667
patch: days += $NUMBER$ * Date CaMeL Utils . *= $NUMBER$ ;
rank: 176
score: 98.917626953125
patch: days = - 1 ; days = $NUMBER$ ;
rank: 176
score: 98.90190778459821
patch: days += $NUMBER$ ; days $NUMBER$
rank: 176
score: 98.87040201822917
patch: days *= 0 ; days += $NUMBER$ ;
rank: 177
score: 99.16761846127717
patch: Calendar . get CaMeL Instance ( timezone ) . set CaMeL Time ( Calendar . DAY _ OF _ MONTH ) ;
rank: 177
score: 99.11777072482639
patch: seconds += $NUMBER$ ; years -= 1 ;
rank: 177
score: 99.0352783203125
patch: days -= end . get ( Calendar . DAY _ OF _ YEAR ) ; }
rank: 177
score: 98.9789287860577
patch: days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ ; ; }
rank: 177
score: 98.90158081054688
patch: days += $NUMBER$ ; ; if += 1 ;
rank: 177
score: 98.86724298650569
patch: end . set ( $NUMBER$ , $NUMBER$ , $NUMBER$ ;
rank: 178
score: 99.16729058159723
patch: hours -= 1 ; days -= 1 ;
rank: 178
score: 99.11696213942308
patch: days -= start . get ( Calendar . YEAR ) ; }
rank: 178
score: 99.03481716579861
patch: days += end . get ( Calendar . Calendar . DAY _ OF _ MONTH ) ;
rank: 178
score: 98.97833721454327
patch: days += $NUMBER$ * Time CaMeL Zone . MONTH + $NUMBER$ ;
rank: 178
score: 98.91503143310547
patch: days += - 1 ; break ;
rank: 178
score: 98.90108489990234
patch: days += $NUMBER$ ; days else ;
rank: 178
score: 98.8694091796875
patch: days [ $NUMBER$ ] = $NUMBER$ * $NUMBER$ ;
rank: 178
score: 98.86719512939453
patch: days ++ ; days -= $NUMBER$ ;
rank: 179
score: 99.16672650505515
patch: int months = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 179
score: 99.10177176339286
patch: minutes = end . get ( Calendar . YEAR ) - start ;
rank: 179
score: 99.0347012606534
patch: days += reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY , hours ) ;
rank: 179
score: 98.9778544108073
patch: days += $NUMBER$ * HOUR _ OF _ DAY ; }
rank: 179
score: 98.91490173339844
patch: days else { days += $NUMBER$ ;
rank: 179
score: 98.90091281467014
patch: days += $NUMBER$ ; while $NUMBER$ / /
rank: 179
score: 98.86920844184027
patch: days * 0 ; days += $NUMBER$ ;
rank: 179
score: 98.86485072544643
patch: days = days + $NUMBER$ ;
rank: 180
score: 99.16629367404514
patch: days -= 1 ; hours -= 1 ;
rank: 180
score: 99.0889892578125
patch: months -= $NUMBER$ ;
rank: 180
score: 99.03470052083334
patch: return Token . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 180
score: 98.9769795735677
patch: days += $NUMBER$ * Time CaMeL Zone . MONTH ; }
rank: 180
score: 98.91227722167969
patch: days += $NUMBER$ ; days else {
rank: 180
score: 98.90037231445312
patch: days += $NUMBER$ ; if $NUMBER$ = $NUMBER$ ;
rank: 180
score: 98.86787923177083
patch: days += $NUMBER$ + $NUMBER$ ; } days += $NUMBER$ ;
rank: 180
score: 98.86376953125
patch: days |= $NUMBER$ ;
rank: 181
score: 99.16587763247283
patch: end . set ( Calendar . DAY _ OF _ MONTH , start . get ( Calendar . SECOND ) ) ;
rank: 181
score: 99.115234375
patch: days += start . get ( Calendar . SECOND ) ;
rank: 181
score: 99.08895169771634
patch: months += reduce CaMeL And CaMeL Correct ( start , end ,
rank: 181
score: 98.97607421875
patch: days += $NUMBER$ * Time CaMeL Zone . SECOND + days ;
rank: 181
score: 98.91158040364583
patch: days ] += $NUMBER$ ; += $NUMBER$ ;
rank: 181
score: 98.86777072482639
patch: days += $NUMBER$ ; for $NUMBER$ * /
rank: 181
score: 98.8631924715909
patch: start . long CaMeL Value ( ) + $NUMBER$ ;
rank: 182
score: 99.16538373161765
patch: int start = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 182
score: 99.11507474459134
patch: milliseconds = Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 182
score: 99.09983607700893
patch: days = end . get ( Calendar . MILLISECOND ) - 1 ;
rank: 182
score: 99.03418907752403
patch: days += end . get ( Calendar . YEAR ) ; }
rank: 182
score: 98.97509765625
patch: days -= $NUMBER$ * Time CaMeL Zone . MINUTE ;
rank: 182
score: 98.91102430555556
patch: days += - 1 ; days * /
rank: 182
score: 98.89888916015624
patch: days += $NUMBER$ ; days else if $NUMBER$ ;
rank: 182
score: 98.86772918701172
patch: days days = $NUMBER$ * $NUMBER$ ;
rank: 183
score: 99.16427951388889
patch: days -= - start . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 183
score: 99.11501840444711
patch: days = end . get ( Calendar . MINUTE ) ; }
rank: 183
score: 99.09922281901042
patch: seconds -= end . get ( Calendar . MONTH ) ;
rank: 183
score: 99.08766526442308
patch: long days = end . get ( Calendar . YEAR ) ;
rank: 183
score: 99.03412272135417
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; break ;
rank: 183
score: 98.97465006510417
patch: days += $NUMBER$ * $NUMBER$ * / ;
rank: 183
score: 98.91096714564732
patch: days += days + $NUMBER$ ;
rank: 183
score: 98.89875139508929
patch: days += $NUMBER$ + $STRING$ ;
rank: 183
score: 98.867041015625
patch: days += 1 ; days += 0 ; }
rank: 183
score: 98.86286078559027
patch: start . add ( $NUMBER$ * $NUMBER$ ;
rank: 184
score: 99.16408284505208
patch: start . set ( Calendar . DAY _ OF _ MONTH , start . get ( Calendar . YEAR ) ) ; }
rank: 184
score: 99.11481267755681
patch: return format CaMeL Duration ( start , end ) ;
rank: 184
score: 99.09920247395833
patch: minutes -= start . get ( Calendar . MINUTE ) ;
rank: 184
score: 99.08756197415866
patch: milliseconds -= reduce CaMeL And CaMeL Correct ( start , end ,
rank: 184
score: 99.03379193474265
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; years += 1 ;
rank: 184
score: 98.97398024338942
patch: days += Integer . parse CaMeL Int ( days ) ; }
rank: 184
score: 98.91060384114583
patch: days += ; int days = $NUMBER$ ;
rank: 184
score: 98.89791107177734
patch: days += 1 ; while $NUMBER$ ;
rank: 184
score: 98.86659240722656
patch: days [ $NUMBER$ ] = 0 ;
rank: 185
score: 99.16359456380208
patch: days += 1 - start . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 185
score: 99.1137362393466
patch: days = Token . get CaMeL Instance ( ) ;
rank: 185
score: 99.09918212890625
patch: hours = start . get ( Calendar . MILLISECOND ) ;
rank: 185
score: 99.03373209635417
patch: days -= reduce CaMeL And CaMeL Correct ( start , Calendar . MILLISECOND , milliseconds ) ;
rank: 185
score: 98.97071184430804
patch: days += $NUMBER$ * MINUTE ;
rank: 185
score: 98.91000027126736
patch: days * * / days = $NUMBER$ ;
rank: 185
score: 98.89710150824652
patch: days = 1 ; days += $NUMBER$ ;
rank: 185
score: 98.86133575439453
patch: days += $NUMBER$ | $NUMBER$ ; }
rank: 186
score: 99.16341458834134
patch: minutes += reduce CaMeL And CaMeL Correct ( start , end ,
rank: 186
score: 99.09831891741071
patch: minutes = end . get ( Calendar . MONTH ) - $NUMBER$ ;
rank: 186
score: 99.03353271484374
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; hours -= 1 ;
rank: 186
score: 98.90846470424107
patch: days * * - $NUMBER$ ;
rank: 186
score: 98.89703369140625
patch: days += $NUMBER$ ; if $NUMBER$ /
rank: 186
score: 98.86628553602431
patch: days += 0 ; } return days ;
rank: 186
score: 98.86123657226562
patch: end . set ( $NUMBER$ ) ;
rank: 187
score: 99.16309655230978
patch: end . set ( Calendar . HOUR _ OF _ DAY , end . get ( Calendar . MILLISECOND ) ) ;
rank: 187
score: 99.09734429253473
patch: hours += $NUMBER$ ; years -= 1 ;
rank: 187
score: 99.0853271484375
patch: seconds -= start . get ( Calendar . SECOND ) ;
rank: 187
score: 99.03251567639802
patch: days -= 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= 1 ;
rank: 187
score: 98.96989610460069
patch: days += $NUMBER$ * time * $NUMBER$ ;
rank: 187
score: 98.90799560546876
patch: days += - 1 ; days -- ; }
rank: 187
score: 98.89510091145833
patch: days += $NUMBER$ ; ; days ++ ;
rank: 187
score: 98.86471218532986
patch: days += $NUMBER$ ? 0 : $NUMBER$ ;
rank: 187
score: 98.86122824928977
patch: double days = start . get ( $NUMBER$ ) ;
rank: 188
score: 99.16297978940217
patch: days = Calendar . get CaMeL Instance ( timezone ) . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 188
score: 99.11140659877232
patch: days += $NUMBER$ * start . get ( Calendar . YEAR ) ;
rank: 188
score: 99.09694998604911
patch: minutes = reduce CaMeL And CaMeL Correct ( tokens , y ) ;
rank: 188
score: 99.03233991350446
patch: days -= reduce CaMeL And CaMeL Correct ( start , years ) ;
rank: 188
score: 98.96978759765625
patch: days += Time CaMeL Zone . get CaMeL Instance ( ;
rank: 188
score: 98.90782928466797
patch: days else { days = 1 ;
rank: 188
score: 98.89487033420139
patch: days += $NUMBER$ ; days if $NUMBER$ ;
rank: 188
score: 98.86416015625
patch: days ; days += $NUMBER$ + $NUMBER$ ; }
rank: 188
score: 98.86085094105114
patch: days += $NUMBER$ ; ; } days += $NUMBER$ ;
rank: 189
score: 99.09654017857143
patch: seconds = end . get ( Calendar . MONTH ) - $NUMBER$ ;
rank: 189
score: 99.08424072265625
patch: months -= 1 ;
rank: 189
score: 99.03228759765625
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; hours -= 1 ;
rank: 189
score: 98.96975473257211
patch: days += $NUMBER$ / $NUMBER$ * Time CaMeL Zone . MINUTE ;
rank: 189
score: 98.9073486328125
patch: days -- ; if += 1 ;
rank: 189
score: 98.89394124348958
patch: days += $NUMBER$ + $NUMBER$ ; $NUMBER$ /
rank: 189
score: 98.863525390625
patch: days += ( days * $NUMBER$ ) ;
rank: 189
score: 98.86025661892361
patch: start . days += $NUMBER$ + $NUMBER$ ;
rank: 190
score: 99.16234633501838
patch: days += start . get ( Calendar . DAY _ OF _ YEAR ) ; }
rank: 190
score: 99.09604899088542
patch: hours += reduce CaMeL And CaMeL Correct ( $NUMBER$ ) ;
rank: 190
score: 99.03218347886029
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY - $NUMBER$ ;
rank: 190
score: 98.9697265625
patch: days += $NUMBER$ * Date CaMeL Utils . days ( ; }
rank: 190
score: 98.90715874565973
patch: days ++ ; days else { break ;
rank: 190
score: 98.89388427734374
patch: days += $NUMBER$ + $NUMBER$ ; if $NUMBER$ ;
rank: 190
score: 98.86313883463542
patch: days += $NUMBER$ ; break $NUMBER$ ; }
rank: 190
score: 98.85973510742187
patch: days |= $NUMBER$ ; } days += $NUMBER$ ;
rank: 191
score: 99.16110229492188
patch: minutes += start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 191
score: 99.11053936298077
patch: months = end . get ( Calendar . MILLISECOND ) ; }
rank: 191
score: 99.09573703342014
patch: hours += $NUMBER$ ; minutes -= 1 ;
rank: 191
score: 98.96950276692708
patch: days += $NUMBER$ * $NUMBER$ * Date CaMeL Utils . ;
rank: 191
score: 98.90636528862848
patch: days -- ; days catch += 1 ;
rank: 191
score: 98.89258422851563
patch: days += $NUMBER$ ; days days = 1 ;
rank: 191
score: 98.86214447021484
patch: days ; * * * * /
rank: 192
score: 99.16098361545139
patch: minutes += 1 ; days -= 1 ;
rank: 192
score: 99.10954938616071
patch: days = $NUMBER$ * end . get ( Calendar . YEAR ) ;
rank: 192
score: 99.0317626953125
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY - days ;
rank: 192
score: 98.96846516927083
patch: days += $NUMBER$ * Time CaMeL Zone . / $NUMBER$ ;
rank: 192
score: 98.90612182617187
patch: days += - $NUMBER$ ; days += 0 ;
rank: 192
score: 98.89218139648438
patch: days += $NUMBER$ ; days = $NUMBER$ / ;
rank: 192
score: 98.86168323863636
patch: days += 0 ; this . days = $NUMBER$ ;
rank: 192
score: 98.85811070033482
patch: days += $NUMBER$ / time ;
rank: 193
score: 99.16092722039474
patch: Calendar . get CaMeL Instance ( timezone ) . set CaMeL Time ( end CaMeL Millis ) ;
rank: 193
score: 99.10578264508929
patch: months = end . get ( Calendar . YEAR ) ; break ;
rank: 193
score: 99.09488932291667
patch: minutes += end . get ( Calendar . MINUTE ) ;
rank: 193
score: 99.03166852678571
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= $NUMBER$ ;
rank: 193
score: 98.9677225748698
patch: days += $NUMBER$ * Time CaMeL Zone . random ( ;
rank: 193
score: 98.90577528211806
patch: days += - $NUMBER$ ; if $NUMBER$ ;
rank: 193
score: 98.89208984375
patch: days += 1 ; += 1 ;
rank: 193
score: 98.8594970703125
patch: days += 0 ; break $NUMBER$ ; }
rank: 193
score: 98.85746765136719
patch: days += $NUMBER$ ^ $NUMBER$ ; }
rank: 194
score: 99.09488351004464
patch: days = end . get ( Calendar . MILLISECOND ) - $NUMBER$ ;
rank: 194
score: 99.03155838815789
patch: days -= 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; years -= 1 ;
rank: 194
score: 98.96729454627403
patch: days += $NUMBER$ * Date CaMeL Utils . days / $NUMBER$ ;
rank: 194
score: 98.90521918402777
patch: days += $STRING$ ; days += 1 ;
rank: 194
score: 98.85940890842014
patch: days += $NUMBER$ * days += $NUMBER$ ;
rank: 194
score: 98.85711669921875
patch: start . add ( $NUMBER$ * $NUMBER$ ) ;
rank: 195
score: 99.16030401932566
patch: start . set ( end . get ( Calendar . HOUR _ OF _ DAY ) ) ;
rank: 195
score: 99.08170572916667
patch: seconds -= start . get ( Calendar . HOUR ) ;
rank: 195
score: 99.03142547607422
patch: days += reduce CaMeL And CaMeL Correct ( start , Calendar . MILLISECOND ) ;
rank: 195
score: 98.9046630859375
patch: days += $NUMBER$ ; days < $NUMBER$ ;
rank: 195
score: 98.85939719460227
patch: days [ start . get ( $NUMBER$ ) ; }
rank: 196
score: 99.1594746907552
patch: start . set ( Calendar . DAY _ OF _ MONTH , start . get ( Calendar . MONTH ) ) ; }
rank: 196
score: 99.10530598958333
patch: days = tokens . get ( Calendar . YEAR ) ;
rank: 196
score: 99.09385172526042
patch: minutes = start . get ( Calendar . MONTH ) ;
rank: 196
score: 99.0310791015625
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; } }
rank: 196
score: 98.96710674579327
patch: time += $NUMBER$ * Date CaMeL Utils . $NUMBER$ + $NUMBER$ ;
rank: 196
score: 98.90397135416667
patch: days ] += $NUMBER$ ;
rank: 196
score: 98.8582763671875
patch: days [ $NUMBER$ ] += $NUMBER$ ; days += $NUMBER$ ;
rank: 196
score: 98.85623508029514
patch: days += $NUMBER$ ; $NUMBER$ += $NUMBER$ ;
rank: 197
score: 99.15914916992188
patch: minutes -= start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 197
score: 99.10418701171875
patch: seconds = $NUMBER$ * start . get ( Calendar . YEAR ) ;
rank: 197
score: 99.08128004807692
patch: return end . get ( Calendar . YEAR ) - $NUMBER$ ;
rank: 197
score: 99.03094803659539
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; months -= 1 ;
rank: 197
score: 98.96553861177884
patch: days += $NUMBER$ * Time CaMeL Zone . get ( ; }
rank: 197
score: 98.90375366210938
patch: days += - $NUMBER$ ; days += 1 ;
rank: 197
score: 98.88861762152777
patch: days days += $NUMBER$ ; while $NUMBER$ ;
rank: 197
score: 98.85778130425348
patch: days *= $NUMBER$ ; days += $NUMBER$ ;
rank: 197
score: 98.85589044744319
patch: start . end ( ) ; days += $NUMBER$ ;
rank: 198
score: 99.15908813476562
patch: start . set ( Calendar . HOUR _ OF _ DAY , end . get ( Calendar . YEAR ) ) ; }
rank: 198
score: 99.09255981445312
patch: milliseconds -= start . get ( Calendar . MONTH ) ;
rank: 198
score: 99.03059656479779
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY - 1 ;
rank: 198
score: 98.96536254882812
patch: days += $NUMBER$ * Date CaMeL Utils . days ; }
rank: 198
score: 98.90370178222656
patch: days * ; days += $NUMBER$ ;
rank: 198
score: 98.88798828125
patch: days += $NUMBER$ ; days = 1 ; ;
rank: 198
score: 98.85724555121527
patch: days += false ; days += $NUMBER$ ;
rank: 198
score: 98.85543484157986
patch: days += $NUMBER$ ; } return format ;
rank: 199
score: 99.15892392113095
patch: return reduce CaMeL And CaMeL Correct ( start , end , Calendar . HOUR _ OF _ DAY ) ;
rank: 199
score: 99.10341099330357
patch: days = reduce CaMeL And CaMeL Correct ( start , true ) ;
rank: 199
score: 99.09253946940105
patch: minutes += reduce CaMeL And CaMeL Correct ( $NUMBER$ ) ;
rank: 199
score: 99.07901000976562
patch: months = end . get ( timezone ) ;
rank: 199
score: 99.03049879807692
patch: days += end . get ( Calendar . MONTH ) ; }
rank: 199
score: 98.96510145399306
patch: days += $NUMBER$ * days + 1 ;
rank: 199
score: 98.90367889404297
patch: days -- ; days += 0 ;
rank: 199
score: 98.88751220703125
patch: days += 0 ; ; days = $NUMBER$ ;
rank: 199
score: 98.8570068359375
patch: days += 0 ; days += $NUMBER$ ; ;
rank: 199
score: 98.85509381975446
patch: days += $NUMBER$ || $NUMBER$ ;
rank: 200
score: 99.15855577256944
patch: days += - start . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 200
score: 99.10299682617188
patch: months = end . get ( format ) ;
rank: 200
score: 99.09163992745536
patch: milliseconds = end . get ( Calendar . YEAR ) - days ;
rank: 200
score: 99.07814534505208
patch: seconds += start . get ( Calendar . MILLISECOND ) ;
rank: 200
score: 99.02985229492188
patch: days += reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY ) ;
rank: 200
score: 98.96453857421875
patch: days += $NUMBER$ * Date CaMeL Utils . ^ $NUMBER$ ;
rank: 200
score: 98.903564453125
patch: days += - $NUMBER$ ; return $NUMBER$ ;
rank: 200
score: 98.88685438368056
patch: days += $NUMBER$ ; ; += 1 ;
rank: 200
score: 98.85474243164063
patch: start . add ( $NUMBER$ , $NUMBER$ ) ;
rank: 201
score: 99.15806749131944
patch: hours += $NUMBER$ ; hours -= 1 ;
rank: 201
score: 99.09058634440105
patch: minutes += end . get ( Calendar . MILLISECOND ) ;
rank: 201
score: 99.02949793198529
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds -= $NUMBER$ ;
rank: 201
score: 98.96426391601562
patch: sb . append ( $NUMBER$ ) ; days += $NUMBER$ ;
rank: 201
score: 98.9032958984375
patch: days = days ; days += - 1 ;
rank: 201
score: 98.88673095703125
patch: days += $NUMBER$ ; days = 0 ; ;
rank: 201
score: 98.85529920789931
patch: days [ max 1 ] += $NUMBER$ ;
rank: 201
score: 98.85431671142578
patch: end . add ( $NUMBER$ ) ;
rank: 202
score: 99.15754968979779
patch: hours += start . get ( Calendar . DAY _ OF _ YEAR ) ; }
rank: 202
score: 99.08977399553571
patch: days = end . get ( Calendar . YEAR ) - years ;
rank: 202
score: 99.02921977796052
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= $NUMBER$ ;
rank: 202
score: 98.96381084735577
patch: long days = start . get ( Calendar . MINUTE ) ;
rank: 202
score: 98.90304565429688
patch: days = - 1 ;
rank: 202
score: 98.85477701822917
patch: days [ max 1 ] = $NUMBER$ ;
rank: 202
score: 98.85317160866477
patch: days = $NUMBER$ * Time CaMeL Zone . $NUMBER$ ;
rank: 203
score: 99.15732828776042
patch: start . set ( Calendar . HOUR _ OF _ DAY , end . get ( Calendar . MONTH ) ) ; }
rank: 203
score: 99.07711791992188
patch: milliseconds -= $NUMBER$ ;
rank: 203
score: 99.02882690429688
patch: days += reduce CaMeL And CaMeL Correct ( start , end , Calendar . MILLISECOND , milliseconds ) ;
rank: 203
score: 98.96306818181819
patch: days += $NUMBER$ * $NUMBER$ * $NUMBER$ * $NUMBER$ ;
rank: 203
score: 98.88524712456598
patch: days += $NUMBER$ ; days / / /
rank: 203
score: 98.85410563151042
patch: days += 0 + $NUMBER$ + $NUMBER$ ;
rank: 203
score: 98.852734375
patch: start . long CaMeL Value ( ) ; }
rank: 204
score: 99.15520163143383
patch: days += - start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 204
score: 99.09873453776042
patch: start . set ( Calendar . YEAR , millis ) ;
rank: 204
score: 99.0887451171875
patch: hours = end . get ( Calendar . YEAR ) - days ;
rank: 204
score: 99.02877103365384
patch: days = Date CaMeL Utils . MILLIS _ PER _ DAY ;
rank: 204
score: 98.96305338541667
patch: days += $NUMBER$ * Date CaMeL Utils . % $NUMBER$ ;
rank: 204
score: 98.88491821289062
patch: days += 0 ; += 1 ;
rank: 204
score: 98.85396321614583
patch: days += 0 ; max += $NUMBER$ ;
rank: 204
score: 98.85239664713542
patch: days += $NUMBER$ * $NUMBER$ / $NUMBER$ ;
rank: 205
score: 99.08792114257812
patch: milliseconds += 1 ;
rank: 205
score: 99.07709612165179
patch: end . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 205
score: 99.02873399522569
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; } milliseconds -= $NUMBER$ ;
rank: 205
score: 98.96213942307692
patch: days += $NUMBER$ * Time CaMeL Zone . MINUTE ; ; }
rank: 205
score: 98.90240478515625
patch: days += start . days ;
rank: 205
score: 98.88461303710938
patch: days += $NUMBER$ ; if += $NUMBER$ ; days
rank: 205
score: 98.85350036621094
patch: days ; if days += 0 ;
rank: 205
score: 98.85231018066406
patch: days -- ;
rank: 206
score: 99.09840901692708
patch: seconds += end . get ( Calendar . MINUTE ) ;
rank: 206
score: 99.08769008091518
patch: days = start . get ( Calendar . YEAR ) - $NUMBER$ ;
rank: 206
score: 99.02867216222427
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; hours += 1 ;
rank: 206
score: 98.96188354492188
patch: days += $NUMBER$ * time . get ( days ) ;
rank: 206
score: 98.88438720703125
patch: days += 1 ; days days += $NUMBER$ ;
rank: 206
score: 98.85345458984375
patch: days ++ ; days += $NUMBER$ ; days += $NUMBER$ ;
rank: 206
score: 98.85203721788194
patch: days = $NUMBER$ * $NUMBER$ / $NUMBER$ ;
rank: 207
score: 99.15410299862133
patch: days -= start . get ( Calendar . DAY _ OF _ YEAR ) ; }
rank: 207
score: 99.09765625
patch: seconds = $NUMBER$ * end . get ( Calendar . YEAR ) ;
rank: 207
score: 99.08648681640625
patch: milliseconds += start . get ( Calendar . MONTH ) ;
rank: 207
score: 99.02855727251838
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds += $NUMBER$ ;
rank: 207
score: 98.96181077223558
patch: if ( days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ )
rank: 207
score: 98.90142822265625
patch: days += - $NUMBER$ ; ;
rank: 207
score: 98.85262044270833
patch: days -= 1 ; days += $NUMBER$ ;
rank: 207
score: 98.85157359730114
patch: days += $NUMBER$ / Time CaMeL Zone . $NUMBER$ ;
rank: 208
score: 99.15320354959239
patch: end . set ( Calendar . DAY _ OF _ MONTH , start . get ( Calendar . MILLISECOND ) ) ;
rank: 208
score: 99.09714762369792
patch: months = start . get ( Calendar . SECOND ) ;
rank: 208
score: 99.0863749186198
patch: minutes += start . get ( Calendar . SECOND ) ;
rank: 208
score: 99.07529994419643
patch: end . format ( start , end , Calendar . MILLISECOND ) ;
rank: 208
score: 99.02700805664062
patch: days += Token . contains ( Calendar . DAY _ OF _ MONTH ) ;
rank: 208
score: 98.96160419170673
patch: days += $NUMBER$ * Date CaMeL Utils . YEAR + $NUMBER$ ;
rank: 208
score: 98.90038384331598
patch: days += - days ; days -- ;
rank: 208
score: 98.883251953125
patch: days += $NUMBER$ ; += $NUMBER$ + $NUMBER$ ;
rank: 208
score: 98.85252796519886
patch: days += $NUMBER$ + $NUMBER$ ; days += 0 ;
rank: 208
score: 98.8510409268466
patch: days += Math . min ( days , days ;
rank: 209
score: 99.15273215553977
patch: days += reduce CaMeL And CaMeL Correct ( start , Calendar . DAY _ OF _ MONTH , days ) ;
rank: 209
score: 99.0863037109375
patch: milliseconds += end . get ( Calendar . MONTH ) ;
rank: 209
score: 99.02631692325367
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; months += $NUMBER$ ;
rank: 209
score: 98.96156141493056
patch: days += $NUMBER$ ; time += 1 ;
rank: 209
score: 98.90032958984375
patch: days * / days += 0 ;
rank: 209
score: 98.85178629557292
patch: days [ $NUMBER$ ] = $NUMBER$ ; days += $NUMBER$ ;
rank: 210
score: 99.15235731336806
patch: days += reduce CaMeL And CaMeL Correct ( format , pad CaMeL With CaMeL Zeros ) ;
rank: 210
score: 99.0968017578125
patch: days = Date . get CaMeL Instance ( timezone ) ;
rank: 210
score: 99.08541870117188
patch: days = end . get ( Calendar . $NUMBER$ ) ;
rank: 210
score: 99.07419057992789
patch: minutes = reduce CaMeL And CaMeL Correct ( start , end ,
rank: 210
score: 99.02622680664062
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; days -= 1 ;
rank: 210
score: 98.9615009014423
patch: long days = end . get ( Calendar . SECOND ) ;
rank: 210
score: 98.88264770507813
patch: days += $NUMBER$ + $NUMBER$ ; days ++ ;
rank: 210
score: 98.85132945667614
patch: days += 0 ; days = $NUMBER$ / $NUMBER$ ;
rank: 210
score: 98.8499755859375
patch: days += Math . min ( $NUMBER$ , days ;
rank: 211
score: 99.15170467601104
patch: int seconds = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 211
score: 99.095947265625
patch: days = format . get ( Calendar . MILLISECOND ) ;
rank: 211
score: 99.08504813058036
patch: seconds = end . get ( Calendar . YEAR ) - start ;
rank: 211
score: 98.96134440104167
patch: days += $NUMBER$ ; } days += $NUMBER$ + $NUMBER$ ;
rank: 211
score: 98.88245239257813
patch: days += $NUMBER$ ; ; days = 0 ;
rank: 211
score: 98.8511734008789
patch: days [ 0 ] = $NUMBER$ ;
rank: 211
score: 98.84960327148437
patch: days |= $NUMBER$ ; days += $NUMBER$ ; }
rank: 212
score: 99.15142267400569
patch: reduce CaMeL And CaMeL Correct ( start , end , Calendar . DAY _ OF _ MONTH , days ) ;
rank: 212
score: 99.09559215198864
patch: minutes = Calendar . get CaMeL Instance ( ) ;
rank: 212
score: 99.08494349888393
patch: days = end . get ( Calendar . MONTH ) - days ;
rank: 212
score: 99.0246349516369
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; months -= 1 ;
rank: 212
score: 98.9609883626302
patch: days = Time CaMeL Zone . get CaMeL Instance ( ;
rank: 212
score: 98.89893188476563
patch: days += $NUMBER$ ; days catch += $NUMBER$ ;
rank: 212
score: 98.88106960720486
patch: days += $NUMBER$ ; $NUMBER$ / / /
rank: 212
score: 98.85084117542614
patch: days += $NUMBER$ ; days = $NUMBER$ / $NUMBER$ ;
rank: 213
score: 99.15121858016305
patch: return reduce CaMeL And CaMeL Correct ( start , end , Calendar . DAY _ OF _ MONTH , days ) ;
rank: 213
score: 99.08434041341145
patch: seconds += reduce CaMeL And CaMeL Correct ( $NUMBER$ ) ;
rank: 213
score: 99.02415771484375
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; months -= 1 ;
rank: 213
score: 98.96078491210938
patch: days += $NUMBER$ * Date CaMeL Utils . + 1 ;
rank: 213
score: 98.89860704210069
patch: days = $NUMBER$ ; += - $NUMBER$ ;
rank: 213
score: 98.85057484019886
patch: days += $NUMBER$ ; days = $NUMBER$ * $NUMBER$ ;
rank: 213
score: 98.84775612571023
patch: days += Math . max ( days , $NUMBER$ ;
rank: 214
score: 99.1511761209239
patch: start . set ( Calendar . DAY _ OF _ MONTH , format . get ( Calendar . YEAR ) ) ;
rank: 214
score: 99.08377075195312
patch: milliseconds += reduce CaMeL And CaMeL Correct ( $NUMBER$ ) ;
rank: 214
score: 99.02413779810855
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds -= 1 ;
rank: 214
score: 98.96067457932692
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ . $NUMBER$ ;
rank: 214
score: 98.898486328125
patch: days = days ; days += - $NUMBER$ ;
rank: 214
score: 98.88045654296874
patch: days += $NUMBER$ ; days += $NUMBER$ ; else
rank: 214
score: 98.8502197265625
patch: days ++ ; } days = $NUMBER$ ;
rank: 214
score: 98.8476806640625
patch: days += $NUMBER$ ; } days = 0 ;
rank: 215
score: 99.15052705652573
patch: hours = end . get ( Calendar . DAY _ OF _ YEAR ) ; }
rank: 215
score: 99.08351643880208
patch: minutes -= start . get ( Calendar . SECOND ) ;
rank: 215
score: 99.07139235276442
patch: months -= reduce CaMeL And CaMeL Correct ( start , end ,
rank: 215
score: 99.0240478515625
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; seconds -= 1 ;
rank: 215
score: 98.95982947716347
patch: days += $NUMBER$ * Time CaMeL Zone . format ( ; }
rank: 215
score: 98.89830017089844
patch: days ] += $NUMBER$ ; break ;
rank: 215
score: 98.88010660807292
patch: days += $NUMBER$ ; if $NUMBER$ / ;
rank: 215
score: 98.84917658025569
patch: days += 0 ; days = $NUMBER$ * $NUMBER$ ;
rank: 215
score: 98.84722222222223
patch: days += $NUMBER$ + $NUMBER$ * $NUMBER$ ;
rank: 216
score: 99.15052625868056
patch: days -= $NUMBER$ ; days -= 1 ;
rank: 216
score: 99.08271620008681
patch: hours += 1 ; minutes -= 1 ;
rank: 216
score: 99.07119750976562
patch: months -= start . get ( Calendar . MILLISECOND ) ;
rank: 216
score: 99.02380981445313
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; years += 1 ;
rank: 216
score: 98.95978393554688
patch: days += $NUMBER$ * days + $NUMBER$ ; }
rank: 216
score: 98.897216796875
patch: days += 0 ; days -- ; }
rank: 216
score: 98.87957153320312
patch: days += 1 ; ; days = $NUMBER$ ;
rank: 216
score: 98.8486328125
patch: days = $NUMBER$ * $NUMBER$ ; days += $NUMBER$ ;
rank: 217
score: 99.15048217773438
patch: days -= reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY ) ;
rank: 217
score: 99.09139404296874
patch: minutes = end . get ( format ) ;
rank: 217
score: 99.08248901367188
patch: hours -= end . get ( Calendar . MONTH ) ;
rank: 217
score: 98.95967240767045
patch: days -= $NUMBER$ * Date CaMeL Utils . $NUMBER$ ;
rank: 217
score: 98.89655219184027
patch: days += $STRING$ ; if += $NUMBER$ ;
rank: 217
score: 98.84830729166667
patch: days ] = $NUMBER$ * $NUMBER$ ; }
rank: 217
score: 98.84674627130681
patch: start . clear ( ) ; days -= $NUMBER$ ;
rank: 218
score: 99.15034993489583
patch: end . get ( Calendar . HOUR _ OF _ DAY ) - start . get ( Calendar . YEAR ) ; }
rank: 218
score: 99.08189900716145
patch: hours += start . get ( Calendar . MINUTE ) ;
rank: 218
score: 99.02300262451172
patch: days = Token . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 218
score: 98.95883614676339
patch: days += $NUMBER$ ; } }
rank: 218
score: 98.84674627130681
patch: days += $NUMBER$ ; days += $NUMBER$ + 1 ;
rank: 218
score: 98.84645589192708
patch: days ++ ; } days -= $NUMBER$ ;
rank: 219
score: 99.15022786458333
patch: end . get ( Calendar . HOUR _ OF _ DAY ) - start . get ( Calendar . MONTH ) ; }
rank: 219
score: 99.08949497767857
patch: seconds += $NUMBER$ * end . get ( Calendar . YEAR ) ;
rank: 219
score: 99.02299230238971
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; days += $NUMBER$ ;
rank: 219
score: 98.95822143554688
patch: days += $NUMBER$ * $NUMBER$ ; } days += $NUMBER$ ;
rank: 219
score: 98.89632568359374
patch: days += $NUMBER$ ; days end = $NUMBER$ ;
rank: 219
score: 98.87893676757812
patch: days += 0 ; while $NUMBER$ ;
rank: 219
score: 98.84632873535156
patch: days [ 1 ] = $NUMBER$ ;
rank: 220
score: 99.08944702148438
patch: months -= start . get ( Calendar . SECOND ) ;
rank: 220
score: 99.08115059988839
patch: hours = reduce CaMeL And CaMeL Correct ( tokens , y ) ;
rank: 220
score: 99.02294311523437
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; hours -= $NUMBER$ ;
rank: 220
score: 98.9578106219952
patch: days += $NUMBER$ * Date CaMeL Utils . ^ $NUMBER$ ; }
rank: 220
score: 98.89537353515625
patch: days += - days ; days += $NUMBER$ ;
rank: 220
score: 98.87891981336806
patch: days += $NUMBER$ ; try if $NUMBER$ ;
rank: 220
score: 98.84620361328125
patch: days += 0 ; } days += 1 ;
rank: 220
score: 98.84339488636364
patch: days += Math . min ( days , $NUMBER$ ;
rank: 221
score: 99.08103434244792
patch: minutes += reduce CaMeL And CaMeL Correct ( start ) ;
rank: 221
score: 99.0229263305664
patch: days += Token . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 221
score: 98.9576748934659
patch: days -= $NUMBER$ * Time CaMeL Zone . $NUMBER$ ;
rank: 221
score: 98.87827555338542
patch: days += $NUMBER$ ; days += start ;
rank: 221
score: 98.84332830255681
patch: end . days += $NUMBER$ ; days += $NUMBER$ ;
rank: 222
score: 99.14760954483695
patch: return reduce CaMeL And CaMeL Correct ( start , end , Calendar . HOUR _ OF _ DAY , hours ) ;
rank: 222
score: 99.08654106987848
patch: days += $NUMBER$ ; years -= 1 ;
rank: 222
score: 98.95741624098558
patch: days += $NUMBER$ * $NUMBER$ * Date CaMeL Utils . $NUMBER$ ;
rank: 222
score: 98.87813720703124
patch: days += $NUMBER$ ; else days = $NUMBER$ ;
rank: 222
score: 98.84514825994319
patch: days += 0 ; days += $NUMBER$ * $NUMBER$ ;
rank: 222
score: 98.84322509765624
patch: days += $NUMBER$ ; $NUMBER$ += $NUMBER$ ; }
rank: 223
score: 99.14744657628677
patch: int end = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 223
score: 99.02231959292763
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; years -= $NUMBER$ ;
rank: 223
score: 98.95738636363636
patch: days += $NUMBER$ ; } days += $NUMBER$ ; }
rank: 223
score: 98.89371066623264
patch: days * / days = - 1 ;
rank: 223
score: 98.87808566623264
patch: days += 1 ; while += $NUMBER$ ;
rank: 223
score: 98.84388316761364
patch: days += 0 ; if days += $NUMBER$ ; }
rank: 223
score: 98.84200613839286
patch: days += $NUMBER$ << $NUMBER$ ;
rank: 224
score: 99.14669799804688
patch: hours += reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY ) ;
rank: 224
score: 99.086181640625
patch: months += start . get ( Calendar . MILLISECOND ) ;
rank: 224
score: 99.08023507254464
patch: days = reduce CaMeL And CaMeL Correct ( tokens , y ) ;
rank: 224
score: 99.02217610677083
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) - 1 ;
rank: 224
score: 98.9573262532552
patch: days += $NUMBER$ * Time CaMeL Zone . get ( ;
rank: 224
score: 98.89366912841797
patch: days += ; days = $NUMBER$ ;
rank: 224
score: 98.87757110595703
patch: days days = $NUMBER$ + $NUMBER$ ;
rank: 224
score: 98.84381658380681
patch: days += 0 ; days days += $NUMBER$ ; }
rank: 224
score: 98.84144287109375
patch: start . add ( $NUMBER$ / $NUMBER$ ) ;
rank: 225
score: 99.146484375
patch: int hours = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 225
score: 99.085693359375
patch: len = end . get ( Calendar . YEAR ) ;
rank: 225
score: 99.02181667751736
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= 1 ; }
rank: 225
score: 98.95670572916667
patch: days += $NUMBER$ * DAY _ OF _ MONTH ; }
rank: 225
score: 98.893310546875
patch: days = days += $NUMBER$ ;
rank: 225
score: 98.87740652901786
patch: days += Math + $NUMBER$ ;
rank: 225
score: 98.84375678168402
patch: days ++ ; long days += $NUMBER$ ;
rank: 225
score: 98.84142303466797
patch: days -= $NUMBER$ + $NUMBER$ ; }
rank: 226
score: 99.14475504557292
patch: days += 1 ; minutes -= 1 ;
rank: 226
score: 99.08006795247395
patch: hours -= start . get ( Calendar . MILLISECOND ) ;
rank: 226
score: 99.02174682617188
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; hours += 1 ;
rank: 226
score: 98.95640733506944
patch: days += $NUMBER$ * time $NUMBER$ ; }
rank: 226
score: 98.89286295572917
patch: days += - 1 ; days ++ ;
rank: 226
score: 98.87636311848958
patch: days += 0 ; ;
rank: 226
score: 98.84334564208984
patch: days += $NUMBER$ + days ; }
rank: 227
score: 99.08469645182292
patch: minutes = start . get ( Calendar . MILLISECOND ) ;
rank: 227
score: 99.07966831752232
patch: days = start . get ( Calendar . YEAR ) - 1 ;
rank: 227
score: 99.0643310546875
patch: hours = reduce CaMeL And CaMeL Correct ( start , end ,
rank: 227
score: 99.02168543198529
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY - hours ;
rank: 227
score: 98.9556133563702
patch: days += ( $NUMBER$ * Date CaMeL Utils . $NUMBER$ ) ;
rank: 227
score: 98.89272054036458
patch: days += - $NUMBER$ ; += $NUMBER$ ;
rank: 227
score: 98.8763427734375
patch: days += $NUMBER$ ; else if $NUMBER$ ;
rank: 227
score: 98.84325493706598
patch: days += 0 ; } days ++ ;
rank: 228
score: 99.1442362467448
patch: hours += 1 ; }
rank: 228
score: 99.07953752790179
patch: milliseconds = end . get ( Calendar . MONTH ) - 1 ;
rank: 228
score: 99.02161458333333
patch: days += end . get ( Calendar . DAY _ OF _ MONTH )
rank: 228
score: 98.9550272623698
patch: if ( days += $NUMBER$ * Time CaMeL Zone . ;
rank: 228
score: 98.89230685763889
patch: days += $NUMBER$ ; days += ; ;
rank: 228
score: 98.87628851996527
patch: days += $NUMBER$ ; return $NUMBER$ ; }
rank: 228
score: 98.8429946899414
patch: days ; days += 1 ; }
rank: 228
score: 98.83951144748264
patch: days -- ; days += 1 ; }
rank: 229
score: 99.14307318793402
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; } }
rank: 229
score: 99.08353678385417
patch: seconds = start . get ( Calendar . MILLISECOND ) ;
rank: 229
score: 99.07870047433036
patch: days = end . get ( Calendar . YEAR ) - hours ;
rank: 229
score: 99.02131483289931
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ MONTH ) ;
rank: 229
score: 98.95467122395833
patch: days += $NUMBER$ * time / $NUMBER$ ;
rank: 229
score: 98.87557644314236
patch: days += $NUMBER$ ; days * 0 ;
rank: 230
score: 99.14263916015625
patch: hours += - start . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 230
score: 99.07815987723214
patch: months = end . get ( Calendar . MONTH ) - 1 ;
rank: 230
score: 99.020751953125
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; minutes -= 1 ;
rank: 230
score: 98.95452880859375
patch: days += $NUMBER$ * Time CaMeL Zone . MEDIUM ; }
rank: 230
score: 98.89193386501736
patch: days += start . days += $NUMBER$ ;
rank: 230
score: 98.87544080946181
patch: days += $NUMBER$ ; days = SECOND ;
rank: 230
score: 98.83734685724431
patch: start . days += $NUMBER$ ; days += 1 ;
rank: 231
score: 99.0833231608073
patch: start . set ( Calendar . YEAR , format ) ;
rank: 231
score: 99.05980428059895
patch: milliseconds = end . get ( Calendar . HOUR ) ;
rank: 231
score: 99.02065022786458
patch: days -= reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ MONTH ) ;
rank: 231
score: 98.95301402698864
patch: days += 1 * Date CaMeL Utils . $NUMBER$ ;
rank: 231
score: 98.89127197265626
patch: days += 0 ; days catch += 0 ;
rank: 231
score: 98.84213595920139
patch: days -= 0 ; days += 0 ;
rank: 231
score: 98.83706665039062
patch: start . days += $NUMBER$ + $NUMBER$ ; }
rank: 232
score: 99.14079483695652
patch: hours = Calendar . get CaMeL Instance ( timezone ) . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 232
score: 99.083251953125
patch: start . format ( start , end , Calendar . MINUTE ) ;
rank: 232
score: 99.02059936523438
patch: days -= reduce CaMeL And CaMeL Correct ( Calendar . HOUR _ OF _ DAY , days ) ;
rank: 232
score: 98.95298258463542
patch: days += $NUMBER$ * Time CaMeL Zone . LONG ; }
rank: 232
score: 98.87527126736111
patch: days += $NUMBER$ ; days -= 0 ;
rank: 232
score: 98.84160020616319
patch: days ; days += $NUMBER$ - $NUMBER$ ;
rank: 232
score: 98.83683638139205
patch: start . add ( $NUMBER$ * $NUMBER$ + $NUMBER$ ;
rank: 233
score: 99.13979763454861
patch: hours += 1 ; days += 1 ;
rank: 233
score: 99.08299763997395
patch: months += end . get ( Calendar . MINUTE ) ;
rank: 233
score: 99.07494099934895
patch: seconds = Token . get CaMeL Instance ( timezone ) ;
rank: 233
score: 99.02042846679687
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; months -= 1 ;
rank: 233
score: 98.9527079264323
patch: long days = $NUMBER$ * Time CaMeL Zone . MINUTE ;
rank: 233
score: 98.88927459716797
patch: days = $NUMBER$ ; if $NUMBER$ ;
rank: 233
score: 98.8730712890625
patch: days += $NUMBER$ ; days += 0 ; days
rank: 233
score: 98.84062957763672
patch: days ; days += 0 ; }
rank: 233
score: 98.8361572265625
patch: days ++ ; days += $NUMBER$ + $NUMBER$ ;
rank: 234
score: 99.1394904641544
patch: hours -= start . get ( Calendar . DAY _ OF _ YEAR ) ; }
rank: 234
score: 99.074462890625
patch: days = end . get ( Calendar . YEAR ) - millis ;
rank: 234
score: 99.01982678865132
patch: days -= $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= $NUMBER$ ;
rank: 234
score: 98.95197211371527
patch: days += $NUMBER$ * $NUMBER$ ; ; }
rank: 234
score: 98.88859049479167
patch: days += $NUMBER$ ; days += start .
rank: 234
score: 98.87291124131944
patch: days += $NUMBER$ ; while $NUMBER$ ; ;
rank: 234
score: 98.83540344238281
patch: double days = days + $NUMBER$ ;
rank: 235
score: 99.138671875
patch: hours -= - start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 235
score: 99.07442220052083
patch: hours += $NUMBER$ ; days -= $NUMBER$ ;
rank: 235
score: 99.019775390625
patch: days -= reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY , days ) ;
rank: 235
score: 98.95187717013889
patch: days += $NUMBER$ * millis + $NUMBER$ ;
rank: 235
score: 98.88837348090277
patch: days -- ; days else { break ;
rank: 235
score: 98.8726318359375
patch: days += $NUMBER$ ; days = $NUMBER$ ; else
rank: 235
score: 98.83538818359375
patch: start . add ( $NUMBER$ + $NUMBER$ ) ;
rank: 236
score: 99.13858695652173
patch: start . set ( Calendar . DAY _ OF _ MONTH , format . get ( Calendar . MONTH ) ) ;
rank: 236
score: 99.07439313616071
patch: hours = end . get ( Calendar . MONTH ) - 1 ;
rank: 236
score: 99.05874633789062
patch: hours -= start . get ( Calendar . MINUTE ) ;
rank: 236
score: 99.0197394875919
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds += 1 ;
rank: 236
score: 98.95126577524039
patch: days += 1 * Date CaMeL Utils . $NUMBER$ + $NUMBER$ ;
rank: 236
score: 98.88785129123264
patch: days += 0 ; days += days ;
rank: 236
score: 98.87152971540179
patch: days else days += $NUMBER$ ;
rank: 236
score: 98.83980305989583
patch: days += Math . MAX _ VALUE ;
rank: 236
score: 98.8348388671875
patch: days += Math . abs ( days * $NUMBER$ ;
rank: 237
score: 99.13852108226104
patch: hours += - start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 237
score: 99.07408796037946
patch: milliseconds = end . get ( Calendar . YEAR ) - start ;
rank: 237
score: 99.01942138671875
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; years -= 1 ;
rank: 237
score: 98.95074462890625
patch: days += $NUMBER$ * Date CaMeL Utils . MINUTE ; ;
rank: 237
score: 98.88761138916016
patch: days else days += - 1 ;
rank: 237
score: 98.87133110894098
patch: days += $NUMBER$ ; days <= $NUMBER$ ;
rank: 237
score: 98.8394775390625
patch: days += $NUMBER$ - $NUMBER$ ; if ;
rank: 237
score: 98.8343505859375
patch: days -- ; days -= $NUMBER$ ; }
rank: 238
score: 99.1380615234375
patch: reduce CaMeL And CaMeL Correct ( start , end , Calendar . DAY _ OF _ MONTH , hours ) ;
rank: 238
score: 99.08164469401042
patch: months = format . get ( Calendar . YEAR ) ;
rank: 238
score: 99.07346598307292
patch: minutes += end . get ( Calendar . SECOND ) ;
rank: 238
score: 99.01935424804688
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; years -= 1 ;
rank: 238
score: 98.9504727450284
patch: days += 1 * Time CaMeL Zone . $NUMBER$ ;
rank: 238
score: 98.86935763888889
patch: days += 1 ; while += 1 ;
rank: 238
score: 98.8388671875
patch: days days += 0 ; }
rank: 239
score: 99.13698323567708
patch: hours -= - start . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 239
score: 99.08141072591145
patch: months += start . get ( Calendar . SECOND ) ;
rank: 239
score: 99.05722045898438
patch: seconds = end . get ( Calendar . HOUR ) ;
rank: 239
score: 99.0189697265625
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; days += $NUMBER$ ;
rank: 239
score: 98.94992897727273
patch: days += $NUMBER$ * Date CaMeL Utils . ; ;
rank: 239
score: 98.88687744140626
patch: days += 1 ; days += - $NUMBER$ ;
rank: 239
score: 98.86916097005208
patch: days += 0 ; while += $NUMBER$ ;
rank: 239
score: 98.83406372070313
patch: long days = days * $NUMBER$ + $NUMBER$ ;
rank: 240
score: 99.13683551290761
patch: return reduce CaMeL And CaMeL Correct ( start , end , Calendar . HOUR _ OF _ DAY , days ) ;
rank: 240
score: 99.08138602120536
patch: days = ( end . get ( Calendar . YEAR ) ) ;
rank: 240
score: 99.07310994466145
patch: minutes = reduce CaMeL And CaMeL Correct ( start ) ;
rank: 240
score: 99.01835632324219
patch: days < end . get ( Calendar . HOUR _ OF _ DAY ) {
rank: 240
score: 98.94988141741071
patch: days += $NUMBER$ * SECOND ;
rank: 240
score: 98.88687472873264
patch: days += days ; += - 1 ;
rank: 240
score: 98.8687744140625
patch: days += $NUMBER$ ; ; ;
rank: 240
score: 98.83770751953125
patch: days += $NUMBER$ ; days += length ;
rank: 240
score: 98.83378462357955
patch: days += $NUMBER$ ; } start . set ( ;
rank: 241
score: 99.13678448016827
patch: hours -= reduce CaMeL And CaMeL Correct ( start , end ,
rank: 241
score: 99.08070882161458
patch: seconds = start . get ( Calendar . MONTH ) ;
rank: 241
score: 99.0723876953125
patch: months -= end . get ( Calendar . MONTH ) ;
rank: 241
score: 98.9498291015625
patch: days += $NUMBER$ * Time CaMeL Zone . mid + $NUMBER$ ;
rank: 241
score: 98.86853705512152
patch: days += $NUMBER$ ; if $NUMBER$ ; ;
rank: 241
score: 98.8376131924716
patch: days += 0 ; days += $NUMBER$ / $NUMBER$ ;
rank: 241
score: 98.83374633789063
patch: days += Math . round ( days ) ;
rank: 242
score: 99.13638969089673
patch: return reduce CaMeL And CaMeL Correct ( start , end , Calendar . DAY _ OF _ MONTH , hours ) ;
rank: 242
score: 99.07919311523438
patch: years = end . get ( Calendar . MINUTE ) ;
rank: 242
score: 99.07233537946429
patch: months = end . get ( Calendar . YEAR ) - days ;
rank: 242
score: 99.01789293791118
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= $NUMBER$ ;
rank: 242
score: 98.94971313476563
patch: days += $NUMBER$ ; time += 1 ; }
rank: 242
score: 98.88602905273437
patch: days = $NUMBER$ ; days = - $NUMBER$ ;
rank: 242
score: 98.83708953857422
patch: days += $NUMBER$ - days $NUMBER$ ;
rank: 243
score: 99.07893880208333
patch: minutes = start . get ( Calendar . MINUTE ) ;
rank: 243
score: 99.01788940429688
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; days += 1 ;
rank: 243
score: 98.94963921440973
patch: days += $NUMBER$ * time - time ;
rank: 243
score: 98.8849609375
patch: days += - $NUMBER$ ; days -- ; }
rank: 243
score: 98.86728244357639
patch: days += null ; days = $NUMBER$ ;
rank: 243
score: 98.83662414550781
patch: days += $NUMBER$ ; } days ;
rank: 244
score: 99.13610121783088
patch: long millis = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 244
score: 99.07884870256696
patch: seconds += $NUMBER$ * start . get ( Calendar . YEAR ) ;
rank: 244
score: 99.07101876395089
patch: minutes = end . get ( Calendar . MILLISECOND ) - 1 ;
rank: 244
score: 99.01762120863971
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; years += $NUMBER$ ;
rank: 244
score: 98.9495380108173
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ ; ; }
rank: 244
score: 98.88469696044922
patch: days += $NUMBER$ ; days += ;
rank: 244
score: 98.8668212890625
patch: days += $NUMBER$ ; days days += 0 ;
rank: 244
score: 98.8365478515625
patch: days ; days += $NUMBER$ * $NUMBER$ ;
rank: 244
score: 98.83024766710069
patch: days += $NUMBER$ ; } return time ;
rank: 245
score: 99.07859293619792
patch: days -= end . get ( Calendar . SECOND ) ;
rank: 245
score: 99.01740112304688
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; months += 1 ;
rank: 245
score: 98.94952862079327
patch: days += $NUMBER$ * $NUMBER$ * Time CaMeL Zone . YEAR ;
rank: 245
score: 98.866650390625
patch: days += $NUMBER$ ; days = $NUMBER$ + ;
rank: 245
score: 98.83601684570313
patch: days ++ ; else days += $NUMBER$ ; }
rank: 245
score: 98.82926802201705
patch: start . clear ( ) ; days += 1 ;
rank: 246
score: 99.13539817116477
patch: days += reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY , hours ) ;
rank: 246
score: 99.07830810546875
patch: seconds = start . get ( Calendar . MINUTE ) ;
rank: 246
score: 99.06985909598214
patch: minutes += reduce CaMeL And CaMeL Correct ( tokens , y ) ;
rank: 246
score: 99.01712472098214
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; years -= $NUMBER$ ;
rank: 246
score: 98.94912484975961
patch: days += $NUMBER$ * Time CaMeL Zone . format ( days ;
rank: 246
score: 98.86641235351563
patch: days += 1 ; } days = $NUMBER$ ;
rank: 246
score: 98.83570445667614
patch: days += $NUMBER$ * days ; days += $NUMBER$ ;
rank: 246
score: 98.8287353515625
patch: end . set ( $NUMBER$ , $NUMBER$ ) ; }
rank: 247
score: 99.13482111150569
patch: reduce CaMeL And CaMeL Correct ( start , end , Calendar . HOUR _ OF _ DAY , hours ) ;
rank: 247
score: 99.07793317522321
patch: start . format ( start , end , Calendar . MILLISECOND ) ;
rank: 247
score: 99.06976318359375
patch: minutes = end . get ( timezone ) ;
rank: 247
score: 99.01698811848958
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) - days ;
rank: 247
score: 98.94856770833333
patch: days += $NUMBER$ * Time CaMeL Zone . ; } }
rank: 247
score: 98.86621965680804
patch: days += 1 ; days ;
rank: 247
score: 98.82692260742188
patch: long days = days ; days += $NUMBER$ ;
rank: 248
score: 99.05213419596355
patch: seconds -= end . get ( Calendar . MINUTE ) ;
rank: 248
score: 99.01695667613636
patch: days += reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY , days ) ;
rank: 248
score: 98.88278198242188
patch: days += 1 ; days += - 1 ;
rank: 248
score: 98.86603461371527
patch: days += $NUMBER$ ; days * 1 ;
rank: 248
score: 98.83380889892578
patch: days += $NUMBER$ ; days ; }
rank: 248
score: 98.826904296875
patch: start . set ( $NUMBER$ + $NUMBER$ + $NUMBER$ ;
rank: 249
score: 99.13451038707386
patch: days += reduce CaMeL And CaMeL Correct ( start , Calendar . DAY _ OF _ MONTH , hours ) ;
rank: 249
score: 99.07738240559895
patch: days = Token . get CaMeL Instance ( format ) ;
rank: 249
score: 99.06857299804688
patch: minutes = end . get ( Calendar . HOUR ) ;
rank: 249
score: 99.05191040039062
patch: seconds += end . get ( Calendar . MILLISECOND ) ;
rank: 249
score: 99.01647231158088
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; milliseconds -= 1 ;
rank: 249
score: 98.94784545898438
patch: days += days + $NUMBER$ ; }
rank: 249
score: 98.86595153808594
patch: days else if $NUMBER$ = $NUMBER$ ;
rank: 249
score: 98.82587432861328
patch: days = $NUMBER$ + $NUMBER$ ; }
rank: 250
score: 99.13410101996527
patch: hours += end . get ( Calendar . DAY _ OF _ MONTH ) ; } }
rank: 250
score: 99.07734898158482
patch: days = $NUMBER$ - start . get ( Calendar . YEAR ) ;
rank: 250
score: 99.06833902994792
patch: hours += start . get ( Calendar . SECOND ) ;
rank: 250
score: 98.94756610576923
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ + MONTH ;
rank: 250
score: 98.88222249348958
patch: days += - $NUMBER$ ; days ++ ;
rank: 250
score: 98.86539713541667
patch: days = $NUMBER$ + $NUMBER$ ; break ;
rank: 250
score: 98.83363172743056
patch: days += 0 ; days += length ;
rank: 251
score: 99.133544921875
patch: int millis = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 251
score: 99.0771484375
patch: seconds += start . get ( Calendar . SECOND ) ;
rank: 251
score: 99.01555524553571
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= $NUMBER$ ;
rank: 251
score: 98.88065592447917
patch: days += 0 ; days += true ;
rank: 251
score: 98.86518012152777
patch: days += $NUMBER$ ; days += ; {
rank: 251
score: 98.83318536931819
patch: days += $NUMBER$ ; days days += $NUMBER$ ; }
rank: 251
score: 98.82575017755681
patch: days += Math . abs ( days / $NUMBER$ ;
rank: 252
score: 99.13345157398896
patch: minutes += end . get ( Calendar . DAY _ OF _ YEAR ) ; }
rank: 252
score: 99.04942830403645
patch: days -= start . get ( Calendar . HOUR ) ;
rank: 252
score: 99.01516241776316
patch: if ( Token . contains CaMeL Token CaMeL With CaMeL Value ( tokens , y ) ) {
rank: 252
score: 98.94708721454327
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ + SECOND ;
rank: 252
score: 98.87930297851562
patch: days += 0 ; days catch += $STRING$ ;
rank: 252
score: 98.86498345269098
patch: days += $NUMBER$ + $NUMBER$ ; ; ;
rank: 252
score: 98.83116566051136
patch: days += $NUMBER$ ? $NUMBER$ + $NUMBER$ : $NUMBER$ ;
rank: 252
score: 98.82533957741477
patch: days += $NUMBER$ ; ; days += $NUMBER$ ; }
rank: 253
score: 99.13284462376645
patch: reduce CaMeL And CaMeL Correct ( start , end , Calendar . DAY _ OF _ MONTH ,
rank: 253
score: 99.01515502929688
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; years -= $NUMBER$ ;
rank: 253
score: 98.94706217447917
patch: days += $NUMBER$ ; end . set ( days ) ;
rank: 253
score: 98.86416015625
patch: days += $NUMBER$ + $NUMBER$ ; return $NUMBER$ ;
rank: 253
score: 98.83104596819196
patch: days days += $NUMBER$ ; }
rank: 253
score: 98.82523600260417
patch: days ++ ; days -= 1 ; }
rank: 254
score: 99.13211398654514
patch: days += 1 ; years -= 1 ;
rank: 254
score: 99.06743512834821
patch: minutes = end . get ( Calendar . MILLISECOND ) - $NUMBER$ ;
rank: 254
score: 99.01497156479779
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY - $NUMBER$ ;
rank: 254
score: 98.94677734375
patch: days += $NUMBER$ + $NUMBER$ * Date CaMeL Utils . $NUMBER$ ;
rank: 254
score: 98.87841186523437
patch: days * * / { days += $NUMBER$ ;
rank: 254
score: 98.86363389756944
patch: days = 1 ; days = $NUMBER$ ;
rank: 254
score: 98.83089192708333
patch: days += 0 ; } else { days += $NUMBER$ ;
rank: 255
score: 99.1312945822011
patch: start . set ( Calendar . HOUR _ OF _ DAY , format . get ( Calendar . YEAR ) ) ;
rank: 255
score: 99.07565307617188
patch: start . set ( Calendar . MILLISECOND , $NUMBER$ ) ;
rank: 255
score: 99.0674336751302
patch: hours += reduce CaMeL And CaMeL Correct ( start ) ;
rank: 255
score: 99.0147705078125
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= 1 ; }
rank: 255
score: 98.94666466346153
patch: days += $NUMBER$ * Date CaMeL Utils . + $NUMBER$ ; ;
rank: 255
score: 98.87832980685764
patch: days * ; { days += 1 ;
rank: 255
score: 98.86354064941406
patch: days += $NUMBER$ ; break ; ;
rank: 255
score: 98.82417436079545
patch: days += $NUMBER$ ; } days += $NUMBER$ ; ;
rank: 256
score: 99.12990993923611
patch: days -= 1 ; days += 1 ;
rank: 256
score: 99.06664167131696
patch: hours = end . get ( Calendar . YEAR ) - start ;
rank: 256
score: 99.01467895507812
patch: days -= reduce CaMeL And CaMeL Correct ( start , Calendar . MILLISECOND ) ;
rank: 256
score: 98.94608931107955
patch: days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ )
rank: 256
score: 98.86224975585938
patch: days = $NUMBER$ ; ; days = $NUMBER$ ;
rank: 256
score: 98.83078002929688
patch: days += 0 ; } days -= $NUMBER$ ;
rank: 257
score: 99.12733677455357
patch: end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 257
score: 99.0665283203125
patch: hours += end . get ( Calendar . MILLISECOND ) ;
rank: 257
score: 99.01467895507812
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; days += 1 ;
rank: 257
score: 98.9457120028409
patch: days += $NUMBER$ * Time CaMeL Zone . days ;
rank: 257
score: 98.87745496961806
patch: days += $NUMBER$ ; days -- ; *
rank: 257
score: 98.83042399088542
patch: days ++ ; days += $NUMBER$ ; ;
rank: 257
score: 98.82338460286458
patch: days -= $NUMBER$ ? $NUMBER$ : $NUMBER$ ;
rank: 258
score: 99.1265869140625
patch: return reduce CaMeL And CaMeL Correct ( start , end , pad CaMeL With CaMeL Zeros ) ;
rank: 258
score: 99.07380894252232
patch: hours = end . get ( Calendar . YEAR ) ; break ;
rank: 258
score: 99.06612723214286
patch: days = end . get ( Calendar . SECOND ) - 1 ;
rank: 258
score: 99.01463012695312
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; days -= $NUMBER$ ;
rank: 258
score: 98.86162719726562
patch: days days = $NUMBER$ ; days = $NUMBER$ ;
rank: 258
score: 98.82972301136364
patch: days += $NUMBER$ + $NUMBER$ ; days += 1 ;
rank: 258
score: 98.82303466796876
patch: days = $NUMBER$ ; } days += $NUMBER$ ;
rank: 259
score: 99.12648607336956
patch: Calendar . get CaMeL Instance ( timezone ) . set CaMeL Time ( start CaMeL Millis , end CaMeL Millis ) ;
rank: 259
score: 99.06529889787946
patch: hours = end . get ( Calendar . MONTH ) - $NUMBER$ ;
rank: 259
score: 99.04552350725446
patch: months = end . get ( Calendar . YEAR ) - start ;
rank: 259
score: 99.01444498697917
patch: days = Calendar . get CaMeL Instance ( Calendar . DAY _ OF _ YEAR ) ;
rank: 259
score: 98.94544396033653
patch: days += $NUMBER$ * $NUMBER$ * Date CaMeL Utils . days ;
rank: 259
score: 98.87708197699652
patch: days += $NUMBER$ ; days < 0 ;
rank: 259
score: 98.86127319335938
patch: days += $NUMBER$ ; if $NUMBER$ += $NUMBER$ ;
rank: 259
score: 98.82250298394098
patch: days = $NUMBER$ * $NUMBER$ + 1 ;
rank: 260
score: 99.0718994140625
patch: seconds = $NUMBER$ + start . get ( Calendar . YEAR ) ;
rank: 260
score: 99.06519232855902
patch: hours += 1 ; years -= 1 ;
rank: 260
score: 98.94534067007211
patch: days += $NUMBER$ * / $NUMBER$ * Date CaMeL Utils . ;
rank: 260
score: 98.86063639322917
patch: days += 1 ; ;
rank: 260
score: 98.82131125710227
patch: start . start ( $NUMBER$ * $NUMBER$ * $NUMBER$ ;
rank: 261
score: 99.12588321461396
patch: minutes -= - start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 261
score: 99.07159423828125
patch: days = end . get ( format , end CaMeL Millis ) ;
rank: 261
score: 99.06437465122768
patch: seconds = end . get ( Calendar . MONTH ) - days ;
rank: 261
score: 99.01263748972039
patch: days -= 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= $NUMBER$ ;
rank: 261
score: 98.94084930419922
patch: days += $NUMBER$ * MINUTE ; }
rank: 261
score: 98.87704128689236
patch: days += - 1 ; return $NUMBER$ ;
rank: 261
score: 98.86041937934027
patch: days += $NUMBER$ ; if $NUMBER$ ++ ;
rank: 261
score: 98.82093505859375
patch: days += Math . max ( days ) ;
rank: 262
score: 99.12584339488636
patch: hours += reduce CaMeL And CaMeL Correct ( start , Calendar . DAY _ OF _ MONTH , days ) ;
rank: 262
score: 99.01254611545139
patch: days += reduce CaMeL And CaMeL Correct ( start , end , Calendar . SECOND ) ;
rank: 262
score: 98.94002278645833
patch: days += $NUMBER$ * Date CaMeL Utils . floor ( ;
rank: 262
score: 98.87606811523438
patch: days += 0 ; += false ;
rank: 262
score: 98.86041259765625
patch: days += $STRING$ ; days += 0 ;
rank: 262
score: 98.8277587890625
patch: days ++ ; else days += $NUMBER$ ;
rank: 262
score: 98.82003445095486
patch: start . set ( $NUMBER$ , $NUMBER$ ;
rank: 263
score: 99.12563189338235
patch: int minutes = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 263
score: 99.06315394810268
patch: milliseconds = end . get ( Calendar . MONTH ) - $NUMBER$ ;
rank: 263
score: 99.01239013671875
patch: days -= 1 ; years -= 1 ;
rank: 263
score: 98.9391581217448
patch: days += $NUMBER$ * Time CaMeL Zone . SECOND ; ;
rank: 263
score: 98.82711181640624
patch: days -= 0 ; days += $NUMBER$ ; }
rank: 263
score: 98.82000732421875
patch: days += $NUMBER$ > $NUMBER$ ; }
rank: 264
score: 99.12525523792614
patch: days += reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY , days ) ;
rank: 264
score: 99.07066127232143
patch: seconds = reduce CaMeL And CaMeL Correct ( start , false ) ;
rank: 264
score: 99.06263078962054
patch: days = end . get ( Calendar . SECOND ) - $NUMBER$ ;
rank: 264
score: 98.938720703125
patch: days += $NUMBER$ * Long . parse CaMeL Int ( ;
rank: 264
score: 98.87577989366319
patch: days += - 1 ; if $NUMBER$ ;
rank: 264
score: 98.86020236545139
patch: days += $NUMBER$ ; days $NUMBER$ ; ;
rank: 265
score: 99.124755859375
patch: minutes -= - start . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 265
score: 99.06250871930804
patch: seconds = end . get ( Calendar . YEAR ) - years ;
rank: 265
score: 99.01228637695313
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; months -= $NUMBER$ ;
rank: 265
score: 98.93815104166667
patch: days += $NUMBER$ * Time CaMeL Zone . ; } ;
rank: 265
score: 98.87477416992188
patch: days = $NUMBER$ ; days = - 1 ;
rank: 265
score: 98.86002197265626
patch: days = $NUMBER$ ; days += $NUMBER$ ; ;
rank: 266
score: 99.1247199563419
patch: minutes = end . get ( Calendar . DAY _ OF _ YEAR ) ; }
rank: 266
score: 99.07060895647321
patch: milliseconds = reduce CaMeL And CaMeL Correct ( start , false ) ;
rank: 266
score: 99.06209019252232
patch: seconds = end . get ( Calendar . MILLISECOND ) - 1 ;
rank: 266
score: 99.01196899414063
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; days -= $NUMBER$ ;
rank: 266
score: 98.93768310546875
patch: days += $NUMBER$ * days ; } ;
rank: 266
score: 98.87474822998047
patch: days += ; days += 1 ;
rank: 266
score: 98.85977172851562
patch: days += $NUMBER$ ; else if += 1 ;
rank: 266
score: 98.8260498046875
patch: days += length ; days += $NUMBER$ ;
rank: 266
score: 98.81931559244792
patch: days += Math . abs ( days ;
rank: 267
score: 99.12460166529605
patch: end . set ( end . get ( Calendar . DAY _ OF _ YEAR ) ) ;
rank: 267
score: 99.07023402622768
patch: months = end . get ( Calendar . YEAR ) ; * /
rank: 267
score: 99.06181989397321
patch: seconds = end . get ( Calendar . YEAR ) - hours ;
rank: 267
score: 99.01189826516544
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; minutes += 1 ;
rank: 267
score: 98.9332504272461
patch: days += $NUMBER$ * millis ; }
rank: 267
score: 98.8743896484375
patch: days = $NUMBER$ ; days return $NUMBER$ ;
rank: 267
score: 98.85971069335938
patch: days += $NUMBER$ ; days / /
rank: 267
score: 98.82598198784723
patch: days += $NUMBER$ - days += $NUMBER$ ;
rank: 268
score: 99.12404378255208
patch: days += 1 ; hours += 1 ;
rank: 268
score: 99.05889020647321
patch: months = end . get ( Calendar . MONTH ) - $NUMBER$ ;
rank: 268
score: 99.01121884300595
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds -= 1 ;
rank: 268
score: 98.9329833984375
patch: days += $NUMBER$ * Time CaMeL Zone . abs ( ;
rank: 268
score: 98.8591079711914
patch: days $NUMBER$ ; days = $NUMBER$ ;
rank: 268
score: 98.82591552734375
patch: days [ $NUMBER$ ] = $NUMBER$ - $NUMBER$ ;
rank: 268
score: 98.81709798177083
patch: days += $NUMBER$ ; } $NUMBER$ * /
rank: 269
score: 99.05472819010417
patch: hours += $NUMBER$ ; seconds -= 1 ;
rank: 269
score: 99.03863525390625
patch: milliseconds -= start . get ( Calendar . MINUTE ) ;
rank: 269
score: 98.9326883951823
patch: days += $NUMBER$ * Time CaMeL Zone . signum ( ;
rank: 269
score: 98.87339952256944
patch: days += $NUMBER$ ; days -- * /
rank: 269
score: 98.85890028211806
patch: days += $NUMBER$ ; ; days -- ;
rank: 269
score: 98.82563920454545
patch: days += 0 ; } days += $NUMBER$ ; }
rank: 269
score: 98.81486372514205
patch: days += Math . max ( $NUMBER$ , $NUMBER$ ;
rank: 270
score: 99.12385110294117
patch: long end = end . get ( Calendar . DAY _ OF _ MONTH ) ;
rank: 270
score: 99.069580078125
patch: months = days - start . get ( Calendar . YEAR ) ;
rank: 270
score: 99.0381591796875
patch: milliseconds -= 1 ;
rank: 270
score: 99.0098876953125
patch: days += Token . contains ( Calendar . DAY _ OF _ YEAR ) ;
rank: 270
score: 98.93175159801136
patch: days += $NUMBER$ * Time CaMeL Zone . UTC ;
rank: 270
score: 98.87264404296874
patch: days += - $NUMBER$ ; if += 1 ;
rank: 270
score: 98.85541381835938
patch: days += 1 ; days += $NUMBER$ ; ;
rank: 270
score: 98.8255859375
patch: days += 1 ; days += 1 ; }
rank: 270
score: 98.814697265625
patch: start . add ( $NUMBER$ * $NUMBER$ / $NUMBER$ ;
rank: 271
score: 99.12313232421874
patch: reduce CaMeL And CaMeL Correct ( start , end , Calendar . DAY _ OF _ MONTH ) ;
rank: 271
score: 99.05457414899554
patch: days = end . get ( Calendar . MONTH ) - start ;
rank: 271
score: 98.93098449707031
patch: days += $NUMBER$ * $NUMBER$ * ;
rank: 271
score: 98.87255859375
patch: days += $NUMBER$ ; } if += $NUMBER$ ;
rank: 271
score: 98.85502319335937
patch: days += $NUMBER$ ; if $NUMBER$ + $NUMBER$ /
rank: 271
score: 98.82537841796875
patch: days += 0 ; } return $NUMBER$ ;
rank: 271
score: 98.81464301215277
patch: days += $NUMBER$ ; case - 1 :
rank: 272
score: 99.12295297475961
patch: days -= - start . get ( Calendar . YEAR ) ;
rank: 272
score: 99.06868489583333
patch: end . set ( Calendar . YEAR , millis ) ;
rank: 272
score: 99.05437554253473
patch: hours += $NUMBER$ ; years -= $NUMBER$ ;
rank: 272
score: 99.03665161132812
patch: months -= start . get ( Calendar . HOUR ) ;
rank: 272
score: 99.00935872395833
patch: days = ( Date CaMeL Utils . MILLIS _ PER _ DAY ) ;
rank: 272
score: 98.93082682291667
patch: days += $NUMBER$ * Long . MAX _ VALUE ; }
rank: 272
score: 98.8721435546875
patch: days += - 1 ; if += 1 ;
rank: 272
score: 98.82522922092014
patch: days [ days ++ ] += $NUMBER$ ;
rank: 272
score: 98.81279907226562
patch: days += Math . ceil ( days ) ;
rank: 273
score: 99.06864420572917
patch: hours = start . get ( Calendar . MINUTE ) ;
rank: 273
score: 99.05118136935764
patch: hours += 1 ; days -= $NUMBER$ ;
rank: 273
score: 99.00909064797794
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; minutes -= $NUMBER$ ;
rank: 273
score: 98.93070475260417
patch: days += $NUMBER$ * Time CaMeL Zone . * $NUMBER$ ;
rank: 273
score: 98.87186008029514
patch: days * / { days += 1 ;
rank: 273
score: 98.85474989149306
patch: days += 0 ; while += 1 ;
rank: 273
score: 98.81275634765625
patch: days = days ; days += $NUMBER$ ; }
rank: 274
score: 99.12210422092014
patch: hours += reduce CaMeL And CaMeL Correct ( format , pad CaMeL With CaMeL Zeros ) ;
rank: 274
score: 99.00877685546875
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; minutes -= 1 ;
rank: 274
score: 98.92948774857955
patch: time += $NUMBER$ * Date CaMeL Utils . $NUMBER$ ;
rank: 274
score: 98.85381401909723
patch: days += ; { days = $NUMBER$ ;
rank: 274
score: 98.82470703125
patch: days [ days ] += $NUMBER$ ; }
rank: 274
score: 98.81228637695312
patch: start . set ; days += $NUMBER$ ; }
rank: 275
score: 99.12184448242188
patch: minutes += reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY ) ;
rank: 275
score: 99.0670878092448
patch: start . set ( Calendar . YEAR , days ) ;
rank: 275
score: 99.04876708984375
patch: minutes += $NUMBER$ ; days -= 1 ;
rank: 275
score: 99.00874408922698
patch: long end = Calendar . get CaMeL Instance ( Calendar . DAY _ OF _ MONTH ) ;
rank: 275
score: 98.9287821451823
patch: days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ / ;
rank: 275
score: 98.85374145507812
patch: days = $NUMBER$ ; days days += $NUMBER$ ;
rank: 275
score: 98.81218927556819
patch: days += $NUMBER$ ; } end . set ( ;
rank: 276
score: 99.065673828125
patch: start . set ( Calendar . YEAR , years ) ;
rank: 276
score: 99.00851922286184
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; minutes -= 1 ;
rank: 276
score: 98.92877752130681
patch: days += 1 * Time CaMeL Zone . MINUTE ;
rank: 276
score: 98.87124972873264
patch: days += 0 ; days += ( ;
rank: 276
score: 98.82352701822917
patch: days = $NUMBER$ * days + $NUMBER$ ;
rank: 276
score: 98.81200062144886
patch: long days = end . get ( $NUMBER$ ) ;
rank: 277
score: 99.06465366908482
patch: days = end . get ( Calendar . YEAR ) ; break ;
rank: 277
score: 99.04694281684027
patch: hours += $NUMBER$ ; days += 1 ;
rank: 277
score: 99.00774468315973
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) - $NUMBER$ ;
rank: 277
score: 98.87111206054688
patch: days += - 1 ; days return $NUMBER$ ;
rank: 277
score: 98.85208129882812
patch: days = $NUMBER$ ; += 1 ;
rank: 277
score: 98.82285563151042
patch: days ; days ; days += $NUMBER$ ;
rank: 277
score: 98.81043836805556
patch: days += 1 ; days -= $NUMBER$ ;
rank: 278
score: 99.12105129076087
patch: start . set ( Calendar . HOUR _ OF _ DAY , format . get ( Calendar . MONTH ) ) ;
rank: 278
score: 99.06240844726562
patch: end . get ( Calendar . YEAR ) ;
rank: 278
score: 99.03214518229167
patch: seconds -= reduce CaMeL And CaMeL Correct ( $NUMBER$ ) ;
rank: 278
score: 99.007666015625
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY - months ;
rank: 278
score: 98.92824009486607
patch: days += 1 * $NUMBER$ ;
rank: 278
score: 98.8224609375
patch: days ++ ; } else days += $NUMBER$ ;
rank: 278
score: 98.810302734375
patch: end . set ( $NUMBER$ * $NUMBER$ * $NUMBER$ ;
rank: 279
score: 99.12075966282895
patch: Calendar . get CaMeL Instance ( timezone ) . set CaMeL Time ( Calendar . MILLISECOND ) ;
rank: 279
score: 98.92752075195312
patch: days += $NUMBER$ ; continue ; }
rank: 279
score: 98.85157775878906
patch: days += $NUMBER$ ; days / ;
rank: 280
score: 99.12070534446023
patch: reduce CaMeL And CaMeL Correct ( start , end , Calendar . HOUR _ OF _ DAY , days ) ;
rank: 280
score: 99.06126912434895
patch: days = days . get ( Calendar . YEAR ) ;
rank: 280
score: 99.04212103949652
patch: hours += $NUMBER$ ; years += $NUMBER$ ;
rank: 280
score: 99.02603149414062
patch: seconds -= end . get ( Calendar . MILLISECOND ) ;
rank: 280
score: 99.00719604492187
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ YEAR , days ) ;
rank: 280
score: 98.86922454833984
patch: days += days ; += $NUMBER$ ;
rank: 280
score: 98.85140991210938
patch: days = $NUMBER$ + $NUMBER$ ; += $NUMBER$ ;
rank: 280
score: 98.82222202845982
patch: days ++ ; return $NUMBER$ ;
rank: 280
score: 98.80908966064453
patch: double days = days + 1 ;
rank: 281
score: 99.12028672960069
patch: minutes += - start . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 281
score: 99.06087820870536
patch: days += $NUMBER$ * end . get ( Calendar . MONTH ) ;
rank: 281
score: 99.0418701171875
patch: hours += 1 ; seconds -= 1 ;
rank: 281
score: 99.00682157628677
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; months += 1 ;
rank: 281
score: 98.92742365056819
patch: days += $NUMBER$ * Time CaMeL Zone . Long ;
rank: 281
score: 98.869140625
patch: days += $NUMBER$ ; return days $NUMBER$ ;
rank: 281
score: 98.851318359375
patch: days days += $NUMBER$ ; return $NUMBER$ ;
rank: 281
score: 98.82186889648438
patch: days += 0 ; } days ;
rank: 282
score: 99.12010779747597
patch: days -= - start . get ( Calendar . MONTH ) ;
rank: 282
score: 99.06085815429688
patch: end . set ( Calendar . YEAR ) ;
rank: 282
score: 99.00667531866776
patch: days -= $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; months -= 1 ;
rank: 282
score: 98.92570356889205
patch: time += $NUMBER$ * Time CaMeL Zone . $NUMBER$ ;
rank: 282
score: 98.86866590711806
patch: days += days ; days -- ; }
rank: 282
score: 98.85001831054687
patch: days += $NUMBER$ ; days = $NUMBER$ ; $NUMBER$
rank: 282
score: 98.82142639160156
patch: days += 1 ; break $NUMBER$ ;
rank: 282
score: 98.80882917131696
patch: days ++ ; days -- ;
rank: 283
score: 99.1197868795956
patch: hours -= end . get ( Calendar . DAY _ OF _ YEAR ) ; }
rank: 283
score: 99.06026785714286
patch: start . format ( start , end , Calendar . SECOND ) ;
rank: 283
score: 99.03946940104167
patch: minutes += $NUMBER$ ; minutes -= 1 ;
rank: 283
score: 99.0250244140625
patch: months -= end . get ( Calendar . MINUTE ) ;
rank: 283
score: 99.00596516927084
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY - years ;
rank: 283
score: 98.92512512207031
patch: days += $NUMBER$ / days ; }
rank: 283
score: 98.86835394965277
patch: days += ; { days += $NUMBER$ ;
rank: 283
score: 98.84977213541667
patch: days += $NUMBER$ ; += $NUMBER$ ; }
rank: 283
score: 98.8212890625
patch: days ++ ; days = $NUMBER$ ; }
rank: 283
score: 98.80853949652777
patch: days * $NUMBER$ * $NUMBER$ * $NUMBER$ ;
rank: 284
score: 98.925048828125
patch: days += $NUMBER$ * Date CaMeL Utils . abs ( ;
rank: 284
score: 98.82122039794922
patch: days [ 0 ] += $NUMBER$ ;
rank: 284
score: 98.80816095525569
patch: days += $NUMBER$ * Math . abs ( days ;
rank: 285
score: 99.11793053668478
patch: start . set ( Calendar . DAY _ OF _ MONTH , format . get ( Calendar . MINUTE ) ) ;
rank: 285
score: 99.03837076822917
patch: hours += $NUMBER$ ; days += $NUMBER$ ;
rank: 285
score: 99.00587768554688
patch: days += reduce CaMeL And CaMeL Correct ( start , end , Calendar . MILLISECOND , seconds ) ;
rank: 285
score: 98.86744384765625
patch: days += $NUMBER$ ; days else { break ;
rank: 285
score: 98.84923638237848
patch: days += $NUMBER$ ; days days -- ;
rank: 285
score: 98.80689086914063
patch: start . add ( days + 1 ) ;
rank: 286
score: 99.05978829520089
patch: days = $NUMBER$ + start . get ( Calendar . YEAR ) ;
rank: 286
score: 99.00559369255515
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; milliseconds -= $NUMBER$ ;
rank: 286
score: 98.92474365234375
patch: days += $NUMBER$ * Date CaMeL Utils . signum ( ;
rank: 286
score: 98.86741807725694
patch: days = days ; if += 1 ;
rank: 286
score: 98.80682373046875
patch: end . ; days += $NUMBER$ ; }
rank: 287
score: 99.11724175347223
patch: minutes += 1 ; hours -= 1 ;
rank: 287
score: 99.05898215553977
patch: days = Date . get CaMeL Instance ( ) ;
rank: 287
score: 99.02400425502232
patch: months = end . get ( Calendar . YEAR ) - millis ;
rank: 287
score: 99.0049689797794
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; hours += $NUMBER$ ;
rank: 287
score: 98.86703152126736
patch: days += 0 ; days < $NUMBER$ ;
rank: 287
score: 98.84822300502232
patch: days += $NUMBER$ ; $NUMBER$ /
rank: 287
score: 98.82046169704861
patch: days = $NUMBER$ * days * $NUMBER$ ;
rank: 287
score: 98.80645141601562
patch: start . set ( $NUMBER$ , start ) ;
rank: 288
score: 99.03658040364583
patch: hours += $NUMBER$ ; minutes -= $NUMBER$ ;
rank: 288
score: 99.022705078125
patch: end . format ( start , end , Calendar . MINUTE ) ;
rank: 288
score: 99.00490500710227
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) . get CaMeL Time ( ) ;
rank: 288
score: 98.86700439453125
patch: days * ; days = $NUMBER$ ;
rank: 288
score: 98.84718153211806
patch: days += $NUMBER$ ; days += time ;
rank: 288
score: 98.82001495361328
patch: days += $NUMBER$ + += $NUMBER$ ;
rank: 288
score: 98.80630832248264
patch: days += Double . MIN _ VALUE ;
rank: 289
score: 99.11649576822917
patch: hours -= 1 ; hours -= 1 ;
rank: 289
score: 99.00465698242188
patch: days -= reduce CaMeL And CaMeL Correct ( start , end , Calendar . MILLISECOND , milliseconds ) ;
rank: 289
score: 98.92446067116477
patch: long $NUMBER$ = $NUMBER$ * Date CaMeL Utils . ;
rank: 289
score: 98.86640082465277
patch: days += days ; += - $NUMBER$ ;
rank: 289
score: 98.84676106770833
patch: days days += 1 ;
rank: 289
score: 98.81990559895833
patch: days += $NUMBER$ ; max += $NUMBER$ ;
rank: 290
score: 99.11641438802083
patch: months += 1 ; days -= 1 ;
rank: 290
score: 99.03645463423295
patch: hours += $NUMBER$ * Date CaMeL Utils . $NUMBER$ ;
rank: 290
score: 99.00438017003677
patch: days -= $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY - 1 ;
rank: 290
score: 98.86638641357422
patch: days ; days += - 1 ;
rank: 290
score: 98.81890314275569
patch: days ++ ; } else { days += $NUMBER$ ;
rank: 290
score: 98.80592041015625
patch: days += Math . floor ( days ) ;
rank: 291
score: 99.03466186523437
patch: hours -= 1 ;
rank: 291
score: 99.01992797851562
patch: seconds += start . get ( Calendar . HOUR ) ;
rank: 291
score: 99.00420587713069
patch: days = reduce CaMeL And CaMeL Correct ( start ,
rank: 291
score: 98.86623806423611
patch: days = $NUMBER$ ; days catch $NUMBER$ ;
rank: 291
score: 98.84622802734376
patch: days += $NUMBER$ ; try if += $NUMBER$ ;
rank: 291
score: 98.8188985188802
patch: days += $NUMBER$ ; } else { days += $NUMBER$ ;
rank: 292
score: 99.1158447265625
patch: days -= reduce CaMeL And CaMeL Correct ( start , Calendar . DAY _ OF _ MONTH , days ) ;
rank: 292
score: 99.05645751953125
patch: end . set ( Calendar . YEAR , format ) ;
rank: 292
score: 99.03312852647569
patch: minutes += $NUMBER$ ; years -= 1 ;
rank: 292
score: 99.00413602941177
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY - days ;
rank: 292
score: 98.86593967013889
patch: days += $NUMBER$ ; if += false ;
rank: 292
score: 98.84615478515624
patch: days = $NUMBER$ + $NUMBER$ ; += 1 ;
rank: 292
score: 98.80490112304688
patch: days += $NUMBER$ + $NUMBER$ + 1 ; }
rank: 293
score: 99.11573701746323
patch: int months = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 293
score: 99.03295288085937
patch: minutes -= 1 ;
rank: 293
score: 99.01675415039062
patch: milliseconds -= start . get ( Calendar . MILLISECOND ) ;
rank: 293
score: 99.0041259765625
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; hours -= 1 ;
rank: 293
score: 98.91935221354167
patch: days += $NUMBER$ * time ; } days += $NUMBER$ ;
rank: 293
score: 98.86529541015625
patch: days += $NUMBER$ ; += $STRING$ ;
rank: 293
score: 98.84585232204861
patch: days += 0 ; days = days ;
rank: 293
score: 98.81755913628473
patch: days += $NUMBER$ - days - $NUMBER$ ;
rank: 293
score: 98.80474853515625
patch: days = days + 1 ;
rank: 294
score: 99.0313720703125
patch: seconds += $NUMBER$ ; minutes -= 1 ;
rank: 294
score: 99.01674107142857
patch: end . format ( start , end , Calendar . SECOND ) ;
rank: 294
score: 99.00362998560855
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; months -= $NUMBER$ ;
rank: 294
score: 98.91933186848958
patch: days += $NUMBER$ * DAY _ OF _ YEAR ; }
rank: 294
score: 98.86527506510417
patch: days else { days += - 1 ;
rank: 294
score: 98.845703125
patch: days += $NUMBER$ ; if += 1 ; days
rank: 294
score: 98.80469621930804
patch: days >> += $NUMBER$ ; }
rank: 295
score: 99.1142578125
patch: days -= reduce CaMeL And CaMeL Correct ( format , pad CaMeL With CaMeL Zeros ) ;
rank: 295
score: 99.0035464638158
patch: days -= $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds -= 1 ;
rank: 295
score: 98.91881306966145
patch: days += $NUMBER$ * Time CaMeL Zone . floor ( ;
rank: 295
score: 98.86491394042969
patch: days += - $NUMBER$ + $NUMBER$ ;
rank: 295
score: 98.84518093532986
patch: if += $NUMBER$ ; days += $NUMBER$ ;
rank: 295
score: 98.81636352539063
patch: days += $NUMBER$ * ; days += $NUMBER$ ;
rank: 295
score: 98.80410330636161
patch: days += $NUMBER$ <= $NUMBER$ ;
rank: 296
score: 99.11421130952381
patch: Calendar . get CaMeL Instance ( timezone ) . get ( Calendar . DAY _ OF _ MONTH ) .
rank: 296
score: 99.05445556640625
patch: start . set ( Calendar . YEAR ) ;
rank: 296
score: 99.03037516276042
patch: hours += 1 ; days += $NUMBER$ ;
rank: 296
score: 99.00301320929276
patch: days -= $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; years -= $NUMBER$ ;
rank: 296
score: 98.91792436079545
patch: days += $NUMBER$ * Time CaMeL Zone . ; ;
rank: 296
score: 98.86478000217014
patch: days += $NUMBER$ ; days -- ; $NUMBER$
rank: 296
score: 98.84422607421875
patch: days += 1 ; days days = $NUMBER$ ;
rank: 296
score: 98.81634521484375
patch: days += 1 ; return $NUMBER$ ;
rank: 296
score: 98.80399322509766
patch: long time = days * $NUMBER$ ;
rank: 297
score: 99.11411539713542
patch: hours -= $NUMBER$ ; days -= 1 ;
rank: 297
score: 99.01510620117188
patch: end -= start . get ( Calendar . YEAR ) ;
rank: 297
score: 99.00263006036931
patch: days += end . get ( Calendar . DAY _ OF _ YEAR ) . get CaMeL Time ( ) ;
rank: 297
score: 98.91714477539062
patch: days += $NUMBER$ * Date CaMeL Utils . SECOND ; }
rank: 297
score: 98.86421508789063
patch: days += $NUMBER$ ; if += - $NUMBER$ ;
rank: 297
score: 98.80357055664062
patch: start . start ( $NUMBER$ * $NUMBER$ ) ;
rank: 298
score: 99.114013671875
patch: days = end . get ( Calendar . DAY _ OF _ MONTH ) ; } }
rank: 298
score: 99.001953125
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; years += $NUMBER$ ;
rank: 298
score: 98.91666666666667
patch: long days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ ;
rank: 298
score: 98.84388732910156
patch: days += $NUMBER$ + - $NUMBER$ ;
rank: 299
score: 99.11387125651042
patch: minutes -= 1 ; days -= 1 ;
rank: 299
score: 99.02613661024306
patch: hours += $NUMBER$ ; years += 1 ;
rank: 299
score: 99.01444789341518
patch: seconds += $NUMBER$ * Calendar . get CaMeL Instance ( timezone ) ;
rank: 299
score: 99.00131707442434
patch: days -= 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; months -= 1 ;
rank: 299
score: 98.91660563151042
patch: days += $NUMBER$ * Time CaMeL Zone . Double ; }
rank: 299
score: 98.8626708984375
patch: days += - 1 ; += 1 ;
rank: 299
score: 98.84176974826389
patch: days += 0 ; days += $STRING$ ;
rank: 299
score: 98.81440873579545
patch: days ++ ; else { days += $NUMBER$ ; }
rank: 299
score: 98.80158342633929
patch: days -= $NUMBER$ * $NUMBER$ ;
rank: 300
score: 99.11365424262152
patch: days += start . get ( Calendar . DAY _ OF _ MONTH ) ; } }
rank: 300
score: 99.05027262369792
patch: days -= $NUMBER$ ; years -= 1 ;
rank: 300
score: 99.02606201171875
patch: seconds += 1 ; minutes -= 1 ;
rank: 300
score: 98.99968872070312
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; seconds += 1 ;
rank: 300
score: 98.86147054036458
patch: days ] = $NUMBER$ ;
rank: 300
score: 98.84104410807292
patch: days += $NUMBER$ ; $NUMBER$ = $NUMBER$ ;
rank: 300
score: 98.81422932942708
patch: days [ days ++ ] = $NUMBER$ ;
rank: 300
score: 98.80011858258929
patch: days = $NUMBER$ * time ;
rank: 301
score: 99.11365424262152
patch: hours += start . get ( Calendar . DAY _ OF _ MONTH ) ; } }
rank: 301
score: 99.04963514539931
patch: months += $NUMBER$ ; years -= 1 ;
rank: 301
score: 99.0130126953125
patch: hours -= $NUMBER$ ;
rank: 301
score: 98.99967233758224
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; days += 1 ;
rank: 301
score: 98.91543579101562
patch: days += $NUMBER$ * time + 1 ; }
rank: 301
score: 98.8378662109375
patch: days += $NUMBER$ $NUMBER$ ; days += $NUMBER$ ;
rank: 301
score: 98.81363525390626
patch: days ; days ++ ; days += $NUMBER$ ;
rank: 301
score: 98.79981994628906
patch: long days = $NUMBER$ * $NUMBER$ ;
rank: 302
score: 99.04949951171875
patch: milliseconds = end . get ( format ) ;
rank: 302
score: 99.01288396661931
patch: return start . get ( Calendar . MILLISECOND ) ;
rank: 302
score: 98.99921264648438
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ YEAR , hours ) ;
rank: 302
score: 98.9129638671875
patch: long days = $NUMBER$ * Date CaMeL Utils . SECOND ;
rank: 302
score: 98.86026000976562
patch: days += - days ; days = $NUMBER$ ;
rank: 302
score: 98.83778599330357
patch: days += $NUMBER$ ; while ;
rank: 302
score: 98.81359100341797
patch: days [ days ] += 0 ;
rank: 302
score: 98.79923706054687
patch: days += $NUMBER$ ; length += $NUMBER$ ; }
rank: 303
score: 99.11337280273438
patch: return reduce CaMeL And CaMeL Correct ( start , end , Calendar . DAY _ OF _ MONTH ,
rank: 303
score: 99.0474853515625
patch: seconds += $NUMBER$ ; hours -= 1 ;
rank: 303
score: 98.99851684570312
patch: if ( ! Token . contains CaMeL Token CaMeL With CaMeL Value ( tokens , M ) ) {
rank: 303
score: 98.91282145182292
patch: days += $NUMBER$ * Date CaMeL Utils . days ; ;
rank: 303
score: 98.83768310546876
patch: days += $NUMBER$ ; if days = $NUMBER$ ;
rank: 303
score: 98.81300354003906
patch: else { days += $NUMBER$ ; }
rank: 303
score: 98.7985595703125
patch: start . add ( days + $NUMBER$ ) ;
rank: 304
score: 99.11308850740132
patch: int end = Calendar . get CaMeL Instance ( timezone ) . get CaMeL Time ( ) ;
rank: 304
score: 99.02459038628473
patch: hours += 1 ; minutes -= $NUMBER$ ;
rank: 304
score: 98.99839154411765
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ MONTH ,
rank: 304
score: 98.91276041666667
patch: days += $NUMBER$ $NUMBER$ * Time CaMeL Zone . MINUTE ;
rank: 304
score: 98.83743286132812
patch: days += $NUMBER$ ; try
rank: 304
score: 98.81285942925348
patch: days += ; ; days += $NUMBER$ ;
rank: 304
score: 98.79850006103516
patch: long $NUMBER$ = days + $NUMBER$ ;
rank: 305
score: 99.11305067274306
patch: reduce CaMeL And CaMeL Correct ( start , end , pad CaMeL With CaMeL Zeros ) ;
rank: 305
score: 99.04250759548611
patch: months += $NUMBER$ ; days -= 1 ;
rank: 305
score: 99.02365944602273
patch: seconds += $NUMBER$ * Date CaMeL Utils . $NUMBER$ ;
rank: 305
score: 99.01058959960938
patch: months += end . get ( Calendar . MILLISECOND ) ;
rank: 305
score: 98.99802117598684
patch: days -= $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= $NUMBER$ ;
rank: 305
score: 98.9122823079427
patch: days += $NUMBER$ * Time CaMeL Zone . + 1 ;
rank: 305
score: 98.83736165364583
patch: days * $NUMBER$ ; days += $NUMBER$ ;
rank: 305
score: 98.81277465820312
patch: days += 0 ; days ; }
rank: 305
score: 98.79781494140624
patch: days -= $NUMBER$ ; days -= $NUMBER$ ; }
rank: 306
score: 99.02344428168402
patch: hours += 1 ; years += $NUMBER$ ;
rank: 306
score: 98.99796549479167
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) - 1 ;
rank: 306
score: 98.91158040364583
patch: days += 1 * Time CaMeL Zone . $NUMBER$ ; }
rank: 306
score: 98.858642578125
patch: days += $NUMBER$ ; if += $STRING$ ;
rank: 306
score: 98.83725992838542
patch: days += 1 ; days += $STRING$ ;
rank: 307
score: 99.11212517233456
patch: minutes += start . get ( Calendar . DAY _ OF _ YEAR ) ; }
rank: 307
score: 99.0234375
patch: hours += 1 ; years -= $NUMBER$ ;
rank: 307
score: 98.99788411458333
patch: days -= reduce CaMeL And CaMeL Correct (
rank: 307
score: 98.91121419270833
patch: if ( days > $NUMBER$ * Date CaMeL Utils . ;
rank: 307
score: 98.85858154296875
patch: days += days += $NUMBER$ ;
rank: 307
score: 98.83651123046874
patch: days += 0 ; days days = $NUMBER$ ;
rank: 307
score: 98.81199815538194
patch: days ; } } days += $NUMBER$ ;
rank: 308
score: 99.0361083984375
patch: seconds = end . get ( format ) ;
rank: 308
score: 99.02319946289063
patch: hours = end . get ( timezone ) ;
rank: 308
score: 99.0071512858073
patch: seconds += end . get ( Calendar . SECOND ) ;
rank: 308
score: 98.99785698784723
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; } milliseconds -= 1 ;
rank: 308
score: 98.91103293678977
patch: days += $NUMBER$ * Date CaMeL Utils . MEDIUM ;
rank: 308
score: 98.85794406467014
patch: days * * / return days $NUMBER$ ;
rank: 308
score: 98.8355712890625
patch: days += 0 ; days = $NUMBER$ ; ;
rank: 308
score: 98.81186930338542
patch: days += 0 ? $NUMBER$ : $NUMBER$ ;
rank: 308
score: 98.79389105902777
patch: days += $NUMBER$ * $NUMBER$ / days ;
rank: 309
score: 99.11174210258152
patch: Calendar . get CaMeL Instance ( timezone ) . set CaMeL Time ( Calendar . DAY _ OF _ YEAR ) ;
rank: 309
score: 99.02945963541667
patch: hours -= $NUMBER$ ; years -= 1 ;
rank: 309
score: 99.02314453125
patch: minutes -= $NUMBER$ ;
rank: 309
score: 99.00657145182292
patch: hours -= start . get ( Calendar . SECOND ) ;
rank: 309
score: 98.99770972842262
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; minutes -= 1 ;
rank: 309
score: 98.91092681884766
patch: days += $NUMBER$ * SECOND ; }
rank: 309
score: 98.85731506347656
patch: days += 0 ; += 0 ;
rank: 309
score: 98.83445231119792
patch: days days += 0 ; if $NUMBER$ ;
rank: 309
score: 98.81153106689453
patch: days ++ ; } return $NUMBER$ ;
rank: 309
score: 98.79290771484375
patch: start . add ( $NUMBER$ ) ; }
rank: 310
score: 99.00525580512152
patch: seconds -= 1 ; days -= 1 ;
rank: 310
score: 98.99742296006944
patch: days += Token . contains CaMeL Token CaMeL With CaMeL Value ( tokens , y ) ;
rank: 310
score: 98.91064453125
patch: long $NUMBER$ = $NUMBER$ * Date CaMeL Utils . $NUMBER$ ;
rank: 310
score: 98.85654025607639
patch: days ] += $NUMBER$ ; days ++ ;
rank: 310
score: 98.83358764648438
patch: days days += $NUMBER$ ; if += $NUMBER$ ;
rank: 310
score: 98.81139026988636
patch: days [ $NUMBER$ ] = $NUMBER$ + $NUMBER$ ; }
rank: 310
score: 98.79290093315973
patch: time = $NUMBER$ * $NUMBER$ + $NUMBER$ ;
rank: 311
score: 99.11143798828125
patch: return reduce CaMeL And CaMeL Correct ( start , end , Calendar . HOUR _ OF _ DAY ,
rank: 311
score: 99.02926296657986
patch: milliseconds += $NUMBER$ ; days -= 1 ;
rank: 311
score: 99.02179633246527
patch: minutes += 1 ; minutes -= 1 ;
rank: 311
score: 99.00457208806819
patch: return end . get ( Calendar . MILLISECOND ) ;
rank: 311
score: 98.9970935639881
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; months -= $NUMBER$ ;
rank: 311
score: 98.90957641601562
patch: days += $NUMBER$ * Math . abs ( days ) ;
rank: 311
score: 98.83329467773437
patch: days += $NUMBER$ ; days equals += $NUMBER$ ;
rank: 311
score: 98.81083170572917
patch: days += 0 ; time += $NUMBER$ ;
rank: 312
score: 99.02739122178819
patch: seconds += 1 ; days -= 1 ;
rank: 312
score: 98.90888129340277
patch: days += $NUMBER$ / $NUMBER$ ; } ;
rank: 312
score: 98.85526733398437
patch: days = - $NUMBER$ ; days += $NUMBER$ ;
rank: 312
score: 98.83249918619792
patch: days += $NUMBER$ ; days = time ;
rank: 312
score: 98.8103915127841
patch: days ++ ; } days += $NUMBER$ * $NUMBER$ ;
rank: 313
score: 99.02730984157986
patch: milliseconds += $NUMBER$ ; years -= 1 ;
rank: 313
score: 99.01772238991477
patch: minutes += $NUMBER$ * Date CaMeL Utils . $NUMBER$ ;
rank: 313
score: 98.99615799753289
patch: days -= 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds -= 1 ;
rank: 313
score: 98.90885786576705
patch: days += $NUMBER$ * Time CaMeL Zone . SHORT ;
rank: 313
score: 98.81033935546876
patch: days ++ ; days = $NUMBER$ / $NUMBER$ ;
rank: 314
score: 99.1107177734375
patch: days += reduce CaMeL And CaMeL Correct ( start , end , milliseconds ) ;
rank: 314
score: 99.00118001302083
patch: seconds -= end . get ( Calendar . SECOND ) ;
rank: 314
score: 98.9959716796875
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; years += 1 ;
rank: 314
score: 98.90797932942708
patch: long days = $NUMBER$ * Time CaMeL Zone . SECOND ;
rank: 314
score: 98.85448455810547
patch: days = $NUMBER$ ; += 0 ;
rank: 314
score: 98.83053249782986
patch: days += $NUMBER$ + $NUMBER$ ; $NUMBER$ ;
rank: 314
score: 98.81007080078125
patch: days += $NUMBER$ ? 1 : $NUMBER$ ; }
rank: 314
score: 98.7908203125
patch: days += Math . round ( $NUMBER$ ) ;
rank: 315
score: 99.11044491038604
patch: int start = end . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 315
score: 99.02609252929688
patch: start . get ( Calendar . YEAR ) ;
rank: 315
score: 99.000341796875
patch: milliseconds = end . get ( timezone ) ;
rank: 315
score: 98.99569091796874
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; months -= 1 ;
rank: 315
score: 98.90631103515625
patch: days += $NUMBER$ + $NUMBER$ * Date CaMeL Utils . ;
rank: 315
score: 98.85423448350694
patch: days -- ; } days = $NUMBER$ ;
rank: 315
score: 98.83026733398438
patch: days += 1 ; days = $NUMBER$ ; ;
rank: 315
score: 98.80946350097656
patch: days [ 1 ] += $NUMBER$ ;
rank: 316
score: 99.10992431640625
patch: days -= - start . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 316
score: 99.02392578125
patch: return format CaMeL Duration ( millis , end ) ;
rank: 316
score: 98.99565294053819
patch: days -= reduce CaMeL And CaMeL Correct ( start , end , Calendar . SECOND ) ;
rank: 316
score: 98.90613403320313
patch: days += $NUMBER$ * Calendar . YEAR ; }
rank: 316
score: 98.8302490234375
patch: days days = $NUMBER$ ; days += $NUMBER$ ;
rank: 316
score: 98.78954467773437
patch: days += $NUMBER$ Date CaMeL Utils . $NUMBER$ ;
rank: 317
score: 99.02391899956598
patch: seconds -= $NUMBER$ ; days -= 1 ;
rank: 317
score: 98.9952880859375
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; seconds -= 1 ;
rank: 317
score: 98.90540660511364
patch: long time = $NUMBER$ * Date CaMeL Utils . ;
rank: 317
score: 98.8529052734375
patch: days = $NUMBER$ ; days = false ;
rank: 317
score: 98.80818314985795
patch: days += 0 ; days += $NUMBER$ + 1 ;
rank: 317
score: 98.78873697916667
patch: days -= $NUMBER$ ; days += 1 ;
rank: 318
score: 98.99518432617188
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; years += 1 ;
rank: 318
score: 98.85269165039062
patch: days += ; += - $NUMBER$ ;
rank: 318
score: 98.8296127319336
patch: days = $NUMBER$ ; return $NUMBER$ ;
rank: 318
score: 98.80729166666667
patch: days += 0 ; days ++ ; }
rank: 318
score: 98.78663940429688
patch: start . ; days += $NUMBER$ + $NUMBER$ ;
rank: 319
score: 99.02170138888889
patch: seconds += 1 ; years -= 1 ;
rank: 319
score: 99.00989447699652
patch: hours += 1 ; years += 1 ;
rank: 319
score: 98.996337890625
patch: seconds = $NUMBER$ ;
rank: 319
score: 98.99471435546874
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; seconds -= 1 ;
rank: 319
score: 98.90469360351562
patch: days += $NUMBER$ ; break ; } days += $NUMBER$ ;
rank: 319
score: 98.8291244506836
patch: days += $NUMBER$ + - 1 ;
rank: 319
score: 98.80712890625
patch: days += $NUMBER$ + days + $NUMBER$ ;
rank: 320
score: 99.10882568359375
patch: days += - start . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 320
score: 98.99612426757812
patch: milliseconds += end . get ( Calendar . MINUTE ) ;
rank: 320
score: 98.99452514648438
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; hours += 1 ;
rank: 320
score: 98.90403238932292
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ ) {
rank: 320
score: 98.85158962673611
patch: days = $NUMBER$ ; days += false ;
rank: 320
score: 98.82862684461806
patch: days += $NUMBER$ + 1 ; break ;
rank: 320
score: 98.78603108723958
patch: start . add ( $NUMBER$ + $NUMBER$ ;
rank: 321
score: 99.00771077473958
patch: days += $NUMBER$ ; minutes -= 1 ;
rank: 321
score: 98.99560546875
patch: hours -= start . get ( Calendar . HOUR ) ;
rank: 321
score: 98.99406352796052
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; days += 1 ;
rank: 321
score: 98.90282524956598
patch: days += $NUMBER$ ; } } else {
rank: 321
score: 98.850341796875
patch: days += 0 ; days else {
rank: 321
score: 98.80667114257812
patch: days += 0 ; if += $NUMBER$ ; }
rank: 321
score: 98.78580932617187
patch: start . set ( $NUMBER$ * time ) ;
rank: 322
score: 99.10787259615384
patch: days += - start . get ( Calendar . YEAR ) ;
rank: 322
score: 99.01567925347223
patch: seconds += $NUMBER$ ; days -= $NUMBER$ ;
rank: 322
score: 99.00592719184027
patch: minutes += $NUMBER$ ; seconds -= 1 ;
rank: 322
score: 98.9008076985677
patch: days += $NUMBER$ ; } this . days += $NUMBER$ ;
rank: 322
score: 98.84971313476562
patch: days = - $NUMBER$ ; days = $NUMBER$ ;
rank: 322
score: 98.828369140625
patch: days = $NUMBER$ + 1 ; ;
rank: 322
score: 98.80653211805556
patch: days += $NUMBER$ * days * $NUMBER$ ;
rank: 322
score: 98.78568115234376
patch: start . set ( Calendar . $NUMBER$ ) ;
rank: 323
score: 99.10770847486413
patch: start . set ( Calendar . HOUR _ OF _ DAY , format . get ( Calendar . MINUTE ) ) ;
rank: 323
score: 98.99836561414931
patch: minutes += $NUMBER$ ; days -= $NUMBER$ ;
rank: 323
score: 98.99390258789063
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; hours -= $NUMBER$ ;
rank: 323
score: 98.90057373046875
patch: days += $NUMBER$ * $NUMBER$ * days ;
rank: 323
score: 98.8281021118164
patch: days += $NUMBER$ ; throw $NUMBER$ ;
rank: 323
score: 98.80528428819444
patch: days += $NUMBER$ * $NUMBER$ ; if ;
rank: 324
score: 99.10758833451705
patch: hours += reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY , hours ) ;
rank: 324
score: 99.01544189453125
patch: seconds -= $NUMBER$ ; years -= 1 ;
rank: 324
score: 98.99831136067708
patch: minutes += $NUMBER$ ; years += $NUMBER$ ;
rank: 324
score: 98.99416097005208
patch: months = reduce CaMeL And CaMeL Correct ( $NUMBER$ ) ;
rank: 324
score: 98.99349172491776
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds -= $NUMBER$ ;
rank: 324
score: 98.90029568142361
patch: days += $NUMBER$ * Calendar . YEAR ;
rank: 324
score: 98.84816284179688
patch: days * * / days += - $NUMBER$ ;
rank: 324
score: 98.82801649305556
patch: days days += $NUMBER$ ; days ++ ;
rank: 324
score: 98.78247833251953
patch: long days = days - 1 ;
rank: 325
score: 99.10725203804348
patch: start . set ( Calendar . DAY _ OF _ MONTH , format . get ( Calendar . SECOND ) ) ;
rank: 325
score: 98.99557156032986
patch: minutes += $NUMBER$ ; hours -= 1 ;
rank: 325
score: 98.99367065429688
patch: seconds = end . get ( timezone ) ;
rank: 325
score: 98.9933349609375
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; months += 1 ;
rank: 325
score: 98.82773166232639
patch: days * $NUMBER$ ; days = $NUMBER$ ;
rank: 325
score: 98.80399946732955
patch: days ; days += 0 ; days += $NUMBER$ ;
rank: 325
score: 98.782470703125
patch: days ++ ; days ++ ;
rank: 326
score: 99.10686786358173
patch: minutes -= reduce CaMeL And CaMeL Correct ( start , end ,
rank: 326
score: 99.01532660590277
patch: seconds += $NUMBER$ ; years -= $NUMBER$ ;
rank: 326
score: 98.9942626953125
patch: years = Calendar . get CaMeL Instance ( ) ;
rank: 326
score: 98.99332275390626
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; hours += $NUMBER$ ;
rank: 326
score: 98.9932149251302
patch: minutes -= start . get ( Calendar . HOUR ) ;
rank: 326
score: 98.89923773871527
patch: days += $NUMBER$ * time ; ; }
rank: 326
score: 98.84800720214844
patch: days finally { days = $NUMBER$ ;
rank: 326
score: 98.82642957899306
patch: days = $NUMBER$ ; days += $STRING$ ;
rank: 326
score: 98.7822265625
patch: days -= $NUMBER$ ; days ++ ; }
rank: 327
score: 99.10634543678977
patch: hours += reduce CaMeL And CaMeL Correct ( start , Calendar . DAY _ OF _ MONTH , hours ) ;
rank: 327
score: 98.99414740668402
patch: minutes += $NUMBER$ ; days += 1 ;
rank: 327
score: 98.99326685855263
patch: days -= 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; years -= $NUMBER$ ;
rank: 327
score: 98.89913940429688
patch: days += 1 * $NUMBER$ ; }
rank: 327
score: 98.84774441189236
patch: days ] += $NUMBER$ ; += 0 ;
rank: 327
score: 98.82636260986328
patch: days days += $NUMBER$ + $NUMBER$ ;
rank: 327
score: 98.80340021306819
patch: days += $NUMBER$ ; days += $NUMBER$ | $NUMBER$ ;
rank: 327
score: 98.78032684326172
patch: end . days += $NUMBER$ ; }
rank: 328
score: 99.10623301630434
patch: start . set ( Calendar . DAY _ OF _ MONTH , format . get ( Calendar . MILLISECOND ) ) ;
rank: 328
score: 99.0100341796875
patch: start . set ( Calendar . MILLISECOND ) ;
rank: 328
score: 98.99387613932292
patch: minutes += 1 ; years -= 1 ;
rank: 328
score: 98.99313534007354
patch: days += reduce CaMeL And CaMeL Correct ( start , end , Calendar . MILLISECOND ,
rank: 328
score: 98.89857991536458
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ * ;
rank: 328
score: 98.84711371527777
patch: days else { days = - 1 ;
rank: 328
score: 98.82621256510417
patch: days += $NUMBER$ ; add += $NUMBER$ ;
rank: 329
score: 99.10615234375
patch: days += reduce CaMeL And CaMeL Correct ( start , end , end ,
rank: 329
score: 98.99297688802083
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY - 0 ;
rank: 329
score: 98.9923604329427
patch: seconds += end . get ( Calendar . HOUR ) ;
rank: 329
score: 98.89823404947917
patch: days += $NUMBER$ * Time CaMeL Zone . ; ; }
rank: 329
score: 98.8465576171875
patch: days * ; days += - $NUMBER$ ;
rank: 329
score: 98.82554796006944
patch: days += $NUMBER$ + 1 ; days ;
rank: 329
score: 98.80292510986328
patch: days += $NUMBER$ / += $NUMBER$ ;
rank: 329
score: 98.77705383300781
patch: start ; days += $NUMBER$ ; }
rank: 330
score: 99.10589130108173
patch: int end = Calendar . get CaMeL Instance ( timezone ) ;
rank: 330
score: 98.99283175998264
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; years -= 1 ; }
rank: 330
score: 98.99266899956598
patch: minutes += $NUMBER$ ; years -= $NUMBER$ ;
rank: 330
score: 98.89786783854167
patch: days += Time CaMeL Zone . get CaMeL Default ( ;
rank: 330
score: 98.84651184082031
patch: days += - 1 + $NUMBER$ ;
rank: 330
score: 98.82540283203124
patch: days += $NUMBER$ ; if $NUMBER$ * $NUMBER$ ;
rank: 330
score: 98.77701416015626
patch: days = $NUMBER$ * $NUMBER$ * $NUMBER$ ; }
rank: 331
score: 99.10588522518383
patch: minutes -= start . get ( Calendar . DAY _ OF _ YEAR ) ; }
rank: 331
score: 98.99253934972427
patch: days -= 1 * Date CaMeL Utils . MILLIS _ PER _ DAY - 1 ;
rank: 331
score: 98.89701334635417
patch: days += $NUMBER$ $NUMBER$ * Time CaMeL Zone . $NUMBER$ ;
rank: 331
score: 98.84619140625
patch: days = days ; days catch $NUMBER$ ;
rank: 331
score: 98.82531127929687
patch: days = $NUMBER$ ; days = $NUMBER$ ; ;
rank: 331
score: 98.80280095880681
patch: days += $NUMBER$ ; if days += $NUMBER$ ; }
rank: 331
score: 98.77620239257813
patch: days -= $NUMBER$ ; } days -= $NUMBER$ ;
rank: 332
score: 99.10547553168402
patch: hours = end . get ( Calendar . DAY _ OF _ MONTH ) ; } }
rank: 332
score: 98.99250344669117
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds += $NUMBER$ ;
rank: 332
score: 98.98841688368056
patch: seconds += $NUMBER$ ; seconds -= 1 ;
rank: 332
score: 98.84586181640626
patch: days * * / days += - 1 ;
rank: 332
score: 98.82499864366319
patch: days += $NUMBER$ ; += 1 ; }
rank: 332
score: 98.80275472005208
patch: days ; days += $NUMBER$ + 1 ;
rank: 332
score: 98.776123046875
patch: days += $NUMBER$ ; } else {
rank: 333
score: 99.10471754807692
patch: days += - start . get ( Calendar . MONTH ) ;
rank: 333
score: 98.99236450195312
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; hours += 1 ;
rank: 333
score: 98.98885091145833
patch: milliseconds -= end . get ( Calendar . MONTH ) ;
rank: 333
score: 98.8959248860677
patch: long days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ ;
rank: 333
score: 98.84573800223214
patch: days += days ; break ;
rank: 333
score: 98.82476128472223
patch: days += $NUMBER$ ; $NUMBER$ / / ;
rank: 333
score: 98.77608032226563
patch: start . start ( $NUMBER$ * time ) ;
rank: 334
score: 99.1041195518092
patch: start . set ( end . get ( Calendar . DAY _ OF _ YEAR ) ) ;
rank: 334
score: 98.99205322265625
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; months += $NUMBER$ ;
rank: 334
score: 98.9882303873698
patch: seconds += reduce CaMeL And CaMeL Correct ( start ) ;
rank: 334
score: 98.98818137428977
patch: if ( ! pad CaMeL With CaMeL Zeros ) {
rank: 334
score: 98.89378138950893
patch: days += $NUMBER$ % $NUMBER$ ;
rank: 334
score: 98.82461208767361
patch: days += 1 ; days = $STRING$ ;
rank: 334
score: 98.77512904575893
patch: start . clear ( ) ;
rank: 335
score: 99.10402221679688
patch: days += reduce CaMeL And CaMeL Correct ( start , Calendar . DAY _ OF _ MONTH ) ;
rank: 335
score: 99.00035400390625
patch: hours = end . get ( format ) ;
rank: 335
score: 98.99199761284723
patch: days += reduce CaMeL And CaMeL Correct ( start , Calendar . MILLISECOND , days ) ;
rank: 335
score: 98.98792860243056
patch: seconds += $NUMBER$ ; years += $NUMBER$ ;
rank: 335
score: 98.98771158854167
patch: seconds -= end . get ( Calendar . HOUR ) ;
rank: 335
score: 98.89300537109375
patch: days += 1 ; } days += 1 ;
rank: 335
score: 98.8243408203125
patch: days days = $NUMBER$ ; if $NUMBER$ ;
rank: 335
score: 98.77505929129464
patch: days -= $NUMBER$ / $NUMBER$ ;
rank: 336
score: 99.10328433388158
patch: reduce CaMeL And CaMeL Correct ( start , end , Calendar . HOUR _ OF _ DAY ,
rank: 336
score: 98.99184698807566
patch: long end = Calendar . get CaMeL Instance ( Calendar . HOUR _ OF _ DAY ) ;
rank: 336
score: 98.98727077907986
patch: minutes += $NUMBER$ ; days += $NUMBER$ ;
rank: 336
score: 98.89249674479167
patch: days += Math . abs ( days * $NUMBER$ ) ;
rank: 336
score: 98.82272338867188
patch: days += $NUMBER$ + $NUMBER$ ; if $NUMBER$ /
rank: 336
score: 98.775048828125
patch: start . set ( $NUMBER$ + $NUMBER$ ) ;
rank: 337
score: 98.99183413856908
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; months -= $NUMBER$ ;
rank: 337
score: 98.98621622721355
patch: months -= end . get ( Calendar . MILLISECOND ) ;
rank: 337
score: 98.9857177734375
patch: minutes += 1 ; seconds -= 1 ;
rank: 337
score: 98.84425862630208
patch: days ] += days ; days -- ;
rank: 337
score: 98.82251586914063
patch: days += $NUMBER$ ; while $NUMBER$ + $NUMBER$ ;
rank: 337
score: 98.80005900065105
patch: days += $NUMBER$ - $NUMBER$ ; } days += $NUMBER$ ;
rank: 337
score: 98.77483452690973
patch: start . set ; days += $NUMBER$ ;
rank: 338
score: 99.10291748046875
patch: start . set ( end . get ( Calendar . DAY _ OF _ MONTH ) ) ; }
rank: 338
score: 98.99593098958333
patch: hours -= 1 ; years -= 1 ;
rank: 338
score: 98.99171752929688
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; days += $NUMBER$ ;
rank: 338
score: 98.98614501953125
patch: days += start . get ( Calendar . HOUR ) ;
rank: 338
score: 98.98438178168402
patch: hours += $NUMBER$ ; seconds += 1 ;
rank: 338
score: 98.89159478081598
patch: days += $NUMBER$ * $NUMBER$ ; break ;
rank: 338
score: 98.84425184461806
patch: days += $NUMBER$ ; days return days ;
rank: 338
score: 98.79996066623264
patch: } else { days += $NUMBER$ ; }
rank: 338
score: 98.77449798583984
patch: start . set ( time ) ;
rank: 339
score: 99.10286088423295
patch: reduce CaMeL And CaMeL Correct ( start , end , Calendar . HOUR _ OF _ DAY , milliseconds ) ;
rank: 339
score: 98.9915707236842
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; years += 1 ;
rank: 339
score: 98.98539225260417
patch: milliseconds += end . get ( Calendar . MILLISECOND ) ;
rank: 339
score: 98.89076741536458
patch: days += $NUMBER$ * Date CaMeL Utils . >= $NUMBER$ ;
rank: 339
score: 98.84412299262152
patch: days += $NUMBER$ ; days = true ;
rank: 339
score: 98.82188720703125
patch: days days += $NUMBER$ ; if += 1 ;
rank: 339
score: 98.79850260416667
patch: days += $NUMBER$ ? 0 : 0 ;
rank: 340
score: 98.99376085069444
patch: months -= $NUMBER$ ; days -= 1 ;
rank: 340
score: 98.99138793945312
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; hours -= $NUMBER$ ;
rank: 340
score: 98.98468017578125
patch: days += end . get ( Calendar . HOUR ) ;
rank: 340
score: 98.98244222005208
patch: days += $NUMBER$ ; years -= $NUMBER$ ;
rank: 340
score: 98.89072672526042
patch: days += $NUMBER$ * Time CaMeL Zone . substring ( ;
rank: 340
score: 98.82032606336806
patch: days += 1 ; days = null ;
rank: 340
score: 98.7982421875
patch: days += $NUMBER$ ? 1 : 0 ; }
rank: 340
score: 98.77393798828125
patch: days += $NUMBER$ + start . get ( ;
rank: 341
score: 98.99277750651042
patch: minutes -= $NUMBER$ ; days -= 1 ;
rank: 341
score: 98.99135131835938
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; years -= 1 ;
rank: 341
score: 98.98200819227431
patch: seconds += $NUMBER$ ; years += 1 ;
rank: 341
score: 98.89064719460227
patch: days += $NUMBER$ * ( $NUMBER$ * $NUMBER$ ) ;
rank: 341
score: 98.8431640625
patch: days = $NUMBER$ ; } days = $NUMBER$ ;
rank: 341
score: 98.82003784179688
patch: days = $NUMBER$ ; days days = $NUMBER$ ;
rank: 342
score: 99.101806640625
patch: minutes += reduce CaMeL And CaMeL Correct ( start , Calendar . DAY _ OF _ MONTH , days ) ;
rank: 342
score: 98.99101426866319
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) - hours ;
rank: 342
score: 98.98198106553819
patch: hours -= 1 ; minutes -= 1 ;
rank: 342
score: 98.98183186848958
patch: seconds = reduce CaMeL And CaMeL Correct ( $NUMBER$ ) ;
rank: 342
score: 98.84254964192708
patch: days += days ; days catch $NUMBER$ ;
rank: 342
score: 98.81978149414063
patch: days += $NUMBER$ ; $NUMBER$ ; += $NUMBER$ ;
rank: 342
score: 98.77265082465277
patch: start = $NUMBER$ * $NUMBER$ + $NUMBER$ ;
rank: 343
score: 99.10122501148896
patch: int days = end . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 343
score: 98.99093017578124
patch: end . set ( Calendar . MILLISECOND ) ;
rank: 343
score: 98.99076080322266
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ) ;
rank: 343
score: 98.98168267144098
patch: seconds += $NUMBER$ ; days += 1 ;
rank: 343
score: 98.8903564453125
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$
rank: 343
score: 98.81961398654514
patch: days += 0 ; days = $STRING$ ;
rank: 343
score: 98.79694158380681
patch: days += 0 + $NUMBER$ ; days += $NUMBER$ ;
rank: 343
score: 98.77194552951389
patch: start . set ( $NUMBER$ ) ; }
rank: 344
score: 99.10114881727431
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; } }
rank: 344
score: 98.99070980674342
patch: days -= 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= $NUMBER$ ;
rank: 344
score: 98.98143853081598
patch: hours += $NUMBER$ ; hours -= $NUMBER$ ;
rank: 344
score: 98.8903076171875
patch: days -= $NUMBER$ * Date CaMeL Utils . ;
rank: 344
score: 98.84052191840277
patch: days = 0 ; if += $NUMBER$ ;
rank: 344
score: 98.8189697265625
patch: days += $NUMBER$ + $NUMBER$ ; days -- ;
rank: 344
score: 98.79675971137152
patch: days += $NUMBER$ ; else return days ;
rank: 344
score: 98.77054850260417
patch: days += $NUMBER$ - $NUMBER$ / $NUMBER$ ;
rank: 345
score: 99.10104709201389
patch: days -= start . get ( Calendar . DAY _ OF _ MONTH ) ; } }
rank: 345
score: 98.99016571044922
patch: days -= Token . get ( Calendar . HOUR _ OF _ DAY ) ;
rank: 345
score: 98.98105197482639
patch: minutes += 1 ; days += 1 ;
rank: 345
score: 98.88971502130681
patch: days += 1 * Date CaMeL Utils . ; }
rank: 345
score: 98.84027862548828
patch: days += 0 ; days * /
rank: 345
score: 98.79539659288194
patch: days ; } days += $NUMBER$ ; }
rank: 345
score: 98.7703857421875
patch: days = $NUMBER$ ? $NUMBER$ : $NUMBER$ ; }
rank: 346
score: 99.09983317057292
patch: days -= $NUMBER$ ; hours -= 1 ;
rank: 346
score: 98.99009303042763
patch: days = Calendar . get CaMeL Instance ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 346
score: 98.98086208767361
patch: minutes += $NUMBER$ ; minutes -= $NUMBER$ ;
rank: 346
score: 98.88942464192708
patch: days += $NUMBER$ * Date CaMeL Utils . ceil ( ;
rank: 346
score: 98.84008178710937
patch: days * * 1 ; days += $NUMBER$ ;
rank: 346
score: 98.81824951171875
patch: days += $NUMBER$ ; days ; += 1 ;
rank: 346
score: 98.7951993075284
patch: days += 0 ; days = $NUMBER$ + $NUMBER$ ;
rank: 346
score: 98.77022094726563
patch: start . set ( $NUMBER$ , 1 ) ;
rank: 347
score: 99.098876953125
patch: hours += reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY , days ) ;
rank: 347
score: 98.98994373139881
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; days += 1 ;
rank: 347
score: 98.98861355251736
patch: months -= $NUMBER$ ; years -= 1 ;
rank: 347
score: 98.98074679904514
patch: seconds += 1 ; seconds -= 1 ;
rank: 347
score: 98.88906860351562
patch: days += $NUMBER$ * Date CaMeL Utils . days ) ;
rank: 347
score: 98.84006754557292
patch: days = - 1 ; days -- ;
rank: 347
score: 98.81810167100694
patch: days += $NUMBER$ ; days days ++ ;
rank: 348
score: 99.09843306107955
patch: days -= reduce CaMeL And CaMeL Correct ( start , Calendar . DAY _ OF _ MONTH , hours ) ;
rank: 348
score: 98.98955335115132
patch: days -= $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; minutes -= 1 ;
rank: 348
score: 98.88803932883523
patch: long days = $NUMBER$ * Time CaMeL Zone . ;
rank: 348
score: 98.83953247070312
patch: days += - 1 ; days -- ; ;
rank: 348
score: 98.81671820746527
patch: days += 0 ; days = null ;
rank: 348
score: 98.79491077769886
patch: days ; days += 1 ; days += $NUMBER$ ;
rank: 349
score: 99.09736965013587
patch: days = Calendar . get CaMeL Instance ( timezone ) . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 349
score: 98.98901977539063
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; days += $NUMBER$ ;
rank: 349
score: 98.98031955295139
patch: hours += 1 ; seconds += 1 ;
rank: 349
score: 98.88798014322917
patch: days += $NUMBER$ / $NUMBER$ * Date CaMeL Utils . ;
rank: 349
score: 98.83930799696181
patch: days = $NUMBER$ ; days -- ; }
rank: 349
score: 98.81658257378473
patch: days $NUMBER$ $NUMBER$ ; days += $NUMBER$ ;
rank: 349
score: 98.79488118489583
patch: days += 0 ; this . days += $NUMBER$ ; }
rank: 349
score: 98.7687759399414
patch: double days = days / $NUMBER$ ;
rank: 350
score: 99.09735785590277
patch: days += 1 - start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 350
score: 98.98841145833333
patch: return start . get ( Calendar . DAY _ OF _ YEAR ) ;
rank: 350
score: 98.9869051846591
patch: return format . get ( Calendar . YEAR ) ;
rank: 350
score: 98.97980414496527
patch: minutes += $NUMBER$ ; years += 1 ;
rank: 350
score: 98.96561686197917
patch: seconds -= 1 ; years -= 1 ;
rank: 350
score: 98.88794555664063
patch: time += $NUMBER$ * Date CaMeL Utils . ;
rank: 350
score: 98.79486762152777
patch: days ++ ; if days += 0 ;
rank: 350
score: 98.76702880859375
patch: days -= $NUMBER$ ; } days ++ ;
rank: 351
score: 98.98828125
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; months += 1 ;
rank: 351
score: 98.88787841796875
patch: days += $NUMBER$ * Date CaMeL Utils . random ( ;
rank: 351
score: 98.83792724609376
patch: days += $NUMBER$ ; days catch += 1 ;
rank: 351
score: 98.81533203125
patch: days += $NUMBER$ ; days = 1 ; days
rank: 351
score: 98.76618041992188
patch: days = $NUMBER$ * Date CaMeL Utils . ;
rank: 352
score: 99.09727647569444
patch: hours += 1 ; hours += 1 ;
rank: 352
score: 98.98826293945312
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; days += 1 ;
rank: 352
score: 98.97960747612848
patch: hours -= 1 ; days += 1 ;
rank: 352
score: 98.88559977213542
patch: days -= $NUMBER$ * Time CaMeL Zone . $NUMBER$ ; }
rank: 352
score: 98.83772277832031
patch: days * / days += 1 ;
rank: 352
score: 98.81480712890625
patch: days += $NUMBER$ + ; days += $NUMBER$ ;
rank: 352
score: 98.7947110262784
patch: days += $NUMBER$ - days ; days += $NUMBER$ ;
rank: 352
score: 98.76585557725694
patch: days = days * $NUMBER$ + $NUMBER$ ;
rank: 353
score: 99.09689170435855
patch: days += reduce CaMeL And CaMeL Correct ( start , Calendar . DAY _ OF _ MONTH ,
rank: 353
score: 98.98821343315973
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) - months ;
rank: 353
score: 98.98249647352431
patch: months += $NUMBER$ ; hours -= 1 ;
rank: 353
score: 98.88496229383681
patch: days += $NUMBER$ * long $NUMBER$ ; }
rank: 353
score: 98.81388549804687
patch: days += $NUMBER$ ; days if += $NUMBER$ ;
rank: 353
score: 98.794287109375
patch: days * 0 ; days += $NUMBER$ ; }
rank: 353
score: 98.765478515625
patch: start . set ( $NUMBER$ * $NUMBER$ ) ;
rank: 354
score: 98.97776963975694
patch: seconds += 1 ; days += 1 ;
rank: 354
score: 98.88487752278645
patch: days += Integer . parse CaMeL Int ( $NUMBER$ ) ;
rank: 354
score: 98.83651394314236
patch: days ] = $NUMBER$ ; += $NUMBER$ ;
rank: 354
score: 98.79417114257812
patch: days [ start . get ( $NUMBER$ ) ;
rank: 354
score: 98.76536051432292
patch: days += 1 ; days ++ ; }
rank: 355
score: 98.98724772135417
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY - minutes ;
rank: 355
score: 98.98099975585937
patch: start . format ( start , end ) ;
rank: 355
score: 98.9567138671875
patch: seconds -= start . get ( timezone ) ;
rank: 355
score: 98.88427734375
patch: days += $NUMBER$ * Date CaMeL Utils . days 1 ;
rank: 355
score: 98.83600616455078
patch: days = 0 ; days -- ;
rank: 355
score: 98.81328735351562
patch: days days += 0 ; days = $NUMBER$ ;
rank: 355
score: 98.79383002387152
patch: days += $NUMBER$ - $NUMBER$ * $NUMBER$ ;
rank: 356
score: 99.09630408653847
patch: Calendar start = Calendar . get CaMeL Instance ( timezone ) ;
rank: 356
score: 98.97713216145833
patch: hours -= 1 ; days -= $NUMBER$ ;
rank: 356
score: 98.88382568359376
patch: days += 1 * Date CaMeL Utils . ;
rank: 356
score: 98.83575439453125
patch: days += start . get += 1 ;
rank: 356
score: 98.81174723307292
patch: days += 1 ; days
rank: 356
score: 98.79377885298295
patch: days += $NUMBER$ ; days += $NUMBER$ / days ;
rank: 356
score: 98.76462227957589
patch: time = days + $NUMBER$ ;
rank: 357
score: 99.09543185763889
patch: days -= 1 ; minutes -= 1 ;
rank: 357
score: 98.98650568181819
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) . get CaMeL Time ( ) ;
rank: 357
score: 98.97707790798611
patch: hours -= 1 ; seconds -= 1 ;
rank: 357
score: 98.8837381998698
patch: days += $NUMBER$ * Date CaMeL Utils . round ( ;
rank: 357
score: 98.83566284179688
patch: days = $NUMBER$ ; days * /
rank: 357
score: 98.81169297960069
patch: days = $NUMBER$ ; days = null ;
rank: 357
score: 98.79349772135417
patch: days += 0 ; else return days ;
rank: 358
score: 98.98636474609376
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; months -= $NUMBER$ ;
rank: 358
score: 98.97873263888889
patch: minutes -= $NUMBER$ ; years -= 1 ;
rank: 358
score: 98.97660319010417
patch: days += $NUMBER$ ; seconds -= 1 ;
rank: 358
score: 98.95123845880681
patch: milliseconds = Calendar . get CaMeL Instance ( ) ;
rank: 358
score: 98.88301595052083
patch: days += $NUMBER$ * Time CaMeL Zone . get ; ;
rank: 358
score: 98.83535427517361
patch: days * / days = - $NUMBER$ ;
rank: 358
score: 98.81116943359375
patch: days += $NUMBER$ ; $NUMBER$ days += $NUMBER$ ;
rank: 358
score: 98.79293484157986
patch: days ; if days += 0 ; }
rank: 358
score: 98.76239013671875
patch: days = $NUMBER$ / $NUMBER$ + $NUMBER$ ;
rank: 359
score: 99.0944187330163
patch: start . set ( Calendar . HOUR _ OF _ DAY , format . get ( Calendar . SECOND ) ) ;
rank: 359
score: 98.98630099826389
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; } milliseconds += 1 ;
rank: 359
score: 98.9786376953125
patch: days = lexx ( format ) ;
rank: 359
score: 98.97517225477431
patch: seconds += 1 ; hours -= 1 ;
rank: 359
score: 98.8822021484375
patch: if ( days > $NUMBER$ * Time CaMeL Zone . ;
rank: 359
score: 98.83534458705357
patch: days += - - days ;
rank: 359
score: 98.81115044487848
patch: days else days = $NUMBER$ + $NUMBER$ ;
rank: 359
score: 98.79131525213069
patch: days += $NUMBER$ + 1 ; days += $NUMBER$ ;
rank: 359
score: 98.76234266493056
patch: days = $NUMBER$ * time + $NUMBER$ ;
rank: 360
score: 99.0943603515625
patch: hours += $NUMBER$ ; }
rank: 360
score: 98.88165283203125
patch: days += $NUMBER$ * YEAR ;
rank: 360
score: 98.83523220486111
patch: days += 0 ; if += $STRING$ ;
rank: 360
score: 98.81100124782986
patch: days += $NUMBER$ ; while $NUMBER$ / ;
rank: 360
score: 98.76221381293402
patch: time = $NUMBER$ * $NUMBER$ * $NUMBER$ ;
rank: 361
score: 99.09425755550987
patch: days += 1 - start . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 361
score: 98.98532104492188
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; years -= $NUMBER$ ;
rank: 361
score: 98.97743918678977
patch: hours = Calendar . get CaMeL Instance ( ) ;
rank: 361
score: 98.9475830078125
patch: days -= start . get ( timezone ) ;
rank: 361
score: 98.88128662109375
patch: days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ + ;
rank: 361
score: 98.83522542317708
patch: days += 0 ; days -- ; ;
rank: 361
score: 98.81015625
patch: days += 0 ; days += $NUMBER$ ; days
rank: 361
score: 98.79069380326705
patch: days = $NUMBER$ * days ; days += $NUMBER$ ;
rank: 361
score: 98.76178588867188
patch: days += $NUMBER$ * $NUMBER$ + 1 ; }
rank: 362
score: 99.09356134588069
patch: days -= reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY , hours ) ;
rank: 362
score: 98.98527018229167
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; years += 1 ;
rank: 362
score: 98.97412787543402
patch: hours += $NUMBER$ ; seconds -= $NUMBER$ ;
rank: 362
score: 98.88069661458333
patch: time += $NUMBER$ * Time CaMeL Zone . $NUMBER$ ; }
rank: 362
score: 98.83492279052734
patch: days ++ ; days catch $NUMBER$ ;
rank: 362
score: 98.80964965820313
patch: days += $NUMBER$ + 1 ; += 1 ;
rank: 362
score: 98.79059516059027
patch: days ; days ++ += $NUMBER$ ; }
rank: 362
score: 98.76171875
patch: days |= $NUMBER$ + $NUMBER$ ;
rank: 363
score: 99.09351748511905
patch: reduce CaMeL And CaMeL Correct ( start , end , Calendar . HOUR _ OF _ DAY ) ; }
rank: 363
score: 98.8806864420573
patch: days += Math . abs ( days / $NUMBER$ ) ;
rank: 363
score: 98.78983561197917
patch: days ; days += $NUMBER$ ; days += $NUMBER$ ; }
rank: 363
score: 98.76171196831598
patch: days += $NUMBER$ * Double . $NUMBER$ ;
rank: 364
score: 99.09319390190973
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; } }
rank: 364
score: 98.97216796875
patch: minutes += 1 ; years += $NUMBER$ ;
rank: 364
score: 98.8804219563802
patch: days += Math . abs ( days + 1 ) ;
rank: 364
score: 98.83437093098958
patch: days += 0 ; if += 0 ;
rank: 364
score: 98.80938720703125
patch: days += $NUMBER$ ; days days = 0 ;
rank: 364
score: 98.78964233398438
patch: days += $NUMBER$ + $NUMBER$ ; days += $NUMBER$ ; }
rank: 364
score: 98.76158142089844
patch: days += $NUMBER$ <= $NUMBER$ ; }
rank: 365
score: 98.98460693359375
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; } milliseconds -= 1 ;
rank: 365
score: 98.97254774305556
patch: months += $NUMBER$ ; minutes -= 1 ;
rank: 365
score: 98.97170681423611
patch: days += $NUMBER$ ; years += $NUMBER$ ;
rank: 365
score: 98.94203694661458
patch: months -= 1 ; days -= 1 ;
rank: 365
score: 98.83432345920139
patch: days += 0 ; days return days ;
rank: 365
score: 98.80931939019098
patch: days += $NUMBER$ ; days else days ;
rank: 365
score: 98.78912908380681
patch: days += $NUMBER$ ; days += $NUMBER$ ; } }
rank: 365
score: 98.76140594482422
patch: long days = $NUMBER$ / $NUMBER$ ;
rank: 366
score: 98.98445434570313
patch: days -= reduce CaMeL And CaMeL Correct ( start , end , Calendar . MILLISECOND , seconds ) ;
rank: 366
score: 98.94028049045139
patch: seconds -= 1 ; days -= $NUMBER$ ;
rank: 366
score: 98.87999471028645
patch: long time = $NUMBER$ * Date CaMeL Utils . $NUMBER$ ;
rank: 366
score: 98.83395724826389
patch: days += days ; days += days ;
rank: 366
score: 98.78899468315973
patch: days days = $NUMBER$ * $NUMBER$ ; }
rank: 366
score: 98.76115417480469
patch: days += $NUMBER$ ; } ++ ;
rank: 367
score: 99.09244995117187
patch: end . set ( end . get ( Calendar . DAY _ OF _ MONTH ) ) ; }
rank: 367
score: 98.98370361328125
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; years -= $NUMBER$ ;
rank: 367
score: 98.97171359592014
patch: milliseconds += $NUMBER$ ; minutes -= 1 ;
rank: 367
score: 98.97043863932292
patch: minutes += 1 ; days += $NUMBER$ ;
rank: 367
score: 98.93783230251736
patch: seconds -= 1 ; seconds -= 1 ;
rank: 367
score: 98.87984212239583
patch: days += $NUMBER$ * Time CaMeL Zone . DATE ; }
rank: 367
score: 98.83382839626736
patch: days += 0 ; days += ; ;
rank: 367
score: 98.80792236328125
patch: days += $NUMBER$ ; days += SIZE ;
rank: 367
score: 98.78870738636364
patch: days += 1 ; days += $NUMBER$ + $NUMBER$ ;
rank: 367
score: 98.76021321614583
patch: time += $NUMBER$ ; days += $NUMBER$ ;
rank: 368
score: 98.9833740234375
patch: days += end . get ( Calendar . DAY _ OF _ YEAR ) ; days -= 1 ;
rank: 368
score: 98.96998291015625
patch: days = start . get ( timezone ) ;
rank: 368
score: 98.87922886439732
patch: days += 1 * time ;
rank: 368
score: 98.80670776367188
patch: days += $NUMBER$ ; if += $NUMBER$ ; ;
rank: 369
score: 98.98292846679688
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; days -= $NUMBER$ ;
rank: 369
score: 98.8773905436198
patch: long time = $NUMBER$ * Time CaMeL Zone . $NUMBER$ ;
rank: 369
score: 98.83241271972656
patch: days += ; += - 1 ;
rank: 369
score: 98.80631510416667
patch: days += $NUMBER$ ; return $NUMBER$ ; ;
rank: 369
score: 98.75775146484375
patch: days = $NUMBER$ ; }
rank: 370
score: 98.9826595908717
patch: days -= reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY ,
rank: 370
score: 98.96950954861111
patch: hours -= 1 ; days += $NUMBER$ ;
rank: 370
score: 98.87675337357955
patch: days += $NUMBER$ * Time CaMeL Zone . HOUR ;
rank: 370
score: 98.83224923270089
patch: days += ; + $NUMBER$ ;
rank: 370
score: 98.80622863769531
patch: days $NUMBER$ ; days += 1 ;
rank: 370
score: 98.75701293945312
patch: days -= $NUMBER$ ; days += 1 ; }
rank: 371
score: 99.09161783854167
patch: end . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 371
score: 98.98259887695312
patch: days = end . get ( Calendar . DAY _ OF _ MONTH ) ; days -= 1 ;
rank: 371
score: 98.96883138020833
patch: seconds += 1 ; years += $NUMBER$ ;
rank: 371
score: 98.93452284071181
patch: seconds -= $NUMBER$ ; days -= $NUMBER$ ;
rank: 371
score: 98.87602233886719
patch: days += $NUMBER$ * ; ; }
rank: 371
score: 98.80609809027777
patch: days += $NUMBER$ ; days * $NUMBER$ /
rank: 371
score: 98.78759765625
patch: days ; if ; days += 0 ;
rank: 371
score: 98.75687255859376
patch: time += $NUMBER$ ; } days += $NUMBER$ ;
rank: 372
score: 98.9825927734375
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; seconds -= $NUMBER$ ;
rank: 372
score: 98.96869574652777
patch: minutes += 1 ; days -= $NUMBER$ ;
rank: 372
score: 98.93197970920139
patch: return format CaMeL Duration ( $NUMBER$ ) ;
rank: 372
score: 98.8743896484375
patch: long days += $NUMBER$ * Date CaMeL Utils . ;
rank: 372
score: 98.83151584201389
patch: days ++ ; days catch += $STRING$ ;
rank: 372
score: 98.8046875
patch: days += 0 ; days ;
rank: 372
score: 98.78693305121527
patch: days ; if ( days == 0 ;
rank: 372
score: 98.75647735595703
patch: start . remove ( $NUMBER$ ) ;
rank: 373
score: 99.09151204427083
patch: hours -= start . get ( Calendar . DAY _ OF _ MONTH ) ; } }
rank: 373
score: 98.98230590820313
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; milliseconds -= 1 ;
rank: 373
score: 98.96771918402777
patch: hours += 1 ; hours -= $NUMBER$ ;
rank: 373
score: 98.9654541015625
patch: months += 1 ; years -= 1 ;
rank: 373
score: 98.9307861328125
patch: hours -= $NUMBER$ ; days -= $NUMBER$ ;
rank: 373
score: 98.87384033203125
patch: days += $NUMBER$ * Time CaMeL Zone . days $NUMBER$ ;
rank: 373
score: 98.80426703559027
patch: days = $NUMBER$ ; days = $STRING$ ;
rank: 373
score: 98.75593566894531
patch: long time = days + $NUMBER$ ;
rank: 374
score: 99.09140846946023
patch: days += reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY , milliseconds ) ;
rank: 374
score: 98.98210706208882
patch: days -= 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; minutes -= 1 ;
rank: 374
score: 98.9654541015625
patch: days -= $NUMBER$ ; minutes -= 1 ;
rank: 374
score: 98.93059624565973
patch: months = $NUMBER$ ; days -= 1 ;
rank: 374
score: 98.80423583984376
patch: days += $NUMBER$ + $NUMBER$ ; days = ;
rank: 374
score: 98.78577769886364
patch: days += 0 ; days += $NUMBER$ ; } }
rank: 374
score: 98.7554443359375
patch: days += $NUMBER$ - $NUMBER$ + $NUMBER$ ; }
rank: 375
score: 99.09065755208333
patch: hours += - start . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 375
score: 98.98210063733552
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; years += 1 ;
rank: 375
score: 98.96601019965277
patch: seconds += 1 ; years += 1 ;
rank: 375
score: 98.87294699928977
patch: days += $NUMBER$ * time . get ( ; }
rank: 375
score: 98.83015950520833
patch: days += ; int days += $NUMBER$ ;
rank: 375
score: 98.78406778971355
patch: days += $NUMBER$ * $NUMBER$ ; days += $NUMBER$ ; }
rank: 375
score: 98.75452880859375
patch: days += 1 ; days -= $NUMBER$ ; }
rank: 376
score: 99.0897216796875
patch: minutes += reduce CaMeL And CaMeL Correct ( format , pad CaMeL With CaMeL Zeros ) ;
rank: 376
score: 98.98204040527344
patch: return start . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 376
score: 98.96348741319444
patch: milliseconds += $NUMBER$ ; hours -= 1 ;
rank: 376
score: 98.80349392361111
patch: days ; days = $NUMBER$ + 1 ;
rank: 376
score: 98.75238037109375
patch: start . ; days = $NUMBER$ * $NUMBER$ ;
rank: 377
score: 98.98179931640625
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; months -= $NUMBER$ ;
rank: 377
score: 98.96390109592014
patch: seconds += $NUMBER$ ; days += $NUMBER$ ;
rank: 377
score: 98.82907443576389
patch: days += $NUMBER$ ; } if $NUMBER$ ;
rank: 377
score: 98.80339898003473
patch: days += $NUMBER$ ; ; if $NUMBER$ /
rank: 377
score: 98.78368123372395
patch: days += $NUMBER$ ; days += $NUMBER$ + $NUMBER$ ; }
rank: 377
score: 98.75235595703126
patch: days *= $NUMBER$ ; days += $NUMBER$ ; }
rank: 378
score: 99.08930121527777
patch: hours += end . get ( Calendar . HOUR _ OF _ DAY ) ; } }
rank: 378
score: 98.98157416449652
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ; } milliseconds += $NUMBER$ ;
rank: 378
score: 98.96373833550348
patch: minutes += 1 ; minutes -= $NUMBER$ ;
rank: 378
score: 98.87210083007812
patch: double days = $NUMBER$ * Time CaMeL Zone . $NUMBER$ ;
rank: 378
score: 98.80323621961806
patch: days += $NUMBER$ ; days = ; /
rank: 378
score: 98.78330300071023
patch: days += $NUMBER$ * $NUMBER$ ; days += 0 ;
rank: 378
score: 98.75220947265625
patch: days += $NUMBER$ * long CaMeL Value ; }
rank: 379
score: 98.98155381944444
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) - $NUMBER$ ;
rank: 379
score: 98.96304660373264
patch: seconds += $NUMBER$ ; minutes -= $NUMBER$ ;
rank: 379
score: 98.828369140625
patch: days += - 1 ; days = 1 ;
rank: 379
score: 98.8028564453125
patch: days = $NUMBER$ ; days += null ;
rank: 379
score: 98.78316921657986
patch: days [ max ++ ] += $NUMBER$ ;
rank: 380
score: 99.08818223741319
patch: minutes += end . get ( Calendar . DAY _ OF _ MONTH ) ; } }
rank: 380
score: 98.98142496744792
patch: days += reduce CaMeL And CaMeL Correct ( start , Calendar . MILLISECOND , seconds ) ;
rank: 380
score: 98.96277533637152
patch: days += $NUMBER$ ; years += 1 ;
rank: 380
score: 98.95985243055556
patch: milliseconds -= $NUMBER$ ; days -= 1 ;
rank: 380
score: 98.87165971235795
patch: days += $NUMBER$ * Math . abs ( $NUMBER$ ;
rank: 380
score: 98.82830810546875
patch: days += 1 ; += - 1 ;
rank: 380
score: 98.80261908637152
patch: days += $STRING$ ; days = 1 ;
rank: 380
score: 98.75196668836806
patch: days += $NUMBER$ + $NUMBER$ | $NUMBER$ ;
rank: 381
score: 99.08816189236111
patch: days = end . get ( Calendar . HOUR _ OF _ DAY ) ; } }
rank: 381
score: 98.98131713867187
patch: days -= reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ YEAR , days ) ;
rank: 381
score: 98.96265326605902
patch: hours += 1 ; seconds -= $NUMBER$ ;
rank: 381
score: 98.92630343967014
patch: seconds -= 1 ; years += 1 ;
rank: 381
score: 98.87076822916667
patch: days += $NUMBER$ * Time CaMeL Zone . round ( ;
rank: 381
score: 98.82827758789062
patch: days += - days ;
rank: 381
score: 98.80232747395833
patch: days += 0 ; days += null ;
rank: 381
score: 98.78294788707386
patch: days += $NUMBER$ ; days += $NUMBER$ - $NUMBER$ ;
rank: 381
score: 98.75170288085937
patch: start . set ( days , $NUMBER$ ) ;
rank: 382
score: 98.98114013671875
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) - 1 ;
rank: 382
score: 98.95880126953125
patch: hours -= $NUMBER$ ; hours -= 1 ;
rank: 382
score: 98.92567952473958
patch: seconds -= 1 ; minutes -= 1 ;
rank: 382
score: 98.87071397569444
patch: days += $NUMBER$ + $NUMBER$ ; } }
rank: 382
score: 98.82820638020833
patch: days += - $NUMBER$ ; += 1 ;
rank: 382
score: 98.80153401692708
patch: days += 1 ; days += null ;
rank: 382
score: 98.78290473090277
patch: days += $NUMBER$ ? 1 : 1 ;
rank: 383
score: 99.08748685396634
patch: hours += - start . get ( Calendar . YEAR ) ;
rank: 383
score: 98.98097630550987
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; days += $NUMBER$ ;
rank: 383
score: 98.96139187282986
patch: seconds += 1 ; years -= $NUMBER$ ;
rank: 383
score: 98.95802815755208
patch: months -= 1 ; years -= 1 ;
rank: 383
score: 98.8281005859375
patch: days += - $NUMBER$ ; days = 1 ;
rank: 383
score: 98.80101521809895
patch: days $NUMBER$ += $NUMBER$ ;
rank: 383
score: 98.78278944227431
patch: days += $NUMBER$ - days + 1 ;
rank: 383
score: 98.75003662109376
patch: days -= $NUMBER$ ; } days += 1 ;
rank: 384
score: 99.08743051382211
patch: hours += end . get ( Calendar . YEAR ) ; }
rank: 384
score: 98.98081665039062
patch: days += reduce CaMeL And CaMeL Correct ( start , end , Calendar . MILLISECOND , minutes ) ;
rank: 384
score: 98.80069986979167
patch: days += $STRING$ ; days = 0 ;
rank: 384
score: 98.78255886501736
patch: days ++ ; } if $NUMBER$ * /
rank: 384
score: 98.74958038330078
patch: start . add ( start ) ;
rank: 385
score: 99.08716982886905
patch: Calendar . get CaMeL Instance ( timezone ) . set CaMeL Time ( Calendar . MILLISECOND , milliseconds ) ;
rank: 385
score: 98.98068076685855
patch: days += reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY ,
rank: 385
score: 98.95766872829861
patch: days -= $NUMBER$ ; years -= $NUMBER$ ;
rank: 385
score: 98.82737901475694
patch: days += $NUMBER$ ; days = start .
rank: 385
score: 98.80046735491071
patch: days += $NUMBER$ ; days /
rank: 385
score: 98.78242631392045
patch: days += 0 ; if ; days += $NUMBER$ ;
rank: 385
score: 98.74931640625
patch: days += $NUMBER$ ; } time += $NUMBER$ ;
rank: 386
score: 98.98060302734375
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; minutes -= 1 ;
rank: 386
score: 98.92339409722223
patch: hours -= $NUMBER$ ; seconds -= 1 ;
rank: 386
score: 98.82672119140625
patch: days += $NUMBER$ ; days += ( $NUMBER$ ;
rank: 386
score: 98.78203125
patch: days ++ ; else { days += $NUMBER$ ;
rank: 386
score: 98.74858940972223
patch: date = $NUMBER$ * $NUMBER$ + $NUMBER$ ;
rank: 387
score: 99.08663330078124
patch: days += 1 ; days -= 1 ; }
rank: 387
score: 98.98050265842014
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; } milliseconds -= $NUMBER$ ;
rank: 387
score: 98.86687469482422
patch: days += $NUMBER$ * days ; ;
rank: 387
score: 98.82650756835938
patch: days += days ; if $NUMBER$ ;
rank: 387
score: 98.79982503255208
patch: days += $NUMBER$ ; while $NUMBER$ * /
rank: 387
score: 98.78197564019098
patch: days ; ; days += $NUMBER$ ; }
rank: 387
score: 98.7484375
patch: days += $NUMBER$ * Double . $NUMBER$ ; }
rank: 388
score: 98.9804751747533
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds -= $NUMBER$ ;
rank: 388
score: 98.86672973632812
patch: days += Math . abs ( days + $NUMBER$ ) ;
rank: 388
score: 98.82594299316406
patch: days += $NUMBER$ ; += days ;
rank: 388
score: 98.79890441894531
patch: days days += $NUMBER$ ; break ;
rank: 388
score: 98.7819091796875
patch: days ++ ; } } days += $NUMBER$ ;
rank: 388
score: 98.74827270507812
patch: start += $NUMBER$ ; } days += $NUMBER$ ;
rank: 389
score: 99.08544921875
patch: start . set ( end , end , Calendar . HOUR _ OF _ DAY ) ;
rank: 389
score: 98.9787365141369
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY - reduce CaMeL And CaMeL Correct ( start ,
rank: 389
score: 98.95330132378473
patch: hours -= $NUMBER$ ; minutes -= 1 ;
rank: 389
score: 98.8654073079427
patch: days += $NUMBER$ * Date CaMeL Utils . time ( ;
rank: 389
score: 98.82569715711806
patch: days : days ; if += $NUMBER$ ;
rank: 389
score: 98.78169468470982
patch: days ; if += $NUMBER$ ;
rank: 390
score: 99.08501727764423
patch: hours -= - start . get ( Calendar . YEAR ) ;
rank: 390
score: 98.97848510742188
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; minutes -= 1 ;
rank: 390
score: 98.95908610026042
patch: seconds += 1 ; minutes -= $NUMBER$ ;
rank: 390
score: 98.92055257161458
patch: seconds -= 1 ; years += $NUMBER$ ;
rank: 390
score: 98.82557678222656
patch: days = start . days $NUMBER$ ;
rank: 390
score: 98.79779730902777
patch: days += $NUMBER$ ; for $NUMBER$ / /
rank: 390
score: 98.78132459852431
patch: days ; } if days += $NUMBER$ ;
rank: 390
score: 98.74673461914062
patch: long $NUMBER$ = days + 1 ;
rank: 391
score: 99.08475435697116
patch: hours += - start . get ( Calendar . MONTH ) ;
rank: 391
score: 98.97792405348558
patch: days -= end . get ( Calendar . YEAR ) ; }
rank: 391
score: 98.95900472005208
patch: seconds += 1 ; days -= $NUMBER$ ;
rank: 391
score: 98.95169406467014
patch: seconds -= $NUMBER$ ; hours -= 1 ;
rank: 391
score: 98.86506791548295
patch: days += $NUMBER$ * Time CaMeL Zone . time ;
rank: 391
score: 98.825244140625
patch: days += $NUMBER$ ; days * - $NUMBER$ ;
rank: 391
score: 98.79731580946181
patch: days = $NUMBER$ + $NUMBER$ - $NUMBER$ ;
rank: 391
score: 98.78034125434027
patch: days += 0 ; days / * /
rank: 391
score: 98.74586995442708
patch: days |= $NUMBER$ + $NUMBER$ + $NUMBER$ ;
rank: 392
score: 99.08369584517045
patch: minutes += reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY , hours ) ;
rank: 392
score: 98.97755191200658
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; hours += 1 ;
rank: 392
score: 98.95726182725694
patch: minutes += 1 ; years += 1 ;
rank: 392
score: 98.95140991210937
patch: hours = $NUMBER$ ;
rank: 392
score: 98.863916015625
patch: days += $NUMBER$ ; time += $NUMBER$ ; ;
rank: 392
score: 98.8248291015625
patch: days * 0 ; days -- ;
rank: 392
score: 98.79729546440973
patch: days $NUMBER$ ; days $NUMBER$ = $NUMBER$ ;
rank: 392
score: 98.78021850585938
patch: days ; finally { days += $NUMBER$ ; }
rank: 392
score: 98.74555969238281
patch: days : days += $NUMBER$ ; }
rank: 393
score: 99.08306329900569
patch: minutes += reduce CaMeL And CaMeL Correct ( start , Calendar . DAY _ OF _ MONTH , hours ) ;
rank: 393
score: 98.97739868164062
patch: days -= reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ YEAR , hours ) ;
rank: 393
score: 98.95671929253473
patch: seconds += 1 ; days += $NUMBER$ ;
rank: 393
score: 98.95134141710069
patch: seconds -= $NUMBER$ ; minutes -= 1 ;
rank: 393
score: 98.91890258789063
patch: seconds += start . get ( timezone ) ;
rank: 393
score: 98.86342551491477
patch: time += $NUMBER$ * Date CaMeL Utils . ; }
rank: 393
score: 98.8248046875
patch: days += - $NUMBER$ ; days = 0 ;
rank: 393
score: 98.7801513671875
patch: days += 0 ; } }
rank: 393
score: 98.74546813964844
patch: days += $NUMBER$ || $NUMBER$ ; }
rank: 394
score: 99.08266977163461
patch: hours -= - start . get ( Calendar . MONTH ) ;
rank: 394
score: 98.97601609002976
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds -= $NUMBER$ ;
rank: 394
score: 98.95576307508681
patch: hours -= 1 ; years += $NUMBER$ ;
rank: 394
score: 98.91811116536458
patch: seconds -= $NUMBER$ ; seconds -= 1 ;
rank: 394
score: 98.86294555664062
patch: days += $NUMBER$ * Time CaMeL Zone . $NUMBER$ * ;
rank: 394
score: 98.82411499023438
patch: days += $NUMBER$ ; days * - 1 ;
rank: 394
score: 98.79667663574219
patch: days += $NUMBER$ ; days days ;
rank: 394
score: 98.7798184481534
patch: days += 0 ; days += $NUMBER$ - $NUMBER$ ;
rank: 394
score: 98.74541015625
patch: start . append ( $NUMBER$ * $NUMBER$ ) ;
rank: 395
score: 99.08251953125
patch: days -= 1 ; hours += 1 ;
rank: 395
score: 98.97451171875
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; seconds += 1 ;
rank: 395
score: 98.95088704427083
patch: days = lexx ( timezone ) ;
rank: 395
score: 98.86180284288194
patch: sb . append ( $NUMBER$ ) ; }
rank: 395
score: 98.823974609375
patch: days ] = days ; days -- ;
rank: 395
score: 98.79656110491071
patch: days else days = $NUMBER$ ;
rank: 395
score: 98.77938842773438
patch: days [ days ] = $NUMBER$ / $NUMBER$ ;
rank: 395
score: 98.74468994140625
patch: double days = days * $NUMBER$ + $NUMBER$ ;
rank: 396
score: 99.08251953125
patch: hours += end . get ( Calendar . MONTH ) ; }
rank: 396
score: 98.97401123046875
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; years += $NUMBER$ ;
rank: 396
score: 98.95423719618056
patch: minutes += 1 ; years -= $NUMBER$ ;
rank: 396
score: 98.95064968532986
patch: milliseconds -= $NUMBER$ ; years -= 1 ;
rank: 396
score: 98.86146129261364
patch: days += $NUMBER$ * Time CaMeL Zone . FORMAT ;
rank: 396
score: 98.8233642578125
patch: days * ; days = - 1 ;
rank: 396
score: 98.79562038845486
patch: days += $NUMBER$ ; $NUMBER$ * $NUMBER$ ;
rank: 396
score: 98.7791748046875
patch: days ++ ; * * * /
rank: 397
score: 98.97384643554688
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; minutes += 1 ;
rank: 397
score: 98.94938829210069
patch: minutes -= 1 ; years -= 1 ;
rank: 397
score: 98.86121715198864
patch: days += $NUMBER$ * Time CaMeL Zone $NUMBER$ ; }
rank: 397
score: 98.82320556640624
patch: days ] += $NUMBER$ ; if += $NUMBER$ ;
rank: 397
score: 98.77890625
patch: days ; else { days += $NUMBER$ ; }
rank: 397
score: 98.7433837890625
patch: days += $NUMBER$ ; } } return $NUMBER$ ;
rank: 398
score: 99.08186479048295
patch: days -= reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY , days ) ;
rank: 398
score: 98.97376708984375
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; years += $NUMBER$ ;
rank: 398
score: 98.94877115885417
patch: seconds += $NUMBER$ ; }
rank: 398
score: 98.86011851917614
patch: if ( days > 0 ) days += $NUMBER$ ;
rank: 398
score: 98.77836608886719
patch: days ; } if += $NUMBER$ ;
rank: 398
score: 98.7429443359375
patch: days -= 1 ; days += $NUMBER$ ; }
rank: 399
score: 98.9731677827381
patch: days += $NUMBER$ * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY - hours ;
rank: 399
score: 98.91568429129464
patch: seconds = $NUMBER$ + $NUMBER$ ;
rank: 399
score: 98.82302856445312
patch: days ] = $NUMBER$ ; break ;
rank: 399
score: 98.79324679904514
patch: days += $NUMBER$ ; days $NUMBER$ ++ ;
rank: 399
score: 98.7782211303711
patch: days += $NUMBER$ ; } if ;
rank: 399
score: 98.74264187282986
patch: days += $NUMBER$ + $NUMBER$ + time ;
rank: 400
score: 98.85989379882812
patch: days += $NUMBER$ * Date CaMeL Utils . + ( ;
rank: 400
score: 98.82280815972223
patch: days += ; } days += $NUMBER$ ;
rank: 400
score: 98.79301622178819
patch: days += $NUMBER$ ; days = ; ;
rank: 400
score: 98.77808973524306
patch: days ++ * / days += $NUMBER$ ;
rank: 400
score: 98.7425028483073
patch: long days = days ;
rank: 401
score: 99.08072060032895
patch: days += reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY ,
rank: 401
score: 98.97308959960938
patch: days += reduce CaMeL And CaMeL Correct ( start , end , Calendar . MILLISECOND , days ) ;
rank: 401
score: 98.94914415147569
patch: hours += $NUMBER$ ; minutes += 1 ;
rank: 401
score: 98.94282836914063
patch: end . format ( start , end ) ;
rank: 401
score: 98.91343383789062
patch: months -= start . get ( timezone ) ;
rank: 401
score: 98.8597412109375
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ $NUMBER$ ;
rank: 401
score: 98.822802734375
patch: days += 0 ; days += ( $NUMBER$ ;
rank: 401
score: 98.79234483506944
patch: days += $NUMBER$ ; days += max ;
rank: 401
score: 98.74248046875
patch: long days = days - $NUMBER$ + $NUMBER$ ;
rank: 402
score: 98.9730694110577
patch: days -= end . get ( Calendar . MONTH ) ; }
rank: 402
score: 98.91205512152777
patch: days -= 1 ; seconds -= 1 ;
rank: 402
score: 98.82254638671876
patch: days += $NUMBER$ ; days * * 1 ;
rank: 402
score: 98.79104275173611
patch: days += $NUMBER$ ; days - 0 ;
rank: 402
score: 98.77772352430556
patch: days += $NUMBER$ + $NUMBER$ ; else {
rank: 402
score: 98.742333984375
patch: start . days += $NUMBER$ ; break ; }
rank: 403
score: 99.07999674479167
patch: hours -= - start . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 403
score: 98.97281044407895
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; minutes -= $NUMBER$ ;
rank: 403
score: 98.94833713107639
patch: minutes -= 1 ; seconds -= 1 ;
rank: 403
score: 98.94186740451389
patch: months += $NUMBER$ ; years -= $NUMBER$ ;
rank: 403
score: 98.90995279947917
patch: days -= $NUMBER$ ; seconds -= 1 ;
rank: 403
score: 98.85890706380208
patch: days += $NUMBER$ * Date CaMeL Utils . $NUMBER$ ( ;
rank: 403
score: 98.82227783203125
patch: days += 0 ; if += $NUMBER$ ; ;
rank: 403
score: 98.79045952690973
patch: days += $NUMBER$ ; try if $NUMBER$ /
rank: 403
score: 98.7421875
patch: days -- ; days -= $NUMBER$ ;
rank: 404
score: 99.0792724609375
patch: hours += reduce CaMeL And CaMeL Correct ( start , end , end ,
rank: 404
score: 98.97262137276786
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; hours += 1 ;
rank: 404
score: 98.94740125868056
patch: minutes += $NUMBER$ ; seconds += 1 ;
rank: 404
score: 98.94171142578125
patch: milliseconds += $NUMBER$ ; seconds -= 1 ;
rank: 404
score: 98.90868462456598
patch: seconds -= 1 ; days += 1 ;
rank: 404
score: 98.82185194227431
patch: days += days ; days = 1 ;
rank: 404
score: 98.79037136501736
patch: days += $NUMBER$ ; days += ; days
rank: 404
score: 98.77766248914931
patch: days ++ * ; days += $NUMBER$ ;
rank: 404
score: 98.74139404296875
patch: days += $NUMBER$ / $NUMBER$ + $NUMBER$ ; }
rank: 405
score: 98.97233276367187
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ MONTH , years ) ;
rank: 405
score: 98.94161648220486
patch: seconds += $NUMBER$ ; hours -= $NUMBER$ ;
rank: 405
score: 98.90859985351562
patch: minutes -= start . get ( timezone ) ;
rank: 405
score: 98.85833185369319
patch: days += $NUMBER$ * Date CaMeL Utils . DATE ;
rank: 405
score: 98.82149047851563
patch: days += days ; days += $NUMBER$ ; }
rank: 405
score: 98.77743530273438
patch: days += $NUMBER$ ; this . days += $NUMBER$ ; }
rank: 405
score: 98.74138047960069
patch: days -= $NUMBER$ ; } return $NUMBER$ ;
rank: 406
score: 99.07908935546875
patch: days -= reduce CaMeL And CaMeL Correct ( start , Calendar . DAY _ OF _ MONTH ) ;
rank: 406
score: 98.9720523231908
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; days += $NUMBER$ ;
rank: 406
score: 98.94660101996527
patch: days += 1 ; seconds -= 1 ;
rank: 406
score: 98.94051784939236
patch: months += $NUMBER$ ; seconds -= 1 ;
rank: 406
score: 98.85828746448864
patch: days += $NUMBER$ * Time CaMeL Zone . SIZE ;
rank: 406
score: 98.82109832763672
patch: days else { days += 0 ;
rank: 406
score: 98.78970675998264
patch: days += $NUMBER$ ; ; days = ;
rank: 406
score: 98.77716064453125
patch: days [ $NUMBER$ ] += 0 ; }
rank: 406
score: 98.74121856689453
patch: days += $NUMBER$ ; $NUMBER$ * /
rank: 407
score: 99.07871500651042
patch: days += end . get ( Calendar . HOUR _ OF _ DAY , hours ) ;
rank: 407
score: 98.97200734991776
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; years += $NUMBER$ ;
rank: 407
score: 98.94520874023438
patch: days = get CaMeL Instance ( timezone ) ;
rank: 407
score: 98.90625678168402
patch: days -= 1 ; days -= $NUMBER$ ;
rank: 407
score: 98.85646565755208
patch: days += $NUMBER$ * Time CaMeL Zone . YEAR ; ;
rank: 407
score: 98.78751627604167
patch: days += $NUMBER$ ; days = max ;
rank: 407
score: 98.7770263671875
patch: days ; days += $NUMBER$ ; return $NUMBER$ ;
rank: 407
score: 98.74077690972223
patch: start += $NUMBER$ ; days += $NUMBER$ ;
rank: 408
score: 99.07865978422619
patch: start . set ( end . get ( Calendar . DAY _ OF _ MONTH ) , days ) ;
rank: 408
score: 98.97186889648438
patch: days += 1 ; } milliseconds -= 1 ;
rank: 408
score: 98.94395616319444
patch: hours -= $NUMBER$ ; days += 1 ;
rank: 408
score: 98.90563286675348
patch: days -= 1 ; years += $NUMBER$ ;
rank: 408
score: 98.85625665838069
patch: days += 1 * Time CaMeL Zone . ; }
rank: 408
score: 98.78493826729911
patch: days += m + $NUMBER$ ;
rank: 408
score: 98.77616664341518
patch: days ; days ++ ; }
rank: 409
score: 98.97174682617188
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; } milliseconds -= 1 ;
rank: 409
score: 98.94291178385417
patch: minutes -= 1 ; days += 1 ;
rank: 409
score: 98.85586547851562
patch: days += $NUMBER$ * $NUMBER$ ; break ; }
rank: 409
score: 98.78491889105902
patch: days += $NUMBER$ ; days ; days ;
rank: 409
score: 98.74015977647569
patch: days = days + $NUMBER$ + $NUMBER$ ;
rank: 410
score: 99.07773166232639
patch: days += $NUMBER$ ; hours += 1 ;
rank: 410
score: 98.97163318452381
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; years += $NUMBER$ ;
rank: 410
score: 98.94193522135417
patch: days += $NUMBER$ ; minutes -= $NUMBER$ ;
rank: 410
score: 98.85566711425781
patch: days += $NUMBER$ ; if ( ;
rank: 410
score: 98.82014973958333
patch: days ] += 0 ; if $NUMBER$ ;
rank: 410
score: 98.784912109375
patch: if $NUMBER$ ; days = $NUMBER$ ;
rank: 410
score: 98.77507188585069
patch: days += start ; days += $NUMBER$ ;
rank: 410
score: 98.73964233398438
patch: long time = days * $NUMBER$ + $NUMBER$ ;
rank: 411
score: 98.97154017857143
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; days += $NUMBER$ ;
rank: 411
score: 98.90301513671875
patch: seconds -= 1 ; years -= $NUMBER$ ;
rank: 411
score: 98.81964111328125
patch: days += $NUMBER$ ; days < 1 ;
rank: 411
score: 98.78484429253473
patch: days $NUMBER$ ; days += $NUMBER$ ; ;
rank: 412
score: 99.07687717013889
patch: hours -= reduce CaMeL And CaMeL Correct ( format , pad CaMeL With CaMeL Zeros ) ;
rank: 412
score: 98.9714291221217
patch: days -= $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; months -= $NUMBER$ ;
rank: 412
score: 98.93882242838542
patch: months += $NUMBER$ ; days -= $NUMBER$ ;
rank: 412
score: 98.93785942925348
patch: hours -= 1 ; years += 1 ;
rank: 412
score: 98.85548909505208
patch: days += $NUMBER$ ; end . set ( $NUMBER$ ) ;
rank: 412
score: 98.81951904296875
patch: days += - 1 ; days = 0 ;
rank: 412
score: 98.78480360243056
patch: days += Math + $NUMBER$ + $NUMBER$ ;
rank: 412
score: 98.73891872829861
patch: start . double CaMeL Value ( ) ;
rank: 413
score: 98.97118326822917
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY ; } }
rank: 413
score: 98.93710666232639
patch: hours -= $NUMBER$ ; years += $NUMBER$ ;
rank: 413
score: 98.85469563802083
patch: days += $NUMBER$ ; time -= $NUMBER$ ;
rank: 413
score: 98.81940460205078
patch: days += $NUMBER$ ; += true ;
rank: 413
score: 98.78401692708333
patch: days += $NUMBER$ ; if $NUMBER$ * /
rank: 413
score: 98.77431640625
patch: days [ $NUMBER$ ] += $NUMBER$ + $NUMBER$ ;
rank: 414
score: 98.9711669921875
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; seconds += 1 ;
rank: 414
score: 98.93710666232639
patch: hours += 1 ; minutes += 1 ;
rank: 414
score: 98.85418023003473
patch: days += $NUMBER$ * days - $NUMBER$ ;
rank: 414
score: 98.81917317708333
patch: days += $STRING$ ; if += 1 ;
rank: 414
score: 98.7838134765625
patch: days = $NUMBER$ ; ;
rank: 414
score: 98.77424760298295
patch: days += $NUMBER$ ; if ; days += $NUMBER$ ;
rank: 415
score: 98.97098581414474
patch: days = Calendar . get CaMeL Instance ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 415
score: 98.93683539496527
patch: hours -= $NUMBER$ ; days += $NUMBER$ ;
rank: 415
score: 98.93577067057292
patch: seconds -= 1 ; hours -= 1 ;
rank: 415
score: 98.85390625
patch: days += $NUMBER$ * days + 1 ; }
rank: 415
score: 98.81896209716797
patch: days * / if += $NUMBER$ ;
rank: 415
score: 98.73760308159723
patch: date = days ; days += $NUMBER$ ;
rank: 416
score: 99.07637845552884
patch: minutes = Calendar . get CaMeL Instance ( timezone ) ; }
rank: 416
score: 98.97073974609376
patch: days += $NUMBER$ ; } milliseconds -= 1 ;
rank: 416
score: 98.93570963541667
patch: hours = $NUMBER$ ; days -= 1 ;
rank: 416
score: 98.85366482204861
patch: days += $NUMBER$ * time + time ;
rank: 416
score: 98.81865098741319
patch: days += $NUMBER$ ; if += true ;
rank: 416
score: 98.78304714626736
patch: if += $NUMBER$ ; days = $NUMBER$ ;
rank: 416
score: 98.77398126775569
patch: days += $NUMBER$ ; days = $NUMBER$ + $NUMBER$ ;
rank: 416
score: 98.73680114746094
patch: days = days + $NUMBER$ ; }
rank: 417
score: 99.07624955610795
patch: Calendar . get CaMeL Instance ( timezone ) . set CaMeL Time ( Calendar . DAY _ OF _ MONTH ,
rank: 417
score: 98.97044788707386
patch: days += Token . get ( Calendar . DAY _ OF _ MONTH ) . get CaMeL Time ( ) ;
rank: 417
score: 98.93615044487848
patch: hours += $NUMBER$ ; seconds += $NUMBER$ ;
rank: 417
score: 98.81864929199219
patch: days += $STRING$ ; days ++ ;
rank: 417
score: 98.7739590731534
patch: days += $NUMBER$ ? $NUMBER$ ? $NUMBER$ : $NUMBER$ ;
rank: 417
score: 98.73661586216518
patch: days += $NUMBER$ > $NUMBER$ ;
rank: 418
score: 99.07621256510417
patch: days = end . get ( Calendar . DAY _ OF _ MONTH ) - 1 ;
rank: 418
score: 98.970263671875
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) - start CaMeL Millis ;
rank: 418
score: 98.9359130859375
patch: minutes += 1 ; seconds += 1 ;
rank: 418
score: 98.85312906901042
patch: days += $NUMBER$ * time % $NUMBER$ ;
rank: 418
score: 98.81864929199219
patch: days += - - - $NUMBER$ ;
rank: 418
score: 98.77384440104167
patch: days += $NUMBER$ * days $NUMBER$ ; }
rank: 419
score: 99.07538519965277
patch: hours = end . get ( Calendar . HOUR _ OF _ DAY ) ; } }
rank: 419
score: 98.969970703125
patch: days += end . get ( Calendar . HOUR _ OF _ DAY )
rank: 419
score: 98.93556043836806
patch: minutes -= 1 ; minutes -= 1 ;
rank: 419
score: 98.93291558159723
patch: milliseconds += $NUMBER$ ; years -= $NUMBER$ ;
rank: 419
score: 98.89887152777777
patch: days -= $NUMBER$ ; years += $NUMBER$ ;
rank: 419
score: 98.85052490234375
patch: days += $NUMBER$ * days / $NUMBER$ ;
rank: 419
score: 98.81832885742188
patch: days += $NUMBER$ ; days / * * /
rank: 419
score: 98.78200954861111
patch: days days = $NUMBER$ ; return $NUMBER$ ;
rank: 419
score: 98.77357313368056
patch: days += 0 ; days -= 0 ;
rank: 419
score: 98.73406982421875
patch: long days += $NUMBER$ ; days += $NUMBER$ ;
rank: 420
score: 99.07536010742187
patch: start . set ( end . get ( Calendar . HOUR _ OF _ DAY ) ) ; }
rank: 420
score: 98.96993215460526
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; hours += 1 ;
rank: 420
score: 98.93236626519098
patch: hours -= $NUMBER$ ; years -= $NUMBER$ ;
rank: 420
score: 98.85003107244319
patch: days += $NUMBER$ * Date CaMeL Utils . days )
rank: 420
score: 98.78177642822266
patch: days += 1 ; days $NUMBER$ ;
rank: 420
score: 98.77311197916667
patch: days -= 0 ; days += 1 ;
rank: 420
score: 98.73352728949652
patch: days += Math . abs ( $NUMBER$ ;
rank: 421
score: 99.07504417782738
patch: return reduce CaMeL And CaMeL Correct ( start , end , Calendar . DAY _ OF _ MONTH ) ;
rank: 421
score: 98.9690185546875
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; seconds += $NUMBER$ ;
rank: 421
score: 98.93408881293402
patch: minutes -= 1 ; days += $NUMBER$ ;
rank: 421
score: 98.93094211154514
patch: milliseconds += $NUMBER$ ; days -= $NUMBER$ ;
rank: 421
score: 98.84927368164062
patch: days += $NUMBER$ / $NUMBER$ ; } days += $NUMBER$ ;
rank: 421
score: 98.81783447265624
patch: days * * 1 ; days = $NUMBER$ ;
rank: 421
score: 98.78174506293402
patch: days += $NUMBER$ ; days = $NUMBER$ ,
rank: 421
score: 98.73333740234375
patch: start . days += $NUMBER$ ; break ;
rank: 422
score: 99.07502826891448
patch: int start = Calendar . get CaMeL Instance ( timezone ) . get CaMeL Time ( ) ;
rank: 422
score: 98.968701171875
patch: days += reduce CaMeL And CaMeL Correct ( Token . DAY _ OF _ MONTH , days ) ;
rank: 422
score: 98.81769476996527
patch: days += $NUMBER$ ; ; return days ;
rank: 422
score: 98.78118133544922
patch: days ; days += $NUMBER$ ; ;
rank: 422
score: 98.7725830078125
patch: days * * ; days += $NUMBER$ ;
rank: 422
score: 98.73261260986328
patch: days += $NUMBER$ << $NUMBER$ ; }
rank: 423
score: 99.07466634114583
patch: minutes = end . get ( Calendar . DAY _ OF _ MONTH ) ; } }
rank: 423
score: 98.96859580592105
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY - reduce CaMeL And CaMeL Correct (
rank: 423
score: 98.8486328125
patch: days += $NUMBER$ ; SECOND += $NUMBER$ ;
rank: 423
score: 98.78103976779514
patch: days += $NUMBER$ ; start += $NUMBER$ ;
rank: 423
score: 98.77241654829545
patch: days [ $NUMBER$ ] = $NUMBER$ * $NUMBER$ ; }
rank: 423
score: 98.73215060763889
patch: days = $NUMBER$ * $NUMBER$ / days ;
rank: 424
score: 99.07442898220486
patch: days += start . get ( Calendar . HOUR _ OF _ DAY ) ; } }
rank: 424
score: 98.96833939985795
patch: days -= end . get ( Calendar . DAY _ OF _ YEAR ) . get CaMeL Time ( ) ;
rank: 424
score: 98.93219672309027
patch: minutes += $NUMBER$ ; minutes += 1 ;
rank: 424
score: 98.84821234809027
patch: days += 1 * time + $NUMBER$ ;
rank: 424
score: 98.81728108723958
patch: days += days ; days = days ;
rank: 424
score: 98.78078206380208
patch: days += $NUMBER$ ; start = $NUMBER$ ;
rank: 424
score: 98.77223714192708
patch: days [ $NUMBER$ ] = 0 ; }
rank: 425
score: 99.07436794704861
patch: hours -= end . get ( Calendar . DAY _ OF _ MONTH ) ; } }
rank: 425
score: 98.96824951171875
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; years += 1 ;
rank: 425
score: 98.93174235026042
patch: days += 1 ; years += $NUMBER$ ;
rank: 425
score: 98.89796278211806
patch: months -= 1 ; seconds -= 1 ;
rank: 425
score: 98.84800889756944
patch: days += $NUMBER$ * time ; break ;
rank: 425
score: 98.81695556640625
patch: days = days ; if $NUMBER$ ;
rank: 425
score: 98.78044297960069
patch: days += $NUMBER$ ; while += 0 ;
rank: 425
score: 98.73145141601563
patch: days += 1 ; } days -= $NUMBER$ ;
rank: 426
score: 99.07401899857955
patch: minutes += reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY , days ) ;
rank: 426
score: 98.96801147460937
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; months += $NUMBER$ ;
rank: 426
score: 98.92757161458333
patch: months -= $NUMBER$ ; hours -= 1 ;
rank: 426
score: 98.89772542317708
patch: seconds -= $NUMBER$ ; years += $NUMBER$ ;
rank: 426
score: 98.84745279947917
patch: days += $NUMBER$ ; end . set ( Calendar . ;
rank: 426
score: 98.81675211588542
patch: days * / { days += 0 ;
rank: 426
score: 98.78030734592014
patch: days += $NUMBER$ ; append += $NUMBER$ ;
rank: 426
score: 98.73104095458984
patch: long $NUMBER$ = days * $NUMBER$ ;
rank: 427
score: 99.0728759765625
patch: hours += end . get ( Calendar . MINUTE ) ;
rank: 427
score: 98.96800472861842
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds += 1 ;
rank: 427
score: 98.93124050564236
patch: hours -= 1 ; years -= $NUMBER$ ;
rank: 427
score: 98.81643676757812
patch: days = $NUMBER$ ; return days ;
rank: 427
score: 98.77994791666667
patch: days days += 1 ; if $NUMBER$ ;
rank: 427
score: 98.73087855747768
patch: days = days * $NUMBER$ ;
rank: 428
score: 99.07286376953125
patch: Calendar . get CaMeL Instance ( timezone ) . set CaMeL Time ( start CaMeL Millis ) ; }
rank: 428
score: 98.9678890830592
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; milliseconds -= 1 ;
rank: 428
score: 98.92600504557292
patch: days -= 1 ; years -= $NUMBER$ ;
rank: 428
score: 98.77127685546876
patch: days ; days ; days += $NUMBER$ ; }
rank: 428
score: 98.73038482666016
patch: days ++ ; days -- ; }
rank: 429
score: 99.07237752278645
patch: start . set ( Calendar . MILLISECOND , milliseconds ) ;
rank: 429
score: 98.93018934461806
patch: hours += 1 ; seconds += $NUMBER$ ;
rank: 429
score: 98.81597900390625
patch: days += $NUMBER$ ; return days - $NUMBER$ ;
rank: 429
score: 98.77877807617188
patch: days += $NUMBER$ - $NUMBER$ ; ;
rank: 429
score: 98.77126736111111
patch: days < 0 ? $NUMBER$ : $NUMBER$ ;
rank: 429
score: 98.7298583984375
patch: days += $NUMBER$ ; days = 0 ; }
rank: 430
score: 99.07198392427884
patch: int milliseconds = end . get ( Calendar . MONTH ) ;
rank: 430
score: 98.96751098632812
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; seconds -= 1 ;
rank: 430
score: 98.92999267578125
patch: minutes += $NUMBER$ ; hours -= $NUMBER$ ;
rank: 430
score: 98.84478204900569
patch: days += $NUMBER$ ; if ( days > 0 )
rank: 430
score: 98.81553141276042
patch: days ] = $NUMBER$ ; days ++ ;
rank: 430
score: 98.77835422092014
patch: days += $NUMBER$ ; $NUMBER$ * $NUMBER$ /
rank: 430
score: 98.77061157226562
patch: days += $NUMBER$ ? $NUMBER$ : 1 ; }
rank: 430
score: 98.72934299045139
patch: time = days ; days += $NUMBER$ ;
rank: 431
score: 99.07162814670139
patch: minutes -= 1 ; hours -= 1 ;
rank: 431
score: 98.96732954545455
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; } milliseconds -= 1 ;
rank: 431
score: 98.92977566189236
patch: days += 1 ; years -= $NUMBER$ ;
rank: 431
score: 98.92202419704861
patch: hours = $NUMBER$ ; years -= 1 ;
rank: 431
score: 98.84461558948864
patch: days += $NUMBER$ * Time CaMeL Zone 1 ; }
rank: 431
score: 98.81500244140625
patch: days else { days = false ;
rank: 431
score: 98.77806939019098
patch: days += $NUMBER$ ; equals += $NUMBER$ ;
rank: 431
score: 98.77009721235795
patch: days += $NUMBER$ - $NUMBER$ ; days += 0 ;
rank: 431
score: 98.72800021701389
patch: time = days * $NUMBER$ + $NUMBER$ ;
rank: 432
score: 98.89457194010417
patch: days -= 1 ; years += 1 ;
rank: 432
score: 98.8443832397461
patch: days += 1 ; break ; }
rank: 432
score: 98.81479220920139
patch: days = $NUMBER$ ; days += days ;
rank: 432
score: 98.76985677083333
patch: days ; days ++ days += $NUMBER$ ;
rank: 432
score: 98.72775607638889
patch: year += $NUMBER$ ; days += $NUMBER$ ;
rank: 433
score: 99.07126193576389
patch: hours += start . get ( Calendar . HOUR _ OF _ DAY ) ; } }
rank: 433
score: 98.96614583333333
patch: days += * Date CaMeL Utils . MILLIS _ PER _ DAY ; }
rank: 433
score: 98.92837863498264
patch: seconds += 1 ; seconds += 1 ;
rank: 433
score: 98.89411756727431
patch: seconds -= $NUMBER$ ; years -= $NUMBER$ ;
rank: 433
score: 98.8441162109375
patch: days += $NUMBER$ ; time += $NUMBER$ + $NUMBER$ ;
rank: 433
score: 98.81448025173611
patch: days += 1 ; += - $NUMBER$ ;
rank: 433
score: 98.72749159071181
patch: days += $NUMBER$ + $NUMBER$ / time ;
rank: 434
score: 99.0710205078125
patch: hours += reduce CaMeL And CaMeL Correct ( start , Calendar . DAY _ OF _ MONTH ) ;
rank: 434
score: 98.96592407226562
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; hours += $NUMBER$ ;
rank: 434
score: 98.84405517578125
patch: days += $NUMBER$ + $NUMBER$ ; break ; }
rank: 434
score: 98.81400299072266
patch: days += true ; days -- ;
rank: 434
score: 98.76910400390625
patch: days [ $NUMBER$ ++ ] = $NUMBER$ ;
rank: 434
score: 98.7273681640625
patch: days ++ ; days += $NUMBER$ * $NUMBER$ ;
rank: 435
score: 99.07085626775569
patch: reduce CaMeL And CaMeL Correct ( start , end , Calendar . DAY _ OF _ MONTH , milliseconds ) ;
rank: 435
score: 98.96589965820313
patch: days += reduce CaMeL And CaMeL Correct ( start , end , Calendar . MILLISECOND , years ) ;
rank: 435
score: 98.91902669270833
patch: minutes -= $NUMBER$ ; hours -= 1 ;
rank: 435
score: 98.89388020833333
patch: seconds -= $NUMBER$ ; years += 1 ;
rank: 435
score: 98.84393310546875
patch: days += $NUMBER$ * time - $NUMBER$ ; }
rank: 435
score: 98.81394653320312
patch: days += - 1 ; days * $NUMBER$ ;
rank: 435
score: 98.77669949001736
patch: days days += 0 ; while $NUMBER$ ;
rank: 435
score: 98.76894802517361
patch: days : if ; days += $NUMBER$ ;
rank: 435
score: 98.7266357421875
patch: long days = days - $NUMBER$ / $NUMBER$ ;
rank: 436
score: 99.07066932091347
patch: minutes -= - start . get ( Calendar . YEAR ) ;
rank: 436
score: 98.96585518973214
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; months += 1 ;
rank: 436
score: 98.92770724826389
patch: hours -= 1 ; minutes -= $NUMBER$ ;
rank: 436
score: 98.91893853081598
patch: milliseconds += 1 ; years -= 1 ;
rank: 436
score: 98.81370544433594
patch: days : days * - 1 ;
rank: 436
score: 98.7262451171875
patch: days += $NUMBER$ ; } $NUMBER$ += $NUMBER$ ;
rank: 437
score: 98.9656649502841
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) . to CaMeL String ( ) ;
rank: 437
score: 98.92677815755208
patch: seconds += $NUMBER$ ; seconds += 1 ;
rank: 437
score: 98.91817898220486
patch: milliseconds += 1 ; days -= 1 ;
rank: 437
score: 98.81357421875
patch: days ] += $NUMBER$ ; days += $NUMBER$ ;
rank: 437
score: 98.77602810329861
patch: days += false ; days = $NUMBER$ ;
rank: 437
score: 98.76788884943181
patch: days ; days ++ ; } days += $NUMBER$ ;
rank: 438
score: 99.07009652944711
patch: days -= - start . get ( Calendar . MILLISECOND ) ;
rank: 438
score: 98.9652987393466
patch: days += Calendar . DAY _ OF _ MONTH ;
rank: 438
score: 98.91788736979167
patch: milliseconds -= 1 ; days -= 1 ;
rank: 438
score: 98.84217418323864
patch: days += $NUMBER$ * Date CaMeL Utils . FULL ;
rank: 438
score: 98.81356048583984
patch: days * * / days -- ;
rank: 438
score: 98.77585177951389
patch: days += $NUMBER$ ; days $NUMBER$ -- ;
rank: 438
score: 98.76782989501953
patch: days days += $NUMBER$ * $NUMBER$ ;
rank: 438
score: 98.72616577148438
patch: days ++ ; days += $NUMBER$ / $NUMBER$ ;
rank: 439
score: 98.84211730957031
patch: days += $NUMBER$ * YEAR ; }
rank: 439
score: 98.81331380208333
patch: days else { days = - $NUMBER$ ;
rank: 439
score: 98.76780395507812
patch: days ++ ; if days += 0 ; }
rank: 439
score: 98.72587754991319
patch: days |= $NUMBER$ * $NUMBER$ + $NUMBER$ ;
rank: 440
score: 99.06964789496527
patch: hours = end . get ( Calendar . DAY _ OF _ MONTH ) - 1 ;
rank: 440
score: 98.96502075195312
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; hours += 1 ;
rank: 440
score: 98.92641872829861
patch: hours += $NUMBER$ ; hours += 1 ;
rank: 440
score: 98.91651068793402
patch: months -= 1 ; hours -= 1 ;
rank: 440
score: 98.890625
patch: months -= $NUMBER$ ; seconds -= 1 ;
rank: 440
score: 98.84087456597223
patch: days += ; days += $NUMBER$ ; }
rank: 440
score: 98.81329956054688
patch: days += - $NUMBER$ ; days * $NUMBER$ ;
rank: 440
score: 98.77454485212054
patch: days += 0 + 1 ;
rank: 440
score: 98.76753373579545
patch: days += $NUMBER$ ; else days += $NUMBER$ ; }
rank: 440
score: 98.72572157118056
patch: days += 1 ; } days ++ ;
rank: 441
score: 98.9646484375
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; } milliseconds -= $NUMBER$ ;
rank: 441
score: 98.84037562779018
patch: days += $NUMBER$ * / ;
rank: 441
score: 98.81326293945312
patch: days += days ; days catch += $NUMBER$ ;
rank: 441
score: 98.77448187934027
patch: days += $NUMBER$ ; days $NUMBER$ / /
rank: 441
score: 98.76715642755681
patch: days += 0 ; days += $NUMBER$ | $NUMBER$ ;
rank: 441
score: 98.725537109375
patch: days -= 1 ; } days += $NUMBER$ ;
rank: 442
score: 98.96436157226563
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; months += 1 ;
rank: 442
score: 98.92594401041667
patch: minutes -= $NUMBER$ ; seconds -= 1 ;
rank: 442
score: 98.91525607638889
patch: months += 1 ; hours -= 1 ;
rank: 442
score: 98.889306640625
patch: months = 1 ;
rank: 442
score: 98.83921813964844
patch: days += $NUMBER$ - time ; }
rank: 442
score: 98.81297471788194
patch: days ] = days ; if $NUMBER$ ;
rank: 442
score: 98.7670654296875
patch: days * * * / days += $NUMBER$ ;
rank: 442
score: 98.72512478298611
patch: days += $NUMBER$ / $NUMBER$ + 1 ;
rank: 443
score: 99.06851959228516
patch: hours += reduce CaMeL And CaMeL Correct ( start , end , milliseconds ) ;
rank: 443
score: 98.92585584852431
patch: days += 1 ; years += 1 ;
rank: 443
score: 98.91471354166667
patch: months -= $NUMBER$ ; minutes -= 1 ;
rank: 443
score: 98.81272379557292
patch: days += 1 ; days catch $NUMBER$ ;
rank: 443
score: 98.72506713867188
patch: double $NUMBER$ = days + $NUMBER$ ;
rank: 444
score: 98.96406693892045
patch: days += reduce CaMeL And CaMeL Correct ( ! Token . contains CaMeL Token CaMeL With CaMeL Value ( tokens ,
rank: 444
score: 98.92576090494792
patch: minutes -= 1 ; years += $NUMBER$ ;
rank: 444
score: 98.83846028645833
patch: days += $NUMBER$ ; time *= $NUMBER$ ;
rank: 444
score: 98.77313232421875
patch: days += $NUMBER$ ; days += YEAR ;
rank: 444
score: 98.72489624023437
patch: days += $NUMBER$ ; } days -= 0 ;
rank: 445
score: 99.06800255408653
patch: minutes -= - start . get ( Calendar . MONTH ) ;
rank: 445
score: 98.9639892578125
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; hours += $NUMBER$ ;
rank: 445
score: 98.92542860243056
patch: minutes += $NUMBER$ ; seconds -= $NUMBER$ ;
rank: 445
score: 98.91257731119792
patch: minutes -= $NUMBER$ ; minutes -= 1 ;
rank: 445
score: 98.77303738064236
patch: days += $NUMBER$ ; } += 1 ;
rank: 445
score: 98.76584201388889
patch: days ; if += $NUMBER$ + $NUMBER$ ;
rank: 445
score: 98.72469329833984
patch: double days = $NUMBER$ * $NUMBER$ ;
rank: 446
score: 98.96365966796876
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; months += $NUMBER$ ;
rank: 446
score: 98.88804931640625
patch: days = end . get ( $NUMBER$ ) ;
rank: 446
score: 98.83757990056819
patch: days += $NUMBER$ * $NUMBER$ * Time CaMeL Zone ;
rank: 446
score: 98.81174926757812
patch: days += - 1 ; days += $STRING$ ;
rank: 446
score: 98.77263726128473
patch: days $NUMBER$ ; ; days += $NUMBER$ ;
rank: 446
score: 98.76570638020833
patch: days [ max ++ ] = $NUMBER$ ;
rank: 446
score: 98.72437879774306
patch: days += $NUMBER$ - $NUMBER$ + 1 ;
rank: 447
score: 98.963232421875
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; hours -= $NUMBER$ ;
rank: 447
score: 98.9244384765625
patch: minutes += start . get ( timezone ) ;
rank: 447
score: 98.83757990056819
patch: days -= $NUMBER$ * Date CaMeL Utils . ; }
rank: 447
score: 98.81136745876736
patch: days += days ; days += false ;
rank: 447
score: 98.77262878417969
patch: days days = $NUMBER$ + 1 ;
rank: 447
score: 98.76547241210938
patch: days += $NUMBER$ ; else { days += $NUMBER$ ; }
rank: 447
score: 98.72437286376953
patch: start . start ( time ) ;
rank: 448
score: 98.963037109375
patch: days < end . get ( Calendar . DAY _ OF _ MONTH )
rank: 448
score: 98.8374911221591
patch: days += $NUMBER$ * $NUMBER$ * $NUMBER$ + $NUMBER$ ;
rank: 448
score: 98.77213541666667
patch: days = $NUMBER$ ; days -= $NUMBER$ ;
rank: 448
score: 98.76536865234375
patch: days += $NUMBER$ ; if += $NUMBER$ ; }
rank: 449
score: 98.96268920898437
patch: days = end . get ( Calendar . DAY _ OF _ MONTH ) ; hours -= 1 ;
rank: 449
score: 98.88674587673611
patch: months -= $NUMBER$ ; days -= $NUMBER$ ;
rank: 449
score: 98.76536729600694
patch: days += $NUMBER$ ; days ; if ;
rank: 449
score: 98.72394476996527
patch: days |= $NUMBER$ ; days -= $NUMBER$ ;
rank: 450
score: 98.96231079101562
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; days += $NUMBER$ ;
rank: 450
score: 98.92301432291667
patch: hours += $NUMBER$ ; minutes += $NUMBER$ ;
rank: 450
score: 98.81022338867187
patch: days += Math . max ( $NUMBER$ ) ;
rank: 450
score: 98.77178276909723
patch: days = $NUMBER$ + $NUMBER$ / $NUMBER$ ;
rank: 450
score: 98.72380235460069
patch: days += $NUMBER$ - $NUMBER$ - $NUMBER$ ;
rank: 451
score: 98.9622294108073
patch: days += Calendar . get CaMeL Instance ( timezone ) ;
rank: 451
score: 98.92266845703125
patch: hours -= 1 ; seconds += 1 ;
rank: 451
score: 98.83596801757812
patch: sb . append ( $NUMBER$ ) ;
rank: 451
score: 98.72376844618056
patch: days += $NUMBER$ + 1 + $NUMBER$ ;
rank: 452
score: 99.06589577414773
patch: Calendar . get CaMeL Instance ( timezone ) . get ( Calendar . DAY _ OF _ MONTH ) ; }
rank: 452
score: 98.9620028409091
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY - start . get ( Calendar . YEAR ) ;
rank: 452
score: 98.91014268663194
patch: milliseconds -= 1 ; years -= 1 ;
rank: 452
score: 98.83502875434027
patch: time += $NUMBER$ ; time += $NUMBER$ ;
rank: 452
score: 98.80960083007812
patch: days else days += - $NUMBER$ ;
rank: 452
score: 98.77153862847223
patch: days = $NUMBER$ + $NUMBER$ + 1 ;
rank: 452
score: 98.76467063210227
patch: days ++ ; } days += $NUMBER$ / $NUMBER$ ;
rank: 452
score: 98.72359890407986
patch: days += 1 ; } return $NUMBER$ ;
rank: 453
score: 99.06577711838942
patch: days += start . get ( Calendar . YEAR ) ; }
rank: 453
score: 98.96119103064903
patch: days += 1 * Calendar . DAY _ OF _ MONTH ;
rank: 453
score: 98.83412170410156
patch: days += 1 * time ; }
rank: 453
score: 98.80956420898437
patch: days = $NUMBER$ ; days catch += $NUMBER$ ;
rank: 453
score: 98.76399369673295
patch: days += $NUMBER$ ; days ; days += $NUMBER$ ;
rank: 453
score: 98.72228325737848
patch: days -= $NUMBER$ * $NUMBER$ + $NUMBER$ ;
rank: 454
score: 98.9608642578125
patch: days -= 1 ; } milliseconds -= 1 ;
rank: 454
score: 98.77122497558594
patch: days += $NUMBER$ ; while $NUMBER$ /
rank: 454
score: 98.76235961914062
patch: days += 0 ; days += $NUMBER$ ; else
rank: 454
score: 98.72160993303571
patch: days |= $NUMBER$ * $NUMBER$ ;
rank: 455
score: 99.06557210286458
patch: minutes += start . get ( Calendar . DAY _ OF _ MONTH ) ; } }
rank: 455
score: 98.96039109002976
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds += 1 ;
rank: 455
score: 98.88575439453125
patch: hours -= start . get ( timezone ) ;
rank: 455
score: 98.83358764648438
patch: days += $NUMBER$ * *= $NUMBER$ ;
rank: 455
score: 98.80887451171876
patch: days += 0 ; } if += $NUMBER$ ;
rank: 455
score: 98.77048746744792
patch: days -= $NUMBER$ ; days = $NUMBER$ ;
rank: 455
score: 98.72117784288194
patch: start . add ( $NUMBER$ * time ;
rank: 456
score: 99.06534830729167
patch: hours += end . get ( Calendar . SECOND ) ;
rank: 456
score: 98.96011962890626
patch: days += end . get ( Calendar . DAY _ OF _ YEAR ) ; hours -= 1 ;
rank: 456
score: 98.9043701171875
patch: start . add ( Calendar . MILLISECOND ) ;
rank: 456
score: 98.83300170898437
patch: days += $NUMBER$ * time . get ( ;
rank: 456
score: 98.80862765842014
patch: days else { days += - $NUMBER$ ;
rank: 456
score: 98.76167436079545
patch: days += 0 ; else days += $NUMBER$ ; }
rank: 456
score: 98.721044921875
patch: long days = $NUMBER$ * $NUMBER$ + $NUMBER$ ;
rank: 457
score: 99.06524047851562
patch: hours += 1 ; days -= 1 ; }
rank: 457
score: 98.9594494047619
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; minutes -= $NUMBER$ ;
rank: 457
score: 98.9038330078125
patch: end . add ( Calendar . MILLISECOND ) ;
rank: 457
score: 98.83134629991319
patch: days += $NUMBER$ * time >> $NUMBER$ ;
rank: 457
score: 98.80832248263889
patch: days += end . get += $NUMBER$ ;
rank: 457
score: 98.76987033420139
patch: days += $NUMBER$ + 1 ; $NUMBER$ /
rank: 457
score: 98.76145629882812
patch: } days += $NUMBER$ ; days += $NUMBER$ ;
rank: 457
score: 98.72023010253906
patch: double days = days - $NUMBER$ ;
rank: 458
score: 99.06522993607955
patch: hours += reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY , milliseconds ) ;
rank: 458
score: 98.9593994140625
patch: days -= reduce CaMeL And CaMeL Correct ( start , end , Calendar . MILLISECOND , minutes ) ;
rank: 458
score: 98.92108154296875
patch: minutes -= 1 ; days -= $NUMBER$ ;
rank: 458
score: 98.83110809326172
patch: days += $NUMBER$ + time ; }
rank: 458
score: 98.80821533203125
patch: days * - 1 ; days = $NUMBER$ ;
rank: 458
score: 98.76145241477273
patch: days += 0 ; days ; days += $NUMBER$ ;
rank: 458
score: 98.71914333767361
patch: days -= $NUMBER$ ; } days -- ;
rank: 459
score: 98.95914306640626
patch: days += reduce CaMeL And CaMeL Correct ( Token . DAY _ OF _ YEAR , days ) ;
rank: 459
score: 98.92015923394098
patch: seconds += $NUMBER$ ; minutes += 1 ;
rank: 459
score: 98.83107212611607
patch: days += $NUMBER$ - time ;
rank: 459
score: 98.80799865722656
patch: days * / days += $STRING$ ;
rank: 459
score: 98.76118774414063
patch: days ++ ; } days += 0 ; }
rank: 459
score: 98.7190933227539
patch: end . add ( days ) ;
rank: 460
score: 99.06474866365132
patch: hours += reduce CaMeL And CaMeL Correct ( start , Calendar . DAY _ OF _ MONTH ,
rank: 460
score: 98.95724051339286
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; hours += $NUMBER$ ;
rank: 460
score: 98.76934814453125
patch: days += 1 ; break ;
rank: 460
score: 98.7598876953125
patch: days ++ ; if ; days += $NUMBER$ ;
rank: 460
score: 98.71780395507812
patch: days += end . get ( $NUMBER$ ) ;
rank: 461
score: 98.95716552734375
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; months -= $NUMBER$ ;
rank: 461
score: 98.8302001953125
patch: days += $NUMBER$ $NUMBER$ * Date CaMeL Utils . ;
rank: 461
score: 98.80765109592014
patch: days = $NUMBER$ ; days -- * /
rank: 461
score: 98.76933458116319
patch: days += $NUMBER$ ; if $NUMBER$ $NUMBER$ ;
rank: 461
score: 98.75942160866477
patch: days [ $NUMBER$ ] = $NUMBER$ - $NUMBER$ ; }
rank: 462
score: 98.95679321289063
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; milliseconds -= 1 ;
rank: 462
score: 98.828955078125
patch: days += $NUMBER$ * time ; break ; }
rank: 462
score: 98.80762396918402
patch: days * / int days = $NUMBER$ ;
rank: 462
score: 98.76930745442708
patch: days += $NUMBER$ ; $NUMBER$ - $NUMBER$ ;
rank: 462
score: 98.75909423828125
patch: days += $NUMBER$ & $NUMBER$ ;
rank: 462
score: 98.7164794921875
patch: days += $NUMBER$ + $NUMBER$ / $NUMBER$ ; }
rank: 463
score: 99.0636874112216
patch: reduce CaMeL And CaMeL Correct ( start , end , Calendar . DAY _ OF _ MONTH , months ) ;
rank: 463
score: 98.9562755766369
patch: days += 1 * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY - hours ;
rank: 463
score: 98.89906141493056
patch: months -= 1 ; minutes -= 1 ;
rank: 463
score: 98.76927185058594
patch: days else ; days += $NUMBER$ ;
rank: 463
score: 98.75897216796875
patch: days += $NUMBER$ * += $NUMBER$ ;
rank: 463
score: 98.71529812282986
patch: end . add ( $NUMBER$ * $NUMBER$ ;
rank: 464
score: 98.95614624023438
patch: days += reduce CaMeL And CaMeL Correct ( start , end , Calendar . MILLISECOND , hours ) ;
rank: 464
score: 98.91691758897569
patch: hours = $NUMBER$ ; years += $NUMBER$ ;
rank: 464
score: 98.88276502821181
patch: seconds -= $NUMBER$ ; days += 1 ;
rank: 464
score: 98.82841661241319
patch: days += $NUMBER$ ; break ; } }
rank: 464
score: 98.80695343017578
patch: days * ; days += 0 ;
rank: 464
score: 98.76910400390625
patch: days += $NUMBER$ ; $NUMBER$ / * /
rank: 464
score: 98.75791931152344
patch: } else { days += $NUMBER$ ;
rank: 464
score: 98.71449788411458
patch: start . ; days -= $NUMBER$ ; }
rank: 465
score: 99.06348818824405
patch: start . set ( end . get ( Calendar . DAY _ OF _ MONTH ) , hours ) ;
rank: 465
score: 98.95606689453125
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; minutes -= $NUMBER$ ;
rank: 465
score: 98.91628689236111
patch: minutes -= $NUMBER$ ; days += 1 ;
rank: 465
score: 98.89856635199652
patch: months += 1 ; minutes -= 1 ;
rank: 465
score: 98.88214111328125
patch: months -= 1 ; days -= $NUMBER$ ;
rank: 465
score: 98.82818603515625
patch: time += $NUMBER$ ; time += $NUMBER$ ; }
rank: 465
score: 98.806787109375
patch: days += - - $NUMBER$ ; days -- ;
rank: 465
score: 98.76866997612848
patch: days += $NUMBER$ + $NUMBER$ ; days else
rank: 465
score: 98.75718994140625
patch: days += 0 ; else days += $NUMBER$ ;
rank: 466
score: 98.95565185546874
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; years -= $NUMBER$ ;
rank: 466
score: 98.91617160373264
patch: hours -= $NUMBER$ ; years += 1 ;
rank: 466
score: 98.82653130425348
patch: days += $NUMBER$ * ( $NUMBER$ * ;
rank: 466
score: 98.80659993489583
patch: days += $NUMBER$ ; days += ; :
rank: 466
score: 98.76751030815973
patch: days += 1 ; days = days ;
rank: 466
score: 98.71421508789062
patch: double days = days ; days += $NUMBER$ ;
rank: 467
score: 99.06322479248047
patch: days -= reduce CaMeL And CaMeL Correct ( start , end , milliseconds ) ;
rank: 467
score: 98.9554931640625
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ MONTH , months ) ;
rank: 467
score: 98.91602918836806
patch: minutes -= $NUMBER$ ; years += $NUMBER$ ;
rank: 467
score: 98.89727105034723
patch: milliseconds -= $NUMBER$ ; minutes -= 1 ;
rank: 467
score: 98.82642711292614
patch: days += $NUMBER$ * Time CaMeL Zone . mid ;
rank: 467
score: 98.7668228149414
patch: if $NUMBER$ ; days += $NUMBER$ ;
rank: 467
score: 98.75626997514205
patch: days += $NUMBER$ ; days += $NUMBER$ ; days ;
rank: 467
score: 98.71371120876736
patch: days += $NUMBER$ ; matches += $NUMBER$ ;
rank: 468
score: 99.06259390024039
patch: hours = end . get ( Calendar . MONTH ) ; }
rank: 468
score: 98.95490112304688
patch: days += reduce CaMeL And CaMeL Correct ( Token . DAY _ OF _ MONTH , hours ) ;
rank: 468
score: 98.91592746310764
patch: hours -= 1 ; minutes += 1 ;
rank: 468
score: 98.89580620659723
patch: minutes -= $NUMBER$ ; days -= $NUMBER$ ;
rank: 468
score: 98.82588026258681
patch: days += $NUMBER$ * time ^ $NUMBER$ ;
rank: 468
score: 98.80604553222656
patch: days += 0 ; += $STRING$ ;
rank: 468
score: 98.76644558376736
patch: days = $STRING$ ; days += $NUMBER$ ;
rank: 468
score: 98.71345350477431
patch: time += $NUMBER$ + $NUMBER$ + $NUMBER$ ;
rank: 469
score: 99.06241861979167
patch: end . set ( end . get ( Calendar . DAY _ OF _ MONTH ) , days ) ;
rank: 469
score: 98.95441545758929
patch: days += $NUMBER$ * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY - days ;
rank: 469
score: 98.88008626302083
patch: days -= $NUMBER$ ; years += 1 ;
rank: 469
score: 98.8258056640625
patch: days += $NUMBER$ * ( ;
rank: 469
score: 98.8056411743164
patch: days else { days = true ;
rank: 469
score: 98.7657241821289
patch: days += $NUMBER$ + 1 ; days
rank: 469
score: 98.75611877441406
patch: days = $NUMBER$ - $NUMBER$ ; }
rank: 469
score: 98.71321868896484
patch: days -= $NUMBER$ * $NUMBER$ ; }
rank: 470
score: 99.06223707932692
patch: days += start . get ( Calendar . MONTH ) ; }
rank: 470
score: 98.95389404296876
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; seconds -= $NUMBER$ ;
rank: 470
score: 98.91547309027777
patch: hours = $NUMBER$ ; days += 1 ;
rank: 470
score: 98.89345296223958
patch: milliseconds -= $NUMBER$ ; hours -= 1 ;
rank: 470
score: 98.82550048828125
patch: days += $NUMBER$ ; } days += ;
rank: 470
score: 98.80513305664063
patch: days += $STRING$ ; days += - $NUMBER$ ;
rank: 470
score: 98.76569281684027
patch: days += $NUMBER$ ; days += ; /
rank: 470
score: 98.756103515625
patch: days ++ ; days ++ ; }
rank: 470
score: 98.71318969726562
patch: days = $NUMBER$ * Time CaMeL Zone . ;
rank: 471
score: 99.06126098632812
patch: Calendar . get CaMeL Instance ( timezone ) . set CaMeL Time ( end CaMeL Millis ) ; }
rank: 471
score: 98.9538104717548
patch: days += end . get ( Calendar . MILLISECOND ) ; }
rank: 471
score: 98.9151611328125
patch: days += $NUMBER$ ; seconds += 1 ;
rank: 471
score: 98.87807210286458
patch: seconds -= 1 ; days += $NUMBER$ ;
rank: 471
score: 98.8254638671875
patch: days += $NUMBER$ * $NUMBER$ * time ; }
rank: 471
score: 98.80472819010417
patch: days += 0 ; if += false ;
rank: 471
score: 98.76503208705357
patch: days += $NUMBER$ ; / /
rank: 471
score: 98.75523376464844
patch: days ; ; days += $NUMBER$ ;
rank: 471
score: 98.71311950683594
patch: start . set ( start ) ;
rank: 472
score: 98.89207628038194
patch: days += $NUMBER$ ; hours -= $NUMBER$ ;
rank: 472
score: 98.82497336647727
patch: days += $NUMBER$ * ( $NUMBER$ * days ) ;
rank: 472
score: 98.80413055419922
patch: end . set ( days ) ;
rank: 472
score: 98.76494004991319
patch: days += $NUMBER$ ; days = end ;
rank: 472
score: 98.755126953125
patch: days += $NUMBER$ ; } } days += $NUMBER$ ;
rank: 472
score: 98.71301947699652
patch: days += $NUMBER$ * $NUMBER$ | $NUMBER$ ;
rank: 473
score: 99.06065150669643
patch: days += reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY ) ; }
rank: 473
score: 98.95341564360119
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; months += $NUMBER$ ;
rank: 473
score: 98.91492377387152
patch: minutes += 1 ; minutes += 1 ;
rank: 473
score: 98.87708197699652
patch: months += $NUMBER$ ; years += 1 ;
rank: 473
score: 98.7550277709961
patch: days ; days ++ += $NUMBER$ ;
rank: 473
score: 98.71294294084821
patch: days = days - $NUMBER$ ;
rank: 474
score: 99.060400390625
patch: start . set ( end . get ( Calendar . YEAR ) ) ;
rank: 474
score: 98.95238385881696
patch: days = Date CaMeL Utils . MILLIS _ PER _ DAY ; }
rank: 474
score: 98.82398681640625
patch: Date CaMeL Utils . ; days += $NUMBER$ ;
rank: 474
score: 98.8038818359375
patch: days += $NUMBER$ ; days += - 0 ;
rank: 474
score: 98.7548095703125
patch: days += 0 ; if days += 0 ;
rank: 474
score: 98.71254272460938
patch: start . get ( Calendar . SECOND ) ;
rank: 475
score: 99.0600521689967
patch: days -= reduce CaMeL And CaMeL Correct ( start , Calendar . DAY _ OF _ MONTH ,
rank: 475
score: 98.9519775390625
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; minutes -= 1 ;
rank: 475
score: 98.91440836588542
patch: days += $NUMBER$ ; minutes += 1 ;
rank: 475
score: 98.87669677734375
patch: milliseconds = $NUMBER$ ;
rank: 475
score: 98.82389322916667
patch: days += Integer . MAX _ VALUE ;
rank: 475
score: 98.80376519097223
patch: days += 0 ; } days -- ;
rank: 475
score: 98.75441487630208
patch: days += start . get ( days - $NUMBER$ ) ;
rank: 475
score: 98.71231418185764
patch: days -= $NUMBER$ ; days -- ; }
rank: 476
score: 98.95163981119792
patch: days += reduce CaMeL And CaMeL Correct ( start , end
rank: 476
score: 98.821826171875
patch: days += $NUMBER$ * millis + $NUMBER$ ; }
rank: 476
score: 98.80363633897569
patch: days = days ; days = days ;
rank: 476
score: 98.76403130425348
patch: days += $NUMBER$ ; days <= 1 ;
rank: 476
score: 98.75433349609375
patch: days ; if += $NUMBER$ ; }
rank: 476
score: 98.71149359809027
patch: days ] = $NUMBER$ / $NUMBER$ ; }
rank: 477
score: 99.05990835336539
patch: hours = Calendar . get CaMeL Instance ( timezone ) ; }
rank: 477
score: 98.9515625
patch: days -= end . get ( Calendar . DAY _ OF _ YEAR ) ; days -= 1 ;
rank: 477
score: 98.91343858506944
patch: days += 1 ; minutes -= $NUMBER$ ;
rank: 477
score: 98.8214599609375
patch: days += $NUMBER$ * time + $NUMBER$ ; ;
rank: 477
score: 98.80359758649554
patch: days * / return $NUMBER$ ;
rank: 477
score: 98.76402452256944
patch: days += $NUMBER$ ; days += MINUTE ;
rank: 477
score: 98.75367431640625
patch: days ++ ; days = $NUMBER$ * $NUMBER$ ;
rank: 477
score: 98.71138218470982
patch: end . days += $NUMBER$ ;
rank: 478
score: 98.95148315429688
patch: days += end . get ( Calendar . DAY _ OF _ YEAR ) ; years -= 1 ;
rank: 478
score: 98.82107883029514
patch: long days ++ ; days += $NUMBER$ ;
rank: 478
score: 98.80344645182292
patch: days += 0 ; if += true ;
rank: 478
score: 98.76341417100694
patch: days += $NUMBER$ ; days - $NUMBER$ ;
rank: 478
score: 98.71120876736111
patch: long $NUMBER$ time = days + $NUMBER$ ;
rank: 479
score: 98.95142822265625
patch: days -= reduce CaMeL And CaMeL Correct ( start , end , Calendar . MILLISECOND , days ) ;
rank: 479
score: 98.80246988932292
patch: days -- ; days * * 1 ;
rank: 479
score: 98.76285807291667
patch: days += 0 ; days
rank: 480
score: 98.95062810724431
patch: days -= reduce CaMeL And CaMeL Correct ( ! Token . contains CaMeL Token CaMeL With CaMeL Value ( tokens ,
rank: 480
score: 98.91274685329861
patch: seconds += 1 ; minutes += 1 ;
rank: 480
score: 98.87582736545139
patch: months = $NUMBER$ ; days -= $NUMBER$ ;
rank: 480
score: 98.82037353515625
patch: days += $NUMBER$ * / days ;
rank: 480
score: 98.80141872829861
patch: days ] += days ; if $NUMBER$ ;
rank: 480
score: 98.76068987165179
patch: days else if += $NUMBER$ ;
rank: 480
score: 98.75264115767045
patch: days += $NUMBER$ * $NUMBER$ ; days += 1 ;
rank: 480
score: 98.71074083116319
patch: time = days + $NUMBER$ + $NUMBER$ ;
rank: 481
score: 99.05884399414063
patch: end . set ( end . get ( Calendar . HOUR _ OF _ DAY ) ) ; }
rank: 481
score: 98.95056762695313
patch: days = end . get ( Calendar . HOUR _ OF _ DAY ) ; days -= 1 ;
rank: 481
score: 98.82021755642361
patch: days += $NUMBER$ * $NUMBER$ ; ; ;
rank: 481
score: 98.80131022135417
patch: days = 0 ; days += 1 ;
rank: 481
score: 98.7588602701823
patch: days += $NUMBER$ $NUMBER$ ;
rank: 481
score: 98.75260925292969
patch: days += $NUMBER$ ? $NUMBER$ : ;
rank: 482
score: 99.05792791193181
patch: reduce CaMeL And CaMeL Correct ( start , end , Calendar . HOUR _ OF _ DAY , seconds ) ;
rank: 482
score: 98.950537109375
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; seconds -= $NUMBER$ ;
rank: 482
score: 98.91146511501736
patch: minutes -= $NUMBER$ ; days += $NUMBER$ ;
rank: 482
score: 98.8834228515625
patch: months -= $NUMBER$ ; years -= $NUMBER$ ;
rank: 482
score: 98.82016330295139
patch: days += $NUMBER$ ; time = ; }
rank: 482
score: 98.75618198939732
patch: days += $NUMBER$ - 1 ;
rank: 482
score: 98.75244140625
patch: days [ days ] = $NUMBER$ ; days += $NUMBER$ ;
rank: 482
score: 98.70942993164063
patch: days *= $NUMBER$ ; } days += $NUMBER$ ;
rank: 483
score: 99.05788010817308
patch: minutes += - start . get ( Calendar . YEAR ) ;
rank: 483
score: 98.95045166015625
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; milliseconds -= 1 ;
rank: 483
score: 98.88306342230902
patch: minutes -= $NUMBER$ ; years -= $NUMBER$ ;
rank: 483
score: 98.81985473632812
patch: days += $NUMBER$ * time ) ;
rank: 483
score: 98.80039672851562
patch: days += - $NUMBER$ ; days return $NUMBER$ ;
rank: 483
score: 98.70939636230469
patch: long days = days * 1 ;
rank: 484
score: 99.05727914663461
patch: hours += start . get ( Calendar . YEAR ) ; }
rank: 484
score: 98.95042835582386
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) . get CaMeL Time ( ) ;
rank: 484
score: 98.87333170572917
patch: months += $NUMBER$ ; years += $NUMBER$ ;
rank: 484
score: 98.81859241832386
patch: long days = start . get ( days ) ;
rank: 484
score: 98.7998046875
patch: days += $NUMBER$ ; days -- * $NUMBER$ ;
rank: 484
score: 98.75220489501953
patch: days += $STRING$ + $NUMBER$ ; ;
rank: 484
score: 98.75181579589844
patch: days ++ ; if += 0 ;
rank: 485
score: 99.05691731770834
patch: end . get ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 485
score: 98.95042724609375
patch: days += 1 * Date CaMeL Utils . MILLIS _ PER _ DAY ; } milliseconds -= $NUMBER$ ;
rank: 485
score: 98.81858317057292
patch: days += $NUMBER$ * Date CaMeL Utils ;
rank: 485
score: 98.79931640625
patch: days += $NUMBER$ ; days += ; }
rank: 485
score: 98.75164794921875
patch: days += $NUMBER$ ; ; days ;
rank: 485
score: 98.70865885416667
patch: start = $NUMBER$ * $NUMBER$ * $NUMBER$ ;
rank: 486
score: 99.05588003305289
patch: Token start = Calendar . get CaMeL Instance ( timezone ) ;
rank: 486
score: 98.95037231445312
patch: days = end . get ( Calendar . DAY _ OF _ MONTH ) ; days -= $NUMBER$ ;
rank: 486
score: 98.90895589192708
patch: minutes += $NUMBER$ ; hours += 1 ;
rank: 486
score: 98.87259928385417
patch: months -= 1 ; years += 1 ;
rank: 486
score: 98.79924774169922
patch: days -- ; days = 1 ;
rank: 486
score: 98.75072132457386
patch: days [ $NUMBER$ ] = $NUMBER$ / $NUMBER$ ; }
rank: 486
score: 98.70810372488839
patch: days += $NUMBER$ * long ;
rank: 487
score: 99.05492225060097
patch: minutes += - start . get ( Calendar . MONTH ) ;
rank: 487
score: 98.950048828125
patch: days = end . get ( Calendar . DAY _ OF _ MONTH ) ; months -= 1 ;
rank: 487
score: 98.90887451171875
patch: hours += 1 ; minutes += $NUMBER$ ;
rank: 487
score: 98.87201605902777
patch: months = $NUMBER$ ; years += 1 ;
rank: 487
score: 98.81760660807292
patch: days += $NUMBER$ * $NUMBER$ ; } }
rank: 487
score: 98.750732421875
patch: days += $NUMBER$ ; $NUMBER$ ; ;
rank: 487
score: 98.75015869140626
patch: days += 0 ; long days += $NUMBER$ ;
rank: 488
score: 99.05491129557292
patch: minutes += 1 ; }
rank: 488
score: 98.94995727539063
patch: days -= reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ MONTH , years ) ;
rank: 488
score: 98.90861002604167
patch: minutes += 1 ; hours -= $NUMBER$ ;
rank: 488
score: 98.88164672851562
patch: end . get ( Calendar . MILLISECOND ) ;
rank: 488
score: 98.81686062282986
patch: days += $NUMBER$ * ; break ; }
rank: 488
score: 98.7984619140625
patch: days = days ; days catch += $NUMBER$ ;
rank: 488
score: 98.75026157924107
patch: days = $NUMBER$ * 1 ;
rank: 488
score: 98.74957830255681
patch: days ; days += $NUMBER$ ; days = $NUMBER$ ;
rank: 488
score: 98.70653533935547
patch: this . days += $NUMBER$ ; }
rank: 489
score: 99.05465698242188
patch: days += reduce CaMeL And CaMeL Correct ( start , end , false ) ;
rank: 489
score: 98.94959605823864
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY - start . get ( Calendar . MONTH ) ;
rank: 489
score: 98.88003879123264
patch: milliseconds -= $NUMBER$ ; seconds -= 1 ;
rank: 489
score: 98.81657191685268
patch: time += $NUMBER$ * $NUMBER$ ;
rank: 489
score: 98.79808892144098
patch: days = start . get += $NUMBER$ ;
rank: 489
score: 98.74905395507812
patch: days = $NUMBER$ ; while $NUMBER$ ;
rank: 489
score: 98.70579020182292
patch: days += $NUMBER$ * $NUMBER$ || $NUMBER$ ;
rank: 490
score: 99.05434945913461
patch: int start = Calendar . get CaMeL Instance ( timezone ) ;
rank: 490
score: 98.94856567382813
patch: days -= reduce CaMeL And CaMeL Correct ( Token . DAY _ OF _ MONTH , days ) ;
rank: 490
score: 98.79794311523438
patch: days = $NUMBER$ ; days += 1 ; }
rank: 490
score: 98.74918619791667
patch: days ++ ; } else { days += $NUMBER$ ; }
rank: 490
score: 98.74798583984375
patch: days ; if $NUMBER$ = $NUMBER$ ;
rank: 490
score: 98.70552062988281
patch: days += $NUMBER$ ; } return ;
rank: 491
score: 99.05425555889423
patch: days += - start . get ( Calendar . MILLISECOND ) ;
rank: 491
score: 98.948486328125
patch: days += reduce CaMeL And CaMeL Correct ( start , minutes ) ;
rank: 491
score: 98.86899142795139
patch: seconds -= 1 ; minutes -= $NUMBER$ ;
rank: 491
score: 98.81373180042614
patch: Date days = $NUMBER$ * Date CaMeL Utils . ;
rank: 491
score: 98.79765319824219
patch: days ++ ; days * * /
rank: 491
score: 98.74910888671874
patch: days += 0 ; if days += 1 ;
rank: 491
score: 98.74758475167411
patch: $NUMBER$ ; days += $NUMBER$ ;
rank: 491
score: 98.70519256591797
patch: long time = days / $NUMBER$ ;
rank: 492
score: 99.05405836838942
patch: hours += start . get ( Calendar . MONTH ) ; }
rank: 492
score: 98.94827270507812
patch: days += end . get ( Calendar . DAY _ OF _ YEAR ) ; months -= 1 ;
rank: 492
score: 98.90692138671875
patch: minutes += $NUMBER$ ; minutes += $NUMBER$ ;
rank: 492
score: 98.81362915039062
patch: time += $NUMBER$ ; }
rank: 492
score: 98.79728480747768
patch: days * / return days ;
rank: 492
score: 98.747802734375
patch: days += $NUMBER$ ; days += $NUMBER$ + 0 ;
rank: 492
score: 98.74723815917969
patch: days = $NUMBER$ + $NUMBER$ ; days
rank: 492
score: 98.70509338378906
patch: long $NUMBER$ = days - $NUMBER$ ;
rank: 493
score: 98.947998046875
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; minutes += 1 ;
rank: 493
score: 98.90653483072917
patch: minutes += 1 ; seconds -= $NUMBER$ ;
rank: 493
score: 98.87781982421875
patch: days = start . get ( format ) ;
rank: 493
score: 98.868896484375
patch: months = $NUMBER$ ; years -= 1 ;
rank: 493
score: 98.8133212002841
patch: days += $NUMBER$ * Time CaMeL Zone . format ;
rank: 493
score: 98.79716661241319
patch: days = $NUMBER$ ; days / * /
rank: 493
score: 98.74568394252232
patch: days += $STRING$ + 1 ;
rank: 493
score: 98.70485432942708
patch: days += $NUMBER$ ; *= $NUMBER$ ; }
rank: 494
score: 98.9479736328125
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ MONTH , milliseconds ) ;
rank: 494
score: 98.90644666883681
patch: milliseconds += $NUMBER$ ; years += $NUMBER$ ;
rank: 494
score: 98.81315394810268
patch: days += $NUMBER$ * MONTH ;
rank: 494
score: 98.79649658203125
patch: days += - 1 ; days catch $NUMBER$ ;
rank: 494
score: 98.74652099609375
patch: days += 0 ; if days ;
rank: 494
score: 98.74560546875
patch: days days = 0 ;
rank: 495
score: 98.94739879261364
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; } milliseconds -= $NUMBER$ ;
rank: 495
score: 98.81285511363636
patch: days += $NUMBER$ * Date CaMeL Utils . + ;
rank: 495
score: 98.79638671875
patch: days ] += days += $NUMBER$ ;
rank: 495
score: 98.74639337713069
patch: days += $NUMBER$ + $NUMBER$ ; days = $NUMBER$ ;
rank: 495
score: 98.70433959960937
patch: double days += $NUMBER$ ; days += $NUMBER$ ;
rank: 496
score: 98.9473876953125
patch: days += reduce CaMeL And CaMeL Correct ( Token . DAY _ OF _ YEAR , hours ) ;
rank: 496
score: 98.90618896484375
patch: hours = $NUMBER$ ; days += $NUMBER$ ;
rank: 496
score: 98.87425401475694
patch: months += $NUMBER$ ; hours -= $NUMBER$ ;
rank: 496
score: 98.81243024553571
patch: days -= $NUMBER$ * time ;
rank: 496
score: 98.79590454101563
patch: days += $NUMBER$ ; else { days * /
rank: 496
score: 98.74635823567708
patch: days += $NUMBER$ ; days += $NUMBER$ ; += $NUMBER$ ;
rank: 496
score: 98.74416678292411
patch: days += $NUMBER$ ; try /
rank: 496
score: 98.70421600341797
patch: start . append ( time ) ;
rank: 497
score: 98.94707641601562
patch: days = end . get ( Calendar . DAY _ OF _ MONTH ) ; days += 1 ;
rank: 497
score: 98.86787923177083
patch: months = $NUMBER$ ; years += $NUMBER$ ;
rank: 497
score: 98.81195068359375
patch: days += $NUMBER$ ; time *= $NUMBER$ ; }
rank: 497
score: 98.79572211371527
patch: days * $NUMBER$ ; if += $NUMBER$ ;
rank: 497
score: 98.7435302734375
patch: days += $NUMBER$ ; return 1 ;
rank: 497
score: 98.70330810546875
patch: long $NUMBER$ = days / $NUMBER$ ;
rank: 498
score: 99.05117563100961
patch: start . set ( Calendar . MILLISECOND , milliseconds ) ; }
rank: 498
score: 98.94684448242188
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; seconds += 1 ;
rank: 498
score: 98.90547688802083
patch: minutes -= 1 ; years += 1 ;
rank: 498
score: 98.86673990885417
patch: months = $NUMBER$ ; years = $NUMBER$ ;
rank: 498
score: 98.811279296875
patch: long days = end . get ( days ) ;
rank: 498
score: 98.79561614990234
patch: days * * 1 + $NUMBER$ ;
rank: 498
score: 98.70290798611111
patch: days = $NUMBER$ * $NUMBER$ || $NUMBER$ ;
rank: 499
score: 99.05110677083333
patch: end . set ( end . get ( Calendar . DAY _ OF _ MONTH ) , hours ) ;
rank: 499
score: 98.94681396484376
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; years += $NUMBER$ ;
rank: 499
score: 98.87207709418402
patch: milliseconds += $NUMBER$ ; minutes -= $NUMBER$ ;
rank: 499
score: 98.86600748697917
patch: seconds -= reduce CaMeL And CaMeL Correct ;
rank: 499
score: 98.79552001953125
patch: days += $NUMBER$ ; days catch += 0 ;
rank: 499
score: 98.7447842684659
patch: days += $NUMBER$ ? $NUMBER$ + $NUMBER$ : 0 ;
rank: 499
score: 98.74125162760417
patch: days += $NUMBER$ ; $NUMBER$
rank: 499
score: 98.70270453559027
patch: days += $NUMBER$ || $NUMBER$ / $NUMBER$ ;
rank: 500
score: 98.94652709960937
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; minutes += 1 ;
rank: 500
score: 98.87105305989583
patch: milliseconds += 1 ; minutes -= 1 ;
rank: 500
score: 98.86509195963542
patch: seconds -= 1 ; years = $NUMBER$ ;
rank: 500
score: 98.81065784801136
patch: days += $NUMBER$ * ( $NUMBER$ * time ) ;
rank: 500
score: 98.79481336805556
patch: days = $NUMBER$ ; days -- ; ;
rank: 500
score: 98.74466552734376
patch: days += $NUMBER$ - days $NUMBER$ * $NUMBER$ ;
rank: 500
score: 98.73789978027344
patch: += $NUMBER$ ; days += $NUMBER$ ;
rank: 500
score: 98.70126953125
patch: time += $NUMBER$ ; days += $NUMBER$ ; }
rank: 501
score: 99.04883975074405
patch: start . set ( Calendar . DAY _ OF _ MONTH , end . get ( Calendar . MONTH )
rank: 501
score: 98.90241156684027
patch: seconds += 1 ; hours -= $NUMBER$ ;
rank: 501
score: 98.86489868164062
patch: days = Calendar . get ( timezone ) ;
rank: 501
score: 98.81062825520833
patch: days += $NUMBER$ ; end += $NUMBER$ ;
rank: 501
score: 98.79472133091518
patch: days * * / break ;
rank: 501
score: 98.73335266113281
patch: days += $NUMBER$ + 0 ; ;
rank: 501
score: 98.69963836669922
patch: days -= $NUMBER$ ; days ++ ;
rank: 502
score: 99.04844313401442
patch: days -= start . get ( Calendar . MONTH ) ; }
rank: 502
score: 98.94612260298295
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ MONTH , hours , days ) ;
rank: 502
score: 98.90182834201389
patch: hours -= 1 ; seconds -= $NUMBER$ ;
rank: 502
score: 98.86942138671876
patch: start . get ( Calendar . MILLISECOND ) ;
rank: 502
score: 98.86454264322917
patch: months -= 1 ; years += $NUMBER$ ;
rank: 502
score: 98.80944213867187
patch: days += $NUMBER$ * time - time ; }
rank: 502
score: 98.74378204345703
patch: days += 0 ; if ; }
rank: 502
score: 98.69928656684027
patch: days += $NUMBER$ * >> $NUMBER$ ; }
rank: 503
score: 98.94584350585937
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . HOUR _ OF _ DAY , milliseconds ) ;
rank: 503
score: 98.90180799696181
patch: minutes -= 1 ; seconds += 1 ;
rank: 503
score: 98.86941189236111
patch: hours -= $NUMBER$ ; hours -= $NUMBER$ ;
rank: 503
score: 98.86436157226562
patch: end . get ( Calendar . HOUR ) ;
rank: 503
score: 98.80922444661458
patch: long days = ; days += $NUMBER$ ;
rank: 503
score: 98.743408203125
patch: days [ days ] = $NUMBER$ * $NUMBER$ ;
rank: 503
score: 98.73090362548828
patch: days += 0 ; days $NUMBER$ ;
rank: 503
score: 98.69926452636719
patch: days += $NUMBER$ + 0 ; }
rank: 504
score: 99.04702758789062
patch: minutes += reduce CaMeL And CaMeL Correct ( start , Calendar . DAY _ OF _ MONTH ) ;
rank: 504
score: 98.94525756835938
patch: days -= reduce CaMeL And CaMeL Correct ( start , end , Calendar . MILLISECOND , years ) ;
rank: 504
score: 98.90143500434027
patch: hours = $NUMBER$ ; years += 1 ;
rank: 504
score: 98.86846923828125
patch: seconds += $NUMBER$ ; seconds -= $NUMBER$ ;
rank: 504
score: 98.80842808314732
patch: if ( days > 0 )
rank: 504
score: 98.794189453125
patch: days ] += $NUMBER$ ; days = $NUMBER$ ;
rank: 504
score: 98.74301147460938
patch: } days += 0 ; days += $NUMBER$ ;
rank: 504
score: 98.72795104980469
patch: days += $NUMBER$ + $NUMBER$ ; $NUMBER$
rank: 505
score: 99.04684012276786
patch: start . set ( Calendar . DAY _ OF _ MONTH , start . get ( Calendar . MONTH )
rank: 505
score: 98.94517933238636
patch: days -= reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY , milliseconds ) ;
rank: 505
score: 98.90088568793402
patch: minutes -= 1 ; minutes += 1 ;
rank: 505
score: 98.80808715820312
patch: days += $NUMBER$ ; end . set ( ;
rank: 505
score: 98.79399956597223
patch: days = - $NUMBER$ ; days -- ;
rank: 505
score: 98.74293101917614
patch: days += 0 ; ; days += $NUMBER$ ; }
rank: 505
score: 98.69802856445312
patch: days += $NUMBER$ / $NUMBER$ ; ;
rank: 506
score: 98.94498901367187
patch: days -= $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; } milliseconds -= 1 ;
rank: 506
score: 98.90082397460938
patch: hours += start . get ( timezone ) ;
rank: 506
score: 98.8079501065341
patch: long millis = $NUMBER$ * Date CaMeL Utils . ;
rank: 506
score: 98.79380967881944
patch: days ++ ; days * * 1 ;
rank: 506
score: 98.74268687855114
patch: days += $NUMBER$ ? $NUMBER$ + $NUMBER$ : 1 ;
rank: 507
score: 99.0461193266369
patch: return format CaMeL Duration ( start , end , Calendar . DAY _ OF _ MONTH , days ) ;
rank: 507
score: 98.86700439453125
patch: milliseconds -= 1 ; minutes -= 1 ;
rank: 507
score: 98.86347113715277
patch: seconds -= $NUMBER$ ; minutes -= $NUMBER$ ;
rank: 507
score: 98.79375457763672
patch: days * ; days += 1 ;
rank: 507
score: 98.7425537109375
patch: days += 0 ; days += $NUMBER$ + $NUMBER$ ; }
rank: 507
score: 98.7247085571289
patch: days += $NUMBER$ + $NUMBER$ ; else
rank: 507
score: 98.69779052734376
patch: start += $NUMBER$ ; days += $NUMBER$ ; }
rank: 508
score: 98.94476318359375
patch: days += $NUMBER$ * years ;
rank: 508
score: 98.86623806423611
patch: seconds += $NUMBER$ ; hours += 1 ;
rank: 508
score: 98.80648803710938
patch: days += $NUMBER$ / time ; }
rank: 508
score: 98.79371337890625
patch: days += 0 ; days = - $NUMBER$ ;
rank: 508
score: 98.7419189453125
patch: days ; days = $NUMBER$ + $NUMBER$ ; }
rank: 509
score: 99.04479399181548
patch: start . set ( Calendar . DAY _ OF _ MONTH , end . get ( Calendar . YEAR )
rank: 509
score: 98.94470796130952
patch: days += $NUMBER$ * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY - 1 ;
rank: 509
score: 98.89959716796875
patch: hours += $NUMBER$ ; } milliseconds -= 1 ;
rank: 509
score: 98.86310492621527
patch: months = $NUMBER$ ; seconds -= 1 ;
rank: 509
score: 98.80611165364583
patch: days += $NUMBER$ * *= $NUMBER$ ; }
rank: 509
score: 98.79359130859375
patch: days += $STRING$ ; days += - 1 ;
rank: 509
score: 98.7414306640625
patch: days += $NUMBER$ ; days += $NUMBER$ / ;
rank: 509
score: 98.69736735026042
patch: days += 1 ; days -- ; }
rank: 510
score: 98.9439453125
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; seconds += $NUMBER$ ;
rank: 510
score: 98.80606079101562
patch: days += days * $NUMBER$ ; }
rank: 510
score: 98.79340209960938
patch: days += - 1 ; days * * /
rank: 510
score: 98.72337123325893
patch: days += 1 + 1 ;
rank: 510
score: 98.697216796875
patch: long days = days + $NUMBER$ + $NUMBER$ ;
rank: 511
score: 99.04423595610119
patch: start . set ( end . get ( Calendar . DAY _ OF _ MONTH ) , months ) ;
rank: 511
score: 98.94342041015625
patch: days += end . get ( Calendar . DAY _ OF _ YEAR ) ; days -= $NUMBER$ ;
rank: 511
score: 98.8054443359375
patch: days += $NUMBER$ * Time CaMeL Zone 1 ;
rank: 511
score: 98.79306369357639
patch: days += 0 ; start += $NUMBER$ ;
rank: 511
score: 98.74104817708333
patch: days += Math . max ( $NUMBER$ , $NUMBER$ ) ;
rank: 511
score: 98.72252546037946
patch: days days += $NUMBER$ ; ;
rank: 511
score: 98.69708930121527
patch: days ++ ; days *= $NUMBER$ ; }
rank: 512
score: 99.04420572916666
patch: days -= reduce CaMeL And CaMeL Correct ( start , end , end ,
rank: 512
score: 98.94340376420455
patch: days += reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY , milliseconds ) ;
rank: 512
score: 98.86463080512152
patch: hours = $NUMBER$ ; seconds -= 1 ;
rank: 512
score: 98.80497602982955
patch: days += $NUMBER$ ; time += $NUMBER$ ; } ;
rank: 512
score: 98.79210662841797
patch: days += days ; return $NUMBER$ ;
rank: 512
score: 98.72243826729911
patch: days = $NUMBER$ + 0 ;
rank: 512
score: 98.69678606305804
patch: time = $NUMBER$ * $NUMBER$ ;
rank: 513
score: 98.9427823153409
patch: days = end . get ( Calendar . DAY _ OF _ MONTH ) . get CaMeL Time ( ) ;
rank: 513
score: 98.89864773220486
patch: hours -= $NUMBER$ ; minutes -= $NUMBER$ ;
rank: 513
score: 98.86456976996527
patch: months += $NUMBER$ ; days += 1 ;
rank: 513
score: 98.80303955078125
patch: days += $NUMBER$ * MINUTE + $NUMBER$ ;
rank: 513
score: 98.79198455810547
patch: days -- ; days * * /
rank: 513
score: 98.7400790127841
patch: days += $NUMBER$ ; days += $NUMBER$ * days ;
rank: 513
score: 98.72235107421875
patch: days days += $NUMBER$ + 1 ;
rank: 513
score: 98.695947265625
patch: days -- ; days += $NUMBER$ + $NUMBER$ ;
rank: 514
score: 99.04357147216797
patch: days += reduce CaMeL And CaMeL Correct ( start , end , true ) ;
rank: 514
score: 98.9427001953125
patch: days += $NUMBER$ * Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= 1 ; }
rank: 514
score: 98.89855278862848
patch: hours += $NUMBER$ ; hours += $NUMBER$ ;
rank: 514
score: 98.86362711588542
patch: milliseconds += $NUMBER$ ; hours -= $NUMBER$ ;
rank: 514
score: 98.80295632102273
patch: days ++ ; days += $NUMBER$ + $NUMBER$ ; }
rank: 514
score: 98.791943359375
patch: days += $NUMBER$ ; days * * $NUMBER$ ;
rank: 514
score: 98.73920288085938
patch: days ; days += $NUMBER$ ; += $NUMBER$ ;
rank: 514
score: 98.7207260131836
patch: days += $NUMBER$ ; throw days ;
rank: 515
score: 99.04310825892857
patch: start . set ( Calendar . DAY _ OF _ MONTH , start . get ( Calendar . YEAR )
rank: 515
score: 98.94257463727679
patch: days += reduce CaMeL And CaMeL Correct ( start , seconds ) ;
rank: 515
score: 98.86320665147569
patch: milliseconds += 1 ; hours -= 1 ;
rank: 515
score: 98.85999407087054
patch: seconds += $NUMBER$ * $NUMBER$ ;
rank: 515
score: 98.80282253689236
patch: days += $NUMBER$ * SECOND + $NUMBER$ ;
rank: 515
score: 98.79165310329861
patch: days += $NUMBER$ ; } days * /
rank: 515
score: 98.73835100446429
patch: days += 0 + days ;
rank: 515
score: 98.71954345703125
patch: days < $NUMBER$ + $NUMBER$ ;
rank: 515
score: 98.69561767578125
patch: days += $NUMBER$ * $NUMBER$ - $NUMBER$ ;
rank: 516
score: 98.94227905273438
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; milliseconds -= $NUMBER$ ;
rank: 516
score: 98.89839002821181
patch: minutes += $NUMBER$ ; seconds += $NUMBER$ ;
rank: 516
score: 98.86277262369792
patch: seconds = $NUMBER$ ; days -= 1 ;
rank: 516
score: 98.8027099609375
patch: days += $NUMBER$ ; SECOND += $NUMBER$ ; }
rank: 516
score: 98.79109191894531
patch: days -- ; days += $STRING$ ;
rank: 516
score: 98.73762650923295
patch: days ++ ; if days += $NUMBER$ + $NUMBER$ ;
rank: 516
score: 98.71855926513672
patch: days += $NUMBER$ ; $NUMBER$ / *
rank: 516
score: 98.69556274414063
patch: double days = $NUMBER$ * $NUMBER$ + $NUMBER$ ;
rank: 517
score: 99.04205322265625
patch: days += 1 ; hours -= 1 ; }
rank: 517
score: 98.94188343394886
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . HOUR _ OF _ DAY , hours , days ) ;
rank: 517
score: 98.86240641276042
patch: days -= $NUMBER$ ; hours -= $NUMBER$ ;
rank: 517
score: 98.85974799262152
patch: seconds -= $NUMBER$ ; days += $NUMBER$ ;
rank: 517
score: 98.79108276367188
patch: days += $NUMBER$ ; else { return $NUMBER$ ;
rank: 517
score: 98.73753773082386
patch: days ++ ; } days += $NUMBER$ - $NUMBER$ ;
rank: 517
score: 98.71578216552734
patch: days += 0 + $NUMBER$ ; ;
rank: 517
score: 98.6953125
patch: days -- ; days -= 1 ; }
rank: 518
score: 98.94109497070312
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; milliseconds += 1 ;
rank: 518
score: 98.89756266276042
patch: minutes += 1 ; hours += 1 ;
rank: 518
score: 98.86232503255208
patch: milliseconds -= 1 ; hours -= 1 ;
rank: 518
score: 98.85916476779514
patch: return format . format ( $NUMBER$ ) ;
rank: 518
score: 98.80178493923611
patch: days += $NUMBER$ * Calendar . MONTH ;
rank: 518
score: 98.79062228732639
patch: days * * / { days * /
rank: 518
score: 98.73729451497395
patch: days += $NUMBER$ + $NUMBER$ ; } days += 0 ;
rank: 518
score: 98.71537017822266
patch: days = $NUMBER$ + - $NUMBER$ ;
rank: 518
score: 98.69503445095486
patch: days = days - $NUMBER$ + $NUMBER$ ;
rank: 519
score: 99.04038492838542
patch: days += 1 ; minutes += 1 ;
rank: 519
score: 98.93999689275569
patch: days = Calendar . get CaMeL Instance ( Calendar . DAY _ OF _ MONTH ) ; days -= 1 ;
rank: 519
score: 98.86225043402777
patch: months += 1 ; seconds -= 1 ;
rank: 519
score: 98.85911729600694
patch: hours -= $NUMBER$ ; seconds -= $NUMBER$ ;
rank: 519
score: 98.80074310302734
patch: days += $NUMBER$ * MONTH ; }
rank: 519
score: 98.78962707519531
patch: days -- ; days / * /
rank: 519
score: 98.73714192708333
patch: days [ $NUMBER$ ] += 0 ; days += $NUMBER$ ;
rank: 519
score: 98.71459089006696
patch: days += $NUMBER$ ; ; days
rank: 519
score: 98.69483947753906
patch: days -= $NUMBER$ ; days -- ;
rank: 520
score: 99.03962053571429
patch: start . set ( end . get ( Calendar . HOUR _ OF _ DAY ) , hours ) ;
rank: 520
score: 98.93988647460938
patch: days -= end . get ( Calendar . HOUR _ OF _ DAY ) ; months += $NUMBER$ ;
rank: 520
score: 98.8588623046875
patch: months = end . get ( $NUMBER$ ) ;
rank: 520
score: 98.78956298828125
patch: days += 0 ; ; if += $NUMBER$ ;
rank: 520
score: 98.71427154541016
patch: days $NUMBER$ ; days += 0 ;
rank: 520
score: 98.69351959228516
patch: days -= $NUMBER$ / $NUMBER$ ; }
rank: 521
score: 99.03915550595238
patch: hours += reduce CaMeL And CaMeL Correct ( start , Calendar . HOUR _ OF _ DAY ) ; }
rank: 521
score: 98.93980189732143
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; days -= 1 ; }
rank: 521
score: 98.86186387803819
patch: milliseconds -= $NUMBER$ ; days -= $NUMBER$ ;
rank: 521
score: 98.80045942826705
patch: days += $NUMBER$ * time + $NUMBER$ * time ;
rank: 521
score: 98.78924560546875
patch: days = $NUMBER$ ; += false ;
rank: 521
score: 98.73652787642045
patch: days = $NUMBER$ * $NUMBER$ ? $NUMBER$ : $NUMBER$ ;
rank: 521
score: 98.70974295479911
patch: days += this + $NUMBER$ ;
rank: 521
score: 98.69226946149554
patch: days : days += $NUMBER$ ;
rank: 522
score: 98.93961791992187
patch: days -= end . get ( Calendar . DAY _ OF _ MONTH ) ; seconds += $NUMBER$ ;
rank: 522
score: 98.85866292317708
patch: months -= 1 ; days += 1 ;
rank: 522
score: 98.8002685546875
patch: days += $NUMBER$ * ( $NUMBER$ * $NUMBER$ ;
rank: 522
score: 98.78923688616071
patch: days += ; return days ;
rank: 522
score: 98.73594360351562
patch: days ++ ; } days days += $NUMBER$ ;
rank: 522
score: 98.70856475830078
patch: days += $NUMBER$ ; $NUMBER$ * ;
rank: 522
score: 98.69173583984374
patch: days = 0 ; days += $NUMBER$ ; }
rank: 523
score: 99.03877563476563
patch: hours += $NUMBER$ ; days -= 1 ; }
rank: 523
score: 98.93877301897321
patch: days -= reduce CaMeL And CaMeL Correct ( start , minutes ) ;
rank: 523
score: 98.85965983072917
patch: milliseconds -= $NUMBER$ ; years -= $NUMBER$ ;
rank: 523
score: 98.80007595486111
patch: days += $NUMBER$ * Calendar . ; }
rank: 523
score: 98.7349344889323
patch: days += 0 ; days += $NUMBER$ ; break $NUMBER$ ;
rank: 523
score: 98.70582798549107
patch: days += $NUMBER$ * 1 ;
rank: 523
score: 98.69105529785156
patch: double $NUMBER$ = days * $NUMBER$ ;
rank: 524
score: 98.93804640997024
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; seconds += $NUMBER$ ;
rank: 524
score: 98.89470079210069
patch: seconds += 1 ; hours += 1 ;
rank: 524
score: 98.79989188058036
patch: days += $NUMBER$ + time ;
rank: 524
score: 98.789111328125
patch: days += 0 ; if += - $NUMBER$ ;
rank: 524
score: 98.73486328125
patch: days += $NUMBER$ * $NUMBER$ ; return $NUMBER$ ;
rank: 525
score: 98.93758138020833
patch: days += 1 * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY - days ;
rank: 525
score: 98.85932752821181
patch: months += $NUMBER$ ; minutes -= $NUMBER$ ;
rank: 525
score: 98.7888427734375
patch: days += 0 ; days end = $NUMBER$ ;
rank: 525
score: 98.73457845052083
patch: days += $NUMBER$ - days ; } days += $NUMBER$ ;
rank: 525
score: 98.70341273716518
patch: days = $NUMBER$ - 1 ;
rank: 525
score: 98.69054412841797
patch: end . ; days += $NUMBER$ ;
rank: 526
score: 98.93740699404762
patch: days -= Date CaMeL Utils . MILLIS _ PER _ DAY - reduce CaMeL And CaMeL Correct ( start ,
rank: 526
score: 98.89384629991319
patch: hours -= 1 ; hours -= $NUMBER$ ;
rank: 526
score: 98.79981689453125
patch: days += $NUMBER$ * Date CaMeL Utils . days
rank: 526
score: 98.78862847222223
patch: days += $STRING$ ; days catch $NUMBER$ ;
rank: 526
score: 98.73456573486328
patch: days ++ = $NUMBER$ * $NUMBER$ ;
rank: 526
score: 98.68894740513393
patch: date = days + $NUMBER$ ;
rank: 527
score: 99.03810221354166
patch: minutes += reduce CaMeL And CaMeL Correct ( start , end , end ,
rank: 527
score: 98.93670944940476
patch: days -= $NUMBER$ * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY - hours ;
rank: 527
score: 98.79970974392361
patch: days += $NUMBER$ * $NUMBER$ * ; ;
rank: 527
score: 98.69961547851562
patch: days += $NUMBER$ ; $NUMBER$ ++ ;
rank: 528
score: 99.03794352213542
patch: hours -= 1 ; hours += 1 ;
rank: 528
score: 98.93648856026786
patch: days += $NUMBER$ * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY - $NUMBER$ ;
rank: 528
score: 98.79913330078125
patch: days += $NUMBER$ ; } if ( ;
rank: 528
score: 98.78794555664062
patch: days += * days ; days += $NUMBER$ ;
rank: 528
score: 98.73385009765624
patch: days += $NUMBER$ ; } days = days ;
rank: 528
score: 98.69905090332031
patch: days ; days = $NUMBER$ ; ;
rank: 528
score: 98.68824768066406
patch: days += start . get ( ;
rank: 529
score: 99.03765578497024
patch: Calendar . get CaMeL Instance ( timezone ) . set CaMeL Time ( Calendar . YEAR , milliseconds ) ;
rank: 529
score: 98.89295789930556
patch: hours -= 1 ; minutes += $NUMBER$ ;
rank: 529
score: 98.85686577690973
patch: months = $NUMBER$ ; days += 1 ;
rank: 529
score: 98.7985506924716
patch: days += $NUMBER$ ; time += $NUMBER$ ; ; }
rank: 529
score: 98.78782653808594
patch: days ; days += - $NUMBER$ ;
rank: 529
score: 98.73285466974431
patch: days [ $NUMBER$ ] += $NUMBER$ ; days ++ ;
rank: 529
score: 98.69552612304688
patch: return $NUMBER$ ; days += $NUMBER$ ;
rank: 530
score: 98.93599076704545
patch: days -= reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY , years ) ;
rank: 530
score: 98.89291720920139
patch: days += 1 ; seconds += 1 ;
rank: 530
score: 98.79848225911458
patch: days += $NUMBER$ * $NUMBER$ + time ;
rank: 530
score: 98.78770751953125
patch: days = days ; } days = $NUMBER$ ;
rank: 530
score: 98.7327880859375
patch: days += $NUMBER$ [ $NUMBER$ ] ;
rank: 530
score: 98.69364929199219
patch: days = $NUMBER$ + - 1 ;
rank: 530
score: 98.68566216362848
patch: days += time ; days += $NUMBER$ ;
rank: 531
score: 99.03688401442308
patch: minutes += end . get ( Calendar . YEAR ) ; }
rank: 531
score: 98.935302734375
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ MONTH , days ) ; }
rank: 531
score: 98.89273410373264
patch: seconds += 1 ; seconds -= $NUMBER$ ;
rank: 531
score: 98.79791937934027
patch: days += 1 * $NUMBER$ * $NUMBER$ ;
rank: 531
score: 98.7874755859375
patch: days -- ; days += false ;
rank: 531
score: 98.73244018554688
patch: days -= 0 ;
rank: 531
score: 98.69312286376953
patch: days else ; days = $NUMBER$ ;
rank: 531
score: 98.68564453125
patch: days += $NUMBER$ ; } days *= 1 ;
rank: 532
score: 98.93517485119048
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; minutes += 1 ;
rank: 532
score: 98.85421413845486
patch: seconds -= 1 ; seconds -= $NUMBER$ ;
rank: 532
score: 98.79771728515625
patch: days += $NUMBER$ * Math . abs ( ;
rank: 532
score: 98.7874526977539
patch: days * / days = days ;
rank: 532
score: 98.6847900390625
patch: time = days ; days += $NUMBER$ ; }
rank: 533
score: 99.0365459735577
patch: days -= - start . get ( Calendar . MINUTE ) ;
rank: 533
score: 98.93475896661931
patch: days += reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY , years ) ;
rank: 533
score: 98.89148627387152
patch: minutes -= $NUMBER$ ; years += 1 ;
rank: 533
score: 98.85486518012152
patch: days -= $NUMBER$ ; minutes -= $NUMBER$ ;
rank: 533
score: 98.79705132378473
patch: days -= 1 ; time += $NUMBER$ ;
rank: 533
score: 98.78717912946429
patch: days -- ; days -- ;
rank: 533
score: 98.73122336647727
patch: days += 0 ; days += $NUMBER$ / days ;
rank: 533
score: 98.69140625
patch: days = $NUMBER$ ; days ;
rank: 534
score: 98.93349387428977
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) . get CaMeL Date ( ) ;
rank: 534
score: 98.85358344184027
patch: months -= $NUMBER$ ; years += 1 ;
rank: 534
score: 98.85354275173611
patch: return format CaMeL Duration ( millis ) ;
rank: 534
score: 98.79679565429687
patch: days += $NUMBER$ * $NUMBER$ * $NUMBER$ ; ;
rank: 534
score: 98.78709581163194
patch: days = $NUMBER$ ; days += true ;
rank: 534
score: 98.73085327148438
patch: days ; } else { days += $NUMBER$ ;
rank: 534
score: 98.69046456473214
patch: days = $NUMBER$ ; break ;
rank: 534
score: 98.6838623046875
patch: days += $NUMBER$ + $NUMBER$ - $NUMBER$ ; }
rank: 535
score: 99.03531494140626
patch: days -= 1 ; days -= 1 ; }
rank: 535
score: 98.93321010044643
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; hours -= 1 ; }
rank: 535
score: 98.89101155598958
patch: hours += 1 ; hours += $NUMBER$ ;
rank: 535
score: 98.85336642795139
patch: months -= $NUMBER$ ; years += $NUMBER$ ;
rank: 535
score: 98.78704155815973
patch: days = days ; += - 1 ;
rank: 535
score: 98.73065740411931
patch: days += 0 ; } } days += $NUMBER$ ;
rank: 535
score: 98.68241119384766
patch: start . set ( days ) ;
rank: 536
score: 98.93303888494319
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; days -= 1 ; }
rank: 536
score: 98.79615783691406
patch: days += $NUMBER$ * ( ; }
rank: 536
score: 98.78689575195312
patch: days += $NUMBER$ ; days -- ; break ;
rank: 536
score: 98.73052368164062
patch: days ; days [ $NUMBER$ ] = $NUMBER$ ;
rank: 536
score: 98.68920288085937
patch: days = 0 ;
rank: 536
score: 98.68209075927734
patch: days = start . get ( ;
rank: 537
score: 98.9322176846591
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) . to CaMeL String ( ) ;
rank: 537
score: 98.89084201388889
patch: milliseconds += $NUMBER$ ; years += 1 ;
rank: 537
score: 98.7957430752841
patch: days += $NUMBER$ ; end . set ( ; }
rank: 537
score: 98.78668212890625
patch: days * * / return days - $NUMBER$ ;
rank: 537
score: 98.73036887428977
patch: days ; days += $NUMBER$ ; days += 0 ;
rank: 537
score: 98.6882095336914
patch: days += $NUMBER$ ; for $NUMBER$ ;
rank: 537
score: 98.68171522352431
patch: long $NUMBER$ time = days * $NUMBER$ ;
rank: 538
score: 98.78641764322917
patch: days += ( days - days $NUMBER$ ;
rank: 538
score: 98.730224609375
patch: days += $NUMBER$ ; if days += 0 ;
rank: 538
score: 98.6812744140625
patch: days += $NUMBER$ + >= $NUMBER$ ;
rank: 539
score: 99.03275553385417
patch: start . set ( Calendar . HOUR _ OF _ DAY ) ; }
rank: 539
score: 98.9303966703869
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . HOUR _ OF _ DAY , hours ) ; }
rank: 539
score: 98.89013671875
patch: days += $NUMBER$ ; seconds -= $NUMBER$ ;
rank: 539
score: 98.8514404296875
patch: months += 1 ; days -= $NUMBER$ ;
rank: 539
score: 98.79298231336806
patch: days += $NUMBER$ ; if ( ; }
rank: 539
score: 98.78595648871527
patch: days * - 1 ; days -- ;
rank: 539
score: 98.73008034446023
patch: days ++ ; days [ $NUMBER$ ] = $NUMBER$ ;
rank: 539
score: 98.68363952636719
patch: days = $NUMBER$ * $NUMBER$ ; ;
rank: 540
score: 98.93033854166667
patch: days += $NUMBER$ * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY - years ;
rank: 540
score: 98.785400390625
patch: days * * 1 ; days * $NUMBER$ ;
rank: 540
score: 98.7298812866211
patch: days ++ ; } return days ;
rank: 540
score: 98.68117947048611
patch: days += $NUMBER$ * >= $NUMBER$ ; }
rank: 540
score: 98.68110656738281
patch: days += $NUMBER$ ; if $NUMBER$ *
rank: 541
score: 99.02900526258681
patch: days += 1 ; hours -= $NUMBER$ ;
rank: 541
score: 98.93000139508929
patch: days += 1 * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY - 1 ;
rank: 541
score: 98.85104370117188
patch: milliseconds += $NUMBER$ ; }
rank: 541
score: 98.7906161221591
patch: days += $NUMBER$ ; time += $NUMBER$ * $NUMBER$ ;
rank: 541
score: 98.78498840332031
patch: days ] = days += $NUMBER$ ;
rank: 541
score: 98.68094635009766
patch: days ++ ; days -= 1 ;
rank: 542
score: 98.92934348366477
patch: days += end . get ( Calendar . DAY _ OF _ YEAR ) . to CaMeL String ( ) ;
rank: 542
score: 98.88873291015625
patch: milliseconds += 1 ; years += $NUMBER$ ;
rank: 542
score: 98.79031982421876
patch: days += $NUMBER$ * time / $NUMBER$ ; }
rank: 542
score: 98.72960662841797
patch: days += 0 ; $NUMBER$ * /
rank: 542
score: 98.68017578125
patch: days <= 0 ? $NUMBER$ : $NUMBER$ ;
rank: 542
score: 98.67898559570312
patch: days += $STRING$ ; += $NUMBER$ ;
rank: 543
score: 98.84986707899306
patch: seconds = $NUMBER$ ; years -= 1 ;
rank: 543
score: 98.78935546875
patch: days += $NUMBER$ * Time CaMeL Zone $NUMBER$ ;
rank: 543
score: 98.72923694957386
patch: days += 0 ; days += $NUMBER$ ; days ;
rank: 543
score: 98.678759765625
patch: long days = days - $NUMBER$ * $NUMBER$ ;
rank: 544
score: 99.02798025948661
patch: days += 1 - start . get ( Calendar . YEAR ) ;
rank: 544
score: 98.92804827008929
patch: days += reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ MONTH , hours ) ; }
rank: 544
score: 98.84901258680556
patch: months = $NUMBER$ ; minutes -= 1 ;
rank: 544
score: 98.84861246744792
patch: seconds -= $NUMBER$ ; hours -= $NUMBER$ ;
rank: 544
score: 98.789306640625
patch: days += $NUMBER$ ; time += $NUMBER$ ; } }
rank: 544
score: 98.78418731689453
patch: days ++ ; days += $STRING$ ;
rank: 544
score: 98.72900390625
patch: days += $NUMBER$ * days ; } days += $NUMBER$ ;
rank: 544
score: 98.67869059244792
patch: start . ; days += 1 ; }
rank: 544
score: 98.67496163504464
patch: days += $NUMBER$ = $NUMBER$ ;
rank: 545
score: 98.92800071022727
patch: days -= reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY , seconds ) ;
rank: 545
score: 98.88705105251736
patch: minutes += 1 ; minutes += $NUMBER$ ;
rank: 545
score: 98.84715440538194
patch: months += 1 ; years -= $NUMBER$ ;
rank: 545
score: 98.78390502929688
patch: days ] += days ; break ;
rank: 545
score: 98.728857421875
patch: days += 0 ; days -= $NUMBER$ ; }
rank: 545
score: 98.67861599392361
patch: days += $NUMBER$ + >= $NUMBER$ ; }
rank: 545
score: 98.67454528808594
patch: days = $NUMBER$ - $NUMBER$ ; ;
rank: 546
score: 98.9265380859375
patch: days -= $NUMBER$ ; } milliseconds -= 1 ;
rank: 546
score: 98.84541829427083
patch: days -= 1 ; hours -= $NUMBER$ ;
rank: 546
score: 98.78807373046875
patch: days += $NUMBER$ ; time -= $NUMBER$ ; }
rank: 546
score: 98.78384399414062
patch: days ++ ; days += false ;
rank: 546
score: 98.72855224609376
patch: days * * / days += $NUMBER$ ; }
rank: 547
score: 98.92644391741071
patch: days -= reduce CaMeL And CaMeL Correct ( start , seconds ) ;
rank: 547
score: 98.88621690538194
patch: milliseconds += 1 ; years -= $NUMBER$ ;
rank: 547
score: 98.78356255425348
patch: days ++ ; days else days -- ;
rank: 547
score: 98.72849527994792
patch: days += 0 ; days += $NUMBER$ ; += $NUMBER$ ;
rank: 547
score: 98.67778184678819
patch: start . add ( $NUMBER$ , $NUMBER$ ;
rank: 547
score: 98.67291259765625
patch: days += $NUMBER$ ; += null ;
rank: 548
score: 98.84662543402777
patch: seconds -= 1 ; hours -= $NUMBER$ ;
rank: 548
score: 98.84421793619792
patch: minutes += $NUMBER$ ; }
rank: 548
score: 98.78758409288194
patch: days += $NUMBER$ * $NUMBER$ * MINUTE ;
rank: 548
score: 98.7833251953125
patch: days ++ ; days = ( days ;
rank: 548
score: 98.72836303710938
patch: days += $NUMBER$ / days $NUMBER$ ;
rank: 548
score: 98.67711791992187
patch: days += Calendar . get CaMeL Instance ( ;
rank: 548
score: 98.67274475097656
patch: days else days += $NUMBER$ ; ;
rank: 549
score: 99.023486328125
patch: days = reduce CaMeL And CaMeL Correct ( start , end , end ,
rank: 549
score: 98.88536919487848
patch: minutes += 1 ; seconds += $NUMBER$ ;
rank: 549
score: 98.84585232204861
patch: seconds += $NUMBER$ * Calendar . MILLISECOND ;
rank: 549
score: 98.78697374131944
patch: days += $NUMBER$ * $NUMBER$ << $NUMBER$ ;
rank: 549
score: 98.7828369140625
patch: days += $NUMBER$ ; days * * /
rank: 549
score: 98.72821599786931
patch: days ; if ; days += $NUMBER$ + $NUMBER$ ;
rank: 549
score: 98.67687310112848
patch: start . add ( days ) ; }
rank: 549
score: 98.6725082397461
patch: days += $NUMBER$ + += 1 ;
rank: 550
score: 99.02310791015626
patch: hours += 1 ; hours -= 1 ; }
rank: 550
score: 98.88494873046875
patch: minutes -= 1 ; years -= $NUMBER$ ;
rank: 550
score: 98.84583197699652
patch: months -= $NUMBER$ ; days += 1 ;
rank: 550
score: 98.84364149305556
patch: milliseconds -= 1 ; seconds -= 1 ;
rank: 550
score: 98.78682250976563
patch: long days += $NUMBER$ ; time += $NUMBER$ ;
rank: 550
score: 98.7828125
patch: days += $NUMBER$ ; days catch += $STRING$ ;
rank: 550
score: 98.67222290039062
patch: days += null ;
rank: 551
score: 98.92472330729167
patch: days -= 1 * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY - hours ;
rank: 551
score: 98.84561496310764
patch: seconds += $NUMBER$ ; years = $NUMBER$ ;
rank: 551
score: 98.78653971354167
patch: days += $NUMBER$ * days >> $NUMBER$ ;
rank: 551
score: 98.7826904296875
patch: days += - 1 ; while += $NUMBER$ ;
rank: 551
score: 98.72769165039062
patch: days = $NUMBER$ / += $NUMBER$ ;
rank: 551
score: 98.67650689019098
patch: days += $NUMBER$ ; days *= 1 ;
rank: 551
score: 98.67161560058594
patch: days += 1 ; days ; ;
rank: 552
score: 99.02231174045139
patch: months += 1 ; days += 1 ;
rank: 552
score: 98.92452566964286
patch: days += $NUMBER$ * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY - months ;
rank: 552
score: 98.8422139485677
patch: months += $NUMBER$ ; }
rank: 552
score: 98.78555297851562
patch: days += $NUMBER$ * time 1 ;
rank: 552
score: 98.7823974609375
patch: days += days ; } days = $NUMBER$ ;
rank: 552
score: 98.7276102701823
patch: days += $NUMBER$ ; days += $NUMBER$ ; days ++ ;
rank: 552
score: 98.67605590820312
patch: days |= $NUMBER$ + $NUMBER$ ; }
rank: 552
score: 98.67121124267578
patch: days days += 0 ; break ;
rank: 553
score: 98.84215630425348
patch: months -= 1 ; years -= $NUMBER$ ;
rank: 553
score: 98.78497992621527
patch: days += $NUMBER$ * time - days ;
rank: 553
score: 98.7821044921875
patch: days ++ ; += - 1 ;
rank: 553
score: 98.72758345170455
patch: days * * * * / days += $NUMBER$ ;
rank: 553
score: 98.67585584852431
patch: time += $NUMBER$ * $NUMBER$ + $NUMBER$ ;
rank: 553
score: 98.67115020751953
patch: days += $NUMBER$ ; ; ; ;
rank: 554
score: 99.02099609375
patch: days += 1 - start . get ( Calendar . MONTH ) ;
rank: 554
score: 98.88342963324652
patch: hours -= $NUMBER$ ; seconds += 1 ;
rank: 554
score: 98.8419189453125
patch: hours = $NUMBER$ ; minutes -= 1 ;
rank: 554
score: 98.78400336371527
patch: time += $NUMBER$ * time + $NUMBER$ ;
rank: 554
score: 98.7820068359375
patch: days += days ; days += $NUMBER$ ; ;
rank: 554
score: 98.726123046875
patch: days -= $NUMBER$ ; days += 0 ; }
rank: 554
score: 98.67530653211806
patch: days = $NUMBER$ * $NUMBER$ < $NUMBER$ ;
rank: 554
score: 98.67021179199219
patch: days days = $NUMBER$ ; break ;
rank: 555
score: 98.92371544471153
patch: long end = Calendar . get CaMeL Instance ( timezone ) ;
rank: 555
score: 98.88332790798611
patch: } while ( days < 0 ) {
rank: 555
score: 98.84444851345486
patch: days -= $NUMBER$ ; seconds -= $NUMBER$ ;
rank: 555
score: 98.7818603515625
patch: days += $NUMBER$ ; days next = $NUMBER$ ;
rank: 555
score: 98.72568766276042
patch: days += 0 ; days += $NUMBER$ ; return $NUMBER$ ;
rank: 555
score: 98.67477756076389
patch: days += $NUMBER$ * $NUMBER$ < $NUMBER$ ;
rank: 556
score: 98.92347301136364
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; hours -= 1 ; }
rank: 556
score: 98.78348117404514
patch: days += $NUMBER$ * time / days ;
rank: 556
score: 98.7256851196289
patch: days ++ ; break $NUMBER$ ; }
rank: 556
score: 98.67450823102679
patch: start . days -= $NUMBER$ ;
rank: 556
score: 98.66792297363281
patch: days += $NUMBER$ ; ; break ;
rank: 557
score: 98.92314009232955
patch: days += reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY , seconds ) ;
rank: 557
score: 98.83981662326389
patch: hours = $NUMBER$ ; days -= $NUMBER$ ;
rank: 557
score: 98.78333282470703
patch: time += $NUMBER$ * $NUMBER$ ; }
rank: 557
score: 98.78130425347223
patch: days += - 1 ; days else {
rank: 557
score: 98.7255859375
patch: days ; if days += $NUMBER$ + $NUMBER$ ;
rank: 557
score: 98.67393493652344
patch: end . add ( time ) ;
rank: 558
score: 98.78084716796874
patch: days += 0 ; days * * 1 ;
rank: 558
score: 98.724658203125
patch: days -- ; } days += $NUMBER$ ; }
rank: 558
score: 98.66641235351562
patch: days += $NUMBER$ + $STRING$ ; ;
rank: 559
score: 98.92168898809524
patch: days += 1 * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY - $NUMBER$ ;
rank: 559
score: 98.88292778862848
patch: milliseconds += 1 ; seconds -= 1 ;
rank: 559
score: 98.78180609809027
patch: days += $NUMBER$ * $NUMBER$ % $NUMBER$ ;
rank: 559
score: 98.72457275390624
patch: days = $NUMBER$ * ; days += $NUMBER$ ;
rank: 559
score: 98.67268202039931
patch: days += $NUMBER$ ; case - $NUMBER$ :
rank: 560
score: 98.84328002929688
patch: end . get ( Calendar . MONTH ) ;
rank: 560
score: 98.7803955078125
patch: days += $NUMBER$ * ; } ;
rank: 560
score: 98.78018188476562
patch: days * $NUMBER$ ; days -- ;
rank: 560
score: 98.724365234375
patch: days ; if ; } days += $NUMBER$ ;
rank: 560
score: 98.67265489366319
patch: days = ; days += $NUMBER$ ; }
rank: 561
score: 98.88129340277777
patch: minutes -= 1 ; minutes -= $NUMBER$ ;
rank: 561
score: 98.83621826171876
patch: minutes = $NUMBER$ ;
rank: 561
score: 98.78000895182292
patch: days += $NUMBER$ * $NUMBER$ * ; }
rank: 561
score: 98.77996148003473
patch: days += * ; days += $NUMBER$ ;
rank: 561
score: 98.72412109375
patch: days += $NUMBER$ - days + $NUMBER$ ; }
rank: 561
score: 98.67233712332589
patch: start = $NUMBER$ * $NUMBER$ ;
rank: 561
score: 98.66545104980469
patch: days += $NUMBER$ ; ; / /
rank: 562
score: 98.92096819196429
patch: days -= reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY ) ; }
rank: 562
score: 98.8812255859375
patch: seconds += $NUMBER$ ; minutes += $NUMBER$ ;
rank: 562
score: 98.83620876736111
patch: days -= 1 ; minutes -= $NUMBER$ ;
rank: 562
score: 98.77986450195313
patch: days -= 1 ; time += $NUMBER$ ; }
rank: 562
score: 98.72410888671875
patch: days ; += $NUMBER$ ; days += $NUMBER$ ;
rank: 562
score: 98.6718521118164
patch: days += $NUMBER$ ; case $NUMBER$ :
rank: 562
score: 98.66388702392578
patch: days days += 0 + $NUMBER$ ;
rank: 563
score: 99.01668090820313
patch: days += 1 ; } milliseconds += 1 ;
rank: 563
score: 98.92087624289773
patch: days -= reduce CaMeL And CaMeL Correct ( Calendar . DAY _ OF _ MONTH , hours , days ) ;
rank: 563
score: 98.88103569878473
patch: days += $NUMBER$ ; minutes += $NUMBER$ ;
rank: 563
score: 98.84204779730902
patch: days -= 1 ; seconds -= $NUMBER$ ;
rank: 563
score: 98.779052734375
patch: days = $NUMBER$ + $NUMBER$ ; days -- ;
rank: 563
score: 98.72374471028645
patch: days += 0 ; } days = $NUMBER$ * $NUMBER$ ;
rank: 563
score: 98.66363525390625
patch: days days days = $NUMBER$ ;
rank: 564
score: 99.01666259765625
patch: days += reduce CaMeL And CaMeL Correct ( tokens , M ) ;
rank: 564
score: 98.88079833984375
patch: seconds -= 1 ; minutes += 1 ;
rank: 564
score: 98.77889404296874
patch: days += 0 ; days catch += true ;
rank: 564
score: 98.72350056966145
patch: days += $NUMBER$ ; days += $NUMBER$ ; break $NUMBER$ ;
rank: 564
score: 98.67151557074652
patch: days = $NUMBER$ * $NUMBER$ | $NUMBER$ ;
rank: 565
score: 99.01522391183036
patch: start . set ( new Date ( end CaMeL Millis ) ) ;
rank: 565
score: 98.92051003196023
patch: days -= reduce CaMeL And CaMeL Correct ( Date CaMeL Utils . MILLIS _ PER _ DAY , minutes ) ;
rank: 565
score: 98.88076443142361
patch: hours -= $NUMBER$ ; minutes += 1 ;
rank: 565
score: 98.84077962239583
patch: seconds -= $NUMBER$ ; seconds -= $NUMBER$ ;
rank: 565
score: 98.77884521484376
patch: days += 1 ; days catch += $NUMBER$ ;
rank: 565
score: 98.777587890625
patch: days += $NUMBER$ * time <= $NUMBER$ ;
rank: 565
score: 98.72340901692708
patch: days [ $NUMBER$ ] += $NUMBER$ ; days += 0 ;
rank: 565
score: 98.67103576660156
patch: long time = days + 1 ;
rank: 565
score: 98.6626968383789
patch: days += 1 ; $NUMBER$ / /
rank: 566
score: 98.91983468191964
patch: days += Date CaMeL Utils . MILLIS _ PER _ DAY ) ;
rank: 566
score: 98.7787353515625
patch: days += days ; days = - $NUMBER$ ;
rank: 566
score: 98.77718777126736
patch: days -= $NUMBER$ * time + $NUMBER$ ;
rank: 566
score: 98.72314453125
patch: days ; } days += $NUMBER$ ; days += $NUMBER$ ;
rank: 566
score: 98.67059326171875
patch: start . add ( $NUMBER$ ;
rank: 566
score: 98.66047668457031
patch: days += $NUMBER$ + - days ;
rank: 567
score: 98.9197665127841
patch: days -= reduce CaMeL And CaMeL Correct ( Calendar . HOUR _ OF _ DAY , hours , days ) ;
rank: 567
score: 98.7781494140625
patch: days += - $NUMBER$ ; days * * /
rank: 567
score: 98.67047991071429
patch: time += $NUMBER$ + $NUMBER$ ;
rank: 568
score: 98.91927664620536
patch: days += reduce CaMeL And CaMeL Correct ( start , false ) ;
rank: 568
score: 98.88040500217014
patch: minutes += $NUMBER$ ; hours += $NUMBER$ ;
rank: 568
score: 98.839599609375
patch: seconds -= 1 ; seconds += 1 ;
rank: 568
score: 98.77806396484375
patch: days += $NUMBER$ ; days -- ; / /
rank: 568
score: 98.77542453342014
patch: days += $NUMBER$ + $NUMBER$ * time ;
rank: 568
score: 98.65995788574219
patch: days += 1 ; days = ;
rank: 569
score: 98.91842215401786
patch: days -= $NUMBER$ * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY - days ;
rank: 569
score: 98.77732543945312
patch: days += - $NUMBER$ ; days -- ; ;
rank: 569
score: 98.77410888671875
patch: days += 1 / $NUMBER$ ; }
rank: 569
score: 98.6697769165039
patch: double $NUMBER$ = days / $NUMBER$ ;
rank: 569
score: 98.6595230102539
patch: days += 1 + $NUMBER$ ; ;
rank: 570
score: 99.0126220703125
patch: hours += 1 ; } milliseconds -= 1 ;
rank: 570
score: 98.91514078776042
patch: days -= reduce CaMeL And CaMeL Correct ( start , end
rank: 570
score: 98.777197265625
patch: days += $NUMBER$ ; days -- ; days }
rank: 570
score: 98.77357177734375
patch: days += $NUMBER$ * ? $NUMBER$ : $NUMBER$ ;
rank: 570
score: 98.72176106770833
patch: days += $NUMBER$ ; } days = $NUMBER$ / $NUMBER$ ;
rank: 570
score: 98.66926405164931
patch: days += $NUMBER$ / $NUMBER$ ; ; }
rank: 570
score: 98.65829031808036
patch: days += $NUMBER$ ; days days
rank: 571
score: 99.01236979166667
patch: hours -= 1 ; }
rank: 571
score: 98.91510009765625
patch: days += reduce CaMeL And CaMeL Correct ( start , milliseconds ) ;
rank: 571
score: 98.87991333007812
patch: days = end . get ( millis ) ;
rank: 571
score: 98.77670288085938
patch: days += $NUMBER$ ; days -- * 1 ;
rank: 571
score: 98.77350725446429
patch: days += days * $NUMBER$ ;
rank: 571
score: 98.72147827148437
patch: days += ( days : $NUMBER$ ) ; }
rank: 571
score: 98.66877577039931
patch: end . set ( $NUMBER$ ) ; }
rank: 571
score: 98.65718078613281
patch: days += 0 ; days = ;
rank: 572
score: 99.01233588324652
patch: days -= $NUMBER$ ; hours += 1 ;
rank: 572
score: 98.914111328125
patch: days += $NUMBER$ ; } milliseconds -= $NUMBER$ ;
rank: 572
score: 98.77313842773438
patch: days += $NUMBER$ * time * $NUMBER$ ; }
rank: 572
score: 98.721435546875
patch: days += 1 ; if days += $NUMBER$ ;
rank: 572
score: 98.6686782836914
patch: start . ; days -= $NUMBER$ ;
rank: 572
score: 98.6566162109375
patch: days += $STRING$ ; if $NUMBER$ ;
rank: 573
score: 98.82942708333333
patch: months += $NUMBER$ ; days += $NUMBER$ ;
rank: 573
score: 98.7727783203125
patch: days += 1 * Time CaMeL Zone . ;
rank: 573
score: 98.72078247070313
patch: days += $NUMBER$ ; long days += $NUMBER$ ;
rank: 573
score: 98.66841125488281
patch: start . days -= $NUMBER$ ; }
rank: 573
score: 98.65618896484375
patch: days += 1 ; if $NUMBER$ /
rank: 574
score: 98.77593994140625
patch: days += 0 ; days else { break ;
rank: 574
score: 98.77249484592014
patch: days += $NUMBER$ * $NUMBER$ >> $NUMBER$ ;
rank: 574
score: 98.7205477627841
patch: days days += $NUMBER$ ; } days += $NUMBER$ ;
rank: 574
score: 98.65457589285714
patch: days += 1 ; days else
rank: 575
score: 98.9131747159091
patch: days -= Calendar . DAY _ OF _ MONTH ;
rank: 575
score: 98.87863498263889
patch: minutes -= 1 ; minutes += $NUMBER$ ;
rank: 575
score: 98.83745659722223
patch: hours += $NUMBER$ ; years = $NUMBER$ ;
rank: 575
score: 98.82741970486111
patch: seconds += $NUMBER$ ; hours += $NUMBER$ ;
rank: 575
score: 98.77109781901042
patch: days += $NUMBER$ * time ; ; ;
rank: 575
score: 98.71994850852273
patch: days ++ ; } days = $NUMBER$ * $NUMBER$ ;
rank: 575
score: 98.65457153320312
patch: days += 0 ; $NUMBER$ / /
rank: 576
score: 98.91287841796876
patch: days += 1 ; } milliseconds -= $NUMBER$ ;
rank: 576
score: 98.87841118706598
patch: hours -= 1 ; seconds += $NUMBER$ ;
rank: 576
score: 98.83588324652777
patch: months += 1 ; years += 1 ;
rank: 576
score: 98.77408447265626
patch: days = $NUMBER$ ; } if += $NUMBER$ ;
rank: 576
score: 98.7708740234375
patch: days += $NUMBER$ * += $NUMBER$ ; }
rank: 576
score: 98.7189432779948
patch: days += $NUMBER$ ; days += $NUMBER$ ; return $NUMBER$ ;
rank: 576
score: 98.66551862444196
patch: days += $NUMBER$ ; continue ;
rank: 576
score: 98.65205383300781
patch: days $NUMBER$ ; days = 1 ;
rank: 577
score: 98.91283017113095
patch: days += 1 * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY - years ;
rank: 577
score: 98.87743462456598
patch: milliseconds += 1 ; years += 1 ;
rank: 577
score: 98.71891784667969
patch: days += $NUMBER$ ; if days ;
rank: 577
score: 98.6654281616211
patch: double $NUMBER$ = days + 1 ;
rank: 578
score: 98.91205124627976
patch: days -= $NUMBER$ * Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY - 1 ;
rank: 578
score: 98.87721761067708
patch: hours = $NUMBER$ ; minutes += 1 ;
rank: 578
score: 98.83559163411458
patch: seconds -= $NUMBER$ ; years = $NUMBER$ ;
rank: 578
score: 98.76990966796875
patch: days += 0 ; time += $NUMBER$ ; }
rank: 578
score: 98.7189053622159
patch: days += $NUMBER$ ; days = $NUMBER$ / days ;
rank: 578
score: 98.66456821986607
patch: start . start ( ) ;
rank: 578
score: 98.65036010742188
patch: days += $NUMBER$ ; $NUMBER$ $NUMBER$ ;
rank: 579
score: 98.91167922247024
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; days += 1 ; }
rank: 579
score: 98.83552381727431
patch: days = end . get ( ) ;
rank: 579
score: 98.77359619140626
patch: days += - 1 ; if += $STRING$ ;
rank: 579
score: 98.76882595486111
patch: days += $NUMBER$ / days + $NUMBER$ ;
rank: 579
score: 98.71882934570313
patch: days += $NUMBER$ - ; days += $NUMBER$ ;
rank: 579
score: 98.66439819335938
patch: days += $NUMBER$ ; case 1 :
rank: 580
score: 99.00392456054688
patch: days += $NUMBER$ ; hours -= 1 ; }
rank: 580
score: 98.91160946800595
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; months -= 1 ; }
rank: 580
score: 98.77343139648437
patch: days += 0 ; days += 1 ; ;
rank: 580
score: 98.76816813151042
patch: days += $NUMBER$ * time >= $NUMBER$ ;
rank: 580
score: 98.71874237060547
patch: days ; } days += 1 ;
rank: 580
score: 98.64950125558036
patch: days = $NUMBER$ + $STRING$ ;
rank: 581
score: 98.99991455078126
patch: hours += $NUMBER$ ; hours -= 1 ; }
rank: 581
score: 98.91151646205357
patch: days += Date CaMeL Utils . Date CaMeL Utils . MILLIS _ PER _ DAY ; minutes += $NUMBER$ ;
rank: 581
score: 98.77305603027344
patch: days ++ ; days / * /
rank: 581
score: 98.76732720269098
patch: days += $NUMBER$ * $NUMBER$ + MINUTE ;
rank: 581
score: 98.7187167080966
patch: days ; days += $NUMBER$ ; days += 1 ;
rank: 582
score: 98.91121419270833
patch: days += end . get ( Calendar . DAY _ OF _ MONTH ) ; } milliseconds -= 1 ;
rank: 582
score: 98.87540011935764
patch: milliseconds += $NUMBER$ ; days += 1 ;
rank: 582
score: 98.76673889160156
patch: days += time + $NUMBER$ ; }
rank: 582
score: 98.71798706054688
patch: days += $NUMBER$ - $NUMBER$ ; days += $NUMBER$ ; }
rank: 582
score: 98.64874267578125
patch: days = 1 ;
rank: 583
score: 98.91092354910714
patch: days += end . get ( Calendar . HOUR _ OF _ DAY ) ; days -= 1 ; }
rank: 583
score: 98.77241734095982
patch: days += ; += days ;
rank: 583
score: 98.7666015625
patch: long days = $NUMBER$ * Calendar . SECOND ;
rank: 583
score: 98.71780395507812
patch: days += $NUMBER$ - += 1 ;
rank: 583
score: 98.66336822509766
patch: days = days + 1 ; }
rank: 583
score: 98.64872523716518
patch: days += $NUMBER$ / 1 ;
rank: 584
score: 98.99594116210938
patch: hours -= 1 ; days -= 1 ; }
rank: 584
score: 98.9092305501302
patch: days += Token . get ( Calendar . YEAR ) ;
rank: 584
score: 98.83356391059027
patch: days -= reduce CaMeL And CaMeL Correct ;
rank: 584
score: 98.77232360839844
patch: days += end . days $NUMBER$ ;
rank: 584
score: 98.76629638671875
patch: days += $NUMBER$ * time ; } }
rank: 584
score: 98.717529296875
patch: days += $NUMBER$ ; } days = $NUMBER$ ; }
rank: 584
score: 98.66301133897569
patch: start += $NUMBER$ + $NUMBER$ + $NUMBER$ ;
rank: 585
score: 98.99582248263889
patch: days -= 1 ; minutes += 1 ;
rank: 585
score: 98.83342827690973
patch: months = $NUMBER$ ; days += $NUMBER$ ;
rank: 585
score: 98.7716796875
patch: days += $NUMBER$ ; days -- ; $NUMBER$ *
rank: 585
score: 98.76612684461806
patch: days += $NUMBER$ * YEAR + $NUMBER$ ;
rank: 585
score: 98.71691284179687
patch: days -= 0 ; } days += $NUMBER$ ;
rank: 585
score: 98.64645385742188
patch: days += $NUMBER$ ; ; $NUMBER$ ;
rank: 586
score: 98.99481811523438
patch: minutes += 1 ; days -= 1 ; }
rank: 586
score: 98.90285818917411
patch: days += end . get ( DAY _ OF _ MONTH ) ;
rank: 586
score: 98.82274034288194
patch: milliseconds += $NUMBER$ ; seconds -= $NUMBER$ ;
rank: 586
score: 98.76566569010417
patch: days += $NUMBER$ * $NUMBER$ + SECOND ;
rank: 586
score: 98.71677468039773
patch: days += $NUMBER$ ; else { days += $NUMBER$ ;
rank: 586
score: 98.66046142578125
patch: days += $NUMBER$ ; *= $NUMBER$ ;
rank: 586
score: 98.64575958251953
patch: days += $NUMBER$ ; while ; ;
rank: 587
score: 98.83296034071181
patch: months -= 1 ; days += $NUMBER$ ;
rank: 587
score: 98.82235378689236
patch: months -= $NUMBER$ ; hours -= $NUMBER$ ;
rank: 587
score: 98.77164916992187
patch: days = - 1 ; if += $NUMBER$ ;
rank: 587
score: 98.76517062717014
patch: days += $NUMBER$ ; time = $NUMBER$ ;
rank: 587
score: 98.71675248579545
patch: days += $NUMBER$ + $NUMBER$ ; } return days ;
rank: 587
score: 98.65635681152344
patch: days += $NUMBER$ * << $NUMBER$ ;
rank: 588
score: 98.90010986328124
patch: days -= 1 ; } milliseconds -= $NUMBER$ ;
rank: 588
score: 98.87359619140625
patch: minutes -= $NUMBER$ ; minutes += 1 ;
rank: 588
score: 98.77129255022321
patch: days += ; return $NUMBER$ ;
rank: 588
score: 98.76290283203124
patch: days += $NUMBER$ * $NUMBER$ + $NUMBER$ ; ;
rank: 588
score: 98.71669514973958
patch: days += $NUMBER$ ; } days = $NUMBER$ * $NUMBER$ ;
rank: 588
score: 98.65543365478516
patch: days += $NUMBER$ * >= $NUMBER$ ;
rank: 588
score: 98.64534214564732
patch: days < $NUMBER$ + 1 ;
rank: 589
score: 98.87352159288194
patch: minutes -= 1 ; seconds -= $NUMBER$ ;
rank: 589
score: 98.83269391741071
patch: milliseconds = $NUMBER$ + $NUMBER$ ;
rank: 589
score: 98.77122802734375
patch: days = $NUMBER$ ; days += 0 ; }
rank: 589
score: 98.71649932861328
patch: days [ $NUMBER$ ] += 1 ;
rank: 589
score: 98.65422712053571
patch: days -= $NUMBER$ + 1 ;
rank: 589
score: 98.64388275146484
patch: if += $NUMBER$ ; += $NUMBER$ ;
rank: 590
score: 98.8961181640625
patch: days += Calendar . DAY _ OF _ MONTH ; }
rank: 590
score: 98.87220594618056
patch: seconds += 1 ; minutes += $NUMBER$ ;
rank: 590
score: 98.82162039620536
patch: start CaMeL Millis += $NUMBER$ ;
rank: 590
score: 98.77096557617188
patch: days * - $NUMBER$ ; days = $NUMBER$ ;
rank: 590
score: 98.76212565104167
patch: days += $NUMBER$ * / days ; }
rank: 590
score: 98.65180969238281
patch: start . append ( $STRING$ ) ;
rank: 590
score: 98.64354705810547
patch: days = ; days += $NUMBER$ ;
rank: 591
score: 98.99010009765625
patch: days -= 1 ; hours -= 1 ; }
rank: 591
score: 98.8720703125
patch: months += 1 ; years += $NUMBER$ ;
rank: 591
score: 98.77056884765625
patch: days = $NUMBER$ ; days else {
rank: 591
score: 98.76017930772569
patch: days += $NUMBER$ * / $NUMBER$ ; }
rank: 591
score: 98.7160311612216
patch: days += $NUMBER$ ? 1 + $NUMBER$ : $NUMBER$ ;
rank: 591
score: 98.65155792236328
patch: days += $NUMBER$ >= $NUMBER$ ; }
rank: 591
score: 98.64298248291016
patch: += $NUMBER$ ; days = $NUMBER$ ;
rank: 592
score: 98.98984103732639
patch: minutes -= 1 ; hours += 1 ;
rank: 592
score: 98.75998263888889
patch: days += $NUMBER$ * days ; ; }
rank: 592
score: 98.71577592329545
patch: days += $NUMBER$ - $NUMBER$ ; days += 1 ;
rank: 592
score: 98.65039825439453
patch: days ++ ; } days ++ ;
rank: 592
score: 98.64286041259766
patch: days += 0 ; if $NUMBER$ /
rank: 593
score: 98.8719482421875
patch: seconds += $NUMBER$ ; } milliseconds -= 1 ;
rank: 593
score: 98.80418395996094
patch: days = lexx ( ) ;
rank: 593
score: 98.76990509033203
patch: days ] = days ; break ;
rank: 593
score: 98.75934516059027
patch: long += $NUMBER$ ; time += $NUMBER$ ;
rank: 593
score: 98.71493530273438
patch: days [ $NUMBER$ ] = $NUMBER$ / days ;
rank: 593
score: 98.64801025390625
patch: days += $NUMBER$ / >= $NUMBER$ ;
rank: 594
score: 98.98836669921874
patch: hours += 1 ; days += 1 ; }
rank: 594
score: 98.76953735351563
patch: days = $NUMBER$ ; days end = $NUMBER$ ;
rank: 594
score: 98.75850132533482
patch: days += 1 ; } ;
rank: 594
score: 98.71491241455078
patch: days ; return $NUMBER$ + $NUMBER$ ;
rank: 594
score: 98.64617919921875
patch: start ; days += $NUMBER$ ;
rank: 594
score: 98.63994489397321
patch: $NUMBER$ ; days = $NUMBER$ ;
rank: 595
score: 98.7948710123698
patch: seconds += 1 ; }
rank: 595
score: 98.76921844482422
patch: days finally { days += $NUMBER$ ;
rank: 595
score: 98.71482340494792
patch: days ++ ; days += 0 ; days += $NUMBER$ ;
rank: 596
score: 98.79350934709821
patch: seconds = $NUMBER$ * $NUMBER$ ;
rank: 596
score: 98.76834716796876
patch: days ] = $NUMBER$ ; if += $NUMBER$ ;
rank: 596
score: 98.75730895996094
patch: days += $NUMBER$ * / $NUMBER$ ;
rank: 596
score: 98.63613455636161
patch: days += $NUMBER$ += $NUMBER$ ;
rank: 597
score: 98.8873291015625
patch: days = Calendar . get CaMeL Instance ( hours ) ;
rank: 597
score: 98.75701904296875
patch: days += $NUMBER$ * / ; }
rank: 597
score: 98.71464029947917
patch: days ; days += $NUMBER$ ; } days += $NUMBER$ ;
rank: 597
score: 98.64493408203126
patch: days *= $NUMBER$ ;
rank: 597
score: 98.634765625
patch: days += m + 1 ;
rank: 598
score: 98.8804931640625
patch: days += Token . get ( Calendar . MONTH ) ;
rank: 598
score: 98.78070068359375
patch: seconds -= $NUMBER$ ; }
rank: 598
score: 98.76763916015625
patch: days * / { days += - 1 ;
rank: 598
score: 98.7142333984375
patch: days += 0 ; days += $NUMBER$ ; return days ;
rank: 598
score: 98.63028390066964
patch: days += $NUMBER$ ; else ;
rank: 599
score: 98.87050374348958
patch: minutes -= $NUMBER$ ; seconds += 1 ;
rank: 599
score: 98.71373494466145
patch: days += $NUMBER$ + 1 ; } days += $NUMBER$ ;
rank: 599
score: 98.64141845703125
patch: days = $NUMBER$ * time ; }
rank: 599
score: 98.62931605747768
patch: days += $NUMBER$ ; days .
rank: 600
score: 98.76748657226562
patch: days += - 1 ; += - $NUMBER$ ;
rank: 600
score: 98.76333182198661
patch: seconds = $NUMBER$ * years ;
rank: 600
score: 98.75552029079861
patch: sb . ; days += $NUMBER$ ; }
rank: 600
score: 98.71366119384766
patch: days += 0 ; } if ;
rank: 600
score: 98.62929861886161
patch: days $NUMBER$ ; += $NUMBER$ ;
rank: 601
score: 98.98362901475694
patch: hours -= $NUMBER$ ; hours += 1 ;
rank: 601
score: 98.8731689453125
patch: days += 1 ; } }
rank: 601
score: 98.76732788085937
patch: days * - 1 ; days += $NUMBER$ ;
rank: 601
score: 98.76068987165179
patch: hours = $NUMBER$ + $NUMBER$ ;
rank: 601
score: 98.75526936848958
patch: if ( days += $NUMBER$ > time )
rank: 601
score: 98.71246337890625
patch: days [ days ] += $NUMBER$ ; days += $NUMBER$ ;
rank: 601
score: 98.63859558105469
patch: double days = $NUMBER$ / $NUMBER$ ;
rank: 601
score: 98.62847900390625
patch: days += $NUMBER$ ; } days
rank: 602
score: 98.87250310724431
patch: days += Calendar . DAY _ OF _ YEAR ;
rank: 602
score: 98.82889133029514
patch: months -= 1 ; years = $NUMBER$ ;
rank: 602
score: 98.76729736328124
patch: days += $NUMBER$ ; if += - 1 ;
rank: 602
score: 98.75604248046875
patch: months = end CaMeL Millis ;
rank: 602
score: 98.7124532063802
patch: days += 0 ; days += $NUMBER$ ; days ++ ;
rank: 602
score: 98.63787078857422
patch: int days = days + 1 ;
rank: 602
score: 98.62793840680804
patch: days = $NUMBER$ / 1 ;
rank: 603
score: 98.76718139648438
patch: days += ; days += $STRING$ ;
rank: 603
score: 98.75555419921875
patch: seconds += $NUMBER$ * years ;
rank: 603
score: 98.75429077148438
patch: days += $NUMBER$ ; MONTH += $NUMBER$ ; }
rank: 603
score: 98.7122090657552
patch: days += 0 ; } days += $NUMBER$ + $NUMBER$ ;
rank: 604
score: 98.87078302556819
patch: days += Calendar . HOUR _ OF _ DAY ;
rank: 604
score: 98.76622314453125
patch: days ] = $NUMBER$ ; days += $NUMBER$ ;
rank: 604
score: 98.7545166015625
patch: days = $NUMBER$ * years ;
rank: 604
score: 98.7540283203125
patch: days += $NUMBER$ * $NUMBER$ * $NUMBER$ /
rank: 604
score: 98.63614327566964
patch: days += $NUMBER$ ; -- ;
rank: 604
score: 98.62678745814732
patch: days += $NUMBER$ && $NUMBER$ ;
rank: 605
score: 98.87056274414063
patch: days -= $NUMBER$ ; } milliseconds -= $NUMBER$ ;
rank: 605
score: 98.86886935763889
patch: } while ( minutes < 0 ) {
rank: 605
score: 98.7498779296875
patch: seconds = $NUMBER$ -= $NUMBER$ ;
rank: 605
score: 98.71155894886364
patch: days days += 0 ; } days += $NUMBER$ ;
rank: 605
score: 98.63559395926339
patch: days ] = $NUMBER$ ; }
rank: 605
score: 98.62630789620536
patch: days = $NUMBER$ = $NUMBER$ ;
rank: 606
score: 98.86883544921875
patch: milliseconds += $NUMBER$ ; days += $NUMBER$ ;
rank: 606
score: 98.7654037475586
patch: days += 0 ; += true ;
rank: 606
score: 98.75388590494792
patch: time += $NUMBER$ * $NUMBER$ * $NUMBER$ ;
rank: 606
score: 98.63494001116071
patch: days -- ; days ++ ;
rank: 606
score: 98.62587193080357
patch: days += 1 ; $NUMBER$ ;
rank: 607
score: 98.980419921875
patch: days += 1 ; minutes -= 1 ; }
rank: 607
score: 98.86804877387152
patch: seconds += $NUMBER$ ; seconds += $NUMBER$ ;
rank: 607
score: 98.76530238560268
patch: days = start . days ;
rank: 607
score: 98.75375027126736
patch: days += $NUMBER$ * ( days ) ;
rank: 607
score: 98.74263218470982
patch: days = end CaMeL Millis ;
rank: 607
score: 98.71104431152344
patch: days ++ ; } += $NUMBER$ ;
rank: 607
score: 98.62547810872395
patch: days $NUMBER$ = $NUMBER$ ;
rank: 608
score: 98.74125453404018
patch: seconds = $NUMBER$ -= 1 ;
rank: 608
score: 98.63288225446429
patch: start . end ( ) ;
rank: 608
score: 98.62503051757812
patch: days = $NUMBER$ ; days
rank: 609
score: 98.86764865451389
patch: minutes += 1 ; hours += $NUMBER$ ;
rank: 609
score: 98.86668904622395
patch: days = Calendar . get CaMeL Instance ( days ) ;
rank: 609
score: 98.82694091796876
patch: seconds += $NUMBER$ ; } milliseconds -= $NUMBER$ ;
rank: 609
score: 98.76494140625
patch: days += $NUMBER$ ; days < - 1 ;
rank: 609
score: 98.73663330078125
patch: seconds = $NUMBER$ : $NUMBER$ ;
rank: 609
score: 98.71061567826705
patch: days += 0 ; days += $NUMBER$ + 0 ;
rank: 609
score: 98.63287353515625
patch: days += $NUMBER$ ; } * /
rank: 609
score: 98.624755859375
patch: days += 0 ; days else
rank: 610
score: 98.82662527901786
patch: months = $NUMBER$ + $NUMBER$ ;
rank: 610
score: 98.7649169921875
patch: days += - $NUMBER$ ; if += $STRING$ ;
rank: 610
score: 98.75238037109375
patch: days += $NUMBER$ ; time = $NUMBER$ ; }
rank: 610
score: 98.71045939127605
patch: days [ $NUMBER$ ] = $NUMBER$ ; days += 0 ;
rank: 610
score: 98.62424142020089
patch: days += $NUMBER$ ; days :
rank: 611
score: 98.86639404296875
patch: seconds += 1 ; seconds += $NUMBER$ ;
rank: 611
score: 98.82655164930556
patch: days -= 1 ; years = $NUMBER$ ;
rank: 611
score: 98.7646484375
patch: days += days ; } days += $NUMBER$ ;
rank: 611
score: 98.724365234375
patch: seconds = $NUMBER$ * days ;
rank: 611
score: 98.63056945800781
patch: days += $NUMBER$ * >> $NUMBER$ ;
rank: 611
score: 98.62169392903645
patch: days days = 1 ;
rank: 612
score: 98.97789510091145
patch: int end = Calendar . DAY _ OF _ MONTH ;
rank: 612
score: 98.86097301136364
patch: days += $NUMBER$ * Date CaMeL Utils . years ;
rank: 612
score: 98.82626003689236
patch: months -= $NUMBER$ ; days += $NUMBER$ ;
rank: 612
score: 98.76416015625
patch: days else { days = 0 ;
rank: 612
score: 98.75179036458333
patch: days += $NUMBER$ * time + MINUTE ;
rank: 612
score: 98.72356305803571
patch: start CaMeL Millis += 1 ;
rank: 612
score: 98.71022338867188
patch: days days += 1 ; days += $NUMBER$ ;
rank: 612
score: 98.62907409667969
patch: start . set ( end ) ;
rank: 613
score: 98.86564805772569
patch: milliseconds += 1 ; days += 1 ;
rank: 613
score: 98.85996500651042
patch: tmp = Calendar . get CaMeL Instance ( timezone ) ;
rank: 613
score: 98.76415405273437
patch: days = $NUMBER$ ; ; if += $NUMBER$ ;
rank: 613
score: 98.72344970703125
patch: seconds += $NUMBER$ ; } * /
rank: 613
score: 98.7099100748698
patch: days += 0 ; else { days += $NUMBER$ ; }
rank: 613
score: 98.62886047363281
patch: days * $NUMBER$ + $NUMBER$ ; }
rank: 613
score: 98.61876569475446
patch: days = 0 + $NUMBER$ ;
rank: 614
score: 98.97714572482639
patch: months += 1 ; hours += 1 ;
rank: 614
score: 98.86502414279514
patch: days -= 1 ; seconds += 1 ;
rank: 614
score: 98.85964965820312
patch: days -= Calendar . get CaMeL Instance ( timezone ) ;
rank: 614
score: 98.76365356445312
patch: days += - $NUMBER$ ; days += $STRING$ ;
rank: 614
score: 98.75156860351562
patch: days += $NUMBER$ * ( $NUMBER$ * days ;
rank: 614
score: 98.71954345703125
patch: milliseconds -= $NUMBER$ ; }
rank: 614
score: 98.70930989583333
patch: days [ $NUMBER$ ] += $NUMBER$ ; days += 1 ;
rank: 614
score: 98.62882995605469
patch: days += $NUMBER$ / 1 ; }
rank: 615
score: 98.97576904296875
patch: days += 1 ; } days -= 1 ;
rank: 615
score: 98.8592020670573
patch: long end = Calendar . DAY _ OF _ MONTH ;
rank: 615
score: 98.7635498046875
patch: days : days ; days -- ;
rank: 615
score: 98.751416015625
patch: days += $NUMBER$ * time * time ; }
rank: 615
score: 98.7195332845052
patch: seconds -= 1 ; }
rank: 615
score: 98.70919189453124
patch: days += 0 ; } days = days ;
rank: 615
score: 98.62681579589844
patch: int days = days + $NUMBER$ ;
rank: 615
score: 98.61263020833333
patch: days += $NUMBER$ ; /
rank: 616
score: 98.86448364257812
patch: if ( ! pad CaMeL With CaMeL Zeros )
rank: 616
score: 98.85358220880681
patch: days += $NUMBER$ * Date CaMeL Utils . hours ;
rank: 616
score: 98.76305389404297
patch: days -- ; += - 1 ;
rank: 616
score: 98.75123426649306
patch: days += $NUMBER$ * long $NUMBER$ ; ;
rank: 616
score: 98.70901489257812
patch: days += 0 ; days += 0 ; ;
rank: 616
score: 98.62382507324219
patch: time += $NUMBER$ + $NUMBER$ ; }
rank: 616
score: 98.61097935267857
patch: days += 0 ; $NUMBER$ ;
rank: 617
score: 98.76290893554688
patch: days = $NUMBER$ ; if += - $NUMBER$ ;
rank: 617
score: 98.751220703125
patch: days += $NUMBER$ * days % $NUMBER$ ;
rank: 617
score: 98.71194893973214
patch: seconds += $NUMBER$ * days ;
rank: 617
score: 98.7083740234375
patch: days ; if ; else days += $NUMBER$ ;
rank: 617
score: 98.62330627441406
patch: int days = days * $NUMBER$ ;
rank: 617
score: 98.61026436941964
patch: days <= $NUMBER$ + $NUMBER$ ;
rank: 618
score: 98.86402723524306
patch: minutes += $NUMBER$ ; months -= 1 ;
rank: 618
score: 98.76288713727679
patch: days += ; days -- ;
rank: 618
score: 98.75068359375
patch: days += $NUMBER$ ; millis += $NUMBER$ ; }
rank: 618
score: 98.71046665736607
patch: seconds = $NUMBER$ + 1 ;
rank: 618
score: 98.7074307528409
patch: days ++ ; } days = $NUMBER$ / $NUMBER$ ;
rank: 618
score: 98.62217712402344
patch: long days = days % $NUMBER$ ;
rank: 618
score: 98.60877482096355
patch: days ; += $NUMBER$ ;
rank: 619
score: 98.86312527126736
patch: hours += $NUMBER$ ; months -= 1 ;
rank: 619
score: 98.85026332310268
patch: days += 1 * years ;
rank: 619
score: 98.70749918619792
patch: months += 1 ; }
rank: 619
score: 98.62201690673828
patch: days |= $NUMBER$ * $NUMBER$ ; }
rank: 619
score: 98.60520717075893
patch: days += $NUMBER$ . $NUMBER$ ;
rank: 620
score: 98.84946511008523
patch: return start . get ( Calendar . MONTH ) ;
rank: 620
score: 98.74932861328125
patch: days += $NUMBER$ * millis + 1 ;
rank: 620
score: 98.70564778645833
patch: months -= $NUMBER$ ; }
rank: 620
score: 98.62141418457031
patch: end . append ( $NUMBER$ ) ;
rank: 620
score: 98.60498046875
patch: days days += - $NUMBER$ ;
rank: 621
score: 98.86197916666667
patch: days += 1 ; seconds -= $NUMBER$ ;
rank: 621
score: 98.82411024305556
patch: milliseconds -= 1 ; days -= $NUMBER$ ;
rank: 621
score: 98.76222229003906
patch: days += $NUMBER$ + days $NUMBER$ ;
rank: 621
score: 98.70665893554687
patch: days [ days ] = $NUMBER$ + $NUMBER$ ;
rank: 621
score: 98.70537458147321
patch: end CaMeL Millis += $NUMBER$ ;
rank: 621
score: 98.60273088727679
patch: days += $NUMBER$ ; / ;
rank: 622
score: 98.97277221679687
patch: days += 1 ; hours += 1 ; }
rank: 622
score: 98.76209259033203
patch: days += days ; += 0 ;
rank: 622
score: 98.74814181857639
patch: days += $NUMBER$ * double $NUMBER$ ; }
rank: 622
score: 98.70637817382813
patch: days * * ; days += $NUMBER$ ; }
rank: 622
score: 98.7044169108073
patch: minutes -= $NUMBER$ ; }
rank: 622
score: 98.60184151785714
patch: days = 1 + $NUMBER$ ;
rank: 623
score: 98.97249145507813
patch: days -= $NUMBER$ ; days -= 1 ; }
rank: 623
score: 98.83982155539773
patch: days += reduce CaMeL And CaMeL Correct ( ) ;
rank: 623
score: 98.76197509765625
patch: days += $NUMBER$ ; days ] = $NUMBER$ ;
rank: 623
score: 98.74777560763889
patch: days += $NUMBER$ * time 1 ; }
rank: 623
score: 98.70602416992188
patch: days += 0 ; break ; } days += $NUMBER$ ;
rank: 623
score: 98.62051391601562
patch: start = $NUMBER$ * $NUMBER$ ; }
rank: 623
score: 98.6016845703125
patch: days = $STRING$ + $NUMBER$ ;
rank: 624
score: 98.9720458984375
patch: days += $NUMBER$ ; } milliseconds += 1 ;
rank: 624
score: 98.83640358664773
patch: days += 1 * Date CaMeL Utils . years ;
rank: 624
score: 98.76153564453125
patch: days -- ; days catch $NUMBER$ ;
rank: 624
score: 98.70567016601562
patch: days ; days ++ days += $NUMBER$ ; }
rank: 624
score: 98.70416259765625
patch: start . format ( millis ) ;
rank: 624
score: 98.62045724051339
patch: time = days * $NUMBER$ ;
rank: 624
score: 98.59940011160714
patch: days * $NUMBER$ + $NUMBER$ ;
rank: 625
score: 98.83544049944196
patch: days -= 1 ; } }
rank: 625
score: 98.76124572753906
patch: days ++ ; days = days ;
rank: 625
score: 98.74604797363281
patch: days = days += $NUMBER$ ; }
rank: 625
score: 98.70562189275569
patch: days += $NUMBER$ / $NUMBER$ ; days += $NUMBER$ ;
rank: 625
score: 98.59922572544643
patch: days += time + $NUMBER$ ;
rank: 626
score: 98.97108764648438
patch: days += 1 ; years -= 1 ; }
rank: 626
score: 98.86032443576389
patch: hours -= $NUMBER$ ; minutes += $NUMBER$ ;
rank: 626
score: 98.83504813058036
patch: days -= $NUMBER$ * years ;
rank: 626
score: 98.76117553710938
patch: days += 0 ; days = - 1 ;
rank: 626
score: 98.69769287109375
patch: hours -= $NUMBER$ ; }
rank: 626
score: 98.61849975585938
patch: days += $NUMBER$ += $NUMBER$ ; }
rank: 626
score: 98.59920828683036
patch: days days += 0 ; ;
rank: 627
score: 98.86012776692708
patch: minutes -= $NUMBER$ ; minutes -= $NUMBER$ ;
rank: 627
score: 98.83247514204545
patch: days += end . get CaMeL Time ( ) ;
rank: 627
score: 98.76107025146484
patch: days += - 1 ; $NUMBER$ ;
rank: 627
score: 98.70532989501953
patch: days ++ ; += $NUMBER$ ; }
rank: 627
score: 98.69765799386161
patch: start CaMeL Millis -= $NUMBER$ ;
rank: 627
score: 98.61640930175781
patch: double $NUMBER$ = days - $NUMBER$ ;
rank: 627
score: 98.59482247488839
patch: days = $NUMBER$ ; $NUMBER$ ;
rank: 628
score: 98.83043323863636
patch: days -= Calendar . HOUR _ OF _ DAY ;
rank: 628
score: 98.76095581054688
patch: days * * / return days ;
rank: 628
score: 98.74398464626736
patch: long += $NUMBER$ ; days += $NUMBER$ ;
rank: 628
score: 98.7045010653409
patch: days += $NUMBER$ ; days days = $NUMBER$ ; }
rank: 628
score: 98.69685363769531
patch: days = ( Calendar ) $NUMBER$ ;
rank: 628
score: 98.61558314732143
patch: date = $NUMBER$ * $NUMBER$ ;
rank: 628
score: 98.59223284040179
patch: days += m * $NUMBER$ ;
rank: 629
score: 98.760693359375
patch: days += / 1 ; days += $NUMBER$ ;
rank: 629
score: 98.7437744140625
patch: days += $NUMBER$ ; break ; } ;
rank: 629
score: 98.70440118963069
patch: days += start . get ( days - $NUMBER$ ;
rank: 629
score: 98.69432576497395
patch: milliseconds += 1 ; }
rank: 629
score: 98.61510467529297
patch: days -= $NUMBER$ + 1 ; }
rank: 629
score: 98.58885846819196
patch: days if $NUMBER$ = $NUMBER$ ;
rank: 630
score: 98.76051025390625
patch: days += $NUMBER$ ; if += 1 ; ;
rank: 630
score: 98.74365234375
patch: time += $NUMBER$ * time ;
rank: 630
score: 98.6942138671875
patch: hours = $NUMBER$ * $NUMBER$ ;
rank: 630
score: 98.61502511160714
patch: time = days + 1 ;
rank: 630
score: 98.58834402901786
patch: days $NUMBER$ days += $NUMBER$ ;
rank: 631
score: 98.96736450195313
patch: days -= 1 ; days += 1 ; }
rank: 631
score: 98.85821533203125
patch: minutes -= 1 ; seconds += $NUMBER$ ;
rank: 631
score: 98.81976996527777
patch: months -= 1 ; seconds -= $NUMBER$ ;
rank: 631
score: 98.76017456054687
patch: days += - $NUMBER$ ; += - $NUMBER$ ;
rank: 631
score: 98.70339965820312
patch: days = days * $NUMBER$ ; }
rank: 631
score: 98.69389125279018
patch: milliseconds = end CaMeL Millis ;
rank: 631
score: 98.61497279575893
patch: days -= $NUMBER$ - $NUMBER$ ;
rank: 632
score: 98.70338023792614
patch: days = $NUMBER$ * $NUMBER$ ; days += 0 ;
rank: 632
score: 98.69349888392857
patch: hours = $NUMBER$ : $NUMBER$ ;
rank: 632
score: 98.61336517333984
patch: float $NUMBER$ = days + $NUMBER$ ;
rank: 632
score: 98.58796037946429
patch: days += $NUMBER$ ? $NUMBER$ ;
rank: 633
score: 98.85793050130208
patch: hours += 1 ; years = $NUMBER$ ;
rank: 633
score: 98.75990295410156
patch: days * ; { days -- ;
rank: 633
score: 98.70237513950893
patch: days = $NUMBER$ / days ;
rank: 633
score: 98.69286237444196
patch: milliseconds += $NUMBER$ * $NUMBER$ ;
rank: 633
score: 98.58326067243304
patch: days days days += $NUMBER$ ;
rank: 634
score: 98.85788981119792
patch: seconds += $NUMBER$ ; months -= 1 ;
rank: 634
score: 98.81880018446181
patch: months = $NUMBER$ ; years -= $NUMBER$ ;
rank: 634
score: 98.759765625
patch: days = $NUMBER$ ; days += 1 ; ;
rank: 634
score: 98.70212624289773
patch: days += $NUMBER$ + $NUMBER$ ; } days ++ ;
rank: 634
score: 98.69228690011161
patch: hours = $NUMBER$ * years ;
rank: 634
score: 98.61165945870536
patch: days |= $NUMBER$ / $NUMBER$ ;
rank: 635
score: 98.96181640625
patch: days -= 1 ; } milliseconds += 1 ;
rank: 635
score: 98.75973510742188
patch: days ++ ; if += $STRING$ ;
rank: 635
score: 98.74222819010417
patch: days += $NUMBER$ * Time CaMeL Zone .
rank: 635
score: 98.70195007324219
patch: days += $NUMBER$ ; if ; }
rank: 635
score: 98.68913051060268
patch: start CaMeL Millis -= 1 ;
rank: 636
score: 98.959912109375
patch: minutes += 1 ; hours -= 1 ; }
rank: 636
score: 98.85727267795139
patch: days += $NUMBER$ ; seconds += $NUMBER$ ;
rank: 636
score: 98.70140491832386
patch: days += 0 ; } days = $NUMBER$ ; }
rank: 636
score: 98.61067199707031
patch: time = days + $NUMBER$ ; }
rank: 636
score: 98.57928466796875
patch: days $NUMBER$ += 1 ;
rank: 637
score: 98.758447265625
patch: days += $STRING$ ; days catch += $NUMBER$ ;
rank: 637
score: 98.74092864990234
patch: long days = days += $NUMBER$ ;
rank: 637
score: 98.70108032226562
patch: days [ days ] = 0 ;
rank: 637
score: 98.60971069335938
patch: time = $NUMBER$ * $NUMBER$ ; }
rank: 638
score: 98.95858764648438
patch: hours += $NUMBER$ ; days += 1 ; }
rank: 638
score: 98.7582763671875
patch: days += $NUMBER$ ; days += * 1 ;
rank: 638
score: 98.74076334635417
patch: days += $NUMBER$ * Long . $NUMBER$ ;
rank: 638
score: 98.70044708251953
patch: days ++ ; } if $NUMBER$ ;
rank: 638
score: 98.68239048549107
patch: days -= start CaMeL Millis ;
rank: 638
score: 98.6083755493164
patch: double days += $NUMBER$ + $NUMBER$ ;
rank: 638
score: 98.57466634114583
patch: days = += $NUMBER$ ;
rank: 639
score: 98.85588921440973
patch: milliseconds += 1 ; days += $NUMBER$ ;
rank: 639
score: 98.81771511501736
patch: days -= $NUMBER$ ; years = $NUMBER$ ;
rank: 639
score: 98.75818481445313
patch: days += $NUMBER$ ; else { break ; }
rank: 639
score: 98.740625
patch: days += $NUMBER$ ; time += $NUMBER$ * ;
rank: 639
score: 98.70040130615234
patch: days ++ ; m += $NUMBER$ ;
rank: 639
score: 98.607421875
patch: days += $NUMBER$ >= $NUMBER$ ;
rank: 639
score: 98.5732421875
patch: days days = $NUMBER$ ; ;
rank: 640
score: 98.7575439453125
patch: days += $NUMBER$ ; days -- ; * /
rank: 640
score: 98.73969862196181
patch: days += $NUMBER$ ; MONTH += $NUMBER$ ;
rank: 640
score: 98.70024108886719
patch: days = $NUMBER$ * days $NUMBER$ ;
rank: 640
score: 98.67810668945313
patch: hours = 1 ;
rank: 640
score: 98.57320731026786
patch: days += 1 ; days $NUMBER$
rank: 641
score: 98.9573486328125
patch: hours += 1 ; } milliseconds += 1 ;
rank: 641
score: 98.81606716579861
patch: months -= $NUMBER$ ; minutes -= $NUMBER$ ;
rank: 641
score: 98.75741577148438
patch: days ++ ; days = 1 ;
rank: 641
score: 98.73964436848958
patch: days += 1 * $NUMBER$ + $NUMBER$ ;
rank: 641
score: 98.69988458806819
patch: days * * * / days += $NUMBER$ ; }
rank: 641
score: 98.67591552734375
patch: seconds = 1 ;
rank: 641
score: 98.60665893554688
patch: double time = days * $NUMBER$ ;
rank: 641
score: 98.57171630859375
patch: days = $NUMBER$ ; days else
rank: 642
score: 98.85427517361111
patch: minutes -= $NUMBER$ ; minutes += $NUMBER$ ;
rank: 642
score: 98.81597900390625
patch: seconds += 1 ; years = $NUMBER$ ;
rank: 642
score: 98.75692138671874
patch: days * ; { days += - 1 ;
rank: 642
score: 98.73963080512152
patch: if ( days += $NUMBER$ > $NUMBER$ )
rank: 642
score: 98.69970703125
patch: days += ( days * $NUMBER$ ) ; }
rank: 642
score: 98.67584228515625
patch: months += $NUMBER$ * $NUMBER$ ;
rank: 642
score: 98.60460662841797
patch: double days = days - 1 ;
rank: 642
score: 98.57157389322917
patch: days = - $NUMBER$ ;
rank: 643
score: 98.9552734375
patch: minutes += $NUMBER$ ; days -= 1 ; }
rank: 643
score: 98.85426839192708
patch: hours = $NUMBER$ ; minutes += $NUMBER$ ;
rank: 643
score: 98.75689697265625
patch: days += - days + $NUMBER$ ;
rank: 643
score: 98.73961181640625
patch: days += $NUMBER$ * / days + $NUMBER$ ;
rank: 643
score: 98.69969593394886
patch: days += $NUMBER$ ; days += $NUMBER$ ; break ;
rank: 643
score: 98.6744384765625
patch: int millis += $NUMBER$ ;
rank: 643
score: 98.570556640625
patch: days += $NUMBER$ + ;
rank: 644
score: 98.95515272352431
patch: days += 1 ; hours += $NUMBER$ ;
rank: 644
score: 98.8541259765625
patch: minutes += $NUMBER$ ; } milliseconds -= 1 ;
rank: 644
score: 98.80352783203125
patch: return format CaMeL Duration ( start , end ,
rank: 644
score: 98.756103515625
patch: days += $NUMBER$ ; days = ( ) ;
rank: 644
score: 98.73911743164062
patch: days += $NUMBER$ * $NUMBER$ * $NUMBER$ * ;
rank: 644
score: 98.6996737393466
patch: days += $NUMBER$ ; days += $NUMBER$ : $NUMBER$ ;
rank: 644
score: 98.67266845703125
patch: seconds = days -= 1 ;
rank: 644
score: 98.56612723214286
patch: days += $NUMBER$ + null ;
rank: 645
score: 98.80220947265624
patch: end . get ( Calendar . MINUTE ) ;
rank: 645
score: 98.7558837890625
patch: days += $NUMBER$ ; days / - 1 ;
rank: 645
score: 98.73779296875
patch: days += days / $NUMBER$ ; }
rank: 645
score: 98.6994295987216
patch: days [ $NUMBER$ ] = $NUMBER$ ; days ++ ;
rank: 645
score: 98.60188293457031
patch: long days = $NUMBER$ + $NUMBER$ ;
rank: 645
score: 98.564697265625
patch: days += m - $NUMBER$ ;
rank: 646
score: 98.79329833984374
patch: days += 1 ; } milliseconds += $NUMBER$ ;
rank: 646
score: 98.75560760498047
patch: days * / days += false ;
rank: 646
score: 98.73776584201389
patch: days += 1 ; time ++ ; }
rank: 646
score: 98.69931030273438
patch: days += 0 ; days days += 1 ;
rank: 646
score: 98.67099434988839
patch: minutes = end CaMeL Millis ;
rank: 646
score: 98.60082244873047
patch: float $NUMBER$ = days * $NUMBER$ ;
rank: 646
score: 98.56168038504464
patch: days += $NUMBER$ + ; days
rank: 647
score: 98.95447998046875
patch: hours += 1 ; hours += 1 ; }
rank: 647
score: 98.7950948079427
patch: return format CaMeL Duration ;
rank: 647
score: 98.75347900390625
patch: days += ; += 1 ;
rank: 647
score: 98.7376220703125
patch: days += $NUMBER$ * days ; break ; }
rank: 647
score: 98.69902801513672
patch: days ++ ; } if days ;
rank: 647
score: 98.6669692993164
patch: days = lexx ( $NUMBER$ ;
rank: 647
score: 98.60031127929688
patch: long end = days * $NUMBER$ ;
rank: 647
score: 98.56133161272321
patch: days += Integer + $NUMBER$ ;
rank: 648
score: 98.85104709201389
patch: seconds += 1 ; hours += $NUMBER$ ;
rank: 648
score: 98.79121704101563
patch: days += $NUMBER$ ; } milliseconds += $NUMBER$ ;
rank: 648
score: 98.79063720703125
patch: if ( ! reduce CaMeL And CaMeL Correct )
rank: 648
score: 98.73753051757812
patch: long days = $NUMBER$ * $NUMBER$ * $NUMBER$ ;
rank: 648
score: 98.69875266335227
patch: days += $NUMBER$ ; days = $NUMBER$ * days ;
rank: 648
score: 98.66641671316964
patch: hours = $NUMBER$ -= $NUMBER$ ;
rank: 649
score: 98.95285034179688
patch: minutes -= 1 ; }
rank: 649
score: 98.85057237413194
patch: hours = $NUMBER$ ; years -= $NUMBER$ ;
rank: 649
score: 98.79034423828125
patch: seconds += 1 ; } milliseconds -= $NUMBER$ ;
rank: 649
score: 98.75190734863281
patch: days = $NUMBER$ ; += $STRING$ ;
rank: 649
score: 98.73729248046875
patch: days += 1 * time + $NUMBER$ ; }
rank: 649
score: 98.69861949573864
patch: days += 0 ; days += $NUMBER$ ; break ;
rank: 649
score: 98.6643575032552
patch: milliseconds -= 1 ; }
rank: 649
score: 98.56059919084821
patch: days += 0 + 0 ;
rank: 650
score: 98.85020616319444
patch: days += 1 ; minutes += $NUMBER$ ;
rank: 650
score: 98.78689575195312
patch: return format CaMeL Duration ( $NUMBER$ ;
rank: 650
score: 98.75186767578126
patch: days += $NUMBER$ ; days < - $NUMBER$ ;
rank: 650
score: 98.73722330729167
patch: days += $NUMBER$ * time + SECOND ;
rank: 650
score: 98.69850852272727
patch: days += $NUMBER$ + $NUMBER$ ? $NUMBER$ : $NUMBER$ ;
rank: 650
score: 98.56027221679688
patch: days $NUMBER$ ;
rank: 651
score: 98.78786214192708
patch: days += Date CaMeL Utils . years ;
rank: 651
score: 98.78610229492188
patch: seconds += 1 ; } milliseconds -= 1 ;
rank: 651
score: 98.75181274414062
patch: days += $NUMBER$ ; days += * $NUMBER$ ;
rank: 651
score: 98.69796752929688
patch: days += $NUMBER$ ; days += $NUMBER$ ; return days ;
rank: 651
score: 98.66143798828125
patch: hours = $NUMBER$ -= 1 ;
rank: 651
score: 98.59613800048828
patch: int days = $NUMBER$ * $NUMBER$ ;
rank: 651
score: 98.55960518973214
patch: days ; days = 1 ;
rank: 652
score: 98.95191650390625
patch: hours -= 1 ; hours -= 1 ; }
rank: 652
score: 98.84931098090277
patch: milliseconds += 1 ; days -= $NUMBER$ ;
rank: 652
score: 98.7516860961914
patch: days * * / += $NUMBER$ ;
rank: 652
score: 98.73684692382812
patch: days -= $NUMBER$ ; break ; }
rank: 652
score: 98.6978759765625
patch: days += 0 ; } days = $NUMBER$ / $NUMBER$ ;
rank: 652
score: 98.65866088867188
patch: milliseconds = 0 ;
rank: 652
score: 98.557861328125
patch: days += $NUMBER$ ; try {
rank: 653
score: 98.9518310546875
patch: months += 1 ; days -= 1 ; }
rank: 653
score: 98.84930419921875
patch: minutes -= $NUMBER$ ; seconds -= $NUMBER$ ;
rank: 653
score: 98.78436279296875
patch: days -= $NUMBER$ ; } }
rank: 653
score: 98.77761840820312
patch: hours += $NUMBER$ ; } milliseconds -= $NUMBER$ ;
rank: 653
score: 98.75140380859375
patch: days = $NUMBER$ + days ;
rank: 653
score: 98.73613145616319
patch: days += $NUMBER$ * days - 1 ;
rank: 653
score: 98.69783935546874
patch: days ; days += $NUMBER$ + 1 ; }
rank: 653
score: 98.55160958426339
patch: days += 0 ; ; ;
rank: 654
score: 98.9506123860677
patch: days += reduce CaMeL And CaMeL Correct ( start ) ;
rank: 654
score: 98.84916178385417
patch: hours = $NUMBER$ ; seconds += 1 ;
rank: 654
score: 98.783203125
patch: days = days -= 1 ;
rank: 654
score: 98.69743208451705
patch: days += 1 + $NUMBER$ ; days += $NUMBER$ ;
rank: 654
score: 98.65555245535714
patch: minutes = $NUMBER$ + $NUMBER$ ;
rank: 654
score: 98.594482421875
patch: days *= $NUMBER$ ; }
rank: 654
score: 98.55149332682292
patch: if $NUMBER$ = $NUMBER$ ;
rank: 655
score: 98.84879557291667
patch: days += $NUMBER$ ; months -= 1 ;
rank: 655
score: 98.69717407226562
patch: days += 1 ; days = $NUMBER$ ; }
rank: 655
score: 98.65457589285714
patch: else { days += $NUMBER$ ;
rank: 655
score: 98.59321594238281
patch: start . ; days += 1 ;
rank: 655
score: 98.55089460100446
patch: days += $NUMBER$ ; if $NUMBER$
rank: 656
score: 98.84867350260417
patch: days -= $NUMBER$ ; minutes += 1 ;
rank: 656
score: 98.78205702039931
patch: days -= 1 ; months -= 1 ;
rank: 656
score: 98.75143432617188
patch: return format . format ( $NUMBER$ ;
rank: 656
score: 98.75018920898438
patch: days ] = $NUMBER$ ; days = $NUMBER$ ;
rank: 656
score: 98.73499213324652
patch: days += $NUMBER$ / time + $NUMBER$ ;
rank: 656
score: 98.69710693359374
patch: days += $NUMBER$ ; if days += 1 ;
rank: 656
score: 98.65448869977679
patch: months = days -= 1 ;
rank: 656
score: 98.59273529052734
patch: long days = days >> $NUMBER$ ;
rank: 656
score: 98.55045572916667
patch: days += $STRING$ ; ;
rank: 657
score: 98.94962768554687
patch: minutes += 1 ; } milliseconds -= 1 ;
rank: 657
score: 98.84845648871527
patch: minutes -= 1 ; hours -= $NUMBER$ ;
rank: 657
score: 98.74851684570312
patch: days += $NUMBER$ ; days -- ; += ;
rank: 657
score: 98.73479546440973
patch: days += $NUMBER$ * time / time ;
rank: 657
score: 98.65421142578126
patch: months = 0 ;
rank: 657
score: 98.59225463867188
patch: Date days = days + $NUMBER$ ;
rank: 657
score: 98.54867989676339
patch: days $NUMBER$ days = $NUMBER$ ;
rank: 658
score: 98.74678039550781
patch: days -- ; if += $STRING$ ;
rank: 658
score: 98.73453521728516
patch: days += $NUMBER$ + MINUTE ; }
rank: 658
score: 98.6967440518466
patch: days ++ ; } days += $NUMBER$ + 1 ;
rank: 658
score: 98.653564453125
patch: months -= 1 ; }
rank: 658
score: 98.54827880859375
patch: days += += $NUMBER$ ;
rank: 659
score: 98.84792751736111
patch: seconds -= 1 ; hours += 1 ;
rank: 659
score: 98.78021850585938
patch: days -= 1 ; } milliseconds += $NUMBER$ ;
rank: 659
score: 98.74674682617187
patch: days += $NUMBER$ ; days -- ; $NUMBER$ }
rank: 659
score: 98.733642578125
patch: days += $NUMBER$ * days ^ $NUMBER$ ;
rank: 659
score: 98.69671630859375
patch: days += - 1 ; }
rank: 659
score: 98.65265764508929
patch: days = $NUMBER$ -= $NUMBER$ ;
rank: 659
score: 98.59184919084821
patch: days = $NUMBER$ << $NUMBER$ ;
rank: 659
score: 98.54812186104911
patch: days += Math = $NUMBER$ ;
rank: 660
score: 98.94880506727431
patch: days += 1 ; milliseconds -= 1 ;
rank: 660
score: 98.84710015190973
patch: seconds -= 1 ; minutes += $NUMBER$ ;
rank: 660
score: 98.7463150024414
patch: days += 0 ; days += ;
rank: 660
score: 98.73323567708333
patch: days += $NUMBER$ * $NUMBER$ * SECOND ;
rank: 660
score: 98.69642223011364
patch: days += $NUMBER$ ? $NUMBER$ ? $NUMBER$ : 0 ;
rank: 660
score: 98.65218680245536
patch: minutes += $NUMBER$ * $NUMBER$ ;
rank: 660
score: 98.59160614013672
patch: days = $NUMBER$ * >= $NUMBER$ ;
rank: 660
score: 98.54722086588542
patch: days = += 1 ;
rank: 661
score: 98.94732666015625
patch: hours -= $NUMBER$ ; days -= 1 ; }
rank: 661
score: 98.77779541015624
patch: days -= $NUMBER$ ; } milliseconds += 1 ;
rank: 661
score: 98.74622344970703
patch: days -- ; days = days ;
rank: 661
score: 98.73228759765625
patch: if ( $NUMBER$ * Time CaMeL Zone . ;
rank: 661
score: 98.72117396763393
patch: months = $NUMBER$ * $NUMBER$ ;
rank: 661
score: 98.69639892578125
patch: days days += 0 ; days += 0 ;
rank: 661
score: 98.5914306640625
patch: days += $NUMBER$ ; -- ; }
rank: 661
score: 98.54719761439732
patch: days += 1 ; while ;
rank: 662
score: 98.77741156684027
patch: days += 1 ; months -= 1 ;
rank: 662
score: 98.74595642089844
patch: days ] += days - $NUMBER$ ;
rank: 662
score: 98.731494140625
patch: days += $NUMBER$ * time + time ; }
rank: 662
score: 98.71329171316964
patch: seconds += $NUMBER$ + $NUMBER$ ;
rank: 662
score: 98.69601876395089
patch: days ++ ; += $NUMBER$ ;
rank: 662
score: 98.64942278180804
patch: hours = $NUMBER$ + 1 ;
rank: 662
score: 98.59131622314453
patch: double days += $NUMBER$ / $NUMBER$ ;
rank: 662
score: 98.54678780691964
patch: days += $NUMBER$ + Math ;
rank: 663
score: 98.84595404730902
patch: months += 1 ; days += $NUMBER$ ;
rank: 663
score: 98.74595336914062
patch: days += - $NUMBER$ ; if += 0 ;
rank: 663
score: 98.73119354248047
patch: long $NUMBER$ = days += $NUMBER$ ;
rank: 663
score: 98.71312713623047
patch: end . format ( $NUMBER$ ) ;
rank: 663
score: 98.59069061279297
patch: long time = days - $NUMBER$ ;
rank: 663
score: 98.5458984375
patch: days days += - 1 ;
rank: 664
score: 98.74591674804688
patch: days += days ; days += 1 ; }
rank: 664
score: 98.73110525948661
patch: days += $NUMBER$ >> $NUMBER$ ;
rank: 664
score: 98.70907156808036
patch: hours += $NUMBER$ * $NUMBER$ ;
rank: 664
score: 98.69573974609375
patch: days += $NUMBER$ ; } days ; days += $NUMBER$ ;
rank: 664
score: 98.64897809709821
patch: milliseconds += $NUMBER$ * years ;
rank: 664
score: 98.58976745605469
patch: days += $NUMBER$ * ^ $NUMBER$ ;
rank: 664
score: 98.54546247209821
patch: days += $NUMBER$ + SIZE ;
rank: 665
score: 98.74575805664062
patch: days ] += $NUMBER$ ; if += 1 ;
rank: 665
score: 98.72918090820312
patch: days += $NUMBER$ * days * $NUMBER$ ; }
rank: 665
score: 98.6956787109375
patch: days += 0 ; days += $NUMBER$ ; } days ;
rank: 665
score: 98.64773995535714
patch: months += $NUMBER$ * years ;
rank: 665
score: 98.54445103236607
patch: days += $NUMBER$ + false ;
rank: 666
score: 98.84532335069444
patch: hours -= 1 ; hours += $NUMBER$ ;
rank: 666
score: 98.745556640625
patch: days += 0 ; if += 1 ; ;
rank: 666
score: 98.69559326171876
patch: days += $NUMBER$ + $NUMBER$ ; return days ;
rank: 666
score: 98.6925048828125
patch: months = $NUMBER$ + 1 ;
rank: 666
score: 98.54385811941964
patch: days $NUMBER$ $NUMBER$ = $NUMBER$ ;
rank: 667
score: 98.94403076171875
patch: days += $NUMBER$ ; minutes -= 1 ; }
rank: 667
score: 98.84524197048611
patch: days += $NUMBER$ ; hours += $NUMBER$ ;
rank: 667
score: 98.74496459960938
patch: days += - 1 ; days += false ;
rank: 667
score: 98.72666015625
patch: days = days += $NUMBER$ + $NUMBER$ ; }
rank: 667
score: 98.64474923270089
patch: minutes = $NUMBER$ * $NUMBER$ ;
rank: 667
score: 98.58909606933594
patch: days += $NUMBER$ + *= $NUMBER$ ;
rank: 667
score: 98.543701171875
patch: days } days += $NUMBER$ ;
rank: 668
score: 98.94390869140625
patch: minutes -= 1 ; days -= 1 ; }
rank: 668
score: 98.84515380859375
patch: hours = $NUMBER$ ; hours += 1 ;
rank: 668
score: 98.76800537109375
patch: days += $NUMBER$ ; years -= 1 ; }
rank: 668
score: 98.74434988839286
patch: days += * - $NUMBER$ ;
rank: 668
score: 98.72628784179688
patch: cal += $NUMBER$ ; time += $NUMBER$ ; }
rank: 668
score: 98.69518025716145
patch: days = $NUMBER$ * $NUMBER$ ; } days += $NUMBER$ ;
rank: 668
score: 98.64078194754464
patch: days = $NUMBER$ -= 1 ;
rank: 668
score: 98.58842468261719
patch: days |= $NUMBER$ / $NUMBER$ ; }
rank: 668
score: 98.54347446986607
patch: days += Math + 1 ;
rank: 669
score: 98.84437391493056
patch: minutes -= 1 ; hours += $NUMBER$ ;
rank: 669
score: 98.74412536621094
patch: days ++ ; += - $NUMBER$ ;
rank: 669
score: 98.72544860839844
patch: days += $NUMBER$ * long 1 ;
rank: 669
score: 98.69510498046876
patch: days ; days += $NUMBER$ ; days ++ ;
rank: 669
score: 98.67919921875
patch: this . days -= $NUMBER$ ;
rank: 669
score: 98.64040701729911
patch: hours = $NUMBER$ * days ;
rank: 669
score: 98.58753204345703
patch: days += $NUMBER$ & $NUMBER$ ; }
rank: 669
score: 98.54335239955357
patch: days += $NUMBER$ ; days }
rank: 670
score: 98.8443603515625
patch: hours += 1 ; months -= 1 ;
rank: 670
score: 98.72536795479911
patch: days += $NUMBER$ / ; }
rank: 670
score: 98.69453648158482
patch: days ; if += 1 ;
rank: 670
score: 98.63966587611607
patch: seconds = $NUMBER$ * minutes ;
rank: 670
score: 98.5868911743164
patch: long days += $NUMBER$ / $NUMBER$ ;
rank: 670
score: 98.5419921875
patch: days += 1 ; else
rank: 671
score: 98.94168090820312
patch: hours += 1 ; minutes -= 1 ; }
rank: 671
score: 98.84232584635417
patch: } while ( seconds < 0 ) {
rank: 671
score: 98.7436767578125
patch: days += - 1 ; days = days ;
rank: 671
score: 98.69434814453125
patch: days ++ ; } days += 1 ; }
rank: 671
score: 98.67586844308036
patch: this . days += $NUMBER$ ;
rank: 671
score: 98.6387939453125
patch: days = $NUMBER$ : $NUMBER$ ;
rank: 671
score: 98.58686828613281
patch: days = days - $NUMBER$ ; }
rank: 671
score: 98.5414326985677
patch: days $NUMBER$ += 0 ;
rank: 672
score: 98.84176296657986
patch: seconds += 1 ; months -= 1 ;
rank: 672
score: 98.76376778738839
patch: days += $NUMBER$ * hours ;
rank: 672
score: 98.74346923828125
patch: days += $NUMBER$ ; days else { days }
rank: 672
score: 98.72433471679688
patch: days += $NUMBER$ ; time = ;
rank: 672
score: 98.6943359375
patch: days += $NUMBER$ * $NUMBER$ ? $NUMBER$ : $NUMBER$ ;
rank: 672
score: 98.67526681082589
patch: milliseconds = $NUMBER$ + 1 ;
rank: 672
score: 98.58635711669922
patch: days -= $NUMBER$ - $NUMBER$ ; }
rank: 672
score: 98.54047502790179
patch: days += $NUMBER$ ; ; /
rank: 673
score: 98.84105767144098
patch: days -= 1 ; minutes += $NUMBER$ ;
rank: 673
score: 98.742919921875
patch: days += days ; days end = $NUMBER$ ;
rank: 673
score: 98.694091796875
patch: days += 0 ; days = $NUMBER$ - $NUMBER$ ;
rank: 673
score: 98.67010498046875
patch: return format ( $NUMBER$ ) ;
rank: 673
score: 98.6336669921875
patch: seconds = minutes -= 1 ;
rank: 673
score: 98.58506774902344
patch: start . days += 1 ; }
rank: 673
score: 98.53917585100446
patch: days += days + 1 ;
rank: 674
score: 98.84104410807292
patch: minutes -= $NUMBER$ ; hours += 1 ;
rank: 674
score: 98.693798828125
patch: days ; days += $NUMBER$ - $NUMBER$ ; }
rank: 674
score: 98.63075474330357
patch: seconds = days -= $NUMBER$ ;
rank: 674
score: 98.58493041992188
patch: start += $NUMBER$ ; }
rank: 675
score: 98.75997924804688
patch: days -= 1 ; years -= 1 ; }
rank: 675
score: 98.74224243164062
patch: days = $NUMBER$ ; days += 0 ; ;
rank: 675
score: 98.72330474853516
patch: days += $NUMBER$ * time + ;
rank: 675
score: 98.69375610351562
patch: days += 0 + $NUMBER$ ; } days += $NUMBER$ ;
rank: 675
score: 98.66268920898438
patch: years += $NUMBER$ ;
rank: 675
score: 98.62974039713542
patch: hours = $NUMBER$ ; }
rank: 675
score: 98.58480834960938
patch: start . start ( start ) ;
rank: 676
score: 98.84042019314236
patch: hours -= $NUMBER$ ; seconds += $NUMBER$ ;
rank: 676
score: 98.74189758300781
patch: days = days ; += $NUMBER$ ;
rank: 676
score: 98.6619873046875
patch: milliseconds = $NUMBER$ * $NUMBER$ ;
rank: 676
score: 98.58302307128906
patch: end . set ( time ) ;
rank: 676
score: 98.53717912946429
patch: days else days += 1 ;
rank: 677
score: 98.93782958984374
patch: hours -= 1 ; } milliseconds -= 1 ;
rank: 677
score: 98.84038628472223
patch: minutes += 1 ; months -= 1 ;
rank: 677
score: 98.74168701171875
patch: days = $NUMBER$ ; days = $NUMBER$ ; }
rank: 677
score: 98.72249755859374
patch: days += $NUMBER$ * $NUMBER$ / days ; }
rank: 677
score: 98.69364790482955
patch: days += 0 ; if days += 1 ; }
rank: 677
score: 98.58179582868304
patch: days += $NUMBER$ ; default :
rank: 677
score: 98.53611537388393
patch: days += $NUMBER$ == $NUMBER$ ;
rank: 678
score: 98.840087890625
patch: days -= $NUMBER$ ; seconds += 1 ;
rank: 678
score: 98.75655788845486
patch: days -= 1 ; milliseconds -= 1 ;
rank: 678
score: 98.74150739397321
patch: days += / - $NUMBER$ ;
rank: 678
score: 98.72162628173828
patch: days += $NUMBER$ + SECOND ; }
rank: 678
score: 98.69351196289062
patch: days += $NUMBER$ + $NUMBER$ ; days += 0 ; }
rank: 678
score: 98.62867082868304
patch: hours = days -= 1 ;
rank: 678
score: 98.58177947998047
patch: start . end ( ) ; }
rank: 678
score: 98.53334263392857
patch: days += $STRING$ ; days ;
rank: 679
score: 98.74137573242187
patch: days = - 1 ; days += 0 ;
rank: 679
score: 98.72149658203125
patch: final ; days += $NUMBER$ ; }
rank: 679
score: 98.69312633167614
patch: days [ $NUMBER$ ] = $NUMBER$ / days ; }
rank: 679
score: 98.5815658569336
patch: long end = days + $NUMBER$ ;
rank: 679
score: 98.5332743326823
patch: days += += 1 ;
rank: 680
score: 98.93644205729167
patch: months -= 1 ; hours += 1 ;
rank: 680
score: 98.74126586914062
patch: days * / { days += - $NUMBER$ ;
rank: 680
score: 98.72053833007813
patch: cal += $NUMBER$ ; } days += $NUMBER$ ;
rank: 680
score: 98.69239153180804
patch: days += 0 - $NUMBER$ ;
rank: 680
score: 98.58137512207031
patch: double days = days * 1 ;
rank: 680
score: 98.53204345703125
patch: days += $NUMBER$ - 0 ;
rank: 681
score: 98.93636067708333
patch: days += 0 ; days -= 1 ;
rank: 681
score: 98.74092407226563
patch: days += - days ; if += $NUMBER$ ;
rank: 681
score: 98.71990203857422
patch: if ( days > 0 ) {
rank: 681
score: 98.69233703613281
patch: days ; } days = $NUMBER$ ;
rank: 681
score: 98.62663922991071
patch: seconds += $NUMBER$ ; break ;
rank: 681
score: 98.58100891113281
patch: long days = $NUMBER$ * time ;
rank: 681
score: 98.53067626953126
patch: days * $NUMBER$ ;
rank: 682
score: 98.9360595703125
patch: days += 1 ; } milliseconds -= 0 ;
rank: 682
score: 98.74028015136719
patch: days finally { days = false ;
rank: 682
score: 98.7195816040039
patch: days += days + 1 ; }
rank: 682
score: 98.69228108723958
patch: days [ $NUMBER$ ] = $NUMBER$ ; days += 1 ;
rank: 682
score: 98.64252580915179
patch: this . seconds += $NUMBER$ ;
rank: 682
score: 98.52988106863839
patch: days += $NUMBER$ ; ; else
rank: 683
score: 98.74746704101562
patch: days += Date CaMeL Utils . years ; }
rank: 683
score: 98.74004516601562
patch: days += - $NUMBER$ ; days = days ;
rank: 683
score: 98.71941266741071
patch: days += $NUMBER$ ; } else
rank: 683
score: 98.69196111505681
patch: days += 0 ; if days += 0 ; }
rank: 683
score: 98.6233418782552
patch: seconds = $NUMBER$ ; }
rank: 683
score: 98.57941436767578
patch: start . add ( end ) ;
rank: 683
score: 98.52931722005208
patch: days = $NUMBER$ $NUMBER$ ;
rank: 684
score: 98.74641723632813
patch: days -= $NUMBER$ ; } milliseconds += $NUMBER$ ;
rank: 684
score: 98.73951416015625
patch: days += - 1 ; if += 0 ;
rank: 684
score: 98.71888732910156
patch: days += $NUMBER$ ; } ; ;
rank: 684
score: 98.6377685546875
patch: minutes = 1 ;
rank: 684
score: 98.62251499720982
patch: hours = end CaMeL Millis ;
rank: 684
score: 98.5774154663086
patch: days ] = $NUMBER$ / $NUMBER$ ;
rank: 684
score: 98.52912248883929
patch: days += ; days $NUMBER$ ;
rank: 685
score: 98.93388061523437
patch: hours += 1 ; years -= 1 ; }
rank: 685
score: 98.73896484375
patch: days = $NUMBER$ ; days += ( $NUMBER$ ;
rank: 685
score: 98.71730259486607
patch: days += $NUMBER$ * time )
rank: 685
score: 98.69171697443181
patch: days += 0 ; days = $NUMBER$ / days ;
rank: 685
score: 98.62241036551339
patch: milliseconds = minutes -= 1 ;
rank: 685
score: 98.52896554129464
patch: days += 1 ; ; ;
rank: 686
score: 98.73884887695313
patch: days += * days ; days = $NUMBER$ ;
rank: 686
score: 98.6913174715909
patch: days += 0 ; days += $NUMBER$ * days ;
rank: 686
score: 98.63447788783482
patch: end . start ( ) ;
rank: 686
score: 98.62195696149554
patch: end CaMeL Millis += 1 ;
rank: 686
score: 98.52764020647321
patch: days += $NUMBER$ ; ; $NUMBER$
rank: 687
score: 98.933203125
patch: hours += 1 ; } days -= 1 ;
rank: 687
score: 98.74208286830357
patch: days -= 1 * years ;
rank: 687
score: 98.7387451171875
patch: days += - $STRING$ ; days += $NUMBER$ ;
rank: 687
score: 98.70957728794643
patch: days += 1 * days ;
rank: 687
score: 98.69105113636364
patch: days += 0 ; days days += 1 ; }
rank: 687
score: 98.62186104910714
patch: seconds = end CaMeL Millis ;
rank: 687
score: 98.5749740600586
patch: days += $NUMBER$ < $NUMBER$ ; }
rank: 687
score: 98.52757045200893
patch: days += 1 ; $NUMBER$ /
rank: 688
score: 98.75995744977679
patch: days = format CaMeL Duration ;
rank: 688
score: 98.73853759765625
patch: days * / { days += $NUMBER$ ; }
rank: 688
score: 98.70951843261719
patch: days += $NUMBER$ * $NUMBER$ + ;
rank: 688
score: 98.69062042236328
patch: days ++ ; else return $NUMBER$ ;
rank: 688
score: 98.63243756975446
patch: seconds += $NUMBER$ * 0 ;
rank: 688
score: 98.57492065429688
patch: days |= $NUMBER$ ; days -- ;
rank: 688
score: 98.52677408854167
patch: days $NUMBER$ * $NUMBER$ ;
rank: 689
score: 98.7391357421875
patch: days -= $NUMBER$ ; months -= 1 ;
rank: 689
score: 98.70453643798828
patch: days += $NUMBER$ * time / ;
rank: 689
score: 98.69007457386364
patch: days += $NUMBER$ ; days += 1 + $NUMBER$ ;
rank: 689
score: 98.63087681361607
patch: seconds -= $NUMBER$ * $NUMBER$ ;
rank: 689
score: 98.62053571428571
patch: seconds = $NUMBER$ : 1 ;
rank: 689
score: 98.57489885602679
patch: days = $NUMBER$ ^ $NUMBER$ ;
rank: 689
score: 98.52638753255208
patch: days += 0 ; else
rank: 690
score: 98.93082275390626
patch: days -= $NUMBER$ ; hours -= 1 ; }
rank: 690
score: 98.73754272460937
patch: days += $NUMBER$ ; } hours -= 1 ;
rank: 690
score: 98.73739624023438
patch: days += start += $NUMBER$ ; days -- ;
rank: 690
score: 98.68946329752605
patch: days += $NUMBER$ ; days += $NUMBER$ ; } days ;
rank: 690
score: 98.62431989397321
patch: seconds += $NUMBER$ * 1 ;
rank: 690
score: 98.61880057198661
patch: months = days -= $NUMBER$ ;
rank: 690
score: 98.57473754882812
patch: long days += $NUMBER$ ;
rank: 690
score: 98.52530343191964
patch: days += 0 ; days $NUMBER$
rank: 691
score: 98.93035278320312
patch: days += $NUMBER$ ; hours += 1 ; }
rank: 691
score: 98.73682512555804
patch: days += $NUMBER$ ; += ;
rank: 691
score: 98.7040023803711
patch: days += $NUMBER$ * double $NUMBER$ ;
rank: 691
score: 98.68856811523438
patch: days += $NUMBER$ ; days = $NUMBER$ * $NUMBER$ ; }
rank: 691
score: 98.57421112060547
patch: double $NUMBER$ = $NUMBER$ * $NUMBER$ ;
rank: 691
score: 98.52500406901042
patch: $NUMBER$ days += $NUMBER$ ;
rank: 692
score: 98.74938201904297
patch: break ; } milliseconds -= 1 ;
rank: 692
score: 98.7367919921875
patch: days += $NUMBER$ ; if += 1 ; }
rank: 692
score: 98.70352608816964
patch: days += $NUMBER$ ] ; }
rank: 692
score: 98.68837483723958
patch: days ++ ; days += $NUMBER$ ; days += 0 ;
rank: 692
score: 98.6162109375
patch: days = $NUMBER$ * minutes ;
rank: 692
score: 98.57353973388672
patch: days += $NUMBER$ * 1 ; }
rank: 692
score: 98.52412632533482
patch: days += start + $NUMBER$ ;
rank: 693
score: 98.73644256591797
patch: days * / days = 0 ;
rank: 693
score: 98.70304107666016
patch: days += 1 * days ; }
rank: 693
score: 98.6878662109375
patch: days += 0 ; } days += $NUMBER$ * $NUMBER$ ;
rank: 693
score: 98.62177385602679
patch: this . days -= 1 ;
rank: 693
score: 98.61464146205357
patch: months = $NUMBER$ * years ;
rank: 693
score: 98.5730972290039
patch: days += $NUMBER$ ; case 0 :
rank: 694
score: 98.73551025390626
patch: days += 1 ; } hours -= 1 ;
rank: 694
score: 98.68770599365234
patch: } days += $NUMBER$ + $NUMBER$ ;
rank: 694
score: 98.61463274274554
patch: days = minutes -= 1 ;
rank: 694
score: 98.57293701171875
patch: time += $NUMBER$ / $NUMBER$ ;
rank: 695
score: 98.73621215820313
patch: days ] += $NUMBER$ ; += - $NUMBER$ ;
rank: 695
score: 98.73089599609375
patch: break ; } milliseconds += 1 ;
rank: 695
score: 98.70183563232422
patch: new ; days += $NUMBER$ ; }
rank: 695
score: 98.68765258789062
patch: days += ( days : $NUMBER$ ;
rank: 695
score: 98.61296735491071
patch: days += $NUMBER$ * minutes ;
rank: 695
score: 98.57246398925781
patch: start . $NUMBER$ += $NUMBER$ ; }
rank: 695
score: 98.52245221819196
patch: days else if += 1 ;
rank: 696
score: 98.92794189453124
patch: hours += $NUMBER$ ; hours += 1 ; }
rank: 696
score: 98.73619842529297
patch: days finally { days = true ;
rank: 696
score: 98.73109130859375
patch: days -= $NUMBER$ ; years -= 1 ; }
rank: 696
score: 98.729248046875
patch: break ; } milliseconds += $NUMBER$ ;
rank: 696
score: 98.70121765136719
patch: days += $NUMBER$ ; return ; }
rank: 696
score: 98.68761189778645
patch: days += $NUMBER$ * days ; days += $NUMBER$ ; }
rank: 696
score: 98.61180768694196
patch: seconds += $NUMBER$ + 1 ;
rank: 696
score: 98.57246398925781
patch: long $NUMBER$ ; days += $NUMBER$ ;
rank: 696
score: 98.52219063895089
patch: days += $STRING$ + 0 ;
rank: 697
score: 98.92781372070313
patch: hours += $NUMBER$ ; } milliseconds += 1 ;
rank: 697
score: 98.73611450195312
patch: days * / days = false ;
rank: 697
score: 98.6872891512784
patch: days += $NUMBER$ - days $NUMBER$ * $NUMBER$ ; }
rank: 697
score: 98.57193756103516
patch: days -- ; days -= 1 ;
rank: 697
score: 98.52168491908482
patch: days = $NUMBER$ <= $NUMBER$ ;
rank: 698
score: 98.92770046657986
patch: months += $NUMBER$ ; hours += 1 ;
rank: 698
score: 98.69235665457589
patch: days += $NUMBER$ $NUMBER$ ; }
rank: 698
score: 98.68696732954545
patch: days += $NUMBER$ ? $NUMBER$ ? $NUMBER$ : 1 ;
rank: 698
score: 98.60740443638393
patch: minutes += $NUMBER$ * years ;
rank: 698
score: 98.52117919921875
patch: days <= $NUMBER$ + 1 ;
rank: 699
score: 98.9273681640625
patch: days -= 1 ; hours += 1 ; }
rank: 699
score: 98.71106719970703
patch: break ; } milliseconds -= $NUMBER$ ;
rank: 699
score: 98.68677867542614
patch: days += $NUMBER$ ; days += $NUMBER$ || $NUMBER$ ;
rank: 699
score: 98.60608782087054
patch: start . months += $NUMBER$ ;
rank: 699
score: 98.60442243303571
patch: seconds = $NUMBER$ * hours ;
rank: 699
score: 98.56832122802734
patch: double $NUMBER$ = $NUMBER$ + $NUMBER$ ;
rank: 700
score: 98.73477172851562
patch: days += - - 1 ; days -- ;
rank: 700
score: 98.72028198242188
patch: days -= 1 ; } hours -= 1 ;
rank: 700
score: 98.68948364257812
patch: days += $NUMBER$ * % $NUMBER$ ;
rank: 700
score: 98.68660191127232
patch: days ; days -= $NUMBER$ ;
rank: 700
score: 98.67629568917411
patch: hours += $NUMBER$ ; break ;
rank: 700
score: 98.60600062779018
patch: minutes = $NUMBER$ + 1 ;
rank: 700
score: 98.56809997558594
patch: days ++ ; days *= $NUMBER$ ;
rank: 700
score: 98.51877267020089
patch: days += 0 ; while ;
rank: 701
score: 98.926708984375
patch: days -= 1 ; minutes -= 1 ; }
rank: 701
score: 98.73460083007812
patch: days ] += $NUMBER$ ; += - 1 ;
rank: 701
score: 98.71945529513889
patch: days -= Date CaMeL Utils . years ;
rank: 701
score: 98.68727111816406
patch: days += millis + $NUMBER$ ; }
rank: 701
score: 98.68634905133929
patch: days ++ ; } if ;
rank: 701
score: 98.60463169642857
patch: days += $NUMBER$ * 0 ;
rank: 701
score: 98.56789725167411
patch: days = days / $NUMBER$ ;
rank: 701
score: 98.51874651227679
patch: days += BYTES + $NUMBER$ ;
rank: 702
score: 98.73425903320313
patch: days += $NUMBER$ ; days start = $NUMBER$ ;
rank: 702
score: 98.71796332465277
patch: days += $NUMBER$ ; milliseconds -= 1 ;
rank: 702
score: 98.68552071707589
patch: days += 1 / $NUMBER$ ;
rank: 702
score: 98.60270472935268
patch: hours += $NUMBER$ * years ;
rank: 702
score: 98.56365966796875
patch: days |= $NUMBER$ ; days ++ ;
rank: 703
score: 98.73423767089844
patch: days = days += - 1 ;
rank: 703
score: 98.71406385633681
patch: days -= 1 ; hours += $NUMBER$ ;
rank: 703
score: 98.68449183872768
patch: days += days / $NUMBER$ ;
rank: 703
score: 98.60261753627232
patch: seconds += $NUMBER$ * minutes ;
rank: 703
score: 98.60069928850446
patch: end . milliseconds -= $NUMBER$ ;
rank: 703
score: 98.5634765625
patch: days += $NUMBER$ < $NUMBER$ ;
rank: 703
score: 98.51841517857143
patch: days += 0 ; $NUMBER$ /
rank: 704
score: 98.9260986328125
patch: seconds += 1 ; days -= 1 ; }
rank: 704
score: 98.73419952392578
patch: days += ( days - $NUMBER$ ;
rank: 704
score: 98.71340603298611
patch: days += HOUR _ OF _ DAY ;
rank: 704
score: 98.6851806640625
patch: days += $NUMBER$ + ; }
rank: 704
score: 98.60148402622768
patch: milliseconds = minutes -= $NUMBER$ ;
rank: 704
score: 98.59984479631696
patch: end . milliseconds += $NUMBER$ ;
rank: 704
score: 98.5626449584961
patch: double days += $NUMBER$ * $NUMBER$ ;
rank: 704
score: 98.51542445591518
patch: days += 1 + 0 ;
rank: 705
score: 98.71153428819444
patch: days -= $NUMBER$ ; milliseconds -= 1 ;
rank: 705
score: 98.68475896661931
patch: days += $NUMBER$ + $NUMBER$ ; if += $NUMBER$ ;
rank: 705
score: 98.68341064453125
patch: time += $NUMBER$ * time ; }
rank: 705
score: 98.60055106026786
patch: days += start CaMeL Millis ;
rank: 705
score: 98.56246185302734
patch: start . get ( $NUMBER$ ) ;
rank: 705
score: 98.51328822544643
patch: days . days += $NUMBER$ ;
rank: 706
score: 98.92532958984376
patch: hours -= 1 ; days += 1 ; }
rank: 706
score: 98.73240966796875
patch: days += $NUMBER$ ; += - 1 ; ;
rank: 706
score: 98.7111572265625
patch: days -= 1 ; } days -= 1 ;
rank: 706
score: 98.68378240411931
patch: days += 0 ; if else days += $NUMBER$ ;
rank: 706
score: 98.68206024169922
patch: days += $NUMBER$ * <= $NUMBER$ ;
rank: 706
score: 98.59769112723214
patch: end . months += $NUMBER$ ;
rank: 706
score: 98.5127665201823
patch: days += 1 ; try
rank: 707
score: 98.73229217529297
patch: days += - $NUMBER$ ; $NUMBER$ ;
rank: 707
score: 98.68368966238839
patch: days ; * * * /
rank: 707
score: 98.56188201904297
patch: int days = $NUMBER$ / $NUMBER$ ;
rank: 707
score: 98.50967843191964
patch: days ; days = 0 ;
rank: 708
score: 98.68342590332031
patch: days ; days -= $NUMBER$ ; }
rank: 708
score: 98.68138122558594
patch: days += $NUMBER$ ; } break ;
rank: 708
score: 98.59279087611607
patch: seconds += 1 * $NUMBER$ ;
rank: 708
score: 98.56158447265625
patch: start . add ( $NUMBER$ ; }
rank: 708
score: 98.50776018415179
patch: days days += 1 ; ;
rank: 709
score: 98.70575629340277
patch: days -= 1 ; seconds += $NUMBER$ ;
rank: 709
score: 98.68319702148438
patch: days * 0 . += $NUMBER$ ;
rank: 709
score: 98.67980194091797
patch: sb . append ( days ) ;
rank: 709
score: 98.59547642299107
patch: hours = days -= $NUMBER$ ;
rank: 709
score: 98.59058489118304
patch: this . minutes += $NUMBER$ ;
rank: 709
score: 98.56153215680804
patch: start += $NUMBER$ + $NUMBER$ ;
rank: 709
score: 98.50682721819196
patch: days += this + 1 ;
rank: 710
score: 98.92451171875
patch: minutes += $NUMBER$ ; hours -= 1 ; }
rank: 710
score: 98.73148803710937
patch: days = days ; days += $NUMBER$ ; ;
rank: 710
score: 98.705224609375
patch: days += $NUMBER$ ; } minutes -= 1 ;
rank: 710
score: 98.68296120383523
patch: days += $NUMBER$ + days ; days += $NUMBER$ ;
rank: 710
score: 98.6795654296875
patch: days += $NUMBER$ * $NUMBER$ / ;
rank: 710
score: 98.59492710658482
patch: months += $NUMBER$ * days ;
rank: 710
score: 98.56023406982422
patch: double $NUMBER$ = $NUMBER$ / $NUMBER$ ;
rank: 710
score: 98.50670514787946
patch: days } days = $NUMBER$ ;
rank: 711
score: 98.7314682006836
patch: days += days ; += 1 ;
rank: 711
score: 98.7048583984375
patch: days += 1 ; } minutes -= 1 ;
rank: 711
score: 98.68288352272727
patch: days += 0 ; days days = $NUMBER$ ; }
rank: 711
score: 98.67865753173828
patch: days += $NUMBER$ * time - ;
rank: 711
score: 98.6580810546875
patch: hours += 1 ; break ;
rank: 711
score: 98.590087890625
patch: hours += $NUMBER$ + $NUMBER$ ;
rank: 711
score: 98.5599365234375
patch: long end = days + 1 ;
rank: 711
score: 98.50586809430804
patch: days = $NUMBER$ | $NUMBER$ ;
rank: 712
score: 98.92376708984375
patch: hours += 1 ; } milliseconds -= $NUMBER$ ;
rank: 712
score: 98.6825838955966
patch: days += 1 ; days += $NUMBER$ * $NUMBER$ ;
rank: 712
score: 98.58980887276786
patch: if ( days < 0 )
rank: 712
score: 98.55987548828125
patch: float days = days * $NUMBER$ ;
rank: 713
score: 98.73075103759766
patch: days * days ; days -- ;
rank: 713
score: 98.69861711774554
patch: days += 1 * hours ;
rank: 713
score: 98.68257904052734
patch: days += ( days * $NUMBER$ ;
rank: 713
score: 98.67599487304688
patch: days -= $NUMBER$ * time ; }
rank: 713
score: 98.591552734375
patch: months -= start CaMeL Millis ;
rank: 713
score: 98.58954729352679
patch: milliseconds += $NUMBER$ + $NUMBER$ ;
rank: 714
score: 98.7302754720052
patch: days += days $NUMBER$ ;
rank: 714
score: 98.698486328125
patch: days -= 1 ; break ;
rank: 714
score: 98.68242853338069
patch: days ++ ; } else { days = $NUMBER$ ;
rank: 714
score: 98.67383684430804
patch: if ( days <= 0 )
rank: 714
score: 98.63605608258929
patch: minutes += $NUMBER$ ; break ;
rank: 714
score: 98.58965192522321
patch: hours = $NUMBER$ : 1 ;
rank: 714
score: 98.50251116071429
patch: days += $NUMBER$ ; $NUMBER$ *
rank: 715
score: 98.72977992466518
patch: days * days += $NUMBER$ ;
rank: 715
score: 98.69581909179688
patch: days += $NUMBER$ ; } years -= 1 ;
rank: 715
score: 98.68201793323864
patch: days += 1 ; days += $NUMBER$ / $NUMBER$ ;
rank: 715
score: 98.58903285435268
patch: seconds = minutes -= $NUMBER$ ;
rank: 715
score: 98.58653913225446
patch: seconds -= 1 ; break ;
rank: 715
score: 98.55721609933036
patch: days += $NUMBER$ * min ;
rank: 715
score: 98.50031389508929
patch: days = m + $NUMBER$ ;
rank: 716
score: 98.91981201171875
patch: hours += $NUMBER$ ; minutes -= 1 ; }
rank: 716
score: 98.72969970703124
patch: days += - 1 ; for += $NUMBER$ ;
rank: 716
score: 98.69564819335938
patch: days += 1 ; } years -= 1 ;
rank: 716
score: 98.681640625
patch: days = $NUMBER$ / $NUMBER$ * /
rank: 716
score: 98.58777727399554
patch: seconds += $NUMBER$ * hours ;
rank: 716
score: 98.55657196044922
patch: days -- ; days ++ ; }
rank: 716
score: 98.50001743861607
patch: days $NUMBER$ += $NUMBER$ ; ;
rank: 717
score: 98.72936401367187
patch: days * - 1 ; if += $NUMBER$ ;
rank: 717
score: 98.681640625
patch: days += $NUMBER$ ? $NUMBER$ ? 0 : $NUMBER$ ;
rank: 717
score: 98.58662632533482
patch: end CaMeL Millis -= 1 ;
rank: 717
score: 98.55656215122768
patch: days = $NUMBER$ / time ;
rank: 717
score: 98.49843052455357
patch: days += max = $NUMBER$ ;
rank: 718
score: 98.72808227539062
patch: days = - 1 ; days += 1 ;
rank: 718
score: 98.68147416548295
patch: days += 0 ; days = $NUMBER$ * days ;
rank: 718
score: 98.66696166992188
patch: long time = days += $NUMBER$ ;
rank: 718
score: 98.61895751953125
patch: minutes += 1 ; break ;
rank: 718
score: 98.55538177490234
patch: days -- ; days -- ; }
rank: 718
score: 98.49823869977679
patch: days += 1 ; days /
rank: 719
score: 98.7276382446289
patch: days else { days += $STRING$ ;
rank: 719
score: 98.6813077059659
patch: days ; days -= $NUMBER$ ; days += $NUMBER$ ;
rank: 719
score: 98.66264343261719
patch: days += $NUMBER$ * ( days ;
rank: 719
score: 98.58587646484375
patch: minutes = $NUMBER$ * years ;
rank: 719
score: 98.58251953125
patch: this . millis += $NUMBER$ ;
rank: 719
score: 98.49819946289062
patch: days += 0 ; try
rank: 720
score: 98.91776123046876
patch: minutes += 1 ; days += 1 ; }
rank: 720
score: 98.72689819335938
patch: days += ; days += days ;
rank: 720
score: 98.68115234375
patch: days += 0 ; days += 1 + $NUMBER$ ;
rank: 720
score: 98.58563232421875
patch: months = $NUMBER$ ; }
rank: 720
score: 98.54875837053571
patch: days += $NUMBER$ * max ;
rank: 720
score: 98.49757603236607
patch: days += max + $NUMBER$ ;
rank: 721
score: 98.7262451171875
patch: days += 0 ; days catch $NUMBER$ ; }
rank: 721
score: 98.690185546875
patch: days -= 1 ; } minutes -= 1 ;
rank: 721
score: 98.68095397949219
patch: days += 1 ; return days ;
rank: 721
score: 98.66104125976562
patch: days += $NUMBER$ * format ; }
rank: 721
score: 98.61384800502232
patch: seconds += 1 ; break ;
rank: 721
score: 98.58429827008929
patch: milliseconds += $NUMBER$ * days ;
rank: 721
score: 98.5728759765625
patch: seconds -= $NUMBER$ ; break ;
rank: 722
score: 98.72459106445312
patch: days += $NUMBER$ ; days -- ; $NUMBER$ ;
rank: 722
score: 98.68061967329545
patch: days ++ ; } if ; days += $NUMBER$ ;
rank: 722
score: 98.58206612723214
patch: days = minutes -= $NUMBER$ ;
rank: 722
score: 98.56954520089286
patch: this . seconds -= $NUMBER$ ;
rank: 722
score: 98.54591587611607
patch: date = days * $NUMBER$ ;
rank: 722
score: 98.49692208426339
patch: days $NUMBER$ $NUMBER$ * $NUMBER$ ;
rank: 723
score: 98.72425537109375
patch: days = days + $NUMBER$ ; days -- ;
rank: 723
score: 98.68946533203125
patch: days -= $NUMBER$ ; } hours -= 1 ;
rank: 723
score: 98.58190046037946
patch: seconds = $NUMBER$ * 1 ;
rank: 723
score: 98.54281616210938
patch: double days = days ;
rank: 724
score: 98.67962646484375
patch: days = $NUMBER$ - days ; }
rank: 724
score: 98.658935546875
patch: days += $NUMBER$ * / time ;
rank: 724
score: 98.59541538783482
patch: days = days - 1 ;
rank: 724
score: 98.58106340680804
patch: days -= $NUMBER$ ; break ;
rank: 724
score: 98.56869070870536
patch: this . milliseconds -= $NUMBER$ ;
rank: 724
score: 98.49495152064732
patch: days += $NUMBER$ - $STRING$ ;
rank: 725
score: 98.91658935546874
patch: hours += $NUMBER$ ; years -= 1 ; }
rank: 725
score: 98.72274017333984
patch: days ++ ; days += true ;
rank: 725
score: 98.65764617919922
patch: days += $NUMBER$ ; } ; }
rank: 725
score: 98.59506661551339
patch: hours -= 1 ; break ;
rank: 725
score: 98.57927594866071
patch: milliseconds = days -= 1 ;
rank: 725
score: 98.56818498883929
patch: this . milliseconds += $NUMBER$ ;
rank: 725
score: 98.49381510416667
patch: days else if $NUMBER$ ;
rank: 726
score: 98.72268676757812
patch: days finally { days += 1 ;
rank: 726
score: 98.67876642400569
patch: days += $NUMBER$ * ; days += $NUMBER$ ; }
rank: 726
score: 98.65632629394531
patch: days += $NUMBER$ % days ; }
rank: 726
score: 98.5771484375
patch: else { seconds += $NUMBER$ ;
rank: 726
score: 98.5384521484375
patch: days += $NUMBER$ * float ;
rank: 726
score: 98.49269321986607
patch: days += SIZE + $NUMBER$ ;
rank: 727
score: 98.67865545099431
patch: days += 0 + $NUMBER$ ; days += 0 ;
rank: 727
score: 98.65544128417969
patch: days += $NUMBER$ ; ; } ;
rank: 727
score: 98.57535226004464
patch: days = $NUMBER$ * hours ;
rank: 727
score: 98.56753976004464
patch: months = $NUMBER$ : $NUMBER$ ;
rank: 727
score: 98.53794642857143
patch: start . days += 1 ;
rank: 727
score: 98.49033900669643
patch: days += $STRING$ + $STRING$ ;
rank: 728
score: 98.7217041015625
patch: days += - $NUMBER$ ; for += $NUMBER$ ;
rank: 728
score: 98.6783780184659
patch: days ; days += $NUMBER$ ? $NUMBER$ : $NUMBER$ ;
rank: 728
score: 98.6541015625
patch: time += $NUMBER$ ;
rank: 728
score: 98.57475062779018
patch: months += $NUMBER$ ; break ;
rank: 728
score: 98.56590924944196
patch: milliseconds = $NUMBER$ : $NUMBER$ ;
rank: 728
score: 98.53636823381696
patch: days += $NUMBER$ ) ; }
rank: 728
score: 98.48985944475446
patch: days += $STRING$ - $NUMBER$ ;
rank: 729
score: 98.72114562988281
patch: days += ; days += false ;
rank: 729
score: 98.68531629774306
patch: days += 1 ; seconds += $NUMBER$ ;
rank: 729
score: 98.67807839133523
patch: days += $NUMBER$ / days ; days += $NUMBER$ ;
rank: 729
score: 98.65314483642578
patch: long days = time / $NUMBER$ ;
rank: 729
score: 98.58087158203125
patch: minutes -= 1 ; break ;
rank: 729
score: 98.57366943359375
patch: end CaMeL Millis -= $NUMBER$ ;
rank: 729
score: 98.56341552734375
patch: end . months -= $NUMBER$ ;
rank: 729
score: 98.48973592122395
patch: days += $NUMBER$ ; System
rank: 730
score: 98.72053745814732
patch: days ++ ; days * /
rank: 730
score: 98.68370710100446
patch: days = days -= $NUMBER$ ;
rank: 730
score: 98.67761993408203
patch: days += $NUMBER$ + $NUMBER$ + ;
rank: 730
score: 98.56318010602679
patch: this . months += $NUMBER$ ;
rank: 731
score: 98.91327514648438
patch: months += 1 ; } milliseconds -= 1 ;
rank: 731
score: 98.6830078125
patch: days -= 1 ; } years -= 1 ;
rank: 731
score: 98.67621612548828
patch: days : if days += $NUMBER$ ;
rank: 731
score: 98.652099609375
patch: days += $NUMBER$ ; } } ;
rank: 731
score: 98.56934465680804
patch: months = start CaMeL Millis ;
rank: 731
score: 98.56263078962054
patch: end . close ( ) ;
rank: 731
score: 98.48811558314732
patch: days += $NUMBER$ + ; {
rank: 732
score: 98.71983642578125
patch: days * ; { days += - $NUMBER$ ;
rank: 732
score: 98.68256971571181
patch: days += DAY _ OF _ MONTH ;
rank: 732
score: 98.6757479580966
patch: days += 1 ; days = $NUMBER$ * $NUMBER$ ;
rank: 732
score: 98.56778564453126
patch: minutes = 0 ;
rank: 732
score: 98.56183733258929
patch: start . milliseconds -= $NUMBER$ ;
rank: 732
score: 98.52867780412946
patch: days >> += 1 ; }
rank: 732
score: 98.48714773995536
patch: days . days = $NUMBER$ ;
rank: 733
score: 98.91221923828125
patch: months += 1 ; hours -= 1 ; }
rank: 733
score: 98.71978759765625
patch: days += $NUMBER$ ; if $NUMBER$ - $NUMBER$ ;
rank: 733
score: 98.6819091796875
patch: days += $NUMBER$ ; years -= $NUMBER$ ; }
rank: 733
score: 98.67502663352273
patch: days days += $NUMBER$ ; days += $NUMBER$ ; }
rank: 733
score: 98.65044403076172
patch: days = days / $NUMBER$ ; }
rank: 733
score: 98.56128801618304
patch: start . milliseconds += $NUMBER$ ;
rank: 733
score: 98.52799769810268
patch: time = $NUMBER$ / $NUMBER$ ;
rank: 733
score: 98.48665073939732
patch: days += $NUMBER$ + start ;
rank: 734
score: 98.681640625
patch: days -= 1 ; months -= $NUMBER$ ;
rank: 734
score: 98.67376154119319
patch: days += 1 ; days = $NUMBER$ / $NUMBER$ ;
rank: 734
score: 98.64876556396484
patch: days += $NUMBER$ ; time -- ;
rank: 734
score: 98.56672014508929
patch: hours += $NUMBER$ * days ;
rank: 734
score: 98.56557791573661
patch: seconds = $NUMBER$ * seconds ;
rank: 734
score: 98.55999755859375
patch: this . days += 1 ;
rank: 734
score: 98.52754720052083
patch: double days += $NUMBER$ ;
rank: 734
score: 98.48554338727679
patch: days += 0 + $STRING$ ;
rank: 735
score: 98.91178676060268
patch: hours += 1 ; } }
rank: 735
score: 98.71893310546875
patch: days -- ; += - $NUMBER$ ;
rank: 735
score: 98.67822875976563
patch: days += 1 ; } months -= 1 ;
rank: 735
score: 98.67362837357955
patch: days += $NUMBER$ > $NUMBER$ ? $NUMBER$ : $NUMBER$ ;
rank: 735
score: 98.6472676595052
patch: days += days ; }
rank: 735
score: 98.56405203683036
patch: months = $NUMBER$ * days ;
rank: 735
score: 98.56163678850446
patch: days = months - 1 ;
rank: 735
score: 98.48482840401786
patch: days days $NUMBER$ = $NUMBER$ ;
rank: 736
score: 98.67708333333333
patch: days -= $NUMBER$ ; seconds += $NUMBER$ ;
rank: 736
score: 98.52239990234375
patch: days += ~ $NUMBER$ ; }
rank: 736
score: 98.48406110491071
patch: days = $NUMBER$ += $NUMBER$ ;
rank: 737
score: 98.71778106689453
patch: days * / days = 1 ;
rank: 737
score: 98.67703857421876
patch: days += 1 ; years -= $NUMBER$ ; }
rank: 737
score: 98.67276000976562
patch: days += $NUMBER$ * $NUMBER$ $NUMBER$ ;
rank: 737
score: 98.64542388916016
patch: days += days - $NUMBER$ ; }
rank: 737
score: 98.56217738560268
patch: months = $NUMBER$ -= $NUMBER$ ;
rank: 737
score: 98.55574253627232
patch: days = minutes - 1 ;
rank: 737
score: 98.51917375837054
patch: end . clear ( ) ;
rank: 738
score: 98.71775817871094
patch: days * / { days -- ;
rank: 738
score: 98.67633056640625
patch: days += $NUMBER$ ; } months -= 1 ;
rank: 738
score: 98.67274475097656
patch: days = $NUMBER$ / days ; }
rank: 738
score: 98.56214250837054
patch: months = minutes -= 1 ;
rank: 738
score: 98.51860700334821
patch: days += $NUMBER$ * Date ;
rank: 739
score: 98.9079345703125
patch: minutes -= 1 ; hours -= 1 ; }
rank: 739
score: 98.71736450195313
patch: days += $NUMBER$ ; else { days -- ;
rank: 739
score: 98.67604573567708
patch: days -= $NUMBER$ ; hours += $NUMBER$ ;
rank: 739
score: 98.67210804332386
patch: days += 0 ; days += $NUMBER$ ? $NUMBER$ ;
rank: 739
score: 98.64535522460938
patch: days += $NUMBER$ * Calendar . ;
rank: 739
score: 98.56180245535714
patch: months = $NUMBER$ -= 1 ;
rank: 739
score: 98.55375453404018
patch: hours -= $NUMBER$ ; break ;
rank: 739
score: 98.51776994977679
patch: days += $NUMBER$ : $NUMBER$ ;
rank: 739
score: 98.48252360026042
patch: days += * $NUMBER$ ;
rank: 740
score: 98.9078125
patch: months += $NUMBER$ ; days -= 1 ; }
rank: 740
score: 98.67515733506944
patch: days += 1 ; months -= $NUMBER$ ;
rank: 740
score: 98.67198181152344
patch: days ; if += 1 ; }
rank: 740
score: 98.64242553710938
patch: days += $NUMBER$ * millis ; ;
rank: 740
score: 98.55974469866071
patch: milliseconds = $NUMBER$ * years ;
rank: 740
score: 98.55303083147321
patch: minutes -= start CaMeL Millis ;
rank: 740
score: 98.48124476841518
patch: days = $NUMBER$ ? $NUMBER$ ;
rank: 741
score: 98.71726684570312
patch: days += $NUMBER$ ; days += ; $NUMBER$ ;
rank: 741
score: 98.67457885742188
patch: days -= $NUMBER$ ; } days -= 1 ;
rank: 741
score: 98.67177512428977
patch: days [ max 1 ] = $NUMBER$ / $NUMBER$ ;
rank: 741
score: 98.6422348022461
patch: days -= $NUMBER$ ; time ++ ;
rank: 741
score: 98.55486188616071
patch: start . months -= $NUMBER$ ;
rank: 741
score: 98.51554652622768
patch: date = days + 1 ;
rank: 741
score: 98.47993687220982
patch: days days = - $NUMBER$ ;
rank: 742
score: 98.905419921875
patch: hours -= $NUMBER$ ; hours -= 1 ; }
rank: 742
score: 98.7168960571289
patch: days += ; ; days -- ;
rank: 742
score: 98.6744140625
patch: days -= 1 ; days -= $NUMBER$ ; }
rank: 742
score: 98.67160866477273
patch: days += $NUMBER$ ; days += 0 + $NUMBER$ ;
rank: 742
score: 98.64102172851562
patch: days += 1 ; time ++ ;
rank: 742
score: 98.55752999441964
patch: milliseconds = days -= $NUMBER$ ;
rank: 742
score: 98.55157470703125
patch: end += 1 ;
rank: 742
score: 98.51264299665179
patch: days += $NUMBER$ * ceil ;
rank: 742
score: 98.47942243303571
patch: days += ; = $NUMBER$ ;
rank: 743
score: 98.71676635742188
patch: days += $NUMBER$ ; += - $NUMBER$ ; ;
rank: 743
score: 98.6715420809659
patch: days += $NUMBER$ * days ; days += 0 ;
rank: 743
score: 98.64069475446429
patch: days += $NUMBER$ + MINUTE ;
rank: 743
score: 98.55642264229911
patch: minutes = $NUMBER$ -= 1 ;
rank: 743
score: 98.55332728794643
patch: end . milliseconds -= 1 ;
rank: 743
score: 98.50747244698661
patch: start = $NUMBER$ + $NUMBER$ ;
rank: 743
score: 98.47915649414062
patch: days += ; days ;
rank: 744
score: 98.71668090820313
patch: days += $NUMBER$ ; days -- ; / }
rank: 744
score: 98.67139892578125
patch: days -= 1 ; years -= $NUMBER$ ; }
rank: 744
score: 98.6710537997159
patch: days ; days ++ ; days += $NUMBER$ ; }
rank: 744
score: 98.64036560058594
patch: days += $NUMBER$ * + $NUMBER$ ;
rank: 744
score: 98.55532400948661
patch: seconds -= start CaMeL Millis ;
rank: 744
score: 98.54832240513393
patch: minutes += start CaMeL Millis ;
rank: 744
score: 98.50218854631696
patch: start = $NUMBER$ / $NUMBER$ ;
rank: 745
score: 98.9007080078125
patch: months -= 1 ; days -= 1 ; }
rank: 745
score: 98.71649169921875
patch: days -- ; if += false ;
rank: 745
score: 98.67088734019886
patch: days += 1 ; days days += $NUMBER$ ; }
rank: 745
score: 98.63954162597656
patch: days += $NUMBER$ ; time += ;
rank: 745
score: 98.55344935825893
patch: minutes = $NUMBER$ : $NUMBER$ ;
rank: 745
score: 98.55186767578125
patch: milliseconds = 1 ;
rank: 745
score: 98.50052897135417
patch: days = 0 ; }
rank: 745
score: 98.47317504882812
patch: days += * 1 ;
rank: 746
score: 98.9001953125
patch: hours += 1 ; } days += 1 ;
rank: 746
score: 98.7162841796875
patch: days * ; { days += $NUMBER$ ; }
rank: 746
score: 98.67085266113281
patch: days * * * * * /
rank: 746
score: 98.55196707589286
patch: days = start CaMeL Millis ;
rank: 747
score: 98.71602630615234
patch: days += - days ; break ;
rank: 747
score: 98.67020263671876
patch: days += $NUMBER$ ; seconds -= 1 ; }
rank: 747
score: 98.63787841796875
patch: days += $NUMBER$ / ;
rank: 747
score: 98.55157470703125
patch: days += $NUMBER$ * seconds ;
rank: 747
score: 98.49822126116071
patch: start . stop ( ) ;
rank: 747
score: 98.46431477864583
patch: days . += $NUMBER$ ;
rank: 748
score: 98.89847412109376
patch: hours += $NUMBER$ ; } days -= 1 ;
rank: 748
score: 98.63766915457589
patch: / * days += $NUMBER$ ;
rank: 748
score: 98.55141775948661
patch: hours = minutes -= 1 ;
rank: 748
score: 98.49625651041667
patch: days >> += $NUMBER$ ;
rank: 748
score: 98.46286010742188
patch: days = $NUMBER$ ; else
rank: 749
score: 98.89696655273437
patch: days += 1 ; minutes += 1 ; }
rank: 749
score: 98.71587371826172
patch: days ++ ; if += false ;
rank: 749
score: 98.66925811767578
patch: days ++ ; return $NUMBER$ ; }
rank: 749
score: 98.66826036241319
patch: days += $NUMBER$ ; months -= $NUMBER$ ;
rank: 749
score: 98.54490443638393
patch: days = minutes + 1 ;
rank: 749
score: 98.4952392578125
patch: days += $NUMBER$ time ; }
rank: 749
score: 98.45949096679688
patch: if += $NUMBER$ ;
rank: 750
score: 98.89673461914063
patch: days += 1 ; } milliseconds += 0 ;
rank: 750
score: 98.66925603693181
patch: days += 0 ; days += $NUMBER$ || $NUMBER$ ;
rank: 750
score: 98.66689046223958
patch: days -= HOUR _ OF _ DAY ;
rank: 750
score: 98.63678850446429
patch: days += 1 ; ; }
rank: 750
score: 98.54450334821429
patch: if ( milliseconds < 0 )
rank: 750
score: 98.54436383928571
patch: days = hours - 1 ;
rank: 750
score: 98.49454171316964
patch: days *= $NUMBER$ + $NUMBER$ ;
rank: 750
score: 98.456298828125
patch: days += false ;
rank: 751
score: 98.89519653320312
patch: hours += 1 ; } hours -= 1 ;
rank: 751
score: 98.66921164772727
patch: days ; days += $NUMBER$ ; days -= $NUMBER$ ;
rank: 751
score: 98.666455078125
patch: days += $NUMBER$ ; } hours -= $NUMBER$ ;
rank: 751
score: 98.55033656529018
patch: seconds = hours -= 1 ;
rank: 751
score: 98.54347446986607
patch: minutes -= $NUMBER$ ; break ;
rank: 751
score: 98.54294259207589
patch: milliseconds += $NUMBER$ * 0 ;
rank: 751
score: 98.49339076450893
patch: long ; days += $NUMBER$ ;
rank: 751
score: 98.45230102539062
patch: { days += $NUMBER$ ;
rank: 752
score: 98.71465454101562
patch: days * * 1 ; if += $NUMBER$ ;
rank: 752
score: 98.66913396661931
patch: days += 0 ; else { days += $NUMBER$ ;
rank: 752
score: 98.6649169921875
patch: days += Date CaMeL Utils . hours ;
rank: 752
score: 98.5428466796875
patch: end += $NUMBER$ ;
rank: 752
score: 98.49327741350446
patch: days ] += $NUMBER$ ; }
rank: 752
score: 98.444580078125
patch: days += $STRING$ ; days
rank: 753
score: 98.89354248046875
patch: minutes -= 1 ; } milliseconds -= 1 ;
rank: 753
score: 98.71458129882812
patch: days += $NUMBER$ ; days / - $NUMBER$ ;
rank: 753
score: 98.66907848011364
patch: days += 0 ; days += $NUMBER$ : $NUMBER$ ;
rank: 753
score: 98.66469319661458
patch: days += Date CaMeL Utils . 1 ;
rank: 753
score: 98.63301304408482
patch: final days += $NUMBER$ ; }
rank: 753
score: 98.54049246651786
patch: months -= $NUMBER$ ; break ;
rank: 753
score: 98.49161202566964
patch: time = days - $NUMBER$ ;
rank: 754
score: 98.71422729492187
patch: days += - 1 ; days / * /
rank: 754
score: 98.664306640625
patch: days -= $NUMBER$ * hours ;
rank: 754
score: 98.53882707868304
patch: months -= 1 ; break ;
rank: 754
score: 98.49073137555804
patch: end = $NUMBER$ * $NUMBER$ ;
rank: 754
score: 98.4436543782552
patch: } days += $NUMBER$ ;
rank: 755
score: 98.71414184570312
patch: days = days += $NUMBER$ ; days -- ;
rank: 755
score: 98.6676025390625
patch: days += $NUMBER$ + 1 ; days += 0 ;
rank: 755
score: 98.54682268415179
patch: minutes = $NUMBER$ -= $NUMBER$ ;
rank: 755
score: 98.53736223493304
patch: this . seconds += 1 ;
rank: 755
score: 98.490478515625
patch: year += $NUMBER$ ; }
rank: 755
score: 98.4364522298177
patch: days days += $STRING$ ;
rank: 756
score: 98.71389770507812
patch: days = 1 ; days -- ;
rank: 756
score: 98.6674471768466
patch: days += 0 ; days += $NUMBER$ = $NUMBER$ ;
rank: 756
score: 98.66363525390625
patch: days -= 1 ; seconds -= 1 ; }
rank: 756
score: 98.54478236607143
patch: seconds += $NUMBER$ ; * /
rank: 756
score: 98.53897530691964
patch: hours += $NUMBER$ + 1 ;
rank: 756
score: 98.53292410714286
patch: if ( months < 0 )
rank: 756
score: 98.49001057942708
patch: days += $NUMBER$ ) ;
rank: 756
score: 98.42887369791667
patch: days += $NUMBER$ ; long
rank: 757
score: 98.89259643554688
patch: days -= 1 ; } days += 1 ;
rank: 757
score: 98.71259416852679
patch: days -- ; days * /
rank: 757
score: 98.66744232177734
patch: days += 0 + days ; }
rank: 757
score: 98.66334228515625
patch: days -= 1 ; } months -= 1 ;
rank: 757
score: 98.63057708740234
patch: days += $NUMBER$ * MINUTE ; ;
rank: 757
score: 98.54328264508929
patch: days -= $NUMBER$ * days ;
rank: 757
score: 98.53197370256696
patch: while ( days < 0 )
rank: 757
score: 98.48658243815105
patch: start . days ++ ;
rank: 757
score: 98.4190165201823
patch: days equals += $NUMBER$ ;
rank: 758
score: 98.8925537109375
patch: hours -= 1 ; hours += 1 ; }
rank: 758
score: 98.66736949573864
patch: days ; } else { days += $NUMBER$ ; }
rank: 758
score: 98.62974548339844
patch: days += $STRING$ + $NUMBER$ ; }
rank: 758
score: 98.54311697823661
patch: months += start CaMeL Millis ;
rank: 758
score: 98.48611014229911
patch: millis += $NUMBER$ + $NUMBER$ ;
rank: 758
score: 98.40521850585938
patch: days += time ;
rank: 759
score: 98.89254150390624
patch: minutes += 1 ; } milliseconds += 1 ;
rank: 759
score: 98.7115707397461
patch: days += days ; days * /
rank: 759
score: 98.6671475497159
patch: days [ days ] = $NUMBER$ * $NUMBER$ ; }
rank: 759
score: 98.66307373046875
patch: days += 1 ; } hours -= $NUMBER$ ;
rank: 759
score: 98.54214041573661
patch: hours -= start CaMeL Millis ;
rank: 759
score: 98.52648053850446
patch: this . seconds -= 1 ;
rank: 759
score: 98.48570033482143
patch: days = $NUMBER$ * ; }
rank: 759
score: 98.40224202473958
patch: days = $NUMBER$ ; $NUMBER$
rank: 760
score: 98.71147809709821
patch: days * ; return days ;
rank: 760
score: 98.6667813387784
patch: days += $NUMBER$ ; days += $NUMBER$ ? $NUMBER$ ;
rank: 760
score: 98.66304321289063
patch: days -= Date CaMeL Utils . years ; }
rank: 760
score: 98.6281967163086
patch: days += $NUMBER$ * floor ; }
rank: 760
score: 98.54152134486607
patch: seconds += $NUMBER$ * seconds ;
rank: 760
score: 98.534228515625
patch: years += 1 ;
rank: 760
score: 98.48450578962054
patch: cfw . days += $NUMBER$ ;
rank: 760
score: 98.40118408203125
patch: days += ( $NUMBER$ ;
rank: 761
score: 98.89121704101562
patch: minutes += 1 ; hours += 1 ; }
rank: 761
score: 98.71100616455078
patch: days += false ; days -- ;
rank: 761
score: 98.6667813387784
patch: days += $NUMBER$ ? $NUMBER$ + 0 : $NUMBER$ ;
rank: 761
score: 98.66031494140626
patch: days -= $NUMBER$ ; minutes -= 1 ; }
rank: 761
score: 98.6279067993164
patch: days += $NUMBER$ >> $NUMBER$ ; }
rank: 761
score: 98.53406633649554
patch: hours += start CaMeL Millis ;
rank: 761
score: 98.39750162760417
patch: days = $NUMBER$ ; try
rank: 762
score: 98.89005737304687
patch: seconds += 1 ; hours -= 1 ; }
rank: 762
score: 98.71062360491071
patch: days * - - $NUMBER$ ;
rank: 762
score: 98.66636657714844
patch: days ; = $NUMBER$ * $NUMBER$ ;
rank: 762
score: 98.65999755859374
patch: days += 1 ; seconds -= 1 ; }
rank: 762
score: 98.62754821777344
patch: long days += $NUMBER$ * $NUMBER$ ;
rank: 762
score: 98.53865269252232
patch: seconds += $NUMBER$ -= 1 ;
rank: 762
score: 98.53392333984375
patch: start += $NUMBER$ ;
rank: 762
score: 98.524169921875
patch: end -= $NUMBER$ ;
rank: 762
score: 98.39404296875
patch: days ; if $NUMBER$ ;
rank: 763
score: 98.71060180664062
patch: days = days ; += 0 ;
rank: 763
score: 98.665283203125
patch: days [ days ] = $NUMBER$ + $NUMBER$ ; }
rank: 763
score: 98.4793701171875
patch: days += $NUMBER$ . 0 ;
rank: 763
score: 98.3810323079427
patch: days += new days ;
rank: 764
score: 98.71045793805804
patch: days ] += $NUMBER$ ; ;
rank: 764
score: 98.6648178100586
patch: days ++ * days += $NUMBER$ ;
rank: 764
score: 98.37581380208333
patch: days += $NUMBER$ ++ ;
rank: 765
score: 98.88910522460938
patch: hours += 1 ; } milliseconds += $NUMBER$ ;
rank: 765
score: 98.71031697591145
patch: days ] += 0 ;
rank: 765
score: 98.66441761363636
patch: days += $NUMBER$ ? $NUMBER$ + 1 : $NUMBER$ ;
rank: 765
score: 98.65778459821429
patch: days = hours -= 1 ;
rank: 765
score: 98.62673514229911
patch: days += $NUMBER$ + SECOND ;
rank: 765
score: 98.53760637555804
patch: days += $NUMBER$ ; * /
rank: 765
score: 98.52362932477679
patch: months = $NUMBER$ ; break ;
rank: 765
score: 98.47215053013393
patch: year = $NUMBER$ * $NUMBER$ ;
rank: 765
score: 98.37575276692708
patch: days += 1 ; $NUMBER$
rank: 766
score: 98.8876708984375
patch: hours -= $NUMBER$ ; } milliseconds -= 1 ;
rank: 766
score: 98.70945739746094
patch: days * / { days * /
rank: 766
score: 98.66323020241477
patch: days += $NUMBER$ | $NUMBER$ ; days += $NUMBER$ ;
rank: 766
score: 98.65549045138889
patch: days -= 1 ; milliseconds -= $NUMBER$ ;
rank: 766
score: 98.6250228881836
patch: days += $NUMBER$ * substring $NUMBER$ ;
rank: 766
score: 98.53742327008929
patch: milliseconds = hours -= 1 ;
rank: 766
score: 98.46923828125
patch: days += - days ; }
rank: 766
score: 98.3736063639323
patch: days += 0 ; $NUMBER$
rank: 767
score: 98.70911407470703
patch: days += ; if += $NUMBER$ ;
rank: 767
score: 98.66256713867188
patch: days ; if ; } if ;
rank: 767
score: 98.65545654296875
patch: days += $NUMBER$ * years ; }
rank: 767
score: 98.62438092912946
patch: days += $NUMBER$ * format ;
rank: 767
score: 98.53688267299107
patch: minutes += $NUMBER$ * days ;
rank: 767
score: 98.46795654296875
patch: date = $NUMBER$ / $NUMBER$ ;
rank: 767
score: 98.3729248046875
patch: days += $NUMBER$ ; {
rank: 768
score: 98.88672485351563
patch: minutes -= $NUMBER$ ; days -= 1 ; }
rank: 768
score: 98.708740234375
patch: days = 0 ; days ++ ;
rank: 768
score: 98.66228693181819
patch: days += 0 ; if += $NUMBER$ + $NUMBER$ ;
rank: 768
score: 98.65297444661458
patch: days -= $NUMBER$ ; minutes += $NUMBER$ ;
rank: 768
score: 98.6215591430664
patch: days += $NUMBER$ * Date ; }
rank: 768
score: 98.5352783203125
patch: seconds += start CaMeL Millis ;
rank: 768
score: 98.52017647879464
patch: end . months -= 1 ;
rank: 768
score: 98.46738688151042
patch: days = days ; }
rank: 768
score: 98.37229410807292
patch: days = $NUMBER$ + ;
rank: 769
score: 98.88667602539063
patch: hours += 1 ; days -= $NUMBER$ ; }
rank: 769
score: 98.70845031738281
patch: days += $NUMBER$ ; days break ;
rank: 769
score: 98.62026977539062
patch: days -= $NUMBER$ ; ;
rank: 769
score: 98.53470284598214
patch: milliseconds += $NUMBER$ ; break ;
rank: 769
score: 98.51992361886161
patch: end . months += 1 ;
rank: 769
score: 98.35877482096355
patch: days += m $NUMBER$ ;
rank: 770
score: 98.88464965820313
patch: hours -= 1 ; } milliseconds += 1 ;
rank: 770
score: 98.70823669433594
patch: days ++ ; } days * /
rank: 770
score: 98.66154341264205
patch: days ++ ; } days += $NUMBER$ / days ;
rank: 770
score: 98.62022399902344
patch: sb . append ( $STRING$ ) ;
rank: 770
score: 98.53356061662946
patch: days = seconds -= 1 ;
rank: 770
score: 98.51956612723214
patch: minutes += $NUMBER$ + $NUMBER$ ;
rank: 770
score: 98.46601213727679
patch: start . ; days -- ;
rank: 770
score: 98.35809326171875
patch: days = $STRING$ ;
rank: 771
score: 98.88326416015624
patch: days += $NUMBER$ ; } milliseconds -= 0 ;
rank: 771
score: 98.66108842329545
patch: days += 0 ; days days += 0 ; }
rank: 771
score: 98.65023464626736
patch: days = reduce CaMeL And CaMeL Correct (
rank: 771
score: 98.53272356305804
patch: else { months += $NUMBER$ ;
rank: 771
score: 98.52335205078126
patch: millis += $NUMBER$ ;
rank: 771
score: 98.51927839006696
patch: if ( millis < 0 )
rank: 771
score: 98.46462576729911
patch: end . add ( $NUMBER$ ;
rank: 771
score: 98.35254923502605
patch: days ; += 1 ;
rank: 772
score: 98.88253784179688
patch: days += 1 ; } hours += 1 ;
rank: 772
score: 98.66026722301136
patch: days += 0 ; days += $NUMBER$ ; ; }
rank: 772
score: 98.64407009548611
patch: days += $NUMBER$ ; years -= 0 ;
rank: 772
score: 98.53270612444196
patch: hours = $NUMBER$ * minutes ;
rank: 772
score: 98.52286202566964
patch: hours = format CaMeL Duration ;
rank: 772
score: 98.51919991629464
patch: end . next ( ) ;
rank: 772
score: 98.464111328125
patch: days += $NUMBER$ * round ;
rank: 772
score: 98.35045369466145
patch: days += null ; ;
rank: 773
score: 98.88240966796874
patch: seconds -= 1 ; days -= 1 ; }
rank: 773
score: 98.70629119873047
patch: days ] += days + $NUMBER$ ;
rank: 773
score: 98.6602450284091
patch: days += $NUMBER$ ; days += $NUMBER$ ; ; }
rank: 773
score: 98.64369710286458
patch: days += 1 ; years -= 0 ;
rank: 773
score: 98.51820678710938
patch: days = format ;
rank: 773
score: 98.46401541573661
patch: start . set ( $NUMBER$ ;
rank: 773
score: 98.3490478515625
patch: days += true ;
rank: 774
score: 98.8818603515625
patch: days -= 1 ; } milliseconds -= 0 ;
rank: 774
score: 98.70476531982422
patch: days * ; days += $STRING$ ;
rank: 774
score: 98.66016734730114
patch: days ++ ; days = $NUMBER$ / $NUMBER$ ; }
rank: 774
score: 98.61943054199219
patch: days += 1 * time $NUMBER$ ;
rank: 774
score: 98.53131103515625
patch: years -= $NUMBER$ ;
rank: 774
score: 98.51614990234376
patch: end -= 1 ;
rank: 774
score: 98.34222412109375
patch: days += $NUMBER$ 1 ;
rank: 775
score: 98.65944602272727
patch: days [ $NUMBER$ ] = $NUMBER$ ; += $NUMBER$ ;
rank: 775
score: 98.64219835069444
patch: days -= $NUMBER$ ; months -= $NUMBER$ ;
rank: 775
score: 98.53038678850446
patch: milliseconds = $NUMBER$ -= $NUMBER$ ;
rank: 775
score: 98.51180594308036
patch: milliseconds -= $NUMBER$ * $NUMBER$ ;
rank: 775
score: 98.46148681640625
patch: days |= $NUMBER$ + 1 ;
rank: 775
score: 98.34031168619792
patch: $NUMBER$ ; += $NUMBER$ ;
rank: 776
score: 98.87857055664062
patch: minutes += 1 ; minutes -= 1 ; }
rank: 776
score: 98.65895774147727
patch: days += 0 ; } else { days ; }
rank: 776
score: 98.64099799262152
patch: days -= 1 ; years -= 0 ;
rank: 776
score: 98.52903529575893
patch: months = hours -= 1 ;
rank: 776
score: 98.51024518694196
patch: if ( minutes < 0 )
rank: 776
score: 98.33933512369792
patch: days $NUMBER$ * 0 ;
rank: 777
score: 98.87803955078125
patch: hours += 1 ; } milliseconds -= 0 ;
rank: 777
score: 98.70307922363281
patch: days = - 1 ; break ;
rank: 777
score: 98.65706010298295
patch: days += 1 ; } days += $NUMBER$ ; }
rank: 777
score: 98.63295491536458
patch: days += $NUMBER$ * days -= 1 ;
rank: 777
score: 98.50932965959821
patch: start . months += 1 ;
rank: 777
score: 98.46055385044643
patch: days = $NUMBER$ % $NUMBER$ ;
rank: 777
score: 98.33701578776042
patch: if $NUMBER$ += $NUMBER$ ;
rank: 778
score: 98.87727661132813
patch: seconds += $NUMBER$ ; days -= 1 ; }
rank: 778
score: 98.70185089111328
patch: days = days ; += 1 ;
rank: 778
score: 98.65662730823864
patch: days += $NUMBER$ ; days += $NUMBER$ - days ;
rank: 778
score: 98.62640380859375
patch: days -= Date CaMeL Utils . hours ;
rank: 778
score: 98.61620330810547
patch: days += $NUMBER$ * ; break ;
rank: 778
score: 98.46031494140625
patch: days -- ; }
rank: 778
score: 98.33681233723958
patch: long days = $NUMBER$ ;
rank: 779
score: 98.87684936523438
patch: days += 1 ; years += 1 ; }
rank: 779
score: 98.69976806640625
patch: days += * days + $NUMBER$ ;
rank: 779
score: 98.65650523792614
patch: days += $NUMBER$ * days ; days += 1 ;
rank: 779
score: 98.62251112196181
patch: days += Date CaMeL Utils . months ;
rank: 779
score: 98.61530303955078
patch: time += $NUMBER$ / $NUMBER$ ; }
rank: 779
score: 98.52556501116071
patch: milliseconds = seconds -= 1 ;
rank: 779
score: 98.45951334635417
patch: millis += $NUMBER$ ; }
rank: 779
score: 98.3264668782552
patch: $NUMBER$ days = $NUMBER$ ;
rank: 780
score: 98.6974868774414
patch: days += days ; days else {
rank: 780
score: 98.656494140625
patch: days += 1 ; if days += $NUMBER$ ; }
rank: 780
score: 98.62242296006944
patch: days += 1 ; milliseconds -= $NUMBER$ ;
rank: 780
score: 98.52420479910714
patch: milliseconds = hours -= $NUMBER$ ;
rank: 780
score: 98.5042724609375
patch: months = $NUMBER$ * 0 ;
rank: 780
score: 98.48647054036458
patch: minutes = $NUMBER$ ; }
rank: 780
score: 98.45838274274554
patch: days += $NUMBER$ / SECOND ;
rank: 780
score: 98.32560221354167
patch: days = 0 ; ;
rank: 781
score: 98.69593811035156
patch: days += ; days -= $NUMBER$ ;
rank: 781
score: 98.65566184303977
patch: days += $NUMBER$ ? 1 + $NUMBER$ : 0 ;
rank: 781
score: 98.62080891927083
patch: days += 1 * days -= 1 ;
rank: 781
score: 98.6151123046875
patch: days -= $NUMBER$ ; } ;
rank: 781
score: 98.45753696986607
patch: days >> >= 1 ; }
rank: 781
score: 98.32140096028645
patch: days += $NUMBER$ days ;
rank: 782
score: 98.876025390625
patch: days += 1 ; hours -= $NUMBER$ ; }
rank: 782
score: 98.65516246448864
patch: days += $NUMBER$ ; if days += 0 ; }
rank: 782
score: 98.62024603949652
patch: days -= 1 ; milliseconds += 1 ;
rank: 782
score: 98.4791015625
patch: seconds = 0 ;
rank: 782
score: 98.45736694335938
patch: days += $NUMBER$ time ;
rank: 782
score: 98.31941731770833
patch: days = $NUMBER$ ++ ;
rank: 783
score: 98.87582397460938
patch: months += 1 ; days += 1 ; }
rank: 783
score: 98.65440784801136
patch: days days += 0 ; days += $NUMBER$ ; }
rank: 783
score: 98.61979166666667
patch: days -= 1 ; months += 1 ;
rank: 783
score: 98.52179827008929
patch: minutes = $NUMBER$ * days ;
rank: 783
score: 98.4781494140625
patch: millis += 1 ;
rank: 783
score: 98.45682198660714
patch: end += $NUMBER$ + $NUMBER$ ;
rank: 783
score: 98.31929524739583
patch: int days += $NUMBER$ ;
rank: 784
score: 98.87517700195312
patch: minutes += $NUMBER$ ; days += 1 ; }
rank: 784
score: 98.69337681361607
patch: days -- ; return $NUMBER$ ;
rank: 784
score: 98.65386408025569
patch: days ++ ; } days += $NUMBER$ * days ;
rank: 784
score: 98.61929660373264
patch: days += $NUMBER$ ; milliseconds -= $NUMBER$ ;
rank: 784
score: 98.52174595424107
patch: seconds += $NUMBER$ : $NUMBER$ ;
rank: 784
score: 98.46341959635417
patch: hours = 1 ; }
rank: 784
score: 98.45623779296875
patch: days = days ^ $NUMBER$ ;
rank: 784
score: 98.31552124023438
patch: if $NUMBER$ = 1 ;
rank: 785
score: 98.874072265625
patch: hours -= 1 ; years -= 1 ; }
rank: 785
score: 98.69108072916667
patch: days ] += days ;
rank: 785
score: 98.65366432883523
patch: days [ days ] = $NUMBER$ / $NUMBER$ ; }
rank: 785
score: 98.61370849609375
patch: days += $NUMBER$ * ( $NUMBER$ ;
rank: 785
score: 98.52049037388393
patch: seconds = $NUMBER$ + days ;
rank: 785
score: 98.45978393554688
patch: start += 1 ;
rank: 785
score: 98.45556640625
patch: days += $NUMBER$ <= 1 ;
rank: 785
score: 98.3144022623698
patch: if += $NUMBER$ ; days
rank: 786
score: 98.87396240234375
patch: hours += $NUMBER$ ; } }
rank: 786
score: 98.6531649502841
patch: days += 0 + $NUMBER$ ; days += 1 ;
rank: 786
score: 98.61501736111111
patch: days -= $NUMBER$ ; milliseconds -= $NUMBER$ ;
rank: 786
score: 98.61255645751953
patch: long days = $NUMBER$ * days ;
rank: 786
score: 98.51886858258929
patch: months = minutes -= $NUMBER$ ;
rank: 786
score: 98.45653279622395
patch: milliseconds = $NUMBER$ ; }
rank: 786
score: 98.45481654575893
patch: millis += $NUMBER$ * $NUMBER$ ;
rank: 786
score: 98.30411783854167
patch: $NUMBER$ days += 0 ;
rank: 787
score: 98.872705078125
patch: hours -= $NUMBER$ ; days += 1 ; }
rank: 787
score: 98.68971470424107
patch: days += - $NUMBER$ ; }
rank: 787
score: 98.65305397727273
patch: days += $NUMBER$ ; days days += 1 ; }
rank: 787
score: 98.61498151506696
patch: days += end CaMeL Millis ;
rank: 787
score: 98.6124267578125
patch: long days += $NUMBER$ * time ;
rank: 787
score: 98.51799665178571
patch: days = $NUMBER$ * seconds ;
rank: 787
score: 98.45462472098214
patch: days = $NUMBER$ > $NUMBER$ ;
rank: 787
score: 98.3018798828125
patch: days += $STRING$ ; }
rank: 788
score: 98.68888636997768
patch: days ++ ; return days ;
rank: 788
score: 98.65251020951705
patch: days ; if += $NUMBER$ ; days += $NUMBER$ ;
rank: 788
score: 98.61382378472223
patch: days += 1 ; days -= 0 ;
rank: 788
score: 98.61237335205078
patch: days += $NUMBER$ * / millis ;
rank: 788
score: 98.51651436941964
patch: seconds += $NUMBER$ : 1 ;
rank: 788
score: 98.30099487304688
patch: days += $NUMBER$ ; start
rank: 789
score: 98.87252197265624
patch: minutes -= 1 ; days += 1 ; }
rank: 789
score: 98.68548583984375
patch: days ] = days ;
rank: 789
score: 98.65219948508523
patch: days += 0 ; if ( days > 0 ;
rank: 789
score: 98.61351182725694
patch: days += 1 ; months += 1 ;
rank: 789
score: 98.61211395263672
patch: Date days = days / $NUMBER$ ;
rank: 789
score: 98.51624407087054
patch: days -= $NUMBER$ ; * /
rank: 789
score: 98.45135498046875
patch: days += ~ $NUMBER$ ;
rank: 789
score: 98.30005900065105
patch: days $NUMBER$ = 0 ;
rank: 790
score: 98.87136840820312
patch: months += $NUMBER$ ; hours -= 1 ; }
rank: 790
score: 98.68364606584821
patch: days = days ; break ;
rank: 790
score: 98.6521329012784
patch: days += $NUMBER$ + 1 ; days += 1 ;
rank: 790
score: 98.4728775024414
patch: return $NUMBER$ ;
rank: 790
score: 98.45058768136161
patch: start . ; days ++ ;
rank: 790
score: 98.44187418619792
patch: seconds = 1 ; }
rank: 790
score: 98.29976399739583
patch: days = $NUMBER$ 1 ;
rank: 791
score: 98.87019486860795
patch: hours += reduce CaMeL And CaMeL Correct ( start ,
rank: 791
score: 98.68124825613839
patch: days ] = - 1 ;
rank: 791
score: 98.65198863636364
patch: days += $NUMBER$ - $NUMBER$ ; if += $NUMBER$ ;
rank: 791
score: 98.51502336774554
patch: else { milliseconds += $NUMBER$ ;
rank: 791
score: 98.45029122488839
patch: days += $NUMBER$ *= $NUMBER$ ;
rank: 791
score: 98.43463134765625
patch: int millis += 1 ;
rank: 791
score: 98.2983907063802
patch: if $NUMBER$ = 0 ;
rank: 792
score: 98.60422188895089
patch: days += 1 * minutes ;
rank: 792
score: 98.44982038225446
patch: days >> >= $NUMBER$ ; }
rank: 792
score: 98.43046875
patch: hours = 0 ;
rank: 792
score: 98.29733276367188
patch: days days = days ;
rank: 793
score: 98.65163352272727
patch: else { days += $NUMBER$ ; days += $NUMBER$ ;
rank: 793
score: 98.51466587611607
patch: milliseconds = $NUMBER$ * days ;
rank: 793
score: 98.45460815429688
patch: seconds -= 0 ;
rank: 793
score: 98.41866455078124
patch: start -= 1 ;
rank: 793
score: 98.29093424479167
patch: days equals += 0 ;
rank: 794
score: 98.67608642578125
patch: days -- ; return days ;
rank: 794
score: 98.65142267400569
patch: days += 0 ; } days += 0 ; }
rank: 794
score: 98.60186767578125
patch: days -= 1 * hours ;
rank: 794
score: 98.51416887555804
patch: seconds += $NUMBER$ -= $NUMBER$ ;
rank: 794
score: 98.41500854492188
patch: start -= $NUMBER$ ;
rank: 794
score: 98.28760782877605
patch: days if += $NUMBER$ ;
rank: 795
score: 98.8671630859375
patch: hours -= 1 ; minutes -= 1 ; }
rank: 795
score: 98.67538016183036
patch: days += days + days ;
rank: 795
score: 98.65064586292614
patch: days += $NUMBER$ * days ? $NUMBER$ : $NUMBER$ ;
rank: 795
score: 98.60566929408482
patch: final int days += $NUMBER$ ;
rank: 795
score: 98.51385498046875
patch: hours = hours -= 1 ;
rank: 795
score: 98.44574846540179
patch: days += Math . max ;
rank: 795
score: 98.40997314453125
patch: minutes += 0 ;
rank: 795
score: 98.27965291341145
patch: days = days ; ;
rank: 796
score: 98.866748046875
patch: seconds -= 1 ; } milliseconds -= 1 ;
rank: 796
score: 98.6505126953125
patch: days += $NUMBER$ ; if += $NUMBER$ + $NUMBER$ ;
rank: 796
score: 98.60539899553571
patch: days += $NUMBER$ ; return ;
rank: 796
score: 98.59076799665179
patch: days += days -= 1 ;
rank: 796
score: 98.44474574497768
patch: time = days / $NUMBER$ ;
rank: 796
score: 98.409619140625
patch: years -= 1 ;
rank: 796
score: 98.27782185872395
patch: days * - 1 ;
rank: 797
score: 98.8665771484375
patch: months += $NUMBER$ ; } milliseconds -= 1 ;
rank: 797
score: 98.67039271763393
patch: days = - 1 ; ;
rank: 797
score: 98.65029074928977
patch: days += $NUMBER$ ; if else days += $NUMBER$ ;
rank: 797
score: 98.58950369698661
patch: days = months -= 1 ;
rank: 797
score: 98.51065499441964
patch: hours = minutes -= $NUMBER$ ;
rank: 797
score: 98.27423095703125
patch: days days = $STRING$ ;
rank: 798
score: 98.67006138392857
patch: days += ; += 0 ;
rank: 798
score: 98.65000221946023
patch: days [ $NUMBER$ ] += $NUMBER$ ; break $NUMBER$ ;
rank: 798
score: 98.6041259765625
patch: days += 1 * ; }
rank: 798
score: 98.58476911272321
patch: days -= end CaMeL Millis ;
rank: 798
score: 98.51045445033482
patch: seconds = hours -= $NUMBER$ ;
rank: 798
score: 98.27255249023438
patch: int days = $NUMBER$ ;
rank: 799
score: 98.66879708426339
patch: days * ; += $NUMBER$ ;
rank: 799
score: 98.64972478693181
patch: days = $NUMBER$ * $NUMBER$ ; days += 1 ;
rank: 799
score: 98.60306549072266
patch: long millis = days / $NUMBER$ ;
rank: 799
score: 98.5816650390625
patch: days -= 0 ; }
rank: 799
score: 98.44259207589286
patch: days += $NUMBER$ ; ++ ;
rank: 799
score: 98.39016723632812
patch: x += $NUMBER$ ;
rank: 799
score: 98.2701904296875
patch: days += m ;
rank: 800
score: 98.86312255859374
patch: hours += $NUMBER$ ; } days += 1 ;
rank: 800
score: 98.66654750279018
patch: days += ; days ++ ;
rank: 800
score: 98.6490478515625
patch: days += $NUMBER$ ; } else { days ; }
rank: 800
score: 98.60020228794643
patch: days += millis + $NUMBER$ ;
rank: 800
score: 98.57939910888672
patch: days += 1 * years ; }
rank: 800
score: 98.50955636160714
patch: minutes = days -= 1 ;
rank: 800
score: 98.37733968098958
patch: break ;
rank: 800
score: 98.2690938313802
patch: days $NUMBER$ = 1 ;
rank: 801
score: 98.8630859375
patch: hours += $NUMBER$ ; } hours -= 1 ;
rank: 801
score: 98.64898126775569
patch: days += 0 ; } } days = $NUMBER$ ;
rank: 801
score: 98.376171875
patch: days = hours ;
rank: 801
score: 98.26904296875
patch: days ; += 0 ;
rank: 802
score: 98.86307373046876
patch: days -= $NUMBER$ ; hours += 1 ; }
rank: 802
score: 98.66135079520089
patch: days += $STRING$ ; break ;
rank: 802
score: 98.64887029474431
patch: days ++ ; days += $NUMBER$ ; break $NUMBER$ ;
rank: 802
score: 98.57421875
patch: days -= 1 * days ;
rank: 802
score: 98.50889369419643
patch: seconds = seconds -= 1 ;
rank: 802
score: 98.43991524832589
patch: days -= $NUMBER$ | $NUMBER$ ;
rank: 802
score: 98.42995198567708
patch: days -= - $NUMBER$ ;
rank: 802
score: 98.37478637695312
patch: int hours += 1 ;
rank: 802
score: 98.26717529296874
patch: days += start ;
rank: 803
score: 98.66109793526786
patch: days ] += - 1 ;
rank: 803
score: 98.64835981889205
patch: days ; days += $NUMBER$ ; if += $NUMBER$ ;
rank: 803
score: 98.59315708705357
patch: days += $NUMBER$ ; else {
rank: 803
score: 98.57127380371094
patch: days += end CaMeL Millis ; }
rank: 803
score: 98.50873674665179
patch: seconds -= $NUMBER$ * years ;
rank: 803
score: 98.43831961495536
patch: days |= $NUMBER$ - $NUMBER$ ;
rank: 803
score: 98.42364501953125
patch: seconds -= - $NUMBER$ ;
rank: 803
score: 98.37375895182292
patch: int minutes += 1 ;
rank: 803
score: 98.26680501302083
patch: days = 1 ; ;
rank: 804
score: 98.86276245117188
patch: minutes += 1 ; years -= 1 ; }
rank: 804
score: 98.66007777622768
patch: days * ; return $NUMBER$ ;
rank: 804
score: 98.6480712890625
patch: days += $NUMBER$ ? 1 + $NUMBER$ : 1 ;
rank: 804
score: 98.5926513671875
patch: days += $NUMBER$ % days ;
rank: 804
score: 98.56003243582589
patch: days += 1 - years ;
rank: 804
score: 98.43777901785714
patch: start . $NUMBER$ += $NUMBER$ ;
rank: 804
score: 98.42206420898438
patch: seconds += 0 ;
rank: 804
score: 98.364501953125
patch: years += $NUMBER$ ; }
rank: 804
score: 98.26593017578125
patch: long days += 0 ;
rank: 805
score: 98.8624267578125
patch: hours += 1 ; hours -= $NUMBER$ ; }
rank: 805
score: 98.65977260044643
patch: days * days + $NUMBER$ ;
rank: 805
score: 98.6477383700284
patch: days ; * * * / days += $NUMBER$ ;
rank: 805
score: 98.59101213727679
patch: days += days - $NUMBER$ ;
rank: 805
score: 98.55938720703125
patch: days += 1 * seconds ;
rank: 805
score: 98.50629534040179
patch: hours = start CaMeL Millis ;
rank: 805
score: 98.36436157226562
patch: y += $NUMBER$ ;
rank: 805
score: 98.2638651529948
patch: days += m 1 ;
rank: 806
score: 98.86209106445312
patch: milliseconds += 1 ; days -= 1 ; }
rank: 806
score: 98.64756081321023
patch: days += 0 ; break $NUMBER$ * days ; }
rank: 806
score: 98.50428118024554
patch: hours = $NUMBER$ ; break ;
rank: 806
score: 98.43384660993304
patch: start += $NUMBER$ * $NUMBER$ ;
rank: 806
score: 98.36083374023437
patch: format += $NUMBER$ ;
rank: 807
score: 98.86184692382812
patch: hours += 1 ; } minutes -= 1 ;
rank: 807
score: 98.65621512276786
patch: days = days += 1 ;
rank: 807
score: 98.64665004185268
patch: days += $NUMBER$ - ; }
rank: 807
score: 98.59002685546875
patch: days += 1 * ;
rank: 807
score: 98.55460902622768
patch: days += Calendar . MILLISECOND ;
rank: 807
score: 98.48746744791667
patch: int minutes += $NUMBER$ ;
rank: 807
score: 98.43295288085938
patch: long $NUMBER$ += $NUMBER$ ;
rank: 807
score: 98.40555826822917
patch: seconds += - $NUMBER$ ;
rank: 807
score: 98.35739135742188
patch: int hours += $NUMBER$ ;
rank: 807
score: 98.26088460286458
patch: days += $NUMBER$ ] ;
rank: 808
score: 98.65478515625
patch: days * * + $NUMBER$ ;
rank: 808
score: 98.54947662353516
patch: if ( hours < 0 ) {
rank: 808
score: 98.43229457310268
patch: days += $NUMBER$ / max ;
rank: 808
score: 98.3953857421875
patch: return format CaMeL Period ;
rank: 808
score: 98.25563557942708
patch: days += $NUMBER$ ; int
rank: 809
score: 98.65448869977679
patch: days += * / days ;
rank: 809
score: 98.64059012276786
patch: days += 1 - $NUMBER$ ;
rank: 809
score: 98.54912458147321
patch: days -= $NUMBER$ * minutes ;
rank: 809
score: 98.47744750976562
patch: int hours = $NUMBER$ ;
rank: 809
score: 98.35349527994792
patch: months = 1 ; }
rank: 809
score: 98.25045776367188
patch: days * $NUMBER$ ; ;
rank: 810
score: 98.86073608398438
patch: months -= 1 ; hours -= 1 ; }
rank: 810
score: 98.64820207868304
patch: days = - - 1 ;
rank: 810
score: 98.54609026227679
patch: days = hours -= $NUMBER$ ;
rank: 810
score: 98.43030657087054
patch: start ; days -= $NUMBER$ ;
rank: 810
score: 98.3884765625
patch: months -= 0 ;
rank: 810
score: 98.35096435546875
patch: days = minutes ;
rank: 810
score: 98.24923095703124
patch: days $NUMBER$ $NUMBER$ ;
rank: 811
score: 98.86062622070312
patch: hours += 1 ; } hours += 1 ;
rank: 811
score: 98.58328683035714
patch: if ( days += $NUMBER$ ;
rank: 811
score: 98.53985595703125
patch: days -= $NUMBER$ * years ; }
rank: 811
score: 98.4608154296875
patch: int seconds += $NUMBER$ ;
rank: 811
score: 98.42911202566964
patch: days = $NUMBER$ * max ;
rank: 811
score: 98.38036092122395
patch: return $NUMBER$ + $NUMBER$ ;
rank: 811
score: 98.34601440429688
patch: hours += 0 ;
rank: 811
score: 98.24912719726562
patch: days += SECOND ;
rank: 812
score: 98.8604736328125
patch: hours -= 1 ; } days -= 1 ;
rank: 812
score: 98.64803641183036
patch: days = days += 0 ;
rank: 812
score: 98.5751953125
patch: cal += $NUMBER$ ; }
rank: 812
score: 98.37664184570312
patch: buf -= 1 ;
rank: 812
score: 98.34281005859376
patch: minutes -= 0 ;
rank: 812
score: 98.24855550130208
patch: days catch += $NUMBER$ ;
rank: 813
score: 98.86009521484375
patch: minutes += 1 ; } milliseconds -= $NUMBER$ ;
rank: 813
score: 98.64743477957589
patch: days = start += $NUMBER$ ;
rank: 813
score: 98.63767496744792
patch: days ; return $NUMBER$ ;
rank: 813
score: 98.57407052176339
patch: cal += $NUMBER$ * $NUMBER$ ;
rank: 813
score: 98.36930338541667
patch: return format ( $NUMBER$ ;
rank: 813
score: 98.2467549641927
patch: days = $NUMBER$ ] ;
rank: 814
score: 98.63666643415179
patch: days += 1 ; if ;
rank: 814
score: 98.53048706054688
patch: days += Calendar . MILLISECOND ; }
rank: 814
score: 98.42784772600446
patch: year += $NUMBER$ + $NUMBER$ ;
rank: 814
score: 98.36769409179688
patch: buf -= $NUMBER$ ;
rank: 814
score: 98.32726033528645
patch: minutes = 1 ; }
rank: 814
score: 98.24498494466145
patch: days $NUMBER$ * 1 ;
rank: 815
score: 98.8597412109375
patch: hours += 1 ; minutes += 1 ; }
rank: 815
score: 98.64653669084821
patch: days += end . days ;
rank: 815
score: 98.63436453683036
patch: if ( days == null ;
rank: 815
score: 98.42775181361607
patch: days += $NUMBER$ + length ;
rank: 815
score: 98.36190795898438
patch: long millis += $NUMBER$ ;
rank: 815
score: 98.32633463541667
patch: return start CaMeL Millis ;
rank: 815
score: 98.23441569010417
patch: days += ! $NUMBER$ ;
rank: 816
score: 98.64573451450893
patch: days = - - $NUMBER$ ;
rank: 816
score: 98.52737862723214
patch: days += $NUMBER$ * months ;
rank: 816
score: 98.42578996930804
patch: start . days = $NUMBER$ ;
rank: 816
score: 98.42474365234375
patch: int millis = $NUMBER$ ;
rank: 816
score: 98.35565185546875
patch: months -= - $NUMBER$ ;
rank: 816
score: 98.32199096679688
patch: millis -= 1 ;
rank: 816
score: 98.23414306640625
patch: days += Math ;
rank: 817
score: 98.85830078125
patch: seconds += 1 ; } milliseconds += 1 ;
rank: 817
score: 98.6453857421875
patch: days += ; + 1 ;
rank: 817
score: 98.63102504185268
patch: days += 0 * $NUMBER$ ;
rank: 817
score: 98.424560546875
patch: days >> -= $NUMBER$ ; }
rank: 817
score: 98.35494995117188
patch: months = - $NUMBER$ ;
rank: 817
score: 98.23262532552083
patch: days $NUMBER$ ; $NUMBER$ ;
rank: 818
score: 98.85800170898438
patch: hours += $NUMBER$ ; } milliseconds += $NUMBER$ ;
rank: 818
score: 98.64501953125
patch: days ] += - $NUMBER$ ;
rank: 818
score: 98.51918247767857
patch: days += $NUMBER$ -= 1 ;
rank: 818
score: 98.42092895507812
patch: milliseconds = 0 ; }
rank: 818
score: 98.22997029622395
patch: days iterator = $NUMBER$ ;
rank: 819
score: 98.85796508789062
patch: months += 1 ; } milliseconds += 1 ;
rank: 819
score: 98.64323207310268
patch: days * ] += $NUMBER$ ;
rank: 819
score: 98.56464494977679
patch: if ( days > 0 ;
rank: 819
score: 98.51396833147321
patch: days -= $NUMBER$ * seconds ;
rank: 819
score: 98.31597900390625
patch: x += 1 ;
rank: 819
score: 98.22803751627605
patch: days += BYTES $NUMBER$ ;
rank: 820
score: 98.857861328125
patch: minutes += 1 ; } days -= 1 ;
rank: 820
score: 98.64303152901786
patch: days ] = $NUMBER$ ; ;
rank: 820
score: 98.56276157924107
patch: if ( days >= 0 )
rank: 820
score: 98.51392364501953
patch: days -= 1 ; break ; }
rank: 820
score: 98.42157854352679
patch: days -= $NUMBER$ || $NUMBER$ ;
rank: 820
score: 98.398193359375
patch: days = seconds ;
rank: 820
score: 98.3374532063802
patch: int start = $NUMBER$ ;
rank: 820
score: 98.29498901367188
patch: millis -= $NUMBER$ ;
rank: 820
score: 98.22422281901042
patch: days equals += 1 ;
rank: 821
score: 98.85770874023437
patch: hours += $NUMBER$ ; days -= $NUMBER$ ; }
rank: 821
score: 98.62408447265625
patch: days ; if ;
rank: 821
score: 98.56150599888393
patch: return days + $NUMBER$ ; }
rank: 821
score: 98.51320103236607
patch: days += 1 - days ;
rank: 821
score: 98.38576253255208
patch: int seconds = $NUMBER$ ;
rank: 821
score: 98.33406372070313
patch: months += 0 ;
rank: 821
score: 98.22048950195312
patch: days += null ; days
rank: 822
score: 98.85673217773437
patch: days += $NUMBER$ ; minutes += 1 ; }
rank: 822
score: 98.64215698242188
patch: days * * /
rank: 822
score: 98.56123570033482
patch: final ; days += $NUMBER$ ;
rank: 822
score: 98.41911097935268
patch: days * $NUMBER$ * $NUMBER$ ;
rank: 822
score: 98.38575236002605
patch: int milliseconds = $NUMBER$ ;
rank: 822
score: 98.33321126302083
patch: long days -= $NUMBER$ ;
rank: 822
score: 98.21592203776042
patch: days += ( days ;
rank: 823
score: 98.85542602539063
patch: months -= 1 ; } milliseconds -= 1 ;
rank: 823
score: 98.64167131696429
patch: days += start += days ;
rank: 823
score: 98.51240539550781
patch: days -= end CaMeL Millis ; }
rank: 823
score: 98.41666085379464
patch: date = $NUMBER$ + $NUMBER$ ;
rank: 823
score: 98.3322021484375
patch: milliseconds -= 0 ;
rank: 823
score: 98.29213460286458
patch: milliseconds = 1 ; }
rank: 823
score: 98.2157491048177
patch: $NUMBER$ days += 1 ;
rank: 824
score: 98.8537353515625
patch: minutes -= $NUMBER$ ; hours -= 1 ; }
rank: 824
score: 98.63923863002232
patch: days * / += $NUMBER$ ;
rank: 824
score: 98.62116350446429
patch: days ; return $NUMBER$ ; }
rank: 824
score: 98.50932965959821
patch: days += days -= $NUMBER$ ;
rank: 824
score: 98.3247578938802
patch: months += - $NUMBER$ ;
rank: 824
score: 98.29039916992187
patch: days = years ;
rank: 824
score: 98.21519978841145
patch: days $NUMBER$ += $STRING$ ;
rank: 825
score: 98.85308837890625
patch: hours -= 1 ; } milliseconds -= $NUMBER$ ;
rank: 825
score: 98.63920375279018
patch: try { days += $NUMBER$ ;
rank: 825
score: 98.62067522321429
patch: days ; += $NUMBER$ ; }
rank: 825
score: 98.50880432128906
patch: if ( days < 0 ) {
rank: 825
score: 98.41500418526786
patch: start . close ( ) ;
rank: 825
score: 98.36802164713542
patch: months = 0 ; }
rank: 825
score: 98.21248372395833
patch: days += new $NUMBER$ ;
rank: 826
score: 98.63827078683036
patch: days += - += $NUMBER$ ;
rank: 826
score: 98.54479108537946
patch: days += $NUMBER$ * floor ;
rank: 826
score: 98.50776018415179
patch: days -= $NUMBER$ * 1 ;
rank: 826
score: 98.3207295735677
patch: return format . $NUMBER$ ;
rank: 826
score: 98.28916625976562
patch: y += 1 ;
rank: 826
score: 98.20493570963542
patch: days $NUMBER$ ; days ;
rank: 827
score: 98.63790457589286
patch: days ] = - $NUMBER$ ;
rank: 827
score: 98.54392787388393
patch: days += $NUMBER$ * $NUMBER$ )
rank: 827
score: 98.41448974609375
patch: long $NUMBER$ = days ;
rank: 827
score: 98.27999267578124
patch: milliseconds += 0 ;
rank: 828
score: 98.85170288085938
patch: minutes += $NUMBER$ ; hours += 1 ; }
rank: 828
score: 98.6378173828125
patch: days = days $NUMBER$ ;
rank: 828
score: 98.53880092075893
patch: time += $NUMBER$ * days ;
rank: 828
score: 98.50394112723214
patch: days -= 1 * minutes ;
rank: 828
score: 98.3172098795573
patch: long minutes += $NUMBER$ ;
rank: 828
score: 98.27887573242188
patch: years = $NUMBER$ ;
rank: 828
score: 98.20384724934895
patch: days += 1 ; /
rank: 829
score: 98.85089111328125
patch: minutes += $NUMBER$ ; } milliseconds += 1 ;
rank: 829
score: 98.6356201171875
patch: days += this . days ;
rank: 829
score: 98.53445870535714
patch: day += $NUMBER$ * $NUMBER$ ;
rank: 829
score: 98.50340270996094
patch: days += $NUMBER$ * hours ; }
rank: 829
score: 98.4124755859375
patch: millis += $NUMBER$ / $NUMBER$ ;
rank: 829
score: 98.31644694010417
patch: hours += - $NUMBER$ ;
rank: 829
score: 98.25337524414063
patch: seconds = hours ;
rank: 829
score: 98.20242309570312
patch: if += 1 ;
rank: 830
score: 98.61263602120536
patch: days ++ ; break ; }
rank: 830
score: 98.50251116071429
patch: days -= 1 ; continue ;
rank: 830
score: 98.41243198939732
patch: days -= $NUMBER$ ^ $NUMBER$ ;
rank: 830
score: 98.24395141601562
patch: format += 1 ;
rank: 831
score: 98.6317138671875
patch: days += days += days ;
rank: 831
score: 98.61117117745536
patch: days ; } return $NUMBER$ ;
rank: 831
score: 98.33885701497395
patch: int years = $NUMBER$ ;
rank: 831
score: 98.20152791341145
patch: days = $NUMBER$ / ;
rank: 832
score: 98.63121686662946
patch: days += days + 0 ;
rank: 832
score: 98.40853445870536
patch: date = days - $NUMBER$ ;
rank: 832
score: 98.23837890625
patch: days = timezone ;
rank: 832
score: 98.2008565266927
patch: days = $NUMBER$ days ;
rank: 833
score: 98.82171630859375
patch: days += 1 ; } finally {
rank: 833
score: 98.60695103236607
patch: days days += 1 ; }
rank: 833
score: 98.5263671875
patch: days -= $NUMBER$ ; ; }
rank: 833
score: 98.40740966796875
patch: days += $NUMBER$ * double ;
rank: 833
score: 98.3293212890625
patch: result += $NUMBER$ ;
rank: 833
score: 98.3125508626302
patch: int minutes = $NUMBER$ ;
rank: 833
score: 98.227490234375
patch: days = months ;
rank: 833
score: 98.2008056640625
patch: } days = $NUMBER$ ;
rank: 834
score: 98.62949916294643
patch: days += * days $NUMBER$ ;
rank: 834
score: 98.40737479073661
patch: start . add ( days ;
rank: 834
score: 98.32596435546876
patch: j += $NUMBER$ ;
rank: 834
score: 98.22738037109374
patch: days = milliseconds ;
rank: 834
score: 98.19906616210938
patch: days = * $NUMBER$ ;
rank: 835
score: 98.60210309709821
patch: days += $NUMBER$ + max ;
rank: 835
score: 98.48841857910156
patch: days = days -= 1 ; }
rank: 835
score: 98.19751993815105
patch: days += $NUMBER$ ; final
rank: 836
score: 98.81342424665179
patch: minutes += 1 ; } }
rank: 836
score: 98.60069056919643
patch: days += ( days ; }
rank: 836
score: 98.48828996930804
patch: days = months -= $NUMBER$ ;
rank: 836
score: 98.40450613839286
patch: start . days ++ ; }
rank: 836
score: 98.3231913248698
patch: minutes = 0 ; }
rank: 836
score: 98.3067118326823
patch: long seconds += $NUMBER$ ;
rank: 836
score: 98.1961669921875
patch: if $NUMBER$ * $NUMBER$ ;
rank: 837
score: 98.62454659598214
patch: days += * / $NUMBER$ ;
rank: 837
score: 98.59964425223214
patch: days += $NUMBER$ + ; ;
rank: 837
score: 98.52525111607143
patch: days += time * $NUMBER$ ;
rank: 837
score: 98.48454938616071
patch: days += 1 ; continue ;
rank: 837
score: 98.40229143415179
patch: start += $NUMBER$ / $NUMBER$ ;
rank: 837
score: 98.31822713216145
patch: int millis -= $NUMBER$ ;
rank: 837
score: 98.30546061197917
patch: milliseconds -= - $NUMBER$ ;
rank: 837
score: 98.22274780273438
patch: hours -= 0 ;
rank: 837
score: 98.1959737141927
patch: days = $NUMBER$ ; /
rank: 838
score: 98.79304722377232
patch: hours -= 1 ; } }
rank: 838
score: 98.62394496372768
patch: days = days += days ;
rank: 838
score: 98.52187674386161
patch: days |= $NUMBER$ * time ;
rank: 838
score: 98.48440987723214
patch: days += 1 * months ;
rank: 838
score: 98.40199497767857
patch: end . end ( ) ;
rank: 838
score: 98.21124267578125
patch: max += 1 ;
rank: 838
score: 98.19442749023438
patch: days += d ;
rank: 839
score: 98.62379964192708
patch: days * * 1 ;
rank: 839
score: 98.40115792410714
patch: days |= $NUMBER$ ; break ;
rank: 839
score: 98.2946044921875
patch: milliseconds = seconds ;
rank: 839
score: 98.20550537109375
patch: break ; }
rank: 839
score: 98.1941426595052
patch: days += $NUMBER$ ; *
rank: 840
score: 98.62334333147321
patch: days += - 1 ; days
rank: 840
score: 98.59892926897321
patch: days ++ ; break $NUMBER$ ;
rank: 840
score: 98.40059988839286
patch: days *= $NUMBER$ * $NUMBER$ ;
rank: 840
score: 98.20060424804687
patch: seconds = years ;
rank: 840
score: 98.192626953125
patch: days = * 1 ;
rank: 841
score: 98.62256731305804
patch: days += days += 1 ;
rank: 841
score: 98.51385498046875
patch: days += $NUMBER$ * HOUR ;
rank: 841
score: 98.40010288783482
patch: days |= $NUMBER$ ^ $NUMBER$ ;
rank: 841
score: 98.20035400390626
patch: seconds = minutes ;
rank: 842
score: 98.6224365234375
patch: days += / - 1 ;
rank: 842
score: 98.51369803292411
patch: days += $NUMBER$ / MINUTE ;
rank: 842
score: 98.47781808035714
patch: days += 1 - months ;
rank: 842
score: 98.39991106305804
patch: start = days + $NUMBER$ ;
rank: 842
score: 98.19134521484375
patch: buf += $NUMBER$ ;
rank: 842
score: 98.19125366210938
patch: days = 0 ; days
rank: 843
score: 98.76429748535156
patch: days -= 1 ; } finally {
rank: 843
score: 98.59306117466518
patch: days += 0 . 1 ;
rank: 843
score: 98.51018415178571
patch: if ( days > $NUMBER$ )
rank: 843
score: 98.46629987444196
patch: days -= $NUMBER$ ; continue ;
rank: 843
score: 98.39910888671875
patch: days = $NUMBER$ * min ;
rank: 843
score: 98.191064453125
patch: days < $NUMBER$ ;
rank: 843
score: 98.18488159179688
patch: 0 += $NUMBER$ ;
rank: 844
score: 98.75971221923828
patch: days += $NUMBER$ ; } finally {
rank: 844
score: 98.61873953683036
patch: days * * + 1 ;
rank: 844
score: 98.51004464285714
patch: year += $NUMBER$ * $NUMBER$ ;
rank: 844
score: 98.39889962332589
patch: days = $NUMBER$ * long ;
rank: 844
score: 98.26838989257813
patch: format -= $NUMBER$ ;
rank: 844
score: 98.19061279296875
patch: days * - $NUMBER$ ;
rank: 844
score: 98.18409423828125
patch: max += $NUMBER$ ;
rank: 845
score: 98.46613311767578
patch: days -= 1 * years ; }
rank: 845
score: 98.27651977539062
patch: milliseconds = minutes ;
rank: 845
score: 98.25960693359374
patch: format -= 1 ;
rank: 845
score: 98.19029744466145
patch: days iterator += $NUMBER$ ;
rank: 845
score: 98.1814453125
patch: hours = years ;
rank: 846
score: 98.7572021484375
patch: minutes += $NUMBER$ ; } }
rank: 846
score: 98.61736188616071
patch: days * * - 1 ;
rank: 846
score: 98.50533621651786
patch: time += $NUMBER$ ; } ;
rank: 846
score: 98.46485246930804
patch: days += $NUMBER$ -= $NUMBER$ ;
rank: 846
score: 98.39698137555804
patch: now = $NUMBER$ * $NUMBER$ ;
rank: 846
score: 98.18056030273438
patch: x = $NUMBER$ ;
rank: 847
score: 98.61703055245536
patch: days ; days = days ;
rank: 847
score: 98.59079996744792
patch: days += $NUMBER$ - ;
rank: 847
score: 98.50335693359375
patch: final days += $NUMBER$ ;
rank: 847
score: 98.46453857421875
patch: days -= Calendar . MILLISECOND ;
rank: 847
score: 98.39644077845982
patch: sb . days += $NUMBER$ ;
rank: 847
score: 98.27324829101562
patch: j += 1 ;
rank: 847
score: 98.17921142578125
patch: bytes += $NUMBER$ ;
rank: 848
score: 98.61622837611607
patch: days += - += 1 ;
rank: 848
score: 98.50279017857143
patch: days += $NUMBER$ * DATE ;
rank: 848
score: 98.46097237723214
patch: days -= 1 - years ;
rank: 848
score: 98.39576067243304
patch: days += $NUMBER$ / ceil ;
rank: 848
score: 98.26476440429687
patch: months = minutes ;
rank: 848
score: 98.1867167154948
patch: days += $STRING$ ; else
rank: 849
score: 98.61399623325893
patch: days = days + 0 ;
rank: 849
score: 98.58812459309895
patch: } days += 0 ;
rank: 849
score: 98.46016148158482
patch: days += Calendar . years ;
rank: 849
score: 98.39568219866071
patch: days = days % $NUMBER$ ;
rank: 849
score: 98.1846211751302
patch: days . += 0 ;
rank: 849
score: 98.17753295898437
patch: h += $NUMBER$ ;
rank: 850
score: 98.61363002232143
patch: days += end += $NUMBER$ ;
rank: 850
score: 98.58619907924107
patch: days += 0 ; ; }
rank: 850
score: 98.45998709542411
patch: days -= 1 * seconds ;
rank: 850
score: 98.39298095703126
patch: year += $NUMBER$ ;
rank: 850
score: 98.24706420898437
patch: seconds = seconds ;
rank: 850
score: 98.184130859375
patch: days += max ;
rank: 850
score: 98.177099609375
patch: init ( ) ;
rank: 851
score: 98.73807198660714
patch: months += 1 ; } }
rank: 851
score: 98.23809204101562
patch: months = seconds ;
rank: 851
score: 98.18409220377605
patch: if $NUMBER$ += 1 ;
rank: 851
score: 98.17029418945313
patch: days = millis ;
rank: 852
score: 98.73572649274554
patch: seconds += 1 ; } }
rank: 852
score: 98.58462960379464
patch: days [ += 1 ] ;
rank: 852
score: 98.49632045200893
patch: day += $NUMBER$ * time ;
rank: 852
score: 98.39190673828125
patch: days ^= $NUMBER$ ; }
rank: 852
score: 98.18147583007813
patch: $NUMBER$ += $NUMBER$ ;
rank: 853
score: 98.72144426618304
patch: minutes -= 1 ; } }
rank: 853
score: 98.61136300223214
patch: days += days ; $NUMBER$ ;
rank: 853
score: 98.49598039899554
patch: days ++ ; if ( ;
rank: 853
score: 98.44905308314732
patch: days += 1 - hours ;
rank: 853
score: 98.391650390625
patch: time = days ;
rank: 853
score: 98.2361328125
patch: months = hours ;
rank: 853
score: 98.20093383789063
patch: s += $NUMBER$ ;
rank: 853
score: 98.17015380859375
patch: days <= $NUMBER$ ;
rank: 853
score: 98.16189575195312
patch: seconds = days ;
rank: 854
score: 98.72129603794643
patch: hours -= $NUMBER$ ; } }
rank: 854
score: 98.5804443359375
patch: days += 0 . $NUMBER$ ;
rank: 854
score: 98.49400111607143
patch: days += $NUMBER$ / millis ;
rank: 854
score: 98.44499860491071
patch: days += Calendar . 0 ;
rank: 854
score: 98.391357421875
patch: date += $NUMBER$ + $NUMBER$ ;
rank: 854
score: 98.19033203125
patch: end = $NUMBER$ ;
rank: 854
score: 98.16769409179688
patch: days += SIZE ;
rank: 854
score: 98.15318603515625
patch: hours = days ;
rank: 855
score: 98.60566929408482
patch: days * / days -- ;
rank: 855
score: 98.57886614118304
patch: days += 0 & $NUMBER$ ;
rank: 855
score: 98.44224330357143
patch: days += 1 * 1 ;
rank: 855
score: 98.3902587890625
patch: time = $NUMBER$ * time ;
rank: 855
score: 98.16060180664063
patch: days += this ;
rank: 855
score: 98.15173950195313
patch: start = $NUMBER$ ;
rank: 856
score: 98.57852608816964
patch: days += 0 = $NUMBER$ ;
rank: 856
score: 98.43453543526786
patch: days -= 1 + 1 ;
rank: 856
score: 98.39022391183036
patch: long $NUMBER$ days += $NUMBER$ ;
rank: 856
score: 98.221484375
patch: months = days ;
rank: 856
score: 98.184619140625
patch: s += 1 ;
rank: 856
score: 98.1596435546875
patch: days = null ;
rank: 856
score: 98.14850463867188
patch: minutes = hours ;
rank: 857
score: 98.60049874441964
patch: days += start += 0 ;
rank: 857
score: 98.57267761230469
patch: days ; }
rank: 857
score: 98.48947579520089
patch: days += $NUMBER$ * || ;
rank: 857
score: 98.43062918526786
patch: days += Calendar . hours ;
rank: 857
score: 98.39013671875
patch: days += $NUMBER$ + YEAR ;
rank: 857
score: 98.18273315429687
patch: s -= 1 ;
rank: 857
score: 98.15592041015626
patch: days * 0 ;
rank: 857
score: 98.14083862304688
patch: milliseconds = hours ;
rank: 858
score: 98.57123674665179
patch: days = $NUMBER$ - days ;
rank: 858
score: 98.43024553571429
patch: days -= 1 - days ;
rank: 858
score: 98.1780517578125
patch: result -= 1 ;
rank: 858
score: 98.14921569824219
patch: += $NUMBER$ ;
rank: 858
score: 98.1392333984375
patch: hours = hours ;
rank: 859
score: 98.67386300223214
patch: months += $NUMBER$ ; } }
rank: 859
score: 98.48709542410714
patch: cal += $NUMBER$ * time ;
rank: 859
score: 98.42925153459821
patch: days -= $NUMBER$ * months ;
rank: 859
score: 98.17664184570313
patch: pos += 1 ;
rank: 859
score: 98.1456298828125
patch: days $NUMBER$ $NUMBER$
rank: 859
score: 98.13917846679688
patch: milliseconds = milliseconds ;
rank: 860
score: 98.6715087890625
patch: hours += 0 ; }
rank: 860
score: 98.59664481026786
patch: days -- ; += $NUMBER$ ;
rank: 860
score: 98.55990164620536
patch: days += 0 - days ;
rank: 860
score: 98.42804827008929
patch: days += 1 + years ;
rank: 860
score: 98.17518310546875
patch: pos += $NUMBER$ ;
rank: 860
score: 98.13758544921875
patch: num += 1 ;
rank: 860
score: 98.1291015625
patch: days += ; days
rank: 861
score: 98.66990443638393
patch: seconds += $NUMBER$ ; } }
rank: 861
score: 98.59641810825893
patch: days * ; { break ;
rank: 861
score: 98.55391438802083
patch: days ; days ++ ;
rank: 861
score: 98.42653111049107
patch: days += $NUMBER$ - years ;
rank: 861
score: 98.3866475423177
patch: end += $NUMBER$ ; }
rank: 861
score: 98.13594970703124
patch: months = years ;
rank: 861
score: 98.1146484375
patch: days += end ;
rank: 862
score: 98.38258870442708
patch: days >> $NUMBER$ ; }
rank: 862
score: 98.19432373046875
patch: j = $NUMBER$ ;
rank: 862
score: 98.17327880859375
patch: t -= 1 ;
rank: 862
score: 98.13515625
patch: bytes += 1 ;
rank: 863
score: 98.65213448660714
patch: seconds -= 1 ; } }
rank: 863
score: 98.59529331752232
patch: } days += - 1 ;
rank: 863
score: 98.42227608816964
patch: days += 1 * 0 ;
rank: 864
score: 98.64940534319196
patch: milliseconds += 1 ; } }
rank: 864
score: 98.48295375279018
patch: new days += $NUMBER$ ; }
rank: 864
score: 98.42200578962054
patch: days = milliseconds -= 1 ;
rank: 864
score: 98.38062540690105
patch: priority += $NUMBER$ ; }
rank: 864
score: 98.1296630859375
patch: minutes = years ;
rank: 864
score: 98.08623046875
patch: days $NUMBER$ ; ;
rank: 865
score: 98.59441266741071
patch: days += - days ; ;
rank: 865
score: 98.54768589564732
patch: days ; } return days ;
rank: 865
score: 98.48280552455357
patch: days += $NUMBER$ $NUMBER$ * ;
rank: 865
score: 98.42103794642857
patch: days -= $NUMBER$ -= 1 ;
rank: 865
score: 98.37394205729167
patch: start . set ( ;
rank: 865
score: 98.07098388671875
patch: days * 1 ;
rank: 866
score: 98.64088657924107
patch: months -= 1 ; } }
rank: 866
score: 98.59141322544643
patch: days * days += days ;
rank: 866
score: 98.54752022879464
patch: days ++ ; if ; }
rank: 866
score: 98.48026820591518
patch: days += $NUMBER$ - SECOND ;
rank: 866
score: 98.16368408203125
patch: t += $NUMBER$ ;
rank: 866
score: 98.12730102539062
patch: h += 1 ;
rank: 866
score: 98.03939208984374
patch: days += ; {
rank: 867
score: 98.63677978515625
patch: minutes -= $NUMBER$ ; } }
rank: 867
score: 98.4800516764323
patch: day += $NUMBER$ ; }
rank: 868
score: 98.61221749441964
patch: milliseconds += $NUMBER$ ; } }
rank: 868
score: 98.58600725446429
patch: days += * - 1 ;
rank: 868
score: 98.40821184430804
patch: days -= 1 + $NUMBER$ ;
rank: 868
score: 98.34639485677083
patch: days += time ; }
rank: 868
score: 98.15864868164063
patch: milliseconds = months ;
rank: 868
score: 98.12561645507813
patch: reset ( ) ;
rank: 869
score: 98.607177734375
patch: minutes += 0 ; }
rank: 869
score: 98.58599853515625
patch: days += days ; ;
rank: 869
score: 98.54193987165179
patch: days ++ ; * * /
rank: 869
score: 98.47779192243304
patch: days += $NUMBER$ * $STRING$ ;
rank: 869
score: 98.40774536132812
patch: days < 0 ) {
rank: 869
score: 98.3429667154948
patch: days |= 0 ; }
rank: 869
score: 98.01900482177734
patch: if $NUMBER$ ;
rank: 870
score: 98.54121616908482
patch: if ( days == 0 ;
rank: 870
score: 98.47638811383929
patch: days += 1 / days ;
rank: 870
score: 98.40771484375
patch: days = seconds -= $NUMBER$ ;
rank: 870
score: 98.34185791015625
patch: limit += $NUMBER$ ; }
rank: 870
score: 98.15146484375
patch: result -= $NUMBER$ ;
rank: 870
score: 97.9997802734375
patch: days += YEAR ;
rank: 871
score: 98.47434779575893
patch: days += $NUMBER$ - MINUTE ;
rank: 871
score: 98.40758405412946
patch: days += $NUMBER$ + years ;
rank: 871
score: 98.33468627929688
patch: long time = days ;
rank: 871
score: 97.97128295898438
patch: days days $NUMBER$ ;
rank: 872
score: 98.58439418247768
patch: milliseconds -= 1 ; } }
rank: 872
score: 98.58262416294643
patch: try { days = $NUMBER$ ;
rank: 872
score: 98.53662981305804
patch: days = days * 1 ;
rank: 872
score: 98.40584019252232
patch: days += $NUMBER$ * milliseconds ;
rank: 872
score: 98.10939331054688
patch: millis = $NUMBER$ ;
rank: 872
score: 97.96258544921875
patch: days += ; ;
rank: 873
score: 98.58101109095982
patch: days * days ; break ;
rank: 873
score: 98.57457478841145
patch: years += 1 ; }
rank: 873
score: 98.47140066964286
patch: year += $NUMBER$ * time ;
rank: 873
score: 98.40287562779018
patch: days += days * 1 ;
rank: 873
score: 98.32691446940105
patch: days >> -- ; }
rank: 873
score: 98.10608520507813
patch: minutes = days ;
rank: 873
score: 97.9466552734375
patch: days
rank: 874
score: 98.57828776041667
patch: days += * days ;
rank: 874
score: 98.57150268554688
patch: hours -= 0 ; }
rank: 874
score: 98.53447614397321
patch: days ++ ; += 1 ;
rank: 874
score: 98.47139195033482
patch: new ; days += $NUMBER$ ;
rank: 874
score: 98.141650390625
patch: t += 1 ;
rank: 874
score: 97.93706665039062
patch: days < 0 ;
rank: 875
score: 98.3780517578125
patch: days = 1 ; }
rank: 875
score: 98.31622314453125
patch: days ^= $NUMBER$ ;
rank: 875
score: 98.1361572265625
patch: seconds -= $STRING$ ;
rank: 875
score: 98.09959106445312
patch: bytes -= 1 ;
rank: 875
score: 97.93440551757813
patch: days = m ;
rank: 876
score: 98.57670375279018
patch: days * ; days -- ;
rank: 876
score: 98.531982421875
patch: minutes -= 0 ; }
rank: 876
score: 98.30971272786458
patch: scale += $NUMBER$ ; }
rank: 876
score: 98.29976399739583
patch: days += -= 1 ;
rank: 876
score: 98.17449951171875
patch: hours = minutes ;
rank: 876
score: 98.09931640625
patch: num += $NUMBER$ ;
rank: 876
score: 97.93057250976562
patch: days += $NUMBER$ $NUMBER$
rank: 877
score: 98.57204764229911
patch: days += ; += $STRING$ ;
rank: 877
score: 98.52717808314732
patch: days [ += $NUMBER$ ; }
rank: 877
score: 98.46463448660714
patch: days += $NUMBER$ + millis ;
rank: 877
score: 98.3062032063802
patch: int days = days ;
rank: 877
score: 98.283837890625
patch: days += years ;
rank: 877
score: 98.13242797851562
patch: seconds += $STRING$ ;
rank: 877
score: 98.098583984375
patch: 0 += 1 ;
rank: 877
score: 97.91690673828126
patch: days += BYTES ;
rank: 878
score: 98.52091761997768
patch: days += $NUMBER$ 1 ; }
rank: 878
score: 98.51795450846355
patch: seconds += 0 ; }
rank: 878
score: 98.4643310546875
patch: days += $NUMBER$ )
rank: 878
score: 98.3048095703125
patch: days += $NUMBER$ long ;
rank: 878
score: 98.2815450032552
patch: days * -= 1 ;
rank: 878
score: 98.13003540039062
patch: days -= $STRING$ ;
rank: 878
score: 98.09754638671875
patch: hours = format ;
rank: 878
score: 97.910400390625
patch: days += min ;
rank: 879
score: 98.52044677734375
patch: days += 0 . 0 ;
rank: 879
score: 98.51126708984376
patch: days >> 1 ;
rank: 879
score: 98.30436197916667
patch: double $NUMBER$ = days ;
rank: 879
score: 98.27730712890624
patch: days *= 1 ;
rank: 879
score: 98.12812805175781
patch: return format ;
rank: 879
score: 97.90969848632812
patch: days return $NUMBER$ ;
rank: 880
score: 98.5110371907552
patch: milliseconds += 0 ; }
rank: 880
score: 98.45867919921875
patch: days += $NUMBER$ - millis ;
rank: 880
score: 98.27501220703125
patch: days += minutes ;
rank: 880
score: 98.16616821289062
patch: i += $NUMBER$ ;
rank: 880
score: 98.12470092773438
patch: t -= $NUMBER$ ;
rank: 880
score: 98.09743041992188
patch: days = end ;
rank: 880
score: 97.9073994954427
patch: days ;
rank: 881
score: 98.48980712890625
patch: years -= 1 ; }
rank: 881
score: 98.45839436848958
patch: days -= $NUMBER$ * ;
rank: 881
score: 98.3003438313802
patch: start . get ( ;
rank: 881
score: 98.27103678385417
patch: days += years ; }
rank: 881
score: 98.0938720703125
patch: x -= $NUMBER$ ;
rank: 881
score: 97.90672607421875
patch: days += start .
rank: 882
score: 98.48482259114583
patch: days >> 1 ; }
rank: 882
score: 98.1639404296875
patch: len += $NUMBER$ ;
rank: 882
score: 98.09147338867187
patch: seconds += hours ;
rank: 882
score: 97.9033203125
patch: days += time .
rank: 883
score: 98.56667654854911
patch: days * * 1 ; ;
rank: 883
score: 98.4560546875
patch: days += 1 * millis ;
rank: 883
score: 98.29393513997395
patch: days |= $NUMBER$ ; ;
rank: 883
score: 98.26906331380208
patch: days += minutes ; }
rank: 883
score: 98.1205322265625
patch: s -= $NUMBER$ ;
rank: 883
score: 97.89788208007812
patch: days = start ;
rank: 884
score: 98.56621442522321
patch: days += 0 ; += ;
rank: 884
score: 98.47265625
patch: months += 0 ; }
rank: 884
score: 98.45472063337054
patch: days += 1 * MINUTE ;
rank: 884
score: 98.2913818359375
patch: long $NUMBER$ -= $NUMBER$ ;
rank: 884
score: 98.26634724934895
patch: days += hours ; }
rank: 884
score: 98.089453125
patch: x -= 1 ;
rank: 884
score: 97.8955322265625
patch: days += MINUTE ;
rank: 885
score: 98.56597028459821
patch: days ++ ; days else {
rank: 885
score: 98.51639229910714
patch: days += 0 ; } else
rank: 885
score: 98.45420619419643
patch: days += 1 * SECOND ;
rank: 885
score: 98.26529541015626
patch: days += hours ;
rank: 885
score: 98.11822509765625
patch: pos -= 1 ;
rank: 885
score: 98.08817749023437
patch: days + $NUMBER$ ;
rank: 885
score: 97.8813720703125
patch: days = time ;
rank: 886
score: 98.56556047712054
patch: days += ; - $NUMBER$ ;
rank: 886
score: 98.51443045479911
patch: days ; = $NUMBER$ ; }
rank: 886
score: 98.45378766741071
patch: days += time / $NUMBER$ ;
rank: 886
score: 98.26280721028645
patch: days += -= $NUMBER$ ;
rank: 886
score: 98.15704345703125
patch: off += $NUMBER$ ;
rank: 886
score: 98.10653686523438
patch: months = months ;
rank: 886
score: 98.087744140625
patch: clear ( ) ;
rank: 886
score: 97.86763916015624
patch: if += 0 ;
rank: 887
score: 98.56454903738839
patch: days ++ ; $NUMBER$ * /
rank: 887
score: 98.45195661272321
patch: days += $NUMBER$ + ( ;
rank: 887
score: 98.28633626302083
patch: timeout += $NUMBER$ ; }
rank: 887
score: 98.15690307617187
patch: days = true ;
rank: 887
score: 98.08668823242188
patch: y -= 1 ;
rank: 887
score: 97.845751953125
patch: days += ++ ;
rank: 888
score: 98.56057739257812
patch: days * * $STRING$ ;
rank: 888
score: 98.4508565266927
patch: seconds -= 0 ; }
rank: 888
score: 98.44703020368304
patch: sb . append ( $NUMBER$ ;
rank: 888
score: 98.28026326497395
patch: days += $NUMBER$ float ;
rank: 888
score: 98.24476114908855
patch: days -= -= 1 ;
rank: 888
score: 98.1047607421875
patch: months = $STRING$ ;
rank: 888
score: 98.08453369140625
patch: max -= 1 ;
rank: 888
score: 97.8453598022461
patch: days += ;
rank: 889
score: 98.44708251953125
patch: milliseconds -= 0 ; }
rank: 889
score: 98.44633265904018
patch: if ( days == 0 )
rank: 889
score: 98.2801005045573
patch: double $NUMBER$ += $NUMBER$ ;
rank: 889
score: 98.2293701171875
patch: days * -= $NUMBER$ ;
rank: 889
score: 98.15526123046875
patch: c = $NUMBER$ ;
rank: 889
score: 98.1025634765625
patch: result += 1 ;
rank: 889
score: 98.0835693359375
patch: days + 1 ;
rank: 889
score: 97.84378662109376
patch: days += max .
rank: 890
score: 98.44594029017857
patch: new Integer ( days ) ;
rank: 890
score: 98.15133056640624
patch: j -= 1 ;
rank: 890
score: 98.09425048828125
patch: contextual += $NUMBER$ ;
rank: 890
score: 98.08350219726563
patch: y -= $NUMBER$ ;
rank: 890
score: 97.84091796875
patch: days += abs ;
rank: 891
score: 98.5071512858073
patch: days ; if ; }
rank: 891
score: 98.44517299107143
patch: month += $NUMBER$ * $NUMBER$ ;
rank: 891
score: 98.4272216796875
patch: days >> $NUMBER$ ;
rank: 891
score: 98.26638793945312
patch: days += $NUMBER$ double ;
rank: 891
score: 98.22566731770833
patch: days *= 1 ; }
rank: 891
score: 97.84056396484375
patch: days = false ;
rank: 892
score: 98.20420328776042
patch: days -= -= $NUMBER$ ;
rank: 892
score: 98.08787231445312
patch: pos = $NUMBER$ ;
rank: 892
score: 98.07794189453125
patch: buf += 1 ;
rank: 892
score: 97.833544921875
patch: days < 1 ;
rank: 893
score: 98.54231770833333
patch: days += / 1 ;
rank: 893
score: 98.25885009765625
patch: start . days -- ;
rank: 893
score: 98.19872029622395
patch: days += seconds ; }
rank: 893
score: 98.0762451171875
patch: m += $NUMBER$ ;
rank: 893
score: 97.82913818359376
patch: days += $NUMBER$ {
rank: 894
score: 98.54219563802083
patch: days ] = 0 ;
rank: 894
score: 98.49106852213542
patch: days * * * /
rank: 894
score: 98.44134521484375
patch: days += 0 * time ;
rank: 894
score: 98.25665283203125
patch: start . add ( ;
rank: 894
score: 98.19368286132813
patch: days -= days ;
rank: 894
score: 98.1432373046875
patch: hours = seconds ;
rank: 894
score: 98.0761962890625
patch: seconds += days ;
rank: 894
score: 97.826171875
patch: return $NUMBER$ ; ;
rank: 895
score: 98.54020182291667
patch: days += - 0 ;
rank: 895
score: 98.47467041015625
patch: days ; break ; }
rank: 895
score: 98.39915974934895
patch: years -= $NUMBER$ ; }
rank: 895
score: 98.25440470377605
patch: days |= 1 ; }
rank: 895
score: 98.19273885091145
patch: days <= 0 ) {
rank: 895
score: 97.825732421875
patch: days += Math .
rank: 896
score: 98.53230794270833
patch: return days - $NUMBER$ ;
rank: 896
score: 98.47216796875
patch: days ++ ; if ;
rank: 896
score: 98.2532450358073
patch: date += $NUMBER$ ; }
rank: 896
score: 98.18524169921875
patch: days += seconds ;
rank: 896
score: 98.068359375
patch: pos -= $NUMBER$ ;
rank: 896
score: 97.81943969726562
patch: days if $NUMBER$ ;
rank: 897
score: 98.45928955078125
patch: days += 0 + ;
rank: 897
score: 98.42449951171875
patch: time += $NUMBER$ * ;
rank: 897
score: 98.39479573567708
patch: months -= 0 ; }
rank: 897
score: 98.25110880533855
patch: days = $NUMBER$ * ;
rank: 897
score: 98.06845703125
patch: bytes -= $NUMBER$ ;
rank: 897
score: 98.06678466796875
patch: d += $NUMBER$ ;
rank: 897
score: 97.81922607421875
patch: days <= 0 ;
rank: 898
score: 98.5186767578125
patch: days += - $STRING$ ;
rank: 898
score: 98.39158121744792
patch: int seconds += 1 ;
rank: 898
score: 98.25030517578125
patch: start = $NUMBER$ ; }
rank: 898
score: 98.06807250976563
patch: minutes = minutes ;
rank: 898
score: 98.06558990478516
patch: return 1 ;
rank: 898
score: 97.81897583007813
patch: days = this ;
rank: 899
score: 98.51687622070312
patch: days : days $NUMBER$ ;
rank: 899
score: 98.37591552734375
patch: int days += 1 ;
rank: 899
score: 98.2426045735677
patch: double $NUMBER$ -= $NUMBER$ ;
rank: 899
score: 98.17432657877605
patch: days $NUMBER$ -= 1 ;
rank: 899
score: 98.06577758789062
patch: hours + $NUMBER$ ;
rank: 899
score: 97.81871948242187
patch: days * $NUMBER$ /
rank: 900
score: 98.2424825032552
patch: start ; days ++ ;
rank: 900
score: 98.16808064778645
patch: days >= 0 ) {
rank: 900
score: 97.81755981445312
patch: days += LONG ;
rank: 901
score: 98.50478108723958
patch: } days = days ;
rank: 901
score: 98.39957275390626
patch: cal += $NUMBER$ ;
rank: 901
score: 98.24152221679688
patch: date += $NUMBER$ ;
rank: 901
score: 98.06014404296874
patch: months -= $STRING$ ;
rank: 901
score: 97.81663818359375
patch: $NUMBER$ += 1 ;
rank: 902
score: 98.50204467773438
patch: days catch += $STRING$ ;
rank: 902
score: 98.3896484375
patch: month += $NUMBER$ ; }
rank: 902
score: 98.36667887369792
patch: days > 0 ) {
rank: 902
score: 98.24130249023438
patch: long days = 0 ;
rank: 902
score: 98.16112263997395
patch: return months -= 1 ;
rank: 902
score: 98.061474609375
patch: milliseconds = years ;
rank: 902
score: 97.8146728515625
patch: days += s ;
rank: 903
score: 98.50094604492188
patch: days end = $NUMBER$ ;
rank: 903
score: 98.23441569010417
patch: days += >= $NUMBER$ ;
rank: 903
score: 98.16082763671875
patch: days += months ;
rank: 903
score: 98.0614013671875
patch: z += $NUMBER$ ;
rank: 903
score: 97.81121826171875
patch: days += -- ;
rank: 904
score: 98.35655721028645
patch: days <= 0 ; }
rank: 904
score: 98.23401896158855
patch: int $NUMBER$ = $NUMBER$ ;
rank: 904
score: 98.15899658203125
patch: days = -= 1 ;
rank: 904
score: 98.13101806640626
patch: i -= $NUMBER$ ;
rank: 904
score: 98.05742797851562
patch: hours += days ;
rank: 904
score: 97.80654296875
patch: days += length ;
rank: 905
score: 98.40890502929688
patch: days += ( ;
rank: 905
score: 98.36923828125
patch: days += ; }
rank: 905
score: 98.35470581054688
patch: days >> 0 ; }
rank: 905
score: 98.23312377929688
patch: time = days ; }
rank: 905
score: 98.15841674804688
patch: days += months ; }
rank: 905
score: 97.80643717447917
patch: days else
rank: 906
score: 98.3489481608073
patch: Date CaMeL Utils . ;
rank: 906
score: 98.23294677734376
patch: date = days ;
rank: 906
score: 98.15570068359375
patch: days = months ; }
rank: 906
score: 98.1279296875
patch: i -= 1 ;
rank: 906
score: 98.0482666015625
patch: milliseconds = days ;
rank: 906
score: 98.03985595703125
patch: months += $STRING$ ;
rank: 906
score: 97.80518798828125
patch: days = $NUMBER$ $NUMBER$
rank: 907
score: 98.47984822591145
patch: } days += days ;
rank: 907
score: 98.3944803873698
patch: days ++ ; } }
rank: 907
score: 98.34663899739583
patch: long days += 1 ;
rank: 907
score: 98.15048217773438
patch: days -= minutes ;
rank: 907
score: 98.04486694335938
patch: hours = timezone ;
rank: 907
score: 97.8032958984375
patch: days += Integer ;
rank: 908
score: 98.47772216796875
patch: days else = $NUMBER$ ;
rank: 908
score: 98.33731079101562
patch: long days ++ ;
rank: 908
score: 98.1504618326823
patch: days = minutes ; }
rank: 908
score: 98.04434204101562
patch: minutes = seconds ;
rank: 908
score: 98.03475341796874
patch: contextual -= $NUMBER$ ;
rank: 909
score: 98.47408040364583
patch: return days + $NUMBER$ ;
rank: 909
score: 98.2188720703125
patch: double $NUMBER$ *= $NUMBER$ ;
rank: 909
score: 98.15038045247395
patch: days -= days ; }
rank: 909
score: 98.04159545898438
patch: seconds + 1 ;
rank: 909
score: 98.03311767578126
patch: months <= $NUMBER$ ;
rank: 909
score: 97.80000610351563
patch: days -- ; ;
rank: 910
score: 98.3906758626302
patch: days ; days ; }
rank: 910
score: 98.3361104329427
patch: days += $NUMBER$ ) {
rank: 910
score: 98.21197509765625
patch: days * $NUMBER$ ; }
rank: 910
score: 98.115576171875
patch: interrupt ( ) ;
rank: 910
score: 98.0403076171875
patch: dispose ( ) ;
rank: 911
score: 98.46539306640625
patch: days += ; $NUMBER$ ;
rank: 911
score: 98.33416748046875
patch: new days += $NUMBER$ ;
rank: 911
score: 98.1415506998698
patch: days . -= 1 ;
rank: 911
score: 98.1071533203125
patch: j -= $NUMBER$ ;
rank: 911
score: 98.03942260742187
patch: hours + 1 ;
rank: 911
score: 98.028662109375
patch: months + 1 ;
rank: 911
score: 97.78853759765624
patch: days <= 1 ;
rank: 912
score: 98.4629618326823
patch: days catch += 1 ;
rank: 912
score: 98.38209025065105
patch: days += true ; }
rank: 912
score: 98.2083740234375
patch: off += $NUMBER$ ; }
rank: 912
score: 98.14093627929688
patch: days -= years ;
rank: 912
score: 98.10184326171876
patch: months = milliseconds ;
rank: 912
score: 98.034765625
patch: c += $NUMBER$ ;
rank: 912
score: 97.78496704101562
patch: days += $NUMBER$ ,
rank: 913
score: 98.3734619140625
patch: days ++ ; ;
rank: 913
score: 98.31894938151042
patch: time += $NUMBER$ ; ;
rank: 913
score: 98.13880411783855
patch: days = hours ; }
rank: 913
score: 98.03463134765624
patch: max = $NUMBER$ ;
rank: 913
score: 97.78367919921875
patch: days += Double ;
rank: 914
score: 98.37308959960937
patch: days *= 0 ;
rank: 914
score: 98.29498291015625
patch: days >> 0 ;
rank: 914
score: 98.1957499186198
patch: days += Math . ;
rank: 914
score: 98.1375
patch: days -= hours ;
rank: 914
score: 98.03452758789062
patch: seconds = format ;
rank: 914
score: 97.7827392578125
patch: days += MONTH ;
rank: 915
score: 98.19483032226563
patch: limit += $NUMBER$ ;
rank: 915
score: 98.13231404622395
patch: days < 1 ) {
rank: 915
score: 98.03323974609376
patch: minutes + 1 ;
rank: 915
score: 98.02163696289062
patch: contextual -= 1 ;
rank: 916
score: 98.4491678873698
patch: days * / break ;
rank: 916
score: 98.35779825846355
patch: days ++ ; * /
rank: 916
score: 98.284521484375
patch: hours >> 1 ;
rank: 916
score: 98.19140625
patch: end . days ++ ;
rank: 916
score: 98.08920288085938
patch: months = timezone ;
rank: 916
score: 98.02001953125
patch: d += 1 ;
rank: 917
score: 98.44775390625
patch: days days += days ;
rank: 917
score: 98.34999593098958
patch: days ; * * /
rank: 917
score: 98.2313232421875
patch: hours >> $NUMBER$ ;
rank: 917
score: 98.19115193684895
patch: days : days ++ ;
rank: 917
score: 98.12923177083333
patch: days -= - 1 ;
rank: 917
score: 98.088232421875
patch: i += 1 ;
rank: 917
score: 98.030126953125
patch: minutes = format ;
rank: 917
score: 97.7680908203125
patch: days += y ;
rank: 918
score: 98.29102579752605
patch: long days *= $NUMBER$ ;
rank: 918
score: 98.1904296875
patch: end . get ( ;
rank: 918
score: 98.12858072916667
patch: return months -= $NUMBER$ ;
rank: 918
score: 98.02835083007812
patch: num -= 1 ;
rank: 919
score: 98.34964599609376
patch: days ; * /
rank: 919
score: 98.28814697265625
patch: day += $NUMBER$ ;
rank: 919
score: 98.21437377929688
patch: minutes >> 1 ;
rank: 919
score: 98.18935139973958
patch: days ++ ; break ;
rank: 919
score: 98.01221923828125
patch: hours += $STRING$ ;
rank: 919
score: 97.74235534667969
patch: += 1 ;
rank: 920
score: 98.43888346354167
patch: return days += $NUMBER$ ;
rank: 920
score: 98.34910074869792
patch: days * days ; }
rank: 920
score: 98.27523803710938
patch: days ++ ; ; }
rank: 920
score: 98.18861897786458
patch: start . start ( ;
rank: 920
score: 98.18114013671875
patch: months >> 1 ;
rank: 920
score: 98.02207641601562
patch: y = $NUMBER$ ;
rank: 920
score: 98.00816650390625
patch: seconds = months ;
rank: 920
score: 97.72181701660156
patch: days days ;
rank: 921
score: 98.34898885091145
patch: } days += 1 ;
rank: 921
score: 98.126220703125
patch: days $NUMBER$ -= $NUMBER$ ;
rank: 921
score: 98.00631103515624
patch: ex -= 1 ;
rank: 921
score: 97.67586517333984
patch: return days ;
rank: 922
score: 98.42063395182292
patch: days * days $NUMBER$ ;
rank: 922
score: 98.02019653320312
patch: minutes += days ;
rank: 922
score: 98.0052734375
patch: s = $NUMBER$ ;
rank: 922
score: 97.6394551595052
patch: days $NUMBER$
rank: 923
score: 98.06837768554688
patch: months = millis ;
rank: 923
score: 97.61494445800781
patch: days else ;
rank: 924
score: 98.40555826822917
patch: days : days * /
rank: 924
score: 98.32928466796875
patch: days += false ; }
rank: 924
score: 98.26680501302083
patch: days += ; ; }
rank: 924
score: 98.17897542317708
patch: float $NUMBER$ = days ;
rank: 924
score: 98.14757080078125
patch: minutes >> $NUMBER$ ;
rank: 924
score: 98.11948649088542
patch: days -= minutes ; }
rank: 924
score: 98.01121826171875
patch: max -= $NUMBER$ ;
rank: 924
score: 98.00178833007813
patch: flush ( ) ;
rank: 924
score: 97.56391906738281
patch: days ; days
rank: 925
score: 98.40419311523438
patch: return days $NUMBER$ ;
rank: 925
score: 98.3232930501302
patch: days *= 0 ; }
rank: 925
score: 98.2662353515625
patch: days += $NUMBER$ % ;
rank: 925
score: 98.17824300130208
patch: long $NUMBER$ *= $NUMBER$ ;
rank: 925
score: 98.11728922526042
patch: days >> -= 1 ;
rank: 925
score: 98.06557006835938
patch: months = true ;
rank: 925
score: 98.00877075195312
patch: min += $NUMBER$ ;
rank: 925
score: 98.00171508789063
patch: m += 1 ;
rank: 925
score: 97.53314208984375
patch: days = ;
rank: 926
score: 98.26595052083333
patch: hour += $NUMBER$ ; }
rank: 926
score: 98.17796834309895
patch: end . set ( ;
rank: 926
score: 98.11598714192708
patch: days -= hours ; }
rank: 926
score: 98.06548461914062
patch: days += timezone ;
rank: 926
score: 98.00782470703125
patch: minutes += hours ;
rank: 926
score: 97.5225601196289
patch: days ; ;
rank: 927
score: 98.3201395670573
patch: days ; } if ;
rank: 927
score: 98.11092122395833
patch: days -= years ; }
rank: 927
score: 97.52095794677734
patch: days days $NUMBER$
rank: 928
score: 98.2549540201823
patch: bytes += $NUMBER$ ; }
rank: 928
score: 98.11008707682292
patch: days = -= $NUMBER$ ;
rank: 928
score: 98.05626220703125
patch: seconds += minutes ;
rank: 928
score: 98.00000762939453
patch: months -- ;
rank: 928
score: 97.51544952392578
patch: days $NUMBER$ else
rank: 929
score: 98.4004414876302
patch: days += / $NUMBER$ ;
rank: 929
score: 98.250244140625
patch: days -= 1 ; ;
rank: 929
score: 98.17408243815105
patch: days += $NUMBER$ d ;
rank: 929
score: 98.10940551757812
patch: days . -= $NUMBER$ ;
rank: 929
score: 98.00309448242187
patch: z += 1 ;
rank: 929
score: 97.99815063476562
patch: e += $NUMBER$ ;
rank: 929
score: 97.42829895019531
patch: += 0 ;
rank: 930
score: 98.39959716796875
patch: days = - 0 ;
rank: 930
score: 98.1730244954427
patch: double $NUMBER$ = $NUMBER$ ;
rank: 930
score: 98.10821533203125
patch: long millis = 0 ;
rank: 930
score: 98.05071411132812
patch: days -= timezone ;
rank: 930
score: 98.00071411132812
patch: out -= $NUMBER$ ;
rank: 930
score: 97.997705078125
patch: r += $NUMBER$ ;
rank: 930
score: 97.408447265625
patch: $NUMBER$ $NUMBER$ ;
rank: 931
score: 98.39682006835938
patch: days * * $NUMBER$ ;
rank: 931
score: 98.17068481445312
patch: time = $NUMBER$ ; }
rank: 931
score: 98.100732421875
patch: days += 1 *
rank: 931
score: 98.0891357421875
patch: months >> $NUMBER$ ;
rank: 931
score: 97.4012451171875
patch: days ; $NUMBER$
rank: 932
score: 98.28969319661458
patch: days += ( ; }
rank: 932
score: 98.24424235026042
patch: days += time $NUMBER$ ;
rank: 932
score: 98.1491455078125
patch: days |= 1 ;
rank: 932
score: 98.08900756835938
patch: days > 0 ;
rank: 932
score: 98.07457275390625
patch: days -= seconds ;
rank: 932
score: 97.99865112304687
patch: minutes + $NUMBER$ ;
rank: 932
score: 97.39432525634766
patch: days / ;
rank: 933
score: 98.2382100423177
patch: days += millis ; }
rank: 933
score: 98.10570068359375
patch: gap += $NUMBER$ ;
rank: 933
score: 98.04503784179687
patch: tmp = $NUMBER$ ;
rank: 933
score: 97.99771118164062
patch: hours += hours ;
rank: 933
score: 97.99500732421875
patch: contextual += 1 ;
rank: 933
score: 97.35089111328125
patch: days += $NUMBER$
rank: 934
score: 98.38818359375
patch: days = days += ;
rank: 934
score: 98.08387451171875
patch: hours >> 0 ;
rank: 934
score: 98.07432250976562
patch: timeout += $NUMBER$ ;
rank: 934
score: 98.0500244140625
patch: days << 1 ;
rank: 934
score: 97.99744873046875
patch: min += 1 ;
rank: 934
score: 97.31556701660156
patch: days $NUMBER$ days
rank: 935
score: 98.2305908203125
patch: days += MINUTE ; }
rank: 935
score: 98.07060546875
patch: time = $NUMBER$ ;
rank: 935
score: 98.05363159179687
patch: return $NUMBER$ ; }
rank: 935
score: 97.99576416015626
patch: out += $NUMBER$ ;
rank: 935
score: 97.30325317382812
patch: if $NUMBER$ $NUMBER$
rank: 936
score: 98.28006998697917
patch: days += null ; }
rank: 936
score: 98.22542317708333
patch: MINUTE += $NUMBER$ ; }
rank: 936
score: 98.06674194335938
patch: days >> -- ;
rank: 936
score: 98.02509765625
patch: days -= months ;
rank: 936
score: 97.9951416015625
patch: k += $NUMBER$ ;
rank: 936
score: 97.9900634765625
patch: months + $NUMBER$ ;
rank: 936
score: 97.2952880859375
patch: if $NUMBER$ /
rank: 937
score: 98.37479654947917
patch: days catch += 0 ;
rank: 937
score: 98.224609375
patch: days |= $NUMBER$ * ;
rank: 937
score: 98.0510009765625
patch: milliseconds >> 1 ;
rank: 937
score: 97.99276733398438
patch: minutes = milliseconds ;
rank: 937
score: 97.98966674804687
patch: position += $NUMBER$ ;
rank: 937
score: 97.26893615722656
patch: days else days
rank: 938
score: 98.36836751302083
patch: days end += $NUMBER$ ;
rank: 938
score: 98.27093505859375
patch: days ++ * /
rank: 938
score: 98.0363037109375
patch: len += 1 ;
rank: 938
score: 97.99266357421875
patch: seconds = milliseconds ;
rank: 938
score: 97.98670654296875
patch: milliseconds -= $STRING$ ;
rank: 938
score: 97.98573608398438
patch: days += $NUMBER$ *
rank: 938
score: 97.25354766845703
patch: days days else
rank: 939
score: 98.3677978515625
patch: days += days + ;
rank: 939
score: 98.04844970703125
patch: seconds >> 1 ;
rank: 939
score: 98.048291015625
patch: priority += $NUMBER$ ;
rank: 939
score: 97.99173583984376
patch: hours += years ;
rank: 939
score: 97.98551635742187
patch: position += 1 ;
rank: 939
score: 97.24981689453125
patch: throw $NUMBER$ ;
rank: 940
score: 98.1983133951823
patch: Date days += $NUMBER$ ;
rank: 940
score: 98.03078002929688
patch: month += $NUMBER$ ;
rank: 940
score: 97.98143310546875
patch: days << $NUMBER$ ;
rank: 940
score: 97.24971008300781
patch: days = $NUMBER$
rank: 941
score: 98.19730631510417
patch: YEAR += $NUMBER$ ; }
rank: 941
score: 98.04720458984374
patch: days -= true ;
rank: 941
score: 98.02977905273437
patch: date = $NUMBER$ ;
rank: 941
score: 97.99031982421874
patch: seconds + $NUMBER$ ;
rank: 941
score: 97.9787353515625
patch: days -= SIZE ;
rank: 941
score: 97.24383544921875
patch: days $NUMBER$ .
rank: 942
score: 98.3587137858073
patch: days -- ; break ;
rank: 942
score: 98.209033203125
patch: days |= 0 ;
rank: 942
score: 97.95303955078126
patch: days ^ 1 ;
rank: 942
score: 97.24076843261719
patch: days . days
rank: 943
score: 98.03036499023438
patch: milliseconds += minutes ;
rank: 943
score: 97.98828735351563
patch: k += 1 ;
rank: 943
score: 97.21796417236328
patch: long $NUMBER$ ;
rank: 944
score: 98.3525390625
patch: days else return $NUMBER$ ;
rank: 944
score: 98.20441284179688
patch: days * * ;
rank: 944
score: 97.9758544921875
patch: m -= 1 ;
rank: 944
score: 97.9462158203125
patch: days -= 1 *
rank: 944
score: 97.20758056640625
patch: days * ;
rank: 945
score: 98.351806640625
patch: days : days ; }
rank: 945
score: 97.98345947265625
patch: hours |= $NUMBER$ ;
rank: 945
score: 97.97093505859375
patch: d -= 1 ;
rank: 945
score: 97.20586395263672
patch: days else {
rank: 946
score: 98.3512471516927
patch: days += ; break ;
rank: 946
score: 98.18218383789062
patch: days : if ;
rank: 946
score: 98.01288452148438
patch: start . set ;
rank: 946
score: 97.98243408203125
patch: milliseconds += hours ;
rank: 946
score: 97.97048950195312
patch: hours -= $STRING$ ;
rank: 946
score: 97.14161173502605
patch: $NUMBER$ ;
rank: 947
score: 98.34792073567708
patch: days += start += ;
rank: 947
score: 98.02498779296874
patch: height += $NUMBER$ ;
rank: 947
score: 98.0138671875
patch: minutes >> 0 ;
rank: 947
score: 97.98681640625
patch: days % $NUMBER$ ;
rank: 947
score: 97.97902221679688
patch: years = format ;
rank: 947
score: 97.9685791015625
patch: off += 1 ;
rank: 947
score: 97.13831329345703
patch: if $NUMBER$ days
rank: 948
score: 98.34426879882812
patch: days += / days ;
rank: 948
score: 98.14202880859375
patch: days -- * /
rank: 948
score: 98.06152954101563
patch: long days -- ;
rank: 948
score: 97.9976806640625
patch: hours <= 0 ;
rank: 948
score: 97.97761840820313
patch: out -= 1 ;
rank: 948
score: 97.11429595947266
patch: $NUMBER$ ; days
rank: 949
score: 98.121142578125
patch: days ++ * ;
rank: 949
score: 98.05039672851562
patch: long += $NUMBER$ ;
rank: 949
score: 98.0230224609375
patch: prefix += $NUMBER$ ;
rank: 949
score: 97.82795715332031
patch: seconds -- ;
rank: 949
score: 97.09918212890625
patch: days ; else
rank: 950
score: 98.11910400390624
patch: days ++ ; else
rank: 950
score: 97.9923095703125
patch: milliseconds >> $NUMBER$ ;
rank: 950
score: 97.97571411132813
patch: estimates += $NUMBER$ ;
rank: 950
score: 97.906005859375
patch: days += milliseconds ;
rank: 950
score: 97.81741333007812
patch: milliseconds -- ;
rank: 950
score: 97.09405517578125
patch: days break ;
rank: 951
score: 98.29849853515626
patch: days * days ;
rank: 951
score: 98.02149047851563
patch: time -= $NUMBER$ ;
rank: 951
score: 97.9893798828125
patch: hours ++ ; }
rank: 951
score: 97.9720703125
patch: minutes += years ;
rank: 951
score: 97.90467529296875
patch: days ^ $NUMBER$ ;
rank: 951
score: 97.0743408203125
patch: while $NUMBER$ ;
rank: 952
score: 98.1065673828125
patch: days += millis ;
rank: 952
score: 97.9479248046875
patch: scale += $NUMBER$ ;
rank: 952
score: 97.77986145019531
patch: return 0 ;
rank: 952
score: 97.04307556152344
patch: return time ;
rank: 953
score: 98.0080078125
patch: double days ++ ;
rank: 953
score: 97.9399169921875
patch: long $NUMBER$ -- ;
rank: 953
score: 97.7694320678711
patch: return millis ;
rank: 953
score: 96.7927754720052
patch: days .
rank: 954
score: 98.10587158203126
patch: days / * /
rank: 954
score: 98.00457763671875
patch: YEAR += $NUMBER$ ;
rank: 954
score: 97.98207397460938
patch: days -= false ;
rank: 954
score: 97.72187042236328
patch: hours -- ;
rank: 954
score: 96.7353515625
patch: days days
rank: 955
score: 98.28902587890624
patch: days : days ;
rank: 955
score: 98.0150634765625
patch: months = false ;
rank: 955
score: 97.92060546875
patch: double days -- ;
rank: 955
score: 97.77339172363281
patch: minutes -- ;
rank: 955
score: 97.69493103027344
patch: return years ;
rank: 955
score: 96.70176188151042
patch: days :
rank: 956
score: 98.0836181640625
patch: days ; } }
rank: 956
score: 97.91510009765625
patch: days += $NUMBER$ /
rank: 956
score: 97.8648193359375
patch: retval += $NUMBER$ ;
rank: 956
score: 96.569091796875
patch: days }
rank: 957
score: 98.08138427734374
patch: days ; * ;
rank: 957
score: 98.01488647460937
patch: len -= $NUMBER$ ;
rank: 957
score: 97.64891052246094
patch: return seconds ;
rank: 957
score: 96.54412841796875
patch: days /
rank: 958
score: 98.07625732421874
patch: days ; break ;
rank: 958
score: 97.9080322265625
patch: remaining += $NUMBER$ ;
rank: 958
score: 97.64644622802734
patch: return milliseconds ;
rank: 959
score: 97.9629150390625
patch: seconds >> $NUMBER$ ;
rank: 959
score: 96.3664042154948
patch: days finally
rank: 960
score: 97.93696899414063
patch: hour += $NUMBER$ ;
rank: 960
score: 97.89931640625
patch: severity += $NUMBER$ ;
rank: 960
score: 97.61125183105469
patch: return minutes ;
rank: 960
score: 96.1407470703125
patch: / ;
rank: 961
score: 98.0616455078125
patch: days : * /
rank: 961
score: 97.94889526367187
patch: hours += true ;
rank: 961
score: 97.93045654296876
patch: HOUR += $NUMBER$ ;
rank: 961
score: 97.84450073242188
patch: days -= $NUMBER$ *
rank: 961
score: 97.6944580078125
patch: minutes ++ ;
rank: 961
score: 97.5904541015625
patch: months <= 0
rank: 961
score: 96.12052408854167
patch: $NUMBER$ $NUMBER$
rank: 962
score: 98.23335266113281
patch: days * /
rank: 962
score: 97.94832153320313
patch: tokens += 1 ;
rank: 962
score: 97.91722412109375
patch: return days ; }
rank: 962
score: 97.83248291015624
patch: days -= milliseconds ;
rank: 962
score: 97.66588592529297
patch: seconds ++ ;
rank: 962
score: 97.55514526367188
patch: / * /
rank: 962
score: 96.0283203125
patch: $NUMBER$
rank: 963
score: 98.03651733398438
patch: days ; days ;
rank: 963
score: 97.91416015625
patch: MINUTE += $NUMBER$ ;
rank: 963
score: 97.87791137695312
patch: start = days ;
rank: 963
score: 97.83112182617188
patch: days & $NUMBER$ ;
rank: 963
score: 97.54949188232422
patch: -- $NUMBER$ ;
rank: 963
score: 96.01308186848958
patch: days try
rank: 964
score: 98.0290771484375
patch: days ; } ;
rank: 964
score: 98.008544921875
patch: val += $NUMBER$ ;
rank: 964
score: 97.94536743164062
patch: months >> 0 ;
rank: 964
score: 97.9014404296875
patch: sb . append ;
rank: 964
score: 97.86715698242188
patch: start . ; }
rank: 964
score: 97.654541015625
patch: return hours ;
rank: 964
score: 97.54808044433594
patch: break $NUMBER$ ;
rank: 964
score: 95.98219807942708
patch: $NUMBER$ else
rank: 965
score: 98.19795532226563
patch: days catch $NUMBER$ ;
rank: 965
score: 98.02737426757812
patch: days + 0 ;
rank: 965
score: 98.0077392578125
patch: milliseconds += days ;
rank: 965
score: 97.89481201171876
patch: fmt += $NUMBER$ ;
rank: 965
score: 97.86231689453125
patch: end . ; }
rank: 965
score: 97.54084777832031
patch: return months ;
rank: 965
score: 95.9464823404948
patch: continue ;
rank: 966
score: 98.0230712890625
patch: days ++ $NUMBER$ ;
rank: 966
score: 97.85693359375
patch: start . add ;
rank: 966
score: 97.8251708984375
patch: days / $NUMBER$ ;
rank: 966
score: 97.64482116699219
patch: hours ++ ;
rank: 966
score: 97.51904296875
patch: months ++ ;
rank: 966
score: 95.93555704752605
patch: days do
rank: 967
score: 98.18158569335938
patch: days += * ;
rank: 967
score: 98.01353759765625
patch: days -- $NUMBER$ ;
rank: 967
score: 97.87874755859374
patch: time += 1 ;
rank: 967
score: 97.85682983398438
patch: year = $NUMBER$ ;
rank: 967
score: 97.8181884765625
patch: m -= $NUMBER$ ;
rank: 967
score: 95.87961832682292
patch: days Builder
rank: 968
score: 98.16510620117188
patch: days += - ;
rank: 968
score: 98.008837890625
patch: days = ( ;
rank: 968
score: 97.8063232421875
patch: days -= MINUTE ;
rank: 968
score: 97.6121826171875
patch: milliseconds ++ ;
rank: 968
score: 95.7789815266927
patch: days iterator
rank: 969
score: 98.16421508789062
patch: days ] += ;
rank: 969
score: 97.99006958007813
patch: days ; synchronized ;
rank: 969
score: 97.86129150390624
patch: TIME += $NUMBER$ ;
rank: 969
score: 97.44519805908203
patch: -- 1 ;
rank: 969
score: 95.72152709960938
patch: $NUMBER$ *
rank: 970
score: 97.85911865234375
patch: cal -= $NUMBER$ ;
rank: 970
score: 97.84343872070312
patch: usec += $NUMBER$ ;
rank: 970
score: 97.80501708984374
patch: days -= YEAR ;
rank: 970
score: 97.4287338256836
patch: throw null ;
rank: 970
score: 95.71234130859375
patch: logger ;
rank: 971
score: 97.98726806640624
patch: days >= 0 ;
rank: 971
score: 97.85709228515626
patch: pattern += $NUMBER$ ;
rank: 971
score: 95.23092651367188
patch: try
rank: 972
score: 97.98128051757813
patch: days ; ; }
rank: 972
score: 97.85550537109376
patch: delay += $NUMBER$ ;
rank: 972
score: 97.7925537109375
patch: days -= MONTH ;
rank: 972
score: 97.60506184895833
patch: hours :
rank: 972
score: 97.58892822265625
patch: return start ;
rank: 972
score: 94.94654846191406
patch: /
rank: 973
score: 97.84991455078125
patch: country += $NUMBER$ ;
rank: 973
score: 97.83431396484374
patch: radix += $NUMBER$ ;
rank: 973
score: 97.79188232421875
patch: days += $NUMBER$ _
rank: 973
score: 97.58975982666016
patch: hours : }
rank: 973
score: 97.26676432291667
patch: logger .
rank: 973
score: 94.73690795898438
patch: long
rank: 974
score: 98.0983642578125
patch: value += $NUMBER$ ;
rank: 974
score: 97.8438720703125
patch: days = ; }
rank: 974
score: 97.83377075195312
patch: double $NUMBER$ -- ;
rank: 974
score: 97.77491455078125
patch: retval += 1 ;
rank: 974
score: 97.16835530598958
patch: * /
rank: 974
score: 94.45996856689453
patch: }
rank: 975
score: 98.09596557617188
patch: days $NUMBER$ * /
rank: 975
score: 97.69779205322266
patch: break ; ;
rank: 975
score: 97.53413391113281
patch: return end ;
rank: 975
score: 96.97789510091145
patch: seconds ;
rank: 975
score: 94.38288116455078
patch: {
rank: 976
score: 97.94242553710937
patch: days -- * ;
rank: 976
score: 97.8181884765625
patch: long days = ;
rank: 976
score: 97.80224609375
patch: xform += $NUMBER$ ;
rank: 976
score: 97.6804428100586
patch: return timezone ;
rank: 976
score: 97.49803161621094
patch: return tokens ;
rank: 976
score: 96.97217814127605
patch: months ;
rank: 976
score: 94.35794067382812
patch: logger
rank: 977
score: 98.05136108398438
patch: days += / ;
rank: 977
score: 96.95359293619792
patch: milliseconds ;
rank: 977
score: 94.27735900878906
patch: System
rank: 978
score: 98.04207763671874
patch: days * / /
rank: 978
score: 97.80195922851563
patch: year = days ;
rank: 978
score: 97.79653930664062
patch: expected += $NUMBER$ ;
rank: 978
score: 97.49452209472656
patch: case $NUMBER$ :
rank: 978
score: 96.8333740234375
patch: hours ;
rank: 978
score: 94.07261657714844
patch: this
rank: 979
score: 97.79967041015625
patch: flags += $NUMBER$ ;
rank: 979
score: 96.77073160807292
patch: if (
rank: 979
score: 93.94035339355469
patch: int
rank: 980
score: 97.903759765625
patch: if ( days ;
rank: 980
score: 97.75972900390624
patch: days % 1 ;
rank: 980
score: 97.75841522216797
patch: end . ;
rank: 980
score: 97.7186279296875
patch: if ( ;
rank: 980
score: 97.44270833333333
patch: minutes :
rank: 980
score: 93.91062927246094
patch: LOG
rank: 981
score: 97.71134948730469
patch: start . ;
rank: 981
score: 97.4693832397461
patch: * * /
rank: 981
score: 96.72658284505208
patch: System .
rank: 981
score: 93.76828002929688
patch: else
rank: 982
score: 97.57731628417969
patch: long days ;
rank: 982
score: 97.43103790283203
patch: minutes : }
rank: 982
score: 96.71873982747395
patch: log .
rank: 982
score: 93.5445556640625
patch: ;
rank: 983
score: 98.01671752929687
patch: value = days ;
rank: 983
score: 97.745263671875
patch: retval -= $NUMBER$ ;
rank: 983
score: 97.42583465576172
patch: days : {
rank: 983
score: 97.39479064941406
patch: time ++ ;
rank: 983
score: 96.69537353515625
patch: minutes ;
rank: 983
score: 93.39773559570312
patch: *
rank: 984
score: 97.4129638671875
patch: days : }
rank: 984
score: 97.3560791015625
patch: days -= ;
rank: 984
score: 96.68821207682292
patch: Logger .
rank: 984
score: 93.33152770996094
patch: final
rank: 985
score: 98.00657348632812
patch: i = $NUMBER$ ;
rank: 985
score: 97.27767181396484
patch: return ; }
rank: 985
score: 96.62642415364583
patch: else {
rank: 985
score: 93.27439880371094
patch: sb
rank: 986
score: 97.98924560546875
patch: days * / ;
rank: 986
score: 97.42124938964844
patch: double $NUMBER$ ;
rank: 986
score: 96.53678385416667
patch: milliseconds :
rank: 986
score: 93.13310241699219
patch: start
rank: 987
score: 97.35240936279297
patch: date = ;
rank: 987
score: 96.97916666666667
patch: months :
rank: 987
score: 96.527587890625
patch: Log .
rank: 987
score: 93.12159729003906
patch: do
rank: 988
score: 97.30513000488281
patch: year ++ ;
rank: 988
score: 97.20318603515625
patch: -= $NUMBER$ ;
rank: 988
score: 93.11885070800781
patch: result
rank: 989
score: 97.44234466552734
patch: } if ;
rank: 989
score: 97.19464874267578
patch: time = ;
rank: 989
score: 97.1885986328125
patch: time += ;
rank: 989
score: 92.98985290527344
patch: My@@
rank: 990
score: 97.44078063964844
patch: } days ;
rank: 990
score: 97.16291046142578
patch: millis ++ ;
rank: 990
score: 96.78546142578125
patch: / *
rank: 990
score: 96.75227864583333
patch: seconds :
rank: 990
score: 92.97276306152344
patch: m
rank: 991
score: 97.15079498291016
patch: time -- ;
rank: 991
score: 97.13367462158203
patch: System . ;
rank: 991
score: 92.90603637695312
patch: public
rank: 992
score: 97.39234161376953
patch: days : ;
rank: 992
score: 97.13285827636719
patch: long time ;
rank: 992
score: 96.7677001953125
patch: finally {
rank: 992
score: 96.69724527994792
patch: final ;
rank: 992
score: 92.83836364746094
patch: Calendar
rank: 993
score: 97.08959197998047
patch: sb . ;
rank: 993
score: 96.68119303385417
patch: start .
rank: 993
score: 96.26190185546875
patch: try {
rank: 993
score: 94.92886352539062
patch: Throwable
rank: 993
score: 92.81971740722656
patch: end
rank: 994
score: 97.27338409423828
patch: return $STRING$ ;
rank: 994
score: 96.26656087239583
patch: end ;
rank: 994
score: 96.16591389973958
patch: do {
rank: 994
score: 94.77366638183594
patch: Token
rank: 994
score: 92.81510925292969
patch: buf
rank: 995
score: 97.2616958618164
patch: days ++ }
rank: 995
score: 96.24458821614583
patch: long ;
rank: 995
score: 96.14725748697917
patch: days +=
rank: 995
score: 94.86195373535156
patch: Integer
rank: 995
score: 92.798583984375
patch: re@@
rank: 996
score: 96.17264811197917
patch: return ;
rank: 996
score: 96.15053304036458
patch: -- ;
rank: 996
score: 96.10104370117188
patch: ++ ;
rank: 996
score: 92.78135681152344
patch: Logger
rank: 997
score: 96.56622314453125
patch: for (
rank: 997
score: 96.12762451171875
patch: task ;
rank: 997
score: 96.06441243489583
patch: days -=
rank: 997
score: 94.39591979980469
patch: String
rank: 997
score: 92.73478698730469
patch: double
rank: 998
score: 96.40289306640625
patch: if ;
rank: 998
score: 96.1123758951823
patch: max ;
rank: 998
score: 96.08817545572917
patch: assert ;
rank: 998
score: 92.70042419433594
patch: Assert
rank: 999
score: 96.1456298828125
patch: } ;
rank: 999
score: 96.07708740234375
patch: Millis ;
rank: 999
score: 96.04833984375
patch: new ;
rank: 999
score: 92.69212341308594
patch: w@@
rank: 1000
score: 94.42586517333984
patch: months
rank: 1000
score: 92.6746826171875
patch: buffer
