rank: 1
score: 99.93046611064189
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 1
score: 99.86650254991319
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 1
score: 99.84916759672619
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 2
score: 99.88166852678572
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 2
score: 99.87286698190789
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 2
score: 99.85257036258012
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 2
score: 99.83077566964286
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 3
score: 99.87480083264802
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 3
score: 99.8627697172619
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 3
score: 99.85412248883928
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 3
score: 99.82835338961694
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 3
score: 99.81796603732639
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 4
score: 99.8671875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 4
score: 99.85120307074652
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 4
score: 99.81556595203489
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 4
score: 99.80675048828125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 4
score: 99.76338704427083
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 5
score: 99.84521484375
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 5
score: 99.83430989583333
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 5
score: 99.81444091796875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 5
score: 99.75711398654514
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 6
score: 99.82451985677083
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 6
score: 99.79825406461148
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 6
score: 99.74820337540064
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 7
score: 99.84147481715425
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 7
score: 99.8412887985642
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 7
score: 99.8127381859756
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 7
score: 99.8096336082176
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 7
score: 99.78738141741071
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 7
score: 99.74318788109755
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 8
score: 99.82642663043478
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 8
score: 99.81137827280405
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 8
score: 99.79057276526163
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 8
score: 99.78662769214527
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 8
score: 99.74120415581598
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 9
score: 99.83825913915095
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 9
score: 99.82976252858232
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 9
score: 99.8193591889881
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 10
score: 99.83972516741072
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 10
score: 99.83193108974359
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 10
score: 99.82838104992378
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 10
score: 99.80898305532095
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 10
score: 99.80660363399622
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 10
score: 99.7886493389423
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 10
score: 99.78563096788194
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 10
score: 99.74001662795608
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 11
score: 99.83017202524039
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 11
score: 99.83009690504808
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 11
score: 99.82341851128473
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 11
score: 99.8073199728261
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 11
score: 99.80295012718024
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 11
score: 99.78777581292229
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 11
score: 99.73785400390625
patch: append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 12
score: 99.82934027777777
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 12
score: 99.82086502878289
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 12
score: 99.81852433488176
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 12
score: 99.8057528409091
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 12
score: 99.78670789930555
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 13
score: 99.82921346028645
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 13
score: 99.80137939453125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 13
score: 99.79177676930146
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 13
score: 99.73319811698718
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 14
score: 99.82677691915761
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 14
score: 99.81762069310898
patch: this . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 14
score: 99.80252207880434
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 14
score: 99.79487941576087
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 14
score: 99.79128815406976
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 14
score: 99.78595920138889
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 15
score: 99.80160667782738
patch: folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 15
score: 99.79408892463235
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 15
score: 99.79023180509868
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 15
score: 99.78478690905449
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 16
score: 99.82284740691489
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 16
score: 99.8121308117378
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 16
score: 99.80118815104167
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 16
score: 99.78512137276786
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 16
score: 99.77235855594758
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 16
score: 99.72956104767628
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 17
score: 99.82081956129808
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 17
score: 99.80753326416016
patch: folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 17
score: 99.80104631696429
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 17
score: 99.79173177083334
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 17
score: 99.77982855902778
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 17
score: 99.7293701171875
patch: if ( sb . length ( ) == 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 18
score: 99.82055203419812
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 18
score: 99.80789947509766
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 18
score: 99.79945591517857
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 18
score: 99.78799913194445
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 18
score: 99.78725113407258
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 18
score: 99.78305914463141
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 18
score: 99.77848677201705
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 18
score: 99.72908528645833
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 19
score: 99.81938872466216
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 19
score: 99.80525319169207
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 19
score: 99.79805324388587
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 19
score: 99.78739149305555
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 19
score: 99.78549107142857
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 19
score: 99.76681857638889
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 19
score: 99.7256057326858
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 20
score: 99.81817511792453
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 20
score: 99.80492001488095
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 20
score: 99.78738987699468
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 20
score: 99.78466796875
patch: array CaMeL Folded CaMeL Children += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 20
score: 99.77818298339844
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 20
score: 99.76441127232142
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 20
score: 99.72291358741555
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 21
score: 99.81769604952831
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 21
score: 99.79312133789062
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 21
score: 99.78702359586148
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 21
score: 99.77919449344758
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 21
score: 99.76310410610465
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 21
score: 99.72183618790064
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 22
score: 99.8138671875
patch: append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 22
score: 99.80368822674419
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 22
score: 99.80353860294117
patch: folded CaMeL Size += $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 22
score: 99.79273780616555
patch: folded CaMeL Size = sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 22
score: 99.77888004954268
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 22
score: 99.77519412157012
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 22
score: 99.7208984375
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 23
score: 99.81339345079788
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 23
score: 99.80269681490384
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 23
score: 99.80261560388513
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 23
score: 99.75921921502976
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 23
score: 99.71926618303571
patch: if ( sb . length ( ) > 0 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 24
score: 99.80136343149039
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 24
score: 99.79111089939025
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 24
score: 99.78608494178921
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( join CaMeL String ) ;
rank: 24
score: 99.77638989825581
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 24
score: 99.77274693080358
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 24
score: 99.75911458333333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 24
score: 99.7170469702744
patch: add ( Node . new CaMeL String ( sb . length ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 25
score: 99.80848185221355
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } }
rank: 25
score: 99.80107421875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 25
score: 99.77567450944767
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 25
score: 99.7725802951389
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 25
score: 99.77193306587837
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ;
rank: 25
score: 99.7158954326923
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 26
score: 99.80844812225877
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 26
score: 99.7988217002467
patch: folded CaMeL Size += sb . length ( ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 26
score: 99.7973697060033
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 26
score: 99.78516529224537
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 26
score: 99.77094469572368
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 26
score: 99.71518316501525
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 27
score: 99.8074052918632
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 27
score: 99.79808213975694
patch: folded CaMeL Size += sb . length ( ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 27
score: 99.79721811655405
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 27
score: 99.78641669694767
patch: { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 27
score: 99.7721632050305
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 27
score: 99.7687023074128
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ;
rank: 27
score: 99.75545479910714
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 28
score: 99.8064197358631
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 28
score: 99.77082905016448
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 28
score: 99.76897151295732
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb . length ( ) ) ) ;
rank: 28
score: 99.71392463235294
patch: append ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 29
score: 99.80640980113637
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 29
score: 99.7693722747093
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 29
score: 99.76873458059211
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 29
score: 99.7641851963141
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 30
score: 99.79354055304276
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 30
score: 99.78483442826705
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 30
score: 99.7821074695122
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 31
score: 99.79403615552326
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 31
score: 99.79303588867188
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 31
score: 99.7837537400266
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 31
score: 99.76683250633445
patch: folded CaMeL Size += sb . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 31
score: 99.76670328776042
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; }
rank: 31
score: 99.71294088924633
patch: add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 32
score: 99.80469671285377
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 32
score: 99.79346988075658
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 32
score: 99.79140014648438
patch: folded CaMeL Size += sb . length ( ) + 1 ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 32
score: 99.78352518284575
patch: folded CaMeL Size += sb . length ( ) + array CaMeL Node . get CaMeL Child CaMeL Count ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 32
score: 99.78105653007076
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 33
score: 99.80425347222223
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 33
score: 99.79277111235119
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ; }
rank: 33
score: 99.79130473889802
patch: folded CaMeL Size += sb . length ( ) + 1 ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 33
score: 99.78095910904256
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 33
score: 99.7649777434593
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , to CaMeL String ( ) ) ) ;
rank: 33
score: 99.76176417151163
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 34
score: 99.80420939127605
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 34
score: 99.79077888257575
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 34
score: 99.76474081503379
patch: folded CaMeL Size < sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 34
score: 99.76042751736111
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , n . to CaMeL String ( ) ) ) ;
rank: 34
score: 99.75161597842262
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 34
score: 99.71226501464844
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 35
score: 99.80397066156915
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 35
score: 99.79012258429276
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 35
score: 99.7642723289696
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ;
rank: 35
score: 99.75972222222222
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 36
score: 99.8037109375
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 36
score: 99.77977454144022
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 36
score: 99.77940784801136
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 36
score: 99.75859375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 36
score: 99.75096916429925
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 36
score: 99.71120042067308
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , null ) ) ;
rank: 37
score: 99.80296912560097
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 37
score: 99.78709685496794
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add CaMeL All ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 37
score: 99.77953084309895
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 37
score: 99.76396220439189
patch: folded CaMeL Size += n . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 37
score: 99.76063447840073
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 37
score: 99.71100895579268
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 38
score: 99.78663394325658
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 38
score: 99.77933673469387
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 38
score: 99.77569289434524
patch: folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 38
score: 99.76308186848958
patch: int length = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 38
score: 99.76029558879573
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 38
score: 99.75569661458333
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 39
score: 99.8018201462766
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 39
score: 99.7747177496189
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 39
score: 99.76282068201013
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 39
score: 99.75909064797794
patch: folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 39
score: 99.755078125
patch: add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 39
score: 99.75014963457662
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 39
score: 99.71056798986487
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 40
score: 99.80127874410377
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 40
score: 99.77467943274456
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 40
score: 99.70982947716347
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 41
score: 99.80074439858491
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 41
score: 99.78484324919872
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 41
score: 99.78299386160714
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 41
score: 99.77552861752717
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 41
score: 99.76090494791667
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 42
score: 99.78470965129573
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ;
rank: 42
score: 99.77411443536931
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 42
score: 99.75566802153716
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 42
score: 99.75282250381098
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 42
score: 99.74760131835937
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 42
score: 99.70850771949405
patch: if ( sb . length ( ) == 0 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 43
score: 99.79880969929245
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 43
score: 99.78467422876602
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Char CaMeL Array ( ) ) ) ;
rank: 43
score: 99.78261496803977
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 43
score: 99.77449001736112
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 43
score: 99.77392578125
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 43
score: 99.75209263392857
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 43
score: 99.70835658482143
patch: if ( sb . to CaMeL String ( ) . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 44
score: 99.78428344726562
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 44
score: 99.78219083460365
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 44
score: 99.75939628405449
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) + $NUMBER$ ;
rank: 44
score: 99.75325123856707
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 44
score: 99.74648942618535
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 44
score: 99.70694461945564
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 45
score: 99.79856612042683
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 45
score: 99.77277575041118
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ) ) ;
rank: 45
score: 99.75920952690973
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 45
score: 99.74638671875
patch: if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 45
score: 99.70685969172297
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 46
score: 99.79854600694445
patch: append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 46
score: 99.78175080128206
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 46
score: 99.77339311079545
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 47
score: 99.78390255489865
patch: folded CaMeL Size = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 47
score: 99.772978515625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 47
score: 99.77224319045608
patch: folded CaMeL Size += sb . length ( ) + SIZE ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 47
score: 99.75728149414063
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 47
score: 99.75053168402778
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 47
score: 99.74576416015626
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else {
rank: 47
score: 99.70527086759868
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 48
score: 99.78114013671875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 48
score: 99.772705078125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 48
score: 99.75707381810898
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + $NUMBER$ ) ) ;
rank: 48
score: 99.7494784268466
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 48
score: 99.74545433407738
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 48
score: 99.70520332532051
patch: add ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 49
score: 99.78320990668402
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 49
score: 99.7810946377841
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 49
score: 99.75590122767858
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 49
score: 99.75118940304488
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 49
score: 99.70509168836806
patch: add ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 50
score: 99.79590801164215
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 50
score: 99.77206839767157
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 50
score: 99.7491787997159
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 50
score: 99.74485181725544
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 50
score: 99.70261032516892
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 51
score: 99.79584209735577
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 51
score: 99.76878821331522
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 51
score: 99.75535534274194
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ;
rank: 51
score: 99.70237821691177
patch: start ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 52
score: 99.79582571476064
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 52
score: 99.76854842748398
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 52
score: 99.7553478422619
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 52
score: 99.74920043945312
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 52
score: 99.74739363386824
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + 1 ) ) ;
rank: 52
score: 99.70229640151516
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 53
score: 99.77989233993902
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . trim ( ) ) ) ;
rank: 53
score: 99.778173828125
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 53
score: 99.76781063988095
patch: folded CaMeL Size + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 53
score: 99.75465119190706
patch: else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 53
score: 99.74305013020833
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 54
score: 99.79544700766509
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 54
score: 99.76770833333333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else {
rank: 54
score: 99.75415606831395
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) . to CaMeL String ( ) ) ;
rank: 54
score: 99.74844937711148
patch: folded CaMeL Size = sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 54
score: 99.70096164279514
patch: if ( sb . length ( ) >= 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 55
score: 99.79462002840908
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 55
score: 99.77793845152243
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 55
score: 99.77758163060898
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 55
score: 99.7705939797794
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 55
score: 99.76767365828805
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 55
score: 99.7540652252907
patch: folded CaMeL Size = sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 55
score: 99.70085313585069
patch: add ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 56
score: 99.79446614583334
patch: append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 56
score: 99.77776943108974
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 56
score: 99.75370185319767
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 56
score: 99.748046875
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 56
score: 99.74648675685975
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 57
score: 99.79438838252315
patch: append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 57
score: 99.74578857421875
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; }
rank: 57
score: 99.74176735101744
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb . to CaMeL String ( ) ) ) ;
rank: 57
score: 99.69991455078124
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , - 1 ) ) ;
rank: 58
score: 99.79368954613095
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 58
score: 99.77700433498475
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 58
score: 99.76621547965117
patch: int folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 59
score: 99.79362349076705
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 59
score: 99.77669067382813
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 59
score: 99.76595405910327
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 59
score: 99.75332712572674
patch: if ( Node CaMeL Util . equals ( sb . to CaMeL String ( ) ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 59
score: 99.74611497961956
patch: add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 60
score: 99.79307154605263
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 60
score: 99.77454194568452
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 60
score: 99.76934956395348
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 60
score: 99.74569541529605
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 60
score: 99.74208984375
patch: folded CaMeL Size += sb . length ( ) + 1 ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 60
score: 99.69965955946181
patch: if ( sb . length ( ) > 1 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 61
score: 99.79300426136363
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 61
score: 99.76841517857143
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 61
score: 99.76431599069149
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ; }
rank: 61
score: 99.7415283203125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 61
score: 99.69902079814189
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , null ) ) ;
rank: 62
score: 99.7744140625
patch: folded CaMeL Size += $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 62
score: 99.77402565696023
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 62
score: 99.76783130787037
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 62
score: 99.76401471077128
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 62
score: 99.75212659333882
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 62
score: 99.7453082540761
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 62
score: 99.7407727363782
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 62
score: 99.69716925370066
patch: folded CaMeL Size ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 63
score: 99.77392578125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , sb . to CaMeL String ( ) ) ) ;
rank: 63
score: 99.75201125372024
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 63
score: 99.74468315972223
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 63
score: 99.7408780184659
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 63
score: 99.74038461538461
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 63
score: 99.69697766426282
patch: folded CaMeL Size += ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 64
score: 99.77256735777243
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 64
score: 99.75105794270833
patch: folded CaMeL Size += sb . to CaMeL String ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 64
score: 99.74062368032095
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 64
score: 99.69652129382622
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 65
score: 99.79079026442308
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 65
score: 99.7727783203125
patch: this . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 65
score: 99.77235375381098
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 65
score: 99.74981689453125
patch: } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 65
score: 99.73991563585069
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 65
score: 99.73941127232143
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 65
score: 99.69606419613487
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 66
score: 99.7904296875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 66
score: 99.771484375
patch: * / folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 66
score: 99.76571712853773
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 66
score: 99.73908765388258
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 66
score: 99.7385021391369
patch: folded CaMeL Size < Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 66
score: 99.69489567454268
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 67
score: 99.789697265625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 67
score: 99.77087072423987
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + $NUMBER$ ) ) ;
rank: 67
score: 99.76544074292453
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 67
score: 99.7386538856908
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ; }
rank: 67
score: 99.7381258877841
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ;
rank: 67
score: 99.69334746570122
patch: append ( Node . new CaMeL String ( sb . length ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 68
score: 99.7895936129386
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 68
score: 99.77147216796875
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 68
score: 99.7601345486111
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 68
score: 99.74826462204392
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . to CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 68
score: 99.73785556891026
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 68
score: 99.73766776842949
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 69
score: 99.75960640285327
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 69
score: 99.73731825086806
patch: folded CaMeL Size += $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 69
score: 99.6926519931891
patch: try { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 70
score: 99.78825431034483
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 70
score: 99.76987156723484
patch: folded CaMeL Size ++ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 70
score: 99.75958573190789
patch: { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 70
score: 99.74322083938954
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 70
score: 99.7373683763587
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( join CaMeL String ) ;
rank: 70
score: 99.73696157094595
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 70
score: 99.6926205283717
patch: add ( sb . to CaMeL String ( ) ) ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 71
score: 99.78780543550532
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 71
score: 99.7694118923611
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 71
score: 99.76481119791667
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 71
score: 99.75850110176282
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) ) ) ;
rank: 71
score: 99.74569631177326
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 71
score: 99.73655348557692
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 71
score: 99.69197591145833
patch: if ( sb . length ( ) != 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 72
score: 99.76865366342905
patch: this . folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 72
score: 99.76460503472222
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ;
rank: 72
score: 99.75732421875
patch: folded CaMeL Size += sb . length ( ) - 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 72
score: 99.74551156850961
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ) ;
rank: 72
score: 99.74309895833333
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 72
score: 99.7365067644817
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 72
score: 99.69162469161184
patch: sb . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 73
score: 99.78757923054245
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 73
score: 99.76847550675676
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , sb . length ( ) ) ) ;
rank: 73
score: 99.76442238136575
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 73
score: 99.75696614583333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 73
score: 99.74501439144737
patch: int folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 73
score: 99.73605421112805
patch: folded CaMeL Size += array CaMeL Node . get CaMeL Cost ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 73
score: 99.69132272820724
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 74
score: 99.78729106104652
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 74
score: 99.76840355282738
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 74
score: 99.76397026909723
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 74
score: 99.75680338541666
patch: folded CaMeL Size += sb . length ( ) + array CaMeL Folded CaMeL Children . size ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 74
score: 99.74495641196647
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 74
score: 99.73556357935855
patch: sb . append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 74
score: 99.69059030633224
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , - 1 ) ) ;
rank: 75
score: 99.78694291548295
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 75
score: 99.76795789930556
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 75
score: 99.76738162157012
patch: folded CaMeL Size += ( sb . length ( ) + $NUMBER$ ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 75
score: 99.75633655894886
patch: this . folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 75
score: 99.73587114383012
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 75
score: 99.6905517578125
patch: folded CaMeL Size ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 76
score: 99.76759982638889
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 76
score: 99.7653868140244
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . length ( ) ) ) ;
rank: 76
score: 99.74484922827745
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 76
score: 99.74071180555555
patch: folded CaMeL Size = sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 76
score: 99.73504317434211
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ;
rank: 76
score: 99.68953053544207
patch: if ( sb . equals ( sb . to CaMeL String ( ) ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 77
score: 99.7868019386574
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 77
score: 99.7649521246189
patch: this . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 77
score: 99.76302775930851
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 77
score: 99.74431878167229
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . get CaMeL String ( ) ) ) ;
rank: 77
score: 99.74044095552884
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 77
score: 99.73475557215073
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) ) ) ;
rank: 77
score: 99.68945990668402
patch: add ( sb . length ( ) - $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 78
score: 99.78676625844595
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 78
score: 99.7628173828125
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 78
score: 99.75589344113372
patch: int folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 78
score: 99.73514229910714
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 78
score: 99.73471930088141
patch: folded CaMeL Size = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 78
score: 99.689453125
patch: if ( sb . to CaMeL String ( ) . equals ( $STRING$ ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 79
score: 99.7621073820153
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 79
score: 99.74323219476744
patch: add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 79
score: 99.73470908717105
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ; }
rank: 79
score: 99.68905479029605
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 80
score: 99.78646689967105
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 80
score: 99.76328375400641
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Lower CaMeL Case ( ) ) ) ;
rank: 80
score: 99.75558684593024
patch: { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 80
score: 99.68904836554276
patch: folded CaMeL Size ( sb . length ( ) + 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 81
score: 99.78641493055555
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 81
score: 99.7645983573718
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 81
score: 99.75553031589673
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 81
score: 99.74208530159883
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ;
rank: 81
score: 99.73966660610465
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 81
score: 99.73492838541667
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 81
score: 99.73404715401786
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( $NUMBER$ ) ) ;
rank: 81
score: 99.68866131756756
patch: add ( sb . to CaMeL String ( ) ) ; else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 82
score: 99.7864091981132
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 82
score: 99.76379678415698
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 82
score: 99.76270926339286
patch: folded CaMeL Size -= sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 82
score: 99.74188075921474
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , n ) ) ;
rank: 82
score: 99.7394518729968
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , $NUMBER$ ) ) ;
rank: 82
score: 99.73371143830128
patch: if ( sb . length ( ) + $NUMBER$ > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 82
score: 99.68861897786458
patch: if ( sb . length ( ) > 0 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 83
score: 99.76218825120192
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + $STRING$ ) ) ;
rank: 83
score: 99.75419477982955
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; break ;
rank: 83
score: 99.73940972222222
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 83
score: 99.73319702148437
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 83
score: 99.68851841517858
patch: folded CaMeL Size < sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 84
score: 99.7860262784091
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 84
score: 99.76045040967988
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 84
score: 99.73341471354166
patch: folded CaMeL Size += sb . length ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 84
score: 99.68836127387152
patch: push ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 85
score: 99.78574027267157
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 85
score: 99.76008234797297
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 85
score: 99.753173828125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , $STRING$ ) ) ;
rank: 85
score: 99.7409608422256
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size -- ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 85
score: 99.6881103515625
patch: push ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 86
score: 99.78550983297414
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 86
score: 99.76051507994185
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 86
score: 99.74035928415698
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 86
score: 99.73808149857955
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 86
score: 99.73319927014802
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 86
score: 99.73268432617188
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ; }
rank: 86
score: 99.68786039806548
patch: if ( array CaMeL Folded CaMeL Children != null ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 87
score: 99.785400390625
patch: folded CaMeL Size += array CaMeL Node . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 87
score: 99.76251220703125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 87
score: 99.759765625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 87
score: 99.74020030886628
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 87
score: 99.73791190905449
patch: array CaMeL Folded CaMeL Children = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 87
score: 99.73297797309027
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( sb . to CaMeL String ( ) ) ) ;
rank: 87
score: 99.73228695518092
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 87
score: 99.68748520359848
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 88
score: 99.785400390625
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 88
score: 99.76244549418605
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 88
score: 99.75296927787163
patch: folded CaMeL Size + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 88
score: 99.73215895432692
patch: folded CaMeL Size = sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 88
score: 99.73201497395833
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; break ;
rank: 88
score: 99.68742290296052
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 89
score: 99.78515625
patch: append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 89
score: 99.75951450892858
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 89
score: 99.7366318121189
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 89
score: 99.73169555664063
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 89
score: 99.73147715692934
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 89
score: 99.68736049107143
patch: if ( sb . to CaMeL String ( ) . length ( ) == 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 90
score: 99.78490767045454
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ) ;
rank: 90
score: 99.76146834935898
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; }
rank: 90
score: 99.75234153053977
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 90
score: 99.73828784839527
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , to CaMeL String ( ) ) ) ;
rank: 90
score: 99.73146106350806
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 90
score: 99.73030201981707
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb . length ( ) ) ) ;
rank: 90
score: 99.68729073660714
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( node ) ;
rank: 91
score: 99.78471991356383
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 91
score: 99.76101272170608
patch: folded CaMeL Size += sb . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 91
score: 99.75978370949075
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 91
score: 99.75862426757813
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 91
score: 99.75211234714673
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 91
score: 99.7375237880609
patch: super . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 91
score: 99.73596521326013
patch: if ( sb . length ( ) > 0 ) array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 91
score: 99.73012823807566
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 91
score: 99.68687918526786
patch: index = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 92
score: 99.78422489872685
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 92
score: 99.76015625
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 92
score: 99.7596944173177
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 92
score: 99.75206030868902
patch: folded CaMeL Size = array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 92
score: 99.73700944767442
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 92
score: 99.73119439019098
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 92
score: 99.68680572509766
patch: add ( folded CaMeL Size ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 93
score: 99.75978716681985
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 93
score: 99.75844116210938
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 93
score: 99.75810773982558
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 93
score: 99.75180451766305
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 93
score: 99.73555814302884
patch: folded CaMeL Size += n . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 93
score: 99.73063151041667
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else
rank: 94
score: 99.78412543402777
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 94
score: 99.75919816300676
patch: folded CaMeL Size += sb . length ( ) + 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 94
score: 99.75163752858232
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 94
score: 99.72962914443598
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 94
score: 99.68576462204392
patch: add ( sb . to CaMeL String ( ) ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 95
score: 99.78400464327831
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 95
score: 99.75907592773437
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } break ;
rank: 95
score: 99.75686778192934
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ; }
rank: 95
score: 99.75136264534883
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ) ) ;
rank: 95
score: 99.7355224609375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , ) ) ;
rank: 95
score: 99.73055555555555
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( join CaMeL String ) ;
rank: 96
score: 99.75762469951923
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; return ;
rank: 96
score: 99.75617261202831
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 96
score: 99.73517400568181
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 96
score: 99.68545449746621
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 97
score: 99.75688733552632
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 97
score: 99.75073784722223
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 97
score: 99.73494037828948
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ; }
rank: 97
score: 99.72916040665064
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( 0 , Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 98
score: 99.75590919961735
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 98
score: 99.75046608664773
patch: n . folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 98
score: 99.73460751488095
patch: array CaMeL Folded CaMeL Children . remove ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 98
score: 99.73432074652777
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , n . to CaMeL String ( ) ) ) ;
rank: 98
score: 99.68521509415064
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 99
score: 99.75560913085937
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( ( char ) sb . to CaMeL String ( ) ) ) ;
rank: 99
score: 99.75022855718085
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 99
score: 99.73454655827703
patch: folded CaMeL Size += sb . length ( ) + $STRING$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 99
score: 99.72896728515624
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 100
score: 99.78283461084905
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 100
score: 99.75561003989361
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 100
score: 99.75535857371794
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 100
score: 99.75011877111487
patch: buf . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 100
score: 99.73385265261628
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 100
score: 99.72878069196429
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . trim ( ) ) ) ;
rank: 100
score: 99.68512137276785
patch: if ( sb . length ( ) == 0 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 101
score: 99.75735134548611
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 101
score: 99.7550733612805
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 101
score: 99.73402806332237
patch: String folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 101
score: 99.72873406661184
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 101
score: 99.7275158110119
patch: folded CaMeL Size <= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 101
score: 99.68505859375
patch: if ( sb . contains ( sb . to CaMeL String ( ) ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 102
score: 99.75531581662736
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 102
score: 99.75476967416158
patch: folded CaMeL Size += ( sb . length ( ) - 1 ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 102
score: 99.74989385190217
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 102
score: 99.73394484747024
patch: array CaMeL Folded CaMeL Children . set ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 102
score: 99.73352943978658
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 102
score: 99.72868718327703
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , 0 ) ) ;
rank: 103
score: 99.7823512300532
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 103
score: 99.75640314275569
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ; }
rank: 103
score: 99.75468175551471
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 103
score: 99.75464527027027
patch: double CaMeL Value = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 103
score: 99.73350016276042
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ;
rank: 103
score: 99.73332248263888
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 103
score: 99.68460693359376
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , - $NUMBER$ ) ) ;
rank: 104
score: 99.75431315104167
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ; }
rank: 104
score: 99.74978770380434
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 104
score: 99.73348775724085
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 104
score: 99.72836386190879
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL Instance ( sb . to CaMeL String ( ) ) ) ;
rank: 104
score: 99.6839535361842
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 105
score: 99.78187913161058
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 105
score: 99.74973462975544
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 105
score: 99.73341771175987
patch: add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 105
score: 99.728271484375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 106
score: 99.78172906839623
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 106
score: 99.75558810763889
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 106
score: 99.75294288429055
patch: folded CaMeL Size *= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 106
score: 99.7497225674716
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 106
score: 99.73320569490132
patch: int folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 106
score: 99.73270174352135
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 106
score: 99.72769388338415
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( new String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 106
score: 99.68332579077745
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) . to CaMeL String ( ) ) ;
rank: 107
score: 99.75535999644886
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 107
score: 99.75389586103724
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 107
score: 99.74968927556819
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 107
score: 99.7325375205592
patch: else folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 107
score: 99.72738826976104
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; }
rank: 108
score: 99.78129606426887
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 108
score: 99.75526258680556
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 108
score: 99.75382288490853
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 108
score: 99.74960561899039
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 108
score: 99.73236553485577
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + 1 ) ) ;
rank: 108
score: 99.73228236607143
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ; }
rank: 108
score: 99.72698479729729
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb ) ) ;
rank: 108
score: 99.68221885279605
patch: append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 109
score: 99.78129606426887
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } array CaMeL Node . detach CaMeL Children ( ) ;
rank: 109
score: 99.75364087975544
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 109
score: 99.74937037417763
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; nodes . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 109
score: 99.73219168526786
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ; }
rank: 109
score: 99.72641073690879
patch: folded CaMeL Size += sb . length ( ) / $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 109
score: 99.68217917049633
patch: remove ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 110
score: 99.78114827473958
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } }
rank: 110
score: 99.75358977141204
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 110
score: 99.7517030297256
patch: folded CaMeL Size += ( sb . length ( ) - $NUMBER$ ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 110
score: 99.73201308139535
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 110
score: 99.73199037063954
patch: } array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 110
score: 99.726318359375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( $NUMBER$ ) ) ; }
rank: 110
score: 99.68215849905303
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 111
score: 99.78108059630102
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 111
score: 99.7531229654948
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 111
score: 99.75154836554276
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 111
score: 99.74901304853724
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 111
score: 99.73187099358974
patch: array CaMeL Folded CaMeL Children = sb . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 111
score: 99.72628348214286
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ;
rank: 111
score: 99.7254305752841
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else
rank: 111
score: 99.68197021484374
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 112
score: 99.78102805397727
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 112
score: 99.75477120535714
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ,
rank: 112
score: 99.75312243009868
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 112
score: 99.75111712831439
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb ) ) ;
rank: 112
score: 99.74869099069149
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 112
score: 99.7319871855945
patch: array CaMeL Folded CaMeL Children += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 112
score: 99.73181465344551
patch: array CaMeL Folded CaMeL Children += sb . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 112
score: 99.72529296875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ; }
rank: 112
score: 99.68180338541667
patch: if ( sb . length ( ) >= 0 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 113
score: 99.78094597582547
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 113
score: 99.75455729166667
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 113
score: 99.74719769021739
patch: folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 113
score: 99.73147937863372
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 113
score: 99.73135850694445
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 113
score: 99.72553315033784
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , false ) ) ;
rank: 113
score: 99.72525601773648
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 113
score: 99.6817691200658
patch: add CaMeL Node ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 114
score: 99.78018663194445
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 114
score: 99.75453744283537
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 114
score: 99.75282796223958
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 114
score: 99.74711216517858
patch: folded CaMeL Size = sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 114
score: 99.73128609035327
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 114
score: 99.72525827508224
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 114
score: 99.72519402754934
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else {
rank: 114
score: 99.68174704527243
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 115
score: 99.75450721153847
patch: folded CaMeL Size += sb . length ( ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 115
score: 99.7528050199468
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 115
score: 99.73127858231707
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; break ;
rank: 115
score: 99.73102127878289
patch: String folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 115
score: 99.72509765625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( ) ) ;
rank: 115
score: 99.72478637695312
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; break ; }
rank: 115
score: 99.68149928042763
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 116
score: 99.75433514569256
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 116
score: 99.74920497796474
patch: folded CaMeL Size += $NUMBER$ + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 116
score: 99.73079030106707
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 116
score: 99.7249286358173
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . to CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 116
score: 99.72477970566861
patch: folded CaMeL Size += $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 116
score: 99.68145541487068
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 117
score: 99.77962917751736
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 117
score: 99.73074501439145
patch: } folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 117
score: 99.72488839285714
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( node ) ) ;
rank: 117
score: 99.72469274009147
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 117
score: 99.68123168945313
patch: folded CaMeL Size folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 118
score: 99.77943999191811
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 118
score: 99.75372178819444
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 118
score: 99.7521441915761
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( join CaMeL String ) ;
rank: 118
score: 99.7490829839939
patch: if ( array CaMeL Folded CaMeL Children . size ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 118
score: 99.74603826349431
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , sb . to CaMeL String ( ) ) ) ;
rank: 118
score: 99.73094512195122
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , n ) ) ;
rank: 118
score: 99.72474888392857
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ;
rank: 119
score: 99.74577907986111
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else {
rank: 119
score: 99.73063908066861
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 119
score: 99.7247314453125
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . get CaMeL String CaMeL Value ( node ) ) ) ;
rank: 119
score: 99.7243896484375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 120
score: 99.77899639423077
patch: folded CaMeL Size += array CaMeL Node . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 120
score: 99.7530517578125
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 120
score: 99.75169516509433
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 120
score: 99.74867372255068
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Array ( ) ) ) ;
rank: 120
score: 99.74574052526596
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 120
score: 99.73046875
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 120
score: 99.729443359375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; $NUMBER$ ++ ;
rank: 120
score: 99.72455303485577
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ; }
rank: 120
score: 99.68083674733232
patch: sb . add ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 121
score: 99.77880859375
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 121
score: 99.751689453125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent = array CaMeL Node . get CaMeL First CaMeL Child ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 121
score: 99.7479218273628
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , sb . to CaMeL String ( ) ) ) ;
rank: 121
score: 99.7456585427989
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) , folded CaMeL Size ) ;
rank: 121
score: 99.72995827414773
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 121
score: 99.72452005525915
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , to CaMeL String ( ) ) ) ;
rank: 121
score: 99.72361010174419
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( null ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 121
score: 99.68065243675595
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 122
score: 99.75270257994185
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 122
score: 99.75118001302083
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 122
score: 99.74775390625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add CaMeL All ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 122
score: 99.74563953488372
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else {
rank: 122
score: 99.72980685763889
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 122
score: 99.72913953993056
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 122
score: 99.72451443142361
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; }
rank: 123
score: 99.77863498263889
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } break ;
rank: 123
score: 99.75259164663461
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 123
score: 99.75115966796875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 123
score: 99.74558668870192
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 123
score: 99.72980291193181
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 123
score: 99.72896008613782
patch: String sb . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 123
score: 99.68033040364584
patch: add ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 124
score: 99.77799825465425
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 124
score: 99.75189678485577
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 124
score: 99.7455721768466
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 124
score: 99.72881255278716
patch: folded CaMeL Size <= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 124
score: 99.722900390625
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 124
score: 99.68032691592262
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 125
score: 99.77795940896739
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } array CaMeL Node . detach CaMeL Children ( ) ;
rank: 125
score: 99.75072224934895
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 125
score: 99.72909918064025
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , null ) ) ;
rank: 125
score: 99.72367778577302
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ;
rank: 125
score: 99.7227718955592
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 126
score: 99.75161597842262
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 126
score: 99.75046835140306
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ;
rank: 126
score: 99.7474834735577
patch: / * folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 126
score: 99.72888513513513
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , $NUMBER$ ) ) ;
rank: 126
score: 99.72856287802419
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 126
score: 99.68005058092949
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 127
score: 99.77778220663265
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } break ;
rank: 127
score: 99.75140545819256
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 127
score: 99.74742606026786
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 127
score: 99.74547446646342
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 127
score: 99.7288348858173
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) + 1 ) ) ;
rank: 127
score: 99.72837936046511
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 127
score: 99.72297498914931
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node . String ( sb . to CaMeL String ( ) ) ) ;
rank: 128
score: 99.75050147804055
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 128
score: 99.75034877232143
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 128
score: 99.74544963430851
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 128
score: 99.7228348894817
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 128
score: 99.72247178819444
patch: folded CaMeL Size += array CaMeL Node . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 128
score: 99.67986188616071
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 129
score: 99.77692780671296
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 129
score: 99.7503406613372
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 129
score: 99.75022020526961
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( join CaMeL String ) ;
rank: 129
score: 99.74732055664063
patch: this . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 129
score: 99.7281593116554
patch: folded CaMeL Size >= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 129
score: 99.72795758928571
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 129
score: 99.72276785714286
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 129
score: 99.67948986235119
patch: add ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 130
score: 99.77642822265625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 130
score: 99.75031072443181
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 130
score: 99.74702412373311
patch: double CaMeL Value += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 130
score: 99.7453380766369
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 130
score: 99.72810475419207
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( ) ) ;
rank: 130
score: 99.72203911675348
patch: folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 130
score: 99.72175736860795
patch: folded CaMeL Size += $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 130
score: 99.67947048611111
patch: if ( sb . length ( ) == 1 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 131
score: 99.77576835200472
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 131
score: 99.75004747178819
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 131
score: 99.74701752533784
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) - 1 ) ) ;
rank: 131
score: 99.72809620392628
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; this . array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 131
score: 99.7275623139881
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 131
score: 99.72182855373475
patch: folded CaMeL Size += sb . length ( ) + 1 ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 131
score: 99.6789486533717
patch: list . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 132
score: 99.7755596454327
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 132
score: 99.7502500952744
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 132
score: 99.74989865860849
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 132
score: 99.7274859884511
patch: array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 132
score: 99.67861703725961
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 133
score: 99.7498779296875
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 133
score: 99.74470808699324
patch: folded CaMeL Size += sb . length ( ) * $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 133
score: 99.72714162427326
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 133
score: 99.72138790967988
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 133
score: 99.67842060810811
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , 1 ) ) ;
rank: 134
score: 99.77533868018617
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 134
score: 99.74977463942308
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( join CaMeL String ) ; }
rank: 134
score: 99.74621911951013
patch: if ( sb . length ( ) == 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 134
score: 99.74410878057066
patch: folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 134
score: 99.72757312863372
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 134
score: 99.72126207853618
patch: folded CaMeL Size = sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 134
score: 99.67823428199405
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 135
score: 99.77528007075472
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 135
score: 99.74969872007979
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 135
score: 99.74925130208334
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 135
score: 99.74398716517857
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 135
score: 99.72642299107143
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 135
score: 99.72122192382812
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ) ;
rank: 136
score: 99.77528007075472
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; }
rank: 136
score: 99.74393284574468
patch: folded CaMeL Size ++ ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 136
score: 99.72734375
patch: array CaMeL Folded CaMeL Children += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 136
score: 99.720751953125
patch: sb . append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 136
score: 99.71993582589286
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += 0 ;
rank: 136
score: 99.67804633246527
patch: append ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 137
score: 99.77514105902777
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 137
score: 99.74919577205883
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( join CaMeL String ) ;
rank: 137
score: 99.74593379579741
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 137
score: 99.72583550347223
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 137
score: 99.72071597450658
patch: folded CaMeL Size = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 137
score: 99.71983119419643
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 137
score: 99.6780440167683
patch: folded CaMeL Size += sb . to CaMeL String ( ) . trim ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 138
score: 99.77498685396634
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 138
score: 99.74851345486111
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } sb . append ( join CaMeL String ) ;
rank: 138
score: 99.74589342948718
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( ( sb . to CaMeL String ( ) ) ) ) ;
rank: 138
score: 99.74347418707771
patch: folded CaMeL Size -= sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 138
score: 99.72070922851563
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( ( String ) sb . to CaMeL String ( ) ) ) ;
rank: 138
score: 99.67801607572116
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ;
rank: 139
score: 99.77486478365384
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 139
score: 99.74876371343085
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 139
score: 99.74849133613782
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , right ) ) ;
rank: 139
score: 99.72520862926136
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 139
score: 99.72068917410714
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 139
score: 99.67787133193598
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , length ( ) ) ) ;
rank: 140
score: 99.77477010091145
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 140
score: 99.74864612926136
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 140
score: 99.74305138221153
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 140
score: 99.7249726086128
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 140
score: 99.72049654447116
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 140
score: 99.71958229758523
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 141
score: 99.74837865584936
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 141
score: 99.7451112328506
patch: if ( sb . length ( ) > 0 ) folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 141
score: 99.74283854166667
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 141
score: 99.72493688071647
patch: array CaMeL Folded CaMeL Children = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 141
score: 99.7204649390244
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ) ;
rank: 141
score: 99.6767578125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , index ) ) ;
rank: 142
score: 99.74789800876525
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 142
score: 99.72629743303571
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( ) ) ;
rank: 142
score: 99.72036830357143
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( ) ) ; }
rank: 142
score: 99.67634133731617
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 143
score: 99.74846281828704
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 143
score: 99.74476586318598
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add CaMeL All ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 143
score: 99.74223368876689
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , $STRING$ ) ) ;
rank: 143
score: 99.72617885044643
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 143
score: 99.7202392578125
patch: folded CaMeL Size += $NUMBER$ ; } else { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 143
score: 99.71940983952703
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else
rank: 143
score: 99.67592259457237
patch: index [ 0 ] = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 144
score: 99.77384588068182
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ) ) ;
rank: 144
score: 99.74826610331633
patch: folded CaMeL Size = 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 144
score: 99.74709185431985
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 144
score: 99.74217711103724
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ; }
rank: 144
score: 99.72602879723837
patch: folded CaMeL Size += sb . to CaMeL String ( ) . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 144
score: 99.7200828758446
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( folded CaMeL Size ) ) ;
rank: 144
score: 99.71930973704268
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( sb . to CaMeL String ( ) ) ) ;
rank: 144
score: 99.67558989653716
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 145
score: 99.77371920072116
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 145
score: 99.74813655931122
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( folded CaMeL Size > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 145
score: 99.74704391891892
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 145
score: 99.7419934395032
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 145
score: 99.72601841517857
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . length ( ) ) ) ;
rank: 145
score: 99.71979254645271
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( list . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 145
score: 99.6753447561553
patch: index = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 146
score: 99.77365112304688
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 146
score: 99.74802772671569
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 146
score: 99.74165482954545
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , elem ) ) ;
rank: 146
score: 99.71909877232143
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( null ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 146
score: 99.67528044871794
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , node ) ) ;
rank: 147
score: 99.77312360491071
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 147
score: 99.7476218894676
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 147
score: 99.74673316592262
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ; }
rank: 147
score: 99.7254638671875
patch: array CaMeL Folded CaMeL Children . add ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 147
score: 99.67516479492187
patch: folded CaMeL Size . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 148
score: 99.77305453431373
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 148
score: 99.74759845344387
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 148
score: 99.74617919921874
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ; }
rank: 148
score: 99.72543334960938
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 148
score: 99.71878959037163
patch: folded CaMeL Size -= sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 148
score: 99.71840463033537
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 148
score: 99.67489769345238
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 149
score: 99.77276611328125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 149
score: 99.74595602964743
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 149
score: 99.74135044642857
patch: folded CaMeL Size + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 149
score: 99.72509765625
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 149
score: 99.72352430555556
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 149
score: 99.71872618140245
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 149
score: 99.67483859592014
patch: append ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 150
score: 99.74732940051021
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 150
score: 99.74562717013889
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( join CaMeL String ) ; }
rank: 150
score: 99.72337239583334
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + array CaMeL Folded CaMeL Children . length ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 150
score: 99.71870502672698
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ;
rank: 150
score: 99.7177401455966
patch: folded CaMeL Size += $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 150
score: 99.67460552014802
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 151
score: 99.77212524414062
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 151
score: 99.74730506310097
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 151
score: 99.7454898231908
patch: folded CaMeL Size += sb . length ( ) - 1 ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 151
score: 99.74022117820945
patch: folded CaMeL Size -= sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 151
score: 99.72491133840461
patch: set CaMeL String ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 151
score: 99.722900390625
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 151
score: 99.71864877096037
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 151
score: 99.71745548691861
patch: folded CaMeL Size += array CaMeL Node . get CaMeL Child CaMeL Count ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 152
score: 99.77211216517857
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 152
score: 99.7401706861413
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 152
score: 99.72490001860119
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 152
score: 99.71858504011824
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb ) ) ;
rank: 152
score: 99.71744577508224
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ;
rank: 152
score: 99.67401413690476
patch: if ( sb . length ( ) != 0 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 153
score: 99.74531693892045
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( join CaMeL String ) ;
rank: 153
score: 99.73948636968085
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 153
score: 99.71842447916667
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb . length ( ) ) ) ;
rank: 154
score: 99.77195552357456
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 154
score: 99.74277105564025
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 154
score: 99.72201450892857
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 154
score: 99.71839663856908
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 154
score: 99.71722702752976
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( null ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 154
score: 99.67374674479167
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( null ) ;
rank: 155
score: 99.74515380859376
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 155
score: 99.74250050080128
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , sb . length ( ) ) ) ;
rank: 155
score: 99.73886940696023
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; this . array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 155
score: 99.72473457532051
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 155
score: 99.72199435763889
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , n . length ( ) ) ) ;
rank: 155
score: 99.71832275390625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 155
score: 99.67360325863487
patch: folded CaMeL Size ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 156
score: 99.74684244791666
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 156
score: 99.7448790015244
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 156
score: 99.74245256696429
patch: folded CaMeL Size += $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 156
score: 99.73861369680851
patch: { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 156
score: 99.72454155815973
patch: if ( sb . length ( ) > $NUMBER$ ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 156
score: 99.72188585069445
patch: result . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 156
score: 99.7181962176067
patch: if ( folded CaMeL Size += sb . length ( ) + $NUMBER$ ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 156
score: 99.7168564214939
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { }
rank: 156
score: 99.67354125976563
patch: add ( new String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 157
score: 99.77143831073113
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 157
score: 99.746826171875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 157
score: 99.74461059570312
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 157
score: 99.74165962837837
patch: if ( sb . length ( ) <= 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 157
score: 99.72435955668605
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 157
score: 99.72111545138888
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . trim ( ) ) ) ;
rank: 157
score: 99.71803850446429
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 157
score: 99.716796875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 157
score: 99.67319064670139
patch: add ( sb . length ( ) + 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 158
score: 99.74164428710938
patch: folded CaMeL Size = Node . new CaMeL String ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 158
score: 99.73814174107143
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . remove ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 158
score: 99.72420043945313
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 158
score: 99.72098999023437
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 158
score: 99.71789237780449
patch: folded CaMeL Size = sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 158
score: 99.71585990287163
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , elem ) ) ;
rank: 159
score: 99.77084517045455
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 159
score: 99.74655151367188
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 159
score: 99.74419875372024
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; }
rank: 159
score: 99.74158027844551
patch: folded CaMeL Size += ( sb . length ( ) - $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 159
score: 99.73764183407738
patch: folded CaMeL Size >= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 159
score: 99.72407490498311
patch: folded CaMeL Size == sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 159
score: 99.72091596554488
patch: folded CaMeL Size + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 159
score: 99.71789220861487
patch: folded CaMeL Size += $NUMBER$ ; folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 159
score: 99.67279373972039
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , - $NUMBER$ ) ) ;
rank: 160
score: 99.77071200284091
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 160
score: 99.74386809593024
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 160
score: 99.71734816028226
patch: folded CaMeL Size -= $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 160
score: 99.71570137219551
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , elem ) ) ;
rank: 160
score: 99.67235137195122
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , to CaMeL String ) ) ;
rank: 161
score: 99.77052815755208
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 161
score: 99.74610371492346
patch: folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 161
score: 99.72345112645348
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 161
score: 99.71729706554878
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size += $NUMBER$ ; }
rank: 161
score: 99.71568080357143
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 161
score: 99.6722412109375
patch: if ( folded CaMeL Size == 0 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 162
score: 99.77042330228366
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 162
score: 99.7231981230945
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 162
score: 99.67197672526042
patch: if ( sb . size ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 163
score: 99.77041739004629
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 163
score: 99.74359809027777
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 163
score: 99.74108465786638
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 163
score: 99.72314453125
patch: folded CaMeL Size += sb . length ( ) ; ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 163
score: 99.7198387352196
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 163
score: 99.71545758928572
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Node . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 163
score: 99.67191072789635
patch: if ( $STRING$ . equals ( sb . to CaMeL String ( ) ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 164
score: 99.77024808843085
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 164
score: 99.74351917613636
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 164
score: 99.741015625
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 164
score: 99.7364871002907
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 164
score: 99.7154296875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; break ; }
rank: 165
score: 99.76985891241776
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 165
score: 99.74088343178353
patch: folded CaMeL Size = folded CaMeL Size + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 165
score: 99.7360202955163
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 165
score: 99.7227157964939
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( $STRING$ ) ;
rank: 165
score: 99.71970486111111
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) . to CaMeL String ( ) ) ;
rank: 165
score: 99.71511501736111
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 165
score: 99.6714099702381
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 166
score: 99.74319979039635
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 166
score: 99.7408477038872
patch: to CaMeL String ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 166
score: 99.72259947311046
patch: array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 166
score: 99.71963102921195
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 167
score: 99.7695611447704
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 167
score: 99.74562766335227
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 167
score: 99.74025012600806
patch: folded CaMeL Size = 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 167
score: 99.71588812934027
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 167
score: 99.6708984375
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 168
score: 99.76946149553571
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 168
score: 99.74562669836956
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 168
score: 99.74300130208333
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 168
score: 99.74011624243951
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 168
score: 99.73490574048913
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 168
score: 99.7194187330163
patch: add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 168
score: 99.7154511242378
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb . length ( ) ) ) ;
rank: 168
score: 99.71462053571429
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 168
score: 99.67082868303571
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ( String ) sb . to CaMeL String ( ) ) ) ;
rank: 169
score: 99.74561451099537
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 169
score: 99.73980391652961
patch: folded CaMeL Size += sb . length ( ) ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 169
score: 99.73476205221037
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 169
score: 99.72216796875
patch: if ( array CaMeL Folded CaMeL Children == null ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 169
score: 99.71449403505068
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem . to CaMeL String ( ) ) ) ;
rank: 169
score: 99.67070569490132
patch: if ( sb . length ( ) == 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 170
score: 99.76932956861413
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 170
score: 99.7427749633789
patch: folded CaMeL Size += sb . length ( ) + 1 ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 170
score: 99.73971650094697
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , 0 ) ) ;
rank: 170
score: 99.73471901633523
patch: this . folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 170
score: 99.72211119186046
patch: if ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 170
score: 99.71916060014205
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) + 1 ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 170
score: 99.71436709449405
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . get CaMeL String ( ) ) ) ;
rank: 171
score: 99.76921164772727
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 171
score: 99.7454808011968
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 171
score: 99.7427412823933
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) , folded CaMeL Size ) ;
rank: 171
score: 99.734619140625
patch: { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 171
score: 99.72207496279762
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 171
score: 99.71915879360465
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 171
score: 99.71435546875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 172
score: 99.76915258290816
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 172
score: 99.74535565043605
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 172
score: 99.74233266469595
patch: folded CaMeL Size += sb . length ( ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 172
score: 99.739453125
patch: folded CaMeL Size = sb . length ( ) + 1 ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 172
score: 99.73449990915698
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator $NUMBER$ . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 172
score: 99.7220458984375
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 172
score: 99.71433275799419
patch: folded CaMeL Size += 0 ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 172
score: 99.670361328125
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , 1 ) ) ;
rank: 173
score: 99.76894162735849
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 173
score: 99.7218642816311
patch: array CaMeL Folded CaMeL Children = sb . to CaMeL String ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 173
score: 99.71906467013889
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 173
score: 99.71474984975961
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; / * array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 173
score: 99.71431790865384
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 173
score: 99.67033555772569
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 174
score: 99.74522107712765
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 174
score: 99.74189226017442
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 174
score: 99.71903686523437
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 174
score: 99.71472480969551
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL Instance ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 174
score: 99.7140780362216
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 175
score: 99.744912109375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ; }
rank: 175
score: 99.73399135044643
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( node ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 175
score: 99.71883138020833
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , - 1 ) ) ;
rank: 175
score: 99.7146496895032
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 175
score: 99.713974609375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 175
score: 99.6699282997533
patch: array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 176
score: 99.74489607900944
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 176
score: 99.74085286458333
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 176
score: 99.7338331269055
patch: folded CaMeL Size += sb . trim ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 176
score: 99.72149473248106
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 176
score: 99.71461151867378
patch: if ( sb . length ( ) + $NUMBER$ > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 176
score: 99.71357654389881
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += $NUMBER$ ;
rank: 177
score: 99.76867345861487
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; break ;
rank: 177
score: 99.740234375
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 177
score: 99.7389892578125
patch: folded CaMeL Size += sb . length ( ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 177
score: 99.73378057065217
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , join CaMeL String ) ) ;
rank: 177
score: 99.72145482113487
patch: append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 177
score: 99.71826171875
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 177
score: 99.71452042863176
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , true ) ) ;
rank: 177
score: 99.71348013528963
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 177
score: 99.66966521434294
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 178
score: 99.7180235327744
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 179
score: 99.76853434244792
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 179
score: 99.73995450647865
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 179
score: 99.73366855053192
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 179
score: 99.7212146577381
patch: if ( sb . length ( ) > $NUMBER$ ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 179
score: 99.71785016741072
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 179
score: 99.71393143503289
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 179
score: 99.7133037860577
patch: if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 179
score: 99.66950504954268
patch: folded CaMeL Size = sb . length ( ) + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 180
score: 99.76780299136513
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } break ;
rank: 180
score: 99.74449666341145
patch: folded CaMeL Size += sb . length ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 180
score: 99.73993913517442
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 180
score: 99.73838682432432
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add CaMeL All ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 180
score: 99.72103658536585
patch: if ( array CaMeL Folded CaMeL Children != null ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 180
score: 99.71782769097223
patch: int count = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 180
score: 99.71382759712837
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . remove ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 180
score: 99.66941481370192
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , to CaMeL String ) ) ;
rank: 181
score: 99.76778859105603
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 181
score: 99.74432253370098
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } elem = array CaMeL Node . get CaMeL First CaMeL Child ( ) ;
rank: 181
score: 99.7398617393092
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 181
score: 99.73352581521739
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 181
score: 99.71773937136628
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 181
score: 99.66940789473684
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 182
score: 99.76760525173611
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 182
score: 99.73976135253906
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 182
score: 99.73811645507813
patch: else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 182
score: 99.72078188004032
patch: folded CaMeL Size += $STRING$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 182
score: 99.71759528082771
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 182
score: 99.71370656866776
patch: if ( sb . length ( ) + $NUMBER$ > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 182
score: 99.71323939732143
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 182
score: 99.66893920898437
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( array CaMeL Folded CaMeL Children ) ;
rank: 183
score: 99.74402104591837
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 183
score: 99.73297901642628
patch: n . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 183
score: 99.7206798735119
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 183
score: 99.71754557291666
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 183
score: 99.71332108347039
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( 0 , $NUMBER$ ) ) ) ;
rank: 183
score: 99.71320362580128
patch: folded CaMeL Size += array CaMeL Node . get CaMeL Cost ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 183
score: 99.66881646050348
patch: if ( sb . trim ( ) == 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 184
score: 99.7674560546875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 184
score: 99.73945756392045
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 184
score: 99.73801783511513
patch: folded CaMeL Size += sb . length ( ) ; $NUMBER$ * / array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 184
score: 99.73295665922619
patch: folded CaMeL Size ++ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 184
score: 99.7175060453869
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 184
score: 99.71329312711148
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ;
rank: 185
score: 99.73763234991776
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( $STRING$ ) ) ) ;
rank: 185
score: 99.73291015625
patch: folded CaMeL Size += sb . length ( ) + array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 185
score: 99.72062436995968
patch: folded CaMeL Size += count ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 185
score: 99.71329126602564
patch: folded CaMeL Size += sb . length ( ) + $STRING$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 185
score: 99.71300159801136
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ? Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) : Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 186
score: 99.7439473470052
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 186
score: 99.73760161528716
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 186
score: 99.73271711482558
patch: folded CaMeL Size . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 186
score: 99.72042643229166
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 186
score: 99.71734328497024
patch: folded CaMeL Size . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 186
score: 99.71297399009147
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 186
score: 99.6685321514423
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 187
score: 99.74388586956522
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 187
score: 99.72027297247024
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . parse ( sb . to CaMeL String ( ) ) ) ) ;
rank: 187
score: 99.71322631835938
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 187
score: 99.71286010742188
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 187
score: 99.66843133223684
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 188
score: 99.76734683388158
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 188
score: 99.73869694890203
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . set ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 188
score: 99.735986328125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) [ 0 ] ) ) ;
rank: 188
score: 99.73252563476562
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 188
score: 99.72020321800595
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . format ( sb . to CaMeL String ( ) ) ) ) ;
rank: 188
score: 99.71717797256098
patch: folded CaMeL Size += $NUMBER$ + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 188
score: 99.7131288109756
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 188
score: 99.71285655886628
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 188
score: 99.66837785050676
patch: folded CaMeL Size += $NUMBER$ + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 189
score: 99.76723724941037
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 189
score: 99.73225541548295
patch: { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 189
score: 99.71713324652778
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) + $NUMBER$ ) ) ;
rank: 189
score: 99.71245659722223
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , ) ) ;
rank: 189
score: 99.66834932215073
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 190
score: 99.7672119140625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 190
score: 99.74356192129629
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 190
score: 99.73811479048295
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 190
score: 99.73222212357955
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 190
score: 99.71999709670608
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 190
score: 99.71711154513889
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 190
score: 99.66807645909927
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 191
score: 99.76714877424568
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 191
score: 99.74334716796875
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 191
score: 99.73770364900915
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( join CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 191
score: 99.7322110262784
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , folded CaMeL Size ) ) ;
rank: 191
score: 99.71996392144098
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 191
score: 99.71216388081395
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 191
score: 99.66803533380681
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 192
score: 99.76690118963069
patch: folded CaMeL Size += 0 ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 192
score: 99.7352627840909
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( new CaMeL String ) ) ;
rank: 192
score: 99.73219992897727
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent . replace CaMeL Child ( n , folded CaMeL Size , Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 192
score: 99.71223738386824
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb . to CaMeL String ( ) ) ) ;
rank: 192
score: 99.71190296519886
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 192
score: 99.66796264648437
patch: if ( folded CaMeL Size == $NUMBER$ ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 193
score: 99.76635222739361
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 193
score: 99.73218399439102
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) ) ) ;
rank: 193
score: 99.71969168526786
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) + 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 193
score: 99.71214425223214
patch: folded CaMeL Size += $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 193
score: 99.7115478515625
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 194
score: 99.76629169170673
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 194
score: 99.7431640625
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 194
score: 99.73196336699695
patch: folded CaMeL Size . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 194
score: 99.71954666940789
patch: buffer . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 194
score: 99.71672092013888
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 194
score: 99.71211438301282
patch: folded CaMeL Size += sb . length ( ) / $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 194
score: 99.71151878720238
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 194
score: 99.66746884300595
patch: try { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 195
score: 99.76624644886364
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 195
score: 99.74307250976562
patch: folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 195
score: 99.73733038651316
patch: folded CaMeL Size += sb . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 195
score: 99.7347881610577
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ; }
rank: 195
score: 99.73194398271276
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 195
score: 99.71948809956395
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) . get CaMeL String ( ) ) ;
rank: 195
score: 99.7164279513889
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , n . to CaMeL String ( ) ) ) ;
rank: 195
score: 99.71199544270833
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 195
score: 99.66746520996094
patch: folded CaMeL Size += - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 196
score: 99.71938714748475
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size -- ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 196
score: 99.71175537109374
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ;
rank: 196
score: 99.66744559151786
patch: if ( sb . length ( ) >= 0 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 197
score: 99.76613991477272
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) : Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 197
score: 99.74294704861111
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 197
score: 99.73190174932066
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( node ) ;
rank: 197
score: 99.71617060122283
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 197
score: 99.71112351190476
patch: folded CaMeL Size += new String CaMeL Builder ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 197
score: 99.66738149282095
patch: try { folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 198
score: 99.76584879557292
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 198
score: 99.74287719726563
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 198
score: 99.73720248909883
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size + $NUMBER$ ) ) ;
rank: 198
score: 99.73400268554687
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 198
score: 99.73188709077381
patch: folded CaMeL Size > Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 198
score: 99.71908178084936
patch: folded CaMeL Size = sb . to CaMeL String ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 198
score: 99.71592881944444
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) + 1 ) ) ;
rank: 198
score: 99.71137084960938
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , ( String ) sb . to CaMeL String ( ) ) ) ;
rank: 198
score: 99.7110107421875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 198
score: 99.66716172960069
patch: append ( sb . length ( ) - $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 199
score: 99.76563439002403
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 199
score: 99.73165815304488
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 199
score: 99.7156262520032
patch: folded CaMeL Size += sb . length ( ) + 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 199
score: 99.711181640625
patch: folded CaMeL Size += $NUMBER$ ; folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 199
score: 99.7109375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += 0 ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 199
score: 99.66688980594758
patch: folded CaMeL Size = $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 200
score: 99.765625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 200
score: 99.73711164607558
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb = new String CaMeL Builder ( ) ;
rank: 200
score: 99.731640625
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 200
score: 99.71898057725694
patch: int index = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 200
score: 99.7155166253811
patch: folded CaMeL Size += folded CaMeL Size + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 200
score: 99.666748046875
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 201
score: 99.74231196384804
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ; }
rank: 201
score: 99.73709267064145
patch: folded CaMeL Size += sb . length ( ) + 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 201
score: 99.73356548108552
patch: folded CaMeL Size = sb . length ( ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 201
score: 99.73146701388889
patch: folded CaMeL Size += sb . length ( ) + array CaMeL Node . get CaMeL Child CaMeL Count ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 201
score: 99.71895439680233
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; folded CaMeL Size += $NUMBER$ ;
rank: 201
score: 99.71085801235465
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb to CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 201
score: 99.71072908727135
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; }
rank: 201
score: 99.66672877261513
patch: text . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 202
score: 99.76542607060185
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 202
score: 99.73347981770833
patch: this . folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 202
score: 99.73133812881098
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 202
score: 99.71535326086956
patch: folded CaMeL Size += Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 202
score: 99.71055044778963
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . char CaMeL Value ( ) ) ) ;
rank: 202
score: 99.66670365767045
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 203
score: 99.7650146484375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 203
score: 99.74208762428977
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , right ) ) ;
rank: 203
score: 99.737060546875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 203
score: 99.73338591746794
patch: folded CaMeL Size += ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 203
score: 99.73133103390957
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 203
score: 99.71077688116776
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 203
score: 99.71053059895833
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 203
score: 99.66660288217905
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( this . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 204
score: 99.737060546875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 204
score: 99.73333740234375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 204
score: 99.7186904535061
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 204
score: 99.71451822916667
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , node . to CaMeL String ( ) ) ) ;
rank: 204
score: 99.71077473958333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem . to CaMeL String ( ) ) ) ;
rank: 204
score: 99.66649764623398
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , n . to CaMeL String ( ) ) ) ;
rank: 205
score: 99.764892578125
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 205
score: 99.73681640625
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 205
score: 99.73289730674342
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 205
score: 99.73095703125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; break ;
rank: 205
score: 99.71831984747024
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 205
score: 99.7100929054054
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . trim ( ) ) ) ;
rank: 205
score: 99.66641090029762
patch: if ( sb . length ( ) == 1 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 206
score: 99.76483154296875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 206
score: 99.71796264648438
patch: this . sb . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 206
score: 99.71007987780449
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 206
score: 99.66637244591347
patch: folded CaMeL Size += ( sb . length ( ) + 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 207
score: 99.76452850877193
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 207
score: 99.7418468386628
patch: folded CaMeL Size ++ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 207
score: 99.73088272758152
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 207
score: 99.71784319196429
patch: array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 207
score: 99.710546875
patch: folded CaMeL Size = sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 207
score: 99.70997284679878
patch: folded CaMeL Size = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 207
score: 99.66632952008929
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 208
score: 99.764453125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 208
score: 99.74181676793981
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 208
score: 99.73213009717988
patch: folded CaMeL Size += ( sb . length ( ) + 1 ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 208
score: 99.73075263444767
patch: { folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 208
score: 99.717529296875
patch: this . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 208
score: 99.71429036458333
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 208
score: 99.71033608041158
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { return ; }
rank: 208
score: 99.6662347255609
patch: add ( Node . new CaMeL String ( sb . length ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 209
score: 99.76443614130434
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 209
score: 99.7417988679847
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 209
score: 99.73046875
patch: folded CaMeL Size += sb . length ( ) + array CaMeL Node . get CaMeL Child CaMeL Count ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 209
score: 99.71725109011628
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 209
score: 99.7095977038872
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 209
score: 99.66619551809211
patch: append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 210
score: 99.7303799715909
patch: c . folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 210
score: 99.71678466796875
patch: sb . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 210
score: 99.71413971656976
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 210
score: 99.66605318509616
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , length ( ) ) ) ;
rank: 211
score: 99.71661573840726
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; ;
rank: 211
score: 99.70960653981855
patch: folded CaMeL Size += sb . length ( ) + 1 ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 211
score: 99.70914515053353
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb . length ( ) - 1 ) ) ;
rank: 211
score: 99.66591282894737
patch: folded CaMeL Size folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 212
score: 99.76397705078125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 212
score: 99.74158245584239
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 212
score: 99.73596643518519
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ;
rank: 212
score: 99.730224609375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 212
score: 99.71407277960526
patch: int count = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 212
score: 99.70945870535714
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 212
score: 99.6658935546875
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 213
score: 99.76370304188829
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 213
score: 99.74156697591145
patch: folded CaMeL Size += sb . length ( ) - Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 213
score: 99.73593971946023
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 213
score: 99.7317626953125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Char CaMeL Array ( ) ) ) ;
rank: 213
score: 99.73018215013587
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Node . detach CaMeL Children ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 213
score: 99.71626317223837
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 213
score: 99.7090594951923
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 213
score: 99.66578433388158
patch: add ( sb . to CaMeL String ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 214
score: 99.76351525648585
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 214
score: 99.731689453125
patch: folded CaMeL Size = array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 214
score: 99.73011474609375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Node . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 214
score: 99.71613826308139
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $NUMBER$ ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 214
score: 99.70914713541667
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 214
score: 99.708984375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new . String ( sb . to CaMeL String ( ) ) ) ;
rank: 215
score: 99.76341145833334
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 215
score: 99.73163364955357
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . decode ( sb . to CaMeL String ( ) ) ) ;
rank: 215
score: 99.71382176598837
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 215
score: 99.7089342948718
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ; }
rank: 215
score: 99.70869584517045
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Node . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 215
score: 99.66518304286859
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 216
score: 99.71371068709936
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . get CaMeL String ( ) ) ) ;
rank: 216
score: 99.7088652820122
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 216
score: 99.66507761101974
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 217
score: 99.7633984375
patch: append ( join CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 217
score: 99.74094082446808
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( null ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 217
score: 99.73522665334302
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ; } }
rank: 217
score: 99.7314989043445
patch: this . folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 217
score: 99.7157702323718
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $NUMBER$ , sb . to CaMeL String ( ) ) ) ;
rank: 217
score: 99.7088524070946
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , null ) ) ;
rank: 217
score: 99.66468641493056
patch: remove ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 218
score: 99.76339017427884
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; join CaMeL String = Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 218
score: 99.74062093098958
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 218
score: 99.71342432776163
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , n . to CaMeL String ( ) ) ) ;
rank: 218
score: 99.7086693548387
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ;
rank: 218
score: 99.70815700954861
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 219
score: 99.76315242686171
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 219
score: 99.73495412427326
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size + 1 ) ) ;
rank: 219
score: 99.73118189761513
patch: folded CaMeL Size = sb . length ( ) + 1 ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 219
score: 99.7156982421875
patch: folded CaMeL Size += sb . length ( ) ; else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 219
score: 99.71336059570312
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; break ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 219
score: 99.70813569568452
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 219
score: 99.66411528716216
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( node . to CaMeL String ( ) ) ) ;
rank: 220
score: 99.76308225235849
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 220
score: 99.74047309027777
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 220
score: 99.73072541065706
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . trim ( ) ) ) ;
rank: 220
score: 99.71519576671511
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 220
score: 99.713134765625
patch: folded CaMeL Size += sb . length ( ) * $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 220
score: 99.70813272165698
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 221
score: 99.76304408482143
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 221
score: 99.74037728658537
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 221
score: 99.73474972747093
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size > 0 ) ) ;
rank: 221
score: 99.7297130766369
patch: folded CaMeL Size * Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 221
score: 99.71505216272865
patch: array CaMeL Folded CaMeL Children += sb . to CaMeL String ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 221
score: 99.71308366642442
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 221
score: 99.70809461805555
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 221
score: 99.663916015625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; continue ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 222
score: 99.76295979817708
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 222
score: 99.72970333614865
patch: folded CaMeL Size += $STRING$ . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 222
score: 99.71498686691811
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 222
score: 99.7126797762784
patch: folded CaMeL Size += Node . new CaMeL String ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 222
score: 99.70806884765625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 222
score: 99.70789425872093
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 222
score: 99.6634990985577
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 223
score: 99.76290554470486
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 223
score: 99.73451126453489
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 223
score: 99.73052509014423
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , 0 , sb . length ( ) ) ) ;
rank: 223
score: 99.72970145089286
patch: folded CaMeL Size <= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 223
score: 99.71498001453489
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , n . length ( ) ) ) ;
rank: 223
score: 99.70805163261218
patch: sb . append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 223
score: 99.70779157366071
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 224
score: 99.76280381944444
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 224
score: 99.74010416666667
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 224
score: 99.73440630008012
patch: folded CaMeL Size += sb . length ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 224
score: 99.72967819940476
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) . get CaMeL Cost ( elem ) ;
rank: 224
score: 99.71484375
patch: if ( ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 224
score: 99.707763671875
patch: folded CaMeL Size += folded CaMeL Size + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 224
score: 99.70772094726563
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 225
score: 99.74007854055851
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 225
score: 99.7342559070122
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 225
score: 99.72942405523256
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 225
score: 99.71243489583334
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 225
score: 99.7076056985294
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 225
score: 99.70754665798611
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( 0 ) ) ) ;
rank: 225
score: 99.66302811472039
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 226
score: 99.76267311789773
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 226
score: 99.73419684332771
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 226
score: 99.7145745693109
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node [ ] . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 226
score: 99.70753348214286
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 227
score: 99.76266714242789
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 227
score: 99.72935446714743
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 227
score: 99.71433275799419
patch: folded CaMeL Size = sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 227
score: 99.71218872070312
patch: int folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 227
score: 99.70738002232143
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else
rank: 227
score: 99.70708618164062
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 227
score: 99.66288248697917
patch: if ( sb . trim ( ) != 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 228
score: 99.7625
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 228
score: 99.72927856445312
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } return ;
rank: 228
score: 99.71206519717262
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 228
score: 99.66249302455357
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 229
score: 99.76235563858695
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 229
score: 99.73944714604592
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( sb . to CaMeL String ( ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 229
score: 99.72928292410714
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . set ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 229
score: 99.72884347098214
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ; }
rank: 229
score: 99.70715661951013
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; break ;
rank: 229
score: 99.6623785556891
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( new String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 230
score: 99.73910409432871
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 230
score: 99.72926507994185
patch: int folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 230
score: 99.72869873046875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; return ; }
rank: 230
score: 99.70706612723214
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 230
score: 99.70687288851352
patch: if ( sb . length ( ) > 1 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 230
score: 99.6623337204392
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 231
score: 99.76203041888297
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 231
score: 99.7389635917468
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 231
score: 99.73290252685547
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 231
score: 99.7290926846591
patch: n . folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 231
score: 99.72865054481908
patch: to CaMeL String ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 231
score: 99.71339768629808
patch: folded CaMeL Size < sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 231
score: 99.70674328926282
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; * / array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 231
score: 99.66181776258681
patch: append ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 232
score: 99.76192801339286
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ; }
rank: 232
score: 99.73887914540816
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 232
score: 99.72901553199405
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , $STRING$ ) ) ;
rank: 232
score: 99.7286406726372
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + sb . length ( ) ) ) ;
rank: 232
score: 99.71166449652777
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 232
score: 99.66179741753473
patch: add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 233
score: 99.73887803819444
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 233
score: 99.73281028053977
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( join CaMeL String ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 233
score: 99.72897260616988
patch: folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 233
score: 99.72860326522436
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . sb . to CaMeL String ( ) ) ) ;
rank: 233
score: 99.71330915178571
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) - $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 234
score: 99.76151097074468
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } }
rank: 234
score: 99.71133493822674
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 234
score: 99.70622996794872
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; }
rank: 234
score: 99.66140907689145
patch: index [ 0 ] = sb . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 235
score: 99.73873046875
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 235
score: 99.72866423233695
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Node . detach CaMeL Children ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 235
score: 99.7124755859375
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size -- ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 235
score: 99.70693108974359
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { }
rank: 235
score: 99.70612250434027
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; }
rank: 235
score: 99.66135660807292
patch: start ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 236
score: 99.73867740271227
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 236
score: 99.73245442708334
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 236
score: 99.7284912109375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 236
score: 99.70691964285714
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 236
score: 99.70608520507812
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . substring ( 0 , $NUMBER$ ) ) ) ;
rank: 236
score: 99.6612449852196
patch: append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 237
score: 99.76135944870283
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 237
score: 99.73867603058511
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 237
score: 99.72837271341463
patch: sb . append ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 237
score: 99.71235094572368
patch: Buffer folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 237
score: 99.7060010956555
patch: folded CaMeL Size = sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 238
score: 99.76121961805555
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ; }
rank: 238
score: 99.73219025440706
patch: folded CaMeL Size += sb . get CaMeL String CaMeL Value ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 238
score: 99.72840640419408
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ) ) ;
rank: 238
score: 99.71213180954392
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Character . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 238
score: 99.71090343386628
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ;
rank: 238
score: 99.70599043996711
patch: folded CaMeL Size = sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 238
score: 99.6610619329637
patch: folded CaMeL Size ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 239
score: 99.73841145833333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 239
score: 99.73212663517442
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 239
score: 99.7282958984375
patch: folded CaMeL Size = sb . length ( ) - $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 239
score: 99.72821434507979
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 239
score: 99.71198381696429
patch: array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( ) ) ;
rank: 239
score: 99.7065673828125
patch: String CaMeL Builder sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 239
score: 99.66098361545139
patch: substring ( 0 , sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 240
score: 99.7610922759434
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 240
score: 99.7319668856534
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 240
score: 99.72820888421474
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , sb . length ( ) - 1 ) ) ;
rank: 240
score: 99.7117949695122
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 240
score: 99.71051735101744
patch: folded CaMeL Size += folded CaMeL Size + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 240
score: 99.66084428267045
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 241
score: 99.76092155612245
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 241
score: 99.72805711699695
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 241
score: 99.7280471389358
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Char CaMeL Array ( ) ) ) ;
rank: 241
score: 99.71177115091463
patch: if ( sb . length ( ) > $NUMBER$ ) { folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 241
score: 99.70584810697116
patch: sb . append ( sb . to CaMeL String ( ) ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 242
score: 99.76091879986703
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 242
score: 99.73154296875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 242
score: 99.72798115498311
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( make . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 242
score: 99.72792514534883
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ) ) ;
rank: 242
score: 99.71006944444444
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 242
score: 99.70576435810811
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ;
rank: 243
score: 99.7608173076923
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 243
score: 99.73811629011824
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 243
score: 99.73151129645271
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 243
score: 99.72787710336539
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 243
score: 99.71169211647727
patch: array CaMeL Folded CaMeL Children += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 243
score: 99.70966796875
patch: add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 243
score: 99.70570068359375
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 243
score: 99.66075766958842
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . trim ( ) ) ) ;
rank: 244
score: 99.76081678602431
patch: append ( join CaMeL String ) ; sb = new String CaMeL Builder ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 244
score: 99.73809136284723
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 244
score: 99.72781808035714
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 244
score: 99.7115577491554
patch: folded CaMeL Size = sb . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 244
score: 99.70956349927326
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ;
rank: 244
score: 99.70617254849138
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( ) ) ;
rank: 244
score: 99.70551915322581
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ;
rank: 244
score: 99.66074090254934
patch: folded CaMeL Size ( sb . length ( ) - $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 245
score: 99.76075236002605
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 245
score: 99.73142700195312
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 245
score: 99.7277587890625
patch: * / folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 245
score: 99.7274169921875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; continue ;
rank: 245
score: 99.7093036358173
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) + $NUMBER$ ) ) ;
rank: 245
score: 99.70546361019737
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 245
score: 99.66072823660714
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 246
score: 99.76069612323113
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; join CaMeL String = Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 246
score: 99.73787608045212
patch: folded CaMeL Size = 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 246
score: 99.73137071397569
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 246
score: 99.72763803842905
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , $STRING$ ) ) ;
rank: 246
score: 99.7271131150266
patch: int folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 246
score: 99.71110454358552
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 246
score: 99.70923913043478
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ; }
rank: 246
score: 99.70604383680555
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += sb . length ( ) ;
rank: 246
score: 99.70467748397436
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , folded CaMeL Size ) ) ;
rank: 246
score: 99.66070235402961
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 247
score: 99.76053950471699
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 247
score: 99.73783839026163
patch: folded CaMeL Size ++ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 247
score: 99.7271038552989
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) . size ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 247
score: 99.71093090160473
patch: folded CaMeL Size += sb . length ( ) ; $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 247
score: 99.70920012718024
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 247
score: 99.70579698350694
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 247
score: 99.66063774956598
patch: if ( sb . length ( ) == $NUMBER$ ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 248
score: 99.76042036576705
patch: folded CaMeL Size += 0 ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 248
score: 99.73755402260639
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 248
score: 99.73114568536931
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 248
score: 99.727294921875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , $NUMBER$ ) ) ;
rank: 248
score: 99.70551990327381
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 248
score: 99.7043957832532
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ; }
rank: 248
score: 99.6606247360642
patch: else { folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 249
score: 99.76033809267241
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 249
score: 99.72726362179488
patch: this . folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 249
score: 99.70971053685898
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; try { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 249
score: 99.70911175271739
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 249
score: 99.6603271484375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node . to CaMeL String ( ) ) ;
rank: 250
score: 99.75994241648706
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 250
score: 99.73100142045455
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb = new String CaMeL Builder ( ) ;
rank: 250
score: 99.70531600560898
patch: if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 250
score: 99.70433944310898
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ , sb . to CaMeL String ( ) ) ) ;
rank: 250
score: 99.66016981336806
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( node ) ;
rank: 251
score: 99.75992838541667
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 251
score: 99.73734624335107
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . size ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 251
score: 99.73073508522727
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 251
score: 99.72701505335365
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 251
score: 99.72683376736111
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 251
score: 99.70524458451705
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb . to CaMeL String ( ) ) ) ; }
rank: 251
score: 99.70422014508928
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 251
score: 99.66014145359848
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 252
score: 99.75992542613636
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ) ) ;
rank: 252
score: 99.73711320465686
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ;
rank: 252
score: 99.72698974609375
patch: folded CaMeL Size = ( int ) sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 252
score: 99.72651811079545
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . to CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 252
score: 99.70878405448718
patch: if ( ! folded CaMeL Size ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 252
score: 99.70875186011905
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ; }
rank: 252
score: 99.70523648648648
patch: this . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 252
score: 99.66011555989583
patch: if ( sb . length ( ) < 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 253
score: 99.7598293138587
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 253
score: 99.72690114667338
patch: folded CaMeL Size ++ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 253
score: 99.7262546705163
patch: folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 253
score: 99.7087634858631
patch: if ( false ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 253
score: 99.70397600446428
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( n ) ) ;
rank: 253
score: 99.65997149493244
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 254
score: 99.75962357954545
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 254
score: 99.73672427771227
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 254
score: 99.7303799715909
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 254
score: 99.72623071915064
patch: buf . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 254
score: 99.70872703758445
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Double . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 254
score: 99.708642578125
patch: int folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 254
score: 99.70517800071023
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( join CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 254
score: 99.70394287109374
patch: folded CaMeL Size = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 254
score: 99.65982446915064
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . length ( ) ) ) ;
rank: 255
score: 99.75960618622449
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 255
score: 99.72611860795455
patch: ch . folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 255
score: 99.70864007411859
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } ;
rank: 255
score: 99.70514072516026
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 255
score: 99.65967456714527
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , index ) ) ;
rank: 256
score: 99.73016648065476
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 256
score: 99.7264892578125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + 1 ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 256
score: 99.7260974702381
patch: folded CaMeL Size - Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 256
score: 99.70494995117187
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 256
score: 99.7038633765244
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ; }
rank: 256
score: 99.65964157516892
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + $NUMBER$ ) ) ;
rank: 257
score: 99.7594892393868
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 257
score: 99.73012473366477
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 257
score: 99.72616577148438
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) + $NUMBER$ ; }
rank: 257
score: 99.70822217987805
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) + $NUMBER$ ;
rank: 257
score: 99.70792643229167
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 257
score: 99.65961518158784
patch: append ( sb . to CaMeL String ( ) ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 258
score: 99.75943656589673
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 258
score: 99.72980700041118
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb = new String CaMeL Builder ( ) ;
rank: 258
score: 99.72605298913044
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 258
score: 99.72595563616072
patch: length += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 258
score: 99.7078601925872
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . trim ( ) ) ) ;
rank: 258
score: 99.70780123197116
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 258
score: 99.6595458984375
patch: sb . add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 259
score: 99.7363671875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 259
score: 99.729736328125
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 259
score: 99.72591378348214
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 259
score: 99.70778937088816
patch: if ( folded CaMeL Size ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 259
score: 99.707763671875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ; }
rank: 259
score: 99.70476017441861
patch: folded CaMeL Size += 1 ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 259
score: 99.70354903371711
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , 0 ) ) ; }
rank: 260
score: 99.759228515625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 260
score: 99.72971929505815
patch: folded CaMeL Size += sb . to CaMeL String ( ) . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 260
score: 99.72588147615132
patch: folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 260
score: 99.72576349431819
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ , sb . to CaMeL String ( ) ) ) ;
rank: 260
score: 99.70762595152243
patch: folded CaMeL Size += sb . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 260
score: 99.70760633680555
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 260
score: 99.70474446614584
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 260
score: 99.70354614257812
patch: folded CaMeL Size = sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 260
score: 99.65946764823718
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , this ) ) ;
rank: 261
score: 99.75912039620536
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 261
score: 99.72587890625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , sb . to CaMeL String ( ) ) ) ;
rank: 261
score: 99.72530110677083
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ) ) ;
rank: 261
score: 99.70468374399039
patch: folded CaMeL Size += array CaMeL Node . get CaMeL Cost ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 261
score: 99.70347900390625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } * / array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 262
score: 99.7589695142663
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 262
score: 99.736240234375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 262
score: 99.72947432355183
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } sb = new String CaMeL Builder ( ) ;
rank: 262
score: 99.7258498733108
patch: this . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 262
score: 99.7075850323933
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 262
score: 99.70347086588542
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( node ) ) ; }
rank: 262
score: 99.65943667763158
patch: append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 263
score: 99.75893040707237
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 263
score: 99.72940063476562
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } } }
rank: 263
score: 99.72519402754934
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ) ) ;
rank: 263
score: 99.7075696113782
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , value ) ) ;
rank: 263
score: 99.70721990411931
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . format ( sb . to CaMeL String ( ) ) ) ) ;
rank: 263
score: 99.70320418074324
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 263
score: 99.65940504807692
patch: if ( sb . index CaMeL Of ( $STRING$ ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 264
score: 99.75892411901596
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 264
score: 99.73618267952128
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 264
score: 99.72571113782051
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb ) ) ;
rank: 264
score: 99.72495339133523
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 264
score: 99.70718315972222
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , to CaMeL String ( ) ) ) ;
rank: 264
score: 99.70442922491776
patch: folded CaMeL Size += sb . length ( ) ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 264
score: 99.70305633544922
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add CaMeL All ( sb . to CaMeL String ( ) ) ;
rank: 264
score: 99.65937763935811
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , node ) ) ;
rank: 265
score: 99.75889185855263
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 265
score: 99.73604642427884
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 265
score: 99.729296875
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 265
score: 99.72560424804688
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 265
score: 99.7247569949128
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 265
score: 99.704345703125
patch: folded CaMeL Size < Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 265
score: 99.65934448242187
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 266
score: 99.75887586805555
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 266
score: 99.72919170673077
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 266
score: 99.72553315033784
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 266
score: 99.72464192708334
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; continue ; }
rank: 266
score: 99.70726348132622
patch: if ( sb . length ( ) > $NUMBER$ ) { folded CaMeL Size -- ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 266
score: 99.70429021661931
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ) ;
rank: 266
score: 99.65926513671874
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( ( Integer ) sb . to CaMeL String ( ) ) ) ;
rank: 267
score: 99.7359874636628
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 267
score: 99.7290289463141
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 267
score: 99.72443576388889
patch: folded CaMeL Size += sb . length ( ) + array CaMeL Folded CaMeL Children . size ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 267
score: 99.70697631835938
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 267
score: 99.70680497332317
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ;
rank: 267
score: 99.65914838741988
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 268
score: 99.7250244140625
patch: if ( array CaMeL Folded CaMeL Children . size ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 268
score: 99.7243985262784
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + $STRING$ ) ) ;
rank: 268
score: 99.70691528320313
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else ;
rank: 268
score: 99.706787109375
patch: if ( sb . length ( ) > 1 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 269
score: 99.75868517287235
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ; }
rank: 269
score: 99.72898995535714
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 269
score: 99.72493688071647
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL Char CaMeL Array ( ) ) ) ;
rank: 269
score: 99.72401012073864
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent . replace CaMeL Child ( n , folded CaMeL Size , Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ) ;
rank: 269
score: 99.70675998263889
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( array CaMeL Folded CaMeL Children ) ;
rank: 269
score: 99.70664576480263
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 269
score: 99.70398800872093
patch: folded CaMeL Size += array CaMeL Node . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 269
score: 99.70241088867188
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . char CaMeL At ( 0 ) ) ) ;
rank: 269
score: 99.65909616570724
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 270
score: 99.7357177734375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 270
score: 99.72476806640626
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( ( Node ) Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 270
score: 99.72388756793478
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 270
score: 99.70662874788852
patch: folded CaMeL Size < sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 270
score: 99.6590909090909
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , null ) ) ;
rank: 271
score: 99.75838758680555
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( join CaMeL String ) ;
rank: 271
score: 99.72891235351562
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 271
score: 99.72466856060606
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , $STRING$ ) ) ;
rank: 271
score: 99.7236328125
patch: sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 271
score: 99.70662231445313
patch: set CaMeL String ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 271
score: 99.7062655362216
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 271
score: 99.703857421875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } folded CaMeL Size += 0 ;
rank: 271
score: 99.65901692708333
patch: remove ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 272
score: 99.75831074617346
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 272
score: 99.72889468544408
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 272
score: 99.72344447544643
patch: folded CaMeL Size += sb . length ( ) + SIZE ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 272
score: 99.70596704727564
patch: folded CaMeL Size += sb . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 272
score: 99.7037978753811
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 272
score: 99.70219341077302
patch: folded CaMeL Size += $NUMBER$ ; sb . append ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 272
score: 99.65896267361111
patch: start ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 273
score: 99.75820655153508
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 273
score: 99.72881944444444
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 273
score: 99.72339928668478
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 273
score: 99.70634765625
patch: next ( ) . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 273
score: 99.7058993252841
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 273
score: 99.65887616131756
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) . to CaMeL String ( ) ) ;
rank: 274
score: 99.72378540039062
patch: else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 274
score: 99.72338324652777
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 274
score: 99.70604858398437
patch: this . . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 274
score: 99.70580486918605
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( new String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 274
score: 99.70156565020162
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 274
score: 99.65871853298611
patch: folded CaMeL Size += sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 275
score: 99.75796732088415
patch: String CaMeL Builder sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 275
score: 99.72839936755952
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 275
score: 99.70600971422698
patch: int length = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 275
score: 99.65864000822368
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , null ) ) ;
rank: 276
score: 99.75788959703948
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 276
score: 99.7283935546875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 276
score: 99.72327769886364
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , null ) ) ;
rank: 276
score: 99.70595974392361
patch: folded CaMeL Size += Math . length ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 276
score: 99.70551091974431
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 276
score: 99.70153438683712
patch: folded CaMeL Size -= $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 276
score: 99.65827198517628
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ + sb . length ( ) ) ) ;
rank: 277
score: 99.75779172207447
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 277
score: 99.73495628720238
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 277
score: 99.72329711914062
patch: get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 277
score: 99.72314453125
patch: folded CaMeL Size . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 277
score: 99.70571754092262
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( to CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 277
score: 99.7034941882622
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 277
score: 99.65826251055744
patch: array CaMeL Folded CaMeL Children = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 278
score: 99.7577373798077
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 278
score: 99.73490668402778
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 278
score: 99.72802124023437
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ; }
rank: 278
score: 99.72298803084936
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 278
score: 99.70541863692434
patch: add ( sb . to CaMeL String ( ) ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 278
score: 99.7027920809659
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 278
score: 99.7009521484375
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ; }
rank: 278
score: 99.6582281650641
patch: add ( ( String ) sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 279
score: 99.7053455171131
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( ) ) ; }
rank: 279
score: 99.7027254971591
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 279
score: 99.70087028952206
patch: += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 279
score: 99.658203125
patch: add ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 280
score: 99.75742556014151
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 280
score: 99.734814453125
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 280
score: 99.72773210392442
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 280
score: 99.72287819602273
patch: folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 280
score: 99.72273543074324
patch: folded CaMeL Size = array CaMeL Folded CaMeL Children . length ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 280
score: 99.70530598958334
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( ) ) ;
rank: 280
score: 99.7048870584239
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ; }
rank: 280
score: 99.70268110795455
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 280
score: 99.70086513421474
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( 0 , $NUMBER$ ) ) ) ; }
rank: 280
score: 99.65817100123355
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 281
score: 99.75740393813776
patch: append ( join CaMeL String ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 281
score: 99.73475796568627
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 281
score: 99.72279052734375
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 281
score: 99.7226364548142
patch: folded CaMeL Size += sb . length ( ) ; $NUMBER$ * array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 281
score: 99.70524485518293
patch: next ( ) . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 281
score: 99.70261840820312
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( join CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 281
score: 99.6579089042468
patch: add ( sb . to CaMeL String ( ) ) ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 282
score: 99.73473103841145
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 282
score: 99.72248096955128
patch: folded CaMeL Size += sb . length ( ) + 1 + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 282
score: 99.70499234586148
patch: this . array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 282
score: 99.7046786221591
patch: folded CaMeL Size = sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 282
score: 99.7019293369391
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . get CaMeL String CaMeL Value ( ) ) ) ;
rank: 282
score: 99.7004592483108
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . $NUMBER$ ( sb . to CaMeL String ( ) ) ) ;
rank: 282
score: 99.65774274553571
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , $NUMBER$ ) ) ;
rank: 283
score: 99.75690660978618
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; break ;
rank: 283
score: 99.72712223704268
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 283
score: 99.7224757982337
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( node ) ;
rank: 283
score: 99.70182291666667
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 283
score: 99.70022922092014
patch: int n = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 283
score: 99.65762416294643
patch: if ( sb . length ( ) > 1 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 284
score: 99.7568359375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 284
score: 99.72242838541666
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 284
score: 99.72235932221284
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( String . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 284
score: 99.70450303819445
patch: folded CaMeL Size = sb . to CaMeL String ( ) . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 284
score: 99.70181274414062
patch: folded CaMeL Size += sb . length ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 284
score: 99.65756564670139
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ( String ) sb . to CaMeL String ( ) ) ) ;
rank: 285
score: 99.75668646364795
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } } }
rank: 285
score: 99.72231820913461
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 285
score: 99.70464409722223
patch: array CaMeL Folded CaMeL Children . add ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 285
score: 99.70172991071429
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += $NUMBER$ ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 285
score: 99.69994457347973
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( append . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 285
score: 99.65748426649306
patch: if ( sb . length ( ) == 0 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 286
score: 99.72664018110795
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 286
score: 99.72226324314025
patch: folded CaMeL Size += $NUMBER$ ; folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 286
score: 99.7045654296875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 286
score: 99.70442311356707
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 286
score: 99.70138811383929
patch: folded CaMeL Size = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 286
score: 99.69961547851562
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 286
score: 99.65744977678571
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Character . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 287
score: 99.7565625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 287
score: 99.72658036394817
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 287
score: 99.72223864103618
patch: folded CaMeL Size = sb . length ( ) - $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 287
score: 99.7045302972561
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) + $NUMBER$ ) ) ;
rank: 287
score: 99.70422033361487
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( n . to CaMeL String ( ) ) ) ;
rank: 287
score: 99.69960805532095
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ;
rank: 288
score: 99.75650185032895
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; return ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 288
score: 99.73422475961539
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 288
score: 99.72655029296875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ,
rank: 288
score: 99.72223510742188
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 288
score: 99.70442504882813
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } ) ;
rank: 288
score: 99.70421511627907
patch: folded CaMeL Size = sb . to CaMeL String ( ) . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 288
score: 99.6994873046875
patch: System . out . println ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 288
score: 99.65738075657895
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 289
score: 99.75643076795212
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 289
score: 99.7222210427989
patch: folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 289
score: 99.72210083007812
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , null ) ) ;
rank: 289
score: 99.70414698401163
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) + $NUMBER$ ) ) ;
rank: 289
score: 99.70129678415698
patch: folded CaMeL Size += $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 289
score: 99.69935128348214
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , $NUMBER$ ) ) ;
rank: 289
score: 99.65729314630681
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ + sb . length ( ) ) ) ;
rank: 290
score: 99.70365574048913
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ; }
rank: 290
score: 99.69924444901316
patch: folded CaMeL Size += sb . length ( ) ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 290
score: 99.65721404246794
patch: if ( sb . length ( ) == 0 ) { folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 291
score: 99.72625868055556
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 291
score: 99.72174750434027
patch: folded CaMeL Size = sb . length ( ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 291
score: 99.70398262219551
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) + $STRING$ ;
rank: 291
score: 99.70350713315217
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 291
score: 99.70092147435898
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 291
score: 99.6990902549342
patch: folded CaMeL Size += $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 291
score: 99.6570183249081
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 292
score: 99.75616574754902
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 292
score: 99.72174627130681
patch: cfw . folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 292
score: 99.72165749289773
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 292
score: 99.70390392485119
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb ) ;
rank: 292
score: 99.69898856026786
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) ) ) ; }
rank: 292
score: 99.65675755550987
patch: add ( sb . to CaMeL String ( ) - $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 293
score: 99.75616455078125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } }
rank: 293
score: 99.72163205030488
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 293
score: 99.703369140625
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 293
score: 99.70074037063954
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 293
score: 99.69894821579392
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb . to CaMeL String ( ) ) ) ;
rank: 293
score: 99.6567447060033
patch: if ( sb . length ( ) == 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 294
score: 99.75612474524456
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 294
score: 99.73379629629629
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 294
score: 99.72128378378379
patch: folded CaMeL Size += list . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 294
score: 99.70379929315476
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 294
score: 99.70335210755815
patch: folded CaMeL Size += n . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 294
score: 99.65663812099359
patch: folded CaMeL Size += sb . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 295
score: 99.75608473557692
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 295
score: 99.72157353940217
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } array CaMeL Node . detach CaMeL Children ( ) ;
rank: 295
score: 99.7036787823933
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 295
score: 99.69876346072635
patch: folded CaMeL Size += folded CaMeL Size + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 295
score: 99.65652804904514
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 296
score: 99.7560526529948
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 296
score: 99.73365234375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 296
score: 99.72144122456395
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else {
rank: 296
score: 99.6565191806891
patch: sb . add ( sb . to CaMeL String ( ) ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 297
score: 99.75594075520833
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; break ;
rank: 297
score: 99.72133567116477
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; return ;
rank: 297
score: 99.72094116210937
patch: folded CaMeL Size += $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 297
score: 99.70024294969512
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 297
score: 99.65627790178571
patch: if ( sb . length ( ) > ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 298
score: 99.7334872159091
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 298
score: 99.72559678819445
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 298
score: 99.72109375
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 298
score: 99.72085199123475
patch: if ( sb . length ( ) < sb . length ( ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 298
score: 99.70356709248311
patch: folded CaMeL Size += sb . length ( ) + false ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 298
score: 99.70016659007354
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 298
score: 99.69829497466216
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( array CaMeL Node ) ) ;
rank: 298
score: 99.65619973575367
patch: assert sb . length ( ) > 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 299
score: 99.72556374289773
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 299
score: 99.72100275213069
patch: s . folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 299
score: 99.720458984375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 299
score: 99.70305989583333
patch: folded CaMeL Size += n . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 299
score: 99.69822862413194
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ;
rank: 300
score: 99.75578477647569
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 300
score: 99.720947265625
patch: folded CaMeL Size < Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 300
score: 99.72019102515245
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ;
rank: 300
score: 99.70335557725694
patch: int length += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 300
score: 99.69994419642858
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 300
score: 99.69822340745192
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . folded CaMeL Size ( sb . to CaMeL String ( ) ) ) ;
rank: 300
score: 99.6561279296875
patch: add ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 301
score: 99.75570275648585
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 301
score: 99.73322482638889
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 301
score: 99.72091090425532
patch: folded CaMeL Size += sb . length ( ) + array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 301
score: 99.72011361471037
patch: folded CaMeL Size += $NUMBER$ ; } else { folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 301
score: 99.69953264508929
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 301
score: 99.65604544974663
patch: if ( sb . length ( ) > 0 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 302
score: 99.73313306725544
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 302
score: 99.72089177911931
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + $NUMBER$ ) ) ;
rank: 302
score: 99.70304565429687
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; folded CaMeL Size += sb . length ( ) ;
rank: 302
score: 99.69760470920139
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; }
rank: 302
score: 99.65576171875
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + 1 ) ) ;
rank: 303
score: 99.75547960069444
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 303
score: 99.72533637152777
patch: add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 303
score: 99.72087053571428
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 303
score: 99.71981894003379
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 303
score: 99.70299353966347
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ : $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 303
score: 99.70261400799419
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , to CaMeL String ) ) ;
rank: 303
score: 99.69950457317073
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 303
score: 99.69732666015625
patch: folded CaMeL Size += sb . length ( ) - 1 ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 303
score: 99.655712890625
patch: folded CaMeL Size += sb . trim ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 304
score: 99.72531467013889
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( join CaMeL String ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 304
score: 99.72077742866848
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 304
score: 99.71974583675987
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , sb . length ( ) ) ) ;
rank: 304
score: 99.70286766258445
patch: array CaMeL Folded CaMeL Children += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 304
score: 99.6994861421131
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += 1 ;
rank: 304
score: 99.6556297508446
patch: if ( sb . length ( ) >= 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 305
score: 99.73304161658653
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } sb . append ( join CaMeL String ) ;
rank: 305
score: 99.72515578497024
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ; }
rank: 305
score: 99.72074809827302
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 305
score: 99.69927687872024
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } elem = elem ;
rank: 305
score: 99.69695888421474
patch: if ( sb . length ( ) + 1 > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 305
score: 99.65561285251525
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true , true ) ) ;
rank: 306
score: 99.75518798828125
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 306
score: 99.7250381097561
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = null ;
rank: 306
score: 99.70211659307066
patch: folded CaMeL Size = sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 306
score: 99.69868396577381
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 306
score: 99.65560689786585
patch: append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 307
score: 99.75518176020408
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 307
score: 99.73298756669207
patch: folded CaMeL Size += array CaMeL Node . get CaMeL Child CaMeL Count ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 307
score: 99.72053328804348
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , array CaMeL Node ) ) ;
rank: 307
score: 99.702783203125
patch: list . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 307
score: 99.7020008175872
patch: folded CaMeL Size += $NUMBER$ ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 307
score: 99.69676414695945
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 307
score: 99.65539157006049
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 308
score: 99.755126953125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 308
score: 99.73289930555555
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 308
score: 99.71951541385135
patch: new CaMeL String = sb . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 308
score: 99.70193407012195
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else
rank: 308
score: 99.65524291992188
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 309
score: 99.75510951450893
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 309
score: 99.72478298611111
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb = new String CaMeL Builder ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 309
score: 99.7200558684593
patch: folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 309
score: 99.71947582347973
patch: * / folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 309
score: 99.7024676983173
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 309
score: 99.69661030016448
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ; }
rank: 309
score: 99.6551846590909
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( ( String ) sb . to CaMeL String ( ) ) ;
rank: 310
score: 99.75508939302884
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ;
rank: 310
score: 99.73276654411765
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( Node CaMeL Util . is CaMeL Immutable CaMeL Value ( elem ) ) { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 310
score: 99.72469075520833
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; }
rank: 310
score: 99.72004500679348
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) , folded CaMeL Size ) ;
rank: 310
score: 99.71927642822266
patch: folded CaMeL Size += $NUMBER$ ; else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 310
score: 99.70239997632575
patch: this . folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 310
score: 99.69850463867188
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } elem = elem ;
rank: 310
score: 99.69657279349663
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ;
rank: 310
score: 99.65502303685898
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 311
score: 99.73265165441177
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 311
score: 99.70207134046052
patch: next folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 311
score: 99.70180306783537
patch: try { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 311
score: 99.6549560546875
patch: append ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 312
score: 99.75480850883152
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 312
score: 99.73250638521634
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 312
score: 99.70197211371527
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( ) ) ; }
rank: 312
score: 99.70178803943452
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ; }
rank: 312
score: 99.69845145089286
patch: folded CaMeL Size += sb . length ( ) + 1 ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 313
score: 99.75437182049419
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += 0 ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 313
score: 99.73244357638889
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( folded CaMeL Size > 0 ) { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 313
score: 99.72425537109375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 313
score: 99.71993582589286
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( 0 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 313
score: 99.7189881859756
patch: * / folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 313
score: 99.701904296875
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ;
rank: 313
score: 99.70164930555555
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 313
score: 99.69837364783653
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } elem = array CaMeL Node . get CaMeL First CaMeL Child ( ) ;
rank: 313
score: 99.65464782714844
patch: folded CaMeL Size += - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 314
score: 99.75423828125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL Cost ( elem ) ;
rank: 314
score: 99.7199070142663
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 314
score: 99.7188750476372
patch: folded CaMeL Size += System . current CaMeL Time CaMeL Millis ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 314
score: 99.70184491131756
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 314
score: 99.70162760416666
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 314
score: 99.69827706473214
patch: folded CaMeL Size += array CaMeL Node . get CaMeL Cost ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 314
score: 99.69540887129934
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 315
score: 99.75416056315105
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } }
rank: 315
score: 99.73235677083333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 315
score: 99.70158066860465
patch: if ( folded CaMeL Size ) folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 315
score: 99.69535522460937
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( 0 , Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 316
score: 99.75410893278301
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 316
score: 99.7323467548077
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 316
score: 99.7194169207317
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 316
score: 99.71849926097973
patch: new CaMeL String = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 316
score: 99.70172614020271
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . length ( ) + $NUMBER$ ) ) ;
rank: 316
score: 99.69805908203125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 316
score: 99.69527395148026
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( list . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 316
score: 99.65434827302632
patch: folded CaMeL Size ( sb . length ( ) ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 317
score: 99.72369939630681
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ;
rank: 317
score: 99.7183867663872
patch: folded CaMeL Size += ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 317
score: 99.7016665810033
patch: int to CaMeL String = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 317
score: 99.7015125363372
patch: folded CaMeL Size . add ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 317
score: 99.69520692567568
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; }
rank: 317
score: 99.6543166701858
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 318
score: 99.73232421875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( join CaMeL String ) ;
rank: 318
score: 99.72368958938954
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size - 1 ) ) ;
rank: 318
score: 99.70152869591347
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) + 1 ;
rank: 318
score: 99.7012969226372
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 318
score: 99.69758357558139
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 318
score: 99.6950927734375
patch: if ( folded CaMeL Size += sb . length ( ) + $NUMBER$ ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 318
score: 99.65424053485577
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , count ) ) ;
rank: 319
score: 99.75338979867789
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 319
score: 99.73224840666118
patch: sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 319
score: 99.71911039806548
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( t ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 319
score: 99.69755473889802
patch: folded CaMeL Size += sb . length ( ) + - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 319
score: 99.69494298986487
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( new Node . String ( sb . to CaMeL String ( ) ) ) ;
rank: 319
score: 99.65419671474359
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 320
score: 99.75327329282408
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 320
score: 99.72331981169872
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 320
score: 99.71902126736111
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 320
score: 99.71795333059211
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 320
score: 99.70135498046875
patch: if ( array CaMeL Folded CaMeL Children . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 320
score: 99.6541748046875
patch: add ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 321
score: 99.75324435763889
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 321
score: 99.73211669921875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( null ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 321
score: 99.70132300967262
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( $STRING$ ) ; }
rank: 322
score: 99.75313765914352
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 322
score: 99.723046875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 322
score: 99.71884987571023
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 322
score: 99.71787985777243
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Upper CaMeL Case ( ) ) ) ;
rank: 322
score: 99.70121765136719
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } }
rank: 322
score: 99.69733629728618
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; break ; }
rank: 322
score: 99.6541015625
patch: folded CaMeL Size >= sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 323
score: 99.75308912627551
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 323
score: 99.72299566501525
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 323
score: 99.71879245923913
patch: folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 323
score: 99.7177734375
patch: if ( array CaMeL Folded CaMeL Children . size ( ) > 0 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 323
score: 99.70119757401316
patch: folded CaMeL Size += sb . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 323
score: 99.70058139534883
patch: folded CaMeL Size += node . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 323
score: 99.69731181376689
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 323
score: 99.69464267828526
patch: folded CaMeL Size += $NUMBER$ * sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 323
score: 99.65406629774306
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( null ) ;
rank: 324
score: 99.75293628589527
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 324
score: 99.73197428385417
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 324
score: 99.72295148982558
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 324
score: 99.71868489583333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 324
score: 99.71765747070313
patch: folded CaMeL Size += sb . length ( ) + 1 ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 324
score: 99.69461763822116
patch: folded CaMeL Size -= sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 324
score: 99.65389927455357
patch: folded CaMeL Size += n . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 325
score: 99.75281778971355
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 325
score: 99.72294921875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 325
score: 99.71763700597427
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ;
rank: 325
score: 99.69719304265203
patch: folded CaMeL Size += sb . length ( ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 325
score: 99.694580078125
patch: sb . append ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 325
score: 99.65374434621711
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 326
score: 99.75210425967262
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 326
score: 99.72291201636905
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( this ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 326
score: 99.71837158203125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , folded CaMeL Size ) ) ;
rank: 326
score: 99.70088276110198
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 326
score: 99.69444861778847
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , to CaMeL String ( ) ) ) ;
rank: 326
score: 99.65366617838542
patch: if ( sb . length ( ) >= 1 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 327
score: 99.75196351396276
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 327
score: 99.72265625
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 327
score: 99.7181640625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 327
score: 99.71728515625
patch: add ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 327
score: 99.69684448242188
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ;
rank: 327
score: 99.65352277057927
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ + $NUMBER$ ) ) ;
rank: 328
score: 99.75180365114795
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ; }
rank: 328
score: 99.72260076349431
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n , right ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 328
score: 99.71810689786585
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) . length ( ) + $NUMBER$ ;
rank: 328
score: 99.71725945723684
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 328
score: 99.70069611378206
patch: add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 328
score: 99.6967540922619
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 328
score: 99.69434381300404
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ;
rank: 329
score: 99.75173389668367
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 329
score: 99.72250764266305
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( join CaMeL String ) ;
rank: 329
score: 99.71797783430233
patch: { folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 329
score: 99.71709846047794
patch: folded CaMeL Size += 1 ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 329
score: 99.7003173828125
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 329
score: 99.70026961616848
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 329
score: 99.69434356689453
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( 0 , sb . to CaMeL String ( ) ) ;
rank: 329
score: 99.65289306640625
patch: push ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 330
score: 99.75168328536184
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; break ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 330
score: 99.73158330502717
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 330
score: 99.722412109375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 330
score: 99.71791294642857
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) . get CaMeL Cost ( elem ) ;
rank: 330
score: 99.71693725585938
patch: new CaMeL String = sb . to CaMeL String ( ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 330
score: 99.70015222886029
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 330
score: 99.69422496448864
patch: folded CaMeL Size += $NUMBER$ * $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 331
score: 99.75160522460938
patch: folded CaMeL Size += join CaMeL String . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 331
score: 99.72234157986111
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 331
score: 99.70005759214743
patch: folded CaMeL Size += Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 331
score: 99.69986780678353
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 332
score: 99.7509765625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } break ;
rank: 332
score: 99.73128453696647
patch: folded CaMeL Size = array CaMeL Node . get CaMeL First CaMeL Child ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 332
score: 99.7223155886628
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 332
score: 99.71676296657986
patch: folded CaMeL Size += $NUMBER$ + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 332
score: 99.70003255208333
patch: folded CaMeL Size += this . sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 332
score: 99.69945126488095
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; break ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 332
score: 99.69388620476974
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL Instance ( sb . to CaMeL String ( ) ) ) ;
rank: 332
score: 99.6525943153783
patch: folded CaMeL Size ( sb . length ( ) ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 333
score: 99.75095663265306
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 333
score: 99.73117547286184
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( join CaMeL String ) ) ;
rank: 333
score: 99.71769445082721
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 333
score: 99.71663818359374
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + $NUMBER$ ) ) ;
rank: 333
score: 99.69942491319445
patch: add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 333
score: 99.69615589488636
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 334
score: 99.75094443873355
patch: append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 334
score: 99.73095703125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 334
score: 99.7176846590909
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , sb . to CaMeL String ( ) ) ) ;
rank: 334
score: 99.71647338867187
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ; }
rank: 334
score: 99.69999499198718
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) , $NUMBER$ ) ;
rank: 335
score: 99.75090422453704
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 335
score: 99.7308933423913
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 335
score: 99.72200775146484
patch: folded CaMeL Size += sb . length ( ) - 1 ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 335
score: 99.71643744574652
patch: if ( sb . length ( ) <= 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 335
score: 99.69984994283537
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 335
score: 99.69927657277961
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , ) ) ;
rank: 335
score: 99.69580078125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 335
score: 99.69340209960937
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 336
score: 99.75090285966981
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; }
rank: 336
score: 99.73080119680851
patch: folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 336
score: 99.72198486328125
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 336
score: 99.71736092403017
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( sb . length ( ) > 0 ) {
rank: 336
score: 99.69980826028963
patch: else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 336
score: 99.69569955221037
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 336
score: 99.69325561523438
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . to CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 337
score: 99.73074925199468
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 337
score: 99.71722577069256
patch: folded CaMeL Size -= sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 337
score: 99.6991943359375
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ;
rank: 337
score: 99.69567587209302
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; folded CaMeL Size += 0 ;
rank: 337
score: 99.65197383996212
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 338
score: 99.7508518949468
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 338
score: 99.73073323567708
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size + $NUMBER$ ) ) ;
rank: 338
score: 99.7218487079327
patch: folded CaMeL Size += sb . length ( ) + 1 ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 338
score: 99.71681906960227
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent . replace CaMeL Child ( n , folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 338
score: 99.69979039634147
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 338
score: 99.69561244419643
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 338
score: 99.65190044202302
patch: add ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 339
score: 99.72182745682566
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 339
score: 99.7163150185033
patch: if ( sb . starts CaMeL With ( $STRING$ ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 339
score: 99.69557450457317
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } break ; }
rank: 339
score: 99.69297960069444
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . ( sb . to CaMeL String ( ) ) ) ;
rank: 339
score: 99.65179443359375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ; }
rank: 340
score: 99.75078722895408
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 340
score: 99.73036887428977
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ;
rank: 340
score: 99.72181285511364
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( join CaMeL String ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 340
score: 99.7166748046875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 340
score: 99.6995750633446
patch: new CaMeL String += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 340
score: 99.69296264648438
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb . length ( ) ) ) ; }
rank: 340
score: 99.65176156850961
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 341
score: 99.72174854767628
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 341
score: 99.71666949728261
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Node . detach CaMeL Children ( ) ; }
rank: 341
score: 99.71596547719595
patch: folded CaMeL Size += out . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 341
score: 99.69905229048295
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 341
score: 99.69278738839286
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( new String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 341
score: 99.65172576904297
patch: append ( folded CaMeL Size ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 342
score: 99.75068530701755
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 342
score: 99.7217129794034
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + $STRING$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 342
score: 99.71659712357955
patch: g . folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 342
score: 99.69940476190476
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( sb . length ( ) ) ) ) ;
rank: 342
score: 99.69278345352564
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 342
score: 99.65152138157895
patch: append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 343
score: 99.75064772002551
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ; }
rank: 343
score: 99.72169896175987
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 343
score: 99.71645720108695
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 343
score: 99.71590609163852
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( sb . to CaMeL String ( ) ) ) ;
rank: 343
score: 99.69937525040064
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 343
score: 99.69522913490853
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , join CaMeL String ) ) ;
rank: 343
score: 99.65148247612848
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 344
score: 99.75063372672872
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } parent = elem ;
rank: 344
score: 99.72149103338069
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + $STRING$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 344
score: 99.71642287234043
patch: int folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 344
score: 99.71585161258012
patch: append ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 344
score: 99.69914729420732
patch: folded CaMeL Size += count ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 344
score: 99.69869862432066
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 344
score: 99.6951805320946
patch: out . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 344
score: 99.692529296875
patch: if ( sb . length ( ) + $NUMBER$ > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 344
score: 99.65136021205358
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( node . to CaMeL String ( ) ) ) ;
rank: 345
score: 99.7505391438802
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 345
score: 99.7163283889358
patch: folded CaMeL Size = sb . length ( ) - 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 345
score: 99.69868800951087
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 345
score: 99.69501726017442
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 345
score: 99.69252797719595
patch: folded CaMeL Size += $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 345
score: 99.65133056640624
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 346
score: 99.750537109375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 346
score: 99.72986070165095
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; int folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 346
score: 99.71625046502976
patch: folded CaMeL Size >= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 346
score: 99.71576450892857
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + $NUMBER$ ) ) ;
rank: 346
score: 99.69850336119185
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) + 1 ) ) ;
rank: 346
score: 99.69489080255681
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } folded CaMeL Size += $NUMBER$ ;
rank: 346
score: 99.69242350260417
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ; }
rank: 346
score: 99.65130780194256
patch: append ( sb . to CaMeL String ( ) ) ; else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 347
score: 99.72137451171875
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 347
score: 99.7160977450284
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Char CaMeL Array ( ) ) ) ;
rank: 347
score: 99.71574321546052
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + $NUMBER$ ) ) ;
rank: 347
score: 99.69885835193452
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ; array CaMeL Folded CaMeL Children . add ( sb ) ;
rank: 347
score: 99.69839332217262
patch: this . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 347
score: 99.69226837158203
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 347
score: 99.6512920673077
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) - $NUMBER$ ) ) ;
rank: 348
score: 99.75039527529762
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 348
score: 99.71573893229167
patch: if ( sb . char CaMeL At ( 0 ) == $STRING$ ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 348
score: 99.69869791666666
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 348
score: 99.69837239583333
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) + 1 ) ) ;
rank: 348
score: 99.69471958705357
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 348
score: 99.69225761217949
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( array CaMeL Folded CaMeL Children ) ) ;
rank: 348
score: 99.65123697916667
patch: append ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 349
score: 99.75031887755102
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } }
rank: 349
score: 99.72965494791667
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 349
score: 99.71595982142857
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; break ;
rank: 349
score: 99.7156982421875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ;
rank: 349
score: 99.69218139648437
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 350
score: 99.750205078125
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 350
score: 99.72960069444444
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . size ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 350
score: 99.7159396701389
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 350
score: 99.71555786132812
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ; }
rank: 350
score: 99.69856305803572
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb ) ;
rank: 350
score: 99.69214477539063
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ;
rank: 350
score: 99.65113556690706
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , node . to CaMeL String ( ) ) ) ;
rank: 351
score: 99.75017936862245
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 351
score: 99.72957167514535
patch: folded CaMeL Size += array CaMeL Node . get CaMeL Child CaMeL Count ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 351
score: 99.71591331845238
patch: folded CaMeL Size << Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 351
score: 99.71533203125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 351
score: 99.69851845189145
patch: int char CaMeL Count = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 351
score: 99.69469901842949
patch: folded CaMeL Size += sb . length ( ) ; sb = new String CaMeL Builder ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 351
score: 99.69210379464286
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( next ) ) ;
rank: 351
score: 99.65107727050781
patch: if ( sb . length ( ) > 0 ) { sb . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 352
score: 99.75013950892857
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 352
score: 99.7212146577381
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 352
score: 99.71527569110577
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) + $NUMBER$ ) ;
rank: 352
score: 99.6980945675872
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size -- ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 352
score: 99.69465680803572
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . remove ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 352
score: 99.69202270507813
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ;
rank: 352
score: 99.65099727746212
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , n . to CaMeL String ( ) ) ) ;
rank: 353
score: 99.75005677688954
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 353
score: 99.71576353561046
patch: String join CaMeL String = Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 353
score: 99.69841487233232
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 353
score: 99.69801432291666
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . size ( ) ) ) ;
rank: 353
score: 99.69453282510081
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 353
score: 99.69185697115384
patch: folded CaMeL Size -= sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 354
score: 99.75001085069445
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 354
score: 99.72924262152777
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 354
score: 99.7156094637784
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; try { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 354
score: 99.71509486607142
patch: synchronized ( array CaMeL Folded CaMeL Children ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 354
score: 99.69796592310855
patch: folded CaMeL Size += n . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 354
score: 99.69453125
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else {
rank: 354
score: 99.69180297851562
patch: sb . append ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 354
score: 99.65083821614583
patch: folded CaMeL Size ( sb . trim ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 355
score: 99.72924126519098
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 355
score: 99.72103304476352
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 355
score: 99.71556919642858
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent . replace CaMeL Child ( n , sb . to CaMeL String ( ) ) ;
rank: 355
score: 99.7150390625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Char CaMeL Array ( ) ) ) ; }
rank: 355
score: 99.69793836805556
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) + $NUMBER$ ) ) ;
rank: 355
score: 99.69173855251736
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 355
score: 99.65080217633928
patch: value = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 356
score: 99.72918701171875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 356
score: 99.72081409801136
patch: add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 356
score: 99.69153771033653
patch: if ( sb . length ( ) > 1 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 357
score: 99.74987372036638
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 357
score: 99.72079613095238
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ; }
rank: 357
score: 99.71499261623475
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 357
score: 99.69138055098684
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb ) ) ; }
rank: 358
score: 99.74980070153062
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 358
score: 99.72060546875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } return array CaMeL Folded CaMeL Children ;
rank: 358
score: 99.71497866981908
patch: folded CaMeL Size += sb . length ( ) + 1 ; else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 358
score: 99.69801089638158
patch: boolean folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 358
score: 99.69785610465117
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 358
score: 99.69129702919408
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 358
score: 99.6506288109756
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , n . length ( ) ) ) ;
rank: 359
score: 99.72874049136513
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; else sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 359
score: 99.72059541590073
patch: folded CaMeL Size += sb . length ( ) ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 359
score: 99.71518179086539
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 359
score: 99.71481735641892
patch: initial CaMeL Value += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 359
score: 99.69790414663461
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , name ) ) ;
rank: 359
score: 99.69774780273437
patch: String folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 359
score: 99.69426618303571
patch: folded CaMeL Size += sb . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 359
score: 99.69112548828124
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( 0 , sb . length ( ) ) ) ) ;
rank: 359
score: 99.65047399009147
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true , 1 ) ) ;
rank: 360
score: 99.72870008680556
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 360
score: 99.71501358695652
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Node . detach CaMeL Children ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 360
score: 99.69426618303571
patch: folded CaMeL Size += sb . length ( ) + 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 360
score: 99.69075927734374
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 360
score: 99.65037742820945
patch: folded CaMeL Size += sb . length ( ) ; try { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 361
score: 99.74955327460107
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 361
score: 99.72866107047872
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 361
score: 99.72040085565476
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) , folded CaMeL Size ) ; }
rank: 361
score: 99.71476665296052
patch: int folded CaMeL Size = sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 361
score: 99.6977008322011
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . to CaMeL String ( ) ) ) ; }
rank: 361
score: 99.64985487196181
patch: assert ( sb . length ( ) > 0 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 362
score: 99.72857090212264
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 362
score: 99.72031471946023
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 362
score: 99.71473388671875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent . replace CaMeL Child ( n , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 362
score: 99.71468892911585
patch: folded CaMeL Size += sb . length ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 362
score: 99.64974156821647
patch: add ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 363
score: 99.74937037417763
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; break ; }
rank: 363
score: 99.71467219172297
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( filter . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 363
score: 99.71460528706395
patch: folded CaMeL Size >> += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 363
score: 99.69744090544872
patch: folded CaMeL Size <= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 363
score: 99.69737119932432
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Integer . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 363
score: 99.694091796875
patch: folded CaMeL Size += $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 363
score: 99.64914899553571
patch: if ( sb . length ( ) != 0 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 364
score: 99.7492206280048
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 364
score: 99.72004215891768
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( join CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 364
score: 99.71454148065476
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . remove ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 364
score: 99.69402204241071
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . set ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 364
score: 99.69015424679488
patch: if ( sb . length ( ) > 0 ) array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 364
score: 99.64900716145833
patch: append ( sb . length ( ) + 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 365
score: 99.74908792747641
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem ) ) ;
rank: 365
score: 99.72849776105183
patch: sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 365
score: 99.71994357638889
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 365
score: 99.71447423986487
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) - $NUMBER$ ) ) ;
rank: 365
score: 99.71437717013889
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . clear ( ) ;
rank: 365
score: 99.6968895164696
patch: folded CaMeL Size += sb . length ( ) ; $NUMBER$ ++ array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 365
score: 99.69010202508224
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 365
score: 99.64900496199324
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( System . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 366
score: 99.74880642361111
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 366
score: 99.72845928485577
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 366
score: 99.714453125
patch: double CaMeL Value ( sb . length ( ) - 1 ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 366
score: 99.69378662109375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 366
score: 99.68978078741776
patch: folded CaMeL Size += sb . length ( ) + $STRING$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 367
score: 99.7284159757653
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ; }
rank: 367
score: 99.7198715209961
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 367
score: 99.71426782852564
patch: folded CaMeL Size += sb . length ( ) + SIZE + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 367
score: 99.71424278846153
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) - 1 ) ) ;
rank: 367
score: 99.69701605902777
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , $NUMBER$ ) ) ;
rank: 367
score: 99.64878061655405
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 368
score: 99.74860661204268
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 368
score: 99.71982421875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 368
score: 99.71422119140625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 368
score: 99.71421983506944
patch: { folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 368
score: 99.68963466546474
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , to CaMeL String ( ) ) ) ;
rank: 368
score: 99.64863438760081
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( ( String ) sb . to CaMeL String ( ) ) ;
rank: 369
score: 99.74859193313954
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 369
score: 99.72813924153645
patch: folded CaMeL Size = 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 369
score: 99.71978081597223
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; }
rank: 369
score: 99.71421920421511
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( , sb . to CaMeL String ( ) ) ) ;
rank: 369
score: 99.71415405273437
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( ( int ) sb . to CaMeL String ( ) ) ) ;
rank: 369
score: 99.69678896949405
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 369
score: 99.69648822985198
patch: push ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 369
score: 99.68955592105263
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . substring ( 0 ) ) ) ;
rank: 369
score: 99.64838115985577
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , - 1 ) ) ;
rank: 370
score: 99.74857003348214
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 370
score: 99.7280943627451
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 370
score: 99.71420686141305
patch: folded CaMeL Size + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 370
score: 99.71414831912878
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 370
score: 99.69662543402778
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 370
score: 99.69648041596284
patch: folded CaMeL Size != sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 370
score: 99.69366164434524
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , elem ) ) ;
rank: 370
score: 99.68948974609376
patch: folded CaMeL Size = sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 370
score: 99.648193359375
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , this ) ) ;
rank: 371
score: 99.74850463867188
patch: folded CaMeL Size += array CaMeL Node . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 371
score: 99.7280859375
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 371
score: 99.71417392828526
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 371
score: 99.71412417763158
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( 0 ) ) ) ;
rank: 371
score: 99.69642398231908
patch: ! folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 371
score: 99.68939678485577
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . trim ( ) ) ) ;
rank: 372
score: 99.74842554209184
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 372
score: 99.719482421875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 372
score: 99.71409941882622
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ;
rank: 372
score: 99.71408913352273
patch: { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 372
score: 99.69339425223214
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 372
score: 99.68925395764802
patch: folded CaMeL Size += sb . length ( ) + $STRING$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 372
score: 99.64805908203125
patch: folded CaMeL Size ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 373
score: 99.69639828330592
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , to CaMeL String ( sb ) ) ) ;
rank: 373
score: 99.68909004407051
patch: this . folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 373
score: 99.64805479307432
patch: if ( sb . length ( ) != 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 374
score: 99.74811136497641
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 374
score: 99.7276866824128
patch: folded CaMeL Size += array CaMeL Node . get CaMeL Child CaMeL Count ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 374
score: 99.71920572916666
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 374
score: 99.71376103940217
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . set ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) , folded CaMeL Size ) ;
rank: 374
score: 99.68900981702302
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , false ) ) ; }
rank: 374
score: 99.64796173878206
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 375
score: 99.748046875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 375
score: 99.71372202280405
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( value . to CaMeL String ( ) ) ) ;
rank: 375
score: 99.71358235677083
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 375
score: 99.69611467633929
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + $NUMBER$ ) ) ;
rank: 375
score: 99.68890904017857
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb . length ( ) ) ) ;
rank: 375
score: 99.64792351973684
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ;
rank: 376
score: 99.74802772671569
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; join CaMeL String = Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 376
score: 99.69631076388889
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 376
score: 99.6959948417468
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 376
score: 99.69320824032738
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( null ) ;
rank: 376
score: 99.68887094350961
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , line CaMeL Number ) ) ;
rank: 376
score: 99.64791349085365
patch: try { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 377
score: 99.74802416424419
patch: append ( $STRING$ ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 377
score: 99.71369562922297
patch: folded CaMeL Size |= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 377
score: 99.71330632390203
patch: folded CaMeL Size + sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 377
score: 99.68882242838542
patch: folded CaMeL Size -= sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 377
score: 99.64788263494319
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 + sb . length ( ) ) ) ;
rank: 378
score: 99.718994140625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( join CaMeL String ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 378
score: 99.71356811523438
patch: if ( sb . char CaMeL At ( 0 ) == $STRING$ ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 378
score: 99.69625721807066
patch: synchronized ( array CaMeL Folded CaMeL Children ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 378
score: 99.69587223704268
patch: folded CaMeL Size += $STRING$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 378
score: 99.6931396484375
patch: folded CaMeL Size <= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 378
score: 99.68875282689145
patch: folded CaMeL Size += sb . length ( ) / $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 378
score: 99.6478515625
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( this . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 379
score: 99.74799900428921
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 379
score: 99.7272616299716
patch: folded CaMeL Size += 0 ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 379
score: 99.71895559210526
patch: folded CaMeL Size += sb . length ( ) + + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 379
score: 99.71349204458842
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 379
score: 99.71317331414474
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 379
score: 99.69304456208882
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } break ;
rank: 379
score: 99.6477646246189
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 380
score: 99.71339175575658
patch: folded CaMeL Size += sb . length ( ) ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 380
score: 99.7130710767663
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 380
score: 99.69624255952381
patch: folded CaMeL Size += sb . length ( ) + 1 ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 380
score: 99.69568810096153
patch: folded CaMeL Size += sb . length ( ) ? $NUMBER$ : $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 380
score: 99.69301285282258
patch: if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; } sb . append ( join CaMeL String ) ;
rank: 380
score: 99.68866131756756
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 381
score: 99.74791463216145
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } }
rank: 381
score: 99.71861572265625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + $NUMBER$ ) ) ; }
rank: 381
score: 99.71316528320312
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Lower CaMeL Case ( ) ) ) ;
rank: 381
score: 99.7130710767663
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . remove ( elem ) ;
rank: 381
score: 99.69623228561046
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 381
score: 99.69566932091347
patch: folded CaMeL Size += new Integer ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 381
score: 99.6929931640625
patch: folded CaMeL Size += sb . length ( ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 381
score: 99.68850955447635
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL Value ( ) ) ) ;
rank: 381
score: 99.64767295435855
patch: add ( sb . length ( ) + $NUMBER$ + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 382
score: 99.7130485983456
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 382
score: 99.69548204210069
patch: array CaMeL Folded CaMeL Children . add ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 382
score: 99.69296193677326
patch: folded CaMeL Size < Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 382
score: 99.68837890625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , $STRING$ ) ) ;
rank: 382
score: 99.64757987780449
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true , true ) ) ;
rank: 383
score: 99.74782151442308
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 383
score: 99.71304645944149
patch: folded CaMeL Size += sb . length ( ) + array CaMeL Folded CaMeL Children . size ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 383
score: 99.7130126953125
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 383
score: 99.69546026932566
patch: long folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 383
score: 99.68834339488636
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 384
score: 99.747802734375
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 384
score: 99.7184999047256
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 384
score: 99.71302919130068
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; else sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 384
score: 99.71300551470588
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb [ 0 ] ) ) ;
rank: 384
score: 99.69589162427326
patch: if ( sb . to CaMeL String ( ) . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 384
score: 99.6928770483994
patch: folded CaMeL Size = sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 384
score: 99.68821411132812
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 385
score: 99.7477704893868
patch: folded CaMeL Size += sb . length ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 385
score: 99.71847098214286
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + 1 ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 385
score: 99.69587053571429
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else {
rank: 385
score: 99.69545022035257
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) , false ) ;
rank: 385
score: 99.69266863567073
patch: folded CaMeL Size : sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 385
score: 99.6882126266892
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ;
rank: 385
score: 99.64704725477431
patch: folded CaMeL Size += sb . length ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 386
score: 99.74768288352273
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( join CaMeL String ) ) ;
rank: 386
score: 99.71833767361112
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 386
score: 99.7128044577206
patch: folded CaMeL Size += $NUMBER$ + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 386
score: 99.69581269054878
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , index ) ) ;
rank: 386
score: 99.69527677210365
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb ) ;
rank: 386
score: 99.69259207589286
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb ) ) ;
rank: 386
score: 99.68816779641544
patch: sb . append ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 386
score: 99.64703010110294
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , - 1 ) ) ;
rank: 387
score: 99.74763436153017
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 387
score: 99.7269795735677
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ; }
rank: 387
score: 99.7183153105945
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } sb = new String CaMeL Builder ( ) ;
rank: 387
score: 99.71274664463141
patch: to CaMeL String ( sb . to CaMeL String ( ) ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 387
score: 99.71273479055851
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 387
score: 99.69231023015203
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( sb . to CaMeL String ( ) ) ) ; }
rank: 388
score: 99.72695503982843
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 388
score: 99.71787985777243
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , parent ) ) ;
rank: 388
score: 99.712646484375
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 388
score: 99.71261596679688
patch: folded CaMeL Size += 1 ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 388
score: 99.69515767911585
patch: } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 388
score: 99.64700656467014
patch: if ( sb . size ( ) == 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 389
score: 99.74756876627605
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL Cost ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL Cost ( elem ) ;
rank: 389
score: 99.72675183354592
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } elem = elem . get CaMeL First CaMeL Child ( ) ;
rank: 389
score: 99.712646484375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem + 1 ) ) ;
rank: 389
score: 99.69552176339286
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( ( String ) sb . to CaMeL String ( ) ) ) ;
rank: 389
score: 99.69221608231707
patch: out . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 389
score: 99.68802527225378
patch: folded CaMeL Size += $NUMBER$ ; } else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 389
score: 99.64696074695122
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true , false ) ) ;
rank: 390
score: 99.74754774305555
patch: append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 390
score: 99.69548405827703
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 390
score: 99.6950747841283
patch: boolean folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 390
score: 99.68765345982143
patch: folded CaMeL Size += $NUMBER$ * $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 390
score: 99.64693874782986
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , 1 ) ) ;
rank: 391
score: 99.71242020769817
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) . length ( ) + $NUMBER$ ;
rank: 391
score: 99.71229248046875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add CaMeL All ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 391
score: 99.69212510850694
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 391
score: 99.68758994654605
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb ) ) ; }
rank: 391
score: 99.64690987723215
patch: if += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 392
score: 99.74727957589286
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 392
score: 99.72660235969387
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 392
score: 99.71232096354167
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) . get CaMeL Cost ( n ) ;
rank: 392
score: 99.71225873161765
patch: folded CaMeL Size = 0 ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 392
score: 99.69542100694444
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) - 1 ) ) ;
rank: 392
score: 99.68726211939102
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ) ;
rank: 392
score: 99.64678276909723
patch: add ( sb . length ( ) - 0 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 393
score: 99.7471454326923
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; join CaMeL String = Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 393
score: 99.69529030539773
patch: if ( sb . to CaMeL String ( ) . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 393
score: 99.6948182641006
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . get CaMeL String ( ) ) ;
rank: 393
score: 99.69204711914062
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else {
rank: 393
score: 99.68722286739865
patch: if ( sb . length ( ) > $NUMBER$ ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 393
score: 99.64674103565706
patch: folded CaMeL Size += sb . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 394
score: 99.74711277173913
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 394
score: 99.72648590686275
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( join CaMeL String ) ;
rank: 394
score: 99.71735174005681
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ; }
rank: 394
score: 99.71208767361111
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 394
score: 99.7115508288872
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) . length ( ) ) ;
rank: 394
score: 99.69465717516448
patch: folded CaMeL Size < sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 394
score: 99.69194103422619
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 394
score: 99.68683416193181
patch: folded CaMeL Size += $NUMBER$ ; * / array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 394
score: 99.646728515625
patch: if ( $STRING$ . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 395
score: 99.74705038265306
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ; }
rank: 395
score: 99.711474609375
patch: folded CaMeL Size *= sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 395
score: 99.69453938802083
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 395
score: 99.64658490349265
patch: append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 396
score: 99.746806640625
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 396
score: 99.72619098165761
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 396
score: 99.71198292267628
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 396
score: 99.71145790501645
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; break array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 396
score: 99.69502861555233
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . trim ( ) ) ) ;
rank: 396
score: 99.6943423622533
patch: buf . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 396
score: 99.69181712080793
patch: folded CaMeL Size += sb . length ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 396
score: 99.64656774009147
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , char CaMeL Value ) ) ;
rank: 397
score: 99.72602771577381
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 397
score: 99.71708865282012
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } } else {
rank: 397
score: 99.71189328457447
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( elem ) ;
rank: 397
score: 99.71139365748355
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 397
score: 99.69429931640624
patch: folded CaMeL Size -- ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 397
score: 99.691650390625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } } parent = elem ;
rank: 397
score: 99.68657769097223
patch: += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 397
score: 99.646484375
patch: add ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 398
score: 99.74668817934783
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 398
score: 99.7170350609756
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } } break ;
rank: 398
score: 99.71170789930555
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; break ; }
rank: 398
score: 99.69158576516544
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( ) ) ;
rank: 398
score: 99.68648274739583
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( n ) ) ; }
rank: 398
score: 99.64644368489583
patch: start ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 399
score: 99.72593858506944
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; sb = new String CaMeL Builder ( ) ;
rank: 399
score: 99.71091963605183
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . trim ( ) ) ) ;
rank: 399
score: 99.694091796875
patch: Integer folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 399
score: 99.6915752704327
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ;
rank: 399
score: 99.64627235814145
patch: append ( sb . to CaMeL String ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 400
score: 99.72591145833333
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 400
score: 99.71673583984375
patch: folded CaMeL Size += new String CaMeL Builder ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 400
score: 99.6938709077381
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( ) ) ;
rank: 400
score: 99.68640485491072
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( $STRING$ ) ) ;
rank: 400
score: 99.6461181640625
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 401
score: 99.74655633223684
patch: append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 401
score: 99.725888671875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( folded CaMeL Size > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 401
score: 99.71638488769531
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 401
score: 99.71160746729652
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 401
score: 99.71086863982372
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . length ( ) ) ) ;
rank: 401
score: 99.69374749599359
patch: this . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 401
score: 99.6915184227196
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 401
score: 99.64606789981617
patch: if ( sb . length ( ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 402
score: 99.74645465353261
patch: append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 402
score: 99.72586192255434
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( sb . length ( ) > 0 ) { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 402
score: 99.7107666015625
patch: folded CaMeL Size *= sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 402
score: 99.69413154069767
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 402
score: 99.69371069931402
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , to CaMeL String ( ) ) ) ;
rank: 402
score: 99.69151267027243
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 402
score: 99.68605443050987
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ;
rank: 402
score: 99.64577229817708
patch: start ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 403
score: 99.74630152925532
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 403
score: 99.7258203125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent = array CaMeL Node . get CaMeL First CaMeL Child ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 403
score: 99.71157602163461
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; continue ;
rank: 403
score: 99.71070053998162
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ; }
rank: 403
score: 99.69412667410714
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 403
score: 99.6935499237805
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( ) ) ;
rank: 403
score: 99.69140625
patch: folded CaMeL Size < sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 403
score: 99.68604736328125
patch: folded CaMeL Size += sb . length ( ) ; else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 403
score: 99.645751953125
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , null ) ) ;
rank: 404
score: 99.74625370420259
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 404
score: 99.6935283954327
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , type ) ) ;
rank: 404
score: 99.69138353924419
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( null ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 404
score: 99.64573364257812
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size += $NUMBER$ ;
rank: 405
score: 99.7462059227196
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 405
score: 99.71602957589286
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 405
score: 99.71060098184121
patch: if ( sb . length ( ) < 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 405
score: 99.69392023859797
patch: if ( sb . length ( ) > 1 ) array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 405
score: 99.69339236697635
patch: folded CaMeL Size += sb . length ( ) ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 405
score: 99.64564453125
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 406
score: 99.74615478515625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } }
rank: 406
score: 99.71109672214673
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Node . detach CaMeL Children ( ) ; }
rank: 406
score: 99.69365234375
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 406
score: 99.69080699573864
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } elem = array CaMeL Node . get CaMeL First CaMeL Child ( ) ;
rank: 406
score: 99.64554172092014
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ( Integer ) sb . to CaMeL String ( ) ) ) ;
rank: 407
score: 99.74609375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 407
score: 99.7158143578506
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 407
score: 99.71041622677365
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ; }
rank: 407
score: 99.69361514136905
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else ;
rank: 407
score: 99.69080200195313
patch: folded CaMeL Size += sb . length ( ) ; if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 407
score: 99.68554027660473
patch: if ( sb . length ( ) + $NUMBER$ > 0 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 407
score: 99.645166015625
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ;
rank: 408
score: 99.72565252130681
patch: append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 408
score: 99.71580895712209
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 408
score: 99.71089993990384
patch: folded CaMeL Size = array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 408
score: 99.71031429893092
patch: folded CaMeL Size += += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 408
score: 99.693603515625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , type ) ) ;
rank: 408
score: 99.6854967948718
patch: if ( sb . length ( ) += $NUMBER$ > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 409
score: 99.74577579941861
patch: String folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 409
score: 99.72562423406863
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 409
score: 99.71575520833333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb = new String CaMeL Builder ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 409
score: 99.71088201349431
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , elem ) ) ;
rank: 409
score: 99.7102783203125
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 409
score: 99.69290597098214
patch: if ( true ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 409
score: 99.68548905222039
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( list . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 410
score: 99.7456916360294
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 410
score: 99.72544642857143
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 410
score: 99.71571908346037
patch: folded CaMeL Size += sb . get CaMeL String CaMeL Value ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 410
score: 99.68548583984375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL Instance ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 410
score: 99.64503389246323
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( array CaMeL Folded CaMeL Children . to CaMeL String ( ) ) ;
rank: 411
score: 99.74557140261628
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 411
score: 99.72530033903301
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 411
score: 99.71076795789931
patch: { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 411
score: 99.6927520007622
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( node ) ;
rank: 411
score: 99.68532912795608
patch: folded CaMeL Size += sb . length ( ) ; * / array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 411
score: 99.64493600945724
patch: sb . add ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 412
score: 99.74541199882076
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; }
rank: 412
score: 99.71564275568181
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ;
rank: 412
score: 99.71014247796474
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) + $STRING$ ) ;
rank: 412
score: 99.6851447610294
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb ) ) ; }
rank: 412
score: 99.6449073585304
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 413
score: 99.7451880670363
patch: append ( sb . to CaMeL String ( ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 413
score: 99.72499593098958
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ; }
rank: 413
score: 99.71559448242188
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 413
score: 99.710693359375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent . replace CaMeL Child ( n , folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ) ;
rank: 413
score: 99.69309895833334
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 413
score: 99.69034830729167
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 413
score: 99.68512926603618
patch: int n = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 413
score: 99.64478729992378
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size = sb . length ( ) + $NUMBER$ ; }
rank: 414
score: 99.74509684244792
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 414
score: 99.72498575846355
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 414
score: 99.71065481085526
patch: { folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 414
score: 99.70990815033784
patch: folded CaMeL Size = Node . new CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 414
score: 99.69032592773438
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else {
rank: 414
score: 99.64478149414063
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , - 0 ) ) ;
rank: 415
score: 99.72496744791667
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 415
score: 99.71553819444445
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb = new String CaMeL Builder ( ) ;
rank: 415
score: 99.69291381835937
patch: folded CaMeL Size += n . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 415
score: 99.6923232660061
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else continue ;
rank: 415
score: 99.69021767064145
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 415
score: 99.68507111378206
patch: if ( folded CaMeL Size += sb . length ( ) + $NUMBER$ ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 415
score: 99.64467416158537
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true , $NUMBER$ ) ) ;
rank: 416
score: 99.74490356445312
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 416
score: 99.71060965401786
patch: folded CaMeL Size += sb . length ( ) - 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 416
score: 99.70979614257813
patch: get CaMeL String CaMeL Value ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 416
score: 99.69264573317308
patch: array CaMeL Folded CaMeL Children = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 416
score: 99.69231682854729
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 416
score: 99.68499755859375
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 416
score: 99.64461263020833
patch: remove ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 417
score: 99.72480912642045
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 417
score: 99.71522105823864
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 417
score: 99.70975748697917
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( ) ) ;
rank: 417
score: 99.69249378551136
patch: if ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 417
score: 99.68490600585938
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; }
rank: 417
score: 99.64449165962837
patch: folded CaMeL Size += n . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 418
score: 99.74489339192708
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 418
score: 99.71031122622283
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } array CaMeL Node . detach CaMeL Children ( ) ;
rank: 418
score: 99.64442845394737
patch: if ( sb . length ( ) >= 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 419
score: 99.72464923469387
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 419
score: 99.71513552782012
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 419
score: 99.71028844321647
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new Node . String ( sb . to CaMeL String ( ) ) ) ;
rank: 419
score: 99.70919721554488
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Char CaMeL Array ( ) ) ) ;
rank: 419
score: 99.69228980654762
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; break ; }
rank: 419
score: 99.69215794613487
patch: folded CaMeL Size += - sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 419
score: 99.68476698133681
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ;
rank: 419
score: 99.64436451981707
patch: folded CaMeL Size += ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 420
score: 99.74475911458333
patch: append ( folded CaMeL Size ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 420
score: 99.71510416666666
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( join CaMeL String ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 420
score: 99.69226604959239
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ; }
rank: 420
score: 99.69200171493902
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ;
rank: 420
score: 99.69001116071429
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += 0 ;
rank: 420
score: 99.68455779246794
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb . length ( ) ) ) ;
rank: 420
score: 99.64433458116319
patch: if ( sb . length ( ) - 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 421
score: 99.74459134615384
patch: folded CaMeL Size += join CaMeL String . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 421
score: 99.72457275390624
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } else { sb . append ( join CaMeL String ) ; }
rank: 421
score: 99.71508221293605
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 421
score: 99.71016339557927
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } elem = elem . get CaMeL Next ( ) ; }
rank: 421
score: 99.69154759457237
patch: if ( sb . length ( ) > $NUMBER$ ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 421
score: 99.68448267227564
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 421
score: 99.6442806846217
patch: if ( sb . length ( ) == 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 422
score: 99.74447699652778
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 422
score: 99.72449623666158
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 422
score: 99.71505033052884
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; }
rank: 422
score: 99.71015857514881
patch: folded CaMeL Size *= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 422
score: 99.70896402994792
patch: folded CaMeL Size += sb . length ( ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 422
score: 99.69150904605263
patch: array CaMeL Folded CaMeL Children . add ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 422
score: 99.68993530273437
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } parent = elem ;
rank: 422
score: 99.68448215060764
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) )
rank: 422
score: 99.64423659752156
patch: clear ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 423
score: 99.74445936414931
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 423
score: 99.7244847074468
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 423
score: 99.71497395833333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 423
score: 99.7089092548077
patch: folded CaMeL Size += sb . length ( ) + 1 ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 423
score: 99.69218035442073
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 423
score: 99.6898129111842
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . get CaMeL String ( ) ) ) ; }
rank: 423
score: 99.68419189453125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 423
score: 99.64415457589286
patch: if ( sb . equals ( $STRING$ ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 424
score: 99.74445229388297
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 424
score: 99.72442237367021
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( join CaMeL String ) ; }
rank: 424
score: 99.71003069196429
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 424
score: 99.70878405448718
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , sb . length ( ) + $NUMBER$ ) ) ;
rank: 424
score: 99.69210205078124
patch: array CaMeL Folded CaMeL Children = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 424
score: 99.68976384943181
patch: folded CaMeL Size += sb . length ( ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 424
score: 99.68413985402961
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL Instance ( sb . to CaMeL String ( ) ) ) ; }
rank: 424
score: 99.64400634765624
patch: folded CaMeL Size ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 425
score: 99.72441198470744
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 425
score: 99.7148497046494
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 425
score: 99.7099609375
patch: folded CaMeL Size += sb . length ( ) - sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 425
score: 99.69209428267045
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ; }
rank: 425
score: 99.6910336143092
patch: folded CaMeL Size += Math . length ( $NUMBER$ ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 425
score: 99.68974609375
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 425
score: 99.68399208470395
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , $STRING$ ) ) ; }
rank: 426
score: 99.74430006377551
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ;
rank: 426
score: 99.7148204985119
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . to CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 426
score: 99.7099609375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 426
score: 99.6920421511628
patch: add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 426
score: 99.69101097470238
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; folded CaMeL Size ++ ;
rank: 426
score: 99.68961588541667
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 426
score: 99.68392181396484
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ; }
rank: 427
score: 99.74428423713235
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 427
score: 99.71467729048295
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 427
score: 99.7099013910061
patch: folded CaMeL Size . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 427
score: 99.70834433065879
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Lower CaMeL Case ( ) ) ) ;
rank: 427
score: 99.69096178886218
patch: add ( Node CaMeL Util . new CaMeL String ( sb ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 427
score: 99.68370225694444
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( $NUMBER$ ) ) ) ;
rank: 427
score: 99.64362614329268
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 , $NUMBER$ ) ) ;
rank: 428
score: 99.74421522352431
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; } sb . append ( join CaMeL String ) ;
rank: 428
score: 99.70980980282738
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 428
score: 99.70816040039062
patch: folded CaMeL Size += Node . new CaMeL String ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 428
score: 99.69189453125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , folded CaMeL Size ) ) ;
rank: 428
score: 99.69065987723214
patch: array CaMeL Folded CaMeL Children . clear ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 428
score: 99.6895419034091
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 428
score: 99.68362862723214
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL Instance ( sb . to CaMeL String ( ) ) ) ;
rank: 428
score: 99.64359654017858
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + 1 ) ) ;
rank: 429
score: 99.74416097005208
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 429
score: 99.71466206395348
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 429
score: 99.70979447798295
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 429
score: 99.70814637880068
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + $STRING$ ) ) ;
rank: 429
score: 99.69182477678571
patch: array CaMeL Folded CaMeL Children += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 429
score: 99.68953857421874
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 429
score: 99.68360627003206
patch: folded CaMeL Size += sb . length ( ) + 1 ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 429
score: 99.64348687065973
patch: if ( sb . length ( ) != 1 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 430
score: 99.74409993489583
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 430
score: 99.68953080610795
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 430
score: 99.64342322716347
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , null ) ) ;
rank: 431
score: 99.74397786458333
patch: String join CaMeL String = Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 431
score: 99.71457170758929
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 431
score: 99.70964793669872
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 431
score: 99.6904296875
patch: if ( $NUMBER$ ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 431
score: 99.68352776604729
patch: folded CaMeL Size += sb . length ( ) ; this . array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 431
score: 99.64336836965461
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , null ) ) ;
rank: 432
score: 99.70961400082237
patch: { folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 432
score: 99.70788153286638
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ;
rank: 432
score: 99.69146925403226
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ;
rank: 432
score: 99.68346838048987
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node . String ( sb . to CaMeL String ( ) ) ) ; }
rank: 432
score: 99.64325420673077
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 433
score: 99.74393039279514
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 433
score: 99.70950564822635
patch: buf . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 433
score: 99.70787963867187
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + $STRING$ ) ) ;
rank: 433
score: 99.69138243140245
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 433
score: 99.6901791221217
patch: children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 433
score: 99.68934670472757
patch: new CaMeL String . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 433
score: 99.68346121651786
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 433
score: 99.64316763528963
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , null , true ) ) ;
rank: 434
score: 99.74392264229911
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ) ; }
rank: 434
score: 99.7094959077381
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 434
score: 99.70787138097427
patch: folded CaMeL Size += $NUMBER$ ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 434
score: 99.69136456745427
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 434
score: 99.69015915329392
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . length ( ) + 1 ) ) ;
rank: 434
score: 99.6431199980945
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true , 0 ) ) ;
rank: 435
score: 99.74391206781915
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 435
score: 99.72367037259616
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 435
score: 99.71442432892628
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 435
score: 99.70937712296195
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 435
score: 99.69132676235465
patch: folded CaMeL Size = sb . to CaMeL String ( ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 435
score: 99.69009027248475
patch: if ( array CaMeL Folded CaMeL Children == null ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 435
score: 99.64310808879573
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true , $STRING$ ) ) ;
rank: 436
score: 99.743896484375
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ;
rank: 436
score: 99.71423055959302
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 436
score: 99.709228515625
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 436
score: 99.70771484375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 436
score: 99.69132486979167
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 436
score: 99.6900146484375
patch: folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 436
score: 99.68317145270271
patch: add ( Node . new CaMeL String ( $STRING$ ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 436
score: 99.64279436383929
patch: if ( sb . length ( ) > 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 437
score: 99.743720703125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 437
score: 99.70920728600544
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( sb ) ;
rank: 437
score: 99.70770941840277
patch: double CaMeL Value ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 437
score: 99.68301552220395
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) )
rank: 437
score: 99.64275159333882
patch: folded CaMeL Size . add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 438
score: 99.74360251913265
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } folded CaMeL Size += 0 ;
rank: 438
score: 99.71396019345238
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 438
score: 99.7091689691311
patch: folded CaMeL Size += sb . trim ( ) . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 438
score: 99.7076904296875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( sb . length ( ) ) ) ) ;
rank: 438
score: 99.68870907738095
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Node . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 438
score: 99.682861328125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( node ) ) ;
rank: 439
score: 99.74346923828125
patch: append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 439
score: 99.71376439144737
patch: folded CaMeL Size += sb . length ( ) + - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 440
score: 99.74335327148438
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 440
score: 99.72330932617187
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 440
score: 99.7136480869391
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 440
score: 99.70906575520833
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 440
score: 99.70743408203126
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 440
score: 99.68857150607639
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } } elem = elem . get CaMeL Next ( ) ;
rank: 440
score: 99.68276495682566
patch: folded CaMeL Size += sb . length ( ) / $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 440
score: 99.64248996310764
patch: push ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 441
score: 99.74328161168981
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 441
score: 99.70905583079268
patch: folded CaMeL Size = sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 441
score: 99.6907393292683
patch: folded CaMeL Size = sb . to CaMeL String ( ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 441
score: 99.689453125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new ( sb . to CaMeL String ( ) ) ) ;
rank: 441
score: 99.68852419969512
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += 0 ;
rank: 441
score: 99.68267231602823
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 441
score: 99.64239180715461
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 442
score: 99.74324697818396
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 442
score: 99.70895182291666
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; return ; }
rank: 442
score: 99.70732302782012
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , sb . length ( ) - 1 ) ) ;
rank: 442
score: 99.69072265625
patch: if ( sb . to CaMeL String ( ) . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 442
score: 99.68919735863095
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ; }
rank: 442
score: 99.68263811383929
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( ) ) ;
rank: 442
score: 99.6423404091283
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 443
score: 99.74298901827831
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 443
score: 99.68882627744932
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) + $NUMBER$ ;
rank: 443
score: 99.6883609169408
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 443
score: 99.64219626402243
patch: folded CaMeL Size < sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 444
score: 99.71320134943181
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ; }
rank: 444
score: 99.70839972245066
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else {
rank: 444
score: 99.70716981630068
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; return ;
rank: 444
score: 99.69053955078125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , $NUMBER$ ) ) ; }
rank: 444
score: 99.68832236842105
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else
rank: 444
score: 99.68255974264706
patch: sb . append ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 444
score: 99.64218052455357
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( make . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 445
score: 99.7230224609375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( folded CaMeL Size > 0 ) { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 445
score: 99.71302834535257
patch: folded CaMeL Size = array CaMeL Folded CaMeL Children . size ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 445
score: 99.70834025930851
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( node ) ; }
rank: 445
score: 99.6904832793445
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; this . array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 445
score: 99.68828790838069
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ;
rank: 445
score: 99.68253580729167
patch: folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 445
score: 99.64210420496323
patch: folded CaMeL Size ( folded CaMeL Size ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 446
score: 99.71297994474085
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } return elem ;
rank: 446
score: 99.7082579077744
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 446
score: 99.68826219512195
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Node . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 446
score: 99.68251342773438
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 446
score: 99.64205771998355
patch: if ( sb . length ( ) > 1 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 447
score: 99.742841796875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ; }
rank: 447
score: 99.72295106132076
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 447
score: 99.71293712797619
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 447
score: 99.7081269054878
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( sb . to CaMeL String ( ) ) ) ;
rank: 447
score: 99.70712362753379
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , sb . to CaMeL String ( ) ) ) ;
rank: 447
score: 99.68235778808594
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) ) ) ;
rank: 447
score: 99.64205228365384
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 448
score: 99.74281377377717
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 448
score: 99.72287441821808
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } elem = elem ;
rank: 448
score: 99.7080310639881
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem + $STRING$ ) ) ;
rank: 448
score: 99.70706881009616
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add CaMeL All ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 448
score: 99.69017986918605
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . length ( ) + 1 ) ) ;
rank: 448
score: 99.68800019054878
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; break ; } }
rank: 448
score: 99.68231879340277
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ; }
rank: 448
score: 99.64205228365384
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size += sb . length ( ) ; }
rank: 449
score: 99.74280463324652
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 449
score: 99.72285364029256
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; int folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 449
score: 99.70782612645348
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 449
score: 99.70702498998398
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 449
score: 99.68834164268092
patch: long folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 449
score: 99.64191637541118
patch: add ( sb . length ( ) - $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 450
score: 99.72285291883681
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 450
score: 99.7125244140625
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 450
score: 99.70769299958882
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; nodes . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 450
score: 99.64182642886513
patch: append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 451
score: 99.72271050347223
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( folded CaMeL Size > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 451
score: 99.70692482972757
patch: folded CaMeL Size += sb . length ( ) + 1 ; } else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 451
score: 99.69005496002907
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 451
score: 99.68824404761905
patch: if ( sb . length ( ) >= 1 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 451
score: 99.68772730334052
patch: folded CaMeL Size += sb . length ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 451
score: 99.64182188452745
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size += sb . to CaMeL String ( ) ; }
rank: 452
score: 99.74231240915698
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 452
score: 99.7123291015625
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 452
score: 99.70756293402778
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 452
score: 99.70684136284723
patch: to CaMeL String ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 452
score: 99.68768865411931
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 452
score: 99.68206232244319
patch: folded CaMeL Size = 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 452
score: 99.641796875
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( System . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 453
score: 99.71230246803977
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ; }
rank: 453
score: 99.70747410973837
patch: folded CaMeL Size += sb . length ( ) + array CaMeL Folded CaMeL Children . size ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 453
score: 99.69001813616072
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 453
score: 99.68816460503473
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; ;
rank: 453
score: 99.68758994654605
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb . to CaMeL String ( ) ) ) ;
rank: 453
score: 99.68203822544643
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) ) ) ;
rank: 454
score: 99.74227241847827
patch: folded CaMeL Size += sb . length ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 454
score: 99.72239087975544
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 454
score: 99.70744977678571
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { array CaMeL Node . detach CaMeL Children ( ) ;
rank: 454
score: 99.706787109375
patch: folded CaMeL Size += ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 454
score: 99.68986002604167
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) + $NUMBER$ ) ;
rank: 454
score: 99.68814174107143
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . parse ( sb . to CaMeL String ( ) ) ) ;
rank: 454
score: 99.68756103515625
patch: folded CaMeL Size += $NUMBER$ ; if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 454
score: 99.68189956202652
patch: folded CaMeL Size += folded CaMeL Size ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 454
score: 99.6414794921875
patch: if ( sb . length ( ) < $NUMBER$ ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 455
score: 99.74222005208334
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 455
score: 99.707421875
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 455
score: 99.68810453869048
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; ;
rank: 455
score: 99.68180541992187
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( 0 , folded CaMeL Size ) ) ) ;
rank: 455
score: 99.64130108173077
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( array CaMeL Folded CaMeL Children ) ;
rank: 456
score: 99.74217711103724
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 456
score: 99.70731336805555
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 456
score: 99.68968563988095
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ; }
rank: 456
score: 99.68808065878379
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } }
rank: 456
score: 99.68169844777961
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) . to CaMeL String ( ) ) ; }
rank: 456
score: 99.64129317434211
patch: append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 457
score: 99.74210611979167
patch: folded CaMeL Size += array CaMeL Node . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 457
score: 99.72221235795455
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 457
score: 99.70728648792614
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent . replace CaMeL Child ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) , folded CaMeL Size ) ;
rank: 457
score: 99.70653011924342
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; return array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 457
score: 99.6872314453125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { return ;
rank: 457
score: 99.68165347450658
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ; }
rank: 457
score: 99.6410882411859
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ + $NUMBER$ ) ) ;
rank: 458
score: 99.74203725961539
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 458
score: 99.72219926883012
patch: add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 458
score: 99.7071559175532
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 458
score: 99.70642402844551
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 458
score: 99.68958333333333
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 458
score: 99.68794330797698
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 458
score: 99.68715463033537
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 458
score: 99.68164672851563
patch: folded CaMeL Size += sb . length ( ) + 1 ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 458
score: 99.64104903371711
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 459
score: 99.72200150923295
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 459
score: 99.68794064405488
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ) ;
rank: 459
score: 99.68715209960938
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . set ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 459
score: 99.6815518465909
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . trim ( ) ) ) ;
rank: 459
score: 99.64100477430556
patch: append ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 460
score: 99.74186197916667
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } array CaMeL Node . detach CaMeL Children ( ) ;
rank: 460
score: 99.70693137428977
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) , folded CaMeL Size ) ;
rank: 460
score: 99.70626670435855
patch: folded CaMeL Size += sb . length ( ) + 1 ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 460
score: 99.687939453125
patch: folded CaMeL Size += sb . to CaMeL String ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 460
score: 99.68713989257813
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 460
score: 99.68148226351352
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( 0 , Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 460
score: 99.64093512457771
patch: if ( sb . length ( ) > 0 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 461
score: 99.74184389467592
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 461
score: 99.72198016826923
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 461
score: 99.70624248798077
patch: folded CaMeL Size += ( sb . length ( ) ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 461
score: 99.68712527252907
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( $STRING$ ) ) ) ;
rank: 461
score: 99.64093017578125
patch: append ( node . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 462
score: 99.74167258522728
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 462
score: 99.72192902260639
patch: folded CaMeL Size = sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 462
score: 99.71177634214743
patch: folded CaMeL Size += sb . length ( ) ; } sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 462
score: 99.70623779296875
patch: folded CaMeL Size = - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 462
score: 99.6892977627841
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 462
score: 99.6878726356908
patch: if ( n == 0 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 462
score: 99.68709309895833
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 462
score: 99.6812843116554
patch: String CaMeL Builder sb = new String CaMeL Builder ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 462
score: 99.64092407226562
patch: folded CaMeL Size ( sb . length ( ) + 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 463
score: 99.74161551339286
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 463
score: 99.721923828125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 463
score: 99.71176147460938
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } * /
rank: 463
score: 99.70658947172619
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Token . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 463
score: 99.70622996794872
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ;
rank: 463
score: 99.68925170898437
patch: String folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 463
score: 99.68757145579268
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; $NUMBER$ ++ ; }
rank: 463
score: 99.68127771326013
patch: folded CaMeL Size += $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 463
score: 99.64065630008012
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 464
score: 99.72191704644098
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; }
rank: 464
score: 99.70658452460107
patch: int folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 464
score: 99.70621948242187
patch: if ( sb . char CaMeL At ( 0 ) != $STRING$ ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 464
score: 99.68756277901785
patch: iterator += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 464
score: 99.686962890625
patch: else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 464
score: 99.68125513980263
patch: folded CaMeL Size -= sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 464
score: 99.64056919642857
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( n . to CaMeL String ( ) ) ) ;
rank: 465
score: 99.74156358506944
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem . get CaMeL First CaMeL Child ( ) ) ;
rank: 465
score: 99.72183931790866
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( Node CaMeL Util . is CaMeL Immutable CaMeL Value ( elem ) ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 465
score: 99.71171160442073
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 465
score: 99.70618568978658
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 465
score: 99.6812411221591
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( $NUMBER$ ) ) ;
rank: 465
score: 99.64049072265625
patch: sb . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 466
score: 99.74149482194767
patch: append ( $STRING$ ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 466
score: 99.7218017578125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 466
score: 99.71166314019098
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 466
score: 99.70644769435975
patch: int folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 466
score: 99.7061737804878
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ;
rank: 466
score: 99.68899123733108
patch: folded CaMeL Size += n . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 466
score: 99.68741861979167
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + 1 ) ) ;
rank: 466
score: 99.68082056290064
patch: String CaMeL Builder sb = new String CaMeL Builder ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 466
score: 99.64025200737848
patch: add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 467
score: 99.74147316261575
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 467
score: 99.70634557845744
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ; }
rank: 467
score: 99.68885128997093
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ; }
rank: 467
score: 99.68740699404762
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size = $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 467
score: 99.68071831597223
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( $NUMBER$ ) ) ;
rank: 467
score: 99.6401885061553
patch: try { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 468
score: 99.70627285571808
patch: folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 468
score: 99.70611746651785
patch: folded CaMeL Size + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 468
score: 99.68727513363487
patch: int char CaMeL Count += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 468
score: 99.68675648082386
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ;
rank: 468
score: 99.6806442673142
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , ) ) ; }
rank: 468
score: 99.64012451171875
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { array CaMeL Folded CaMeL Children . add ( null ) ; }
rank: 469
score: 99.74143763950893
patch: append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 469
score: 99.71151510099085
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 469
score: 99.70602352061171
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 469
score: 99.70598493303571
patch: folded CaMeL Size = folded CaMeL Size + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 469
score: 99.68874193274456
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , ) ) ;
rank: 469
score: 99.68063354492188
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , ( Node ) sb ) ) ;
rank: 469
score: 99.64011885480183
patch: else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 470
score: 99.71147809709821
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb = new String CaMeL Builder ( ) ;
rank: 470
score: 99.68670654296875
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 470
score: 99.68660111860795
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { }
rank: 470
score: 99.68057168496621
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( node , sb ) ) ;
rank: 470
score: 99.64010541866988
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 + sb . length ( ) ) ) ;
rank: 471
score: 99.74134239783653
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 471
score: 99.71139526367188
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; / * / array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 471
score: 99.70591696714743
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add CaMeL All ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 471
score: 99.68864135742187
patch: folded CaMeL Size . add ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 471
score: 99.63999273838141
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 , $NUMBER$ ) ) ;
rank: 472
score: 99.74122902199075
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 472
score: 99.7112704190341
patch: folded CaMeL Size += sb . to CaMeL String ( ) . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 472
score: 99.70575914884868
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( ( int ) sb . length ( ) ) ) ;
rank: 472
score: 99.70545014880952
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . set ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 472
score: 99.68860973011364
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) . to CaMeL String ( ) ) ; }
rank: 472
score: 99.68629964192708
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 472
score: 99.68031712582237
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ; }
rank: 472
score: 99.6399461699695
patch: add ( Node . new CaMeL String ( sb . length ( ) + 1 ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 473
score: 99.74121704101563
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 473
score: 99.72108289930556
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 473
score: 99.71126098632813
patch: folded CaMeL Size += sb . length ( ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 473
score: 99.70572290665064
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 473
score: 99.7053723457532
patch: folded CaMeL Size += sb . trim ( ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 473
score: 99.68630801930146
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 473
score: 99.68629249366555
patch: folded CaMeL Size > sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 473
score: 99.68013392857142
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , 0 ) ) ;
rank: 474
score: 99.72103821997548
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 474
score: 99.71102905273438
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , right ) ) ; }
rank: 474
score: 99.68859332540761
patch: result . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 474
score: 99.68630642361111
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 474
score: 99.68008583470395
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ;
rank: 474
score: 99.63980905633224
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ; }
rank: 475
score: 99.74114583333333
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ;
rank: 475
score: 99.70566277754934
patch: folded CaMeL Size *= sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 475
score: 99.6863029233871
patch: folded CaMeL Size += sb . length ( ) + 1 ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 475
score: 99.68598236908784
patch: folded CaMeL Size += sb . length ( ) + true ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 475
score: 99.67989864864865
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Float . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 475
score: 99.63976680871212
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( ( Node ) sb . to CaMeL String ( ) ) ;
rank: 476
score: 99.72096162683823
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( join CaMeL String ) ;
rank: 476
score: 99.71060098184121
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL Name ( sb . to CaMeL String ( ) ) ) ;
rank: 476
score: 99.70561404344512
patch: folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( node ) ;
rank: 476
score: 99.70522238991477
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , parent ) ) ;
rank: 476
score: 99.68836558948864
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ; }
rank: 476
score: 99.68623490767045
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ;
rank: 476
score: 99.67985454358552
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size += sb . length ( ) ;
rank: 476
score: 99.63966936383929
patch: char = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 477
score: 99.72084554036458
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 477
score: 99.70518032340117
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 477
score: 99.68823809956395
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) + $NUMBER$ ) ) ;
rank: 477
score: 99.68622295673077
patch: folded CaMeL Size += ( sb . length ( ) + $NUMBER$ ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 477
score: 99.67981567382813
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , sb . length ( ) ) ) ;
rank: 477
score: 99.63966163429055
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , count ) ) ;
rank: 478
score: 99.74099496694711
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 478
score: 99.72083458533653
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 478
score: 99.71054449314025
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 478
score: 99.70559853001645
patch: folded CaMeL Size += $NUMBER$ array CaMeL Folded CaMeL Children . length ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 478
score: 99.68618032094595
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 478
score: 99.6857677641369
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 478
score: 99.67969360351563
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 478
score: 99.63964146205358
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ + sb . to CaMeL String ( ) ) ) ;
rank: 479
score: 99.720703125
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 479
score: 99.7054344383446
patch: folded CaMeL Size += sb . length ( ) += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 479
score: 99.705078125
patch: folded CaMeL Size + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 479
score: 99.68616333007813
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( join CaMeL String ) ;
rank: 479
score: 99.68570709228516
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . sb . to CaMeL String ( ) ) ;
rank: 479
score: 99.67958107972757
patch: if ( sb . length ( ) + $NUMBER$ > $NUMBER$ ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 479
score: 99.63929268973214
patch: if ( sb . length ( ) == 0 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 480
score: 99.74095775462963
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 480
score: 99.72057524181548
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; else array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 480
score: 99.71038411458333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 480
score: 99.70537109375
patch: folded CaMeL Size ++ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 480
score: 99.70503472222222
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . clear ( ) ;
rank: 480
score: 99.68785807291667
patch: folded CaMeL Size = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 480
score: 99.685546875
patch: if ( sb . length ( ) == $NUMBER$ ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 480
score: 99.6794631545608
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . to CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 480
score: 99.63922275641026
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 481
score: 99.72056070963542
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 481
score: 99.71034150965073
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; }
rank: 481
score: 99.70475657393293
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 481
score: 99.68781844429348
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 481
score: 99.68598865327381
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { if ( sb .
rank: 481
score: 99.68546977796052
patch: if ( $NUMBER$ == 0 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 481
score: 99.67943016258445
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) )
rank: 481
score: 99.63913225446429
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 482
score: 99.71001876027961
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 482
score: 99.70524828361742
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , null ) ) ;
rank: 482
score: 99.68776117369185
patch: if ( sb . to CaMeL String ( ) . equals ( $STRING$ ) ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 482
score: 99.68546769425676
patch: int length = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 482
score: 99.67939196134868
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; folded CaMeL Size += $NUMBER$ ; }
rank: 482
score: 99.63897705078125
patch: index [ 0 ] = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 483
score: 99.74081260279605
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 483
score: 99.7203144929847
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 483
score: 99.70519126333842
patch: if ( sb . length ( ) > sb . length ( ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 483
score: 99.70462101063829
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 483
score: 99.68758680555555
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 483
score: 99.6859066611842
patch: out . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 483
score: 99.6853277744391
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 483
score: 99.6793277138158
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , false ) ) ;
rank: 484
score: 99.74080576795212
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 484
score: 99.7203125
patch: add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 484
score: 99.70980224609374
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 484
score: 99.70495292467949
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) , null ) ;
rank: 484
score: 99.70460119912791
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 484
score: 99.68531593116555
patch: array CaMeL Folded CaMeL Children . clear ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 484
score: 99.63889723557692
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { array CaMeL Folded CaMeL Children . add ( null ) ;
rank: 485
score: 99.74078078497024
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += 0 ;
rank: 485
score: 99.72019406582447
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( join CaMeL String ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 485
score: 99.70954861111112
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } sb = new String CaMeL Builder ( ) ;
rank: 485
score: 99.70478634717988
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; return ;
rank: 485
score: 99.70455411585365
patch: folded CaMeL Size -= sb . length ( ) + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 485
score: 99.68581321022727
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 485
score: 99.67913323479729
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 485
score: 99.63870317508012
patch: append ( Node . new CaMeL String ( sb . length ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 486
score: 99.74076704545455
patch: folded CaMeL Size += array CaMeL Node . get CaMeL Child CaMeL Count ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 486
score: 99.72014598357372
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 486
score: 99.70951021634616
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) , elem ) ;
rank: 486
score: 99.70465409128289
patch: new CaMeL String = sb . to CaMeL String ( ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 486
score: 99.68577938988095
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 486
score: 99.67912854646382
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( ( String ) sb . to CaMeL String ( ) ) ) ;
rank: 486
score: 99.63865935496794
patch: folded CaMeL Size += sb . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 487
score: 99.72014508928571
patch: folded CaMeL Size ++ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 487
score: 99.7093994140625
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } break ;
rank: 487
score: 99.70451311383928
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) - 1 ) ) ;
rank: 487
score: 99.70450673204788
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 487
score: 99.68732561383929
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ; }
rank: 487
score: 99.67911569695724
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , 0 ) ) ;
rank: 487
score: 99.63858795166016
patch: add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 488
score: 99.7406757061298
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 488
score: 99.7092483108108
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ) ;
rank: 488
score: 99.70442030164931
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 488
score: 99.70427684294872
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 488
score: 99.68730236235119
patch: if ( sb . to CaMeL String ( ) . equals ( $STRING$ ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 488
score: 99.68573961759868
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 488
score: 99.67910970052084
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 488
score: 99.63855698529412
patch: if ( sb . length ( ) == 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 489
score: 99.70432477678571
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . String ( ) ) ) ;
rank: 489
score: 99.68726748511905
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , - $NUMBER$ ) ) ;
rank: 489
score: 99.68486724028716
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 489
score: 99.67882015830592
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb . to CaMeL String ( ) ) ) ; }
rank: 489
score: 99.63854631696428
patch: end = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 490
score: 99.74052526595744
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 490
score: 99.71995575573979
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 490
score: 99.70923549107142
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 490
score: 99.70417131696429
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ;
rank: 490
score: 99.70414538261218
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 490
score: 99.68726196289063
patch: if ( sb . length ( ) > sb . length ( ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 490
score: 99.68561662946429
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; int folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 490
score: 99.68484744510135
patch: text = Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 490
score: 99.67879011824324
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( 0 ) ) ) ; }
rank: 490
score: 99.63847520616319
patch: list . add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 491
score: 99.74049886067708
patch: append ( sb . to CaMeL String ( ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 491
score: 99.70918579101563
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 491
score: 99.70390505907012
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 491
score: 99.68722534179688
patch: } folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 491
score: 99.68475632440476
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 491
score: 99.67878992417279
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( $NUMBER$ ) ) ; }
rank: 491
score: 99.63839285714286
patch: folded CaMeL Size <= sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 492
score: 99.74048961292614
patch: append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 492
score: 99.70403497869319
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; continue ;
rank: 492
score: 99.68468560112848
patch: long length = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 492
score: 99.67868523848684
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , true ) ) ; }
rank: 492
score: 99.63836834881756
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ;
rank: 493
score: 99.74048461914063
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } parent = elem ;
rank: 493
score: 99.71983711674528
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 493
score: 99.70915141858552
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 493
score: 99.70383029513889
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 493
score: 99.68541587271342
patch: if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 493
score: 99.67861855996621
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 493
score: 99.63822798295455
patch: if ( folded CaMeL Size == 0 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 494
score: 99.68696629723837
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ; break ;
rank: 494
score: 99.6845452724359
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) , $STRING$ ) ;
rank: 494
score: 99.67860630580357
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size += $NUMBER$ ; }
rank: 495
score: 99.74043176529256
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 495
score: 99.70394965277778
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 495
score: 99.63806482263513
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , true ) ) ;
rank: 496
score: 99.7404296875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 496
score: 99.7197265625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 496
score: 99.70890502929687
patch: folded CaMeL Size += sb . get CaMeL String CaMeL Value ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 496
score: 99.70365947001689
patch: if ( array CaMeL Folded CaMeL Children != null ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 496
score: 99.68531629774306
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 496
score: 99.68452453613281
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ; }
rank: 496
score: 99.6783447265625
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . get CaMeL String CaMeL Value ( node ) ) ) ;
rank: 496
score: 99.63796922637195
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ - $NUMBER$ ) ) ;
rank: 497
score: 99.70888449928977
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 497
score: 99.70370965254934
patch: folded CaMeL Size >> += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 497
score: 99.68675566882622
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , node ) ) ;
rank: 497
score: 99.68528953758445
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 497
score: 99.68452412373311
patch: folded CaMeL Size < sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 497
score: 99.67822265625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb , $NUMBER$ ) ) ;
rank: 497
score: 99.63795872738487
patch: add ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 498
score: 99.740234375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 498
score: 99.71966978561046
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 498
score: 99.7088652820122
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( join CaMeL String ) ; }
rank: 498
score: 99.70365574048913
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . remove ( elem ) ;
rank: 498
score: 99.68519176136364
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ? Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) : Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 498
score: 99.68449885670732
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 498
score: 99.67818410773026
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( folded CaMeL Size ) ) ; }
rank: 498
score: 99.63795340401786
patch: index = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 499
score: 99.74021267361111
patch: append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 499
score: 99.71962267287235
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( join CaMeL String ) ;
rank: 499
score: 99.70878642314189
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 499
score: 99.70360043174342
patch: { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 499
score: 99.70313178168402
patch: int folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 499
score: 99.68512834821429
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 499
score: 99.67816631610577
patch: if ( sb . length ( ) + $NUMBER$ > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; }
rank: 500
score: 99.74012493265086
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 500
score: 99.68420991443452
patch: if ( sb . length ( ) >= $NUMBER$ ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 500
score: 99.67812249599359
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . char CaMeL Value ( ) ) ) ;
rank: 501
score: 99.70354442107372
patch: folded CaMeL Size = sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 501
score: 99.70293364653716
patch: if ( n . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 501
score: 99.68656099759616
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 501
score: 99.6780941611842
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . substring ( $NUMBER$ ) ) ) ;
rank: 501
score: 99.6378203601372
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , 1 ) ) ;
rank: 502
score: 99.71917849170919
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 502
score: 99.70851991234755
patch: folded CaMeL Size += sb . length ( ) - 1 ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 502
score: 99.70335751488095
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 502
score: 99.70288711939102
patch: folded CaMeL Size += sb . length ( ) ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 502
score: 99.6865234375
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) + 1 ) ) ;
rank: 502
score: 99.6840319511218
patch: if ( folded CaMeL Size > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 502
score: 99.67807749155405
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) ) ) ;
rank: 502
score: 99.63780381944444
patch: else folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 503
score: 99.73995971679688
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 503
score: 99.71910028872283
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ;
rank: 503
score: 99.70849609375
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else {
rank: 503
score: 99.70335286458334
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; elem = elem . get CaMeL Next ( ) ;
rank: 503
score: 99.68641493055556
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) + 1 ) ) ;
rank: 503
score: 99.68433295355902
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; int folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 503
score: 99.68398902529762
patch: synchronized ( sb ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 503
score: 99.63778295272436
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ;
rank: 504
score: 99.7190692608173
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 504
score: 99.70334532202745
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , array CaMeL Node ) ) ;
rank: 504
score: 99.70283322217988
patch: this . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 504
score: 99.6843321265244
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ) ;
rank: 504
score: 99.68375651041667
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 504
score: 99.67796456473214
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; }
rank: 504
score: 99.63752184416118
patch: add ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 505
score: 99.7398756377551
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; break ;
rank: 505
score: 99.70838341346153
patch: folded CaMeL Size += sb . length ( ) - 1 ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 505
score: 99.70279153963415
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) + $STRING$ ) ) ;
rank: 505
score: 99.68362505008012
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , id ) ) ;
rank: 505
score: 99.67796020507812
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . get CaMeL String CaMeL Value ( n ) ) ) ;
rank: 506
score: 99.70826386242378
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 506
score: 99.70305227726064
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 506
score: 99.68407592773437
patch: folded CaMeL Size += new String CaMeL Builder ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 506
score: 99.6836135451858
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Var . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 506
score: 99.67791573660715
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 507
score: 99.71898915816327
patch: folded CaMeL Size += sb . length ( ) - Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 507
score: 99.70826305042614
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ; }
rank: 507
score: 99.70302124023438
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . length ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 507
score: 99.70273061899039
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( new CaMeL String . to CaMeL String ( ) ) ) ;
rank: 507
score: 99.68389601934524
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } parent = elem ;
rank: 507
score: 99.67788856907895
patch: folded CaMeL Size += sb . length ( ) * $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 507
score: 99.63731166294643
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 508
score: 99.7396240234375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 508
score: 99.71892504422169
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } elem = elem . get CaMeL First CaMeL Child ( ) ;
rank: 508
score: 99.70271809895833
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Char CaMeL Array ( ) ) ) ;
rank: 508
score: 99.68352116765203
patch: folded CaMeL Size += sb . trim ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 508
score: 99.67788214432566
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ; }
rank: 508
score: 99.63723415798611
patch: array CaMeL Folded CaMeL Children . add ( null ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 509
score: 99.73958333333333
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 509
score: 99.70815894717262
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 509
score: 99.7029344512195
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 509
score: 99.68609775641026
patch: array CaMeL Folded CaMeL Children += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 509
score: 99.68348732972757
patch: array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 510
score: 99.73956793707771
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 510
score: 99.71884765625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 510
score: 99.70291658727135
patch: { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 510
score: 99.68602430555555
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 510
score: 99.68369391025641
patch: folded CaMeL Size += sb . length ( ) + 1 ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 510
score: 99.68348656631098
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( this ) ;
rank: 510
score: 99.6778564453125
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ;
rank: 510
score: 99.63715563322368
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , null ) ) ;
rank: 511
score: 99.71861200747283
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 511
score: 99.70808039484797
patch: folded CaMeL Size += sb . size ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 511
score: 99.70263671875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , 1 ) ) ;
rank: 511
score: 99.68602159288194
patch: int count = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 511
score: 99.6833431846217
patch: this . array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 511
score: 99.67771862399194
patch: folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 511
score: 99.63709605823864
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 512
score: 99.70275565905449
patch: sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 512
score: 99.70263671875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Buffer ( sb . to CaMeL String ( ) ) ) ;
rank: 512
score: 99.68600027901786
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ; }
rank: 512
score: 99.68355887276786
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += $NUMBER$ ;
rank: 512
score: 99.67768940172698
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ; }
rank: 512
score: 99.63709174262152
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , 1 ) ) ;
rank: 513
score: 99.73947598071808
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 513
score: 99.70799461570945
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 513
score: 99.70260009765624
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , sb . to CaMeL String ( ) ) ) ; }
rank: 513
score: 99.68599660773026
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + 1 ) ) ; }
rank: 514
score: 99.70787963867187
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; }
rank: 514
score: 99.68596085258152
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 514
score: 99.67743598090277
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 514
score: 99.63708866003788
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( ( Integer ) sb . to CaMeL String ( ) ) ;
rank: 515
score: 99.73931206597223
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 515
score: 99.71834309895833
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 515
score: 99.707861328125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 515
score: 99.70246325041118
patch: double CaMeL Value ( sb . length ( ) ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 515
score: 99.68595774580793
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String . String ( sb . to CaMeL String ( ) ) ) ;
rank: 515
score: 99.68322423986487
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 515
score: 99.68283750952745
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else ; }
rank: 515
score: 99.67743443080357
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 515
score: 99.63697725183823
patch: start ( sb . trim ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 516
score: 99.73930027173913
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 516
score: 99.70245916193181
patch: { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 516
score: 99.70237862723214
patch: if ( folded CaMeL Size > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 516
score: 99.68594447544643
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , n . to CaMeL String ( ) ) ) ;
rank: 516
score: 99.68264848758012
patch: if ( sb . length ( ) > $NUMBER$ ) { folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 516
score: 99.67735166807432
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , $NUMBER$ ) ) ;
rank: 517
score: 99.73927217371323
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 517
score: 99.68299904847757
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb = new String CaMeL Builder ( ) ;
rank: 517
score: 99.6826404389881
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( ) ) ;
rank: 517
score: 99.63684800091912
patch: substring ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 518
score: 99.71821629723837
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 518
score: 99.70762671493902
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( join CaMeL String ) ;
rank: 518
score: 99.70228978207237
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( ( char ) sb . to CaMeL String ( ) ) ) ;
rank: 518
score: 99.68544467659883
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ;
rank: 518
score: 99.68249824719551
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , length ) ) ;
rank: 518
score: 99.67732979910714
patch: this . folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 518
score: 99.636669921875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 519
score: 99.73922664561171
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 519
score: 99.70756225585937
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; this . array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 519
score: 99.7022677951389
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Node . detach CaMeL Children ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 519
score: 99.70222101984797
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( list . to CaMeL String ( ) ) ) ;
rank: 519
score: 99.68295064786585
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node CaMeL Traversal ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 519
score: 99.68232685810811
patch: folded CaMeL Size = n . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 519
score: 99.63656955295139
patch: add ( sb . length ( ) - $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 520
score: 99.68533846227135
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 520
score: 99.63636903505068
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; break ;
rank: 521
score: 99.73910197805851
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 521
score: 99.7180887858073
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 521
score: 99.70731201171876
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( join CaMeL String ) ;
rank: 521
score: 99.70194284539474
patch: this . folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 521
score: 99.70189887152777
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; continue ; }
rank: 521
score: 99.68282741970486
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 521
score: 99.68212103074596
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 521
score: 99.67711724175348
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ; }
rank: 522
score: 99.73906042220744
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 522
score: 99.71805245535714
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 522
score: 99.70710383234797
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , right ) ) ;
rank: 522
score: 99.70183676861703
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 522
score: 99.68282173775337
patch: folded CaMeL Size += $NUMBER$ ; if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 522
score: 99.68208618164063
patch: array CaMeL Folded CaMeL Children += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 522
score: 99.63634207589286
patch: index = sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 523
score: 99.68513600419207
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 523
score: 99.68200102306548
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 523
score: 99.67688706341912
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 523
score: 99.63630756578948
patch: if ( sb . length ( ) != 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 524
score: 99.71792927194149
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 524
score: 99.70697576349431
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; }
rank: 524
score: 99.70177691915761
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 524
score: 99.70176937705592
patch: to CaMeL String ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 524
score: 99.68500046502976
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 524
score: 99.68269459794207
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } } elem = elem . get CaMeL Next ( ) ;
rank: 524
score: 99.6768734580592
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( folded CaMeL Size ) ) ;
rank: 525
score: 99.73895886479592
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; break ; }
rank: 525
score: 99.71761507601352
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 525
score: 99.70167300575658
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ) ) ;
rank: 525
score: 99.68499046148256
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 525
score: 99.68191348805146
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 525
score: 99.67681719805744
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , node ) ) ;
rank: 526
score: 99.73892211914062
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; switch ( array CaMeL Node . get CaMeL Type ( ) ) {
rank: 526
score: 99.7175490920608
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 526
score: 99.70163376266892
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Symbol . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 526
score: 99.68487870065789
patch: int count = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 526
score: 99.6819045608108
patch: folded CaMeL Size += sb . length ( ) ; ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 526
score: 99.67680089613971
patch: folded CaMeL Size += $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 526
score: 99.63626098632812
patch: add ( sb . to CaMeL String ( ) ) ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 527
score: 99.73890269886364
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 527
score: 99.70662649054276
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . set ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 527
score: 99.70159590871711
patch: folded CaMeL Size += / sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 527
score: 99.70119357638889
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ; }
rank: 527
score: 99.6847811612216
patch: if ( sb . to CaMeL String ( ) . equals ( $STRING$ ) ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 527
score: 99.68234005489865
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 527
score: 99.67677176339286
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . remove ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 527
score: 99.63617553710938
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , - 1 ) ) ;
rank: 528
score: 99.738857421875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 528
score: 99.71751226380815
patch: folded CaMeL Size -- ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 528
score: 99.70657348632812
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb . to CaMeL String ( ) ) ) ;
rank: 528
score: 99.70152915396342
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) - 1 , sb . length ( ) ) ) ;
rank: 528
score: 99.701171875
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 528
score: 99.684765625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) + $NUMBER$ ) ) ;
rank: 528
score: 99.68152436755952
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; folded CaMeL Size -- ;
rank: 528
score: 99.6767578125
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ; }
rank: 528
score: 99.63614710365853
patch: add ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 529
score: 99.70653670873398
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ + sb . to CaMeL String ( ) ) ) ;
rank: 529
score: 99.6821353310033
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Node . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 529
score: 99.68151177300348
patch: array CaMeL Folded CaMeL Children . add ( 0 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 529
score: 99.67665223817568
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; } }
rank: 529
score: 99.63606770833333
patch: remove ( sb . length ( ) + 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 530
score: 99.73871970663265
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 530
score: 99.71742876838235
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Node . new CaMeL String ( $STRING$ ) ) ) ;
rank: 530
score: 99.70091215093085
patch: folded CaMeL Size += sb . length ( ) + array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 530
score: 99.68471137152778
patch: folded CaMeL Size += Node . new CaMeL String ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 530
score: 99.68180541992187
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else {
rank: 530
score: 99.68142287795608
patch: text = sb . to CaMeL String ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 530
score: 99.67659912109374
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; }
rank: 530
score: 99.6358706825658
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ;
rank: 531
score: 99.73865897700472
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; }
rank: 531
score: 99.71723321143617
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 531
score: 99.7008640455163
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Node . detach CaMeL Children ( ) ; }
rank: 531
score: 99.68167361697635
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 531
score: 99.67649489182692
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ; }
rank: 531
score: 99.6357421875
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) - $NUMBER$ ) ) ;
rank: 532
score: 99.73856608072917
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } }
rank: 532
score: 99.70100911458333
patch: final int folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 532
score: 99.68467673277243
patch: folded CaMeL Size >= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 532
score: 99.68164688501602
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } sb = new String CaMeL Builder ( ) ;
rank: 532
score: 99.68139022435898
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; else ;
rank: 533
score: 99.73847260346284
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + $NUMBER$ ;
rank: 533
score: 99.71720377604167
patch: folded CaMeL Size -- ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 533
score: 99.70585436698718
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 533
score: 99.70083942819149
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 533
score: 99.68135579427083
patch: array CaMeL Folded CaMeL Children . add ( false ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 533
score: 99.6763916015625
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 534
score: 99.71720377604167
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 534
score: 99.70087494721284
patch: line CaMeL Number += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 534
score: 99.70082785866477
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + $STRING$ ) ) ;
rank: 534
score: 99.68465169270833
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } break ;
rank: 534
score: 99.68124569163604
patch: } else { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 534
score: 99.635302734375
patch: folded CaMeL Size ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 535
score: 99.73826293945312
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 535
score: 99.71714274088542
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . size ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 535
score: 99.70081380208333
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 535
score: 99.68108348357372
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) + $NUMBER$ ) ) ;
rank: 535
score: 99.63526611328125
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ( int ) $NUMBER$ ) ) ;
rank: 536
score: 99.73822930518617
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } array CaMeL Node . detach CaMeL Children ( ) ;
rank: 536
score: 99.70564992804276
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } break ;
rank: 536
score: 99.70079627403847
patch: s . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 536
score: 99.70062440814394
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( folded CaMeL Size ) ) ;
rank: 536
score: 99.6842760917468
patch: folded CaMeL Size += 0 + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 536
score: 99.68078300280449
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem . get CaMeL String CaMeL Value ( ) ) ) ;
rank: 536
score: 99.676220703125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . substring ( 0 ) ) ) ;
rank: 536
score: 99.63523706896552
patch: append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 537
score: 99.73820529513888
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 537
score: 99.7007168856534
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 537
score: 99.7005844116211
patch: folded CaMeL Size += $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 537
score: 99.68423685213415
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ;
rank: 537
score: 99.68078219506049
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 537
score: 99.67621813322368
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb ) ) ;
rank: 537
score: 99.63516727570564
patch: if ( folded CaMeL Size ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 538
score: 99.68423316592262
patch: array CaMeL Folded CaMeL Children = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 538
score: 99.68094675164474
patch: append ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 538
score: 99.6761474609375
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ;
rank: 538
score: 99.63514672256098
patch: add ( Node . new CaMeL String ( sb . length ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , 1 ) ) ;
rank: 539
score: 99.73811848958333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 539
score: 99.7166015625
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 539
score: 99.68421829578489
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , n . length ( ) ) ) ;
rank: 539
score: 99.68090194310898
patch: sb . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 539
score: 99.68059981496711
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 539
score: 99.67595079210069
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . trim ( ) ) ) ; }
rank: 539
score: 99.63504732572116
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) , true ) ;
rank: 540
score: 99.73795919215425
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 540
score: 99.70045572916666
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 540
score: 99.70031389508928
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , sb . length ( ) ) ) ;
rank: 540
score: 99.68416539634147
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , count ) ) ;
rank: 540
score: 99.67581979851974
patch: if ( sb . length ( ) + 1 > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 540
score: 99.6349579782197
patch: else { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 541
score: 99.70041822350544
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( sb ) ;
rank: 541
score: 99.68414463141026
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , 1 ) ) ;
rank: 541
score: 99.68070591517858
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 541
score: 99.67579604640152
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( node ) ) ;
rank: 542
score: 99.70035807291667
patch: folded CaMeL Size = sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 542
score: 99.70016043526786
patch: folded CaMeL Size += $NUMBER$ + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 542
score: 99.68413985402961
patch: folded CaMeL Size + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 542
score: 99.68069196428571
patch: next ( ) . folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 542
score: 99.67569056919643
patch: folded CaMeL Size += $NUMBER$ ; } else array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 542
score: 99.63459123883929
patch: folded CaMeL Size . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 543
score: 99.73788888113839
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 543
score: 99.70506456163194
patch: folded CaMeL Size += sb . length ( ) + 1 ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 543
score: 99.70008263221153
patch: double CaMeL Value = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 543
score: 99.70003881209936
patch: c . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 543
score: 99.68413751775569
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 543
score: 99.68069045608108
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 543
score: 99.67567202919408
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ; }
rank: 544
score: 99.7378525152439
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 544
score: 99.6999313766892
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem + 1 ) ) ;
rank: 544
score: 99.69992735327745
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , null , null ) ) ;
rank: 544
score: 99.68413628472223
patch: folded CaMeL Size += n . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 544
score: 99.68068440755208
patch: if ( sb . length ( ) >= $NUMBER$ ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 544
score: 99.6802008213141
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , array CaMeL Node ) ) ;
rank: 544
score: 99.67562063116776
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , null ) ) ; }
rank: 544
score: 99.63456530448718
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ; }
rank: 545
score: 99.73779296875
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; }
rank: 545
score: 99.71632215711806
patch: add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 545
score: 99.69983803353658
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb . to CaMeL String ( ) ) ) ;
rank: 545
score: 99.6998291015625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . trim ( ) ) ) ;
rank: 545
score: 99.6803966703869
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 545
score: 99.68005701013513
patch: folded CaMeL Size += value . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 545
score: 99.63452888257575
patch: if ( sb . length ( ) > 0 ) { sb . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 546
score: 99.7048840645032
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 546
score: 99.69980003720238
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent . replace CaMeL Child ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) , folded CaMeL Size ) ;
rank: 546
score: 99.68023496685606
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 546
score: 99.67998442778716
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 547
score: 99.73770985704788
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 547
score: 99.69971329126602
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , folded CaMeL Size ) ) ;
rank: 547
score: 99.68409288194445
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 547
score: 99.68021334134616
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; $NUMBER$ ;
rank: 547
score: 99.67549751900337
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ; }
rank: 547
score: 99.63436104910714
patch: start += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 548
score: 99.73748779296875
patch: folded CaMeL Size += array CaMeL Node . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 548
score: 99.68020877322635
patch: index = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 548
score: 99.67992538060898
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 548
score: 99.67538291529605
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 548
score: 99.63419596354167
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , - 1 ) ) ;
rank: 549
score: 99.73733956473214
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 549
score: 99.71598614386792
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 549
score: 99.69962768554687
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Array ( ) ) ) ;
rank: 549
score: 99.69958147321428
patch: folded CaMeL Size += sb . length ( ) * $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 549
score: 99.68400607638888
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 549
score: 99.68016387195122
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( $NUMBER$ ) ;
rank: 549
score: 99.67992466517858
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 549
score: 99.6753680889423
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ) ;
rank: 549
score: 99.63413677793561
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 550
score: 99.70473022460938
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , elem ) ) ; }
rank: 550
score: 99.69955906723484
patch: folded CaMeL Size += $NUMBER$ ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 550
score: 99.68394068667763
patch: if ( sb . length ( ) <= 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 550
score: 99.68006417410714
patch: index += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 550
score: 99.67535400390625
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ; }
rank: 550
score: 99.63411218979779
patch: folded CaMeL Size folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 551
score: 99.73719443044355
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } }
rank: 551
score: 99.71587013711735
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 551
score: 99.70461018880208
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 551
score: 99.69945037059294
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , $STRING$ ) ) ;
rank: 551
score: 99.6800537109375
patch: array CaMeL Folded CaMeL Children += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 551
score: 99.6752685546875
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 551
score: 99.63402478448276
patch: end ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 552
score: 99.73699794671474
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 552
score: 99.68387586805555
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) + 1 ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 552
score: 99.67520532852564
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . char CaMeL Value ( ) ) ) ;
rank: 552
score: 99.63395647321428
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( null . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 553
score: 99.73686623086735
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 553
score: 99.70435196314102
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 553
score: 99.69924514358108
patch: if ( sb . starts CaMeL With ( $STRING$ ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 553
score: 99.67997814360119
patch: if ( sb . length ( ) < $NUMBER$ ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 553
score: 99.6796638734879
patch: if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; } sb = new String CaMeL Builder ( ) ;
rank: 553
score: 99.67519399282095
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ; }
rank: 553
score: 99.63387044270833
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 554
score: 99.7367735745614
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 554
score: 99.71570603390957
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 554
score: 99.69917492988782
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( new Integer ( sb . length ( ) ) ) ) ;
rank: 554
score: 99.67983669704861
patch: int length = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 554
score: 99.67965698242188
patch: folded CaMeL Size += sb . length ( ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 554
score: 99.67516719933712
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( 0 , sb . to CaMeL String ( ) ) ; }
rank: 555
score: 99.73673793247768
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 555
score: 99.69919752038044
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 555
score: 99.68365635016026
patch: folded CaMeL Size += list . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 555
score: 99.67980375744048
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( $STRING$ ) ;
rank: 555
score: 99.6793682391827
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 555
score: 99.67510463169643
patch: folded CaMeL Size += $NUMBER$ ; * / array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 555
score: 99.6337158203125
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , - 1 ) ) ;
rank: 556
score: 99.73653609664352
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + $NUMBER$ ;
rank: 556
score: 99.7153990502451
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent = array CaMeL Node . get CaMeL First CaMeL Child ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 556
score: 99.69918758311171
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( node ) ; }
rank: 556
score: 99.68358677455358
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) + $NUMBER$ ) ) ;
rank: 556
score: 99.6797996727196
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 556
score: 99.67501126802884
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . get CaMeL String CaMeL Value ( ) ) ) ;
rank: 556
score: 99.63370768229167
patch: append ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 557
score: 99.71536387567934
patch: String join CaMeL String = Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 557
score: 99.70397010216347
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; break ;
rank: 557
score: 99.67978050595238
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 557
score: 99.67925061677632
patch: folded CaMeL Size += sb . length ( ) + 1 ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 557
score: 99.67483181423611
patch: folded CaMeL Size += sb . length ( ) + 1 ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 557
score: 99.63369455645162
patch: folded CaMeL Size += sb . length ( ) ; sb . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 558
score: 99.71528008643617
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ) ;
rank: 558
score: 99.69880305109797
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , $STRING$ ) ) ;
rank: 558
score: 99.68347497888513
patch: folded CaMeL Size += node . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 558
score: 99.67974330357143
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 558
score: 99.67909279847757
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 558
score: 99.63353814019098
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( ! Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 559
score: 99.715234375
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 559
score: 99.69867907072368
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else {
rank: 559
score: 99.68346884084302
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) . length ( ) ) ) ;
rank: 559
score: 99.67973497178819
patch: String n = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 559
score: 99.67458147321429
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , false ) ) ;
rank: 560
score: 99.71497880651596
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; }
rank: 560
score: 99.69883169778963
patch: folded CaMeL Size += sb . length ( ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 560
score: 99.69867852393617
patch: folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 560
score: 99.67958852407095
patch: if ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 560
score: 99.67878969254032
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 560
score: 99.67454176682692
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ , $NUMBER$ ) ) ;
rank: 560
score: 99.63346862792969
patch: folded CaMeL Size ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 561
score: 99.73626708984375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 561
score: 99.7149732940051
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 561
score: 99.70325055803572
patch: folded CaMeL Size += sb . size ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 561
score: 99.69876901726974
patch: int folded CaMeL Size = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 561
score: 99.69866622121711
patch: folded CaMeL Size $NUMBER$ += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 561
score: 99.67924107142858
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb ) ; array CaMeL Folded CaMeL Children . add ( sb ) ;
rank: 561
score: 99.67876519097223
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Node . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 561
score: 99.67433471679688
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL Instance ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ; }
rank: 562
score: 99.73626302083333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 562
score: 99.71495017027243
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 562
score: 99.69871215820312
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ; }
rank: 562
score: 99.67907133556548
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . get CaMeL String ( ) ) ; }
rank: 562
score: 99.67428341427365
patch: length += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 562
score: 99.63339695785984
patch: if ( folded CaMeL Size != 0 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 563
score: 99.73625837053571
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += 0 ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 563
score: 99.71487491688829
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 563
score: 99.70266884251645
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . remove ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 563
score: 99.69862060546875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) + $NUMBER$ ;
rank: 563
score: 99.68327579941861
patch: folded CaMeL Size . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 563
score: 99.67804276315789
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem . to CaMeL String ( ) ) ) ; }
rank: 563
score: 99.67423741957721
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ; }
rank: 563
score: 99.63328826121794
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 564
score: 99.73616536458333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 564
score: 99.69857627467105
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ; }
rank: 564
score: 99.6830399676067
patch: array CaMeL Folded CaMeL Children = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 564
score: 99.67422003495066
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( array CaMeL Node ) ) ; }
rank: 565
score: 99.73603914221938
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; switch ( array CaMeL Node . get CaMeL Type ( ) ) {
rank: 565
score: 99.7147575827206
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 565
score: 99.70258037860577
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb = new String CaMeL Builder ( ) ; }
rank: 565
score: 99.69842034417229
patch: folded CaMeL Size += sb . length ( ) + n ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 565
score: 99.69831928453948
patch: { folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 565
score: 99.68301019435975
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , name ) ) ;
rank: 565
score: 99.67421587775735
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , ( String ) sb . to CaMeL String ( ) ) ) ;
rank: 565
score: 99.63318549262152
patch: add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 566
score: 99.73601740056819
patch: append ( folded CaMeL Size ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 566
score: 99.7147216796875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 566
score: 99.68296747622283
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , n . to CaMeL String ( ) ) ) ; }
rank: 566
score: 99.67845104586694
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 566
score: 99.6331787109375
patch: push ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 567
score: 99.73595412234043
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 567
score: 99.7147097120098
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( join CaMeL String ) ;
rank: 567
score: 99.70225219726562
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ,
rank: 567
score: 99.69815673828126
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . trim ( ) ) ) ;
rank: 567
score: 99.67760552300348
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node CaMeL Traversal ( sb . to CaMeL String ( ) ) ) ;
rank: 567
score: 99.67396763392857
patch: folded CaMeL Size += folded CaMeL Size ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 567
score: 99.63315766433189
patch: index = 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 568
score: 99.73595081676136
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 568
score: 99.71462558178192
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 568
score: 99.69809792258523
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; return ;
rank: 568
score: 99.68289317255434
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 568
score: 99.67396240234375
patch: folded CaMeL Size += sb . length ( ) + $STRING$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 569
score: 99.73594204215117
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) ;
rank: 569
score: 99.71457248263889
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 569
score: 99.69808382601352
patch: folded CaMeL Size += sb . length ( ) ; } else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 569
score: 99.69793836805556
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 569
score: 99.68260583212209
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + 1 ) ) ;
rank: 569
score: 99.67823428199405
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 569
score: 99.63287353515625
patch: folded CaMeL Size ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 570
score: 99.73593537703805
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 570
score: 99.7145359205163
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 570
score: 99.69805385044643
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 570
score: 99.69789681783537
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Node . detach CaMeL Children ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 570
score: 99.68254905523256
patch: folded CaMeL Size = sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 570
score: 99.6782028610642
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 570
score: 99.67698267886513
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( join CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 570
score: 99.67387952302632
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 570
score: 99.63260135135135
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 571
score: 99.70176391601562
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 571
score: 99.69795185810811
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( chars . to CaMeL String ( ) ) ) ;
rank: 571
score: 99.69784071180555
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 571
score: 99.6766357421875
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ;
rank: 571
score: 99.6737780448718
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 571
score: 99.63240792410714
patch: index = sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 572
score: 99.73580078125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 572
score: 99.6978789538872
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , sb . length ( ) - 1 ) ) ;
rank: 572
score: 99.67802233573718
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + false ) ) ;
rank: 572
score: 99.67639490076013
patch: folded CaMeL Size += array CaMeL Node . get CaMeL Cost ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 572
score: 99.67372796474359
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( folded CaMeL Size , sb ) ) ;
rank: 573
score: 99.73577008928571
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 573
score: 99.69784918064025
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb ) ) ;
rank: 573
score: 99.68234514508929
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) + 1 ) ) ;
rank: 573
score: 99.67597920185811
patch: folded CaMeL Size += array CaMeL Node . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 573
score: 99.63212193080358
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node ) ;
rank: 574
score: 99.735751953125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 574
score: 99.71445681014151
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 574
score: 99.70139674136513
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . to CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 574
score: 99.69777177019817
patch: if ( array CaMeL Folded CaMeL Children . size ( ) <= 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 574
score: 99.69752604166666
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 574
score: 99.68233731897865
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 574
score: 99.67785993303572
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 574
score: 99.6736340645032
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ , true ) ) ;
rank: 574
score: 99.63204616970486
patch: append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 575
score: 99.71432783018868
patch: add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 575
score: 99.70127544981061
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 575
score: 99.69761256167763
patch: double CaMeL Value ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 575
score: 99.67347935267857
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( $NUMBER$ ) ) ;
rank: 575
score: 99.63179931640624
patch: add ( sb . to CaMeL String ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 576
score: 99.73566228693181
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 576
score: 99.71428571428571
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ;
rank: 576
score: 99.70118995949075
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( sb . to CaMeL String ( ) ) ;
rank: 576
score: 99.69752456202652
patch: folded CaMeL Size -- ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 576
score: 99.69700828758445
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , $STRING$ ) ) ;
rank: 576
score: 99.67780504728618
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , to CaMeL String ( ) ) ) ; }
rank: 576
score: 99.67576090494792
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 576
score: 99.67346801757813
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , sb . length ( ) ) ) ; }
rank: 576
score: 99.63176133897569
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , $NUMBER$ ) ) ;
rank: 577
score: 99.73557477678571
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 577
score: 99.71419921875
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 577
score: 99.70118582589286
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 577
score: 99.6969559832317
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( elem ) ) ) ;
rank: 577
score: 99.67778056376689
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ; }
rank: 577
score: 99.67557669974663
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( 0 , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 577
score: 99.67344970703125
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 577
score: 99.63173491379311
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 578
score: 99.73556857638889
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 578
score: 99.71418042452831
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 578
score: 99.6969363190407
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { array CaMeL Node . detach CaMeL Children ( ) ; }
rank: 578
score: 99.68214000355114
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 578
score: 99.67775315504808
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) + $NUMBER$ ;
rank: 578
score: 99.67557010135135
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } elem = elem . get CaMeL First CaMeL Child ( ) ;
rank: 578
score: 99.67337472098214
patch: folded CaMeL Size -= $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 579
score: 99.73553799715908
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 579
score: 99.70095486111111
patch: folded CaMeL Size += sb . trim ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 579
score: 99.69742398648648
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , sb ) ) ;
rank: 579
score: 99.68187224559294
patch: folded CaMeL Size += new String ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 579
score: 99.67541852678572
patch: if ( Node CaMeL Util . is CaMeL Immutable CaMeL Value ( elem ) ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 579
score: 99.67334702435662
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new Node . String ( sb . to CaMeL String ( ) ) ) ;
rank: 580
score: 99.73553602430556
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } * /
rank: 580
score: 99.70087747012867
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } sb = new String CaMeL Builder ( ) ;
rank: 580
score: 99.69736685403963
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 580
score: 99.69671952097039
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( , sb . to CaMeL String ( ) ) ) ;
rank: 580
score: 99.68169875372024
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , n ) ) ; }
rank: 580
score: 99.67774135044642
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . create ( sb . to CaMeL String ( ) ) ) ;
rank: 580
score: 99.67535079152961
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , elem ) ) ; }
rank: 580
score: 99.6729672080592
patch: folded CaMeL Size += $NUMBER$ ; folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 581
score: 99.7354736328125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 581
score: 99.70059364720395
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 581
score: 99.69657995345744
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 581
score: 99.6816739169034
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) + 1 ) ) ;
rank: 581
score: 99.67774097339527
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . value CaMeL Of ( sb . to CaMeL String ( ) ) ) ;
rank: 581
score: 99.67509629991319
patch: folded CaMeL Size += 0 ; if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 581
score: 99.63125610351562
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ; }
rank: 582
score: 99.73544546274039
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 582
score: 99.70038432459677
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { sb . append ( join CaMeL String ) ; }
rank: 582
score: 99.69727302320075
patch: if ( sb . length ( ) > 0 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 582
score: 99.68150290464743
patch: folded CaMeL Size += n . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 582
score: 99.67769499747983
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String ( sb ) ) ;
rank: 582
score: 99.67292554450758
patch: folded CaMeL Size += $NUMBER$ ; } } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 583
score: 99.7353182705966
patch: append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 583
score: 99.71385797464623
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 583
score: 99.70002375422297
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL Number ( sb . to CaMeL String ( ) ) ) ;
rank: 583
score: 99.6972715796494
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , sb . length ( ) + $NUMBER$ ) ) ;
rank: 583
score: 99.69652694310898
patch: this . folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 583
score: 99.67768158783784
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ;
rank: 583
score: 99.67489046663852
patch: result . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 583
score: 99.6729248046875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , ( Node ) n ) ) ;
rank: 583
score: 99.631103515625
patch: append ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 584
score: 99.73527883976064
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . set ( elem ) ; }
rank: 584
score: 99.71383901742789
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( join CaMeL String ) ; }
rank: 584
score: 99.6971534522804
patch: switch ( sb . length ( ) ) { case 0 : array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 584
score: 99.69650750411184
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , $STRING$ ) ) ;
rank: 584
score: 99.67757161458333
patch: folded CaMeL Size += count ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 584
score: 99.67289595170455
patch: sb . append ( $NUMBER$ ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 584
score: 99.63087222450658
patch: add ( sb . to CaMeL String ( ) ) ; else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 585
score: 99.73526664402173
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 585
score: 99.69713462271342
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 585
score: 99.69648041596284
patch: n . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 585
score: 99.6775557355183
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ? $NUMBER$ : $NUMBER$ ) ;
rank: 585
score: 99.630859375
patch: add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 586
score: 99.69951923076923
patch: cfw . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 586
score: 99.69709034455128
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , sb . to CaMeL String ( ) ) ) ;
rank: 586
score: 99.69644019717262
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; nodes . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 586
score: 99.67750598538306
patch: folded CaMeL Size += length ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 586
score: 99.67274514222757
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 586
score: 99.630859375
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ;
rank: 587
score: 99.735234375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 587
score: 99.7137109375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ) ;
rank: 587
score: 99.69706767314189
patch: double CaMeL Value = sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 587
score: 99.69639295212765
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 587
score: 99.68108348357372
patch: if ( sb . length ( ) > $NUMBER$ ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 587
score: 99.67749683277027
patch: if ( folded CaMeL Size ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 587
score: 99.63084362399194
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( ( Integer ) sb . to CaMeL String ( ) ) ;
rank: 588
score: 99.73519234035327
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 588
score: 99.71358816964286
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 588
score: 99.6963141025641
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 588
score: 99.67261402027027
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 588
score: 99.6308075875947
patch: append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 589
score: 99.699267578125
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ,
rank: 589
score: 99.69703934832317
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , array CaMeL Folded CaMeL Children ) ) ;
rank: 589
score: 99.67729334677419
patch: folded CaMeL Size += null ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 589
score: 99.67388091216216
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . set ( elem . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 589
score: 99.63074408637152
patch: append ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 590
score: 99.71346382472827
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 590
score: 99.69873046875
patch: folded CaMeL Size += sb . length ( ) - 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 590
score: 99.69696568080357
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 590
score: 99.69601514862805
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , ) ) ;
rank: 590
score: 99.67721479366988
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ; ;
rank: 590
score: 99.67386203342014
patch: else folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 590
score: 99.67251124526516
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add CaMeL All ( sb . to CaMeL String ( ) ) ; }
rank: 590
score: 99.6306511374081
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ( int ) sb . length ( ) ) ) ;
rank: 591
score: 99.735
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb = Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 591
score: 99.71345549938725
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( folded CaMeL Size > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 591
score: 99.69689048208842
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Char CaMeL Array ( ) , 0 ) ) ;
rank: 591
score: 99.68082885742187
patch: if ( sb . length ( ) < sb . length ( ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 591
score: 99.67372639973958
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 591
score: 99.67245144314236
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . trim ( ) ) ) ;
rank: 592
score: 99.73496315696023
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 592
score: 99.69850786994485
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb = new String CaMeL Builder ( ) ; }
rank: 592
score: 99.69590720152243
patch: ch . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 592
score: 99.68070678710937
patch: folded CaMeL Size ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 592
score: 99.67330834173387
patch: folded CaMeL Size += sb . length ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 592
score: 99.67242752878289
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . ) ) ;
rank: 592
score: 99.63020629882813
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) ) ;
rank: 593
score: 99.73489900914635
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 593
score: 99.69828965928819
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ;
rank: 593
score: 99.69590720152243
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 593
score: 99.63013392857142
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( node . to CaMeL String ( ) ) ;
rank: 594
score: 99.7348124186198
patch: String folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 594
score: 99.7133490114796
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 594
score: 99.69818436472039
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 594
score: 99.69578942587209
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; break ; }
rank: 594
score: 99.67702834670608
patch: folded CaMeL Size += n . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 594
score: 99.67291754645271
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 595
score: 99.73478016954788
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 595
score: 99.71331317608173
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( join CaMeL String ) ; }
rank: 595
score: 99.69671309621711
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Array ( ) ) ) ;
rank: 595
score: 99.69578887195122
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 595
score: 99.67222556089743
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ , $NUMBER$ ) ) ;
rank: 595
score: 99.62982003348215
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 596
score: 99.71327427455357
patch: folded CaMeL Size += Math . length ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 596
score: 99.69800464527027
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 596
score: 99.68043778582317
patch: folded CaMeL Size . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 596
score: 99.67681594122024
patch: if ( sb . length ( ) < 1 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 596
score: 99.67216532939189
patch: if ( sb . length ( ) <= 1 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 596
score: 99.62981818704044
patch: add ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 597
score: 99.73476340553977
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 597
score: 99.71323029891305
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 597
score: 99.6979782516892
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ; } sb = new String CaMeL Builder ( ) ;
rank: 597
score: 99.6957120028409
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( Builder . to CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 597
score: 99.62980704471983
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( node . to CaMeL String ( ) ) ;
rank: 598
score: 99.734755859375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 598
score: 99.7131283408717
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; break ;
rank: 598
score: 99.69793866131756
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } sb = new String CaMeL Builder ( ) ;
rank: 598
score: 99.69654605263158
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) - 1 ) ) ;
rank: 598
score: 99.69563802083333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem - 1 ) ) ;
rank: 598
score: 99.6801257011218
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , n ) ) ;
rank: 598
score: 99.67663225446428
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 598
score: 99.67200055803572
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , $STRING$ ) ) ;
rank: 598
score: 99.62969805743244
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 599
score: 99.7347313133446
patch: append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 599
score: 99.69654017857142
patch: value += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 599
score: 99.69555038060898
patch: folded CaMeL Size -- ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 599
score: 99.6801102801067
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 599
score: 99.67241075303819
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( sb . to CaMeL String ( ) ) ) ;
rank: 599
score: 99.67194158380681
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 599
score: 99.62967826224663
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , n ) ) ;
rank: 600
score: 99.7347265625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL Cost ( n ) ;
rank: 600
score: 99.71311083026961
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 600
score: 99.68006264291158
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } ;
rank: 600
score: 99.67186104910714
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 600
score: 99.6717529296875
patch: folded CaMeL Size -= $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 600
score: 99.62966392780173
patch: dispose ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 601
score: 99.73470956307871
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 601
score: 99.69736842105263
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 601
score: 99.69618530273438
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Lower CaMeL Case ( ) ) ) ; }
rank: 601
score: 99.69542236328125
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 601
score: 99.67636850717905
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ) ;
rank: 601
score: 99.67178262246621
patch: folded CaMeL Size += 0 ; if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 601
score: 99.67174246651786
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( folded CaMeL Size ) ) ;
rank: 601
score: 99.62965262276786
patch: add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 602
score: 99.7130201690051
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ;
rank: 602
score: 99.69715073529412
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 602
score: 99.696044921875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , sb ) ) ;
rank: 602
score: 99.69541968368902
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 602
score: 99.67996651785714
patch: add ( Node . new CaMeL String ( sb . length ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 602
score: 99.67172080592105
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , - 1 ) ) ;
rank: 602
score: 99.67149522569444
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Node . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 602
score: 99.62959369860198
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ; array CaMeL Folded CaMeL Children . add ( null ) ;
rank: 603
score: 99.7345858487216
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 603
score: 99.71298828125
patch: folded CaMeL Size = 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 603
score: 99.69540550595238
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ;
rank: 603
score: 99.67622884114583
patch: int size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 603
score: 99.67171663851352
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( next . to CaMeL String ( ) ) ) ;
rank: 603
score: 99.62958084909539
patch: if ( sb . length ( ) >= 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 604
score: 99.73456200132979
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } } array CaMeL Node . detach CaMeL Children ( ) ;
rank: 604
score: 99.69586502878289
patch: double folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 604
score: 99.69535209037163
patch: n . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 604
score: 99.67619977678571
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ; }
rank: 604
score: 99.67156487542229
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , 0 ) ) ;
rank: 604
score: 99.67124815244932
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( nodes . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 605
score: 99.69575330946181
patch: folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 605
score: 99.67947998046876
patch: folded CaMeL Size + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 605
score: 99.67619493272569
patch: format ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 605
score: 99.67155376233552
patch: if ( sb . length ( ) + $NUMBER$ > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 605
score: 99.67119683159723
patch: folded CaMeL Size += $NUMBER$ ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 605
score: 99.62931577620968
patch: folded CaMeL Size = 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 606
score: 99.71296522352431
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem ) ) ;
rank: 606
score: 99.67151489257813
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; ;
rank: 606
score: 99.62908935546875
patch: if ( sb . length ( ) == 0 ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 607
score: 99.67601318359375
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ; }
rank: 607
score: 99.67132073479729
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ;
rank: 607
score: 99.67112862723214
patch: String CaMeL Builder sb = new String CaMeL Builder ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 607
score: 99.62907409667969
patch: append ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 608
score: 99.7128251238567
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; else array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 608
score: 99.69662136501736
patch: folded CaMeL Size += sb . length ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 608
score: 99.69514973958333
patch: { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 608
score: 99.67595563616071
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += $STRING$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 609
score: 99.69654639991555
patch: folded CaMeL Size += Math . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 609
score: 99.69511599657012
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 609
score: 99.6951042624081
patch: folded CaMeL Size += sb . length ( ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 609
score: 99.67921752929688
patch: folded CaMeL Size ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 609
score: 99.67121233258929
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , to CaMeL String ( ) ) ) ;
rank: 609
score: 99.67070048564189
patch: folded CaMeL Size += $NUMBER$ ; } if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 609
score: 99.62886047363281
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 610
score: 99.73429208431604
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 610
score: 99.696337890625
patch: Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 610
score: 99.69502088758681
patch: folded CaMeL Size += sb . length ( ) + 1 ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 610
score: 99.67916515261628
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , - 1 ) ) ; }
rank: 610
score: 99.67064732142858
patch: folded CaMeL Size += array CaMeL Node . get CaMeL Cost ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 610
score: 99.62880572150735
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , - $NUMBER$ ) ) ;
rank: 611
score: 99.73429008152173
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + join CaMeL String ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 611
score: 99.69503997093024
patch: folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 611
score: 99.67567138671875
patch: array CaMeL Folded CaMeL Children += sb . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 611
score: 99.6710106102196
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( node , sb . to CaMeL String ( ) ) ) ;
rank: 611
score: 99.67064034598214
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 611
score: 99.62880067567568
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) - 1 ) ) ;
rank: 612
score: 99.73410247093024
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 612
score: 99.71246832770271
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ; }
rank: 612
score: 99.69616369298987
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . length + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 612
score: 99.6791104403409
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . to CaMeL String ( ) ) ) ; }
rank: 612
score: 99.67555236816406
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) + $NUMBER$ ;
rank: 612
score: 99.67096819196429
patch: += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 613
score: 99.73389593160377
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 613
score: 99.69484544836956
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 613
score: 99.69482421875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { folded CaMeL Size += Node . new CaMeL String ( sb . to CaMeL String ( ) ) ;
rank: 613
score: 99.6790870460304
patch: folded CaMeL Size = sb . length ( ) * $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 613
score: 99.67055979082662
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem ) ) ;
rank: 613
score: 99.62874755859374
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size += sb . to CaMeL String ( ) ;
rank: 614
score: 99.7338243849734
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( n ) ; }
rank: 614
score: 99.69482421875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . set ( elem ) ;
rank: 614
score: 99.67903844321647
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 614
score: 99.62859429253473
patch: remove ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 615
score: 99.7337277434593
patch: append ( join CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 615
score: 99.69587707519531
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 615
score: 99.69478175951087
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; elem = elem . get CaMeL Next ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 615
score: 99.6947085731908
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( ( char ) sb . length ( ) ) ) ;
rank: 615
score: 99.67898807010135
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + 1 ) ) ;
rank: 615
score: 99.67537434895833
patch: folded CaMeL Size += sb . length ( ) $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 615
score: 99.67057719983552
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb ) ) ;
rank: 615
score: 99.62858312270221
patch: assert sb . length ( ) == 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 616
score: 99.7123046875
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 616
score: 99.69574938322368
patch: folded CaMeL Size += sb $NUMBER$ . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 616
score: 99.6947587176067
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 616
score: 99.67894720262096
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 616
score: 99.67521421370968
patch: folded CaMeL Size += false ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 616
score: 99.67056851773648
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL Instance ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 616
score: 99.670166015625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } elem = elem . get CaMeL Next ( ) ; }
rank: 616
score: 99.62825300886824
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , false ) ) ;
rank: 617
score: 99.733642578125
patch: String folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 617
score: 99.67890857514881
patch: if ( sb . length ( ) > sb . length ( ) ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 617
score: 99.67511858258929
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . get CaMeL String ( ) ) ;
rank: 617
score: 99.67011322846284
patch: err . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 617
score: 99.62801339285714
patch: element = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 618
score: 99.7335674579327
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 618
score: 99.71204833984375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 618
score: 99.69537188555744
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 618
score: 99.69467877327128
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 618
score: 99.67881735777243
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 618
score: 99.67508012820512
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) , 1 ) ;
rank: 618
score: 99.67047797309027
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 618
score: 99.66989135742188
patch: if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; } sb . append ( join CaMeL String ) ; }
rank: 618
score: 99.62791649070945
patch: add ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 619
score: 99.73349831321023
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new CaMeL String . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 619
score: 99.7120361328125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 619
score: 99.6953125
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 619
score: 99.69452373798077
patch: buf . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 619
score: 99.69439532305744
patch: / * folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 619
score: 99.67045323988971
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) ) ) ;
rank: 619
score: 99.669677734375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } }
rank: 619
score: 99.62785339355469
patch: start ( folded CaMeL Size ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 620
score: 99.71202935112848
patch: append ( join CaMeL String ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 620
score: 99.6945163892663
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Node . detach CaMeL Children ( false ) ;
rank: 620
score: 99.67869166324013
patch: if ( sb . size ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 620
score: 99.67488606770833
patch: array CaMeL Folded CaMeL Children . add ( node ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 620
score: 99.67044314822635
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , null ) ) ;
rank: 620
score: 99.66930803571428
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 620
score: 99.62784830729167
patch: add ( node ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 621
score: 99.73334649268617
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 621
score: 99.71200374681122
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( $STRING$ ) ;
rank: 621
score: 99.69446614583333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , ) ) ;
rank: 621
score: 99.69416889391448
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + $NUMBER$ ) ) ; }
rank: 621
score: 99.67041733685662
patch: folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 621
score: 99.66914506392045
patch: folded CaMeL Size += array CaMeL Node . get CaMeL Cost ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 622
score: 99.71197855247641
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 622
score: 99.69471499794408
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb = new String CaMeL Builder ( ) ;
rank: 622
score: 99.69444754464286
patch: folded CaMeL Size -= sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 622
score: 99.67858276367187
patch: folded CaMeL Size += $NUMBER$ + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 622
score: 99.67485215928819
patch: if ( sb . length ( ) < 1 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 622
score: 99.67040405273437
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL At ( 0 ) , $NUMBER$ ) ) ;
rank: 622
score: 99.66906060112848
patch: folded CaMeL Size = sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 623
score: 99.73331124441964
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 623
score: 99.69451583059211
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 623
score: 99.6784417568109
patch: add ( sb . to CaMeL String ( ) ) ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 623
score: 99.67483956473214
patch: n = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 623
score: 99.67025146484374
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 623
score: 99.62724752987133
patch: add ( folded CaMeL Size ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 624
score: 99.73328993055556
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 624
score: 99.69432532269022
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( node ) ;
rank: 624
score: 99.69396659655449
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 624
score: 99.67838541666667
patch: add ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 624
score: 99.67483956473214
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 624
score: 99.670166015625
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ;
rank: 624
score: 99.66857580236487
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 624
score: 99.6272223056891
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { array CaMeL Folded CaMeL Children . add ( node ) ;
rank: 625
score: 99.73326945754717
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 625
score: 99.69430187136628
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 625
score: 99.69386017628206
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + $NUMBER$ ) ) ;
rank: 625
score: 99.67836216517857
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , null ) ) ; }
rank: 625
score: 99.6699462890625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ , sb . to CaMeL String ( ) ) ) ; }
rank: 625
score: 99.66822028882575
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 625
score: 99.62720947265625
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 626
score: 99.73325892857143
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 626
score: 99.69404682360198
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 626
score: 99.69380493164063
patch: * / folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 626
score: 99.668212890625
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 626
score: 99.62711307920259
patch: start ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 627
score: 99.7331328810307
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 627
score: 99.69394663217905
patch: folded CaMeL Size += sb . length ( ) + ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 627
score: 99.69379625822368
patch: switch ( sb . length ( ) ) { case - 1 : array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 627
score: 99.674560546875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ) ; }
rank: 627
score: 99.62653350830078
patch: folded CaMeL Size ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 628
score: 99.73311434659091
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem . get CaMeL First CaMeL Child ( ) ) ; }
rank: 628
score: 99.71142578125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 628
score: 99.69393760279605
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 628
score: 99.6697528545673
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ , false ) ) ;
rank: 628
score: 99.62638113839286
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , to CaMeL String ) ) ;
rank: 629
score: 99.73307291666667
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 629
score: 99.6939697265625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , folded CaMeL Size ) ) ;
rank: 629
score: 99.6935784755609
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else {
rank: 629
score: 99.67796688988095
patch: if ( Node . new CaMeL String ( sb . length ( ) ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 629
score: 99.67443534655449
patch: else folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 629
score: 99.66927083333333
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . substring ( 0 ) ) ) ) ;
rank: 629
score: 99.66796156939338
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 629
score: 99.62621282762096
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( ( Node ) sb . to CaMeL String ( ) ) ;
rank: 630
score: 99.73307291666667
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ;
rank: 630
score: 99.71116286057692
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( Node CaMeL Util . is CaMeL Immutable CaMeL Value ( elem ) ) { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 630
score: 99.69350714432566
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 630
score: 99.6934814453125
patch: try { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 630
score: 99.67795281661184
patch: if ( sb . length ( ) >= 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 630
score: 99.67426893446181
patch: folded CaMeL Size += sb . length ( ) ; ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 630
score: 99.66923442639802
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ; }
rank: 631
score: 99.73304642078489
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem . to CaMeL String ( ) ) ) ; }
rank: 631
score: 99.69378952752976
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 631
score: 99.69347205528847
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , sb . length ( ) - $NUMBER$ ) ) ;
rank: 631
score: 99.69340122767858
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 631
score: 99.67775364925987
patch: if ( sb . length ( ) == 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 631
score: 99.66920872738487
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , true ) ) ;
rank: 631
score: 99.62599690755208
patch: start ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 632
score: 99.73301866319444
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 632
score: 99.71113855698529
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 632
score: 99.69377335258152
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size < Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 632
score: 99.69345953525641
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) * $NUMBER$ ) ) ;
rank: 632
score: 99.6932705965909
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 632
score: 99.67764505525915
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) + 1 ;
rank: 632
score: 99.67419763513513
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new . String ( sb . to CaMeL String ( ) ) ) ;
rank: 632
score: 99.66900956003289
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . $NUMBER$ ( sb . to CaMeL String ( ) ) ) ; }
rank: 632
score: 99.66784338048987
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 632
score: 99.62533569335938
patch: push ( folded CaMeL Size ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 633
score: 99.73296155427632
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 633
score: 99.69306244721284
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 633
score: 99.66889912373311
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL Instance ( sb . to CaMeL String ( ) ) ) ;
rank: 633
score: 99.62519795185811
patch: if ( sb . size ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 634
score: 99.73251488095238
patch: append ( $STRING$ ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 634
score: 99.71103387129934
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( join CaMeL String ) ;
rank: 634
score: 99.67750133167614
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ; }
rank: 634
score: 99.66888271233974
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ; }
rank: 634
score: 99.66718052455357
patch: folded CaMeL Size = array CaMeL Node . get CaMeL First CaMeL Child ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 634
score: 99.62518521012932
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 635
score: 99.73247419084821
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) : Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 635
score: 99.71102905273438
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( join CaMeL String ) ;
rank: 635
score: 99.69332807491988
patch: folded CaMeL Size += sb . trim ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 635
score: 99.69315279447116
patch: folded CaMeL Size += ( sb . length ( ) + $NUMBER$ ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 635
score: 99.6928512985642
patch: folded CaMeL Size += sb . length ( ) > 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 635
score: 99.67737129407051
patch: folded CaMeL Size = n . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 635
score: 99.674072265625
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 635
score: 99.66875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( exp ) ) ;
rank: 636
score: 99.7109375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , join CaMeL String ) ) ; }
rank: 636
score: 99.69325814596037
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Node . detach CaMeL Children ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 636
score: 99.69310863597973
patch: folded CaMeL Size = list . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 636
score: 99.67735706676136
patch: folded CaMeL Size . add ( sb . to CaMeL String ( ) ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 636
score: 99.67396763392857
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( to CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 636
score: 99.66696506076389
patch: folded CaMeL Size += sb . length ( ) + - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 636
score: 99.62506462545956
patch: add ( array CaMeL Folded CaMeL Children ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 637
score: 99.7323749248798
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 637
score: 99.71078636532738
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 637
score: 99.69324582122093
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 637
score: 99.69229465060764
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + 1 ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 637
score: 99.67734375
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 637
score: 99.67378162202381
patch: folded CaMeL Size += $STRING$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 637
score: 99.66857580236487
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( 0 , Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 637
score: 99.66692243303571
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( null ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 638
score: 99.67732558139535
patch: folded CaMeL Size += sb . length ( ) + 1 ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 638
score: 99.67377672697368
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb ) ) ;
rank: 638
score: 99.66850322001689
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ;
rank: 638
score: 99.66618516710069
patch: folded CaMeL Size += 1 ; if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 638
score: 99.62438616071428
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . length ( ) ) ) ;
rank: 639
score: 99.69306640625
patch: if ( sb . index CaMeL Of ( $STRING$ ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 639
score: 99.69175889756944
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ) ;
rank: 639
score: 99.67726536800987
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; else
rank: 639
score: 99.67377533783784
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 639
score: 99.66849190848214
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( list . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 639
score: 99.66615513392857
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 639
score: 99.62429397170608
patch: add ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 640
score: 99.73207922149123
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 640
score: 99.69139229910714
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 640
score: 99.67723983373398
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 640
score: 99.67375837053571
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ;
rank: 640
score: 99.66817898220486
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( $STRING$ ) ) ; }
rank: 640
score: 99.66605631510417
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( sb . to CaMeL String ( ) ) ) ;
rank: 640
score: 99.62429397170608
patch: if ( sb . length ( ) == 1 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 641
score: 99.73205788352273
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( array CaMeL Node ) ;
rank: 641
score: 99.69302978515626
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } array CaMeL Node . detach CaMeL Children ( ) ;
rank: 641
score: 99.69300079345703
patch: folded CaMeL Size = 0 ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 641
score: 99.69059244791667
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ,
rank: 641
score: 99.67369384765625
patch: super . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 641
score: 99.66815350506756
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 641
score: 99.66590791590073
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Integer ( sb . to CaMeL String ( ) ) ) ;
rank: 641
score: 99.62417263454861
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , 1 ) ) ;
rank: 642
score: 99.69296459441489
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) , folded CaMeL Size ) ; }
rank: 642
score: 99.69286411830358
patch: if ( sb . length ( ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 642
score: 99.69050736860795
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb = new String CaMeL Builder ( ) ;
rank: 642
score: 99.67713758680556
patch: int end = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 642
score: 99.67366536458333
patch: if ( array CaMeL Folded CaMeL Children != null ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 642
score: 99.66542681525735
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Node . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 642
score: 99.62417120682566
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ; array CaMeL Folded CaMeL Children . add ( node ) ;
rank: 643
score: 99.71030680338542
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 643
score: 99.6929306402439
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) . length ( ) - 1 ;
rank: 643
score: 99.69277093349359
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL Array ( ) ) ) ;
rank: 643
score: 99.69017876519098
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 643
score: 99.6736328125
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . to CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 643
score: 99.66524929470486
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; nodes . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 643
score: 99.62408088235294
patch: add ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 644
score: 99.7319990948933
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 644
score: 99.69292303856383
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 644
score: 99.66520647321428
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 644
score: 99.62404497931985
patch: start ( array CaMeL Folded CaMeL Children ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 645
score: 99.71020986519608
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( Node CaMeL Util . is CaMeL Immutable CaMeL Value ( elem ) ) { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 645
score: 99.69289279513889
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 645
score: 99.692626953125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , $STRING$ + sb . length ( ) ) ) ;
rank: 645
score: 99.67676459418402
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 645
score: 99.66782513786765
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 645
score: 99.66473911830357
patch: folded CaMeL Size <= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 645
score: 99.62403021918402
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + 1 ) ) ;
rank: 646
score: 99.6928180197011
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 646
score: 99.69234426398026
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , sb . length ( ) ) ) ; }
rank: 646
score: 99.68966238839286
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + 1 ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 646
score: 99.67323133680556
patch: if ( $NUMBER$ != sb . length ( ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 646
score: 99.66779528166118
patch: folded CaMeL Size -= sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 646
score: 99.6239013671875
patch: System . out . println ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 647
score: 99.73178498641305
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb = new String CaMeL Builder ( ) ;
rank: 647
score: 99.69258736275337
patch: retval . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 647
score: 99.69230571546052
patch: folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 647
score: 99.6766357421875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; else
rank: 647
score: 99.67305385044642
patch: List += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 647
score: 99.6677444045608
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb ) ) ;
rank: 647
score: 99.66446940104167
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 647
score: 99.62389090401786
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , true ) ) ;
rank: 648
score: 99.73175698138297
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( null ) ; }
rank: 648
score: 99.71002875434027
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; sb . append ( join CaMeL String ) ;
rank: 648
score: 99.6925614519817
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 648
score: 99.6920885917468
patch: if ( folded CaMeL Size < sb . length ( ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 648
score: 99.67661354758523
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ; }
rank: 648
score: 99.6728748139881
patch: if ( sb . length ( ) > $NUMBER$ ) { folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 648
score: 99.66771208934294
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb , $NUMBER$ ) ) ;
rank: 648
score: 99.664248046875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 648
score: 99.62344563802084
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 649
score: 99.70994808799342
patch: sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 649
score: 99.69204629434121
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + $NUMBER$ ) ) ;
rank: 649
score: 99.66770426432292
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new . String ( sb . to CaMeL String ( ) ) ) ; }
rank: 649
score: 99.66419813368056
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb to CaMeL String ( ) ) ) ;
rank: 649
score: 99.62329889112904
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , 1 ) ) ;
rank: 650
score: 99.73167386968085
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + join CaMeL String ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 650
score: 99.70987802181604
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 650
score: 99.69192583133012
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( folded CaMeL Size , sb . length ( ) ) ) ;
rank: 650
score: 99.67652652138158
patch: int index = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 650
score: 99.6676124366554
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , ) ) ;
rank: 650
score: 99.66408284505208
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; else folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 650
score: 99.6232048483456
patch: sort ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 651
score: 99.73148216391509
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 651
score: 99.68880648226352
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ; } sb . append ( join CaMeL String ) ;
rank: 651
score: 99.67643229166667
patch: folded CaMeL Size += $NUMBER$ + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 651
score: 99.67193777901785
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb ) ;
rank: 651
score: 99.66758062900641
patch: folded CaMeL Size += sb . length ( ) ; else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 651
score: 99.66402180989583
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 651
score: 99.62310965401785
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( null ) ;
rank: 652
score: 99.73145435474537
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb = new String CaMeL Builder ( ) ;
rank: 652
score: 99.70970517113095
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ;
rank: 652
score: 99.69229970079788
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else {
rank: 652
score: 99.69185697115384
patch: if ( sb . char CaMeL At ( 0 ) != $STRING$ ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 652
score: 99.6887451171875
patch: folded CaMeL Size += sb . length ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 652
score: 99.67631603422619
patch: if ( folded CaMeL Size ( sb . to CaMeL String ( ) ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 652
score: 99.67190212673611
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 652
score: 99.6674868935033
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; }
rank: 652
score: 99.66377258300781
patch: folded CaMeL Size += sb . length ( ) ; if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; }
rank: 652
score: 99.62299940321181
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , $NUMBER$ ) ) ;
rank: 653
score: 99.73143659319196
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 653
score: 99.7096022002551
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 653
score: 99.6762924194336
patch: if ( folded CaMeL Size ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 653
score: 99.67164248511905
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; $NUMBER$ ++ ;
rank: 653
score: 99.66741160857372
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 653
score: 99.66366577148438
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 653
score: 99.62291124131944
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( node . get CaMeL String ( ) ) ;
rank: 654
score: 99.73130063657408
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } }
rank: 654
score: 99.69170317778716
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ;
rank: 654
score: 99.68817963471284
patch: folded CaMeL Size += new String CaMeL Builder ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 654
score: 99.67625668174342
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , $NUMBER$ ) ) ; }
rank: 654
score: 99.67163764105902
patch: if ( 0 == sb . length ( ) ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 654
score: 99.66740587022569
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( $NUMBER$ ) ) ; }
rank: 655
score: 99.73129272460938
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 655
score: 99.6915752704327
patch: * / if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 655
score: 99.68809509277344
patch: folded CaMeL Size += sb . length ( ) ; } sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 655
score: 99.67139834449405
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( ) ) ; }
rank: 655
score: 99.6227139559659
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 , sb . length ( ) ) ) ;
rank: 656
score: 99.73128255208333
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 656
score: 99.70954241071429
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } else { array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 656
score: 99.68787977430556
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 656
score: 99.676025390625
patch: add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 656
score: 99.67133393158784
patch: if ( ! Node CaMeL Util . equals ( sb . to CaMeL String ( ) ) ) { array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 656
score: 99.66704963235294
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb ) ) ;
rank: 656
score: 99.6634750366211
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 657
score: 99.73126105542453
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 657
score: 99.70953714622641
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 657
score: 99.69203969594595
patch: n . folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 657
score: 99.69133444393383
patch: folded CaMeL Size ++ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 657
score: 99.67582465277778
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) - 1 ) ) ;
rank: 657
score: 99.67117648654514
patch: int length = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 657
score: 99.66702917850378
patch: sb . append ( $STRING$ ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 657
score: 99.62256599195075
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 658
score: 99.73121178668478
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 658
score: 99.69186662946429
patch: folded CaMeL Size -= sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 658
score: 99.69125366210938
patch: folded CaMeL Size += Math . min ( sb . length ( ) , $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 658
score: 99.68731524493244
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( name . to CaMeL String ( ) ) ) ;
rank: 658
score: 99.67572312127976
patch: folded CaMeL Size += sb . length ( ) + 1 ; else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 658
score: 99.67110770089286
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb ) ;
rank: 658
score: 99.66702431126645
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb . to CaMeL String ( ) ) ) ; }
rank: 658
score: 99.66337193080358
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 658
score: 99.62251240498311
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 659
score: 99.70951251594387
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( join CaMeL String ) ; }
rank: 659
score: 99.69173616976352
patch: folded CaMeL Size += sb . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 659
score: 99.68682696368244
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 659
score: 99.67091936383929
patch: text = sb . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 659
score: 99.6669921875
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , false ) ) ;
rank: 659
score: 99.66305106026786
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 660
score: 99.73106032151442
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 660
score: 99.69117530616555
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Branch . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 660
score: 99.68678077491555
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , right ) ) ;
rank: 660
score: 99.6756527549342
patch: add ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 660
score: 99.67090503589527
patch: if ( n != null ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 660
score: 99.66690224095395
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( append . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 660
score: 99.66264073988971
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Node . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 660
score: 99.62186554939517
patch: folded CaMeL Size += start ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 661
score: 99.73092651367188
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 661
score: 99.70931615584936
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; return ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 661
score: 99.69112911739865
patch: folded CaMeL Size += ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 661
score: 99.68675401475694
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; }
rank: 661
score: 99.67540564903847
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , 0 ) ) ;
rank: 661
score: 99.67076918658088
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ;
rank: 661
score: 99.66689321157095
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb . length ( ) - 1 ) ) ;
rank: 661
score: 99.66185087316177
patch: folded CaMeL Size += new String CaMeL Builder ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 661
score: 99.621630859375
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , length ( ) ) ) ;
rank: 662
score: 99.73080679086539
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem . get CaMeL Next ( ) ) ;
rank: 662
score: 99.69164413060898
patch: folded CaMeL Size += sb . length ( ) - 1 + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 662
score: 99.68662396599265
patch: folded CaMeL Size += sb . length ( ) + 1 ; } sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 662
score: 99.67540218955592
patch: if ( array CaMeL Folded CaMeL Children . length > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 662
score: 99.6667709350586
patch: folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 662
score: 99.66163545496323
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new Node CaMeL Traversal ( ) ) ;
rank: 662
score: 99.62152310075432
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ;
rank: 663
score: 99.73079119988208
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 663
score: 99.69080699573864
patch: folded CaMeL Size += $NUMBER$ + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 663
score: 99.68648274739583
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - 1 ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 663
score: 99.67530653211806
patch: if ( sb . length ( ) > ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 663
score: 99.670654296875
patch: int += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 663
score: 99.66676839192708
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( next ) ) ; }
rank: 663
score: 99.6614501953125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( ) ) ; }
rank: 664
score: 99.6912151834239
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( node ) ;
rank: 664
score: 99.6907860008446
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , 0 ) ) ;
rank: 664
score: 99.68641183035714
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 664
score: 99.67527418870192
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , $NUMBER$ ) ) ;
rank: 664
score: 99.67063210227273
patch: folded CaMeL Size += count + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 664
score: 99.66670365767045
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( ) ) ; }
rank: 664
score: 99.6613060735887
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 664
score: 99.62134507123162
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ( String ) sb . length ( ) ) ) ;
rank: 665
score: 99.6912121895032
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; break ;
rank: 665
score: 99.69077435661765
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( new CaMeL String ) ) ;
rank: 665
score: 99.68617757161458
patch: folded CaMeL Size += sb . length ( ) - 1 ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 665
score: 99.67052873883928
patch: folded CaMeL Size += new Integer ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 665
score: 99.66667094983552
patch: folded CaMeL Size += $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 665
score: 99.66115993923611
patch: folded CaMeL Size += 0 ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 665
score: 99.62130398220486
patch: add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 666
score: 99.73063858695652
patch: folded CaMeL Size += sb . length ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 666
score: 99.70875084918478
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) . size ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 666
score: 99.69120861235119
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) . get CaMeL Cost ( n ) ;
rank: 666
score: 99.67045665922619
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; folded CaMeL Size += sb . to CaMeL String ( ) ;
rank: 666
score: 99.66640218098958
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( 0 , $NUMBER$ ) ) ) ;
rank: 666
score: 99.66113978794642
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( elem . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 666
score: 99.621171875
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 667
score: 99.7306377704327
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } break ;
rank: 667
score: 99.708662109375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ; }
rank: 667
score: 99.69065946691177
patch: synchronized ( array CaMeL Folded CaMeL Children ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 667
score: 99.68589459043561
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 667
score: 99.67482688210227
patch: if ( folded CaMeL Size ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 667
score: 99.66618516710069
patch: int start = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 667
score: 99.6611328125
patch: if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; }
rank: 667
score: 99.6207504272461
patch: add ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 668
score: 99.73058769030449
patch: folded CaMeL Size += array CaMeL Node . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 668
score: 99.691064453125
patch: { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 668
score: 99.69064743454392
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( parent . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 668
score: 99.6857712204392
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem + $NUMBER$ ) ) ;
rank: 668
score: 99.67482561383929
patch: if ( sb . length ( ) > $NUMBER$ ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 668
score: 99.6704165810033
patch: if ( ! folded CaMeL Size ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 668
score: 99.66612723214286
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . trim ( ) ) ) ;
rank: 668
score: 99.6610107421875
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 669
score: 99.73058064778645
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 669
score: 99.66606287802419
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL Instance ( sb . to CaMeL String ( ) ) ) ;
rank: 669
score: 99.62034696691177
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( array CaMeL Folded CaMeL Children ) ;
rank: 670
score: 99.73052402712264
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 670
score: 99.70846737132354
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 670
score: 99.69056919642857
patch: folded CaMeL Size = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 670
score: 99.67466517857143
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ; ;
rank: 670
score: 99.66990661621094
patch: this . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 670
score: 99.66606001420455
patch: * / folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 671
score: 99.73047814002403
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 671
score: 99.69092906605114
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else
rank: 671
score: 99.66599469866071
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb ) ) ;
rank: 671
score: 99.66014837449596
patch: folded CaMeL Size += sb . length ( ) - 1 ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 671
score: 99.62010239109848
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + $NUMBER$ ) ) ;
rank: 672
score: 99.7084337599734
patch: String join CaMeL String = Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 672
score: 99.69083658854167
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; break ;
rank: 672
score: 99.69040329391892
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 672
score: 99.67460552014802
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 672
score: 99.66597863399622
patch: folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 673
score: 99.73043758311171
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . remove ( elem ) ; }
rank: 673
score: 99.70841796875
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ; }
rank: 673
score: 99.69079059103261
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( null ) ;
rank: 673
score: 99.69037690033784
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( ( sb . to CaMeL String ( ) ) ) ) ;
rank: 673
score: 99.68440246582031
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( join CaMeL String ) ; } sb = new String CaMeL Builder ( ) ;
rank: 673
score: 99.67431640625
patch: this . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 673
score: 99.66946847098214
patch: if ( sb . length ( ) > $NUMBER$ ) { folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 673
score: 99.66593644425676
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL Instance ( sb . to CaMeL String ( ) ) ) ;
rank: 673
score: 99.65989583333334
patch: if ( sb . length ( ) == 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 673
score: 99.61988624366555
patch: if ( sb . trim ( ) != 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 674
score: 99.73006184895833
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 674
score: 99.70832170758929
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 674
score: 99.69029715401786
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Array ( ) ) ) ;
rank: 674
score: 99.68434771369485
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 674
score: 99.6742412860577
patch: folded CaMeL Size += node . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 674
score: 99.6694137985642
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 674
score: 99.66588637408088
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) ) ) ;
rank: 674
score: 99.65983812736742
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( join CaMeL String ) ;
rank: 674
score: 99.61979675292969
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . length ( ) ) ) ;
rank: 675
score: 99.73001901726974
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; }
rank: 675
score: 99.69065504807692
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) ) ) ;
rank: 675
score: 99.67419120592949
patch: if ( sb . length ( ) <= 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 675
score: 99.61970563616072
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 676
score: 99.72999889445755
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem ) ) ;
rank: 676
score: 99.70826256793478
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ; }
rank: 676
score: 99.66573660714286
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , true ) ) ;
rank: 676
score: 99.65952845982143
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 676
score: 99.61939956202652
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 677
score: 99.72986088966837
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } } }
rank: 677
score: 99.69059244791667
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 677
score: 99.68379720052083
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 677
score: 99.6656429893092
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL Value ( ) ) ) ; }
rank: 678
score: 99.72978515625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 678
score: 99.7080078125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; }
rank: 678
score: 99.69005126953125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , null ) ) ; }
rank: 678
score: 99.68305969238281
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( sb . to CaMeL String ( ) ) ;
rank: 678
score: 99.66820004111842
patch: push ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 678
score: 99.65949781013258
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . to CaMeL String ( elem ) ) ;
rank: 678
score: 99.61930803571428
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( value . to CaMeL String ( ) ) ) ;
rank: 679
score: 99.72976684570312
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; break ;
rank: 679
score: 99.70772298177083
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } folded CaMeL Size ++ ;
rank: 679
score: 99.69004698057432
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , null ) ) ;
rank: 679
score: 99.68304246471774
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 679
score: 99.6738531650641
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 679
score: 99.66815185546875
patch: if ( Node CaMeL Util . equals ( sb . to CaMeL String ( ) ) ) { array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 679
score: 99.66550514914773
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . to CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 679
score: 99.61912582859848
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 680
score: 99.72963460286458
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; }
rank: 680
score: 99.69033578725961
patch: folded CaMeL Size += sb . length ( ) + SIZE / $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 680
score: 99.68244171142578
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( join CaMeL String ) ; sb = new String CaMeL Builder ( ) ;
rank: 680
score: 99.67366536458333
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 680
score: 99.66539481026786
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . trim ( ) ) ) ;
rank: 680
score: 99.658935546875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 680
score: 99.61911272321429
patch: start ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 681
score: 99.72959937118902
patch: String CaMeL Builder sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 681
score: 99.69033441310975
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 681
score: 99.67352120535715
patch: if ( sb . length ( ) <= 0 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 681
score: 99.667724609375
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , to CaMeL String ( ) ) ) ;
rank: 681
score: 99.66539171006944
patch: folded CaMeL Size += $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 681
score: 99.65892857142858
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } array CaMeL Node . detach CaMeL Children ( ) ;
rank: 681
score: 99.61904444839016
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , node . to CaMeL String ( ) ) ) ;
rank: 682
score: 99.72957356770833
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 682
score: 99.69032952724359
patch: buf . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 682
score: 99.6734952059659
patch: folded CaMeL Size += folded CaMeL Size + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 682
score: 99.667724609375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 682
score: 99.65855305989584
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; String CaMeL Builder sb = new String CaMeL Builder ( ) ;
rank: 682
score: 99.6189201108871
patch: folded CaMeL Size < $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 683
score: 99.70752949617346
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ;
rank: 683
score: 99.69031292459239
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 683
score: 99.68210767663044
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( join CaMeL String ) ; }
rank: 683
score: 99.67332664695945
patch: if ( sb . length ( ) <= 0 ) array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 683
score: 99.66769501657197
patch: folded CaMeL Size < 0 + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 683
score: 99.6651611328125
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( ( String ) sb . to CaMeL String ( ) ) ) ;
rank: 683
score: 99.61874569163604
patch: if ( sb . length ( ) == 0 ) { folded CaMeL Size . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 684
score: 99.70751953125
patch: add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 684
score: 99.69025153082771
patch: folded CaMeL Size += sb . length ( ) * 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 684
score: 99.68980887276786
patch: pos += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 684
score: 99.68199920654297
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ) ;
rank: 684
score: 99.673193359375
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , ) ) ;
rank: 684
score: 99.61870814732143
patch: index = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 685
score: 99.72934927591463
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } break ;
rank: 685
score: 99.70749918619792
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 685
score: 99.68978794642857
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , 0 ) ) ;
rank: 685
score: 99.68182373046875
patch: folded CaMeL Size += sb . size ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 685
score: 99.66514078776042
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , $NUMBER$ ) ) ; }
rank: 685
score: 99.6584893588362
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 686
score: 99.7292540015244
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 686
score: 99.70749830163044
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 686
score: 99.69010062839673
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } array CaMeL Node . detach CaMeL Children ( ) ;
rank: 686
score: 99.68137613932292
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 686
score: 99.67313058035714
patch: if ( sb . length ( ) < sb . length ( ) ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 686
score: 99.61865234375
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( node . to CaMeL String ( ) ) ) ;
rank: 687
score: 99.69007767078489
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 687
score: 99.68966427364865
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + $STRING$ ) ) ;
rank: 687
score: 99.6731021278783
patch: int end = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 687
score: 99.66687341638513
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ;
rank: 687
score: 99.66505191200658
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . substring ( 0 , $NUMBER$ ) ) ) ;
rank: 687
score: 99.65819470635776
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 687
score: 99.61803829308712
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 688
score: 99.72896560968137
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( ) ;
rank: 688
score: 99.70722471992924
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 688
score: 99.68997713414635
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) . length ( ) - $NUMBER$ ;
rank: 688
score: 99.67302389705883
patch: if ( folded CaMeL Size > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 688
score: 99.6650454872533
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( 0 , sb . length ( ) - 1 ) ) ) ;
rank: 689
score: 99.72887652853261
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 689
score: 99.6899473608994
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . set ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) , folded CaMeL Size ) ;
rank: 689
score: 99.68952985491072
patch: size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 689
score: 99.68070475260417
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 689
score: 99.66646431587837
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , to CaMeL String ( ) ) ) ;
rank: 689
score: 99.66499947212837
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; folded CaMeL Size += $NUMBER$ ;
rank: 689
score: 99.65773577008929
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 690
score: 99.728818359375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; }
rank: 690
score: 99.68993005087209
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 690
score: 99.68067842371323
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 690
score: 99.67290649414062
patch: folded CaMeL Size += sb . length ( ) + 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 690
score: 99.66640896267361
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 690
score: 99.66482791385135
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , 1 ) ) ;
rank: 690
score: 99.65731724330357
patch: folded CaMeL Size += sb . length ( ) + 1 ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 690
score: 99.61784593986742
patch: folded CaMeL Size += $NUMBER$ + 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 691
score: 99.72865513392857
patch: append ( sb . to CaMeL String ( ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 691
score: 99.7069316007653
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem . get CaMeL First CaMeL Child ( ) ) ) ; }
rank: 691
score: 99.6899185180664
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 691
score: 99.68942673141892
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , sb . length ( ) ) ) ;
rank: 691
score: 99.68054877387152
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , folded CaMeL Size ) ) ; }
rank: 691
score: 99.66606140136719
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 691
score: 99.61753627232143
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , $STRING$ ) ) ;
rank: 692
score: 99.728564453125
patch: append ( join CaMeL String ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 692
score: 99.70681104473039
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new Node CaMeL Traversal ( ) ) ;
rank: 692
score: 99.68983218544408
patch: folded CaMeL Size * += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 692
score: 99.68045383029514
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 692
score: 99.67262573242188
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 692
score: 99.66600748697917
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( ) ) ;
rank: 692
score: 99.66473553631756
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ; }
rank: 692
score: 99.65676047585227
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 693
score: 99.72854178292411
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ) ) ; }
rank: 693
score: 99.68964586759868
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; nodes . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 693
score: 99.66584608289931
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; else array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 693
score: 99.66470157398896
patch: folded CaMeL Size += 1 ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 693
score: 99.65669642857142
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Node . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 694
score: 99.7282196969697
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 694
score: 99.70666743259804
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 694
score: 99.66445583767361
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; }
rank: 694
score: 99.61700439453125
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , $NUMBER$ ) ) ;
rank: 695
score: 99.72793579101562
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } }
rank: 695
score: 99.70661727241848
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ; }
rank: 695
score: 99.68951572516026
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 695
score: 99.67998676915323
patch: folded CaMeL Size += sb . length ( ) - 1 ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 695
score: 99.67240084134616
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ; break ;
rank: 695
score: 99.66573998235887
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( ) ) ; }
rank: 695
score: 99.6563720703125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } sb . append ( join CaMeL String ) ;
rank: 695
score: 99.61676580255681
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , node ) ) ;
rank: 696
score: 99.7279296875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( join CaMeL String ) ) ;
rank: 696
score: 99.68941144245427
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 696
score: 99.68900443412163
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add CaMeL All ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 696
score: 99.67987583705357
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . set ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 696
score: 99.67232369087837
patch: if ( sb . length ( ) > ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 696
score: 99.66573079427083
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . get CaMeL String ( ) ) ;
rank: 696
score: 99.65614642518939
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else
rank: 696
score: 99.61658824573864
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 697
score: 99.679833984375
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - 1 ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 697
score: 99.66543918185764
patch: } array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 697
score: 99.66425151209677
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 697
score: 99.65586224724265
patch: folded CaMeL Size += $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 697
score: 99.61643415178571
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , false ) ) ;
rank: 698
score: 99.72786754261364
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ) ;
rank: 698
score: 99.68921524439102
patch: g . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 698
score: 99.68877210115132
patch: else if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 698
score: 99.665283203125
patch: array CaMeL Folded CaMeL Children += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 698
score: 99.65578962053571
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 698
score: 99.61604817708333
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , index ) ) ;
rank: 699
score: 99.72782076322116
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; join CaMeL String = Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 699
score: 99.70636142828526
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( join CaMeL String ) ; }
rank: 699
score: 99.67951117621527
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ) ;
rank: 699
score: 99.67197397592905
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ;
rank: 699
score: 99.66485410748106
patch: if ( ! folded CaMeL Size ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 699
score: 99.66399651604729
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ;
rank: 699
score: 99.65551060267858
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += sb . length ( ) ;
rank: 699
score: 99.61599392361111
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ; }
rank: 700
score: 99.7275140224359
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { t . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 700
score: 99.6889117697011
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ,
rank: 700
score: 99.67947823660714
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . format ( sb . to CaMeL String ( ) ) ) ;
rank: 700
score: 99.67196737753379
patch: folded CaMeL Size += sb . length ( ) % $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 700
score: 99.66397879464286
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( ref ) ) ;
rank: 700
score: 99.6554466985887
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 700
score: 99.61597493489583
patch: start ( 0 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 701
score: 99.7274678548177
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ; }
rank: 701
score: 99.70620787377452
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ; }
rank: 701
score: 99.68890991210938
patch: folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 701
score: 99.67848205566406
patch: folded CaMeL Size += $STRING$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 701
score: 99.67178735977564
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) - 1 ) ) ;
rank: 701
score: 99.6646484375
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . get CaMeL String ( ) ) ) ;
rank: 701
score: 99.66368582589286
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( node ) ) ;
rank: 701
score: 99.65534319196429
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new Node CaMeL Traversal ( elem ) ) ;
rank: 701
score: 99.61579938616072
patch: folded CaMeL Size += sb . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 702
score: 99.72736952039931
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; }
rank: 702
score: 99.70620209316037
patch: String CaMeL Builder sb = new String CaMeL Builder ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 702
score: 99.68881370907738
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 702
score: 99.68831594366776
patch: else { folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 702
score: 99.6784308938419
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 702
score: 99.66455865675404
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $NUMBER$ ) ) ;
rank: 702
score: 99.6552313442888
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node CaMeL Traversal ( ) ) ;
rank: 702
score: 99.61576704545455
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + 1 ) ) ;
rank: 703
score: 99.72718224158653
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 703
score: 99.70600043402777
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 703
score: 99.6887539950284
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; break ;
rank: 703
score: 99.67795632102273
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , right ) ) ;
rank: 703
score: 99.671630859375
patch: if ( sb . length ( ) > $NUMBER$ ) array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 703
score: 99.65475643382354
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 703
score: 99.61553770123106
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( array CaMeL Folded CaMeL Children . to CaMeL String ( ) ) ;
rank: 704
score: 99.7268575032552
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 704
score: 99.70599609375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ; }
rank: 704
score: 99.66431403882575
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; iterator . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 704
score: 99.66310813210227
patch: folded CaMeL Size += $STRING$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 704
score: 99.65467354910714
patch: folded CaMeL Size < Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 704
score: 99.61552877987133
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 705
score: 99.68862516983695
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( n ) ;
rank: 705
score: 99.68760172526042
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( to CaMeL String ( sb ) ) ) ;
rank: 705
score: 99.67158777573529
patch: if ( folded CaMeL Size == 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 705
score: 99.66421213457662
patch: sb . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 705
score: 99.66288798564189
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , n ) ) ;
rank: 705
score: 99.65417850378788
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else {
rank: 706
score: 99.70591976768092
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL String CaMeL Value ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 706
score: 99.67154947916667
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ( ) ) ) ;
rank: 706
score: 99.66398577008928
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String ( sb . length ( ) ) ) ;
rank: 706
score: 99.66286892361111
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; }
rank: 706
score: 99.65408761160714
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 706
score: 99.61521218039773
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . length ( ) ) ) ;
rank: 707
score: 99.70582932692308
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( join CaMeL String ) ;
rank: 707
score: 99.68834092881944
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else {
rank: 707
score: 99.67134232954545
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , sb . to CaMeL String ( ) ) ) ; }
rank: 707
score: 99.66272321428572
patch: folded CaMeL Size = 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 707
score: 99.61514774445564
patch: folded CaMeL Size < 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 708
score: 99.72672213040866
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 708
score: 99.70581993689903
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 708
score: 99.68826729910714
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 708
score: 99.67116827713816
patch: if ( sb . length ( ) > ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 708
score: 99.66251187711148
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ;
rank: 708
score: 99.65357163373162
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { }
rank: 708
score: 99.61477481617646
patch: add ( sb . length ( ) - $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 709
score: 99.7266845703125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } return sb . to CaMeL String ( ) ;
rank: 709
score: 99.67682059151785
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) )
rank: 709
score: 99.6710674579327
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , folded CaMeL Size ) ) ;
rank: 709
score: 99.653466796875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( ( Node CaMeL Traversal ) sb . to CaMeL String ( ) ) ;
rank: 710
score: 99.70566656650641
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( join CaMeL String ) ) ; }
rank: 710
score: 99.687255859375
patch: folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 710
score: 99.67672164351852
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb = new String CaMeL Builder ( ) ;
rank: 710
score: 99.66351143973215
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String Node ( sb . to CaMeL String ( ) ) ) ;
rank: 710
score: 99.6619540127841
patch: folded CaMeL Size += $NUMBER$ ; this . array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 710
score: 99.6533432006836
patch: folded CaMeL Size += sb . length ( ) + 1 ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 710
score: 99.61412464488636
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 , sb . length ( ) ) ) ;
rank: 711
score: 99.72642554306402
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 711
score: 99.68812684755068
patch: folded CaMeL Size += sb . length ( ) ? Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) : Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 711
score: 99.67071368243244
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + 1 ) ) ;
rank: 711
score: 99.66318211410984
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 711
score: 99.65317234848484
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 711
score: 99.61384529903017
patch: index = $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 712
score: 99.72633958899456
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 712
score: 99.66297822840073
patch: folded CaMeL Size += - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 712
score: 99.61368815104167
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 713
score: 99.72633231026786
patch: append ( join CaMeL String ) ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 713
score: 99.70531765919812
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 713
score: 99.68675472861842
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + 1 ) ) ;
rank: 713
score: 99.67622767857142
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 713
score: 99.66290283203125
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb ) ;
rank: 713
score: 99.66176470588235
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( ) ) ;
rank: 713
score: 99.61359001608456
patch: add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , 1 ) ) ;
rank: 714
score: 99.726328125
patch: append ( join CaMeL String ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 714
score: 99.70525045955883
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ; }
rank: 714
score: 99.68798828125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) . length ( ) - 1 ;
rank: 714
score: 99.68658126027961
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( 1 ) ) ) ;
rank: 714
score: 99.67596435546875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( join CaMeL String ) ; }
rank: 714
score: 99.61339569091797
patch: start ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 715
score: 99.68649631076389
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb ) ) ;
rank: 715
score: 99.675732421875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( sb . to CaMeL String ( ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 715
score: 99.66245524088542
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . length ( ) ) ) ; }
rank: 715
score: 99.6516342163086
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 715
score: 99.6130134828629
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , $NUMBER$ ) ) ;
rank: 716
score: 99.72626557221284
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 716
score: 99.70512309827302
patch: buf . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 716
score: 99.68630569045608
patch: if ( sb . length ( ) - 1 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 716
score: 99.66180604876894
patch: folded CaMeL Size += sb . length ( ) ; sb . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 716
score: 99.66111653645834
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node . String ( sb . to CaMeL String ( ) ) ) ;
rank: 716
score: 99.65132780997983
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } elem = elem . get CaMeL First CaMeL Child ( ) ;
rank: 717
score: 99.6871706940407
patch: folded CaMeL Size + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 717
score: 99.68626493566177
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , 0 ) ) ;
rank: 717
score: 99.67565155029297
patch: folded CaMeL Size += sb . length ( ) + 1 ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 717
score: 99.67010663006756
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , $NUMBER$ ) ) ;
rank: 717
score: 99.66174994574652
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ;
rank: 717
score: 99.6512939453125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node CaMeL Traversal ( elem ) ) ;
rank: 717
score: 99.61289760044643
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) + $NUMBER$ ) ;
rank: 718
score: 99.72611942997685
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; }
rank: 718
score: 99.68704659598214
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 718
score: 99.68612331814236
patch: Integer n = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 718
score: 99.67535955255681
patch: folded CaMeL Size += sb . length ( ) ; } if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; }
rank: 718
score: 99.66148792613636
patch: folded CaMeL Size += count ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 718
score: 99.66090223524306
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; }
rank: 718
score: 99.6512451171875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } elem = elem ;
rank: 718
score: 99.61283874511719
patch: if ( sb . length ( ) == 0 ) { sb . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 719
score: 99.72608326099537
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( array CaMeL Node ) ;
rank: 719
score: 99.7048840645032
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } break ;
rank: 719
score: 99.6752570657169
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( ( String ) sb . to CaMeL String ( ) ) ; }
rank: 719
score: 99.6605224609375
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( node ) ) ; }
rank: 719
score: 99.6124755859375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) + 1 ) ;
rank: 720
score: 99.68550749747983
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb ) ) ;
rank: 720
score: 99.66997466216216
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 720
score: 99.66130297111742
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) + $NUMBER$ ;
rank: 720
score: 99.66050889756944
patch: folded CaMeL Size += $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 720
score: 99.65076401654412
patch: folded CaMeL Size >= 0 && sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 720
score: 99.61241239659927
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 721
score: 99.70463748094512
patch: buf . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 721
score: 99.68539341517857
patch: add ( folded CaMeL Size ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 721
score: 99.67501923532197
patch: folded CaMeL Size += sb . length ( ) + 1 ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 721
score: 99.66041564941406
patch: folded CaMeL Size -= $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 721
score: 99.61224575700432
patch: reset ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 722
score: 99.68644409179687
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent . replace CaMeL Child ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 722
score: 99.66086647727273
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ; }
rank: 722
score: 99.66012234157986
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , $NUMBER$ ) ) ;
rank: 722
score: 99.65052897135416
patch: if ( sb . length ( ) > 1 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 722
score: 99.61190795898438
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( ( String ) sb . to CaMeL String ( ) ) ;
rank: 723
score: 99.72570134943182
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 723
score: 99.68637084960938
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 723
score: 99.68522374770221
patch: folded CaMeL Size -= $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 723
score: 99.61187385110294
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size += $NUMBER$ ;
rank: 724
score: 99.72554072627315
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 724
score: 99.68624441964286
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; continue ;
rank: 724
score: 99.66886393229167
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ; }
rank: 724
score: 99.65966078814338
patch: folded CaMeL Size -= $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 724
score: 99.64961242675781
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else
rank: 725
score: 99.7252785011574
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 725
score: 99.70433944310898
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 725
score: 99.66879111842105
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ; }
rank: 725
score: 99.65965317234848
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 725
score: 99.65912455897177
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( $NUMBER$ ) ) ;
rank: 725
score: 99.64959357766544
patch: folded CaMeL Size += sb . length ( ) + 1 ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 725
score: 99.61159446022727
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ + sb . length ( ) ) ) ;
rank: 726
score: 99.72523153981855
patch: append ( sb . to CaMeL String ( ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 726
score: 99.68489155016448
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; break ; }
rank: 726
score: 99.66866904810855
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , ) ) ;
rank: 726
score: 99.65907287597656
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; ) ;
rank: 726
score: 99.61158662683823
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ( Integer ) sb . length ( ) ) ) ;
rank: 727
score: 99.68486192491319
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , 0 ) ) ;
rank: 727
score: 99.65934012276786
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( ) ) ; }
rank: 727
score: 99.65898895263672
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( $STRING$ + sb . to CaMeL String ( ) ) ;
rank: 727
score: 99.64887551700367
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 727
score: 99.61100260416667
patch: add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 728
score: 99.70400943396227
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( Node CaMeL Util . is CaMeL Immutable CaMeL Value ( elem ) ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 728
score: 99.68593878495066
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else {
rank: 728
score: 99.68466025904605
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } return ;
rank: 728
score: 99.67347935267857
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 728
score: 99.66852770353618
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , ( Integer ) sb . to CaMeL String ( ) ) ) ;
rank: 728
score: 99.65890842013889
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 728
score: 99.64876302083333
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( elem ) ) ;
rank: 728
score: 99.61094755284927
patch: add ( folded CaMeL Size ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 729
score: 99.66831186655405
patch: if ( sb . length ( ) >= 0 ) array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 729
score: 99.65886579241071
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . parse ( sb . to CaMeL String ( ) ) ) ;
rank: 729
score: 99.65885656020221
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 729
score: 99.61049952651516
patch: end = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 730
score: 99.7248733108108
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 730
score: 99.70390625
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 730
score: 99.68567657470703
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , ) ) ;
rank: 730
score: 99.6844482421875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . index CaMeL Of ( $STRING$ ) ) ) ;
rank: 730
score: 99.67270192792338
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( join CaMeL String ) ; sb = new String CaMeL Builder ( ) ;
rank: 730
score: 99.66824588260135
patch: folded CaMeL Size = sb . length ( ) + 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 730
score: 99.65868400804925
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add CaMeL All ( sb . to CaMeL String ( ) ) ;
rank: 730
score: 99.65814208984375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String sb . to CaMeL String ( ) ) ;
rank: 730
score: 99.64820123487904
patch: folded CaMeL Size += sb . length ( ) ; if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ;
rank: 730
score: 99.61042554450758
patch: length += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 731
score: 99.68558175223214
patch: folded CaMeL Size += $STRING$ . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 731
score: 99.68440290178572
patch: if ( array CaMeL Folded CaMeL Children != null ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 731
score: 99.67250162760416
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { sb . append ( join CaMeL String ) ;
rank: 731
score: 99.65831409801136
patch: folded CaMeL Size += $NUMBER$ ; / * array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 731
score: 99.65781537224265
patch: if ( sb . length ( ) > 0 ) { sb . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 731
score: 99.61042554450758
patch: value = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 732
score: 99.72465105754573
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } parent = elem ;
rank: 732
score: 99.70386202830188
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 732
score: 99.68436686197917
patch: int folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 732
score: 99.67240027225378
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 732
score: 99.658056640625
patch: folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ; }
rank: 732
score: 99.64805692784927
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( sb . to CaMeL String ( ) ) ) ;
rank: 732
score: 99.61006673177083
patch: push ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 733
score: 99.7245342548077
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 733
score: 99.6851806640625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 733
score: 99.6842041015625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , - 1 ) ) ;
rank: 733
score: 99.66776899857955
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 733
score: 99.65804966517857
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( $NUMBER$ ) ) ;
rank: 733
score: 99.65770786830358
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , folded CaMeL Size ) ) ;
rank: 733
score: 99.64784683719758
patch: if ( sb . length ( ) == 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 734
score: 99.72445475260416
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( join CaMeL String ) ; }
rank: 734
score: 99.68480819310898
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) . length ( ) ;
rank: 734
score: 99.68415601325758
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add CaMeL All ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 734
score: 99.67221248851104
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 734
score: 99.66773139105902
patch: if ( folded CaMeL Size == 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 734
score: 99.64761173023896
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 735
score: 99.68477783203124
patch: folded CaMeL Size = sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 735
score: 99.68371911951013
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + $NUMBER$ ) ) ;
rank: 735
score: 99.67220284598214
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ,
rank: 735
score: 99.65779331752232
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) ) ) ;
rank: 735
score: 99.60928344726562
patch: else folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 736
score: 99.70362647804055
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; sb = new String CaMeL Builder ( ) ; }
rank: 736
score: 99.67217254638672
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb = new String CaMeL Builder ( ) ; } sb . append ( join CaMeL String ) ;
rank: 736
score: 99.66757381663604
patch: if ( folded CaMeL Size ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 736
score: 99.6577507467831
patch: System . out . println ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 736
score: 99.64682469223484
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 736
score: 99.60894416360294
patch: add ( folded CaMeL Size ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 737
score: 99.67193080357143
patch: folded CaMeL Size += sb . length ( ) + $STRING$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 737
score: 99.65764024522569
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( n ) ;
rank: 737
score: 99.65698939732142
patch: if ( sb . length ( ) > $NUMBER$ ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb ) ;
rank: 737
score: 99.64661754261364
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Node . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 737
score: 99.60891822076613
patch: if ( sb . length ( ) > 0 ) sb . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 738
score: 99.65739440917969
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ; }
rank: 738
score: 99.64641779119319
patch: folded CaMeL Size += sb . length ( ) ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 738
score: 99.60890355603448
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( new String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 739
score: 99.72399680397727
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 739
score: 99.7034013856132
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 739
score: 99.682568359375
patch: folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 739
score: 99.65735212053572
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . trim ( ) ) ) ;
rank: 739
score: 99.65641276041667
patch: super . folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 739
score: 99.64626982717803
patch: if ( sb . length ( ) > 0 ) { sb . append ( $STRING$ ) ; } sb . append ( sb . to CaMeL String ( ) ) ;
rank: 739
score: 99.608740234375
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . length ( ) ) ) ;
rank: 740
score: 99.72398337339743
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 740
score: 99.70339731069711
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String ( elem ) ) ;
rank: 740
score: 99.6669921875
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 740
score: 99.65733013731061
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 740
score: 99.6085205078125
patch: add ( array CaMeL Node ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 741
score: 99.682080078125
patch: double CaMeL Value += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 741
score: 99.6711662046371
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 741
score: 99.6572036743164
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 741
score: 99.65627092633929
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( ) ) ) ;
rank: 741
score: 99.64580891927083
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 741
score: 99.60849896599265
patch: if ( sb . length ( ) >= 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 742
score: 99.72349964488636
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 742
score: 99.67089080810547
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { if ( sb . length ( ) > 0 ) {
rank: 742
score: 99.6668368252841
patch: folded CaMeL Size = sb . to CaMeL String ( ) . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 742
score: 99.65710819128788
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( 0 , Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 742
score: 99.65587985131049
patch: end ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 742
score: 99.64572236032197
patch: folded CaMeL Size += array CaMeL Node . get CaMeL Next ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 742
score: 99.6084976196289
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ;
rank: 743
score: 99.72349585556402
patch: folded CaMeL Size += sb . length ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 743
score: 99.68192661830358
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . trim ( ) ) ) ;
rank: 743
score: 99.67011088709677
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( sb . to CaMeL String ( ) ) ;
rank: 743
score: 99.66681586371527
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 743
score: 99.65578206380208
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 743
score: 99.64571707589286
patch: if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ;
rank: 743
score: 99.60834503173828
patch: start ( array CaMeL Node ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 744
score: 99.6837878104968
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ) ) ; }
rank: 744
score: 99.65659586588542
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( $NUMBER$ ) ) ; }
rank: 744
score: 99.64533547794117
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( join CaMeL String ) ; }
rank: 744
score: 99.60823328354779
patch: folded CaMeL Size += sb . length ( ) ; if ( array CaMeL Folded CaMeL Children != null ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 745
score: 99.72341249047255
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 745
score: 99.68178013392857
patch: width += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 745
score: 99.66622721354166
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ;
rank: 745
score: 99.65647379557292
patch: folded CaMeL Size += folded CaMeL Size + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 745
score: 99.65574776785714
patch: array CaMeL Folded CaMeL Children . remove ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 745
score: 99.64501014122597
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } }
rank: 745
score: 99.60733032226562
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( ( Node ) sb . to CaMeL String ( ) ) ;
rank: 746
score: 99.70284329927884
patch: folded CaMeL Size += array CaMeL Node . get CaMeL Next ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 746
score: 99.6691006747159
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb = new String CaMeL Builder ( ) ;
rank: 746
score: 99.66602918836806
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , ) ) ;
rank: 746
score: 99.65640345982143
patch: folded CaMeL Size = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 746
score: 99.65556640625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . evaluate ( sb . to CaMeL String ( ) ) ) ;
rank: 746
score: 99.64462280273438
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 746
score: 99.60732134650735
patch: if ( sb . length ( ) > 1 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 747
score: 99.723203125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb = new String CaMeL Builder ( ) ;
rank: 747
score: 99.68284205386513
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 747
score: 99.68143717447917
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 747
score: 99.66563585069444
patch: if ( folded CaMeL Size > 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 747
score: 99.65629069010417
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 747
score: 99.65548885569854
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 747
score: 99.64455344460227
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . to CaMeL String ( sb ) ) ;
rank: 747
score: 99.60723691998106
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) + 1 ) ) ;
rank: 748
score: 99.72311837332589
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( join CaMeL String ) ) ; }
rank: 748
score: 99.70278848184121
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; sb . append ( join CaMeL String ) ; }
rank: 748
score: 99.65615931919643
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb ) ) ;
rank: 748
score: 99.65536411830357
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( $STRING$ ) ;
rank: 748
score: 99.64430394665948
patch: folded CaMeL Size += sb . length ( ) ; sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 748
score: 99.60654148910984
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , this ) ) ;
rank: 749
score: 99.68277587890626
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent . replace ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) , folded CaMeL Size ) ;
rank: 749
score: 99.68129185267857
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , sb ) ) ;
rank: 749
score: 99.66839784564394
patch: folded CaMeL Size += - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 749
score: 99.65609248991936
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; }
rank: 749
score: 99.64413914535984
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , elem ) ) ;
rank: 749
score: 99.60636138916016
patch: push ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 750
score: 99.64372253417969
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( join CaMeL String ) ) ;
rank: 751
score: 99.72235272381756
patch: append ( join CaMeL String ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 751
score: 99.68251702724359
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 751
score: 99.68050130208333
patch: if ( folded CaMeL Size ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 751
score: 99.66793915719697
patch: folded CaMeL Size += - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 751
score: 99.66500607052365
patch: folded CaMeL Size = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 751
score: 99.65599888392858
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 751
score: 99.65494791666667
patch: folded CaMeL Size < sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 751
score: 99.64281463623047
patch: folded CaMeL Size += 0 ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 752
score: 99.72232858758224
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; continue ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 752
score: 99.68212264623398
patch: folded CaMeL Size = sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 752
score: 99.66791362147177
patch: folded CaMeL Size += true ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 752
score: 99.66482131545608
patch: if ( sb . length ( ) == 0 ) array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 752
score: 99.6554287997159
patch: sb . append ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 752
score: 99.65493594898896
patch: add ( folded CaMeL Size ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 752
score: 99.60500572467673
patch: pop ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 753
score: 99.7222108004386
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 753
score: 99.6820132606908
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else {
rank: 753
score: 99.67969428168402
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . decode ( sb . to CaMeL String ( ) ) ) ;
rank: 753
score: 99.66789694393383
patch: folded CaMeL Size += sb . length ( ) - 1 ; } sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 753
score: 99.66472710503473
patch: if ( sb . length ( ) <= 1 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 753
score: 99.6422452059659
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String ( elem ) ) ;
rank: 753
score: 99.60498046875
patch: index [ 0 ] = $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 754
score: 99.72218605324075
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 754
score: 99.70203125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( sb . to CaMeL String ( ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 754
score: 99.68185837204392
patch: out . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 754
score: 99.66778379498106
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; }
rank: 754
score: 99.65533621651785
patch: sb . append ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 754
score: 99.65474207261029
patch: int length = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 754
score: 99.64206764914773
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; elem = Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ;
rank: 754
score: 99.60474395751953
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( ( Integer ) sb . to CaMeL String ( ) ) ;
rank: 755
score: 99.68159412202381
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { array CaMeL Node . detach CaMeL Children ( ) ;
rank: 755
score: 99.67931780133928
patch: folded CaMeL Size += $NUMBER$ ; } } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 755
score: 99.66769588694854
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 755
score: 99.60467714251894
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , node . get CaMeL Name ( ) ) ) ;
rank: 756
score: 99.72206624348958
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 756
score: 99.67931758996212
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String ( sb ) ) ;
rank: 756
score: 99.66761516702586
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( join CaMeL String ) ; }
rank: 756
score: 99.66426595052083
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ; }
rank: 756
score: 99.65521599264706
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , ) ) ;
rank: 756
score: 99.6418098000919
patch: folded CaMeL Size += 0 ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 756
score: 99.60426379788306
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + 1 ) ) ;
rank: 757
score: 99.72191097861842
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 757
score: 99.68133866159539
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , $STRING$ ) ) ;
rank: 757
score: 99.65519205729167
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb . length ( ) ) ) ; }
rank: 757
score: 99.65387517755681
patch: folded CaMeL Size += length + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 757
score: 99.64104461669922
patch: add CaMeL Node ( sb . to CaMeL String ( ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 757
score: 99.60382276965726
patch: folded CaMeL Size < 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 758
score: 99.72181068978658
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { return ; }
rank: 758
score: 99.68118533572635
patch: folded CaMeL Size += $STRING$ . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 758
score: 99.66749482996323
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; break ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 758
score: 99.65351720010081
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 758
score: 99.64103190104167
patch: if ( sb . length ( ) > 0 ) { return ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 758
score: 99.60362659801136
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) + $NUMBER$ ) ) ;
rank: 759
score: 99.68092105263158
patch: { folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 759
score: 99.6674609375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 759
score: 99.66383155616555
patch: folded CaMeL Size += n . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 759
score: 99.65484793526785
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; }
rank: 759
score: 99.64069234913794
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 759
score: 99.6034268465909
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 760
score: 99.72158974095395
patch: folded CaMeL Size += array CaMeL Node . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 760
score: 99.68088989257812
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ; }
rank: 760
score: 99.67911551339286
patch: double CaMeL Value = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 760
score: 99.65480090725806
patch: length ( ) += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 760
score: 99.65296591481855
patch: start ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 760
score: 99.64049530029297
patch: folded CaMeL Size = 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 760
score: 99.60318429129464
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) ) ;
rank: 761
score: 99.7215546398628
patch: append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 761
score: 99.66704731602823
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 761
score: 99.66376495361328
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Integer ( sb . length ( ) ) ) ;
rank: 761
score: 99.64042524857955
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( join CaMeL String ) ) ;
rank: 761
score: 99.60218811035156
patch: add ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 762
score: 99.6669404000947
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += sb . length ( ) ;
rank: 762
score: 99.65463719223484
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 762
score: 99.65234375
patch: if ( sb . to CaMeL String ( ) . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 762
score: 99.64027060231855
patch: if ( sb . length ( ) > 1 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 762
score: 99.60208892822266
patch: sb . add ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 763
score: 99.72137616131756
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; break ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 763
score: 99.68051292782738
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Node . detach CaMeL Children ( ) ; }
rank: 763
score: 99.67802877987133
patch: this . folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 763
score: 99.66307198660714
patch: if ( sb . size ( ) > 0 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 763
score: 99.65462493896484
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ; }
rank: 763
score: 99.65232895359848
patch: array CaMeL Folded CaMeL Children += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 763
score: 99.60198777721774
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Character . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 764
score: 99.7012188251202
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . to CaMeL String ( elem ) ) ;
rank: 764
score: 99.66671932444854
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 764
score: 99.65451947380515
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( new CaMeL String ) ) ; }
rank: 764
score: 99.65213775634766
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 764
score: 99.60193241003788
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , false ) ) ;
rank: 765
score: 99.701083984375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 765
score: 99.68003061655405
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , ) ) ;
rank: 765
score: 99.67784288194444
patch: if ( n . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 765
score: 99.662890625
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 765
score: 99.65444607204861
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; ;
rank: 765
score: 99.65102251838235
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 765
score: 99.60167194234914
patch: add ( sb . length ( ) - 1 ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 766
score: 99.72114619502315
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 766
score: 99.67780219184027
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( new CaMeL String ) ) ;
rank: 766
score: 99.65440784801136
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL Instance ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 766
score: 99.65077533143939
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) ) ;
rank: 766
score: 99.639453125
patch: folded CaMeL Size += sb . length ( ) + 1 ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 766
score: 99.60146484375
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ( String ) sb . to CaMeL String ( ) ) ) ;
rank: 767
score: 99.721005859375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + $NUMBER$ ;
rank: 767
score: 99.66526442307692
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( sb . to CaMeL String ( ) ) ;
rank: 767
score: 99.65436469184027
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . char CaMeL At ( 0 ) ) ) ;
rank: 767
score: 99.65051987591912
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb [ length ] ) ) ;
rank: 767
score: 99.639404296875
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 767
score: 99.60142415364584
patch: remove ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 768
score: 99.67765066964286
patch: folded CaMeL Size = - 1 ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 768
score: 99.66513241038604
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 768
score: 99.66165068655303
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) + $NUMBER$ ) ) ;
rank: 768
score: 99.65392388237848
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( 0 , sb . length ( ) ) ) ) ;
rank: 768
score: 99.65030643857759
patch: int length = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 768
score: 99.6391830444336
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 768
score: 99.60112473060344
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ + $NUMBER$ ) ) ;
rank: 769
score: 99.67950613839285
patch: end += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 769
score: 99.65024266098484
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 769
score: 99.639140625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( null ) ; }
rank: 770
score: 99.67712032433712
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ;
rank: 770
score: 99.6643798828125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 770
score: 99.653759765625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( folded CaMeL Size ) ) ;
rank: 770
score: 99.60089666193181
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) , 1 ) ) ;
rank: 771
score: 99.72086588541667
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 771
score: 99.70073887087264
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; int folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 771
score: 99.66436176915323
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb = new String CaMeL Builder ( ) ;
rank: 771
score: 99.65000591856061
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } else {
rank: 771
score: 99.63859049479167
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 771
score: 99.60067256804436
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 772
score: 99.72084780092592
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 772
score: 99.70072318412163
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; } sb . append ( join CaMeL String ) ;
rank: 772
score: 99.67693413628473
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 772
score: 99.66399069393383
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( )
rank: 772
score: 99.65343221028645
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 772
score: 99.60008978074596
patch: append ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 773
score: 99.7004716981132
patch: folded CaMeL Size = sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 773
score: 99.66371065027573
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; }
rank: 773
score: 99.65327845982142
patch: if ( sb . length ( ) + $NUMBER$ > 0 ) { sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 773
score: 99.64948064630681
patch: } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 773
score: 99.63799285888672
patch: folded CaMeL Size += sb . to CaMeL String ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 773
score: 99.6000740297379
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( n . to CaMeL String ( ) ) ) ;
rank: 774
score: 99.67690700954861
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ; }
rank: 774
score: 99.59998668323864
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 775
score: 99.72055951286765
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL Cost ( elem ) ; }
rank: 775
score: 99.65920061383929
patch: if ( ! folded CaMeL Size ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 775
score: 99.6525017233456
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , ( Node ) sb . to CaMeL String ( ) ) ) ;
rank: 775
score: 99.63742065429688
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 775
score: 99.59972272600446
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 776
score: 99.67880730879934
patch: { folded CaMeL Size = sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 776
score: 99.65248736213235
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ;
rank: 776
score: 99.64870383522727
patch: int length = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 776
score: 99.59967447916667
patch: start ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 777
score: 99.72042281539352
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) - $NUMBER$ ;
rank: 777
score: 99.70020470252403
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; }
rank: 777
score: 99.67874948601974
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ) ) ;
rank: 777
score: 99.66264073988971
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , right ) ) ;
rank: 777
score: 99.65864955357142
patch: if ( folded CaMeL Size ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 777
score: 99.65245056152344
patch: append ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 777
score: 99.64847564697266
patch: else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 777
score: 99.599365234375
patch: remove ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 778
score: 99.72032335069444
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 778
score: 99.700107421875
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 778
score: 99.6626335592831
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , $STRING$ ) ) ;
rank: 778
score: 99.65239401424633
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( 0 ) ) ) ;
rank: 778
score: 99.6370849609375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 778
score: 99.59924710181451
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new ( sb . to CaMeL String ( ) ) ) ;
rank: 779
score: 99.72017933238637
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 779
score: 99.70007637219551
patch: folded CaMeL Size += sb . length ( ) ; } sb . append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 779
score: 99.67594663558468
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ;
rank: 779
score: 99.66222774621212
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 779
score: 99.65232895359848
patch: / * folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 779
score: 99.64813417376894
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . sb . to CaMeL String ( ) ) ; }
rank: 779
score: 99.6370849609375
patch: folded CaMeL Size += new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 779
score: 99.59872898910984
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; break ;
rank: 780
score: 99.7201515480324
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem ) ) ; }
rank: 780
score: 99.67838541666667
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 780
score: 99.67591441761364
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Char CaMeL Array ( ) ) ) ;
rank: 780
score: 99.66211677320075
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( null ) ; sb = new String CaMeL Builder ( ) ;
rank: 780
score: 99.65848214285714
patch: folded CaMeL Size += n . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 780
score: 99.64776426373106
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , length ) ) ;
rank: 780
score: 99.63679750504032
patch: folded CaMeL Size += sb . to CaMeL String ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 780
score: 99.5985107421875
patch: add CaMeL Node ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 781
score: 99.71992323133681
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; }
rank: 781
score: 99.67836782094595
patch: buffer . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 781
score: 99.67588895909927
patch: folded CaMeL Size = $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 781
score: 99.66208321707589
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( sb . to CaMeL String ( ) ) ; }
rank: 781
score: 99.65224136844758
patch: folded CaMeL Size += $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 781
score: 99.64741368447581
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb ) ) ;
rank: 781
score: 99.63594818115234
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb ) ) ;
rank: 782
score: 99.71979166666667
patch: append ( sb . to CaMeL String ( ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 782
score: 99.67827845982143
patch: folded CaMeL Size += $STRING$ . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 782
score: 99.65222561743951
patch: folded CaMeL Size -- ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 782
score: 99.59763941271552
patch: trim ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 783
score: 99.69985443691037
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 783
score: 99.67812368032095
patch: folded CaMeL Size += $STRING$ . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 783
score: 99.67576688878677
patch: get CaMeL String CaMeL Value ( node ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 783
score: 99.65215879498106
patch: folded CaMeL Size += $NUMBER$ . $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 783
score: 99.63415921118951
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += 0 ;
rank: 783
score: 99.59749629579741
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 , $NUMBER$ ) ) ;
rank: 784
score: 99.71966378348215
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 784
score: 99.6998389991554
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; }
rank: 784
score: 99.65793678977273
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) + 1 ) ) ;
rank: 784
score: 99.6521355124081
patch: folded CaMeL Size += $NUMBER$ * $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 784
score: 99.64693359375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb ) ; }
rank: 784
score: 99.63410949707031
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 784
score: 99.59651692708333
patch: append ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 785
score: 99.67561609604779
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 785
score: 99.6614287405303
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL Value ( elem ) ) ;
rank: 785
score: 99.6468505859375
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 785
score: 99.63341891381049
patch: folded CaMeL Size += new String CaMeL Builder ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 785
score: 99.59637451171875
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ;
rank: 786
score: 99.67536969866072
patch: text += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 786
score: 99.66130118534483
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 786
score: 99.65736897786458
patch: if ( sb . length ( ) ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 786
score: 99.65145089285714
patch: folded CaMeL Size = sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 786
score: 99.64680750229779
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . length ( ) + $NUMBER$ ) ) ;
rank: 786
score: 99.6333716607863
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 786
score: 99.5963134765625
patch: add ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 787
score: 99.7194191261574
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) - $NUMBER$ ;
rank: 787
score: 99.69934430803572
patch: append ( join CaMeL String ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 787
score: 99.67788214432566
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } else {
rank: 787
score: 99.65123793658088
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ;
rank: 787
score: 99.64672037760417
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 787
score: 99.63328334263393
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 787
score: 99.59603987068965
patch: add ( sb . length ( ) + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 788
score: 99.71938032670455
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 788
score: 99.67723289695945
patch: folded CaMeL Size + sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 788
score: 99.67508820564517
patch: folded CaMeL Size *= $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 788
score: 99.65719265407986
patch: while ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 788
score: 99.65120442708333
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ , sb . to CaMeL String ( ) ) ) ;
rank: 788
score: 99.63325026939656
patch: if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; } sb . append ( $STRING$ ) ;
rank: 789
score: 99.7189691005609
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; }
rank: 789
score: 99.69918189858491
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 789
score: 99.65994395380434
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb = new String CaMeL Builder ( ) ;
rank: 789
score: 99.65707310267857
patch: if ( sb . length ( ) > 0 ) array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 789
score: 99.65113044507575
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , $NUMBER$ ) ) ;
rank: 789
score: 99.64622587316177
patch: array CaMeL Folded CaMeL Children += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 789
score: 99.5953369140625
patch: if ( sb . length ( ) > 0 ) array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 790
score: 99.71894702576755
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 790
score: 99.677001953125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { array CaMeL Node . detach CaMeL Children ( ) ;
rank: 790
score: 99.67456794507575
patch: folded CaMeL Size += $NUMBER$ - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 790
score: 99.65981876148896
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb = new String CaMeL Builder ( ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 790
score: 99.594970703125
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 791
score: 99.71893988715277
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 791
score: 99.69907134433963
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( join CaMeL String ) ; }
rank: 791
score: 99.67683490953948
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , elem ) ) ;
rank: 791
score: 99.65978285845588
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( join CaMeL String ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 791
score: 99.63256022135417
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 791
score: 99.59493815104166
patch: start ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 792
score: 99.69862767269737
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 792
score: 99.67675121410473
patch: folded CaMeL Size += sb . length ( ) ? Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) : Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 792
score: 99.67389678955078
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 792
score: 99.65638253348214
patch: if ( folded CaMeL Size == 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 792
score: 99.64505103326613
patch: list . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 793
score: 99.71843610491071
patch: append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 793
score: 99.69841374577703
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 793
score: 99.67659285261824
patch: folded CaMeL Size <= sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 793
score: 99.65029801993535
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ;
rank: 793
score: 99.59438981681035
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 , 0 ) ) ;
rank: 794
score: 99.69840494791667
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( right ) ) ;
rank: 794
score: 99.65605612362133
patch: if ( ! folded CaMeL Size ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 794
score: 99.65029296875
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , null ) ) ;
rank: 794
score: 99.64490559895833
patch: folded CaMeL Size += n . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 794
score: 99.63202494959677
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; }
rank: 794
score: 99.59436456088362
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , length ( ) ) ) ;
rank: 795
score: 99.71819104646382
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else {
rank: 795
score: 99.67632092927632
patch: folded CaMeL Size += sb . length ( ) + SIZE ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 795
score: 99.65933340567129
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( sb . to CaMeL String ( ) ) ; }
rank: 795
score: 99.63174438476562
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += sb . length ( ) ;
rank: 795
score: 99.59424591064453
patch: append ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 796
score: 99.67622227822581
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ;
rank: 796
score: 99.67314453125
patch: folded CaMeL Size = sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 796
score: 99.65839385986328
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( sb . to CaMeL String ( ) ) ; }
rank: 796
score: 99.64990234375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , $NUMBER$ ) ) ; }
rank: 796
score: 99.63167055191532
patch: folded CaMeL Size += sb . length ( ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 796
score: 99.59412977430556
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) ) ;
rank: 797
score: 99.71802368164063
patch: folded CaMeL Size += array CaMeL Node . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 797
score: 99.67576032366071
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 797
score: 99.65834673713235
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( join CaMeL String ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 797
score: 99.65568712022569
patch: add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 797
score: 99.64963600852273
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new . String ( sb . to CaMeL String ( ) ) ) ;
rank: 797
score: 99.59404839409723
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ + sb . length ( ) ) ) ;
rank: 798
score: 99.71793619791667
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; join CaMeL String = Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 798
score: 99.69731841216216
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 798
score: 99.67301940917969
patch: folded CaMeL Size = - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 798
score: 99.65810259650735
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 798
score: 99.6495028409091
patch: folded CaMeL Size = $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 798
score: 99.64448547363281
patch: folded CaMeL Size += count ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 798
score: 99.63118227066532
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; int folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 798
score: 99.59287109375
patch: add ( null ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 799
score: 99.65717930947581
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 799
score: 99.65495469835069
patch: if ( array CaMeL Folded CaMeL Children != null ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 799
score: 99.64422410534274
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ;
rank: 799
score: 99.631103515625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( get CaMeL String CaMeL Value ( elem ) ) ;
rank: 799
score: 99.5928155307112
patch: start += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 800
score: 99.71708984375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 800
score: 99.67546452702703
patch: folded CaMeL Size -= sb . length ( ) + SIZE ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 800
score: 99.67264927455358
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + $STRING$ ) ) ;
rank: 800
score: 99.65681640625
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 800
score: 99.65475725446429
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) - 1 ) ) ;
rank: 800
score: 99.63108776461694
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else
rank: 800
score: 99.59244537353516
patch: add ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 801
score: 99.71701103344299
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 801
score: 99.67257952008929
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) - $NUMBER$ ) ) ;
rank: 801
score: 99.64397996471774
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 801
score: 99.63082122802734
patch: if ( join CaMeL String . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 801
score: 99.59242983217592
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 802
score: 99.71692766462054
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( join CaMeL String ) ) ;
rank: 802
score: 99.67529296875
patch: head += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 802
score: 99.65637600806451
patch: folded CaMeL Size += sb . length ( ) + 1 ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 802
score: 99.65314592633929
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ;
rank: 802
score: 99.64851148200758
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( n ) ) ;
rank: 802
score: 99.64359283447266
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } ;
rank: 802
score: 99.63050579202586
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } elem = elem ;
rank: 802
score: 99.59223464439656
patch: if ( sb . length ( ) == 0 ) { array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 803
score: 99.671826171875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( new CaMeL String ) ) ;
rank: 803
score: 99.65570253314394
patch: folded CaMeL Size += sb . length ( ) - 1 ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 803
score: 99.65313535748106
patch: folded CaMeL Size -- ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 803
score: 99.64848188920455
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 803
score: 99.64348070549242
patch: else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 803
score: 99.63040364583334
patch: if ( sb . length ( ) <= 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 803
score: 99.59209614415323
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) + $NUMBER$ ) ) ;
rank: 804
score: 99.71657104492188
patch: append ( sb . to CaMeL String ( ) ) ; sb = new String CaMeL Builder ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 804
score: 99.67173138786765
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( folded CaMeL Size ) ) ;
rank: 804
score: 99.64840790719697
patch: sb . append ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 804
score: 99.62962183459052
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( ) ) ;
rank: 805
score: 99.71640496504934
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } } }
rank: 805
score: 99.67510986328125
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( sb . to CaMeL String ( ) ) ) ;
rank: 805
score: 99.67112821691177
patch: folded CaMeL Size += 0 ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 805
score: 99.65534210205078
patch: folded CaMeL Size += sb . length ( ) - 1 ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 805
score: 99.64797076056985
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 805
score: 99.64328182444854
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 805
score: 99.62900797526042
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 805
score: 99.59163692079741
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 806
score: 99.71632667824075
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } }
rank: 806
score: 99.6750290329392
patch: folded CaMeL Size += sb . size ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 806
score: 99.65533447265625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 806
score: 99.64780125473484
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 806
score: 99.64314038825758
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } else ;
rank: 806
score: 99.62860870361328
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem ) ) ; }
rank: 806
score: 99.59073893229167
patch: remove ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 807
score: 99.71622721354167
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += 0 ;
rank: 807
score: 99.69637357271634
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } sb . append ( join CaMeL String ) ;
rank: 807
score: 99.67490366342905
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ;
rank: 807
score: 99.67098911830357
patch: size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 807
score: 99.65482584635417
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ;
rank: 807
score: 99.6283943422379
patch: folded CaMeL Size + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 807
score: 99.59071005544355
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( this . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 808
score: 99.67076590401786
patch: this . folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 808
score: 99.64754486083984
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ;
rank: 808
score: 99.62807144657258
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 808
score: 99.59002488659274
patch: add ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 809
score: 99.6963360126202
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } sb . append ( join CaMeL String ) ;
rank: 809
score: 99.65457060842803
patch: folded CaMeL Size += sb . length ( ) + 1 ; if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ;
rank: 809
score: 99.65122767857143
patch: if ( sb . length ( ) < 0 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 809
score: 99.64713287353516
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ;
rank: 809
score: 99.64254113399622
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ) ;
rank: 809
score: 99.62750875538794
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 809
score: 99.58975423177084
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( node ) ;
rank: 810
score: 99.7158836082176
patch: append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 810
score: 99.65445382254464
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } sb = new String CaMeL Builder ( ) ;
rank: 810
score: 99.62748209635417
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( sb ) ) ;
rank: 810
score: 99.58970642089844
patch: add ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 811
score: 99.71564592633929
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ) ) ; }
rank: 811
score: 99.67430320945945
patch: folded CaMeL Size += sb . length ( ) + count ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 811
score: 99.67002544981061
patch: * / array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) . to CaMeL String ( ) ) ) ;
rank: 811
score: 99.6540009469697
patch: folded CaMeL Size += sb . trim ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 811
score: 99.64622587316177
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( ) ) ;
rank: 811
score: 99.58963012695312
patch: append ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 812
score: 99.67428341427365
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , $STRING$ ) ) ;
rank: 812
score: 99.6460189819336
patch: folded CaMeL Size += $NUMBER$ ; ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 812
score: 99.64163970947266
patch: folded CaMeL Size += sb . to CaMeL String ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 812
score: 99.62727864583333
patch: if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 812
score: 99.58958277209052
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 , 1 ) ) ;
rank: 813
score: 99.6691665649414
patch: folded CaMeL Size ++ ; } else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 813
score: 99.65283942945075
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } }
rank: 813
score: 99.6415779359879
patch: clear ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 814
score: 99.71478378563596
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 814
score: 99.67413330078125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) > 0 ) {
rank: 814
score: 99.66896750710227
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , false ) ) ;
rank: 814
score: 99.65279504024622
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( sb . to CaMeL String ( ) ) ; }
rank: 814
score: 99.64535984848484
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ; }
rank: 814
score: 99.64148319128788
patch: this . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 814
score: 99.62705891927084
patch: if ( sb . length ( ) >= 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 814
score: 99.587890625
patch: add ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 815
score: 99.71458565848214
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 815
score: 99.64121430495689
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( ) ) ;
rank: 815
score: 99.62699250252017
patch: folded CaMeL Size += sb . length ( ) + 0 ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 815
score: 99.58784337197581
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( folded CaMeL Size ) ) ;
rank: 816
score: 99.69434950086806
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 816
score: 99.66798400878906
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . ) ) ;
rank: 816
score: 99.65263227982955
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 816
score: 99.644775390625
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; }
rank: 816
score: 99.62683919270833
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 816
score: 99.58777669270833
patch: start ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 817
score: 99.71436434659091
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 817
score: 99.673828125
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) ) ) ;
rank: 817
score: 99.65231323242188
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 817
score: 99.64474487304688
patch: folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ;
rank: 817
score: 99.62568359375
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 817
score: 99.58748626708984
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ) ) ;
rank: 818
score: 99.71431477864583
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 818
score: 99.64472813760081
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb ) ) ;
rank: 818
score: 99.640869140625
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 818
score: 99.6251732610887
patch: else if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 818
score: 99.58674867691532
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) - 1 ) ) ;
rank: 819
score: 99.7142822265625
patch: append ( join CaMeL String ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 819
score: 99.6674095892137
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , 0 ) ) ;
rank: 819
score: 99.6515884399414
patch: folded CaMeL Size += sb . length ( ) - 1 ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 819
score: 99.64817116477273
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , n . to CaMeL String ( ) ) ) ;
rank: 819
score: 99.64457850302419
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( list . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 819
score: 99.64070892333984
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ; ;
rank: 819
score: 99.62510238155242
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Node . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 819
score: 99.58673858642578
patch: if ( sb . length ( ) >= 0 ) { sb . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 820
score: 99.71424696180556
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( join CaMeL String ) ;
rank: 820
score: 99.67340284778226
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ;
rank: 820
score: 99.65146484375
patch: folded CaMeL Size += sb . length ( ) ; } sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 820
score: 99.64455997242646
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ;
rank: 820
score: 99.64056396484375
patch: add ( $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 820
score: 99.62474010836694
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } folded CaMeL Size += $NUMBER$ ;
rank: 821
score: 99.7141746238426
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } } array CaMeL Node . detach CaMeL Children ( ) ;
rank: 821
score: 99.64754231770833
patch: if ( folded CaMeL Size ) array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 821
score: 99.64410400390625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node . get CaMeL String CaMeL Value ( ) ) ;
rank: 821
score: 99.64009232954545
patch: folded CaMeL Size . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 821
score: 99.58623215247844
patch: end += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 822
score: 99.69317461993244
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 822
score: 99.67286475929055
patch: folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 822
score: 99.63912760416666
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . set ( sb . to CaMeL String ( ) ) ;
rank: 822
score: 99.58618977864583
patch: add ( this ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 823
score: 99.71395956503379
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; return ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 823
score: 99.64997100830078
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; if ( folded CaMeL Size > 0 ) { sb . append ( join CaMeL String ) ; }
rank: 823
score: 99.64595910274622
patch: if ( folded CaMeL Size > 0 ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 823
score: 99.6435967807112
patch: += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 823
score: 99.58617401123047
patch: if ( sb . length ( ) > 1 ) { sb . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 824
score: 99.71395760995371
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 824
score: 99.69307564400337
patch: folded CaMeL Size += join CaMeL String . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 824
score: 99.6492691040039
patch: folded CaMeL Size += sb . length ( ) + 1 ; } sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 824
score: 99.6453857421875
patch: if ( folded CaMeL Size != 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 824
score: 99.6435029000947
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( $STRING$ ) ) ;
rank: 824
score: 99.62444871471774
patch: folded CaMeL Size = sb . length ( ) - $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 824
score: 99.58600260416667
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( null ) ;
rank: 825
score: 99.64901241179436
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } else { sb . append ( join CaMeL String ) ; }
rank: 825
score: 99.63818359375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . get CaMeL String ( ) ) ; }
rank: 825
score: 99.62413611778847
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += sb . length ( ) + 1 ;
rank: 825
score: 99.58591941550925
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 826
score: 99.71373155381944
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 826
score: 99.6653068296371
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( new CaMeL String ) ) ;
rank: 826
score: 99.64853200604838
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( right ) ) ;
rank: 826
score: 99.64318477746212
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; return ;
rank: 826
score: 99.63810483870968
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . to CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 826
score: 99.62345668247768
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } elem = array CaMeL Node . get CaMeL First CaMeL Child ( ) ;
rank: 826
score: 99.58546875
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 827
score: 99.64290645204741
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . trim ( ) ) ) ;
rank: 827
score: 99.6228263608871
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else if ( sb . length ( ) > 0 ) {
rank: 827
score: 99.58534975405092
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( ( String ) sb . to CaMeL String ( ) ) ;
rank: 828
score: 99.71354457310268
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 828
score: 99.67048196231617
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 828
score: 99.6458511352539
patch: folded CaMeL Size += sb . size ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 828
score: 99.64285278320312
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 828
score: 99.62233129040948
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( ) ) ;
rank: 828
score: 99.5853271484375
patch: if ( sb . length ( ) == 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 829
score: 99.71352095170455
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 829
score: 99.67037624782986
patch: folded CaMeL Size += sb . length ( ) 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 829
score: 99.66457232306985
patch: to CaMeL String ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 829
score: 99.64253504136029
patch: folded CaMeL Size = 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 829
score: 99.62194403286638
patch: folded CaMeL Size = sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 829
score: 99.58501986799568
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 + $NUMBER$ ) ) ;
rank: 830
score: 99.7132504111842
patch: folded CaMeL Size += elem . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 830
score: 99.69196051520271
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; else folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 830
score: 99.67030843098958
patch: { folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 830
score: 99.64251512096774
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , sb ) ) ;
rank: 830
score: 99.63756142893145
patch: buffer . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 830
score: 99.6216529107863
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; nodes . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 830
score: 99.58499461206897
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) + $NUMBER$ ) ;
rank: 831
score: 99.69106038411458
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 831
score: 99.66429184422348
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . decode ( sb . to CaMeL String ( ) ) ) ;
rank: 831
score: 99.64440497036638
patch: length += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 831
score: 99.64251512096774
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . remove ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 831
score: 99.63694605334052
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; ;
rank: 831
score: 99.58495306199596
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , n . length ( ) ) ) ;
rank: 832
score: 99.71306818181819
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 832
score: 99.66928439670139
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , ) ) ;
rank: 832
score: 99.66419813368056
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ;
rank: 832
score: 99.64409637451172
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( join CaMeL String ) ; } sb . append ( join CaMeL String ) ;
rank: 832
score: 99.63676600302419
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . to CaMeL String ( sb ) ) ;
rank: 832
score: 99.62157141644022
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 832
score: 99.5848900579637
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , $NUMBER$ + sb . length ( ) ) ) ;
rank: 833
score: 99.71299619932432
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; return ;
rank: 833
score: 99.64405059814453
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 833
score: 99.64245999243951
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , false ) ) ;
rank: 833
score: 99.63603210449219
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; ; }
rank: 833
score: 99.62122763356855
patch: String CaMeL Builder sb = new String CaMeL Builder ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 833
score: 99.58449791217673
patch: if += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 834
score: 99.71286536907327
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 834
score: 99.68966238839286
patch: folded CaMeL Size += 0 ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 834
score: 99.6438739483173
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( join CaMeL String ) ; }
rank: 834
score: 99.64225260416667
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( list . to CaMeL String ( ) ) ;
rank: 834
score: 99.63590240478516
patch: sb . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 834
score: 99.62083333333334
patch: folded CaMeL Size += sb . length ( ) ; } sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 834
score: 99.5840087890625
patch: sort ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 835
score: 99.66809451941288
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Node . detach CaMeL Children ( ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 835
score: 99.64379010881696
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 835
score: 99.64187442555146
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 835
score: 99.63590240478516
patch: add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; array CaMeL Folded CaMeL Children . add ( sb ) ;
rank: 835
score: 99.62022298177084
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node CaMeL Traversal ( sb ) ) ;
rank: 835
score: 99.58389176993535
patch: append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( node . to CaMeL String ( ) ) ;
rank: 836
score: 99.71268643465909
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 836
score: 99.64140467489919
patch: += $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 836
score: 99.62006205897177
patch: folded CaMeL Size = sb . length ( ) + 1 ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 836
score: 99.58353969029018
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 837
score: 99.71247100830078
patch: append ( join CaMeL String ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 837
score: 99.68828667534723
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 837
score: 99.66775828394397
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; if ( sb . length ( ) > 0 ) {
rank: 837
score: 99.66295276988636
patch: folded CaMeL Size ++ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 837
score: 99.64347050107759
patch: folded CaMeL Size += sb . length ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 837
score: 99.6409400201613
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , $STRING$ ) ) ;
rank: 837
score: 99.61983366935483
patch: if ( sb . length ( ) <= 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 837
score: 99.5835205078125
patch: count ( 0 ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 838
score: 99.71226099917763
patch: folded CaMeL Size += right . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 838
score: 99.68826633029514
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 838
score: 99.66269818474265
patch: add ( folded CaMeL Size + $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 838
score: 99.64089965820312
patch: += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 838
score: 99.63492313508064
patch: folded CaMeL Size += end ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 838
score: 99.61966507523148
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( join CaMeL String ) ; }
rank: 838
score: 99.58343505859375
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . to CaMeL String ( ) ;
rank: 839
score: 99.71206825657895
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + $NUMBER$ ;
rank: 839
score: 99.68821885850694
patch: append ( join CaMeL String ) ; } sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 839
score: 99.64245999243951
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( name ) ) ;
rank: 839
score: 99.64054361979167
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ;
rank: 839
score: 99.61957839439656
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 839
score: 99.58334147135416
patch: push ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 840
score: 99.71206229073661
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 840
score: 99.64020330255681
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . folded CaMeL Size ( sb . to CaMeL String ( ) ) ) ;
rank: 840
score: 99.63364664713542
patch: if ( sb . length ( ) > $NUMBER$ ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 840
score: 99.61949502268145
patch: folded CaMeL Size += sb . length ( ) + 1 ; sb . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 840
score: 99.58311725484914
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . length ( ) ) ) ;
rank: 841
score: 99.7118018897804
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 841
score: 99.66700613839286
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; parent . replace CaMeL Child ( n , sb . to CaMeL String ( ) ) ;
rank: 841
score: 99.66259765625
patch: folded CaMeL Size += $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 841
score: 99.64174107142857
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ; }
rank: 841
score: 99.64006273674242
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , $STRING$ ) ) ;
rank: 841
score: 99.63988517992425
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) - 1 ) ) ;
rank: 841
score: 99.6335212953629
patch: set CaMeL String ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 841
score: 99.5830810546875
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node . to CaMeL String ( ) ) ;
rank: 842
score: 99.71167732007575
patch: append ( join CaMeL String ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 842
score: 99.66670057508681
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) != 0 ) {
rank: 842
score: 99.64114583333334
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem . get CaMeL String ( ) ) ;
rank: 842
score: 99.63986206054688
patch: folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ;
rank: 842
score: 99.617705078125
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 842
score: 99.58299993699596
patch: clear ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 843
score: 99.71156529017857
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 843
score: 99.68728298611111
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 843
score: 99.66227953361742
patch: this . folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ;
rank: 843
score: 99.6398037997159
patch: folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; ;
rank: 843
score: 99.63959817325367
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . length ( ) + 1 ) ) ;
rank: 843
score: 99.63269436743951
patch: folded CaMeL Size += sb . to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 843
score: 99.582763671875
patch: if ( sb . length ( ) == 0 ) { array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 844
score: 99.71133155153508
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 844
score: 99.68678114149306
patch: folded CaMeL Size = sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 844
score: 99.66669224330357
patch: folded CaMeL Size -= sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 844
score: 99.66213091681985
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , $NUMBER$ ) ) ;
rank: 844
score: 99.6398037997159
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) ) ) ; }
rank: 844
score: 99.63960905997983
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 844
score: 99.6326675415039
patch: String sb . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 844
score: 99.61757475754311
patch: folded CaMeL Size += $NUMBER$ ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 844
score: 99.5824462890625
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ( Integer ) sb . to CaMeL String ( ) ) ) ;
rank: 845
score: 99.66663953993056
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ;
rank: 845
score: 99.66212512600806
patch: synchronized ( this ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 845
score: 99.6395263671875
patch: folded CaMeL Size += $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 845
score: 99.63916015625
patch: int count = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 845
score: 99.63242524245689
patch: index += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 845
score: 99.6173828125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node CaMeL Traversal ( right ) ) ;
rank: 845
score: 99.5815185546875
patch: folded CaMeL Size += sb . length ( ) ; . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 846
score: 99.71094606633773
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } array CaMeL Node . detach CaMeL Children ( ) ;
rank: 846
score: 99.63932011045259
patch: += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 846
score: 99.63832310267857
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ;
rank: 846
score: 99.63193831905242
patch: this . add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 846
score: 99.61704950747283
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += sb . length ( ) ;
rank: 846
score: 99.581103515625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) - $NUMBER$ ) ;
rank: 847
score: 99.71087646484375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 847
score: 99.66606309678819
patch: folded CaMeL Size >> += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 847
score: 99.61685384114584
patch: if ( sb . length ( ) > 0 && sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; }
rank: 847
score: 99.58083670479911
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) + 1 ) ;
rank: 848
score: 99.66586216517857
patch: folded CaMeL Size = sb . length ( ) - 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 848
score: 99.63888346354166
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( 0 , sb . to CaMeL String ( ) ) ;
rank: 848
score: 99.63844209558823
patch: if ( folded CaMeL Size != null ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 848
score: 99.616640625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; String CaMeL Builder sb = new String CaMeL Builder ( ) ;
rank: 849
score: 99.71063565340908
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 849
score: 99.68448893229167
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 849
score: 99.66379743303571
patch: folded CaMeL Size + sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 849
score: 99.66164981617646
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , $STRING$ ) ) ;
rank: 849
score: 99.6385830965909
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . char CaMeL At ( 0 ) ) ) ; }
rank: 849
score: 99.63763786764706
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . to CaMeL String ( ) ) ) ; }
rank: 849
score: 99.63073278356481
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ; }
rank: 849
score: 99.57990133351294
patch: add ( sb . length ( ) - $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 850
score: 99.71044921875
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 850
score: 99.66151165140086
patch: flush ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 850
score: 99.63777669270833
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + 1 ;
rank: 850
score: 99.62932586669922
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb [ ) ) ;
rank: 850
score: 99.57958984375
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( ) ) ;
rank: 851
score: 99.66148466222427
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , 0 ) ) ; }
rank: 851
score: 99.63789506392045
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb ) ) ;
rank: 851
score: 99.63702033547794
patch: folded CaMeL Size += - 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 851
score: 99.63684475806451
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { if ( sb . length ( ) > 0 )
rank: 851
score: 99.62916564941406
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; break ;
rank: 852
score: 99.66267225477431
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 852
score: 99.6611328125
patch: folded CaMeL Size = $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 852
score: 99.63773230350378
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( next ) ) ;
rank: 852
score: 99.62908304148706
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ; }
rank: 852
score: 99.5795189642137
patch: if ( sb . to CaMeL String ( ) . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 853
score: 99.62741615032327
patch: push ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 853
score: 99.57918294270833
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new Integer ( sb . length ( ) ) ) ;
rank: 854
score: 99.70912642045455
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 854
score: 99.66248604910714
patch: len += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 854
score: 99.66103043094758
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , $NUMBER$ ) ) ;
rank: 854
score: 99.63639585433468
patch: folded CaMeL Size += sb . length ( ) - 1 ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 854
score: 99.62720514112904
patch: int folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 854
score: 99.61472981770834
patch: folded CaMeL Size += new String CaMeL Builder ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 854
score: 99.57787298387096
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; }
rank: 855
score: 99.66215245863971
patch: folded CaMeL Size += sb . length ( ) + array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 855
score: 99.66053427419355
patch: folded CaMeL Size -= 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 855
score: 99.63734019886364
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( new CaMeL String ) ) ;
rank: 855
score: 99.62670084635417
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; } }
rank: 855
score: 99.61461588541667
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 855
score: 99.5775390625
patch: if ( sb . length ( ) == 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 856
score: 99.68292410714285
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ; sb = new String CaMeL Builder ( ) ;
rank: 856
score: 99.66040826612904
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( ) ) ;
rank: 856
score: 99.63700358072917
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( n . to CaMeL String ( ) ) ;
rank: 856
score: 99.63537991431451
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 856
score: 99.63480261600378
patch: folded CaMeL Size += length ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 856
score: 99.62662479795259
patch: if ( sb . length ( ) > 1 ) { array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 856
score: 99.6142999057112
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 856
score: 99.57701373922414
patch: add += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 857
score: 99.66198309536638
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( sb . length ( ) == 0 ) {
rank: 857
score: 99.6602271295363
patch: double CaMeL Value ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 857
score: 99.6368920110887
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . trim ( ) ) ) ;
rank: 857
score: 99.63537203881049
patch: folded CaMeL Size += $NUMBER$ ; } else { if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; }
rank: 857
score: 99.62605531754032
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 857
score: 99.61409785829741
patch: if ( sb . length ( ) > 0 ) { sb . append ( $STRING$ ) ; } sb . append ( join CaMeL String ) ;
rank: 857
score: 99.57607085129311
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 , $STRING$ ) ) ;
rank: 858
score: 99.68194056919643
patch: folded CaMeL Size += array CaMeL Node . get CaMeL First CaMeL Child ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 858
score: 99.62585842993951
patch: folded CaMeL Size += $STRING$ ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 858
score: 99.61372593470982
patch: folded CaMeL Size += $NUMBER$ ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 858
score: 99.57586880387932
patch: value = 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 859
score: 99.70783827039931
patch: append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ; }
rank: 859
score: 99.66111886160714
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 859
score: 99.65979373816288
patch: folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 859
score: 99.63453776041666
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - 1 ;
rank: 859
score: 99.62531990840517
patch: value += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 859
score: 99.61337716238839
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } elem = elem . get CaMeL Next ( ) ;
rank: 859
score: 99.57578125
patch: append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 860
score: 99.70777698863637
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + $NUMBER$ ;
rank: 860
score: 99.68161190257354
patch: append ( sb . to CaMeL String ( ) ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 860
score: 99.65934984611742
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , sb . to CaMeL String ( ) ) ) ;
rank: 860
score: 99.63563193044355
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , true ) ) ;
rank: 860
score: 99.63417154947916
patch: while ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 860
score: 99.63316689768145
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( value ) ) ;
rank: 860
score: 99.57563308189656
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ + sb . to CaMeL String ( ) ) ) ;
rank: 861
score: 99.66077008928572
patch: Buffer sb = new String CaMeL Builder ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 861
score: 99.63331705729166
patch: folded CaMeL Size += sb . length ( ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 861
score: 99.62430695564517
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . get CaMeL String ( ) ) ) ;
rank: 861
score: 99.57557508680556
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , n . to CaMeL String ( ) ) ) ;
rank: 862
score: 99.68103397253788
patch: append ( join CaMeL String ) ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 862
score: 99.66075613839286
patch: folded CaMeL Size ++ ; if ( sb . length ( ) > 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 862
score: 99.65867660984848
patch: folded CaMeL Size = $NUMBER$ + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 862
score: 99.6352118130388
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 862
score: 99.63329264322917
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( sb . to CaMeL String ( ) ) ; }
rank: 862
score: 99.62406281502017
patch: else folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 862
score: 99.61194661458333
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 862
score: 99.57540690104166
patch: folded CaMeL Size ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 863
score: 99.70704900568182
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 863
score: 99.66066545758929
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 863
score: 99.63499168113425
patch: folded CaMeL Size += sb . length ( ) ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 863
score: 99.632666015625
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( join CaMeL String ) ; } sb = new String CaMeL Builder ( ) ;
rank: 863
score: 99.61051432291667
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node CaMeL Traversal ( t ) ) ;
rank: 863
score: 99.57509765625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) - 1 ) ;
rank: 864
score: 99.70671929253473
patch: append ( folded CaMeL Size ) ; sb = new String CaMeL Builder ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 864
score: 99.6604865579044
patch: folded CaMeL Size = sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 864
score: 99.65724231350806
patch: folded CaMeL Size += n ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 864
score: 99.63479712701613
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , 0 ) ) ;
rank: 864
score: 99.63219105113636
patch: if ( ! null ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 864
score: 99.6318359375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 865
score: 99.70622209821428
patch: append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 865
score: 99.65697502367425
patch: folded CaMeL Size -= sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 865
score: 99.63433837890625
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add CaMeL All ( sb . to CaMeL String ( ) ) ;
rank: 865
score: 99.63207220262096
patch: if ( ! null ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 865
score: 99.60998987268519
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new CaMeL String ) ; }
rank: 865
score: 99.57433661099138
patch: char = 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 866
score: 99.70613458806818
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 866
score: 99.65947265625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( array CaMeL Node . get CaMeL Type ( ) != Token . STRING ) {
rank: 866
score: 99.63402478448276
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new . String ( sb . to CaMeL String ( ) ) ) ;
rank: 866
score: 99.63006998697917
patch: folded CaMeL Size += sb . trim ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 866
score: 99.62152690272177
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( ) ) ; }
rank: 866
score: 99.6099365234375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( nodes . to CaMeL String ( ) ) ;
rank: 866
score: 99.57387358566811
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) ) ; }
rank: 867
score: 99.65869858685662
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 867
score: 99.63397216796875
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb ) ) ; }
rank: 867
score: 99.62905485733695
patch: folded CaMeL Size += sb . length ( ) + 1 ; } sb . append ( join CaMeL String ) ;
rank: 867
score: 99.62149251302084
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . remove ( sb . to CaMeL String ( ) ) ;
rank: 867
score: 99.6098388671875
patch: if ( sb . length ( ) != 0 ) { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 867
score: 99.57386610243056
patch: start ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 868
score: 99.65852399553572
patch: folded CaMeL Size >= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 868
score: 99.63389931955645
patch: length += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 868
score: 99.62858634159483
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 868
score: 99.62142740885416
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; ;
rank: 868
score: 99.60950520833333
patch: if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; } sb . append ( $STRING$ ) ; }
rank: 869
score: 99.70487467447917
patch: append ( join CaMeL String ) ; sb . append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 869
score: 99.65837860107422
patch: folded CaMeL Size . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 869
score: 99.65677527225378
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , true ) ) ;
rank: 869
score: 99.63016183035714
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 869
score: 99.62846848060344
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ;
rank: 869
score: 99.621337890625
patch: if ( array CaMeL Folded CaMeL Children . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 869
score: 99.60863444010417
patch: folded CaMeL Size += sb . length ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 869
score: 99.57352000269397
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 , true ) ) ;
rank: 870
score: 99.70474582248264
patch: append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 870
score: 99.65802360983456
patch: buffer = new String CaMeL Builder ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 870
score: 99.65642015861742
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL Lower CaMeL Case ( ) ) ) ;
rank: 870
score: 99.63279724121094
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add CaMeL All ( sb . to CaMeL String ( ) ) ;
rank: 870
score: 99.61996755292338
patch: } folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 870
score: 99.6085546875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += sb . length ( ) + 1 ;
rank: 870
score: 99.57325846354166
patch: add ( sb . to CaMeL String ( ) ) ; else array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 871
score: 99.65721028645834
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 871
score: 99.65632629394531
patch: folded CaMeL Size += $STRING$ ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 871
score: 99.63251323084677
patch: to CaMeL String ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 871
score: 99.6185791015625
patch: int length += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 871
score: 99.6083740234375
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; String CaMeL Builder sb = new String CaMeL Builder ( ) ;
rank: 871
score: 99.57271773726852
patch: folded CaMeL Size += $NUMBER$ ; sb . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 872
score: 99.70392717633929
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 872
score: 99.67686941964286
patch: append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ;
rank: 872
score: 99.65628937752017
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , $STRING$ ) ) ;
rank: 872
score: 99.63240051269531
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; }
rank: 872
score: 99.62823683215726
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 872
score: 99.62762858072917
patch: folded CaMeL Size += sb . length ( ) ; } sb . append ( join CaMeL String ) ; sb = new String CaMeL Builder ( ) ;
rank: 872
score: 99.60822265625
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 872
score: 99.5725518588362
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ - $NUMBER$ ) ) ;
rank: 873
score: 99.6767219094669
patch: append ( join CaMeL String ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 873
score: 99.65622040719697
patch: folded CaMeL Size += children . length ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 873
score: 99.6317650579637
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $STRING$ ) ) ;
rank: 873
score: 99.62699381510417
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 873
score: 99.60796712239583
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 873
score: 99.5723077182112
patch: value = $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 874
score: 99.65680290670956
patch: if ( sb . length ( ) == 0 ) { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 874
score: 99.656005859375
patch: folded CaMeL Size ++ ; } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 874
score: 99.6260009765625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { sb = new String CaMeL Builder ( ) ;
rank: 874
score: 99.61602376302083
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 874
score: 99.60791829427083
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } } elem = elem . get CaMeL Next ( ) ;
rank: 874
score: 99.57210286458333
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 875
score: 99.70377894810268
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( join CaMeL String ) ) ; }
rank: 875
score: 99.6316626764113
patch: += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 875
score: 99.61548665364583
patch: folded CaMeL Size += sb . length ( ) + $STRING$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 875
score: 99.60735452586206
patch: if ( sb . length ( ) > 0 && sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ;
rank: 875
score: 99.57148269127156
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) + 1 ) ;
rank: 876
score: 99.65624281939338
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 876
score: 99.57144278067129
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 + sb . length ( ) ) ) ;
rank: 877
score: 99.6560946377841
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( elem ) ) ;
rank: 877
score: 99.6546142578125
patch: * / } else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 877
score: 99.63031684027777
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { folded CaMeL Size += sb . length ( ) ; }
rank: 877
score: 99.62529296875
patch: folded CaMeL Size = sb . length ( ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 877
score: 99.60636683872768
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( sb . length ( ) > 0 )
rank: 878
score: 99.65395035282258
patch: double CaMeL Value += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 878
score: 99.63015512319711
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { folded CaMeL Size += sb . length ( ) ;
rank: 878
score: 99.61393790409483
patch: iterator += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 878
score: 99.57032091864224
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; } else { folded CaMeL Size += $NUMBER$ ; }
rank: 879
score: 99.65578962053571
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 879
score: 99.65391216856061
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) + $STRING$ ) ) ;
rank: 879
score: 99.62443033854167
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 879
score: 99.61376139322917
patch: folded CaMeL Size -- ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 879
score: 99.60439958243535
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { sb . append ( join CaMeL String ) ;
rank: 879
score: 99.57005152209052
patch: position += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 880
score: 99.70255279541016
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 880
score: 99.65576911695075
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( array CaMeL Folded CaMeL Children . size ( ) == 0 ) {
rank: 880
score: 99.6538973721591
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { folded CaMeL Size += Node . new CaMeL String ( sb . length ( ) ) ;
rank: 880
score: 99.5688055630388
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true , 1 ) ) ;
rank: 881
score: 99.6538973721591
patch: folded CaMeL Size += $NUMBER$ ; else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 881
score: 99.65238074100378
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( new CaMeL String ) ) ;
rank: 881
score: 99.6283470892137
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( ) ) ; }
rank: 881
score: 99.62358093261719
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( ) ) ;
rank: 881
score: 99.622216796875
patch: folded CaMeL Size += sb . length ( ) ; sb = new String CaMeL Builder ( ) ; } sb = new String CaMeL Builder ( ) ;
rank: 881
score: 99.6125067349138
patch: count += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 881
score: 99.60337477463942
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += sb . length ( ) - $NUMBER$ ;
rank: 881
score: 99.5684326171875
patch: add ( sb . to CaMeL String ( ) ) ; if ( sb . length ( ) > 0 ) { folded CaMeL Size += $NUMBER$ ; }
rank: 882
score: 99.70233154296875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 882
score: 99.65376921622983
patch: folded CaMeL Size += sb ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 882
score: 99.65192009420956
patch: folded CaMeL Size += sb . length ( ) + array CaMeL Folded CaMeL Children . size ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 882
score: 99.62829983618951
patch: sb . append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 882
score: 99.623046875
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , sb . length ( ) + $NUMBER$ ) ) ;
rank: 882
score: 99.622021484375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 882
score: 99.61136067708334
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( ) ) ; }
rank: 882
score: 99.60320413523706
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( ) ) ;
rank: 883
score: 99.702294921875
patch: folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ;
rank: 883
score: 99.65372721354167
patch: * / array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 883
score: 99.65146956905242
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 883
score: 99.62764485677083
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ; }
rank: 883
score: 99.62187957763672
patch: if ( ! folded CaMeL Size ) array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 883
score: 99.62141927083333
patch: folded CaMeL Size += sb . length ( ) + 1 ; } sb . append ( sb . to CaMeL String ( ) ) ;
rank: 883
score: 99.56732421875
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . to CaMeL String ( ) ; }
rank: 884
score: 99.65340449892241
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( sb . to CaMeL String ( ) ) ;
rank: 884
score: 99.64740175189394
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 884
score: 99.62762920673077
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 884
score: 99.62181091308594
patch: if ( ! null ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 884
score: 99.620087890625
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 884
score: 99.61004849137932
patch: int index = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 884
score: 99.60257273706897
patch: folded CaMeL Size += sb . length ( ) ; } folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 884
score: 99.56711341594827
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 , false ) ) ;
rank: 885
score: 99.64669152462122
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( new CaMeL String ) ) ;
rank: 885
score: 99.60988071986607
patch: index = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 885
score: 99.60183481069711
patch: if ( sb . length ( ) > 0 ) { sb . append ( sb . to CaMeL String ( ) ) ; }
rank: 885
score: 99.56663355334052
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ - 1 ) ) ;
rank: 886
score: 99.697509765625
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; folded CaMeL Size += Node CaMeL Util . get CaMeL Cost ( elem ) ;
rank: 886
score: 99.67160931755515
patch: folded CaMeL Size = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 886
score: 99.64645478219697
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , elem ) ) ;
rank: 886
score: 99.62751717403017
patch: folded CaMeL Size += sb . length ( ) + 1 ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 886
score: 99.60980435075432
patch: if ( sb . length ( ) > $NUMBER$ ) { array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 886
score: 99.60177176339286
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 886
score: 99.5663429542824
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( ( Integer ) sb . to CaMeL String ( ) ) ;
rank: 887
score: 99.69713309151786
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 887
score: 99.64627961189517
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent . replace CaMeL Child ( n , folded CaMeL Size ) ;
rank: 887
score: 99.62035345262096
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( id ) ) ;
rank: 887
score: 99.60960036057692
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 887
score: 99.60075431034483
patch: folded CaMeL Size += 0 ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 888
score: 99.69699096679688
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 888
score: 99.6515877016129
patch: folded CaMeL Size -- ; } array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 888
score: 99.62704763104838
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , null ) ) ;
rank: 888
score: 99.61708647629311
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; } sb . append ( join CaMeL String ) ; }
rank: 888
score: 99.60938313802083
patch: if ( sb . to CaMeL String ( ) . length ( ) > 1 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 888
score: 99.56566540948276
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 889
score: 99.69676208496094
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } break ;
rank: 889
score: 99.65106791834677
patch: if ( sb . length ( ) > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ; }
rank: 889
score: 99.64545754825367
patch: retval = new String CaMeL Builder ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 889
score: 99.616923828125
patch: folded CaMeL Size += sb . length ( ) ; } sb . append ( sb . to CaMeL String ( ) ) ;
rank: 889
score: 99.60007887620192
patch: folded CaMeL Size += sb . length ( ) + 1 ; } folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 889
score: 99.5655517578125
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) - 1 ) ;
rank: 890
score: 99.69620768229167
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb . append ( join CaMeL String ) ; }
rank: 890
score: 99.65060950969827
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( array CaMeL Folded CaMeL Children ) ;
rank: 890
score: 99.64525627367425
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent . replace ( n , sb . to CaMeL String ( ) ) ;
rank: 890
score: 99.62647271925404
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ;
rank: 890
score: 99.61828192349138
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ; }
rank: 890
score: 99.61616042564656
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 890
score: 99.60895182291667
patch: folded CaMeL Size = sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 890
score: 99.5652276400862
patch: position = 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 891
score: 99.6955795288086
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 891
score: 99.64512724034927
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) ) ) ;
rank: 891
score: 99.61798095703125
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ;
rank: 891
score: 99.60887044270834
patch: if ( sb . to CaMeL String ( ) . length ( ) > $NUMBER$ ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 892
score: 99.65048014322916
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( children . to CaMeL String ( ) ) ;
rank: 892
score: 99.61507442079741
patch: size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 892
score: 99.60881936961206
patch: count = $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 892
score: 99.59918844288794
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Node = array CaMeL Node . get CaMeL First CaMeL Child ( ) ;
rank: 892
score: 99.56456163194444
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( ( Node ) sb . to CaMeL String ( ) ) ;
rank: 893
score: 99.69485294117646
patch: folded CaMeL Size += array CaMeL Node . length ( ) + $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 893
score: 99.64471620501894
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 893
score: 99.61726379394531
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ; }
rank: 893
score: 99.61476293103448
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ) ;
rank: 893
score: 99.60785964439656
patch: pos += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 893
score: 99.59652596932871
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else {
rank: 893
score: 99.5644952182112
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true , $NUMBER$ ) ) ;
rank: 894
score: 99.64903603830645
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 894
score: 99.64410041360294
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . clear ( ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 894
score: 99.62567729334677
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , sb . length ( ) - 1 ) ) ;
rank: 894
score: 99.61452720905173
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( join CaMeL String ) ; sb = new String CaMeL Builder ( ) ;
rank: 894
score: 99.56351143973214
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ( int ) sb . length ( ) ) ) ;
rank: 895
score: 99.64407256155303
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . clear ( ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 895
score: 99.61376953125
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 895
score: 99.605380859375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( $STRING$ ) ; }
rank: 895
score: 99.59644426618304
patch: folded CaMeL Size += 0 ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 895
score: 99.563427734375
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 896
score: 99.69199505974265
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb = new String CaMeL Builder ( ) ; } folded CaMeL Size += 0 ;
rank: 896
score: 99.64389500473484
patch: Buffer sb = new String CaMeL Builder ( ) ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 896
score: 99.6137274380388
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( array CaMeL Folded CaMeL Children ) ; }
rank: 896
score: 99.59642682756696
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 896
score: 99.56332502693965
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true , true ) ) ;
rank: 897
score: 99.64361769153226
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ;
rank: 897
score: 99.6251808449074
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 897
score: 99.61543782552083
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ;
rank: 897
score: 99.61365198206019
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; } sb . append ( join CaMeL String ) ;
rank: 897
score: 99.59611563846983
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 897
score: 99.563212890625
patch: if ( sb . length ( ) >= 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 898
score: 99.68951056985294
patch: append ( Node CaMeL Util . to CaMeL String ( elem ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 898
score: 99.66615205652573
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( Node CaMeL Util . get CaMeL String ( elem ) ) ;
rank: 898
score: 99.64611422631049
patch: synchronized ( sb ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 898
score: 99.62462985131049
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb , $NUMBER$ ) ) ;
rank: 898
score: 99.61161295572917
patch: folded CaMeL Size += sb . length ( ) ; } folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 898
score: 99.59793090820312
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 898
score: 99.59599777747844
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 898
score: 99.5631691261574
patch: push ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 899
score: 99.68733978271484
patch: append ( sb . to CaMeL String ( ) ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 899
score: 99.66477272727273
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 899
score: 99.6459724672379
patch: folded CaMeL Size / * / array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 899
score: 99.62378717237904
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . $NUMBER$ ( sb . to CaMeL String ( ) ) ) ;
rank: 899
score: 99.61436806955645
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) , sb . length ( ) + 1 ) ) ;
rank: 899
score: 99.59730113636364
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) ;
rank: 899
score: 99.59579573006465
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } parent = elem ;
rank: 899
score: 99.56268310546875
patch: add ( sb ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 900
score: 99.6457748413086
patch: int folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 900
score: 99.64131804435483
patch: folded CaMeL Size += sb . length ( ) ; nodes . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 900
score: 99.62319510323661
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; System . out . println ( sb . to CaMeL String ( ) ) ;
rank: 900
score: 99.6098046875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( join CaMeL String ) ;
rank: 900
score: 99.59683964170259
patch: folded CaMeL Size += sb . length ( ) ; else array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 900
score: 99.56258418642241
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 - $NUMBER$ ) ) ;
rank: 901
score: 99.6839958639706
patch: append ( $STRING$ ) ; sb . append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 901
score: 99.64106889204545
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( array CaMeL Folded CaMeL Children . size ( ) > 0 ) {
rank: 901
score: 99.62269247731855
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( list . to CaMeL String ( ) ) ; }
rank: 901
score: 99.61190303679436
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ; }
rank: 901
score: 99.59646606445312
patch: if ( array CaMeL Folded CaMeL Children != null ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 901
score: 99.59353298611111
patch: folded CaMeL Size += $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 901
score: 99.56252525592673
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 , $NUMBER$ ) ) ;
rank: 902
score: 99.6226318359375
patch: array CaMeL Folded CaMeL Children += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children += sb . length ( ) + $NUMBER$ ; }
rank: 902
score: 99.61178490423387
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( new String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 902
score: 99.60905852141204
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ; sb = new String CaMeL Builder ( ) ;
rank: 902
score: 99.59602864583333
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size = sb . length ( ) + $NUMBER$ ;
rank: 902
score: 99.59293038504464
patch: out . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 903
score: 99.68178858901516
patch: folded CaMeL Size += array CaMeL Node . length ( ) + $NUMBER$ ; } folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 903
score: 99.60685221354167
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; sb . append ( join CaMeL String ) ; }
rank: 903
score: 99.59257289341518
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Node . detach CaMeL Children ( n , folded CaMeL Size ) ;
rank: 903
score: 99.55930494225544
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) ; }
rank: 904
score: 99.66236091382575
patch: folded CaMeL Size += $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 904
score: 99.64546966552734
patch: folded CaMeL Size += $NUMBER$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 904
score: 99.64036402209052
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 904
score: 99.59130859375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else
rank: 904
score: 99.55848911830357
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , ( String ) sb . length ( ) ) ) ;
rank: 905
score: 99.64539337158203
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb [ 0 ] ) ) ;
rank: 905
score: 99.62152690272177
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( n . to CaMeL String ( ) ) ; }
rank: 905
score: 99.610791015625
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 905
score: 99.60493525752315
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ;
rank: 905
score: 99.59093786168981
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 905
score: 99.55780498798077
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . length ( ) ) ) ;
rank: 906
score: 99.67903406479779
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { parent . replace CaMeL Child ( n , folded CaMeL Size ) ; }
rank: 906
score: 99.63922526041667
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 906
score: 99.62138514364919
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( 0 , sb . to CaMeL String ( ) ) ; }
rank: 906
score: 99.6048583984375
patch: folded CaMeL Size += $NUMBER$ ; if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; }
rank: 906
score: 99.55625180844908
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 ) ) ;
rank: 907
score: 99.67881451231061
patch: append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 907
score: 99.63867927320075
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL Cost ( elem ) ) ;
rank: 907
score: 99.60874720982143
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + sb . length ( ) ;
rank: 907
score: 99.60379464285714
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ; }
rank: 908
score: 99.64517211914062
patch: folded CaMeL Size += 1 ; else array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 908
score: 99.62061451099537
patch: folded CaMeL Size += $NUMBER$ ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 908
score: 99.60840657552083
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) + $NUMBER$ ) ;
rank: 908
score: 99.60282679966518
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb = Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ;
rank: 908
score: 99.58751989293981
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 908
score: 99.5562109375
patch: if ( sb . length ( ) != 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 909
score: 99.67750707165948
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 909
score: 99.64425343480603
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 909
score: 99.62058919270834
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; }
rank: 909
score: 99.58716759314903
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 909
score: 99.58207194010417
patch: if ( sb . length ( ) >= 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 909
score: 99.55607386997768
patch: add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 910
score: 99.63739198626894
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 910
score: 99.61880696614584
patch: folded CaMeL Size += $NUMBER$ ; } else { sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 910
score: 99.60132945667614
patch: folded CaMeL Size += sb . length ( ) + 1 ; sb = new String CaMeL Builder ( ) ;
rank: 910
score: 99.5863506610577
patch: folded CaMeL Size += sb . length ( ) ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 910
score: 99.58123309795673
patch: if ( sb . length ( ) - $NUMBER$ > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 910
score: 99.55479600694444
patch: remove ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 911
score: 99.6732765480324
patch: append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 911
score: 99.65949041193181
patch: append ( join CaMeL String ) ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 911
score: 99.63640802556819
patch: n = sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 911
score: 99.60489908854167
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; break ; }
rank: 911
score: 99.60035988136575
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb . append ( join CaMeL String ) ;
rank: 911
score: 99.58612738715277
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; } break ;
rank: 911
score: 99.57997483473558
patch: if ( sb . length ( ) - 1 > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 911
score: 99.55318648726852
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , true ) ) ;
rank: 912
score: 99.67262425915948
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; } break ;
rank: 912
score: 99.582548828125
patch: if ( sb . length ( ) > 0 ) { sb . append ( sb . to CaMeL String ( ) ) ;
rank: 912
score: 99.57883707682292
patch: if ( sb . length ( ) >= 1 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 912
score: 99.55125209263393
patch: add ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) ) ; }
rank: 913
score: 99.65866181344697
patch: folded CaMeL Size ++ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 913
score: 99.6417236328125
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ; }
rank: 913
score: 99.63438415527344
patch: if ( $NUMBER$ > 0 ) { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 913
score: 99.60428873697917
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) + $NUMBER$ ) ;
rank: 913
score: 99.5825390625
patch: folded CaMeL Size += sb . length ( ) + 1 ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 913
score: 99.57855694110577
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb ) ; } }
rank: 913
score: 99.55069986979167
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 , sb . length ( ) ) ) ;
rank: 914
score: 99.67179081357759
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 914
score: 99.6582919034091
patch: folded CaMeL Size += 0 ; } else { array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 914
score: 99.60319301060268
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 914
score: 99.59878141983695
patch: folded CaMeL Size += sb . length ( ) - 1 ; } sb . append ( join CaMeL String ) ;
rank: 914
score: 99.58250144675925
patch: folded CaMeL Size += - $NUMBER$ ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 914
score: 99.57693246694711
patch: if ( sb . to CaMeL String ( ) != 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 914
score: 99.54942975725446
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) - $NUMBER$ ) ;
rank: 915
score: 99.65775183475378
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; parent = array CaMeL Node . get CaMeL First CaMeL Child ( ) ; }
rank: 915
score: 99.63338470458984
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , ) ) ;
rank: 915
score: 99.582373046875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } if ( sb . length ( ) > 0 ) {
rank: 915
score: 99.5743995949074
patch: folded CaMeL Size -- ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 916
score: 99.67120361328125
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 916
score: 99.61671549479166
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( 0 ) ) ) ;
rank: 916
score: 99.6006591796875
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + 1 ;
rank: 916
score: 99.5979534646739
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } sb . append ( join CaMeL String ) ;
rank: 916
score: 99.58179615162037
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( ) ) ;
rank: 916
score: 99.57225658275463
patch: add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . length ( ) ) ) ;
rank: 916
score: 99.54720052083333
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) ) ; }
rank: 917
score: 99.67015697337963
patch: append ( folded CaMeL Size ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 917
score: 99.63995768229167
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( next . to CaMeL String ( ) ) ;
rank: 917
score: 99.616162109375
patch: sb . append ( sb . to CaMeL String ( ) ) ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 917
score: 99.59764563519022
patch: folded CaMeL Size += sb . length ( ) + 1 ; sb . append ( join CaMeL String ) ; }
rank: 917
score: 99.58125361689815
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } parent . replace CaMeL Child ( n , folded CaMeL Size ) ;
rank: 917
score: 99.57201131184895
patch: if ( sb . length ( ) == 1 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 918
score: 99.6687720514113
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 918
score: 99.63137817382812
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , ) ) ;
rank: 918
score: 99.61555085358796
patch: if ( sb . length ( ) + $NUMBER$ > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 918
score: 99.59964425223214
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ;
rank: 918
score: 99.59664212740384
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ; sb = new String CaMeL Builder ( ) ;
rank: 918
score: 99.58119553786058
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 918
score: 99.5715234375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb ) ; ;
rank: 918
score: 99.5451027199074
patch: add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) + $NUMBER$ ) ;
rank: 919
score: 99.6684814453125
patch: append ( join CaMeL String ) ; } if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; }
rank: 919
score: 99.6312026977539
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; } else { if ( sb . length ( ) == 0 ) {
rank: 919
score: 99.56844388521634
patch: if ( sb . to CaMeL String ( ) == 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 919
score: 99.54508463541667
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ + sb . length ( ) ) ) ;
rank: 920
score: 99.66670079385081
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( sb . to CaMeL String ( ) ) ;
rank: 920
score: 99.6135009765625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( chars . to CaMeL String ( ) ) ;
rank: 920
score: 99.59522646949405
patch: folded CaMeL Size += sb . length ( ) ; } sb = new String CaMeL Builder ( ) ;
rank: 920
score: 99.56767578125
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 920
score: 99.54503942418981
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( new Integer ( sb . length ( ) ) ) ) ;
rank: 921
score: 99.63850350215517
patch: folded CaMeL Size += $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 921
score: 99.612578125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( n ) ; }
rank: 921
score: 99.59515850360577
patch: add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 921
score: 99.54482596261161
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( node . to CaMeL String ( ) ) ;
rank: 922
score: 99.62769368489583
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; else if ( sb . length ( ) > 0 ) {
rank: 922
score: 99.61241861979167
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 922
score: 99.5950339988426
patch: folded CaMeL Size += sb . length ( ) - 1 ; } sb . append ( sb . to CaMeL String ( ) ) ;
rank: 922
score: 99.54480511209239
patch: add ( Node . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ;
rank: 923
score: 99.66592610677084
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; } return sb ;
rank: 923
score: 99.637451171875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ + $NUMBER$ ; }
rank: 923
score: 99.62705993652344
patch: if ( sb . length ( ) == 0 ) { sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 923
score: 99.61216998922414
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; System . out . println ( sb . to CaMeL String ( ) ) ; }
rank: 923
score: 99.5941961880388
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 923
score: 99.57754516601562
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; if ( sb . length ( ) > 0 ) {
rank: 923
score: 99.56495079627403
patch: if ( sb . to CaMeL String ( ) != null ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 923
score: 99.54420753761575
patch: append ( sb . to CaMeL String ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) ) ;
rank: 924
score: 99.66585867745536
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb = new String CaMeL Builder ( ) ; }
rank: 924
score: 99.63743542086694
patch: folded CaMeL Size += sb . length ( ) + 1 ; } array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 924
score: 99.59446364182692
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += sb . length ( ) - 1 ;
rank: 924
score: 99.59195682920259
patch: add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 924
score: 99.57743778935185
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 924
score: 99.544189453125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node ) ; }
rank: 925
score: 99.63704707704741
patch: / * * / array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 925
score: 99.61077249461206
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 925
score: 99.59382233796296
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } sb . append ( sb . to CaMeL String ( ) ) ;
rank: 925
score: 99.57670536747685
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( new Node CaMeL Traversal ( ) ) ;
rank: 925
score: 99.56329345703125
patch: if ( sb . length ( ) >= $NUMBER$ ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 926
score: 99.6369865171371
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb , 1 ) ) ;
rank: 926
score: 99.61068830818965
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Node ( sb . to CaMeL String ( ) ) ) ; }
rank: 926
score: 99.59303566261575
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { if ( sb . length ( ) > 0 ) {
rank: 926
score: 99.59028151939656
patch: array CaMeL Folded CaMeL Children . add ( new String ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ) ;
rank: 926
score: 99.574267578125
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 926
score: 99.54331235532408
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 , sb . length ( ) ) ) ;
rank: 927
score: 99.66344821068549
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { if ( sb . length ( ) > 0 ) {
rank: 927
score: 99.63645833333334
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add CaMeL All ( sb . length ( ) ) ;
rank: 927
score: 99.6103515625
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; }
rank: 927
score: 99.58838732489224
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + sb . length ( ) + sb . length ( ) ;
rank: 927
score: 99.5736328125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += sb . length ( ) - $NUMBER$ ;
rank: 927
score: 99.56163533528645
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb ) ;
rank: 928
score: 99.66299143145162
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; switch ( array CaMeL Node . get CaMeL Type ( ) ) {
rank: 928
score: 99.589169921875
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( sb . to CaMeL String ( ) ) ; }
rank: 928
score: 99.57233135516827
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } elem = elem . get CaMeL First CaMeL Child ( ) ;
rank: 928
score: 99.56016188401442
patch: if ( sb . length ( ) ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 928
score: 99.54125037560097
patch: if ( sb . length ( ) > 0 ) { sb . add ( sb . to CaMeL String ( ) ) ; }
rank: 929
score: 99.6362068422379
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( list . to CaMeL String ( ) ) ;
rank: 929
score: 99.6194556451613
patch: folded CaMeL Size = sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ;
rank: 929
score: 99.58744303385417
patch: folded CaMeL Size += sb . length ( ) + 1 ; } sb . append ( join CaMeL String ) ; }
rank: 929
score: 99.57130784254808
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( null ) ; } }
rank: 929
score: 99.5601298014323
patch: if ( array CaMeL Folded CaMeL Children == null ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 929
score: 99.54105631510417
patch: if ( sb . length ( ) == 0 ) { folded CaMeL Size += sb . to CaMeL String ( ) ;
rank: 930
score: 99.66264490927419
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; break ;
rank: 930
score: 99.6476629849138
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem ) ) ;
rank: 930
score: 99.61933244977679
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 930
score: 99.5870830829327
patch: folded CaMeL Size += sb . length ( ) + 1 ; sb . append ( sb . to CaMeL String ( ) ) ;
rank: 930
score: 99.571044921875
patch: String CaMeL Builder sb = new String CaMeL Builder ( ) ; String CaMeL Builder sb = new String CaMeL Builder ( ) ;
rank: 930
score: 99.53946035879629
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $STRING$ ) ) ;
rank: 931
score: 99.6618888608871
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem , Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ) ; }
rank: 931
score: 99.61864446824596
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; sb . append ( sb . to CaMeL String ( ) ) ;
rank: 931
score: 99.58671061197917
patch: folded CaMeL Size += sb . length ( ) ; } else { sb . append ( join CaMeL String ) ; }
rank: 931
score: 99.58482869466145
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + 1 ;
rank: 931
score: 99.568359375
patch: folded CaMeL Size += sb . length ( ) ; String CaMeL Builder sb = new String CaMeL Builder ( ) ;
rank: 931
score: 99.5566015625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( false ) ; }
rank: 931
score: 99.539443359375
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size = sb . length ( ) + $NUMBER$ ; }
rank: 932
score: 99.66136120211694
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } parent . replace CaMeL Child ( n , folded CaMeL Size ) ;
rank: 932
score: 99.63460567079741
patch: folded CaMeL Size += sb . length ( ) ; } array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 932
score: 99.60791015625
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb ) ) ; }
rank: 932
score: 99.58577473958333
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; if ( sb . length ( ) > 0 ) { return ; }
rank: 932
score: 99.5562235514323
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size = sb . length ( ) + $NUMBER$ ;
rank: 932
score: 99.53419846754808
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new Integer ( sb . length ( ) ) ) ;
rank: 933
score: 99.66107388200432
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; else { sb . append ( join CaMeL String ) ; }
rank: 933
score: 99.61731377963362
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( sb . length ( ) > 0 ) {
rank: 933
score: 99.60746256510417
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . substring ( 0 , sb . length ( ) ) ) ) ;
rank: 933
score: 99.58506422776442
patch: folded CaMeL Size += sb . length ( ) ; } sb . append ( sb . to CaMeL String ( ) ) ; }
rank: 933
score: 99.5791015625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( folded CaMeL Size + $NUMBER$ ) ;
rank: 933
score: 99.55405495383523
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size += sb . length ( ) ;
rank: 934
score: 99.66057718211206
patch: append ( join CaMeL String ) ; } sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 934
score: 99.60524204799107
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 934
score: 99.56406813401442
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } folded CaMeL Size += sb . size ( ) + $NUMBER$ ;
rank: 934
score: 99.554052734375
patch: if ( sb . length ( ) > 0 ) { sb . add ( sb . to CaMeL String ( ) ) ;
rank: 934
score: 99.5338134765625
patch: if ( sb . length ( ) != 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 935
score: 99.65948683215726
patch: append ( $STRING$ ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 935
score: 99.60448376885776
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb . to CaMeL String ( ) ) ) ;
rank: 935
score: 99.5839453125
patch: folded CaMeL Size += sb . length ( ) + 1 ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 935
score: 99.57686812789352
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 935
score: 99.55368041992188
patch: if ( sb . length ( ) == $NUMBER$ ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 935
score: 99.53298828125
patch: add ( sb . length ( ) ) ; array CaMeL Folded CaMeL Children . add ( sb . length ( ) ) ;
rank: 936
score: 99.6591560609879
patch: String CaMeL Builder sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 936
score: 99.62832845052084
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( new String CaMeL Builder ( ) ) ;
rank: 936
score: 99.58309232271634
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children = new String CaMeL Builder ( ) ;
rank: 936
score: 99.56151404747597
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; break ;
rank: 937
score: 99.62759294181035
patch: text += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 937
score: 99.57296752929688
patch: if ( sb . length ( ) <= 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 937
score: 99.560087890625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size = sb . length ( ) + $NUMBER$ ;
rank: 937
score: 99.552001953125
patch: if ( sb . length ( ) < 1 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 938
score: 99.64269625756049
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 938
score: 99.62757610452586
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { folded CaMeL Size += sb . length ( ) + 1 ; }
rank: 938
score: 99.5567043138587
patch: if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; } }
rank: 938
score: 99.55193219866071
patch: add ( Node CaMeL Util . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 938
score: 99.528818359375
patch: add ( Node . new CaMeL String ( sb . length ( ) , sb . to CaMeL String ( ) ) ) ;
rank: 939
score: 99.65670340401786
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } sb . append ( join CaMeL String ) ; }
rank: 939
score: 99.64215284778226
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( sb . length ( ) > 0 ) { return ;
rank: 939
score: 99.61534830729167
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 939
score: 99.60231175915948
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 939
score: 99.57675405649039
patch: folded CaMeL Size += sb . length ( ) - 1 ; } folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 939
score: 99.5508524576823
patch: if ( sb . length ( ) < $NUMBER$ ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 940
score: 99.65646888469827
patch: append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; break ;
rank: 940
score: 99.64214877424568
patch: append ( join CaMeL String ) ; } else { sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 940
score: 99.61507442079741
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 940
score: 99.57480256453805
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb = new String CaMeL Builder ( ) ; }
rank: 940
score: 99.55003865559895
patch: folded CaMeL Size += sb . length ( ) ; else folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 940
score: 99.52548699629934
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += $NUMBER$ ; }
rank: 941
score: 99.62436860183189
patch: folded CaMeL Size = 0 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 941
score: 99.60066170528017
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb , $NUMBER$ ) ) ;
rank: 941
score: 99.56919921875
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + 1 ; }
rank: 941
score: 99.55339898003473
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 941
score: 99.54880859375
patch: if ( ! sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 941
score: 99.52056640625
patch: if ( sb . size ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 942
score: 99.65572554976852
patch: folded CaMeL Size += array CaMeL Node . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 942
score: 99.6136328125
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + sb . length ( ) + $NUMBER$ ;
rank: 942
score: 99.5689453125
patch: if ( sb . length ( ) > $NUMBER$ ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 942
score: 99.56856105638587
patch: folded CaMeL Size += sb . length ( ) + 1 ; } sb = new String CaMeL Builder ( ) ;
rank: 942
score: 99.55263671875
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( null ) ; }
rank: 942
score: 99.52017578125
patch: if ( sb . trim ( ) != 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 943
score: 99.61349388860887
patch: String CaMeL Builder sb = new String CaMeL Builder ( ) ; int folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 943
score: 99.597490234375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( 0 ) ; }
rank: 943
score: 99.552294921875
patch: folded CaMeL Size += $NUMBER$ ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 943
score: 99.54452514648438
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else folded CaMeL Size += sb . length ( ) ;
rank: 943
score: 99.519384765625
patch: if ( array CaMeL Folded CaMeL Children != null ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 944
score: 99.652802734375
patch: append ( $STRING$ ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 944
score: 99.6416724420363
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem ) ) ;
rank: 944
score: 99.61318674395162
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( $STRING$ ) ) ;
rank: 944
score: 99.5685323079427
patch: if ( sb . size ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 944
score: 99.5415625
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; ;
rank: 945
score: 99.65272258890086
patch: append ( join CaMeL String ) ; break ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 945
score: 99.64141255040323
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( elem ) ) ;
rank: 945
score: 99.62189352101294
patch: if ( array CaMeL Folded CaMeL Children . size ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 945
score: 99.567099609375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; else { sb . append ( join CaMeL String ) ; }
rank: 945
score: 99.5498046875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } elem = elem . get CaMeL Next ( ) ;
rank: 945
score: 99.54115234375
patch: array CaMeL Folded CaMeL Children . add ( sb . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 945
score: 99.51676078464673
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 , $NUMBER$ ) ) ;
rank: 946
score: 99.65201542295259
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } if ( sb . length ( ) > 0 ) {
rank: 946
score: 99.64109644396552
patch: sb . append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 946
score: 99.6117743130388
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ; if ( sb . length ( ) == 0 ) {
rank: 946
score: 99.56583658854167
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) - $NUMBER$ ;
rank: 946
score: 99.541005859375
patch: for ( String sb : sb . length ( ) ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 947
score: 99.62051827566964
patch: add ( sb . to CaMeL String ( ) ) ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 947
score: 99.58868877704327
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( 0 , sb ) ;
rank: 947
score: 99.565498046875
patch: array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) ) ) ;
rank: 947
score: 99.56306258491848
patch: folded CaMeL Size += sb . length ( ) - 1 ; sb . append ( join CaMeL String ) ; }
rank: 948
score: 99.650830078125
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; } }
rank: 948
score: 99.61769261853448
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ;
rank: 948
score: 99.61112467447917
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node ) ;
rank: 948
score: 99.58613804408482
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( sb . char CaMeL At ( 0 ) ) ; }
rank: 948
score: 99.56484750600961
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else
rank: 948
score: 99.56109064275569
patch: folded CaMeL Size += sb . length ( ) - 1 ; sb = new String CaMeL Builder ( ) ;
rank: 948
score: 99.54837036132812
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( null ) ;
rank: 948
score: 99.5106709798177
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size = sb . to CaMeL String ( ) ;
rank: 949
score: 99.60909016927083
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( sb ) ;
rank: 949
score: 99.58412905092592
patch: folded CaMeL Size += $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( 0 , sb . to CaMeL String ( ) ) ; }
rank: 949
score: 99.55916341145833
patch: folded CaMeL Size += sb . length ( ) - 1 ; } sb . append ( join CaMeL String ) ; }
rank: 949
score: 99.547509765625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( this ) ; }
rank: 949
score: 99.540087890625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( $NUMBER$ ) ; }
rank: 949
score: 99.50779965049342
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 950
score: 99.64803059895833
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 950
score: 99.61641261888587
patch: folded CaMeL Size += $NUMBER$ ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 950
score: 99.60886056082589
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 950
score: 99.58267578125
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( n ) ;
rank: 950
score: 99.54726774796195
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += sb . length ( ) + 1 ;
rank: 950
score: 99.53781127929688
patch: folded CaMeL Size += 0 ; array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 950
score: 99.50755774456522
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ + $NUMBER$ ) ) ;
rank: 951
score: 99.61560479525862
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( sb . length ( ) ) ;
rank: 951
score: 99.5582275390625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; { sb . append ( join CaMeL String ) ; }
rank: 951
score: 99.546953125
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( null ) ; }
rank: 951
score: 99.5376953125
patch: folded CaMeL Size += sb . length ( ) ; sb . add ( sb . to CaMeL String ( ) ) ; }
rank: 952
score: 99.64357277199075
patch: folded CaMeL Size += 0 ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 952
score: 99.61429398148148
patch: folded CaMeL Size += $NUMBER$ ; } else { array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 952
score: 99.557333984375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . remove ( elem ) ; }
rank: 952
score: 99.53507486979167
patch: if ( sb . length ( ) <= 1 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 952
score: 99.50703125
patch: if ( sb . length ( ) < 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 953
score: 99.6433574969952
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 953
score: 99.61382004310344
patch: folded CaMeL Size -= $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 953
score: 99.60545191271552
patch: folded CaMeL Size += 1 ; array CaMeL Folded CaMeL Children . add ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 953
score: 99.5629352072011
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + sb . length ( ) ;
rank: 953
score: 99.55731201171875
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } sb . append ( join CaMeL String ) ; }
rank: 953
score: 99.5447285970052
patch: folded CaMeL Size += sb . length ( ) + 1 ; } folded CaMeL Size += sb . length ( ) ;
rank: 953
score: 99.50661302649456
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 , 0 ) ) ;
rank: 954
score: 99.60523302801724
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( sb . length ( ) > 1 ) {
rank: 954
score: 99.57338169642857
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( $NUMBER$ ) ; }
rank: 954
score: 99.557138671875
patch: folded CaMeL Size += sb . length ( ) - 1 ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 954
score: 99.506611328125
patch: if ( sb . length ( ) == 1 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 955
score: 99.64165387834821
patch: append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 955
score: 99.60335567079741
patch: Buffer sb = new String CaMeL Builder ( ) ; int folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 955
score: 99.5719921875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( sb ) ;
rank: 955
score: 99.5609600360577
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( folded CaMeL Size ) ;
rank: 955
score: 99.556865234375
patch: folded CaMeL Size += sb . length ( ) - 1 ; } array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 955
score: 99.54345703125
patch: folded CaMeL Size += ( ( String ) sb . to CaMeL String ( ) ) . length ( ) + $NUMBER$ ;
rank: 955
score: 99.53403542258523
patch: if ( folded CaMeL Size > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 956
score: 99.63909912109375
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; break ;
rank: 956
score: 99.59920528017241
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 956
score: 99.55963604266827
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; break ;
rank: 956
score: 99.55669921875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += sb . length ( ) - 1 ;
rank: 956
score: 99.50274658203125
patch: if ( sb . length ( ) > 0 ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 957
score: 99.63251139322917
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem . new CaMeL String ( ) ) ;
rank: 957
score: 99.59340483566811
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; if ( sb . length ( ) != 0 ) {
rank: 957
score: 99.57112943209134
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( 0 , $NUMBER$ ) ;
rank: 957
score: 99.554248046875
patch: if ( sb . length ( ) <= 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 957
score: 99.54274680397727
patch: if ( sb . length ( ) == 0 ) { sb . append ( join CaMeL String ) ; }
rank: 957
score: 99.53302734375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new ) ; }
rank: 957
score: 99.50132685122283
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 , 1 ) ) ;
rank: 958
score: 99.63486153738839
patch: append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } }
rank: 958
score: 99.63138133081897
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( right ) ) ;
rank: 958
score: 99.57056603064903
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( $NUMBER$ ) ; sb . append ( $NUMBER$ ) ; }
rank: 958
score: 99.55447520380434
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; sb . append ( join CaMeL String ) ; }
rank: 958
score: 99.53991168478261
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; if ( sb . length ( ) > 0 )
rank: 959
score: 99.63446723090277
patch: append ( join CaMeL String ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ;
rank: 959
score: 99.63134765625
patch: folded CaMeL Size += sb . length ( ) - 1 ; folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 959
score: 99.57977973090277
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else {
rank: 959
score: 99.55416870117188
patch: folded CaMeL Size += sb . length ( ) ; } folded CaMeL Size += sb . length ( ) + 1 ;
rank: 959
score: 99.53830973307292
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 959
score: 99.5002950032552
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size += sb . to CaMeL String ( ) ;
rank: 960
score: 99.6003515625
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } array CaMeL Folded CaMeL Children . add ( node ) ;
rank: 960
score: 99.57963053385417
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 960
score: 99.5694921875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else folded CaMeL Size += sb . length ( ) ;
rank: 960
score: 99.55272327769886
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; sb = new String CaMeL Builder ( ) ;
rank: 960
score: 99.53763834635417
patch: if ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; } else {
rank: 960
score: 99.53215997869319
patch: if ( sb . length ( ) > $NUMBER$ ) { folded CaMeL Size += sb . length ( ) ;
rank: 960
score: 99.49840291341145
patch: if ( sb . length ( ) >= 0 ) { folded CaMeL Size += sb . to CaMeL String ( ) ;
rank: 961
score: 99.63289097377232
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; if ( sb . length ( ) > 0 ) {
rank: 961
score: 99.63004847935268
patch: sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 961
score: 99.59874616350446
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( array CaMeL Folded CaMeL Children ) ;
rank: 961
score: 99.57902922453704
patch: folded CaMeL Size += sb . length ( ) + 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ; } else {
rank: 961
score: 99.54632568359375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; folded CaMeL Size += sb . length ( ) ; }
rank: 961
score: 99.53068033854167
patch: add ( sb . to CaMeL String ( ) ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 961
score: 99.49552055027173
patch: if ( sb . length ( ) > 0 ) folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 962
score: 99.63134765625
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; sb = new String CaMeL Builder ( ) ; } }
rank: 962
score: 99.59861537388393
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( new String ( sb ) ) ;
rank: 962
score: 99.56594613882211
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; sb . append ( sb . to CaMeL String ( ) ) ;
rank: 962
score: 99.5450772372159
patch: while ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ; }
rank: 962
score: 99.53054809570312
patch: if ( sb . length ( ) > $NUMBER$ ) { folded CaMeL Size = sb . length ( ) + $NUMBER$ ;
rank: 962
score: 99.49352496603261
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , length ( ) ) ) ;
rank: 963
score: 99.6304931640625
patch: append ( join CaMeL String ) ; sb . append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 963
score: 99.59616427951389
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children = sb . to CaMeL String ( ) ;
rank: 963
score: 99.54395592730978
patch: folded CaMeL Size += sb . length ( ) ; } else { sb . append ( join CaMeL String ) ;
rank: 963
score: 99.52956136067708
patch: if ( sb . length ( ) < 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 964
score: 99.62773786272321
patch: append ( folded CaMeL Size ) ; } sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 964
score: 99.53178267045455
patch: if ( sb . length ( ) > 1 ) { sb . append ( join CaMeL String ) ; }
rank: 964
score: 99.52928670247395
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( $STRING$ ) ;
rank: 964
score: 99.49045728600544
patch: if ( sb . length ( ) == 0 ) { folded CaMeL Size += sb . length ( ) ; }
rank: 965
score: 99.55892944335938
patch: folded CaMeL Size += sb . length ( ) - 1 ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 965
score: 99.54841796875
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += sb . length ( ) - $NUMBER$ ; }
rank: 965
score: 99.54230608258929
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( $STRING$ ) ;
rank: 965
score: 99.5288594563802
patch: if ( $NUMBER$ != sb . length ( ) ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 965
score: 99.49021402994792
patch: if ( sb . trim ( ) != 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 966
score: 99.62577763310185
patch: append ( folded CaMeL Size ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 966
score: 99.562041015625
patch: folded CaMeL Size += sb . length ( ) ; } else { folded CaMeL Size += sb . length ( ) ; }
rank: 966
score: 99.558125
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + sb . length ( ) + 1 ;
rank: 966
score: 99.54200328480114
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( join CaMeL String ) ;
rank: 966
score: 99.52994437839673
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += sb . length ( ) - $NUMBER$ ;
rank: 966
score: 99.51920942826705
patch: array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 966
score: 99.48885444972827
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 , $STRING$ ) ) ;
rank: 967
score: 99.58749276620371
patch: folded CaMeL Size ++ ; array CaMeL Folded CaMeL Children . add ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 967
score: 99.561396484375
patch: folded CaMeL Size += sb . length ( ) ; sb . append ( $NUMBER$ ) ; sb . append ( $NUMBER$ ) ;
rank: 967
score: 99.54930962456598
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 967
score: 99.54163178943452
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( $NUMBER$ ) ;
rank: 967
score: 99.54123046875
patch: add ( Node CaMeL Util . new CaMeL String ( sb . length ( ) , sb . length ( ) ) ) ;
rank: 967
score: 99.5285412016369
patch: folded CaMeL Size += sb . length ( ) ; sb = new String CaMeL Builder ( ) ; }
rank: 967
score: 99.51657443576389
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ;
rank: 967
score: 99.48753821331522
patch: array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 968
score: 99.58573857060185
patch: else { array CaMeL Folded CaMeL Children . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 968
score: 99.54866166548295
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 968
score: 99.52785326086956
patch: folded CaMeL Size += sb . length ( ) + 1 ; folded CaMeL Size += sb . length ( ) ;
rank: 968
score: 99.51151706861413
patch: if ( sb . length ( ) > ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 968
score: 99.48349831321023
patch: if ( sb . length ( ) == 0 ) { folded CaMeL Size += sb . length ( ) ;
rank: 969
score: 99.62210787259616
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( sb ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 969
score: 99.5830078125
patch: folded CaMeL Size ++ ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 969
score: 99.54060872395833
patch: folded CaMeL Size += sb . length ( ) + 1 ; if ( sb . length ( ) > 0 ) {
rank: 969
score: 99.5391796875
patch: if ( sb . starts CaMeL With ( $STRING$ ) ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 969
score: 99.53609035326087
patch: folded CaMeL Size += sb . length ( ) - 1 ; } sb = new String CaMeL Builder ( ) ;
rank: 969
score: 99.5105868252841
patch: if ( folded CaMeL Size == 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 969
score: 99.48283585258152
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 , true ) ) ;
rank: 970
score: 99.61341688368056
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 970
score: 99.5384521484375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; if ( sb . length ( ) == 0 ) {
rank: 970
score: 99.5342327615489
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; } sb = new String CaMeL Builder ( ) ;
rank: 970
score: 99.5007657137784
patch: if ( folded CaMeL Size != 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 970
score: 99.48176375679348
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 0 , $NUMBER$ ) ) ;
rank: 971
score: 99.53481038411458
patch: folded CaMeL Size += sb . length ( ) + Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 971
score: 99.53304390285327
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ; } sb . append ( join CaMeL String ) ;
rank: 971
score: 99.52847290039062
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size += sb . length ( ) + 1 ;
rank: 971
score: 99.49977805397727
patch: if ( sb . length ( ) ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 971
score: 99.4789806547619
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , 1 ) ) ;
rank: 972
score: 99.61630135995371
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; sb = new String CaMeL Builder ( ) ;
rank: 972
score: 99.61275679976852
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; } else { folded CaMeL Size += 0 ; }
rank: 972
score: 99.549404296875
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . to CaMeL String ( ) ; }
rank: 972
score: 99.5292331861413
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Node . detach CaMeL Children ( ) ;
rank: 972
score: 99.51450892857143
patch: if ( sb . length ( ) == 0 ) { sb . append ( join CaMeL String ) ;
rank: 972
score: 99.49577192826705
patch: if ( folded CaMeL Size == $NUMBER$ ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 973
score: 99.61086801382211
patch: append ( join CaMeL String ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 973
score: 99.5269266764323
patch: folded CaMeL Size += sb . length ( ) - 1 ; if ( sb . length ( ) > 0 ) {
rank: 973
score: 99.51303245907738
patch: if ( sb . length ( ) > 1 ) { sb . append ( join CaMeL String ) ;
rank: 973
score: 99.49254150390625
patch: if ( n != null ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 973
score: 99.4767535665761
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ - 1 ) ) ;
rank: 974
score: 99.5485331217448
patch: folded CaMeL Size += sb . length ( ) ; } else { folded CaMeL Size += sb . length ( ) ;
rank: 974
score: 99.5213114420573
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( elem ) ;
rank: 974
score: 99.52087983630952
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ + sb . length ( ) + $NUMBER$ ;
rank: 974
score: 99.51172485351563
patch: if ( sb . length ( ) > 0 ) { sb . append ( $STRING$ ) ; }
rank: 974
score: 99.49168759300595
patch: if ( ! folded CaMeL Size ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 975
score: 99.60265625
patch: append ( $STRING$ ) ; sb . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 975
score: 99.5459493001302
patch: folded CaMeL Size += sb . length ( ) ; folded CaMeL Size += sb . length ( ) + 1 ; }
rank: 975
score: 99.51849365234375
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; array CaMeL Folded CaMeL Children . add ( node ) ;
rank: 975
score: 99.47114894701087
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size += sb . length ( ) ; }
rank: 976
score: 99.5393778483073
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( $STRING$ ) ; }
rank: 976
score: 99.51719156901042
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) . length ( ) + $NUMBER$ ;
rank: 976
score: 99.50584827769886
patch: folded CaMeL Size += sb . length ( ) ; if ( sb . length ( ) > 0 ) {
rank: 976
score: 99.48944091796875
patch: if ( $NUMBER$ > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 976
score: 99.46980086616848
patch: if ( sb . length ( ) >= 0 ) { folded CaMeL Size += sb . length ( ) ; }
rank: 977
score: 99.53560384114583
patch: folded CaMeL Size += $NUMBER$ ; sb . append ( new String ( sb . to CaMeL String ( ) ) ) ;
rank: 977
score: 99.5045749830163
patch: folded CaMeL Size += sb . length ( ) ; array CaMeL Folded CaMeL Children . add ( elem ) ; }
rank: 977
score: 99.50446026141827
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 977
score: 99.4871493252841
patch: if ( folded CaMeL Size += $NUMBER$ ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 977
score: 99.45736533717105
patch: if ( sb . length ( ) == 0 ) { folded CaMeL Size += $NUMBER$ ; }
rank: 978
score: 99.53517659505208
patch: folded CaMeL Size += Math . max ( sb . length ( ) + $NUMBER$ , sb . length ( ) ) ;
rank: 978
score: 99.5033291903409
patch: if ( sb . length ( ) >= 0 ) { sb . append ( join CaMeL String ) ; }
rank: 978
score: 99.50156763980263
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + $NUMBER$ ;
rank: 978
score: 99.49550083705357
patch: while ( sb . length ( ) > 0 ) { sb . append ( join CaMeL String ) ;
rank: 978
score: 99.48686079545455
patch: if ( folded CaMeL Size > $NUMBER$ ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 978
score: 99.45235770089286
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) , $NUMBER$ ) ) ;
rank: 979
score: 99.4989703634511
patch: folded CaMeL Size . add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 979
score: 99.498779296875
patch: folded CaMeL Size += sb . length ( ) + ( sb . length ( ) + $NUMBER$ ) ;
rank: 979
score: 99.49331519717262
patch: folded CaMeL Size += sb . length ( ) ; } sb . append ( join CaMeL String ) ;
rank: 979
score: 99.47783203125
patch: if ( n != 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 980
score: 99.5326436360677
patch: folded CaMeL Size = sb . length ( ) ; folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 980
score: 99.49196905838816
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ; }
rank: 980
score: 99.49094109786184
patch: if ( sb . length ( ) > 0 ) { sb . append ( $STRING$ ) ;
rank: 980
score: 99.47705688476563
patch: if ( $NUMBER$ == 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 980
score: 99.43040161132812
patch: add ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ; }
rank: 981
score: 99.48851376488095
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( $STRING$ ) ; }
rank: 981
score: 99.48225911458333
patch: if ( sb . length ( ) >= 0 ) { sb . append ( join CaMeL String ) ;
rank: 981
score: 99.47435302734375
patch: if ( 0 > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 981
score: 99.42064144736842
patch: if ( sb . length ( ) >= 0 ) { folded CaMeL Size += $NUMBER$ ; }
rank: 982
score: 99.56245691636029
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 982
score: 99.5291239420573
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { sb . append ( $NUMBER$ ) ; }
rank: 982
score: 99.4809337797619
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( right ) ;
rank: 982
score: 99.47371215820313
patch: if ( n == 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 982
score: 99.45448133680556
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 982
score: 99.41790450246711
patch: if ( sb . length ( ) > 1 ) { folded CaMeL Size += $NUMBER$ ; }
rank: 983
score: 99.55645461309524
patch: append ( sb . to CaMeL String ( ) ) ; sb = new String CaMeL Builder ( ) ;
rank: 983
score: 99.54061226222827
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } else { folded CaMeL Size += $NUMBER$ ; }
rank: 983
score: 99.47757393973214
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; } sb . append ( elem ) ;
rank: 983
score: 99.46727294921875
patch: if ( $NUMBER$ == $NUMBER$ ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 983
score: 99.43740234375
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) + $NUMBER$ ;
rank: 983
score: 99.41237278988487
patch: append ( Node . new CaMeL String ( sb . to CaMeL String ( ) ) ) ;
rank: 984
score: 99.54053751627605
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; sb . append ( sb . length ( ) ) ;
rank: 984
score: 99.49052734375
patch: if ( sb . length ( ) > 0 ) { sb . append ( $NUMBER$ ) ; }
rank: 984
score: 99.466943359375
patch: if ( sb . length ( ) > 0 && sb . length ( ) > 0 ) {
rank: 984
score: 99.43429404810855
patch: buf . append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ;
rank: 984
score: 99.40781121504934
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += 0 ; }
rank: 985
score: 99.48880440848214
patch: if ( sb . length ( ) + $NUMBER$ > 0 ) { folded CaMeL Size += $NUMBER$ ; }
rank: 985
score: 99.46417846679688
patch: folded CaMeL Size += sb . length ( ) ; sb = new String CaMeL Builder ( ) ;
rank: 985
score: 99.44921875
patch: if ( count > 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 985
score: 99.413330078125
patch: folded CaMeL Size += sb . length ( ) + sb . length ( ) + 1 ;
rank: 985
score: 99.40756064967105
patch: if ( sb . length ( ) != 0 ) { folded CaMeL Size += $NUMBER$ ; }
rank: 986
score: 99.5347188313802
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 986
score: 99.4433837890625
patch: if ( node != null ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 986
score: 99.41202121310764
patch: folded CaMeL Size = Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( n ) ;
rank: 987
score: 99.53215997869319
patch: append ( sb . to CaMeL String ( ) ) ; sb = new String CaMeL Builder ( ) ; }
rank: 987
score: 99.528564453125
patch: folded CaMeL Size += $NUMBER$ ; } else { sb . append ( sb . to CaMeL String ( ) ) ;
rank: 987
score: 99.48528180803571
patch: folded CaMeL Size += sb . length ( ) + 1 ; sb . append ( $NUMBER$ ) ; }
rank: 987
score: 99.44087524414063
patch: if ( $NUMBER$ != 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 987
score: 99.42127182904412
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + $NUMBER$ ;
rank: 987
score: 99.40627712673611
patch: folded CaMeL Size -= Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( elem ) ;
rank: 987
score: 99.37841796875
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += $NUMBER$ ;
rank: 988
score: 99.5086337002841
patch: folded CaMeL Size += $NUMBER$ ; } else { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 988
score: 99.4373291015625
patch: if ( 0 == $NUMBER$ ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 988
score: 99.41712710731908
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) + $NUMBER$ ;
rank: 988
score: 99.40851508246527
patch: folded CaMeL Size += Inline CaMeL Cost CaMeL Estimator . get CaMeL Cost ( right ) ;
rank: 988
score: 99.35836971507354
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) + 1 ;
rank: 988
score: 99.35730698529412
patch: add ( Node . new CaMeL String ( sb . length ( ) ) ) ;
rank: 988
score: 99.33547076056985
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) - 1 ;
rank: 989
score: 99.52876112196181
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( elem ) ) ; }
rank: 989
score: 99.4367431640625
patch: if ( sb != null ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 989
score: 99.40596731085526
patch: array CaMeL Folded CaMeL Children . add ( sb . to CaMeL String ( ) ) ; }
rank: 989
score: 99.34891183035714
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; }
rank: 989
score: 99.34085787259616
patch: folded CaMeL Size += sb . length ( ) + 1 ;
rank: 989
score: 99.3397928873698
patch: add ( sb . to CaMeL String ( ) ) ;
rank: 990
score: 99.55230422247024
patch: append ( join CaMeL String ) ; } else { sb . append ( join CaMeL String ) ; }
rank: 990
score: 99.43515014648438
patch: if ( 0 > $NUMBER$ ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 990
score: 99.40288229549633
patch: folded CaMeL Size += sb . to CaMeL String ( ) . length ( ) ;
rank: 990
score: 99.30913837139423
patch: folded CaMeL Size += sb . length ( ) - 1 ;
rank: 991
score: 99.48485165550595
patch: folded CaMeL Size += $NUMBER$ ; } else { folded CaMeL Size += sb . length ( ) ; }
rank: 991
score: 99.43429565429688
patch: if ( $NUMBER$ > 1 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 991
score: 99.296337890625
patch: folded CaMeL Size += array CaMeL Folded CaMeL Children . size ( ) ;
rank: 991
score: 99.2874755859375
patch: folded CaMeL Size += sb . length ( ) - $NUMBER$ ;
rank: 991
score: 99.22117396763393
patch: sb . add ( sb . to CaMeL String ( ) ) ;
rank: 992
score: 99.50370861235119
patch: append ( join CaMeL String ) ; } folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 992
score: 99.45337524414063
patch: folded CaMeL Size = Node . new CaMeL String ( sb . to CaMeL String ( ) ) ;
rank: 992
score: 99.41806512129934
patch: if ( ! 0 ) { folded CaMeL Size += sb . length ( ) + $NUMBER$ ;
rank: 992
score: 99.26920259915866
patch: folded CaMeL Size = sb . length ( ) + $NUMBER$ ;
rank: 992
score: 99.225830078125
patch: if ( sb . length ( ) > 0 ) {
rank: 992
score: 99.2160135904948
patch: append ( sb . to CaMeL String ( ) ) ;
rank: 993
score: 99.41566226356908
patch: if ( sb . length ( ) > 0 ) { folded CaMeL Size += $NUMBER$ ; ;
rank: 993
score: 99.38933648003473
patch: array CaMeL Folded CaMeL Children . add ( sb . length ( ) + $NUMBER$ ) ;
rank: 993
score: 99.28358677455357
patch: folded CaMeL Size += sb . length ( ) + 1 ; }
rank: 993
score: 99.23734907670455
patch: folded CaMeL Size += sb . length ( ) ;
rank: 993
score: 99.19569614955357
patch: add CaMeL Node ( sb . to CaMeL String ( ) ) ;
rank: 994
score: 99.37096449908088
patch: append ( join CaMeL String ) ; sb = new String CaMeL Builder ( ) ;
rank: 994
score: 99.23809814453125
patch: sb . append ( sb . to CaMeL String ( ) ) ;
rank: 994
score: 99.19552176339286
patch: list . add ( sb . to CaMeL String ( ) ) ;
rank: 994
score: 99.18234487680289
patch: folded CaMeL Size -= sb . length ( ) + $NUMBER$ ;
rank: 995
score: 99.3671875
patch: append ( Node CaMeL Util . get CaMeL String CaMeL Value ( right ) ) ;
rank: 995
score: 99.28406575520833
patch: folded CaMeL Size += sb . length ( ) + $NUMBER$ ; break ;
rank: 995
score: 99.17275766225961
patch: folded CaMeL Size = sb . length ( ) - 1 ;
rank: 995
score: 99.10384114583333
patch: folded CaMeL Size ( sb . length ( ) ) ;
rank: 996
score: 99.10483805338542
patch: folded CaMeL Size += sb . length ( ) ; }
rank: 996
score: 99.0823465983073
patch: if ( sb . length ( ) == 0 ) {
rank: 997
score: 99.04937133789062
patch: add ( sb . length ( ) ) ;
rank: 997
score: 99.01588023792614
patch: folded CaMeL Size = sb . length ( ) ;
rank: 997
score: 98.83538208007812
patch: folded CaMeL Size += sb . length ( )
rank: 997
score: 98.70489501953125
patch: folded CaMeL Size += $NUMBER$ ;
rank: 998
score: 98.97843017578126
patch: append ( sb . length ( ) ) ;
rank: 998
score: 98.90106811523438
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 998
score: 98.84547932942708
patch: append ( join CaMeL String ) ; }
rank: 998
score: 98.66022491455078
patch: append ( join CaMeL String ) ;
rank: 999
score: 98.87185668945312
patch: folded CaMeL Size += $NUMBER$ ; }
rank: 999
score: 98.59978376116071
patch: folded CaMeL Size += 0 ;
rank: 999
score: 98.51827566964286
patch: folded CaMeL Size += 1 ;
rank: 1000
score: 98.27327473958333
patch: add ( sb ) ;
rank: 1000
score: 98.23275756835938
patch: folded CaMeL Size ++ ;
