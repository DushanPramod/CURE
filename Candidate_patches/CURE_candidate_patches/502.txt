rank: 1
score: 99.85462297712054
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 1
score: 99.7974853515625
patch: mant = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 1
score: 99.78310818142361
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 1
score: 99.772607421875
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 1
score: 99.72246636284723
patch: exp = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 2
score: 99.7974853515625
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 2
score: 99.77064514160156
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 2
score: 99.76450602213542
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 2
score: 99.75446026141827
patch: mant = str . substring ( exp CaMeL Pos ) ; }
rank: 3
score: 99.78457205636161
patch: exp = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 3
score: 99.75173611111111
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 3
score: 99.75104166666667
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 3
score: 99.71451568603516
patch: mant = str . substring ( str . length ( ) - 1 ) ;
rank: 3
score: 99.71185302734375
patch: mant = str . substring ( exp CaMeL Pos ) ;
rank: 3
score: 99.71143934461806
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 4
score: 99.71659342447917
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 4
score: 99.70683070591518
patch: mant = str . substring ( exp CaMeL Pos - 1 ) ;
rank: 4
score: 99.69755473889802
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 4
score: 99.68397739955357
patch: mant = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 4
score: 99.66791848575367
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; break ; }
rank: 5
score: 99.72857666015625
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 5
score: 99.70524766710069
patch: mant = str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 5
score: 99.69670274522569
patch: dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 5
score: 99.69255828857422
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 6
score: 99.68311309814453
patch: mant = str . substring ( 0 + exp CaMeL Pos - 1 ) ;
rank: 6
score: 99.67970904181985
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 6
score: 99.66910593133224
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 6
score: 99.65034702845982
patch: mant = str . substring ( str . length ( ) ) ;
rank: 7
score: 99.71584647042411
patch: exp = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 7
score: 99.7075927734375
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos - 1 ) ;
rank: 7
score: 99.66466471354167
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ; }
rank: 7
score: 99.66129557291667
patch: mant = str . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ;
rank: 8
score: 99.70761544363839
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 8
score: 99.70433892144098
patch: mant = str . substring ( 0 , str . length ( ) - 1 ) ;
rank: 8
score: 99.67865753173828
patch: mant = str . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 8
score: 99.6594009399414
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 8
score: 99.63011474609375
patch: mant = str . substring ( str . length ( ) - 1 , exp CaMeL Pos ) ;
rank: 9
score: 99.67749701605902
patch: exp = str . substring ( 0 , str . length ( ) - 1 ) ;
rank: 9
score: 99.66652221679688
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ;
rank: 9
score: 99.66341400146484
patch: mant = str . substring ( 0 , exp CaMeL Pos - 0 ) ;
rank: 9
score: 99.66155133928571
patch: dec = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 9
score: 99.65384714226974
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ; }
rank: 9
score: 99.6478207236842
patch: mant = str . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ; }
rank: 9
score: 99.61624484592014
patch: mant = str . substring ( str . length ( ) - exp CaMeL Pos ) ;
rank: 10
score: 99.6727294921875
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 10
score: 99.66369018554687
patch: mant = str . substring ( 0 , exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 10
score: 99.64610595703125
patch: mant = str . substring ( dec CaMeL Pos + 1 , str . length ( ) ) ;
rank: 10
score: 99.60905151367187
patch: mant = str . substring ( str . length ( ) - 0 , exp CaMeL Pos ) ;
rank: 11
score: 99.70426635742187
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ;
rank: 11
score: 99.66778564453125
patch: exp = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 11
score: 99.65341186523438
patch: mant = str . substring ( 0 , exp CaMeL Pos - str . length ( ) ) ;
rank: 11
score: 99.64171491350446
patch: mant = str . substring ( exp CaMeL Pos ) ; break ;
rank: 11
score: 99.63214789496527
patch: dec = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 11
score: 99.63031969572368
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 11
score: 99.59628295898438
patch: mant = str . substring ( str . length ( ) - $NUMBER$ ) ;
rank: 12
score: 99.69844818115234
patch: mant = str . substring ( 0 , dec CaMeL Pos + 1 ) ;
rank: 12
score: 99.63623860677083
patch: mant = str . substring ( exp CaMeL Pos - 1 ) ; }
rank: 12
score: 99.62534790039062
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 12
score: 99.62242635091145
patch: mant = str . substring ( dec CaMeL Pos ) ;
rank: 12
score: 99.59575059678819
patch: mant = str . substring ( str . length ( ) , exp CaMeL Pos ) ;
rank: 13
score: 99.62416478207237
patch: dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 13
score: 99.61759679457721
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ; }
rank: 13
score: 99.61453586154514
patch: exp = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 14
score: 99.67744663783482
patch: exp = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 14
score: 99.64435686383929
patch: mant = str . substring ( 1 , exp CaMeL Pos ) ;
rank: 14
score: 99.6222785500919
patch: mant = str . substring ( exp CaMeL Pos + exp CaMeL Pos ) ; }
rank: 14
score: 99.62138034986413
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 15
score: 99.68936157226562
patch: exp = str . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 15
score: 99.67625427246094
patch: mant = str . substring ( 0 , dec CaMeL Pos - 1 ) ;
rank: 15
score: 99.65205213758681
patch: dec = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 15
score: 99.60427856445312
patch: if ( exp CaMeL Pos < str . length ( ) - 1 ) {
rank: 16
score: 99.63990542763158
patch: mant = str . substring ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 16
score: 99.6140998391544
patch: mant = str . substring ( 0 , exp CaMeL Pos + 1 ) ; }
rank: 16
score: 99.59602573939732
patch: dec = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 17
score: 99.62391008649554
patch: mant = str . substring ( 0 + exp CaMeL Pos ) ;
rank: 17
score: 99.60636393229167
patch: mant = str . substring ( exp CaMeL Pos ) ; break ; }
rank: 17
score: 99.56892475328948
patch: mant = str . substring ( str . length ( ) , exp CaMeL Pos ) ; }
rank: 18
score: 99.68102446056548
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 18
score: 99.67201538085938
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ;
rank: 18
score: 99.64893188476563
patch: exp = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ;
rank: 18
score: 99.62083129882812
patch: mant = str . substring ( 0 , str . length ( ) - exp CaMeL Pos ) ;
rank: 18
score: 99.5639877319336
patch: mant = str . substring ( str . length ( ) + 1 ) ;
rank: 19
score: 99.68084716796875
patch: exp = str . substring ( 0 , dec CaMeL Pos + 1 ) ;
rank: 19
score: 99.62020874023438
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos - 1 ) ;
rank: 19
score: 99.6163330078125
patch: mant = str . substring ( 0 , exp CaMeL Pos , 1 ) ;
rank: 19
score: 99.60789088199013
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ; }
rank: 19
score: 99.5913021689967
patch: mant = str . substring ( exp CaMeL Pos + 1 ) . trim ( ) ; }
rank: 19
score: 99.58626883370536
patch: dec = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 19
score: 99.56188246783088
patch: mant = str . substring ( str . length ( ) - 1 ) ; }
rank: 20
score: 99.67611839657738
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( dec CaMeL Pos + 1 ) ) ;
rank: 20
score: 99.61642795138889
patch: mant = str . substring ( str . trim ( ) . length ( ) ) ;
rank: 20
score: 99.61165364583333
patch: mant = str . substring ( 0 , exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 20
score: 99.56151733398437
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ; break ;
rank: 21
score: 99.60439453125
patch: mant = str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos - 1 ) ;
rank: 21
score: 99.58423614501953
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; break ;
rank: 21
score: 99.58062337239583
patch: mant = str . substring ( dec CaMeL Pos + 1 ) ; }
rank: 22
score: 99.60591343470982
patch: mant = str . substring ( $NUMBER$ , exp CaMeL Pos ) ;
rank: 22
score: 99.60390625
patch: mant = str . substring ( 0 , dec CaMeL Pos ) ; }
rank: 22
score: 99.6018798828125
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; break ;
rank: 22
score: 99.5833740234375
patch: mant = str . substring ( exp CaMeL Pos + exp CaMeL Pos ) ;
rank: 22
score: 99.55958387586806
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; break ; } }
rank: 23
score: 99.60405883789062
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos + 1 ) ;
rank: 23
score: 99.60139465332031
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } }
rank: 23
score: 99.5584228515625
patch: mant = str . substring ( str . length ( ) - exp CaMeL Pos - 1 ) ;
rank: 24
score: 99.60147094726562
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos + 1 ) ;
rank: 24
score: 99.59978926809211
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . trim ( ) ; }
rank: 24
score: 99.59833374023438
patch: exp = str . substring ( dec CaMeL Pos + 1 , str . length ( ) ) ;
rank: 24
score: 99.57589382595486
patch: mant = str . substring ( dec CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 24
score: 99.55840743215461
patch: mant = str . substring ( str . length ( ) - exp CaMeL Pos ) ; }
rank: 25
score: 99.62009595788044
patch: mant = str . substring ( exp CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 25
score: 99.59730834960938
patch: mant = str . substring ( exp CaMeL Pos + 1 , str . length ( ) ) ;
rank: 25
score: 99.59669896175987
patch: mant = str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ; }
rank: 25
score: 99.58077239990234
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 25
score: 99.57004681755515
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; break ; }
rank: 25
score: 99.55738067626953
patch: mant = str . substring ( 0 , str . length ( ) ) ;
rank: 26
score: 99.6399658203125
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 26
score: 99.61820652173913
patch: exp = str . substring ( exp CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 26
score: 99.59559849330357
patch: mant = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 26
score: 99.591064453125
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; break ;
rank: 26
score: 99.57566833496094
patch: mant = str . substring ( 1 , exp CaMeL Pos - 1 ) ;
rank: 27
score: 99.64208984375
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 27
score: 99.63789367675781
patch: exp = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 27
score: 99.59071655273438
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos + 1 ) ;
rank: 27
score: 99.58978630514706
patch: mant = str . substring ( 0 , exp CaMeL Pos - 0 ) ; }
rank: 27
score: 99.57511901855469
patch: mant = str . substring ( 0 + 0 , exp CaMeL Pos ) ;
rank: 27
score: 99.56977844238281
patch: if ( exp CaMeL Pos > str . length ( ) - 1 ) {
rank: 27
score: 99.56613338694854
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos ) ; }
rank: 28
score: 99.64110218394886
patch: mant = str . substring ( dec CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 28
score: 99.6360196200284
patch: mant = str . substring ( exp CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 28
score: 99.618017578125
patch: exp = str . substring ( exp CaMeL Pos + 1 , str . length ( ) ) ;
rank: 28
score: 99.58827209472656
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; ; }
rank: 28
score: 99.57346888950893
patch: mant += str . substring ( 0 , exp CaMeL Pos ) ;
rank: 29
score: 99.63528103298611
patch: mant = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 29
score: 99.6146240234375
patch: dec = str . substring ( 0 , str . length ( ) - 1 ) ;
rank: 29
score: 99.58628743489584
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; ;
rank: 29
score: 99.56948673023896
patch: mant = str . substring ( exp CaMeL Pos 1 , exp CaMeL Pos ) ;
rank: 29
score: 99.55109001608456
patch: mant = str . substring ( exp CaMeL Pos ) . trim ( ) ; }
rank: 30
score: 99.6357952615489
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( exp CaMeL Pos + 1 ) ) ;
rank: 30
score: 99.63453369140625
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos - 1 ) ;
rank: 30
score: 99.58540852864583
patch: mant = str . substring ( str . trim ( ) , exp CaMeL Pos ) ;
rank: 30
score: 99.58285522460938
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ; }
rank: 30
score: 99.57734510633681
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . trim ( ) ;
rank: 30
score: 99.54521942138672
patch: if ( exp CaMeL Pos >= str . length ( ) - 1 ) {
rank: 30
score: 99.54235229492187
patch: mant = str . substring ( str . length ( ) - $NUMBER$ , exp CaMeL Pos ) ;
rank: 31
score: 99.61196501358695
patch: mant = str . substring ( dec CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 31
score: 99.5828857421875
patch: mant = str . substring ( exp CaMeL Pos / 1 , exp CaMeL Pos ) ;
rank: 31
score: 99.57340734145221
patch: mant = Math . max ( exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 31
score: 99.56343841552734
patch: mant = str . substring ( 0 , exp CaMeL Pos - $NUMBER$ ) ;
rank: 32
score: 99.63126373291016
patch: exp = str . substring ( 0 , dec CaMeL Pos - 1 ) ;
rank: 32
score: 99.62781871448864
patch: exp = str . substring ( dec CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 32
score: 99.53313530815973
patch: mant = str . substring ( dec CaMeL Pos - 1 , dec CaMeL Pos ) ;
rank: 32
score: 99.52911376953125
patch: mant = str . substring ( str . length ( ) - exp CaMeL Pos ) ; break ;
rank: 33
score: 99.577177734375
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 33
score: 99.57513427734375
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - 0 ) ;
rank: 33
score: 99.57197840073529
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + 1 ; }
rank: 33
score: 99.55940077039931
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos - 1 ) ;
rank: 33
score: 99.53288438585069
patch: mant = str . substring ( 0 , dec CaMeL Pos , exp CaMeL Pos ) ;
rank: 33
score: 99.52838745117188
patch: mant = str . substring ( str . length ( ) , exp CaMeL Pos ) ; break ;
rank: 34
score: 99.6247329711914
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + exp CaMeL Pos ) ;
rank: 34
score: 99.57305297851562
patch: mant = str . substring ( exp CaMeL Pos ? exp CaMeL Pos : exp CaMeL Pos ) ;
rank: 34
score: 99.56790321751645
patch: mant = str . substring ( 0 , exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 34
score: 99.55638292100694
patch: mant = str . substring ( 0 + exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 35
score: 99.62457953559027
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + exp CaMeL Pos ) ;
rank: 35
score: 99.57538132440476
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 35
score: 99.56925455729167
patch: mant = str . substring ( exp CaMeL Pos - str . length ( ) ) ;
rank: 35
score: 99.5556411743164
patch: mant = str . substring ( 0 , 0 , exp CaMeL Pos ) ;
rank: 35
score: 99.52240668402777
patch: mant = new String ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 36
score: 99.62142944335938
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos + 1 ) ;
rank: 36
score: 99.60652982271634
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; }
rank: 36
score: 99.57280040922619
patch: throw new Number CaMeL Format CaMeL Exception ( str + str . index CaMeL Of ( $STRING$ ) ) ;
rank: 36
score: 99.5670654296875
patch: mant = str . substring ( exp CaMeL Pos - 1 , str . length ( ) ) ;
rank: 36
score: 99.53266344572368
patch: mant = str . substring ( exp CaMeL Pos + exp CaMeL Pos + 1 ) ; }
rank: 36
score: 99.52191569010417
patch: if ( exp CaMeL Pos < str . length ( ) - 1 )
rank: 37
score: 99.57024536132812
patch: dec = str . substring ( dec CaMeL Pos + 1 , str . length ( ) ) ;
rank: 37
score: 99.56675809972427
patch: mant = ( byte ) str . substring ( 0 , exp CaMeL Pos ) ;
rank: 37
score: 99.55596923828125
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } ;
rank: 37
score: 99.51748046875
patch: mant = str . substring ( str . length ( ) - ) ;
rank: 38
score: 99.56721576891448
patch: exp = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 38
score: 99.55513305664063
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ; break ;
rank: 38
score: 99.54840850830078
patch: mant = str . substring ( 0 + exp CaMeL Pos + 1 ) ;
rank: 38
score: 99.52853232935855
patch: mant = str . substring ( 0 , exp CaMeL Pos + exp CaMeL Pos ) ; }
rank: 38
score: 99.518896484375
patch: dec = str . substring ( dec CaMeL Pos + 1 ) ; }
rank: 38
score: 99.5154296875
patch: mant = str . substring ( str . length ( ) - str . length ( ) ) ;
rank: 39
score: 99.61545632102273
patch: exp = str . substring ( exp CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 39
score: 99.61527506510417
patch: throw new Number CaMeL Format CaMeL Exception ( str . length ( ) - 1 ) ;
rank: 39
score: 99.5642578125
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos - 0 ) ;
rank: 39
score: 99.54721069335938
patch: mant = str . substring ( str . length ( ) - 0 ) ;
rank: 39
score: 99.52801192434211
patch: mant = str . substring ( exp CaMeL Pos ) . substring ( exp CaMeL Pos ) ;
rank: 39
score: 99.51513671875
patch: tmp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 40
score: 99.60567043138587
patch: exp = str . substring ( dec CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 40
score: 99.564013671875
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos - 0 ) ;
rank: 40
score: 99.55947875976562
patch: exp CaMeL Pos = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 40
score: 99.5509097450658
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; break ; }
rank: 40
score: 99.54102998621323
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ; ;
rank: 40
score: 99.52759602864583
patch: mant = str . substring ( 1 , exp CaMeL Pos ) ; }
rank: 40
score: 99.51431274414062
patch: dec = str . substring ( dec CaMeL Pos ) ;
rank: 41
score: 99.61209445529514
patch: exp = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 41
score: 99.5623550415039
patch: mant = ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 41
score: 99.55800559303977
patch: mant = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ; }
rank: 41
score: 99.54962768554688
patch: mant = str . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ; break ;
rank: 41
score: 99.53652954101562
patch: mant = str . substring ( 0 , 1 ) ;
rank: 41
score: 99.52742084703948
patch: mant = str . substring ( exp CaMeL Pos + exp CaMeL Pos - 1 ) ; }
rank: 41
score: 99.51492745535714
patch: mant = mant . substring ( 0 , exp CaMeL Pos ) ;
rank: 42
score: 99.60953979492187
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos + 1 ) ;
rank: 42
score: 99.55623779296874
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 42
score: 99.55530894886364
patch: throw new Number CaMeL Format CaMeL Exception ( str + str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 42
score: 99.549560546875
patch: mant = Math . max ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 42
score: 99.53470187717014
patch: mant = str . substring ( exp CaMeL Pos - 1 - exp CaMeL Pos ) ;
rank: 42
score: 99.51470588235294
patch: mant = ( int ) str . substring ( 0 , exp CaMeL Pos ) ;
rank: 42
score: 99.51095581054688
patch: dec = str . substring ( 0 , dec CaMeL Pos + 1 ) ;
rank: 43
score: 99.55523274739583
patch: exp = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 43
score: 99.52752278645833
patch: mant = str . substring ( 0 , exp CaMeL Pos - ) ;
rank: 44
score: 99.60601251775569
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ;
rank: 44
score: 99.60506184895833
patch: throw new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 44
score: 99.54442681206598
patch: mant = str . trim ( ) . substring ( 0 , exp CaMeL Pos ) ;
rank: 44
score: 99.52438693576389
patch: mant = str . substring ( $STRING$ . length ( ) - exp CaMeL Pos ) ;
rank: 44
score: 99.51510620117188
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; } }
rank: 45
score: 99.6046142578125
patch: throw new Number CaMeL Format CaMeL Exception ( str + str . length ( ) - 1 ) ;
rank: 45
score: 99.55320434570312
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) + 1 ;
rank: 45
score: 99.54353841145833
patch: mant = str . index CaMeL Of ( $STRING$ ) ;
rank: 45
score: 99.52409144810268
patch: str = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 45
score: 99.51495002297794
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; } break ;
rank: 46
score: 99.6027195142663
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( dec CaMeL Pos + 1 ) ) ;
rank: 46
score: 99.54962158203125
patch: mant = str . substring ( 0 + exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 46
score: 99.54210707720588
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } else {
rank: 46
score: 99.5240249633789
patch: mant += str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 46
score: 99.50618489583333
patch: mant += str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 46
score: 99.50527615017361
patch: mant = str . substring ( str . length ( ) - 1 ) ; break ;
rank: 47
score: 99.60316162109375
patch: exp = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos - 1 ) ;
rank: 47
score: 99.60267578125
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ) ;
rank: 47
score: 99.51534271240234
patch: mant = str . substring ( exp CaMeL Pos - 1 , 1 ) ;
rank: 47
score: 99.5081787109375
patch: mant = str . substring ( exp CaMeL Pos + 1 ) . trim ( ) ;
rank: 47
score: 99.50617532169117
patch: return create CaMeL Long ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 47
score: 99.50325927734374
patch: mant = str . substring ( str . trim ( ) . length ( ) - 1 ) ;
rank: 48
score: 99.59888373480902
patch: mant = str . substring ( 0 , str . length ( ) + 1 ) ;
rank: 48
score: 99.55197010869566
patch: mant = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 48
score: 99.54562377929688
patch: mant = str . substring ( exp CaMeL Pos / 1 , exp CaMeL Pos - 1 ) ;
rank: 48
score: 99.51454671223958
patch: mant = str . substring ( 0 , 0 ) ;
rank: 48
score: 99.50738055889423
patch: return str . substring ( 0 , exp CaMeL Pos ) ;
rank: 48
score: 99.50514221191406
patch: mant = str . substring ( dec CaMeL Pos + 1 , 0 ) ;
rank: 49
score: 99.59698486328125
patch: exp = str . substring ( 0 , str . length ( ) + 1 ) ;
rank: 49
score: 99.58676979758523
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 49
score: 99.55128173828125
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } else
rank: 49
score: 99.537353515625
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; } }
rank: 49
score: 99.50571017795139
patch: mant = str . substring ( exp CaMeL Pos + exp CaMeL Pos ) ; break ;
rank: 49
score: 99.50345009251645
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ; }
rank: 49
score: 99.5010986328125
patch: mant = mant . substring ( str . length ( ) - 1 , exp CaMeL Pos ) ;
rank: 50
score: 99.59854736328126
patch: mant = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos - 1 ) ;
rank: 50
score: 99.58676486545139
patch: exp = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 50
score: 99.54977898848684
patch: dec = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 50
score: 99.54403347439236
patch: mant = str . substring ( exp CaMeL Pos - $NUMBER$ , exp CaMeL Pos ) ;
rank: 50
score: 99.50942993164062
patch: mant = str . substring ( $NUMBER$ , exp CaMeL Pos - 1 ) ;
rank: 50
score: 99.50518477590461
patch: mant = str . substring ( exp CaMeL Pos - 1 ) . trim ( ) ; }
rank: 50
score: 99.50333949497768
patch: mant = str . substring ( dec CaMeL Pos - 1 ) ;
rank: 51
score: 99.59313354492187
patch: try { mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 51
score: 99.54899458451705
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , str . length ( ) ) ;
rank: 51
score: 99.53488159179688
patch: mant ; mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 51
score: 99.50762532552083
patch: mant = str . substring ( 0 , exp CaMeL Pos 1 ) ;
rank: 51
score: 99.4967041015625
patch: mant = str . substring ( str . length ( ) - exp CaMeL Pos + 1 ) ;
rank: 52
score: 99.58489379882812
patch: try { dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 52
score: 99.54267035590277
patch: mant = mant . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 52
score: 99.5027214499081
patch: return create CaMeL Long ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 52
score: 99.49713812934027
patch: mant = str . substring ( 0 , exp CaMeL Pos + exp CaMeL Pos ) ;
rank: 52
score: 99.49659559461806
patch: mant = ( int ) str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 53
score: 99.58463745117187
patch: dec = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ;
rank: 53
score: 99.5478271484375
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } }
rank: 53
score: 99.54261610243056
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos + 1 ) ;
rank: 53
score: 99.53021918402777
patch: mant = str . substring ( exp CaMeL Pos + $NUMBER$ , exp CaMeL Pos ) ;
rank: 53
score: 99.50562201605902
patch: mant += str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 53
score: 99.49529708059211
patch: mant = str . substring ( exp CaMeL Pos + exp CaMeL Pos ) ; break ; }
rank: 54
score: 99.59047629616477
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ;
rank: 54
score: 99.58932495117188
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 54
score: 99.58421020507812
patch: dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ;
rank: 54
score: 99.54683837890624
patch: mant = str . substring ( 0 , dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 54
score: 99.54194946289063
patch: mant = ( str . substring ( 0 , exp CaMeL Pos ) . trim ( ) ) ;
rank: 54
score: 99.52846165707237
patch: mant = str . trim ( ) . substring ( 0 , exp CaMeL Pos ) ; }
rank: 54
score: 99.50551350911458
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos - 1 ) ;
rank: 54
score: 99.5013786764706
patch: return create CaMeL Integer ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 54
score: 99.49468994140625
patch: return str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 54
score: 99.49186876085069
patch: mant = str . substring ( exp CaMeL Pos + exp CaMeL Pos - 1 ) ;
rank: 55
score: 99.58915783110119
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , dec CaMeL Pos ) ) ;
rank: 55
score: 99.53948211669922
patch: try { mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 55
score: 99.52803308823529
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } * /
rank: 55
score: 99.50503540039062
patch: mant = str . substring ( exp CaMeL Pos - 1 + 1 ) ;
rank: 56
score: 99.5883984375
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ) ;
rank: 56
score: 99.5828857421875
patch: exp = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos + 1 ) ;
rank: 56
score: 99.54622395833333
patch: dec = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 56
score: 99.53424072265625
patch: mant = str . substring ( 0 , exp CaMeL Pos * exp CaMeL Pos ) ;
rank: 56
score: 99.50464630126953
patch: mant = str . substring ( 0 - exp CaMeL Pos - 1 ) ;
rank: 56
score: 99.49784088134766
patch: mant = str . char CaMeL At ( dec CaMeL Pos + 1 ) ;
rank: 56
score: 99.49077497209821
patch: mant = str . substring ( exp CaMeL Pos ) ; } }
rank: 57
score: 99.5860011888587
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 57
score: 99.53392333984375
patch: mant = ( str . substring ( 0 , exp CaMeL Pos ) , exp CaMeL Pos ) ;
rank: 57
score: 99.52455049402573
patch: mant ; } mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 57
score: 99.50360870361328
patch: mant = str . substring ( 0 + exp CaMeL Pos - 0 ) ;
rank: 57
score: 99.49722290039062
patch: mant = str . substring ( dec CaMeL Pos + 1 + 1 ) ;
rank: 57
score: 99.49127875434027
patch: mant = new Integer ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 57
score: 99.48734537760417
patch: mant = str . substring ( exp CaMeL Pos + exp CaMeL Pos + 1 ) ;
rank: 58
score: 99.585693359375
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( exp CaMeL Pos ) ) ;
rank: 58
score: 99.5449451264881
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str . index CaMeL Of ( $STRING$ ) ) ;
rank: 58
score: 99.52264045266544
patch: mant ; mant = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 58
score: 99.50310601128473
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; mant = 0 ;
rank: 58
score: 99.49571940104167
patch: exp = str . substring ( dec CaMeL Pos + 1 ) ; }
rank: 59
score: 99.58481667258523
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos + 1 ) ) ; }
rank: 59
score: 99.58069719587054
patch: dec = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 59
score: 99.5327880859375
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos - $NUMBER$ ) ;
rank: 59
score: 99.51931923314145
patch: mant = str . substring ( exp CaMeL Pos + $NUMBER$ , exp CaMeL Pos ) ; }
rank: 59
score: 99.50297037760417
patch: mant = str . substring ( 0 , exp CaMeL Pos ? 1 : 0 ) ;
rank: 59
score: 99.49508666992188
patch: mant = str . substring ( dec CaMeL Pos + 1 ) ; break ;
rank: 59
score: 99.48573303222656
patch: mant = str . substring ( exp CaMeL Pos - 1 ) ; break ;
rank: 60
score: 99.58062133789062
patch: try { mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 60
score: 99.51914625901442
patch: mant = str . substring ( exp CaMeL Pos + ) ;
rank: 60
score: 99.49485868566177
patch: return create CaMeL Integer ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 60
score: 99.48798828125
patch: mant = str . substring ( str . length ( ) + 1 , exp CaMeL Pos ) ;
rank: 61
score: 99.50096299913194
patch: mant = 0 ; mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 61
score: 99.49480438232422
patch: dec = str . substring ( 0 , dec CaMeL Pos - 1 ) ;
rank: 61
score: 99.48680419921875
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; mant = exp CaMeL Pos ;
rank: 61
score: 99.4841667624081
patch: return str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 62
score: 99.57917865953948
patch: mant = str . substring ( 0 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 62
score: 99.524365234375
patch: mant = ( str . substring ( 0 , exp CaMeL Pos ) - exp CaMeL Pos ) ;
rank: 62
score: 99.5168392783717
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos + 1 ) ; }
rank: 62
score: 99.49981689453125
patch: mant = str . substring ( $STRING$ . length ( ) - 1 ) ;
rank: 62
score: 99.49461534288194
patch: dec = str . substring ( dec CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 62
score: 99.48636203342014
patch: mant = mant . substring ( str . length ( ) , exp CaMeL Pos ) ;
rank: 63
score: 99.54285481770833
patch: exp = str . substring ( 0 , dec CaMeL Pos ) ; }
rank: 63
score: 99.52432250976562
patch: mant = str . substring ( str . to CaMeL String ( ) . length ( ) ) ;
rank: 63
score: 99.51636460248162
patch: mant = Math . min ( exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 63
score: 99.49853515625
patch: mant = str . substring ( exp CaMeL Pos - $NUMBER$ ) ;
rank: 63
score: 99.49247233072917
patch: exp = str . substring ( dec CaMeL Pos ) ;
rank: 63
score: 99.48577270507812
patch: mant = str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ; break ;
rank: 63
score: 99.48027600740132
patch: mant = str . substring ( exp CaMeL Pos + 1 + exp CaMeL Pos ) ; }
rank: 64
score: 99.582763671875
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 64
score: 99.578857421875
patch: exp CaMeL Pos = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 64
score: 99.54189453125
patch: dec = str . substring ( 0 , dec CaMeL Pos ) ; }
rank: 64
score: 99.49710518973214
patch: mant = str . substring ( exp CaMeL Pos , 1 ) ;
rank: 64
score: 99.49196079799107
patch: if ( exp CaMeL Pos < str . length ( ) ) {
rank: 65
score: 99.57835083007812
patch: exp = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos - 1 ) ;
rank: 65
score: 99.51611328125
patch: mant = Math . min ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 65
score: 99.49675157335069
patch: mant = str . substring ( exp CaMeL Pos + 1 - exp CaMeL Pos ) ;
rank: 65
score: 99.49140167236328
patch: mant = str . substring ( dec CaMeL Pos , exp CaMeL Pos ) ;
rank: 65
score: 99.48350830078125
patch: mant = str . substring ( str . length ( ) , str . length ( ) ) ;
rank: 65
score: 99.47726619944854
patch: mant = str . substring ( exp CaMeL Pos - 1 ) ; break ; }
rank: 66
score: 99.52339252672698
patch: mant = str . substring ( 0 , str . substring ( exp CaMeL Pos ) ) ;
rank: 66
score: 99.5150146484375
patch: mant = str . index CaMeL Of ( $STRING$ , exp CaMeL Pos ) ;
rank: 66
score: 99.49094460227273
patch: mant = Number CaMeL Utils . create CaMeL Float ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 66
score: 99.482177734375
patch: mant = str . substring ( str . length ( ) - 1 ) ; break ; }
rank: 66
score: 99.47194310238487
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos - 1 ) ; }
rank: 67
score: 99.58131103515625
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + exp CaMeL Pos + $STRING$ ) ;
rank: 67
score: 99.52278859991776
patch: mant = str . substring ( str . substring ( exp CaMeL Pos - 1 ) ) ;
rank: 67
score: 99.51293073381696
patch: mant = str . char CaMeL At ( exp CaMeL Pos ) ;
rank: 67
score: 99.49358452690973
patch: mant = str . substring ( $STRING$ . length ( ) , exp CaMeL Pos ) ;
rank: 67
score: 99.48942057291667
patch: buf = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 67
score: 99.48009490966797
patch: { mant = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 68
score: 99.58001030815973
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + exp CaMeL Pos + $STRING$ ) ;
rank: 68
score: 99.57674560546874
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) + 1 ;
rank: 68
score: 99.53764011548913
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + str . index CaMeL Of ( $STRING$ ) ) ;
rank: 68
score: 99.52250840928819
patch: mant = Math . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 68
score: 99.48777142693015
patch: mant = str . substring ( dec CaMeL Pos + 1 ) ; } else {
rank: 68
score: 99.46991838727679
patch: mant = str . substring ( exp CaMeL Pos + ) ; }
rank: 69
score: 99.57993386008523
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( dec CaMeL Pos + 1 ) ) ; }
rank: 69
score: 99.57256758840461
patch: exp = str . substring ( 0 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 69
score: 99.51996926700367
patch: mant = ( String ) str . substring ( 0 , exp CaMeL Pos ) ;
rank: 69
score: 99.46843405330883
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } break ;
rank: 70
score: 99.57990373883929
patch: throw new Number CaMeL Format CaMeL Exception ( str , $STRING$ ) ;
rank: 70
score: 99.57444458007812
patch: exp CaMeL Pos = str . substring ( 0 , str . length ( ) - 1 ) ;
rank: 70
score: 99.51809853001645
patch: mant = str . substring ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 70
score: 99.51100560238487
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; ;
rank: 70
score: 99.49077292049633
patch: mant = str . substring ( 0 , exp CaMeL Pos exp CaMeL Pos ) ;
rank: 70
score: 99.48676147460938
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 70
score: 99.4666748046875
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos ) ; break ;
rank: 71
score: 99.5694580078125
patch: try { dec = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 71
score: 99.51700439453126
patch: mant = str . substring ( 0 , exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 71
score: 99.50966389973958
patch: mant = new Double ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 71
score: 99.4903564453125
patch: mant = str . substring ( 0 , exp CaMeL Pos + 0 ) ;
rank: 71
score: 99.4857406616211
patch: dec = str . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 71
score: 99.47743530273438
patch: mant = str . substring ( str . length ( ) - 1 ) . length ( ) ;
rank: 71
score: 99.46635437011719
patch: mant = str . substring ( exp CaMeL Pos ) . trim ( ) ;
rank: 72
score: 99.51636505126953
patch: mant = str . substring ( 0 , exp CaMeL Pos - mant ) ;
rank: 72
score: 99.50658501519098
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos + 1 ) ;
rank: 72
score: 99.48824055989583
patch: mant = str . substring ( 0 + exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 72
score: 99.47563340928819
patch: mant = ( String ) str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 73
score: 99.51619873046874
patch: mant = str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos + 1 ) ;
rank: 73
score: 99.50650024414062
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + str . length ( ) ;
rank: 73
score: 99.48497817095588
patch: return str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 73
score: 99.4743408203125
patch: mant = str . substring ( str . length ( ) ) ; }
rank: 73
score: 99.46345071231617
patch: mant = str . substring ( exp CaMeL Pos + 1 ) + 1 ; }
rank: 74
score: 99.51512451171875
patch: mant = mant . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos - 1 ) ;
rank: 74
score: 99.50609741210937
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; ; }
rank: 74
score: 99.48626708984375
patch: mant = str . substring ( str . length ( ) + exp CaMeL Pos ) ;
rank: 74
score: 99.47053608141448
patch: mant = mant . substring ( str . length ( ) , exp CaMeL Pos ) ; }
rank: 74
score: 99.46294844777961
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos - 1 ) ; }
rank: 75
score: 99.56355794270833
patch: exp = str . substring ( exp CaMeL Pos ) ;
rank: 75
score: 99.48471408420139
patch: mant = str . substring ( $STRING$ . trim ( ) . length ( ) ) ;
rank: 75
score: 99.48423365542763
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos < dec CaMeL Pos ) {
rank: 75
score: 99.46978759765625
patch: mant = str . substring ( 0 , exp CaMeL Pos , exp CaMeL Pos ) ; break ;
rank: 75
score: 99.46283365885417
patch: mant = str . char CaMeL At ( exp CaMeL Pos ) ; }
rank: 76
score: 99.5713421365489
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos + 1 ) + $STRING$ ) ;
rank: 76
score: 99.51438395182292
patch: mant = mant . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 76
score: 99.48470730251736
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ; break ;
rank: 76
score: 99.48076036241319
patch: exp = str . substring ( dec CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 76
score: 99.46847534179688
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ; } }
rank: 76
score: 99.46184339021382
patch: mant = str . substring ( exp CaMeL Pos . length ( ) - 1 ) ; }
rank: 77
score: 99.57032606336806
patch: return create CaMeL Long ( str . substring ( dec CaMeL Pos + 1 ) ) ;
rank: 77
score: 99.50513458251953
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; continue ;
rank: 77
score: 99.48462677001953
patch: str = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 77
score: 99.47966851128473
patch: mant = str . substring ( dec CaMeL Pos + 1 , last CaMeL Char ) ;
rank: 77
score: 99.4673828125
patch: mant = str . substring ( str . length ( ) , exp CaMeL Pos - 1 ) ;
rank: 77
score: 99.46077045641448
patch: mant = str . substring ( exp CaMeL Pos ) ; mant = exp CaMeL Pos ; }
rank: 78
score: 99.56999067826705
patch: return create CaMeL Long ( str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ) ;
rank: 78
score: 99.5627685546875
patch: try { exp = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 78
score: 99.47917175292969
patch: dec = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 78
score: 99.46661017922794
patch: return new Integer ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 78
score: 99.45940198396382
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ) ;
rank: 79
score: 99.5697085731908
patch: throw new Number CaMeL Format CaMeL Exception ( str . starts CaMeL With ( $STRING$ ) ) ;
rank: 79
score: 99.52379840353261
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str . index CaMeL Of ( $STRING$ ) + $STRING$ ) ;
rank: 79
score: 99.51088995682566
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ; ;
rank: 79
score: 99.48435465494792
patch: mant += str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 79
score: 99.4791030883789
patch: mant = str . substring ( dec CaMeL Pos , dec CaMeL Pos ) ;
rank: 79
score: 99.4663314819336
patch: mant = mant . substring ( str . length ( ) - 1 ) ;
rank: 79
score: 99.45930311414931
patch: return str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 80
score: 99.56208602241848
patch: dec = str . substring ( exp CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 80
score: 99.56084442138672
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 80
score: 99.5216064453125
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 80
score: 99.50936889648438
patch: mant = str . substring ( exp CaMeL Pos - $NUMBER$ , exp CaMeL Pos - 1 ) ;
rank: 80
score: 99.5032470703125
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 80
score: 99.48193359375
patch: mant = str . substring ( exp CaMeL Pos - 0 , 0 ) ;
rank: 80
score: 99.47861735026042
patch: sb = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 80
score: 99.45806477864583
patch: mant = str . substring ( exp CaMeL Pos ) + 1 ; }
rank: 81
score: 99.56160835597827
patch: dec = str . substring ( dec CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 81
score: 99.56016710069444
patch: exp CaMeL Pos = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 81
score: 99.50850219726563
patch: mant = str . substring ( 0 , str . trim ( ) . length ( ) ) ;
rank: 81
score: 99.47937689887152
patch: mant = str . substring ( exp CaMeL Pos - 0 - exp CaMeL Pos ) ;
rank: 81
score: 99.45784265854779
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; } else {
rank: 82
score: 99.51963588169643
patch: mant = str . substring ( dec CaMeL Pos + 1 , str . length ( ) ) ; }
rank: 82
score: 99.50760498046876
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 82
score: 99.50179290771484
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + 1 ;
rank: 82
score: 99.47794015066964
patch: mant = str . substring ( $STRING$ . length ( ) ) ;
rank: 82
score: 99.47747124565973
patch: s = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 82
score: 99.46365356445312
patch: mant = str . substring ( str . length ( ) + 0 , exp CaMeL Pos ) ;
rank: 82
score: 99.45747884114583
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; } return str ;
rank: 83
score: 99.55819091796874
patch: exp = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) + 1 ;
rank: 83
score: 99.51868785511364
patch: dec = str . substring ( dec CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 83
score: 99.49966430664062
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; * /
rank: 83
score: 99.47629616477273
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) && last CaMeL Char != $STRING$ ) {
rank: 83
score: 99.47626495361328
patch: mant = str . substring ( 0 , exp CaMeL Pos , 0 ) ;
rank: 83
score: 99.4630355834961
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } else
rank: 83
score: 99.45517147288604
patch: mant = str . substring ( exp CaMeL Pos * exp CaMeL Pos ) ; }
rank: 84
score: 99.55737915039063
patch: try { exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 84
score: 99.5065673828125
patch: mant = str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos - 0 ) ;
rank: 84
score: 99.47597927517361
patch: mant = str . substring ( 0 + 0 , exp CaMeL Pos - 1 ) ;
rank: 84
score: 99.47561209542411
patch: if ( exp CaMeL Pos >= str . length ( ) ) {
rank: 84
score: 99.4626220703125
patch: mant = mant . substring ( 0 , exp CaMeL Pos ) ; }
rank: 84
score: 99.44759114583333
patch: z = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 85
score: 99.47569274902344
patch: mant = str . substring ( exp CaMeL Pos - 0 , 1 ) ;
rank: 85
score: 99.47427707248264
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ , exp CaMeL Pos ) ;
rank: 85
score: 99.46239556206598
patch: { mant = str . substring ( 0 , exp CaMeL Pos ) ; break ; }
rank: 85
score: 99.44717746310764
patch: mant = str . substring ( exp CaMeL Pos . length ( ) - 1 ) ;
rank: 86
score: 99.50519120065789
patch: mant = str . substring ( str . append ( 0 , exp CaMeL Pos ) ) ;
rank: 86
score: 99.495849609375
patch: mant = str . index CaMeL Of ( $STRING$ ) ; }
rank: 86
score: 99.47520536534927
patch: mant = str . substring ( str . substring ( exp CaMeL Pos ) ) ;
rank: 86
score: 99.47379302978516
patch: mant = str . substring ( dec CaMeL Pos + 1 , 1 ) ;
rank: 86
score: 99.46174452039931
patch: mant = ( Integer ) str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 87
score: 99.560498046875
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( str . length ( ) - 1 ) ) ;
rank: 87
score: 99.55423583984376
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) + 1 ;
rank: 87
score: 99.50505719866071
patch: mant = str . substring ( exp CaMeL Pos / 1 ) ;
rank: 87
score: 99.47484673394098
patch: mant = str . substring ( exp CaMeL Pos - 1 + exp CaMeL Pos ) ;
rank: 87
score: 99.47113037109375
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) {
rank: 87
score: 99.46031996783088
patch: mant = ( Integer ) str . substring ( 0 , exp CaMeL Pos ) ;
rank: 87
score: 99.44326602711396
patch: return new Double ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 88
score: 99.51613547585227
patch: throw new Number CaMeL Format CaMeL Exception ( new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ) ;
rank: 88
score: 99.4939697265625
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; } ;
rank: 88
score: 99.47383880615234
patch: mant = str . substring ( 1 , exp CaMeL Pos - 0 ) ;
rank: 88
score: 99.43965657552083
patch: mant = str . substring ( 0 , exp CaMeL Pos + 1 ) ; break ;
rank: 89
score: 99.55399169921876
patch: dec = str . substring ( exp CaMeL Pos + 1 , str . length ( ) ) ;
rank: 89
score: 99.55167846679687
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos + 1 ) ;
rank: 89
score: 99.4937744140625
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } return exp CaMeL Pos ;
rank: 89
score: 99.47265625
patch: mant = str . substring ( exp CaMeL Pos - ) ;
rank: 89
score: 99.47059215198864
patch: exp = Number CaMeL Utils . create CaMeL Float ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 89
score: 99.43955485026042
patch: mant = str . substring ( exp CaMeL Pos + 1 + exp CaMeL Pos ) ;
rank: 90
score: 99.55698067801339
patch: throw new Number CaMeL Format CaMeL Exception ( str + str ) ;
rank: 90
score: 99.54863145616319
patch: exp CaMeL Pos = str . char CaMeL At ( exp CaMeL Pos + 1 ) ;
rank: 90
score: 99.50242309570312
patch: mant = str . substring ( 0 , exp CaMeL Pos ? exp CaMeL Pos : 0 ) ;
rank: 90
score: 99.49325222439236
patch: mant = Math . max ( str . length ( ) , exp CaMeL Pos ) ;
rank: 90
score: 99.47120884486607
patch: mant = str . substring ( exp CaMeL Pos - 0 ) ;
rank: 90
score: 99.45652669270834
patch: mant = str . substring ( str . length ( ) 1 ) ;
rank: 90
score: 99.438623046875
patch: mant = str . substring ( exp CaMeL Pos ) ; } break ;
rank: 91
score: 99.54848410866477
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos - dec CaMeL Pos ) ;
rank: 91
score: 99.50203857421874
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos - $STRING$ ) ;
rank: 91
score: 99.45619506835938
patch: mant = mant . substring ( str . length ( ) - 0 , exp CaMeL Pos ) ;
rank: 92
score: 99.55552606997283
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 92
score: 99.5508056640625
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos < str . length ( ) )
rank: 92
score: 99.50086669921875
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - $NUMBER$ ) ;
rank: 92
score: 99.49278349034927
patch: mant = str . substring ( 0 , exp CaMeL Pos + 0 ) ; }
rank: 92
score: 99.47017669677734
patch: mant = str . substring ( 0 , exp CaMeL Pos , mant ) ;
rank: 92
score: 99.46676296657986
patch: str = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 93
score: 99.54768880208333
patch: exp CaMeL Pos = str . substring ( 0 , dec CaMeL Pos - 1 ) ;
rank: 93
score: 99.513623046875
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } else
rank: 93
score: 99.50075073242188
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 93
score: 99.46659342447917
patch: if ( exp CaMeL Pos > str . length ( ) - 1 )
rank: 93
score: 99.43706916360294
patch: mant = str . substring ( exp CaMeL Pos + 1 + 1 ) ; }
rank: 94
score: 99.5494717684659
patch: dec = str . substring ( exp CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 94
score: 99.51351318359374
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } }
rank: 94
score: 99.50048828125
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ; ;
rank: 94
score: 99.46904161241319
patch: mant = mant ; mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 94
score: 99.45518663194444
patch: mant = str . substring ( 0 , str . length ( ) - $NUMBER$ ) ;
rank: 95
score: 99.54950561523438
patch: mant = str . substring ( dec CaMeL Pos + 1 ) + str . length ( ) ;
rank: 95
score: 99.54636840820312
patch: mant = str . substring ( dec CaMeL Pos + 1 ) . length ( ) - 1 ;
rank: 95
score: 99.51261596679687
patch: dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } }
rank: 95
score: 99.50047607421875
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) . trim ( ) ;
rank: 95
score: 99.46741485595703
patch: mant = str . substring ( 0 + exp CaMeL Pos - $NUMBER$ ) ;
rank: 95
score: 99.46595764160156
patch: if ( exp CaMeL Pos <= str . length ( ) - 1 ) {
rank: 95
score: 99.45367110402961
patch: mant = str . substring ( exp CaMeL Pos - $NUMBER$ , exp CaMeL Pos ) ; }
rank: 95
score: 99.43543198529412
patch: mant = str . char CaMeL At ( exp CaMeL Pos + 1 ) ; }
rank: 96
score: 99.54914936266448
patch: throw new Number CaMeL Format CaMeL Exception ( str . index CaMeL Of ( $STRING$ ) ) ;
rank: 96
score: 99.5000064247533
patch: mant = str . substring ( exp CaMeL Pos - - 1 , exp CaMeL Pos ) ;
rank: 96
score: 99.43448638916016
patch: mant = str . substring ( exp CaMeL Pos / exp CaMeL Pos ) ;
rank: 97
score: 99.54885864257812
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( exp CaMeL Pos + 1 ) ) ; }
rank: 97
score: 99.511044921875
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + $STRING$ ;
rank: 97
score: 99.49922943115234
patch: mant = str . substring ( exp CaMeL Pos * exp CaMeL Pos ) ;
rank: 97
score: 99.46702067057292
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; mant = mant ;
rank: 97
score: 99.46406555175781
patch: mant = str . substring ( dec CaMeL Pos + 1 ) + 1 ;
rank: 98
score: 99.54874320652173
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( dec CaMeL Pos + 1 ) + $STRING$ ) ;
rank: 98
score: 99.4991943359375
patch: mant = str . substring ( exp CaMeL Pos ? 1 : 0 , exp CaMeL Pos ) ;
rank: 98
score: 99.46514129638672
patch: mant = str . substring ( 1 , exp CaMeL Pos + 1 ) ;
rank: 98
score: 99.46397705078125
patch: mant = str . substring ( ! Character . is CaMeL Digit ( last CaMeL Char ) ) ;
rank: 99
score: 99.548232421875
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 99
score: 99.497216796875
patch: mant = str . substring ( 0 , exp CaMeL Pos * str . length ( ) ) ;
rank: 99
score: 99.48688821231617
patch: mant = str . substring ( 0 , 0 , exp CaMeL Pos ) ; }
rank: 99
score: 99.45036485460069
patch: mant = str . substring ( 0 , str . length ( ) - 0 ) ;
rank: 99
score: 99.43075900607639
patch: str = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 100
score: 99.547607421875
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , exp CaMeL Pos + 1 ) ) ;
rank: 100
score: 99.54326036241319
patch: exp CaMeL Pos = str . substring ( 0 , dec CaMeL Pos + 1 ) ;
rank: 100
score: 99.54206194196429
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 1 , exp CaMeL Pos ) ) ;
rank: 100
score: 99.4971923828125
patch: mant = str . substring ( 0 , exp CaMeL Pos / 1 ) ;
rank: 100
score: 99.4868408203125
patch: mant = str . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ; } }
rank: 100
score: 99.46345520019531
patch: mant = str . substring ( 0 + 1 , exp CaMeL Pos ) ;
rank: 100
score: 99.46258544921875
patch: d = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 100
score: 99.44916130514706
patch: mant = str . substring ( str . length ( ) - $NUMBER$ ) ; }
rank: 100
score: 99.42972140842014
patch: mant = str ; mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 101
score: 99.54646301269531
patch: try { mant = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 101
score: 99.50882761101974
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + exp CaMeL Pos ) ; }
rank: 101
score: 99.48675537109375
patch: mant ; mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 101
score: 99.46153564453125
patch: ! Character . is CaMeL Digit ( last CaMeL Char ) && last CaMeL Char != $STRING$ ) {
rank: 101
score: 99.46119689941406
patch: mant = str . substring ( str . length ( ) , 1 ) ;
rank: 101
score: 99.44898139105902
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } return mant ;
rank: 101
score: 99.42945692274306
patch: mant = str . substring ( exp CaMeL Pos ) ; } else { return str ;
rank: 102
score: 99.54604704483695
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( exp CaMeL Pos - 1 ) ) ;
rank: 102
score: 99.54150390625
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - dec CaMeL Pos ) ;
rank: 102
score: 99.50747501148896
patch: mant = str . substring ( 0 , dec CaMeL Pos + 1 ) ; }
rank: 102
score: 99.4607795266544
patch: mant = str . substring ( exp CaMeL Pos 0 , exp CaMeL Pos ) ;
rank: 102
score: 99.4605712890625
patch: mant = str . substring ( ! str . length ( ) - 1 ) ;
rank: 102
score: 99.42925347222223
patch: mant = str . trim ( ) ; exp CaMeL Pos = exp CaMeL Pos ; }
rank: 103
score: 99.545517578125
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( exp CaMeL Pos + 1 ) + $STRING$ ) ;
rank: 103
score: 99.54138901654412
patch: mant = str . substring ( 0 , dec CaMeL Pos - 1 ) ; }
rank: 103
score: 99.5065673828125
patch: mant = str . char CaMeL At ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 103
score: 99.48651444284539
patch: mant = new str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 103
score: 99.460693359375
patch: this . mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 103
score: 99.46042887369792
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) {
rank: 103
score: 99.42742156982422
patch: mant = str . char CaMeL At ( exp CaMeL Pos ) ; break ;
rank: 104
score: 99.541015625
patch: exp CaMeL Pos = str . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 104
score: 99.50625212296195
patch: exp = create CaMeL Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) , exp CaMeL Pos ) ;
rank: 104
score: 99.49376831054687
patch: mant = str . substring ( 0 , exp CaMeL Pos ? exp CaMeL Pos : 1 ) ;
rank: 104
score: 99.45787811279297
patch: mant = str . substring ( 0 - 0 , exp CaMeL Pos ) ;
rank: 105
score: 99.54436645507812
patch: throw new Number CaMeL Format CaMeL Exception ( str , str . length ( ) - 1 ) ;
rank: 105
score: 99.50601196289062
patch: dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } else
rank: 105
score: 99.49312337239583
patch: mant = mant . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 105
score: 99.44742160373264
patch: return new Integer ( str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 105
score: 99.42610677083333
patch: mant = str . substring ( exp CaMeL Pos + exp CaMeL Pos ) ; } }
rank: 106
score: 99.54330078125
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { exp = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 106
score: 99.53912963867188
patch: mant = str . substring ( exp CaMeL Pos + 1 ) . length ( ) - 1 ;
rank: 106
score: 99.5054219563802
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 106
score: 99.49217224121094
patch: mant = str . substring ( exp CaMeL Pos - 1 , 0 ) ;
rank: 106
score: 99.45929633246527
patch: mant = str . substring ( ! str . starts CaMeL With ( $STRING$ ) ) ;
rank: 106
score: 99.45686848958333
patch: mant = str . substring ( exp CaMeL Pos - 0 + exp CaMeL Pos ) ;
rank: 106
score: 99.44674343532986
patch: mant = str . substring ( str . length ( ) * exp CaMeL Pos ) ;
rank: 106
score: 99.42560492621527
patch: mant = str ; mant = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 107
score: 99.54325534986413
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 107
score: 99.53326970880681
patch: return create CaMeL Long ( str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ) ;
rank: 107
score: 99.49205322265625
patch: mant = str . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos - 1 ) ;
rank: 107
score: 99.48401692708333
patch: mant = new str . substring ( 0 , exp CaMeL Pos ) ;
rank: 107
score: 99.45732770647321
patch: if ( exp CaMeL Pos > str . length ( ) ) {
rank: 107
score: 99.45553768382354
patch: mant = str . substring ( 0 + exp CaMeL Pos - 1 ) ; ;
rank: 107
score: 99.44591567095588
patch: return new Character ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 108
score: 99.50308837890626
patch: mant = str . substring ( dec CaMeL Pos , str . length ( ) - 1 ) ;
rank: 108
score: 99.4912109375
patch: mant = str . substring ( 0 , exp CaMeL Pos + 0 , exp CaMeL Pos ) ;
rank: 108
score: 99.4568359375
patch: last CaMeL Char = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 108
score: 99.45490180121527
patch: mant = str . substring ( 1 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 109
score: 99.54201171875
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 109
score: 99.49026489257812
patch: try { mant = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 109
score: 99.45676676432292
patch: dec = str . substring ( dec CaMeL Pos - 1 , dec CaMeL Pos ) ;
rank: 109
score: 99.45456271701389
patch: mant = str . substring ( ( exp CaMeL Pos - 1 ) - 1 ) ;
rank: 109
score: 99.44513260690789
patch: mant = ( int ) str . substring ( str . length ( ) - 1 ) ;
rank: 109
score: 99.42423741957721
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 110
score: 99.53336958451705
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos + 1 ) ;
rank: 110
score: 99.53037516276042
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + exp CaMeL Pos - 1 ) ;
rank: 110
score: 99.50178666548295
patch: exp = new Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) , exp CaMeL Pos ) ;
rank: 110
score: 99.4901123046875
patch: mant = str . substring ( exp CaMeL Pos ] , exp CaMeL Pos ) ;
rank: 110
score: 99.45623168945312
patch: mant = str . substring ( ! Character . is CaMeL Digit ( exp CaMeL Pos ) ) ;
rank: 110
score: 99.44495985243056
patch: mant = mant . substring ( str . length ( ) - exp CaMeL Pos ) ;
rank: 110
score: 99.42420959472656
patch: final int exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) ;
rank: 111
score: 99.53263716264205
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos - 1 ) ;
rank: 111
score: 99.5288418856534
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , dec CaMeL Pos ) ) ; }
rank: 111
score: 99.5014415922619
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 111
score: 99.49000244140625
patch: mant = str . substring ( exp CaMeL Pos - str . length ( ) - 1 ) ;
rank: 111
score: 99.45585493607955
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 111
score: 99.45353190104167
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; mant = $STRING$ ;
rank: 111
score: 99.42350499770221
patch: return new Double ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 112
score: 99.48977481617646
patch: mant . append ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 112
score: 99.47920949835526
patch: mant = Math . max ( str . length ( ) , exp CaMeL Pos ) ; }
rank: 112
score: 99.45584869384766
patch: mant = str . substring ( dec CaMeL Pos + 1 , mant ) ;
rank: 112
score: 99.45338541666666
patch: mant = str . substring ( 0 + exp CaMeL Pos - ) ;
rank: 112
score: 99.44362386067708
patch: return str . substring ( str . length ( ) - exp CaMeL Pos ) ; }
rank: 112
score: 99.42348904079861
patch: mant = str . substring ( exp CaMeL Pos - 1 ) . trim ( ) ;
rank: 113
score: 99.52760716488487
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos ) ) ;
rank: 113
score: 99.48848266601563
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos - $NUMBER$ ) ;
rank: 113
score: 99.45534261067708
patch: tmp = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 113
score: 99.45303548177084
patch: mant = str . substring ( 0 , exp CaMeL Pos ] ) ;
rank: 113
score: 99.44347381591797
patch: mant = str . substring ( str . length ( ) + $NUMBER$ ) ;
rank: 114
score: 99.53096516927083
patch: exp = str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 114
score: 99.52662295386905
patch: mant = str . substring ( exp CaMeL Pos + 1 ) . index CaMeL Of ( $STRING$ ) ;
rank: 114
score: 99.50092163085938
patch: mant = str . substring ( 0 , dec CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 114
score: 99.48846114309211
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos - ) ;
rank: 114
score: 99.4769287109375
patch: mant = str . substring ( 0 , exp CaMeL Pos + 1 ) . trim ( ) ;
rank: 114
score: 99.45498996310764
patch: c = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 114
score: 99.45199584960938
patch: mant += str . substring ( 0 + exp CaMeL Pos - 1 ) ;
rank: 114
score: 99.42203979492187
patch: mant = str . trim ( ) ; }
rank: 115
score: 99.53633449388587
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( exp CaMeL Pos ) + $STRING$ ) ;
rank: 115
score: 99.48751491970486
patch: mant = str . substring ( str . iterator ( ) . length ( ) ) ;
rank: 115
score: 99.45126342773438
patch: mant = str . substring ( exp CaMeL Pos - 1 - 1 ) ;
rank: 115
score: 99.42035590277777
patch: mant = new Big CaMeL Integer ( str . substring ( exp CaMeL Pos ) ) ;
rank: 116
score: 99.53429497612848
patch: throw new Number CaMeL Format CaMeL Exception ( str . to CaMeL String ( ) ) ;
rank: 116
score: 99.52548828125
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str . length ( ) - 1 ) ;
rank: 116
score: 99.49997877038044
patch: mant = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + $STRING$ ;
rank: 116
score: 99.4873291015625
patch: mant = Math . substring ( 0 , exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 116
score: 99.47545668658088
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; ;
rank: 116
score: 99.45269097222223
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos < dec CaMeL Pos )
rank: 116
score: 99.45113372802734
patch: mant = str . substring ( exp CaMeL Pos + 1 , 1 ) ;
rank: 116
score: 99.44188232421875
patch: mant = str . substring ( 0 , exp CaMeL Pos , str . length ( ) ) ;
rank: 116
score: 99.41798231336806
patch: mant = new Big CaMeL Decimal ( str . substring ( exp CaMeL Pos ) ) ;
rank: 117
score: 99.52490234375
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + exp CaMeL Pos - 1 ) ;
rank: 117
score: 99.48699340820312
patch: mant = ( str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ) ;
rank: 117
score: 99.47524685329861
patch: mant = Math . min ( str . length ( ) , exp CaMeL Pos ) ;
rank: 117
score: 99.44151395909927
patch: mant = ( int ) str . substring ( exp CaMeL Pos - 1 ) ;
rank: 117
score: 99.41745174632354
patch: exp CaMeL Pos = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 118
score: 99.53331409801136
patch: return create CaMeL Integer ( str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ) ;
rank: 118
score: 99.52794189453125
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 118
score: 99.48636881510417
patch: str = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 118
score: 99.47434488932292
patch: mant = str . substring ( 0 , exp CaMeL Pos - 0 ) ; break ;
rank: 118
score: 99.45042588975694
patch: mant = str . substring ( exp CaMeL Pos , str . length ( ) ) ;
rank: 118
score: 99.44071044921876
patch: return str . substring ( str . length ( ) - 1 , exp CaMeL Pos ) ; }
rank: 119
score: 99.52718777126736
patch: mant = str . substring ( exp CaMeL Pos + 1 , last CaMeL Char ) ;
rank: 119
score: 99.48618774414062
patch: mant = str . substring ( str . trim ( ) . length ( ) - 0 ) ;
rank: 119
score: 99.45136575137867
patch: exp = str . substring ( dec CaMeL Pos + 1 ) ; } else {
rank: 119
score: 99.45036969866071
patch: mant = str . substring ( 0 - exp CaMeL Pos ) ;
rank: 119
score: 99.44066097861842
patch: mant = str . substring ( str . length ( ) 1 , exp CaMeL Pos ) ;
rank: 119
score: 99.41705681295956
patch: mant = str . substring ( exp CaMeL Pos - 1 ) ; } break ;
rank: 120
score: 99.45111405222039
patch: dec = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ; }
rank: 120
score: 99.45013834635417
patch: mant = str . substring ( 0 , exp CaMeL Pos + ) ;
rank: 120
score: 99.43987426757812
patch: mant = str . substring ( str . length ( ) - exp CaMeL Pos - $NUMBER$ ) ;
rank: 121
score: 99.4990946451823
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; }
rank: 121
score: 99.47215924944196
patch: mant = Math . max ( 0 , exp CaMeL Pos ) ;
rank: 121
score: 99.4510498046875
patch: dec = str . substring ( 0 , dec CaMeL Pos , exp CaMeL Pos ) ;
rank: 121
score: 99.41624540441177
patch: mant = str . trim ( ) . substring ( exp CaMeL Pos ) ; }
rank: 122
score: 99.53160264756944
patch: throw new Number CaMeL Format CaMeL Exception ( str + str . length ( ) ) ;
rank: 122
score: 99.52283296130952
patch: throw ( Number CaMeL Format CaMeL Exception ) new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 122
score: 99.48572540283203
patch: mant = Math . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 122
score: 99.47196044921876
patch: throw ( Number CaMeL Format CaMeL Exception ) str . substring ( 0 , exp CaMeL Pos ) ;
rank: 122
score: 99.44980197482639
patch: mant = str . substring ( exp CaMeL Pos && exp CaMeL Pos > 0 ) ;
rank: 122
score: 99.4161376953125
patch: mant = str . substring ( 1 , exp CaMeL Pos ) ; break ;
rank: 123
score: 99.52998657226563
patch: exp = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos + 1 ) ;
rank: 123
score: 99.48472290039062
patch: mant = str . substring ( str . trim ( ) , exp CaMeL Pos - 1 ) ;
rank: 123
score: 99.44778103298611
patch: mant = $STRING$ . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 123
score: 99.43864889705883
patch: mant = str . substring ( $NUMBER$ , exp CaMeL Pos ) ; break ; }
rank: 124
score: 99.52991832386364
patch: mant = str . substring ( dec CaMeL Pos + 1 , str . length ( ) + 1 ) ;
rank: 124
score: 99.51883138020834
patch: mant = new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 124
score: 99.49725632440476
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } else {
rank: 124
score: 99.47117213199013
patch: throw ( Number CaMeL Format CaMeL Exception ) new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 124
score: 99.44934800091912
patch: mant = str . substring ( 0 , exp CaMeL Pos - - 1 ) ;
rank: 124
score: 99.44679661800987
patch: return create CaMeL Big CaMeL Integer ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 125
score: 99.52833251953125
patch: exp = str . substring ( dec CaMeL Pos + 1 ) + str . length ( ) ;
rank: 125
score: 99.52531433105469
patch: mant = str . substring ( exp CaMeL Pos + 1 , 0 ) ;
rank: 125
score: 99.51878051757812
patch: dec = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos + 1 ) ;
rank: 125
score: 99.49713456003289
patch: mant += str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 125
score: 99.48287527901786
patch: mant = Math . substring ( 0 , exp CaMeL Pos ) ;
rank: 125
score: 99.47114393446181
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } return str ;
rank: 125
score: 99.44817437065973
patch: mant += str . substring ( str . length ( ) - exp CaMeL Pos ) ;
rank: 125
score: 99.44633653428819
patch: p = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 125
score: 99.41485236672794
patch: mant = str . substring ( exp CaMeL Pos / exp CaMeL Pos ) ; }
rank: 126
score: 99.52711791992188
patch: exp = str . substring ( dec CaMeL Pos + 1 ) . to CaMeL String ( ) ;
rank: 126
score: 99.52493286132812
patch: mant = str . char CaMeL At ( exp CaMeL Pos + 1 ) ;
rank: 126
score: 99.51850818452381
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos - 1 ) ) ;
rank: 126
score: 99.49672154017857
patch: dec = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 126
score: 99.469580078125
patch: mant = new ; exp CaMeL Pos = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 126
score: 99.44808523995536
patch: mant += str . substring ( exp CaMeL Pos - 1 ) ;
rank: 126
score: 99.446044921875
patch: mant = str . char CaMeL At ( str . length ( ) - 1 ) ;
rank: 126
score: 99.41411675347223
patch: mant = $STRING$ . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 127
score: 99.51849975585938
patch: dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos + 1 ) ;
rank: 127
score: 99.4967041015625
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 , str . length ( ) ) ;
rank: 127
score: 99.47984008789062
patch: mant = str . substring ( 0 - exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 127
score: 99.46918402777777
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; ; }
rank: 127
score: 99.44619750976562
patch: mant = str . substring ( 1 + exp CaMeL Pos - 1 ) ;
rank: 127
score: 99.41410997178819
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; } return null ;
rank: 128
score: 99.52600628396739
patch: if ( exp CaMeL Pos <= dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 128
score: 99.4687744140625
patch: mant = str . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos + 1 ) ;
rank: 128
score: 99.44599465762867
patch: mant = str . substring ( $STRING$ . equals ( exp CaMeL Pos ) ) ;
rank: 128
score: 99.41363166360294
patch: mant = str ; mant = str . substring ( exp CaMeL Pos ) ; }
rank: 129
score: 99.51740180121527
patch: dec = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 129
score: 99.49627685546875
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str + $STRING$ ) ;
rank: 129
score: 99.47882080078125
patch: mant = mant . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 129
score: 99.46785888671874
patch: mant = str . substring ( exp CaMeL Pos + exp CaMeL Pos + exp CaMeL Pos ) ;
rank: 129
score: 99.44566999162946
patch: mant = str . substring ( start , exp CaMeL Pos ) ;
rank: 129
score: 99.44453938802083
patch: mant = str . substring ( dec CaMeL Pos + $NUMBER$ , exp CaMeL Pos ) ;
rank: 129
score: 99.43473985460069
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . length ( ) ;
rank: 129
score: 99.41333685980902
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; return str ; }
rank: 130
score: 99.52330078125
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { exp = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 130
score: 99.5216552734375
patch: mant = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos + 1 ) ;
rank: 130
score: 99.5170261548913
patch: mant = is CaMeL All CaMeL Zeros ( mant ) && is CaMeL All CaMeL Zeros ( exp CaMeL Pos ) ;
rank: 130
score: 99.4945652173913
patch: throw new Number CaMeL Format CaMeL Exception ( str + str . index CaMeL Of ( $STRING$ ) + $STRING$ ) ;
rank: 130
score: 99.46778564453125
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; * /
rank: 130
score: 99.44551355698529
patch: mant = str . substring ( str . length ( ) - 1 ) ; ;
rank: 130
score: 99.44423421223958
patch: mant = str . substring ( 0 , dec CaMeL Pos , dec CaMeL Pos ) ;
rank: 130
score: 99.43453543526786
patch: mant = str . append ( 0 , exp CaMeL Pos ) ;
rank: 130
score: 99.41306849888393
patch: return str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 131
score: 99.52317212975544
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , dec CaMeL Pos + 1 ) ) ;
rank: 131
score: 99.52149547230114
patch: exp = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - dec CaMeL Pos ) ;
rank: 131
score: 99.51638793945312
patch: try { dec = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 131
score: 99.47877807617188
patch: mant = ( str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ) ;
rank: 131
score: 99.44489203559027
patch: mant = str . substring ( exp CaMeL Pos && exp CaMeL Pos > 1 ) ;
rank: 131
score: 99.44356536865234
patch: mant = str . substring ( 0 , dec CaMeL Pos ) ; break ;
rank: 131
score: 99.43342670641448
patch: mant = mant . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ; }
rank: 131
score: 99.41091579861111
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; } }
rank: 132
score: 99.49390869140625
patch: exp = str . substring ( 0 , dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 132
score: 99.47802056206598
patch: mant = str . substring ( exp CaMeL Pos * str . length ( ) ) ;
rank: 132
score: 99.46578176398026
patch: mant = str . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ; ;
rank: 132
score: 99.44337373621323
patch: dec = str . substring ( dec CaMeL Pos + 1 ) ; } else {
rank: 133
score: 99.5207852450284
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos - dec CaMeL Pos ) ;
rank: 133
score: 99.515478515625
patch: exp = str . substring ( exp CaMeL Pos - 1 , str . length ( ) ) ;
rank: 133
score: 99.49366251627605
patch: return create CaMeL Big CaMeL Integer ( str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ) ;
rank: 133
score: 99.464990234375
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; break ; } }
rank: 133
score: 99.44479370117188
patch: mant = str . substring ( 0 + exp CaMeL Pos , 1 ) ;
rank: 133
score: 99.43287963867188
patch: mant = str . substring ( str . length ( ) - 1 + exp CaMeL Pos ) ;
rank: 133
score: 99.40973977481617
patch: return new Number ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 134
score: 99.477099609375
patch: mant = ( str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ) ;
rank: 134
score: 99.44439338235294
patch: mant = str . substring ( 0 , exp CaMeL Pos - 0 ) ; ;
rank: 134
score: 99.44048461914062
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; break ;
rank: 134
score: 99.43283978630515
patch: mant = str . substring ( str . length ( ) ) ; break ; }
rank: 134
score: 99.40938074448529
patch: this . mant = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 135
score: 99.51504080636161
patch: exp = str . substring ( exp CaMeL Pos - 1 ) ;
rank: 135
score: 99.47676391601563
patch: mant = str . substring ( 0 , mant . length ( ) - exp CaMeL Pos ) ;
rank: 135
score: 99.46483154296875
patch: mant = str . substring ( 0 , exp CaMeL Pos - 0 ) . trim ( ) ;
rank: 135
score: 99.44369845920139
patch: mant += str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 135
score: 99.43975830078125
patch: exp = str . substring ( dec CaMeL Pos - 1 , dec CaMeL Pos ) ;
rank: 135
score: 99.4090217141544
patch: mant = str . char CaMeL At ( exp CaMeL Pos ) ; break ; }
rank: 136
score: 99.522216796875
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + str ) ;
rank: 136
score: 99.51890980113636
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos + 1 ) ;
rank: 136
score: 99.47545166015625
patch: mant = ( str . substring ( exp CaMeL Pos - 1 ) , exp CaMeL Pos ) ;
rank: 136
score: 99.46415441176471
patch: mant = str . index CaMeL Of ( $STRING$ , exp CaMeL Pos ) ; }
rank: 136
score: 99.4427719116211
patch: mant = str . substring ( 0 , exp CaMeL Pos , $NUMBER$ ) ;
rank: 136
score: 99.43938530815973
patch: b = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 136
score: 99.40899658203125
patch: mant = str . substring ( exp CaMeL Pos - 1 ) ; } }
rank: 137
score: 99.52080939797794
patch: exp = str . substring ( 0 , exp CaMeL Pos + 1 ) ; }
rank: 137
score: 99.51856631324405
patch: mant = str . substring ( dec CaMeL Pos + 1 ) . index CaMeL Of ( $STRING$ ) ;
rank: 137
score: 99.49113663383152
patch: mant = str . substring ( dec CaMeL Pos + 1 ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 137
score: 99.47488064236111
patch: mant = Math . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 137
score: 99.43194939108456
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; continue ; }
rank: 138
score: 99.52041965060764
patch: return create CaMeL Long ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 138
score: 99.43992704503677
patch: mant = str . substring ( 0 , exp CaMeL Pos + 1 ) ; ;
rank: 138
score: 99.43916151258681
patch: dec = str . substring ( 0 , exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 138
score: 99.43117065429688
patch: mant = str . substring ( str . length ( ) , exp CaMeL Pos ) ; } }
rank: 138
score: 99.408447265625
patch: sb = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 139
score: 99.51999733664773
patch: return create CaMeL Long ( str . substring ( dec CaMeL Pos + 1 ) , exp CaMeL Pos ) ;
rank: 139
score: 99.51728959517045
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) + 1 ;
rank: 139
score: 99.51311700994319
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 1 , exp CaMeL Pos ) ) ; }
rank: 139
score: 99.43991268382354
patch: mant = str . substring ( str . index CaMeL Of ( $STRING$ ) ) ;
rank: 139
score: 99.43795572916666
patch: if ( exp CaMeL Pos >= str . length ( ) - 1 )
rank: 139
score: 99.43114556206598
patch: mant = str . substring ( str . length ( ) - 1 ) ; } }
rank: 139
score: 99.40766252790179
patch: mant = str . substring ( exp CaMeL Pos ) ; continue ;
rank: 140
score: 99.51295381433823
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } dec = null ;
rank: 140
score: 99.48974609375
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { if ( exp CaMeL Pos > dec CaMeL Pos )
rank: 140
score: 99.47474975585938
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . char CaMeL Value ( ) ;
rank: 140
score: 99.46318359375
patch: mant = str . substring ( 0 , exp CaMeL Pos + exp CaMeL Pos ) ; break ;
rank: 140
score: 99.43869357638889
patch: mant = str . substring ( 0 , exp CaMeL Pos ? 1 : 1 ) ;
rank: 140
score: 99.43781280517578
patch: exp = create CaMeL Long ( str . length ( ) - 1 ) ;
rank: 140
score: 99.43076782226562
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ; } else
rank: 140
score: 99.40760713465073
patch: mant = str . substring ( exp CaMeL Pos ) ; } else { continue ;
rank: 141
score: 99.519775390625
patch: exp = str . substring ( dec CaMeL Pos + 1 , str . length ( ) + 1 ) ;
rank: 141
score: 99.51700439453126
patch: mant = str . substring ( dec CaMeL Pos - 1 , exp CaMeL Pos - 1 ) ;
rank: 141
score: 99.48961791992187
patch: mant = str . substring ( 0 , str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 141
score: 99.47445678710938
patch: mant = str . substring ( exp CaMeL Pos - 1 , mant ) ;
rank: 141
score: 99.43834771050348
patch: mant = str . substring ( ( exp CaMeL Pos - 1 ) - 0 ) ;
rank: 141
score: 99.43779440487133
patch: mant = str . substring ( 0 , dec CaMeL Pos ) ; } else {
rank: 141
score: 99.4298095703125
patch: mant = str . substring ( exp CaMeL Pos - $NUMBER$ , exp CaMeL Pos ) ; break ;
rank: 141
score: 99.407275390625
patch: str = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 142
score: 99.51893446180556
patch: return create CaMeL Long ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 142
score: 99.47418212890625
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 - exp CaMeL Pos ) ;
rank: 142
score: 99.43815612792969
patch: mant = str . substring ( 0 , exp CaMeL Pos ) - 1 ;
rank: 142
score: 99.43765258789062
patch: tmp = create CaMeL Long ( str . length ( ) - 1 ) ;
rank: 143
score: 99.5136474609375
patch: mant = str . substring ( exp CaMeL Pos + 1 ) + str . length ( ) ;
rank: 143
score: 99.48956620065789
patch: exp = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ; }
rank: 143
score: 99.46243625217014
patch: mant = str . index CaMeL Of ( $STRING$ ) + str . length ( ) ;
rank: 143
score: 99.43753814697266
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ , str ) ;
rank: 143
score: 99.43695068359375
patch: mant = str . substring ( ( exp CaMeL Pos , exp CaMeL Pos ) ) ;
rank: 143
score: 99.42924194335937
patch: mant = str . substring ( exp CaMeL Pos - 0 , str . length ( ) ) ;
rank: 144
score: 99.5186077615489
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 144
score: 99.48951357886905
patch: exp = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 144
score: 99.47380913628473
patch: mant = $STRING$ . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 144
score: 99.43702456825658
patch: { mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 144
score: 99.43669128417969
patch: mant += str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 144
score: 99.4285888671875
patch: return str . substring ( str . length ( ) - 0 , exp CaMeL Pos ) ; }
rank: 144
score: 99.40535794771634
patch: return str . substring ( exp CaMeL Pos + 1 ) ;
rank: 145
score: 99.51770737591912
patch: exp = str . substring ( 0 , dec CaMeL Pos + 1 ) ; }
rank: 145
score: 99.51341610863095
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ; }
rank: 145
score: 99.47376708984375
patch: mant = str . substring ( 0 + exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 145
score: 99.46164957682292
patch: throw str ; } mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 145
score: 99.43641764322916
patch: mant = str . substring ( dec CaMeL Pos ) ; } else {
rank: 145
score: 99.43611653645833
patch: str = str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 145
score: 99.4285400390625
patch: mant = new String CaMeL Buffer ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 145
score: 99.40521918402777
patch: mant = str . substring ( Math . abs ( exp CaMeL Pos ) ) ; }
rank: 146
score: 99.51689995659723
patch: return create CaMeL Integer ( str . substring ( dec CaMeL Pos + 1 ) ) ;
rank: 146
score: 99.4736083984375
patch: mant = mant . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ;
rank: 146
score: 99.43557559742646
patch: mant = str . substring ( 0 , exp CaMeL Pos ( 1 ) ) ;
rank: 146
score: 99.43553331163194
patch: ch = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 146
score: 99.40477159288194
patch: synchronized ( this ) { mant = str . substring ( exp CaMeL Pos ) ; }
rank: 147
score: 99.516796875
patch: return create CaMeL Long ( str . substring ( 0 , exp CaMeL Pos + 1 ) ) ;
rank: 147
score: 99.51211708470395
patch: dec = str . substring ( 0 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 147
score: 99.47323269314236
patch: mant = ( str . substring ( 0 , exp CaMeL Pos - 1 ) ) ;
rank: 147
score: 99.43502807617188
patch: mant = str . substring ( 0 , exp CaMeL Pos + $NUMBER$ ) ;
rank: 147
score: 99.42669677734375
patch: mant = str . substring ( str . length ( ) - 1 , 0 ) ;
rank: 147
score: 99.40464154411765
patch: return new Integer ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 148
score: 99.51188858695652
patch: exp = str . substring ( exp CaMeL Pos - 1 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 148
score: 99.4880704012784
patch: dec = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ; }
rank: 148
score: 99.47308959960938
patch: mant = mant . substring ( 0 , exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 148
score: 99.45917711759868
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; } else {
rank: 148
score: 99.4348388671875
patch: mant = str . substring ( - 0 , exp CaMeL Pos ) ;
rank: 148
score: 99.42661539713542
patch: mant = new Integer ( str . substring ( exp CaMeL Pos - 1 ) ) ;
rank: 149
score: 99.5158203125
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 149
score: 99.51235961914062
patch: mant = str . substring ( exp CaMeL Pos + 1 ) + 1 ;
rank: 149
score: 99.5113525390625
patch: exp = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos - 1 ) ;
rank: 149
score: 99.48787231445313
patch: mant = str . substring ( exp CaMeL Pos , str . length ( ) - 1 ) ;
rank: 149
score: 99.47293090820312
patch: mant = str . substring ( 0 , mant . length ( ) ) ;
rank: 149
score: 99.43444146050348
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos - 0 ) ;
rank: 149
score: 99.40310329861111
patch: final int exp CaMeL Pos = str . last CaMeL Index CaMeL Of ( $STRING$ ) ;
rank: 150
score: 99.51539306640625
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + exp CaMeL Pos + 1 ) ;
rank: 150
score: 99.51134723165761
patch: mant = str . substring ( exp CaMeL Pos - 1 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 150
score: 99.48786272321429
patch: throw new Number CaMeL Format CaMeL Exception ( str . index CaMeL Of ( $STRING$ ) + $STRING$ ) ;
rank: 150
score: 99.47291259765625
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - $STRING$ ) ;
rank: 150
score: 99.45841471354167
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; } ;
rank: 150
score: 99.43304443359375
patch: mant = str . substring ( 0 + exp CaMeL Pos - 1 ) ; break ;
rank: 150
score: 99.42534790039062
patch: mant = str . substring ( exp CaMeL Pos - 1 , mant . length ( ) ) ;
rank: 151
score: 99.51516723632812
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( dec CaMeL Pos + 1 ) ) ; }
rank: 151
score: 99.51115866268383
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + exp CaMeL Pos ) ; }
rank: 151
score: 99.48765345982143
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 151
score: 99.47257272820724
patch: mant = ( str . substring ( 0 , exp CaMeL Pos ) . trim ( ) ;
rank: 151
score: 99.45794998972039
patch: mant ; mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 151
score: 99.42525906032986
patch: return new Character ( str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 151
score: 99.403076171875
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 152
score: 99.514912109375
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { mant = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 152
score: 99.51094135485198
patch: mant = str . substring ( 0 , str . length ( ) - 1 ) ; }
rank: 152
score: 99.50972900390624
patch: exp CaMeL Pos = str . char CaMeL At ( str . length ( ) - 1 ) ;
rank: 152
score: 99.47256808810764
patch: mant = str . substring ( exp CaMeL Pos - $STRING$ . length ( ) ) ;
rank: 152
score: 99.45763442095588
patch: mant = str . substring ( 0 , exp CaMeL Pos + $NUMBER$ ) ; }
rank: 152
score: 99.43267822265625
patch: mant = str . substring ( ( exp CaMeL Pos - exp CaMeL Pos ) ) ;
rank: 152
score: 99.43135579427083
patch: mant = str . substring ( 0 , exp CaMeL Pos , dec CaMeL Pos ) ;
rank: 152
score: 99.42464870876736
patch: mant = str . substring ( str . length ( ) - 1 ) ; } else
rank: 152
score: 99.40299224853516
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; continue ;
rank: 153
score: 99.51078965928819
patch: dec = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 153
score: 99.4869873046875
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; } else
rank: 153
score: 99.45695190429687
patch: mant = str . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ; ; }
rank: 153
score: 99.43217637803819
patch: mant = str . substring ( str . index CaMeL Of ( ) + 1 ) ;
rank: 153
score: 99.43125915527344
patch: mant = create CaMeL Long ( str . length ( ) - 1 ) ;
rank: 153
score: 99.42387838924633
patch: mant = str . substring ( str . length ( ) + 1 ) ; }
rank: 153
score: 99.40291595458984
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; } else
rank: 154
score: 99.5085681733631
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . index CaMeL Of ( $STRING$ ) ;
rank: 154
score: 99.48685495476974
patch: mant = str . substring ( dec CaMeL Pos - 1 , exp CaMeL Pos ) ; }
rank: 154
score: 99.47172241210937
patch: str = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos - 1 ) ;
rank: 154
score: 99.43193054199219
patch: mant += str . substring ( str . length ( ) - 1 ) ;
rank: 154
score: 99.42361450195312
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; substring += exp CaMeL Pos ;
rank: 154
score: 99.40096028645833
patch: mant = str . substring ( exp CaMeL Pos ) . trim ( ) ; break ;
rank: 155
score: 99.486572265625
patch: int dec CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 155
score: 99.47127492804276
patch: mant = str . substring ( exp CaMeL Pos + - 1 , exp CaMeL Pos ) ;
rank: 155
score: 99.45692138671875
patch: mant = new str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 155
score: 99.43162706163194
patch: mant = str . substring ( exp CaMeL Pos ? 0 : exp CaMeL Pos ) ;
rank: 155
score: 99.42995383522727
patch: if ( exp CaMeL Pos > - 1 ) {
rank: 155
score: 99.40090603298611
patch: mant = str . substring ( exp CaMeL Pos 1 , exp CaMeL Pos ) ; }
rank: 156
score: 99.5081454190341
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos - 1 ) ;
rank: 156
score: 99.45635986328125
patch: mant = str . substring ( 0 , exp CaMeL Pos + ) ; }
rank: 156
score: 99.43160671657986
patch: mant = str . substring ( 1 , exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 156
score: 99.42911569695724
patch: return create CaMeL Big CaMeL Integer ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 157
score: 99.51304626464844
patch: throw new Number CaMeL Format CaMeL Exception ( str + str + $STRING$ ) ;
rank: 157
score: 99.5077237215909
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) + 1 ;
rank: 157
score: 99.45441637541118
patch: mant = Integer . parse CaMeL Int ( str . substring ( exp CaMeL Pos ) ) ;
rank: 157
score: 99.4315673828125
patch: return str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 157
score: 99.42763671875
patch: dec CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 157
score: 99.42224799262152
patch: mant = str . substring ( 0 , mant . length ( ) - 1 ) ;
rank: 157
score: 99.39937337239583
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; } break ; }
rank: 158
score: 99.51213989257812
patch: return create CaMeL Long ( str . substring ( 0 , dec CaMeL Pos + 1 ) ) ;
rank: 158
score: 99.50769653320313
patch: dec = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos - 1 ) ;
rank: 158
score: 99.42546001233552
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos < exp CaMeL Pos ) {
rank: 158
score: 99.42221069335938
patch: mant = str . substring ( str . length ( ) - $NUMBER$ + exp CaMeL Pos ) ;
rank: 158
score: 99.39798177083334
patch: str = str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 159
score: 99.48417833116319
patch: exp = new Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) ) ;
rank: 159
score: 99.45330489309211
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } else { break ;
rank: 159
score: 99.4297866821289
patch: mant = str . substring ( exp CaMeL Pos ? 1 : 0 ) ;
rank: 159
score: 99.42528076171875
patch: if ( exp CaMeL Pos < dec CaMeL Pos && exp CaMeL Pos < dec CaMeL Pos ) {
rank: 160
score: 99.505859375
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; } else {
rank: 160
score: 99.48368503736413
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 160
score: 99.46967163085938
patch: mant = str . substring ( 0 , exp CaMeL Pos - name . length ( ) ) ;
rank: 160
score: 99.4239501953125
patch: mant = str . substring ( ! str . index CaMeL Of ( $STRING$ ) ) ;
rank: 160
score: 99.42150065104167
patch: mant = str . substring ( $NUMBER$ , exp CaMeL Pos ) ; }
rank: 160
score: 99.39669036865234
patch: mant = str . substring ( exp CaMeL Pos ) ; break ; } }
rank: 161
score: 99.51034691220238
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( dec CaMeL Pos ) ) ;
rank: 161
score: 99.39634602864584
patch: mant = str . substring ( exp CaMeL Pos ) ; } else {
rank: 162
score: 99.50552368164062
patch: exp = str . substring ( str . length ( ) - 1 , exp CaMeL Pos ) ;
rank: 162
score: 99.4833740234375
patch: mant = str . char CaMeL At ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 162
score: 99.46859130859374
patch: mant = str . substring ( 0 , 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 162
score: 99.45084838867187
patch: mant = str . trim ( ) . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 162
score: 99.42840576171875
patch: mant = str . substring ( 0 , 0 , exp CaMeL Pos - 1 ) ;
rank: 162
score: 99.39596737132354
patch: mant = str ; } mant = str . substring ( exp CaMeL Pos ) ;
rank: 163
score: 99.50990054481908
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( 0 ) ) ;
rank: 163
score: 99.506103515625
patch: exp CaMeL Pos = str . char CaMeL At ( dec CaMeL Pos + 1 ) ;
rank: 163
score: 99.48299153645833
patch: exp = str . substring ( dec CaMeL Pos + 1 , str . length ( ) ) ; }
rank: 163
score: 99.46795043945312
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos / 1 ) ;
rank: 163
score: 99.45047157689145
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; ++ exp CaMeL Pos ;
rank: 163
score: 99.42832438151042
patch: mant = str . substring ( 0 + exp CaMeL Pos - 1 , 1 ) ;
rank: 163
score: 99.42247953869048
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) && last CaMeL Char != $STRING$ )
rank: 163
score: 99.42043887867646
patch: mant = mant . substring ( 0 , exp CaMeL Pos ) ; break ; }
rank: 163
score: 99.39581657858456
patch: this . mant = str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 164
score: 99.50964965820313
patch: throw new Number CaMeL Format CaMeL Exception ( str + str . length ( ) + $STRING$ ) ;
rank: 164
score: 99.48294677734376
patch: exp = new Number ( str . index CaMeL Of ( $STRING$ ) , exp CaMeL Pos ) ;
rank: 164
score: 99.4671875
patch: mant = str . substring ( 0 + exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 164
score: 99.42721557617188
patch: mant = str . substring ( exp CaMeL Pos - 0 + 1 ) ;
rank: 164
score: 99.42241753472223
patch: exp = str . substring ( 0 , exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 164
score: 99.42038302951389
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; break ; } ;
rank: 164
score: 99.39486694335938
patch: mant = str ; mant = str . substring ( exp CaMeL Pos ) ;
rank: 165
score: 99.50431315104167
patch: if ( exp CaMeL Pos > - 1 ) { exp = null ;
rank: 165
score: 99.46654052734375
patch: mant = str . substring ( 0 , exp CaMeL Pos ? 0 : exp CaMeL Pos ) ;
rank: 165
score: 99.44987657335069
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } } else {
rank: 165
score: 99.4195556640625
patch: mant = ( int ) str . substring ( str . length ( ) ) ;
rank: 166
score: 99.50271606445312
patch: exp = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos + 1 ) ;
rank: 166
score: 99.48178100585938
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; }
rank: 166
score: 99.44951782226562
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) . trim ( ) ;
rank: 166
score: 99.42534722222223
patch: mant = $STRING$ ; mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 166
score: 99.42228190104167
patch: exp = str . substring ( 0 , dec CaMeL Pos , exp CaMeL Pos ) ;
rank: 166
score: 99.41950073242188
patch: mant = str . substring ( 0 , exp CaMeL Pos . length ( ) - 1 ) ;
rank: 167
score: 99.50802176339286
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( 0 ) + $STRING$ ) ;
rank: 167
score: 99.50428989955357
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos < str . length ( ) ) {
rank: 167
score: 99.50180199032738
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ; }
rank: 167
score: 99.4808682528409
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { if ( exp CaMeL Pos < dec CaMeL Pos )
rank: 167
score: 99.4487060546875
patch: mant = str . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ; } ;
rank: 167
score: 99.4249267578125
patch: mant = str . substring ( exp CaMeL Pos ) ; mant = exp CaMeL Pos ;
rank: 167
score: 99.42197875976562
patch: mant = str . to CaMeL String ( ) . substring ( dec CaMeL Pos + 1 ) ;
rank: 167
score: 99.39411926269531
patch: mant = str . substring ( exp CaMeL Pos ) ; return str ; }
rank: 168
score: 99.50348578559027
patch: exp = str . substring ( exp CaMeL Pos + 1 , last CaMeL Char ) ;
rank: 168
score: 99.50150299072266
patch: exp = str . substring ( str . length ( ) - 1 ) ;
rank: 168
score: 99.41875
patch: mant = str . substring ( str . length ( ) - exp CaMeL Pos - 0 ) ;
rank: 168
score: 99.39352596507354
patch: return new Number ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 169
score: 99.50753651494566
patch: if ( exp CaMeL Pos >= dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 169
score: 99.50148518880208
patch: exp = str . substring ( dec CaMeL Pos + 1 , last CaMeL Char ) ;
rank: 169
score: 99.4795809659091
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { if ( exp CaMeL Pos > dec CaMeL Pos )
rank: 169
score: 99.44788208007813
patch: mant = str . substring ( ( exp CaMeL Pos - exp CaMeL Pos ) + 1 ) ;
rank: 169
score: 99.4238640280331
patch: mant = str . substring ( 0 , exp CaMeL Pos , - 1 ) ;
rank: 169
score: 99.42156372070312
patch: if ( exp CaMeL Pos < dec CaMeL Pos && exp CaMeL Pos < exp CaMeL Pos ) {
rank: 169
score: 99.41868189761513
patch: mant = str . substring ( str . index CaMeL Of ( $STRING$ ) + 1 ) ;
rank: 169
score: 99.39269341362848
patch: mant = str . substring ( exp CaMeL Pos ) ; } else { break ; }
rank: 170
score: 99.47890837296195
patch: mant = str . substring ( str . index CaMeL Of ( $STRING$ ) + 1 , exp CaMeL Pos ) ;
rank: 170
score: 99.44781815378289
patch: mant = Math . min ( str . length ( ) , exp CaMeL Pos ) ; }
rank: 170
score: 99.4210433959961
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { mant = str ;
rank: 171
score: 99.506279296875
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( dec CaMeL Pos + 1 ) + $STRING$ ) ;
rank: 171
score: 99.50298517400569
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos < str . length ( ) - 1 )
rank: 171
score: 99.42230224609375
patch: mant += str . substring ( 0 , exp CaMeL Pos - 0 ) ;
rank: 171
score: 99.42102989783653
patch: mant = str . substring ( dec CaMeL Pos ) ; }
rank: 171
score: 99.39236653645834
patch: sb = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 172
score: 99.5008544921875
patch: mant = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos ) ; }
rank: 172
score: 99.47842567845395
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ; } dec = null ;
rank: 172
score: 99.46403503417969
patch: mant = str . substring ( exp CaMeL Pos + 1 , mant ) ;
rank: 172
score: 99.42194366455078
patch: mant else mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 172
score: 99.39224063648896
patch: mant = str . substring ( 1 , exp CaMeL Pos ) ; break ; }
rank: 173
score: 99.50222778320312
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos ) ) ; }
rank: 173
score: 99.4637451171875
patch: mant = str . substring ( 0 , exp CaMeL Pos - mant , exp CaMeL Pos ) ;
rank: 173
score: 99.44693153782895
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; return exp CaMeL Pos ;
rank: 173
score: 99.4208984375
patch: mant = null ; mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 173
score: 99.42049153645833
patch: f = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 173
score: 99.41766357421875
patch: } else { mant = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 174
score: 99.50064697265626
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . length ( ) - 1 ;
rank: 174
score: 99.47780474494485
patch: exp CaMeL Pos = str . substring ( 0 , dec CaMeL Pos ) ; }
rank: 174
score: 99.46370849609374
patch: mant = str . substring ( 0 , exp CaMeL Pos - $STRING$ , exp CaMeL Pos ) ;
rank: 174
score: 99.44671309621711
patch: mant = str . substring ( 0 , exp CaMeL Pos * exp CaMeL Pos ) ; }
rank: 174
score: 99.42081705729167
patch: mant = str . substring ( 0 + exp CaMeL Pos - 1 - 1 ) ;
rank: 174
score: 99.42040337456598
patch: n = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 174
score: 99.41721801757812
patch: mant = str . substring ( str . iterator ( ) . length ( ) - 1 ) ;
rank: 174
score: 99.39117431640625
patch: mant = str . trim ( ) . trim ( ) ; }
rank: 175
score: 99.4464862530048
patch: mant = str . trim ( ) . trim ( ) ;
rank: 175
score: 99.42058967141544
patch: return str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 175
score: 99.42014567057292
patch: v = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 175
score: 99.39102608816964
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos ) ;
rank: 176
score: 99.50008951822916
patch: if ( exp CaMeL Pos > - 1 ) { mant = str ;
rank: 176
score: 99.46158447265626
patch: mant = Math . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ;
rank: 176
score: 99.44593721277573
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } ) ;
rank: 176
score: 99.42025936351104
patch: mant else { mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 176
score: 99.42011176215277
patch: exp = create CaMeL Big CaMeL Integer ( str . length ( ) - 1 ) ;
rank: 176
score: 99.41706848144531
patch: mant = str . substring ( $NUMBER$ , exp CaMeL Pos ) ; break ;
rank: 176
score: 99.3908332375919
patch: mant = str . char CaMeL At ( exp CaMeL Pos - 1 ) ; }
rank: 177
score: 99.50321880139802
patch: throw new Number CaMeL Format CaMeL Exception ( str . length ( ) - 1 ) ; }
rank: 177
score: 99.50177001953125
patch: try { exp = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 177
score: 99.49967956542969
patch: exp = str . char CaMeL At ( exp CaMeL Pos + 1 ) ;
rank: 177
score: 99.47648111979167
patch: throw new Number CaMeL Format CaMeL Exception ( str , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 177
score: 99.46121376439145
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - ) ;
rank: 177
score: 99.44520970394737
patch: mant ; } else { mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 177
score: 99.42009943181819
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos , exp CaMeL Pos ) ;
rank: 177
score: 99.41698404947917
patch: { mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 177
score: 99.38941786024306
patch: mant = str . substring ( exp CaMeL Pos ) ; } else { throw str ;
rank: 178
score: 99.5030184659091
patch: return create CaMeL Integer ( str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ) ;
rank: 178
score: 99.50140021829044
patch: exp = str . substring ( 0 , exp CaMeL Pos ) ; } else {
rank: 178
score: 99.46012369791667
patch: str = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 178
score: 99.44432983398437
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } exp CaMeL Pos ++ ;
rank: 178
score: 99.41978963216145
patch: mant = str . substring ( 0 , $NUMBER$ ) ;
rank: 178
score: 99.4169060202206
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; return mant ;
rank: 178
score: 99.38819986979166
patch: mant = $STRING$ . substring ( exp CaMeL Pos + 1 ) ; }
rank: 179
score: 99.50263006036931
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ;
rank: 179
score: 99.50100868626645
patch: exp = str . substring ( 0 , str . length ( ) - 1 ) ; }
rank: 179
score: 99.49928911994485
patch: mant = str . substring ( dec CaMeL Pos + 1 , - 1 ) ;
rank: 179
score: 99.47557067871094
patch: mant = str . substring ( 0 , dec CaMeL Pos ) + 1 ;
rank: 179
score: 99.45989990234375
patch: mant = this . str . substring ( 0 , exp CaMeL Pos ) ;
rank: 179
score: 99.4190673828125
patch: tmp = create CaMeL Long ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 179
score: 99.41677517361111
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; return mant ; }
rank: 179
score: 99.38713921440973
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; return str ; }
rank: 180
score: 99.50240956182066
patch: throw new Number CaMeL Format CaMeL Exception ( str + str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 180
score: 99.50098717730978
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , exp CaMeL Pos - 1 ) ) ;
rank: 180
score: 99.45983276367187
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos + $NUMBER$ ) ;
rank: 180
score: 99.44389073988971
patch: sb . append ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 180
score: 99.41845024956598
patch: mant = $STRING$ . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 180
score: 99.41800265842014
patch: buf = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 180
score: 99.4162841796875
patch: mant = str . substring ( str . length ( ) + exp CaMeL Pos - 1 ) ;
rank: 180
score: 99.38713243272569
patch: mant = str . substring ( exp CaMeL Pos ) ; } else { return null ;
rank: 181
score: 99.45918782552083
patch: mant = exp CaMeL Pos + str . substring ( 0 , exp CaMeL Pos ) ;
rank: 181
score: 99.41837565104167
patch: exp = str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 181
score: 99.41615923713235
patch: mant = ( int ) str . substring ( exp CaMeL Pos + 1 ) ;
rank: 181
score: 99.38692801339286
patch: sb = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 182
score: 99.47528076171875
patch: int exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 182
score: 99.45895046657986
patch: mant = Math . substring ( str . trim ( ) , exp CaMeL Pos ) ;
rank: 182
score: 99.41767035590277
patch: mant = str . substring ( ( exp CaMeL Pos - 0 ) - 1 ) ;
rank: 182
score: 99.4157958984375
patch: mant = mant . substring ( str . length ( ) - $NUMBER$ , exp CaMeL Pos ) ;
rank: 182
score: 99.38552517361111
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; break ; } }
rank: 183
score: 99.45802001953125
patch: mant = ( str . substring ( exp CaMeL Pos + 1 ) , exp CaMeL Pos ) ;
rank: 183
score: 99.44309997558594
patch: mant = str . substring ( 0 , exp CaMeL Pos - ) ; }
rank: 183
score: 99.41761610243056
patch: mant = 0 ; exp = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 183
score: 99.41550021701389
patch: mant = new Character ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 183
score: 99.38373209635417
patch: mant = $STRING$ . substring ( 0 , exp CaMeL Pos ) ; }
rank: 184
score: 99.50075461647727
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( exp CaMeL Pos ) ) ; }
rank: 184
score: 99.47458814538044
patch: mant = str . substring ( dec CaMeL Pos + 1 , str . length ( ) - 1 ) ; }
rank: 184
score: 99.4428775185033
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) + 1 ; }
rank: 184
score: 99.41724395751953
patch: mant += str . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 184
score: 99.41535949707031
patch: dec = str . substring ( dec CaMeL Pos + 1 , 0 ) ;
rank: 184
score: 99.4150390625
patch: mant = mant . substring ( str . length ( ) , exp CaMeL Pos ) ; break ;
rank: 184
score: 99.38215467664931
patch: mant = str . substring ( exp CaMeL Pos ) ; } else { continue ; }
rank: 185
score: 99.49907090928819
patch: throw new Number CaMeL Format CaMeL Exception ( str . length ( ) + $STRING$ ) ;
rank: 185
score: 99.457421875
patch: mant = str . substring ( exp CaMeL Pos + $NUMBER$ , exp CaMeL Pos - 1 ) ;
rank: 185
score: 99.44216918945312
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . trim ( ) ; break ;
rank: 185
score: 99.41714138454861
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos - 0 ) ;
rank: 185
score: 99.41529846191406
patch: mant = str . substring ( dec CaMeL Pos + 1 , start ) ;
rank: 185
score: 99.41448653371711
patch: mant = mant . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 185
score: 99.38190569196429
patch: z = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 186
score: 99.49880859375
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { exp = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 186
score: 99.49845377604167
patch: exp = str . substring ( exp CaMeL Pos + 1 ) . index CaMeL Of ( $STRING$ ) ;
rank: 186
score: 99.47429547991071
patch: exp = Number CaMeL Utils . create CaMeL Float ( str ) ;
rank: 186
score: 99.45732421875
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 186
score: 99.44083444695724
patch: mant = str . substring ( Math . max ( 0 , exp CaMeL Pos ) ) ;
rank: 186
score: 99.41483306884766
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp ) ;
rank: 186
score: 99.38172912597656
patch: mant = str . substring ( exp CaMeL Pos + 1 + 1 ) ;
rank: 187
score: 99.4967529296875
patch: return create CaMeL Big CaMeL Integer ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 187
score: 99.45728257123162
patch: return str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 187
score: 99.4406494140625
patch: mant = Math . max ( 0 , exp CaMeL Pos ) ; }
rank: 187
score: 99.412109375
patch: mant = str . append ( 0 , exp CaMeL Pos ) ; }
rank: 187
score: 99.37974638097427
patch: mant = str . substring ( exp CaMeL Pos ) ; } else { break ;
rank: 188
score: 99.44011487458882
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; -- exp CaMeL Pos ;
rank: 188
score: 99.37872992621527
patch: result = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 189
score: 99.49555121527777
patch: mant = str . substring ( 0 , exp CaMeL Pos + 1 ) + 1 ;
rank: 189
score: 99.45638234991776
patch: mant = str . substring ( 0 , exp CaMeL Pos - - exp CaMeL Pos ) ;
rank: 189
score: 99.43978542751736
patch: mant ; mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 189
score: 99.41564178466797
patch: mant = str . substring ( $NUMBER$ + exp CaMeL Pos - 1 ) ;
rank: 189
score: 99.41376410590277
patch: i = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 190
score: 99.49736993963069
patch: if ( exp CaMeL Pos > - 1 ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 190
score: 99.4731112393466
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { if ( exp CaMeL Pos < dec CaMeL Pos )
rank: 190
score: 99.438623046875
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; max = exp CaMeL Pos ;
rank: 190
score: 99.413623046875
patch: if ( exp CaMeL Pos < dec CaMeL Pos || exp CaMeL Pos < dec CaMeL Pos ) {
rank: 190
score: 99.41033935546875
patch: mant = mant . substring ( str . length ( ) ) ;
rank: 191
score: 99.49735942639802
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( dec CaMeL Pos ) ) ;
rank: 191
score: 99.49516027113971
patch: mant = str . substring ( exp CaMeL Pos + 1 , - 1 ) ;
rank: 191
score: 99.47308640252976
patch: dec = str . substring ( dec CaMeL Pos + 1 , str . length ( ) ) ; }
rank: 191
score: 99.43816174958882
patch: mant = Math . abs ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 191
score: 99.41550990513393
patch: mant = $STRING$ . substring ( 0 , exp CaMeL Pos ) ;
rank: 191
score: 99.41326032366071
patch: dec = str . substring ( dec CaMeL Pos - 1 ) ;
rank: 191
score: 99.3780029296875
patch: String str = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 192
score: 99.49705921519886
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ;
rank: 192
score: 99.47288876488095
patch: mant = str . substring ( exp CaMeL Pos + 1 , str . length ( ) ) ; }
rank: 192
score: 99.45598008897569
patch: try { mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 192
score: 99.43790893554687
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; continue ;
rank: 192
score: 99.41464572482639
patch: mant = str . substring = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 192
score: 99.41271209716797
patch: mant = str . substring ( 0 . length ( ) - 1 ) ;
rank: 192
score: 99.3777717141544
patch: mant = str . substring ( exp CaMeL Pos ) + exp CaMeL Pos ; }
rank: 193
score: 99.49452209472656
patch: exp = str . substring ( exp CaMeL Pos + 1 , 0 ) ;
rank: 193
score: 99.43717447916667
patch: mant = str . substring ( exp CaMeL Pos + $NUMBER$ ) ; }
rank: 193
score: 99.41456604003906
patch: mant = str . substring ( 1 , exp CaMeL Pos , 1 ) ;
rank: 193
score: 99.41249389648438
patch: mant = str . substring ( ! Character . is CaMeL Digit ( dec CaMeL Pos ) ) ;
rank: 193
score: 99.37770708869485
patch: mant = str . substring ( exp CaMeL Pos - 1 + 1 ) ; }
rank: 194
score: 99.49641927083333
patch: try { mant = str . substring ( 0 , dec CaMeL Pos + 1 ) ;
rank: 194
score: 99.47271173650569
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } else
rank: 194
score: 99.45556030273437
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 + exp CaMeL Pos ) ;
rank: 194
score: 99.43620862458882
patch: mant = str . trim ( ) . substring ( exp CaMeL Pos + 1 ) ; }
rank: 194
score: 99.4142204733456
patch: mant = str . append ( str . substring ( exp CaMeL Pos ) ) ;
rank: 194
score: 99.40865285773026
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos ) ; break ; }
rank: 195
score: 99.4725341796875
patch: exp = new Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 195
score: 99.43575032552083
patch: mant = str . trim ( ) ; } mant = str . trim ( ) ;
rank: 195
score: 99.41350640190973
patch: mant = str . substring ( 0 + exp CaMeL Pos - 1 + 1 ) ;
rank: 195
score: 99.41103786892361
patch: tmp = create CaMeL Long ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 195
score: 99.4084243774414
patch: mant = mant . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 196
score: 99.49546903722427
patch: exp = str . substring ( 0 , exp CaMeL Pos - 1 ) ; }
rank: 196
score: 99.49525451660156
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + last CaMeL Char ) ;
rank: 196
score: 99.4349365234375
patch: mant = str . substring ( exp CaMeL Pos + $NUMBER$ ) ;
rank: 196
score: 99.37449137369792
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; } else { }
rank: 197
score: 99.49462890625
patch: try { exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 197
score: 99.45518663194444
patch: mant = mant . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 197
score: 99.43416922433036
patch: mant = Integer . parse CaMeL Int ( exp CaMeL Pos ) ;
rank: 197
score: 99.41305106026786
patch: mant = str . substring ( exp CaMeL Pos , 0 ) ;
rank: 197
score: 99.41045270647321
patch: mant = str . substring ( dec CaMeL Pos + $NUMBER$ ) ;
rank: 197
score: 99.40709164268092
patch: mant = str . substring ( str . length ( ) + exp CaMeL Pos ) ; }
rank: 197
score: 99.37434217664931
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos ) ; } }
rank: 198
score: 99.4550048828125
patch: mant = ( str . substring ( 0 , exp CaMeL Pos ) + exp CaMeL Pos ) ;
rank: 198
score: 99.43397923519737
patch: mant = new str . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ;
rank: 198
score: 99.37372185202206
patch: mant = str . substring ( exp CaMeL Pos - 1 ) + 1 ; }
rank: 199
score: 99.49385833740234
patch: try { mant = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 199
score: 99.49256727430556
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) + 1 ;
rank: 199
score: 99.47101384943181
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ , Number CaMeL Format CaMeL Exception . $STRING$ ) ;
rank: 199
score: 99.43351665296052
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; } * /
rank: 199
score: 99.41249186197916
patch: mant = str . substring ( exp CaMeL Pos - 1 ) ; ;
rank: 200
score: 99.49240112304688
patch: last CaMeL Char = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 200
score: 99.47085571289062
patch: dec = str . substring ( 0 , dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 200
score: 99.45391845703125
patch: mant = str . substring ( 0 , str . length ( ) + exp CaMeL Pos ) ;
rank: 200
score: 99.43300374348958
patch: mant = str . substring ( 0 , exp CaMeL Pos / exp CaMeL Pos ) ;
rank: 200
score: 99.41218118106617
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; return str ;
rank: 200
score: 99.40985107421875
patch: tmp = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 200
score: 99.40655196340461
patch: mant = str . substring ( str . length ( ) * exp CaMeL Pos ) ; }
rank: 201
score: 99.49221622242646
patch: exp = str . substring ( 0 , dec CaMeL Pos - 1 ) ; }
rank: 201
score: 99.470703125
patch: exp = create CaMeL Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) , exp CaMeL Pos ) ; }
rank: 201
score: 99.45375569661458
patch: mant = str . substring ( exp CaMeL Pos * 1 , exp CaMeL Pos ) ;
rank: 201
score: 99.41210174560547
patch: mant = str . substring ( 0 , 0 + exp CaMeL Pos ) ;
rank: 201
score: 99.40947808159723
patch: mant += str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 201
score: 99.40635770909927
patch: { mant = str . substring ( str . length ( ) - 1 ) ;
rank: 201
score: 99.37285970052083
patch: return new Double ( str . substring ( exp CaMeL Pos ) ) ;
rank: 202
score: 99.49213518415179
patch: exp = str . substring ( dec CaMeL Pos - 1 ) ;
rank: 202
score: 99.47057342529297
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ; } }
rank: 202
score: 99.45367431640625
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . to CaMeL String ( ) ;
rank: 202
score: 99.43294031479779
patch: break ; } mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 202
score: 99.41197204589844
patch: mant = str . substring ( $STRING$ . length ( ) + 1 ) ;
rank: 202
score: 99.40872353001645
patch: if ( exp CaMeL Pos < - 1 && exp CaMeL Pos < dec CaMeL Pos ) {
rank: 202
score: 99.40567779541016
patch: str = str . substring ( str . length ( ) - 1 ) ;
rank: 202
score: 99.37236192491319
patch: throw new Number CaMeL Format CaMeL Exception ( name + $STRING$ + exp CaMeL Pos ) ;
rank: 203
score: 99.49072265625
patch: try { exp = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 203
score: 99.45320434570313
patch: mant = str . substring ( 0 , exp CaMeL Pos * exp CaMeL Pos - 1 ) ;
rank: 203
score: 99.43259006076389
patch: mant = str . substring ( exp CaMeL Pos ) + str . length ( ) ;
rank: 203
score: 99.40862358940973
patch: string = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 203
score: 99.40493435329861
patch: mant = str . substring ( 0 , 0 , exp CaMeL Pos ) ; break ;
rank: 203
score: 99.37214491102431
patch: mant = str . substring ( ( exp CaMeL Pos + 1 ) + 1 ) ;
rank: 204
score: 99.49043201264881
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( dec CaMeL Pos - 1 ) ) ;
rank: 204
score: 99.45316162109376
patch: mant = str . substring ( 0 , exp CaMeL Pos ? mant : exp CaMeL Pos ) ;
rank: 204
score: 99.41190592447917
patch: mant = str . substring ( 0 + exp CaMeL Pos ? 1 : 0 ) ;
rank: 204
score: 99.40459594726562
patch: mant = str . substring ( 0 , exp CaMeL Pos , mant . length ( ) ) ;
rank: 204
score: 99.37213134765625
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } break ; }
rank: 205
score: 99.47031037703805
patch: exp CaMeL Pos += str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 205
score: 99.45296630859374
patch: mant = str . substring ( exp CaMeL Pos / 1 , exp CaMeL Pos + 1 ) ;
rank: 205
score: 99.41159237132354
patch: mant = str . substring ( str . index CaMeL Of ( 1 ) ) ;
rank: 205
score: 99.40814971923828
patch: dec = str . char CaMeL At ( dec CaMeL Pos + 1 ) ;
rank: 205
score: 99.370849609375
patch: mant = str . substring ( 0 , exp CaMeL Pos + 1 ) ; } }
rank: 206
score: 99.49074096679688
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ , str . length ( ) - 1 ) ;
rank: 206
score: 99.4900235262784
patch: mant = str . substring ( exp CaMeL Pos - 1 , str . length ( ) - 1 ) ;
rank: 206
score: 99.48942260742187
patch: mant = str . substring ( dec CaMeL Pos + 1 ) . to CaMeL String ( ) ;
rank: 206
score: 99.45260009765624
patch: mant = $STRING$ . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos - 1 ) ;
rank: 206
score: 99.41131184895833
patch: mant . = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 206
score: 99.40797424316406
patch: try { dec = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 207
score: 99.489404296875
patch: if ( exp CaMeL Pos <= dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 207
score: 99.45230102539062
patch: mant = str . substring ( 0 , exp CaMeL Pos ? exp CaMeL Pos : $NUMBER$ ) ;
rank: 207
score: 99.41095648871527
patch: mant += str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 207
score: 99.40347290039062
patch: mant = str . substring ( str . length ( ) . length ( ) - 1 ) ;
rank: 207
score: 99.37055121527777
patch: mant = str . trim ( ) . substring ( exp CaMeL Pos + 1 ) ;
rank: 208
score: 99.48910522460938
patch: exp = str . substring ( dec CaMeL Pos + 1 , 0 ) ;
rank: 208
score: 99.46953790838069
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ , str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 208
score: 99.41089545355902
patch: mant = 0 ; mant = str . substring ( exp CaMeL Pos - 1 ) ;
rank: 208
score: 99.37046305338542
patch: mant = str . substring ( exp CaMeL Pos . length ( ) + 1 ) ;
rank: 209
score: 99.48905181884766
patch: exp = str . substring ( dec CaMeL Pos + 1 ) + 1 ;
rank: 209
score: 99.45187717013889
patch: mant = value . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 209
score: 99.4060291108631
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } else {
rank: 209
score: 99.40263097426471
patch: mant = ( String ) str . substring ( exp CaMeL Pos + 1 ) ;
rank: 209
score: 99.37041473388672
patch: mant = str . char CaMeL At ( exp CaMeL Pos - 1 ) ;
rank: 210
score: 99.48823879076087
patch: if ( exp CaMeL Pos <= dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 210
score: 99.46857299804688
patch: mant = str . substring ( dec CaMeL Pos - 1 , str . length ( ) ) ;
rank: 210
score: 99.42952473958333
patch: mant = str . trim ( ) ;
rank: 210
score: 99.41063690185547
patch: mant = str . substring ( $NUMBER$ , exp CaMeL Pos - 0 ) ;
rank: 210
score: 99.40585327148438
patch: dec = str . substring ( dec CaMeL Pos + 1 + 1 ) ;
rank: 210
score: 99.40259467230902
patch: mant = new String ( str . substring ( exp CaMeL Pos - 1 ) ) ;
rank: 211
score: 99.48712158203125
patch: exp = str . substring ( dec CaMeL Pos - 1 , exp CaMeL Pos - 1 ) ;
rank: 211
score: 99.45130750868056
patch: mant = str . substring ( exp CaMeL Pos - mant , exp CaMeL Pos ) ;
rank: 211
score: 99.42933485243056
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } return null ;
rank: 211
score: 99.40923602764423
patch: mant = str . substring ( exp CaMeL Pos 1 ) ;
rank: 211
score: 99.4052734375
patch: o = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 211
score: 99.40231323242188
patch: mant = str . substring ( str . length ( ) - $STRING$ . length ( ) ) ;
rank: 211
score: 99.36969401041667
patch: sb = str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 212
score: 99.48895818536931
patch: mant = new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 212
score: 99.48707411024306
patch: mant = str . substring ( 0 , dec CaMeL Pos + 1 ) + 1 ;
rank: 212
score: 99.46836547851562
patch: mant = str . substring ( 0 + dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 212
score: 99.42839219835069
patch: mant = str . substring ( exp CaMeL Pos + 1 ) . length ( ) ;
rank: 212
score: 99.40902370876736
patch: mant = str . substring ( 0 - exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 212
score: 99.40229627821181
patch: mant = new mant ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 212
score: 99.36961364746094
patch: mant = str . trim ( ) . substring ( exp CaMeL Pos ) ;
rank: 213
score: 99.48705444335937
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 213
score: 99.46829833984376
patch: dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) + 1 ;
rank: 213
score: 99.45027160644531
patch: mant = str . substring ( 0 , exp CaMeL Pos - start ) ;
rank: 213
score: 99.42804918791118
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos - 0 ) ; }
rank: 213
score: 99.40509033203125
patch: s = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 213
score: 99.40225380345395
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ; break ; }
rank: 214
score: 99.4278335571289
patch: mant ; str = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 214
score: 99.40880629595588
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ) ;
rank: 214
score: 99.40462917751736
patch: l = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 214
score: 99.36948464133523
patch: return str . substring ( exp CaMeL Pos ) ;
rank: 215
score: 99.4883045014881
patch: mant = str . substring ( 0 , str . index CaMeL Of ( $STRING$ ) - 1 ) ;
rank: 215
score: 99.48697916666667
patch: try { mant = str . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 215
score: 99.44978550502232
patch: mant = value . substring ( 0 , exp CaMeL Pos ) ;
rank: 215
score: 99.42761948529412
patch: mant = str . substring ( 0 , exp CaMeL Pos ) - 1 ; }
rank: 215
score: 99.40858968098958
patch: mant = 0 ; str = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 215
score: 99.40195922851562
patch: mant = str . substring ( str . length ( ) , exp CaMeL Pos ) ; } else
rank: 215
score: 99.36947811351104
patch: mant = str . substring ( exp CaMeL Pos ) ; } mant = str ;
rank: 216
score: 99.486787109375
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos ) ) ;
rank: 216
score: 99.46770918996711
patch: exp = create CaMeL Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) ) ;
rank: 216
score: 99.44886881510416
patch: mant = str . substring ( 0 , exp CaMeL Pos $NUMBER$ ) ;
rank: 216
score: 99.40857696533203
patch: mant = str . substring ( str . length ( ) ) ; break ;
rank: 216
score: 99.40414767795139
patch: exp = create CaMeL Long ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 216
score: 99.401953125
patch: mant = str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ; } }
rank: 217
score: 99.48765211838942
patch: throw new Number CaMeL Format CaMeL Exception ( str ) ; }
rank: 217
score: 99.44848022460937
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos * 1 ) ;
rank: 217
score: 99.42735531455592
patch: mant = str . substring ( exp CaMeL Pos ) + str . length ( ) ; }
rank: 218
score: 99.48755992542614
patch: exp = str . substring ( exp CaMeL Pos - 1 , str . length ( ) - 1 ) ;
rank: 218
score: 99.44755249023437
patch: mant = str . substring ( str . length ( ) , exp CaMeL Pos + 1 ) ;
rank: 218
score: 99.40821838378906
patch: mant = str . substring ( 0 , this . exp CaMeL Pos ) ;
rank: 218
score: 99.40400041852679
patch: mant = str . substring ( 0 + dec CaMeL Pos ) ;
rank: 218
score: 99.40120203354779
patch: return new Long ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 218
score: 99.36674230238971
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; return null ;
rank: 219
score: 99.48735119047619
patch: exp = str . substring ( 0 , str . index CaMeL Of ( $STRING$ ) - 1 ) ;
rank: 219
score: 99.46631969105114
patch: throw new Number CaMeL Format CaMeL Exception ( str . index CaMeL Of ( $STRING$ ) + $STRING$ ) ; }
rank: 219
score: 99.44681125217014
patch: mant = Math . substring ( str . length ( ) , exp CaMeL Pos ) ;
rank: 219
score: 99.40396457248264
patch: return str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 219
score: 99.36587524414062
patch: return new Integer ( str . length ( ) - exp CaMeL Pos ) ;
rank: 220
score: 99.46593707540761
patch: exp = str . substring ( dec CaMeL Pos + 1 ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 220
score: 99.44656982421876
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) + 0 ;
rank: 220
score: 99.42648797286184
patch: mant = str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ; ;
rank: 220
score: 99.40765380859375
patch: mant = str . substring ( str . length ( ) - 0 , 0 ) ;
rank: 221
score: 99.485888671875
patch: throw new Number CaMeL Format CaMeL Exception ( str . to CaMeL String ( ) + $STRING$ ) ;
rank: 221
score: 99.46534729003906
patch: mant = str . substring ( 0 , dec CaMeL Pos ) ; } else
rank: 221
score: 99.446044921875
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos / 1 ) ;
rank: 221
score: 99.40732828776042
patch: mant += str . substring ( exp CaMeL Pos ) ;
rank: 221
score: 99.40199584960938
patch: mant = str . substring ( dec CaMeL Pos + 1 + 1 , exp CaMeL Pos ) ;
rank: 222
score: 99.44600423177083
patch: mant = str . substring ( exp CaMeL Pos / 0 , exp CaMeL Pos ) ;
rank: 222
score: 99.4067626953125
patch: mant = str . substring ( str . length ( ) + ) ;
rank: 222
score: 99.36393229166667
patch: mant = str . substring ( ( exp CaMeL Pos - 1 ) + 1 ) ;
rank: 223
score: 99.48527725883152
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { exp = str . substring ( dec CaMeL Pos ) ;
rank: 223
score: 99.48481580946181
patch: exp = str . substring ( 1 , str . length ( ) - 1 ) ;
rank: 223
score: 99.46437766335227
patch: exp = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ; }
rank: 223
score: 99.4454345703125
patch: mant = str . substring ( exp CaMeL Pos + 1 . 0 , exp CaMeL Pos ) ;
rank: 223
score: 99.42509380139802
patch: mant ; } mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 223
score: 99.40188598632812
patch: exp = create CaMeL Integer ( str . length ( ) - 1 ) ;
rank: 223
score: 99.39996948242188
patch: mant = str . substring ( str . length ( ) - exp CaMeL Pos ) ; } }
rank: 223
score: 99.36360168457031
patch: mant = str . substring ( exp CaMeL Pos ) ; } return str ;
rank: 224
score: 99.485224609375
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 224
score: 99.42487250434027
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ; } }
rank: 224
score: 99.40648735894098
patch: mant = str . substring ( ( exp CaMeL Pos - 0 ) - 0 ) ;
rank: 224
score: 99.40187581380208
patch: token = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 224
score: 99.3999267578125
patch: mant = new String CaMeL Buffer ( str . substring ( exp CaMeL Pos - 1 ) ) ;
rank: 224
score: 99.36335584852431
patch: mant = str . substring ( exp CaMeL Pos - 1 ) ; } return str ;
rank: 225
score: 99.48494466145833
patch: mant = str . substring ( 1 , str . length ( ) - 1 ) ;
rank: 225
score: 99.48430524553571
patch: mant = is CaMeL All CaMeL Zeros ( mant ) && is CaMeL All CaMeL Zeros ( exp ) ;
rank: 225
score: 99.48165283203124
patch: exp = str . substring ( exp CaMeL Pos + 1 ) + str . length ( ) ;
rank: 225
score: 99.46417236328125
patch: mant += str . substring ( dec CaMeL Pos + 1 , str . length ( ) ) ;
rank: 225
score: 99.4445556640625
patch: mant = str . substring ( str . to CaMeL Int ( ) , exp CaMeL Pos ) ;
rank: 225
score: 99.42439350328948
patch: mant = str . index CaMeL Of ( $STRING$ ) + str . length ( ) ; }
rank: 225
score: 99.40643310546875
patch: mant = str . substring ( str . length ( ) - 0 , 1 ) ;
rank: 225
score: 99.40184261924342
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos > dec CaMeL Pos ) {
rank: 225
score: 99.39973000919117
patch: mant = str . substring ( 0 , str . length ( ) ) ; }
rank: 225
score: 99.36332872178819
patch: z = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 226
score: 99.4832763671875
patch: exp = new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 226
score: 99.46229137073864
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } }
rank: 226
score: 99.42405941611842
patch: mant = str . substring ( 0 , exp CaMeL Pos + 1 ) ; break ; }
rank: 226
score: 99.40608045789931
patch: mant = str . substring ( 0 + str . length ( ) - 1 ) ;
rank: 226
score: 99.401611328125
patch: dec = str . substring ( 0 , exp CaMeL Pos ) ; } else {
rank: 226
score: 99.39957275390626
patch: mant = str . substring ( str . length ( ) - mant . length ( ) ) ;
rank: 226
score: 99.36258951822917
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; } return mant ;
rank: 227
score: 99.48382568359375
patch: return create CaMeL Long ( str . substring ( 0 , dec CaMeL Pos ) ) ;
rank: 227
score: 99.48077392578125
patch: mant = str . substring ( 0 , exp CaMeL Pos - dec CaMeL Pos ) ;
rank: 227
score: 99.46226283482143
patch: mant = str . char CaMeL At ( 0 ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 227
score: 99.42384168836806
patch: mant = Math . max ( exp CaMeL Pos , exp CaMeL Pos ) ; break ;
rank: 227
score: 99.40135498046875
patch: return create CaMeL Long ( str . char CaMeL At ( dec CaMeL Pos + 1 ) ) ;
rank: 227
score: 99.39956325954861
patch: try { mant = str . substring ( str . length ( ) - 1 ) ;
rank: 227
score: 99.36217447916667
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos ) ; }
rank: 228
score: 99.44422607421875
patch: mant = value . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos - 1 ) ;
rank: 228
score: 99.42367214626736
patch: mant = new str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 228
score: 99.4056396484375
patch: mant = $STRING$ . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 228
score: 99.40115695529514
patch: sb = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 228
score: 99.39943560431985
patch: { mant = str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 228
score: 99.361328125
patch: mant = str . substring ( exp . length ( ) - 1 ) ; }
rank: 229
score: 99.482578125
patch: throw new Number CaMeL Format CaMeL Exception ( str . starts CaMeL With ( $STRING$ ) || last CaMeL Char != $STRING$ ) ;
rank: 229
score: 99.48172760009766
patch: try { dec = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 229
score: 99.47955932617188
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 229
score: 99.44411010742188
patch: mant = this . str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 229
score: 99.40109252929688
patch: dec = str . substring ( dec CaMeL Pos , exp CaMeL Pos ) ;
rank: 229
score: 99.39858111213235
patch: mant = ( String ) str . substring ( exp CaMeL Pos - 1 ) ;
rank: 230
score: 99.47944641113281
patch: exp = str . substring ( exp CaMeL Pos + 1 ) + 1 ;
rank: 230
score: 99.46134440104167
patch: mant = str . substring ( dec CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 230
score: 99.44409897748162
patch: else { mant = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 230
score: 99.42275103400735
patch: mant = new str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 230
score: 99.40480550130208
patch: mant = str . substring ( ( exp CaMeL Pos ) - exp CaMeL Pos ) ;
rank: 230
score: 99.40076293945313
patch: if ( exp CaMeL Pos < dec CaMeL Pos || exp CaMeL Pos < exp CaMeL Pos ) {
rank: 230
score: 99.39840877757354
patch: str = str . substring ( 0 , exp CaMeL Pos ) ; break ; }
rank: 230
score: 99.36123477711396
patch: return new Double ( str . char CaMeL At ( exp CaMeL Pos ) ) ;
rank: 231
score: 99.48114624023438
patch: exp = str . substring ( exp CaMeL Pos , str . length ( ) - 1 ) ;
rank: 231
score: 99.44381103515624
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - mant ) ;
rank: 231
score: 99.42258588005515
patch: do { mant = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 231
score: 99.40072970920139
patch: dec = str . substring ( dec CaMeL Pos + 1 , last CaMeL Char ) ;
rank: 231
score: 99.39814309512867
patch: mant = ( Integer ) str . substring ( exp CaMeL Pos - 1 ) ;
rank: 231
score: 99.36091444227431
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; return null ; }
rank: 232
score: 99.48158957741477
patch: mant = str . substring ( exp CaMeL Pos + 1 , str . length ( ) + 1 ) ;
rank: 232
score: 99.47844904119319
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . length ( ) - 1 ;
rank: 232
score: 99.46112351190476
patch: dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } else {
rank: 232
score: 99.4437255859375
patch: mant = str . substring ( str . char CaMeL Value ( ) , exp CaMeL Pos ) ;
rank: 232
score: 99.40426432291666
patch: mant = str . substring ( str . equals ( 0 ) ) ;
rank: 232
score: 99.3998031616211
patch: dec = str . substring ( dec CaMeL Pos + 1 ) ; break ;
rank: 232
score: 99.39807739257813
patch: mant = str . substring ( str . length ( ) 1 , exp CaMeL Pos ) ; }
rank: 232
score: 99.36060248480902
patch: mant = str . substring ( exp CaMeL Pos + str . length ( ) ) ;
rank: 233
score: 99.48116932744566
patch: if ( exp CaMeL Pos > exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 233
score: 99.48012473366477
patch: if ( exp CaMeL Pos > - 1 ) { exp = str . substring ( exp CaMeL Pos ) ;
rank: 233
score: 99.44309692382812
patch: mant += str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos - 1 ) ;
rank: 233
score: 99.3997802734375
patch: exp = str . substring ( dec CaMeL Pos ) ; } else {
rank: 233
score: 99.39775534237133
patch: mant = new Integer ( str . length ( ) - exp CaMeL Pos ) ;
rank: 233
score: 99.36050754123264
patch: mant = str . substring ( exp CaMeL Pos ++ , exp CaMeL Pos ) ; }
rank: 234
score: 99.4811374830163
patch: throw new Number CaMeL Format CaMeL Exception ( str + str . substring ( dec CaMeL Pos + 1 ) ) ;
rank: 234
score: 99.46084594726562
patch: mant = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + 1 ; }
rank: 234
score: 99.44305419921875
patch: mant = ( str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ) ;
rank: 234
score: 99.42223403033088
patch: mant = str . substring ( exp CaMeL Pos + 1 , 0 ) ; }
rank: 234
score: 99.40326286764706
patch: return str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 234
score: 99.3993671123798
patch: if ( exp CaMeL Pos < str . length ( ) )
rank: 234
score: 99.3973324424342
patch: mant = mant . substring ( str . length ( ) - exp CaMeL Pos ) ; }
rank: 234
score: 99.36039903428819
patch: mant = str . substring ( exp CaMeL Pos * exp CaMeL Pos + 1 ) ;
rank: 235
score: 99.48099949048913
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 235
score: 99.42170795641448
patch: mant = str . substring ( exp CaMeL Pos + 1 ) . length ( ) ; }
rank: 235
score: 99.40275304457721
patch: mant = str . substring ( exp CaMeL Pos ] - exp CaMeL Pos ) ;
rank: 235
score: 99.39910888671875
patch: exp = create CaMeL Integer ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 235
score: 99.39699096679688
patch: mant = ( str . substring ( exp CaMeL Pos - 1 ) - exp CaMeL Pos ) ;
rank: 235
score: 99.35987006293402
patch: b = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 236
score: 99.44257354736328
patch: mant = str . substring ( 0 , exp CaMeL Pos * 1 ) ;
rank: 236
score: 99.42131212022569
patch: throw new ; } mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 236
score: 99.40272352430556
patch: this . mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 236
score: 99.3968505859375
patch: mant = ( String ) str . substring ( str . length ( ) - 1 ) ;
rank: 237
score: 99.47789849175348
patch: mant = str . substring ( 0 , dec CaMeL Pos - 1 ) + 1 ;
rank: 237
score: 99.442333984375
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos + $NUMBER$ ) ;
rank: 237
score: 99.42051866319444
patch: mant = str . substring ( 0 , exp CaMeL Pos + 1 ) ; } ;
rank: 237
score: 99.35915120442708
patch: mant = str . starts CaMeL With ( $STRING$ ) ;
rank: 238
score: 99.458349609375
patch: exp = str . char CaMeL At ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 238
score: 99.42035590277777
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ; } ;
rank: 238
score: 99.40227912454044
patch: mant = str . substring ( 0 , exp CaMeL Pos , 1 ) ; ;
rank: 238
score: 99.39644165039063
patch: mant = mant . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ; break ;
rank: 238
score: 99.35884312220982
patch: z = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 239
score: 99.47992621527777
patch: if ( exp CaMeL Pos < str . length ( ) ) { exp = null ;
rank: 239
score: 99.47720191592262
patch: mant = create CaMeL Big CaMeL Integer ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 239
score: 99.41968536376953
patch: / * mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 239
score: 99.40214708116319
patch: mant = str . substring ( exp CaMeL Pos - 1 ) ; mant = 0 ;
rank: 239
score: 99.39651150173611
patch: val = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 239
score: 99.39610595703125
patch: mant = str . substring ( str . length ( ) + $NUMBER$ , exp CaMeL Pos ) ;
rank: 239
score: 99.35850614659927
patch: mant = Integer . parse CaMeL Int ( exp CaMeL Pos + 1 ) ; }
rank: 240
score: 99.47984008789062
patch: exp = str . substring ( 0 , exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 240
score: 99.47885964133523
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos - 1 ) ) ; }
rank: 240
score: 99.45768599076705
patch: throw new Number CaMeL Format CaMeL Exception ( str , str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 240
score: 99.44075927734374
patch: mant = mant . substring ( 0 , exp CaMeL Pos - str . length ( ) ) ;
rank: 240
score: 99.41933722245066
patch: mant = $STRING$ . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 240
score: 99.40154351128473
patch: mant += str . substring ( str . length ( ) , exp CaMeL Pos ) ;
rank: 240
score: 99.39612397693452
patch: if ( Character . is CaMeL Digit ( last CaMeL Char ) && last CaMeL Char != $STRING$ ) {
rank: 240
score: 99.39598931206598
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; ; break ; }
rank: 240
score: 99.35811360677083
patch: mant = str . to CaMeL Lower CaMeL Case ( ) . trim ( ) ; }
rank: 241
score: 99.479453125
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { exp = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 241
score: 99.4765392485119
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ; }
rank: 241
score: 99.44046020507812
patch: mant = new String ( str . substring ( exp CaMeL Pos ) , exp CaMeL Pos ) ;
rank: 241
score: 99.41891659007354
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + $NUMBER$ ; }
rank: 241
score: 99.40151638454861
patch: mant = str . substring ( $NUMBER$ , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 241
score: 99.39582905016448
patch: mant = ( int ) str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 241
score: 99.35783555772569
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + exp CaMeL Pos ) ;
rank: 242
score: 99.47941788383152
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , exp CaMeL Pos ) + $STRING$ ) ;
rank: 242
score: 99.47842407226562
patch: exp = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; } }
rank: 242
score: 99.41869399126838
patch: float exp CaMeL Pos = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 242
score: 99.40116373697917
patch: mant = str . substring ( exp CaMeL Pos ? exp CaMeL Pos : 0 ) ;
rank: 242
score: 99.39595540364583
patch: mant = create CaMeL Long ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 242
score: 99.3951416015625
patch: mant = str . substring ( str . length ( ) - $NUMBER$ ) ; break ;
rank: 242
score: 99.35746934678819
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; } } else {
rank: 243
score: 99.479326171875
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ) ;
rank: 243
score: 99.47838245738636
patch: mant = new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 243
score: 99.47581176757812
patch: mant = str . substring ( exp CaMeL Pos + 1 , this . exp CaMeL Pos ) ;
rank: 243
score: 99.4400390625
patch: mant = str . substring ( str . length ( ) , exp CaMeL Pos - 0 ) ;
rank: 243
score: 99.39588838465073
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ; } else {
rank: 243
score: 99.39467366536458
patch: mant = str . substring ( str . length ( ) ) ; break ; } }
rank: 243
score: 99.35725233289931
patch: mant = new Character ( str . char CaMeL At ( exp CaMeL Pos ) ) ;
rank: 244
score: 99.478447265625
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( str . length ( ) + 1 ) ) ;
rank: 244
score: 99.4782470703125
patch: exp = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; } else
rank: 244
score: 99.4757080078125
patch: exp = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos ) ; }
rank: 244
score: 99.45694580078126
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + str . length ( ) ) ;
rank: 244
score: 99.39588758680556
patch: str = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 244
score: 99.35694715711806
patch: mant = str . substring ( exp CaMeL Pos ) . trim ( ) ; } }
rank: 245
score: 99.47788783482143
patch: exp = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; } else {
rank: 245
score: 99.45688763786765
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str + $STRING$ ) ; }
rank: 245
score: 99.43999633789062
patch: str = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ;
rank: 245
score: 99.41628689236111
patch: mant = Math . max ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ;
rank: 245
score: 99.40071105957031
patch: mant = 0 ; mant = str . substring ( exp CaMeL Pos ) ;
rank: 245
score: 99.3958511352539
patch: mant = str . substring ( dec CaMeL Pos + 1 - 1 ) ;
rank: 245
score: 99.39444580078126
patch: mant = str . substring ( str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 246
score: 99.4781640625
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { mant = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 246
score: 99.47692289806548
patch: exp = str . substring ( exp CaMeL Pos + 1 ) . substring ( exp CaMeL Pos ) ;
rank: 246
score: 99.45652465820312
patch: exp = str . substring ( dec CaMeL Pos , str . length ( ) - 1 ) ;
rank: 246
score: 99.43997802734376
patch: mant = str . substring ( exp CaMeL Pos ? exp CaMeL Pos ] : - 1 ) ;
rank: 246
score: 99.40031433105469
patch: mant . mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 246
score: 99.39559597439236
patch: c = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 246
score: 99.39421251085069
patch: return str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ; }
rank: 246
score: 99.35660807291667
patch: mant = str . starts CaMeL With ( str . length ( ) - 1 ) ;
rank: 247
score: 99.47628348214286
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 1 , dec CaMeL Pos ) ) ;
rank: 247
score: 99.439892578125
patch: mant = str . substring ( exp CaMeL Pos - 1 , mant , exp CaMeL Pos ) ;
rank: 247
score: 99.41532175164474
patch: mant = str ; } mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 247
score: 99.40011257595486
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; mant = str ;
rank: 247
score: 99.39516872829861
patch: dec += str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 247
score: 99.39419991629464
patch: mant = exp . substring ( 0 , exp CaMeL Pos ) ;
rank: 247
score: 99.35642377068015
patch: mant = new Big CaMeL Integer ( str . length ( ) - 1 ) ;
rank: 248
score: 99.47628348214286
patch: dec = str . substring ( exp CaMeL Pos + 1 ) . index CaMeL Of ( $STRING$ ) ;
rank: 248
score: 99.47377707741477
patch: mant = str . substring ( dec CaMeL Pos - 1 , str . length ( ) - 1 ) ;
rank: 248
score: 99.45604183799342
patch: exp = str . substring ( dec CaMeL Pos - 1 , exp CaMeL Pos ) ; }
rank: 248
score: 99.43958129882813
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos + 0 ) ;
rank: 248
score: 99.41522623697917
patch: mant = Integer . parse CaMeL Int ( exp CaMeL Pos ) ; }
rank: 248
score: 99.3948974609375
patch: mant += str . substring ( dec CaMeL Pos + 1 ) ;
rank: 248
score: 99.39385665090461
patch: mant = str . append ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 249
score: 99.47370256696429
patch: exp = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ; }
rank: 249
score: 99.45594853940217
patch: dec = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 249
score: 99.4395751953125
patch: mant = str . substring ( 0 , str . length ( ) , exp CaMeL Pos ) ;
rank: 249
score: 99.39959716796875
patch: mant = str . substring ( ( 0 , exp CaMeL Pos ) - 1 ) ;
rank: 249
score: 99.39478895399306
patch: t = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 249
score: 99.39378356933594
patch: mant = exp . substring ( str . length ( ) - 1 ) ;
rank: 250
score: 99.47359035326087
patch: mant = str . substring ( exp CaMeL Pos + 1 , str . length ( ) - 1 ) ; }
rank: 250
score: 99.4557373046875
patch: dec = str . char CaMeL At ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 250
score: 99.41507720947266
patch: mant = new str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 250
score: 99.39923565204327
patch: mant = str . substring ( exp CaMeL Pos ] ) ;
rank: 250
score: 99.39439633018092
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ] ) ;
rank: 250
score: 99.39306030273437
patch: mant = str . substring ( 0 , exp CaMeL Pos , exp CaMeL Pos - 1 ) ;
rank: 250
score: 99.35567220052083
patch: mant = str . substring ( exp CaMeL Pos ) ; } else { throw new ;
rank: 251
score: 99.47735040838069
patch: exp = str . substring ( exp CaMeL Pos + 1 , str . length ( ) + 1 ) ;
rank: 251
score: 99.47567138671874
patch: exp = str . substring ( 0 , str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 251
score: 99.4735595703125
patch: mant = str . substring ( dec CaMeL Pos + 1 , this . exp CaMeL Pos ) ;
rank: 251
score: 99.45565941220238
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ; }
rank: 251
score: 99.41496725643383
patch: mant = str . trim ( ) . to CaMeL Lower CaMeL Case ( ) ;
rank: 251
score: 99.3991470336914
patch: mant = str . substring ( 0 + str . length ( ) ) ;
rank: 251
score: 99.39426141036184
patch: return create CaMeL Long ( exp CaMeL Pos + 1 , str . length ( ) ) ;
rank: 251
score: 99.39260525173611
patch: mant = str . substring ( str . length ( ) - ) ; break ; }
rank: 251
score: 99.3553695678711
patch: this . mant = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 252
score: 99.4552001953125
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 252
score: 99.43820190429688
patch: mant = str . substring ( 0 , exp CaMeL Pos + str . length ( ) ) ;
rank: 252
score: 99.39903259277344
patch: mant = str . substring ( exp CaMeL Pos ? 1 : 1 ) ;
rank: 252
score: 99.39232177734375
patch: mant = str . substring ( str . length ( ) - $NUMBER$ ) . length ( ) ;
rank: 252
score: 99.35530853271484
patch: mant = str . substring ( exp CaMeL Pos ) ; } return null ;
rank: 253
score: 99.47669677734375
patch: try { mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 253
score: 99.43812561035156
patch: mant = str . substring ( 0 , exp CaMeL Pos - $STRING$ ) ;
rank: 253
score: 99.41392686631944
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; continue ;
rank: 253
score: 99.39893341064453
patch: mant = str . substring ( ( exp CaMeL Pos - 1 ) ) ;
rank: 253
score: 99.39393615722656
patch: dec = str . substring ( dec CaMeL Pos , dec CaMeL Pos ) ;
rank: 253
score: 99.35474310980902
patch: mant = str . substring ( exp CaMeL Pos ) ; exp CaMeL Pos ++ ; }
rank: 254
score: 99.47517903645833
patch: exp = str . substring ( dec CaMeL Pos + 1 ) . index CaMeL Of ( $STRING$ ) ;
rank: 254
score: 99.47295735677083
patch: if ( exp CaMeL Pos > - 1 ) { exp = str ;
rank: 254
score: 99.43800048828125
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos + 0 ) ;
rank: 254
score: 99.41380964006696
patch: mant = Math . min ( 0 , exp CaMeL Pos ) ;
rank: 254
score: 99.39886474609375
patch: mant = str . substring ( $NUMBER$ , exp CaMeL Pos + 1 ) ;
rank: 254
score: 99.39161512586806
patch: mant = str . substring ( str . length ( ) - 1 , mant ) ;
rank: 254
score: 99.35404750279018
patch: str = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 255
score: 99.47604237432066
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( str . length ( ) - 1 ) ) ;
rank: 255
score: 99.4376953125
patch: mant = str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos - $NUMBER$ ) ;
rank: 255
score: 99.39388020833333
patch: mant = str . substring ( ! str . length ( ) ) ;
rank: 255
score: 99.39139404296876
patch: mant = str . substring ( str . length ( ) - exp CaMeL Pos ) + 1 ;
rank: 255
score: 99.35359461167279
patch: mant = str . substring ( exp CaMeL Pos - 1 ) ; } else {
rank: 256
score: 99.476025390625
patch: if ( exp CaMeL Pos >= dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 256
score: 99.4726333618164
patch: mant = str . substring ( dec CaMeL Pos + 1 , $NUMBER$ ) ;
rank: 256
score: 99.43765869140626
patch: try { mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 256
score: 99.41218397352431
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } else break ;
rank: 256
score: 99.39853084788604
patch: mant = str . substring ( 0 , exp CaMeL Pos ? 1 : ) ;
rank: 256
score: 99.39094812729779
patch: mant = ( Integer ) str . substring ( exp CaMeL Pos + 1 ) ;
rank: 257
score: 99.45455799932066
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 257
score: 99.43759155273438
patch: mant = str . substring ( str . trim ( ) , exp CaMeL Pos - 0 ) ;
rank: 257
score: 99.41206440172698
patch: mant = Math . max ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ; }
rank: 257
score: 99.39841037326389
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; mant = ) ;
rank: 257
score: 99.39083251953124
patch: mant = mant . substring ( str . length ( ) - exp CaMeL Pos - 1 ) ;
rank: 257
score: 99.35292154947916
patch: mant = str . substring ( start , exp CaMeL Pos ) ; }
rank: 258
score: 99.47416606702302
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } else { mant = null ;
rank: 258
score: 99.4723876953125
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) - 1 ;
rank: 258
score: 99.43690321180556
patch: mant = exp . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 258
score: 99.39834594726562
patch: mant = str . substring ( 0 : 0 , exp CaMeL Pos ) ;
rank: 258
score: 99.393310546875
patch: exp = str . char CaMeL At ( dec CaMeL Pos + 1 ) ;
rank: 258
score: 99.39053005642361
patch: mant = str . substring ( str . length ( ) ) . length ( ) ;
rank: 258
score: 99.35234518612133
patch: mant = str . substring ( exp CaMeL Pos ) ; mant = str ; }
rank: 259
score: 99.47499150815217
patch: if ( exp CaMeL Pos >= dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 259
score: 99.43678792317708
patch: mant = Math . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 259
score: 99.41111537388393
patch: result = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 259
score: 99.3983154296875
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; exp = mant ;
rank: 259
score: 99.39051729090073
patch: mant = str . append ( 0 , exp CaMeL Pos ) ; break ; }
rank: 259
score: 99.35223029641544
patch: mant = str . substring ( exp CaMeL Pos ) . append ( $STRING$ ) ;
rank: 260
score: 99.47466430664062
patch: exp = str . to CaMeL String ( ) . substring ( dec CaMeL Pos + 1 ) ;
rank: 260
score: 99.45389229910714
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str
rank: 260
score: 99.43504028320312
patch: mant = this . str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 260
score: 99.410986328125
patch: mant += str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 260
score: 99.39822208180146
patch: mant . add ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 260
score: 99.39043112362133
patch: return str . substring ( str . length ( ) - exp CaMeL Pos ) ;
rank: 260
score: 99.35197618272569
patch: mant = str . trim ( ) ; mant = str . trim ( ) ; }
rank: 261
score: 99.474580078125
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , str . length ( ) - 1 ) ) ;
rank: 261
score: 99.47112482244319
patch: mant = str . substring ( dec CaMeL Pos + 1 ) + str . length ( ) - 1 ;
rank: 261
score: 99.45362490699405
patch: mant = str . starts CaMeL With ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 261
score: 99.4349300986842
patch: mant = str . substring ( 0 , exp CaMeL Pos ? exp CaMeL Pos ] } ;
rank: 261
score: 99.39807807074652
patch: mant = str . substring ( ( exp CaMeL Pos ) , exp CaMeL Pos ) ;
rank: 261
score: 99.39302571614583
patch: d = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 261
score: 99.39028033088235
patch: return new Integer ( str . substring ( exp CaMeL Pos - 1 ) ) ;
rank: 261
score: 99.35197179457721
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; continue ; }
rank: 262
score: 99.45340728759766
patch: mant = str . substring ( 0 , dec CaMeL Pos ) ; } }
rank: 262
score: 99.43462524414062
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp , exp CaMeL Pos ) ;
rank: 262
score: 99.41069592927632
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } mant = str ;
rank: 262
score: 99.39781951904297
patch: mant = str . substring ( $STRING$ . length ( ) - 0 ) ;
rank: 262
score: 99.39248996310764
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos < exp CaMeL Pos )
rank: 262
score: 99.3902587890625
patch: mant = ( byte ) str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 262
score: 99.35093858506944
patch: mant = str . substring ( exp CaMeL Pos ) . append ( $STRING$ ) ; }
rank: 263
score: 99.47422281901042
patch: exp = str . substring ( dec CaMeL Pos + $NUMBER$ , exp CaMeL Pos ) ;
rank: 263
score: 99.45283435639881
patch: exp = create CaMeL Big CaMeL Integer ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 263
score: 99.43414916992188
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) + 1 ;
rank: 263
score: 99.3975471047794
patch: mant = str . substring ( exp CaMeL Pos 1 - exp CaMeL Pos ) ;
rank: 263
score: 99.39020385742188
patch: mant = str . substring ( str . length ( ) - 1 ) . trim ( ) ;
rank: 263
score: 99.3500732421875
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 264
score: 99.47238026494566
patch: mant = str . substring ( exp CaMeL Pos + 1 ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 264
score: 99.46935272216797
patch: exp = str . substring ( 0 , exp CaMeL Pos ) + 1 ;
rank: 264
score: 99.39169921875
patch: dec = str . substring ( dec CaMeL Pos ) ; } else {
rank: 264
score: 99.38936767578124
patch: mant = mant . substring ( str . length ( ) + 1 , exp CaMeL Pos ) ;
rank: 264
score: 99.34990377987133
patch: mant = str . substring ( 1 , exp CaMeL Pos + 1 ) ; }
rank: 265
score: 99.47359619140624
patch: exp = str . substring ( exp CaMeL Pos + 1 ) . to CaMeL String ( ) ;
rank: 265
score: 99.4522933959961
patch: mant = str . char CaMeL At ( 0 , exp CaMeL Pos ) ;
rank: 265
score: 99.40825737847223
patch: mant = str . index CaMeL Of ( $STRING$ , exp CaMeL Pos ) ; break ;
rank: 265
score: 99.39104817708333
patch: { mant = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 265
score: 99.34896647135416
patch: final mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 266
score: 99.45220626027961
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } dec = null ;
rank: 266
score: 99.43359375
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos * 1 ) ;
rank: 266
score: 99.39651489257812
patch: mant = str . substring ( str . length ( ) ) + 1 ;
rank: 266
score: 99.3910140991211
patch: if ( exp CaMeL Pos == str . length ( ) - 1 ) {
rank: 267
score: 99.47326129415761
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos + 1 ) - 1 ) ;
rank: 267
score: 99.45216279871323
patch: dec = str . substring ( 0 , dec CaMeL Pos + 1 ) ; }
rank: 267
score: 99.43256971571181
patch: mant = Math . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 267
score: 99.40675113075658
patch: mant = str . index CaMeL Of ( $STRING$ ) . index CaMeL Of ( $STRING$ ) ;
rank: 268
score: 99.4712550951087
patch: mant = str . substring ( dec CaMeL Pos - 1 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 268
score: 99.46741440716912
patch: exp = str . substring ( exp CaMeL Pos + 1 , - 1 ) ;
rank: 268
score: 99.39640299479167
patch: mant = str . substring ( str . to CaMeL Lower CaMeL Case ( ) ) ;
rank: 268
score: 99.39083523220486
patch: return create CaMeL Long ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 268
score: 99.38863525390624
patch: mant = str . substring ( str . length ( ) + str . length ( ) ) ;
rank: 268
score: 99.34852510340073
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; return str ;
rank: 269
score: 99.47109503495066
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + exp CaMeL Pos - 1 ) ; }
rank: 269
score: 99.46673583984375
patch: mant = str . substring ( exp CaMeL Pos + 1 , $NUMBER$ ) ;
rank: 269
score: 99.43227025082237
patch: mant = str . substring ( exp CaMeL Pos ? exp CaMeL Pos ] : 0 ) ;
rank: 269
score: 99.39030151367187
patch: dec = str . substring ( ! Character . is CaMeL Digit ( last CaMeL Char ) ) ;
rank: 269
score: 99.3885498046875
patch: mant = str . substring ( str . length ( ) * str . length ( ) ) ;
rank: 269
score: 99.34811197916666
patch: String str = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 270
score: 99.46613905164931
patch: numeric = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 270
score: 99.43214818050987
patch: mant = str . substring ( exp CaMeL Pos + - 0 , exp CaMeL Pos ) ;
rank: 270
score: 99.40581597222223
patch: mant = str . substring ( 0 , exp CaMeL Pos - 0 ) ; } ;
rank: 270
score: 99.39014956825658
patch: { dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 270
score: 99.34777153862848
patch: mant = str . trim ( ) . to CaMeL Lower CaMeL Case ( ) ; }
rank: 271
score: 99.4728473165761
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( dec CaMeL Pos + 1 ) - 1 ) ;
rank: 271
score: 99.45089721679688
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 271
score: 99.40535481770833
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; * /
rank: 271
score: 99.39568328857422
patch: mant = str . substring ( exp CaMeL Pos - 0 , mant ) ;
rank: 271
score: 99.38993835449219
patch: exp = str . substring ( dec CaMeL Pos + 1 ) ; break ;
rank: 271
score: 99.34757995605469
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; ; }
rank: 272
score: 99.47281494140626
patch: throw new Number CaMeL Format CaMeL Exception ( str . starts CaMeL With ( $STRING$ ) ) ; }
rank: 272
score: 99.46552191840277
patch: mant = str . substring ( exp CaMeL Pos - 1 , dec CaMeL Pos ) ;
rank: 272
score: 99.45079456676136
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str +
rank: 272
score: 99.39545754825367
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } else ;
rank: 272
score: 99.38988494873047
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) ) {
rank: 272
score: 99.38751831054688
patch: mant = str . substring ( str . length ( ) , mant . length ( ) ) ;
rank: 273
score: 99.45071411132812
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + dec CaMeL Pos + $STRING$ ) ;
rank: 273
score: 99.40495300292969
patch: mant = str = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 273
score: 99.39545084635417
patch: mant = str . substring ( 0 , exp CaMeL Pos , ) ;
rank: 273
score: 99.34686957465277
patch: exp CaMeL Pos = str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 274
score: 99.47224731445313
patch: try { return create CaMeL Long ( str . substring ( dec CaMeL Pos + 1 ) ) ;
rank: 274
score: 99.46970825195312
patch: dec = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos - 1 ) ;
rank: 274
score: 99.43182373046875
patch: mant = str . substring ( 0 , str . trim ( ) , exp CaMeL Pos ) ;
rank: 274
score: 99.39525010850694
patch: mant = str . substring ( 0 + exp CaMeL Pos - 0 , 1 ) ;
rank: 274
score: 99.38967063210227
patch: dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 274
score: 99.34674627130681
patch: mant = new Integer ( exp CaMeL Pos ) ;
rank: 275
score: 99.43142700195312
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos + $NUMBER$ ) ;
rank: 275
score: 99.40486225328948
patch: mant = str . substring ( 0 , exp CaMeL Pos - 0 ) ; break ; }
rank: 275
score: 99.39515686035156
patch: mant = str . substring ( 0 / exp CaMeL Pos - 1 ) ;
rank: 275
score: 99.38965454101563
patch: dec = str . substring ( ! Character . is CaMeL Digit ( exp CaMeL Pos ) ) ;
rank: 275
score: 99.34672037760417
patch: mant = name . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 276
score: 99.469482421875
patch: dec = str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 276
score: 99.46310085720486
patch: exp CaMeL Pos = str . char CaMeL At ( exp CaMeL Pos - 1 ) ;
rank: 276
score: 99.40456814236111
patch: mant = str . substring ( 0 , exp CaMeL Pos - 0 ) ; } }
rank: 276
score: 99.39481608072917
patch: mant = ( str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ) ;
rank: 276
score: 99.38939711626838
patch: dec = str . substring ( 0 , dec CaMeL Pos ) ; } else {
rank: 277
score: 99.471875
patch: mant = str . substring ( dec CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) - 1 ) ;
rank: 277
score: 99.43107096354167
patch: exp = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 277
score: 99.40442572699652
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } else { }
rank: 277
score: 99.39418658088235
patch: mant = str . substring ( 0 + exp CaMeL Pos - 1 ) ; }
rank: 277
score: 99.38934326171875
patch: exp = str . substring ( dec CaMeL Pos + 1 + 1 ) ;
rank: 277
score: 99.34638977050781
patch: return str . substring ( exp CaMeL Pos + exp CaMeL Pos ) ; }
rank: 278
score: 99.46255493164062
patch: mant = str . substring ( 0 , dec CaMeL Pos ) . length ( ) - 1 ;
rank: 278
score: 99.43039279513889
patch: mant = str . substring ( 0 , exp CaMeL Pos - 0 , 0 ) ;
rank: 278
score: 99.38909233940973
patch: tmp = create CaMeL Integer ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 278
score: 99.38595920138889
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; mant = $NUMBER$ ;
rank: 278
score: 99.3455078125
patch: this . mant = str . substring ( exp CaMeL Pos ) ; }
rank: 279
score: 99.46878184442934
patch: exp = str . substring ( dec CaMeL Pos - 1 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 279
score: 99.46199340820313
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) - 1 ;
rank: 279
score: 99.44937936883224
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ , exp CaMeL Pos ) ; }
rank: 279
score: 99.43006727430556
patch: mant = ( str . substring ( exp CaMeL Pos ) , exp CaMeL Pos ) ;
rank: 279
score: 99.40339211856617
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; ; } }
rank: 279
score: 99.3890380859375
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + dec CaMeL Pos ) ;
rank: 280
score: 99.47093563988095
patch: mant = str . substring ( 0 , str . index CaMeL Of ( $STRING$ ) + 1 ) ;
rank: 280
score: 99.46866647820724
patch: exp = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ; }
rank: 280
score: 99.46166274126838
patch: exp = str . substring ( dec CaMeL Pos + 1 , - 1 ) ;
rank: 280
score: 99.39289686414931
patch: mant . else { mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 280
score: 99.38874368106617
patch: return str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 280
score: 99.34509995404412
patch: mant = str . substring ( exp . length ( ) + 1 ) ; }
rank: 281
score: 99.44921875
patch: mant += str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 281
score: 99.40234375
patch: return str ; } mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 281
score: 99.39283752441406
patch: mant = str . substring ( str . length ( ) + 0 ) ;
rank: 281
score: 99.38864135742188
patch: b = create CaMeL Long ( str . length ( ) - 1 ) ;
rank: 281
score: 99.3448486328125
patch: return new Big CaMeL Integer ( str . substring ( exp CaMeL Pos ) ) ;
rank: 282
score: 99.47060818142361
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + last CaMeL Char ) ;
rank: 282
score: 99.4276187294408
patch: mant = new str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 282
score: 99.40215743215461
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . length ( ) ; }
rank: 282
score: 99.39262120863971
patch: mant = str . substring ( exp CaMeL Pos exp CaMeL Pos - 1 ) ;
rank: 282
score: 99.38863118489583
patch: text = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 282
score: 99.38544921875
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; mant += exp CaMeL Pos ;
rank: 283
score: 99.46654052734375
patch: exp = str . substring ( dec CaMeL Pos - 1 , str . length ( ) ) ;
rank: 283
score: 99.46118842230902
patch: exp = str . substring ( 0 , mant . length ( ) - 1 ) ;
rank: 283
score: 99.4271240234375
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . append ( $STRING$ ) ;
rank: 283
score: 99.40086605674342
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } else { ; }
rank: 283
score: 99.38531815378289
patch: mant = str . substring ( str . length ( ) - $NUMBER$ ) ; break ; }
rank: 283
score: 99.34420572916666
patch: return str . substring ( exp CaMeL Pos + exp CaMeL Pos ) ;
rank: 284
score: 99.42655222039474
patch: mant = str . substring ( exp CaMeL Pos - - 0 , exp CaMeL Pos ) ;
rank: 284
score: 99.40048699629934
patch: mant = str . equals ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 284
score: 99.38529052734376
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ; continue ;
rank: 284
score: 99.34391276041667
patch: mant = name . substring ( 0 , exp CaMeL Pos ) ; }
rank: 285
score: 99.47033203125
patch: if ( exp CaMeL Pos <= dec CaMeL Pos ) { exp = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 285
score: 99.44874974300987
patch: dec = str . substring ( dec CaMeL Pos - 1 , exp CaMeL Pos ) ; }
rank: 285
score: 99.42617458767361
patch: mant = ( str . substring ( 0 , exp CaMeL Pos ) + 1 ) ;
rank: 285
score: 99.40029425370066
patch: mant = Math . max ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 285
score: 99.38748168945312
patch: mant = str . substring ( 0 + dec CaMeL Pos + 1 ) ;
rank: 285
score: 99.38471069335938
patch: mant = mant . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; break ;
rank: 285
score: 99.34388643152573
patch: return new Double ( str . substring ( exp CaMeL Pos - 1 ) ) ;
rank: 286
score: 99.46615600585938
patch: try { mant = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 286
score: 99.45933024088542
patch: exp = str . char CaMeL At ( str . length ( ) - 1 ) ;
rank: 286
score: 99.44856063179348
patch: exp = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 286
score: 99.40005011307566
patch: throw ( Number CaMeL Format CaMeL Exception ) new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 286
score: 99.39169491038604
patch: mant = str . substring ( str . length ( ) - - 1 ) ;
rank: 286
score: 99.38739013671875
patch: mant = str . to CaMeL String ( ) . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 286
score: 99.3846435546875
patch: mant = str . substring ( str . trim ( ) . length ( ) - $NUMBER$ ) ;
rank: 286
score: 99.34349229600694
patch: mant = str . char CaMeL At ( exp CaMeL Pos + 1 ) ; break ;
rank: 287
score: 99.46991930509868
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + exp CaMeL Pos + $STRING$ ) ; }
rank: 287
score: 99.45917426215277
patch: mant = str . substring ( 0 , dec CaMeL Pos - dec CaMeL Pos ) ;
rank: 287
score: 99.4485575358073
patch: exp CaMeL Pos += str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ; }
rank: 287
score: 99.39940643310547
patch: mant = str . index CaMeL Of ( 0 , exp CaMeL Pos ) ;
rank: 287
score: 99.39122178819444
patch: mant += str . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ;
rank: 287
score: 99.38729422433036
patch: buf = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 287
score: 99.38453504774306
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; break ; } else
rank: 288
score: 99.46928478422619
patch: exp = str . substring ( 0 , str . index CaMeL Of ( $STRING$ ) + 1 ) ;
rank: 288
score: 99.46561104910714
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos ) + $STRING$ ) ;
rank: 288
score: 99.45901309742646
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 ) ; }
rank: 288
score: 99.44830322265625
patch: mant = str . substring ( str . index CaMeL Of ( $STRING$ ) + 1 ) ; }
rank: 288
score: 99.42505754743304
patch: mant = str . substring ( str . trim ( ) ) ;
rank: 288
score: 99.39802820542279
patch: mant = str . substring ( 0 , exp CaMeL Pos - $NUMBER$ ) ; }
rank: 288
score: 99.39110649956598
patch: mant += str . substring ( 0 , exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 288
score: 99.38728841145833
patch: return create CaMeL Integer ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 288
score: 99.38430989583334
patch: return new str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 288
score: 99.34324735753677
patch: } else { mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 289
score: 99.46909790039062
patch: mant = str . to CaMeL String ( ) . substring ( exp CaMeL Pos + 1 ) ;
rank: 289
score: 99.45894775390624
patch: return create CaMeL Big CaMeL Integer ( str . substring ( 0 , dec CaMeL Pos ) ) ;
rank: 289
score: 99.42494603207237
patch: mant = mant . substring ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 289
score: 99.3966064453125
patch: mant ; ; } mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 289
score: 99.39047241210938
patch: mant = str . substring ( str . 0 , exp CaMeL Pos ) ;
rank: 289
score: 99.38699679904514
patch: q = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 289
score: 99.34242757161458
patch: mant = str . substring ( exp CaMeL Pos ) ; ++ exp CaMeL Pos ; }
rank: 290
score: 99.3957583778783
patch: mant = Math . max ( exp CaMeL Pos , exp CaMeL Pos ) ; break ; }
rank: 290
score: 99.39024353027344
patch: mant = substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 290
score: 99.38677368164062
patch: mant = str . substring ( ! Character . is CaMeL Blank ( exp CaMeL Pos ) ) ;
rank: 290
score: 99.38388671875
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . length ( ) + 1 ;
rank: 290
score: 99.34237670898438
patch: mant = str . substring ( 0 , exp CaMeL Pos 1 ) ; }
rank: 291
score: 99.46493928328805
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos < str . length ( ) - 1 ) {
rank: 291
score: 99.44780883789062
patch: mant = str . to CaMeL String ( ) . substring ( 0 , exp CaMeL Pos ) ;
rank: 291
score: 99.39555089613971
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; ; break ;
rank: 291
score: 99.39012993706598
patch: mant = str . substring ( 0 , exp CaMeL Pos ? 0 : 0 ) ;
rank: 291
score: 99.38367377387152
patch: mant = ( mant . length ( ) - exp CaMeL Pos ) ; break ; }
rank: 292
score: 99.468359375
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( exp CaMeL Pos + 1 ) - 1 ) ;
rank: 292
score: 99.46454148065476
patch: exp = str . substring ( 0 , exp CaMeL Pos ) . substring ( exp CaMeL Pos ) ;
rank: 292
score: 99.44735107421874
patch: exp = create CaMeL Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 292
score: 99.39010281032986
patch: mant = str . substring ( exp CaMeL Pos , 0 , exp CaMeL Pos ) ;
rank: 292
score: 99.38362201891448
patch: mant = str . substring ( str . length ( ) , exp CaMeL Pos ) ; ;
rank: 292
score: 99.34183756510417
patch: mant = str . substring ( exp CaMeL Pos ) ; continue ; }
rank: 293
score: 99.46825561523437
patch: exp = str . substring ( 0 , exp CaMeL Pos ) + str . length ( ) ;
rank: 293
score: 99.4580078125
patch: mant = str . substring ( dec CaMeL Pos - 1 , dec CaMeL Pos - 1 ) ;
rank: 293
score: 99.44692847842262
patch: mant = str . char CaMeL At ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 293
score: 99.39489067925348
patch: mant = str . index CaMeL Of ( $STRING$ ) + $STRING$ + exp CaMeL Pos ;
rank: 293
score: 99.39002143012152
patch: mant = str . substring ( exp CaMeL Pos + 0 - exp CaMeL Pos ) ;
rank: 293
score: 99.3834228515625
patch: mant = ( mant . length ( ) - exp CaMeL Pos ) ;
rank: 293
score: 99.3416748046875
patch: mant = str ; mant = str . substring ( exp CaMeL Pos - 1 ) ;
rank: 294
score: 99.457861328125
patch: return create CaMeL Big CaMeL Integer ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 294
score: 99.39002143012152
patch: mant = str . substring ( exp CaMeL Pos - 1 ) ; mant = mant ;
rank: 294
score: 99.3860724954044
patch: exp = str . substring ( 0 , dec CaMeL Pos ) ; } else {
rank: 295
score: 99.46735945991848
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos + 1 ) , $STRING$ ) ;
rank: 295
score: 99.45774332682292
patch: numeric = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 295
score: 99.44614129317434
patch: mant += str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 295
score: 99.39469146728516
patch: mant = $STRING$ + str . substring ( 0 , exp CaMeL Pos ) ;
rank: 295
score: 99.39000786675348
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; exp = 0 ;
rank: 295
score: 99.38319091796875
patch: mant = ( str . substring ( 0 , exp CaMeL Pos ) ) . length ( ) ;
rank: 295
score: 99.34134114583334
patch: return new Number ( str . substring ( exp CaMeL Pos ) ) ;
rank: 296
score: 99.46319025213069
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ && exp CaMeL Pos < str . length ( ) ) ;
rank: 296
score: 99.446044921875
patch: this . mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 296
score: 99.42332056949013
patch: mant = str . substring ( 0 , exp CaMeL Pos - = exp CaMeL Pos ) ;
rank: 296
score: 99.39446700246711
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; } ) ;
rank: 296
score: 99.3897705078125
patch: mant = str . substring ( 0 , exp CaMeL Pos - 0 , 1 ) ;
rank: 296
score: 99.38585316051136
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) && last CaMeL Char == $STRING$ ) {
rank: 296
score: 99.38309518914474
patch: this . mant = str . substring ( 0 , exp CaMeL Pos ) ; break ; }
rank: 297
score: 99.46241396949405
patch: return new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 297
score: 99.45765686035156
patch: exp = str . substring ( dec CaMeL Pos + 1 , 1 ) ;
rank: 297
score: 99.44595336914062
patch: exp = str . substring ( 0 , dec CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 297
score: 99.42318725585938
patch: mant = Math . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 297
score: 99.3936996459961
patch: mant = str . starts CaMeL With ( $STRING$ ) ? $STRING$ : $STRING$ ;
rank: 297
score: 99.38934326171875
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) + $STRING$ ;
rank: 297
score: 99.38566080729167
patch: return create CaMeL Integer ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 297
score: 99.34083387586806
patch: field = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 298
score: 99.46653053977273
patch: if ( exp CaMeL Pos > - 1 ) { throw new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 298
score: 99.45713297526042
patch: exp CaMeL Pos = str . substring ( str . length ( ) - 1 ) ;
rank: 298
score: 99.44530188519022
patch: exp CaMeL Pos = str . starts CaMeL With ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 298
score: 99.42289225260417
patch: mant = str . substring ( start , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 298
score: 99.39354705810547
patch: do { mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 298
score: 99.38926786534927
patch: mant = ( mant ) str . substring ( 0 , exp CaMeL Pos ) ;
rank: 298
score: 99.38533782958984
patch: dec = str . substring ( dec CaMeL Pos + 1 ) + 1 ;
rank: 298
score: 99.38239135742188
patch: mant = str . substring ( str . length ( ) ) ; mant = exp CaMeL Pos ;
rank: 298
score: 99.34078640407986
patch: return new Double ( str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 299
score: 99.461669921875
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } else { exp = null ;
rank: 299
score: 99.44460227272727
patch: mant = str . substring ( dec CaMeL Pos + 1 , str . length ( ) ) + 1 ;
rank: 299
score: 99.42249213324652
patch: mant = value . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 299
score: 99.38526675575658
patch: String exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 299
score: 99.38220893012152
patch: return str . substring ( str . length ( ) , exp CaMeL Pos ) ; }
rank: 299
score: 99.33986253004808
patch: mant = str . substring ( exp CaMeL Pos ) ) ;
rank: 300
score: 99.46607801649306
patch: return create CaMeL Integer ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 300
score: 99.46117292131696
patch: return new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 300
score: 99.45709228515625
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) + 1 ;
rank: 300
score: 99.42219623766448
patch: mant = Math . trim ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 300
score: 99.3934326171875
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } else mant ;
rank: 300
score: 99.38854302300348
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) + 0 ;
rank: 300
score: 99.3849868774414
patch: exp = str . substring ( dec CaMeL Pos , exp CaMeL Pos ) ;
rank: 300
score: 99.33978949652777
patch: director = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 301
score: 99.46607055664063
patch: return create CaMeL Integer ( str . substring ( 0 , exp CaMeL Pos + 1 ) ) ;
rank: 301
score: 99.46108610733695
patch: exp = str . substring ( exp CaMeL Pos + 1 ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 301
score: 99.39333624588816
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos + 1 ) ; }
rank: 301
score: 99.38850911458333
patch: mant = str . substring ( exp CaMeL Pos || exp CaMeL Pos > 0 ) ;
rank: 301
score: 99.38443756103516
patch: mant = str . substring ( dec CaMeL Pos + 1 ) ; } else
rank: 301
score: 99.38184814453125
patch: mant = mant . substring ( str . length ( ) , exp CaMeL Pos - 1 ) ;
rank: 301
score: 99.33973604090073
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; } continue ;
rank: 302
score: 99.46571416440217
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { exp = str . substring ( dec CaMeL Pos ) ;
rank: 302
score: 99.45675526494566
patch: exp = str . substring ( 0 , exp CaMeL Pos ) . substring ( dec CaMeL Pos + 1 ) ;
rank: 302
score: 99.39310031467014
patch: mant = Math . max ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 302
score: 99.38848876953125
patch: mant = str . substring ( 0 + exp CaMeL Pos - 0 , 0 ) ;
rank: 302
score: 99.38407628676471
patch: return create CaMeL Number ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 302
score: 99.33970811631944
patch: mant = new Double ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 303
score: 99.46551513671875
patch: if ( exp CaMeL Pos > - 1 ) { exp = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 303
score: 99.4436565896739
patch: exp = str . substring ( dec CaMeL Pos + 1 , str . length ( ) - 1 ) ; }
rank: 303
score: 99.39283040364583
patch: mant = str . replace ( 0 , exp CaMeL Pos ) ; }
rank: 303
score: 99.38814968532986
patch: str = str . substring ( str . length ( ) - exp CaMeL Pos ) ;
rank: 303
score: 99.38399505615234
patch: buf = create CaMeL Long ( str . length ( ) - 1 ) ;
rank: 303
score: 99.38175884046052
patch: mant = str . substring ( str . index CaMeL Of ( $STRING$ ) - 1 ) ;
rank: 303
score: 99.33952780330883
patch: mant = str . substring ( Math . abs ( exp CaMeL Pos ) ) ;
rank: 304
score: 99.465126953125
patch: if ( exp CaMeL Pos >= dec CaMeL Pos ) { exp = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 304
score: 99.4565185546875
patch: try { mant = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 304
score: 99.41954210069444
patch: mant = exp . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 304
score: 99.39267985026042
patch: mant = new Double ( str . char CaMeL At ( exp CaMeL Pos ) ) ;
rank: 304
score: 99.38801792689732
patch: mant += str . substring ( str . length ( ) ) ;
rank: 304
score: 99.38100714432566
patch: mant = str . substring ( 0 , 0 , exp CaMeL Pos ) ; break ; }
rank: 305
score: 99.45643615722656
patch: exp = str . substring ( exp CaMeL Pos + 1 , 1 ) ;
rank: 305
score: 99.39206112132354
patch: throw ; } mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 305
score: 99.38389756944444
patch: mant = str . substring ( dec CaMeL Pos . length ( ) - 1 ) ;
rank: 305
score: 99.33903234145221
patch: mant = $STRING$ ; } mant = str . substring ( exp CaMeL Pos ) ;
rank: 306
score: 99.46429443359375
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + exp CaMeL Pos + str ) ;
rank: 306
score: 99.46022338867188
patch: last CaMeL Char = str . substring ( 0 , str . length ( ) - 1 ) ;
rank: 306
score: 99.44317336309524
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str
rank: 306
score: 99.39044952392578
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; } ;
rank: 306
score: 99.38387044270833
patch: if ( exp CaMeL Pos < - 1 && exp CaMeL Pos < dec CaMeL Pos )
rank: 306
score: 99.3806396484375
patch: mant = str . substring ( exp CaMeL Pos - 1 . length ( ) - 1 ) ;
rank: 307
score: 99.4641621907552
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( exp CaMeL Pos - 1 ) ) ; }
rank: 307
score: 99.46012369791667
patch: dec = str . substring ( exp CaMeL Pos ) ;
rank: 307
score: 99.45604248046875
patch: exp = str . substring ( dec CaMeL Pos + 1 ) . length ( ) - 1 ;
rank: 307
score: 99.4183413856908
patch: mant . append ( str . substring ( 0 , exp CaMeL Pos - 1 ) ) ;
rank: 307
score: 99.38770209418402
patch: mant = str . substring ( str . length ( ) ( ) - 1 ) ;
rank: 307
score: 99.38055741159539
patch: mant = str . substring ( str . length ( ) - exp CaMeL Pos ) ; ;
rank: 307
score: 99.3381591796875
patch: return str . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 308
score: 99.46381971571181
patch: return create CaMeL Integer ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 308
score: 99.44297388980263
patch: mant $NUMBER$ = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 308
score: 99.41827392578125
patch: mant = str . substring ( exp CaMeL Pos * 0 , exp CaMeL Pos ) ;
rank: 308
score: 99.38764504825367
patch: mant = str . substring ( $STRING$ . substring ( exp CaMeL Pos ) ) ;
rank: 308
score: 99.38374159071181
patch: return create CaMeL Long ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 308
score: 99.38021511501736
patch: return new Long ( str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 308
score: 99.33784484863281
patch: mant = str . substring ( exp . length ( ) - 1 ) ;
rank: 309
score: 99.45565795898438
patch: mant = str . substring ( exp CaMeL Pos + str . length ( ) - 1 ) ;
rank: 309
score: 99.44285946800595
patch: exp = create CaMeL Big CaMeL Integer ( str . substring ( 0 , dec CaMeL Pos ) ) ;
rank: 309
score: 99.41718885633681
patch: mant = str . substring ( exp CaMeL Pos * exp CaMeL Pos - 1 ) ;
rank: 309
score: 99.38858371310764
patch: mant ; exp CaMeL Pos = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 309
score: 99.38734741210938
patch: mant = str . substring ( 1 ) ;
rank: 309
score: 99.37987467447917
patch: mant = new Integer ( str . length ( ) - 1 ) ;
rank: 309
score: 99.33774239676339
patch: this . mant = str . substring ( exp CaMeL Pos ) ;
rank: 310
score: 99.46358058763587
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( dec CaMeL Pos + 1 ) , $STRING$ ) ;
rank: 310
score: 99.4425632642663
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , str . length ( ) ) ; }
rank: 310
score: 99.38742244944854
patch: mant = str . index CaMeL Of ( 0 , exp CaMeL Pos ) ; }
rank: 310
score: 99.37957442434211
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; mant = 0 ; }
rank: 310
score: 99.33717854817708
patch: z = str . substring ( exp CaMeL Pos ) ;
rank: 311
score: 99.46325073242187
patch: return create CaMeL Integer ( str . substring ( 0 , dec CaMeL Pos + 1 ) ) ;
rank: 311
score: 99.44196111505681
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str +
rank: 311
score: 99.4168342141544
patch: mant = str . substring ( exp CaMeL Pos $NUMBER$ , exp CaMeL Pos ) ;
rank: 311
score: 99.38725450303819
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + 1 ; break ;
rank: 311
score: 99.38715676700367
patch: mant = str . equals ( str . substring ( exp CaMeL Pos ) ) ;
rank: 311
score: 99.38353474934895
patch: if ( exp CaMeL Pos >= dec CaMeL Pos ) {
rank: 311
score: 99.3794921875
patch: mant = str . substring ( str . length ( ) - exp CaMeL Pos ) ; } else
rank: 311
score: 99.33687337239583
patch: mant = name . substring ( exp CaMeL Pos + 1 ) ; }
rank: 312
score: 99.44177734375
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { exp = Number CaMeL Utils . create CaMeL Float ( str ) ;
rank: 312
score: 99.38721381293402
patch: mant = str . index CaMeL Of ( str . length ( ) - 1 ) ;
rank: 312
score: 99.38258870442708
patch: exp = create CaMeL Integer ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 312
score: 99.37948447779605
patch: mant = str . substring ( str . length ( ) 0 , exp CaMeL Pos ) ;
rank: 312
score: 99.33662923177083
patch: mant = str . substring ( exp CaMeL Pos ) ; return str ;
rank: 313
score: 99.46187918526786
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str ) ;
rank: 313
score: 99.45866124770221
patch: exp = str . substring ( exp CaMeL Pos + 1 ) ; } else {
rank: 313
score: 99.45484076605902
patch: try { mant = str . substring ( 0 , dec CaMeL Pos - 1 ) ;
rank: 313
score: 99.44021170479911
patch: mant = str . substring ( 1 , dec CaMeL Pos ) ;
rank: 313
score: 99.38191731770833
patch: r = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 313
score: 99.33506556919643
patch: mant = str . substring ( exp CaMeL Pos ) ; } else
rank: 314
score: 99.45446196056548
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos - 1 ) ; }
rank: 314
score: 99.38653971354167
patch: mant = str . substring ( 0 + exp CaMeL Pos 1 ) ;
rank: 314
score: 99.38633099724265
patch: continue ; } mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 314
score: 99.33497721354166
patch: return new Integer ( str . substring ( exp CaMeL Pos ) ) ;
rank: 315
score: 99.461572265625
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) { exp = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 315
score: 99.439697265625
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 315
score: 99.38614908854167
patch: mant ; } else mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 315
score: 99.38614230685764
patch: mant = str . substring ( exp CaMeL Pos || exp CaMeL Pos > 1 ) ;
rank: 315
score: 99.38119167751736
patch: mant = create CaMeL Big CaMeL Integer ( str . length ( ) - 1 ) ;
rank: 315
score: 99.33486703725961
patch: mant = str . substring ( exp CaMeL Pos + ; }
rank: 316
score: 99.461474609375
patch: exp = str . substring ( dec CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) - 1 ) ;
rank: 316
score: 99.43920135498047
patch: exp = new Number ( str . index CaMeL Of ( $STRING$ ) ) ;
rank: 316
score: 99.41575221011513
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos - ) ;
rank: 316
score: 99.38604058159723
patch: mant = str . char CaMeL At ( exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 316
score: 99.38113403320312
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { exp = str ;
rank: 316
score: 99.37656537224265
patch: mant = new ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 316
score: 99.33462524414062
patch: mant = Integer . parse CaMeL Int ( exp CaMeL Pos + 1 ) ;
rank: 317
score: 99.45790793678977
patch: throw ( Number CaMeL Format CaMeL Exception ) new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ; }
rank: 317
score: 99.45342407226562
patch: mant = str . substring ( dec CaMeL Pos + str . length ( ) - 1 ) ;
rank: 317
score: 99.41450330946181
patch: mant = ( str . substring ( exp CaMeL Pos ) . trim ( ) ) ;
rank: 317
score: 99.38608805338542
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; exp = $STRING$ ;
rank: 317
score: 99.3858706825658
patch: mant = new str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 317
score: 99.38099500868056
patch: p = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 317
score: 99.37640059621711
patch: mant = ( Integer ) str . substring ( str . length ( ) - 1 ) ;
rank: 317
score: 99.3343505859375
patch: mant = str . substring ( exp CaMeL Pos ) ; } mant = null ;
rank: 318
score: 99.45784505208333
patch: mant = str . substring ( exp CaMeL Pos + 1 ) . substring ( exp CaMeL Pos ) ;
rank: 318
score: 99.43890671502976
patch: exp = str . substring ( exp CaMeL Pos + 1 , str . length ( ) ) ; }
rank: 318
score: 99.41444227430556
patch: mant = value . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 318
score: 99.38558156866776
patch: mant = Math . round ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 318
score: 99.38057250976563
patch: dec = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos + 1 ) ;
rank: 318
score: 99.33375459558823
patch: return new Integer ( str . char CaMeL At ( exp CaMeL Pos ) ) ;
rank: 319
score: 99.46040344238281
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { exp = null ;
rank: 319
score: 99.45754107306985
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } mant = null ;
rank: 319
score: 99.41429307725694
patch: mant = str . substring ( 0 , [ exp CaMeL Pos - 1 ] ) ;
rank: 319
score: 99.38595760569854
patch: mant = str . substring ( str . length ( ) exp CaMeL Pos ) ;
rank: 319
score: 99.37517346833882
patch: mant = str . append ( str . substring ( exp CaMeL Pos - 1 ) ) ;
rank: 319
score: 99.33357747395833
patch: z = str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 320
score: 99.460380859375
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { mant = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 320
score: 99.45332166883681
patch: exp = str . substring ( 0 , exp . length ( ) - 1 ) ;
rank: 320
score: 99.3856430053711
patch: mant = str . substring ( exp CaMeL Pos ? 0 : 0 ) ;
rank: 320
score: 99.38529459635417
patch: mant = str . char CaMeL At ( 0 ) ;
rank: 320
score: 99.37973361545139
patch: mant = str . substring ( dec CaMeL Pos , dec CaMeL Pos - 1 ) ;
rank: 320
score: 99.3751220703125
patch: return new String ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 320
score: 99.3335205078125
patch: return new Integer ( str . index CaMeL Of ( $STRING$ ) ) ;
rank: 321
score: 99.43865607766544
patch: exp = new Number ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 321
score: 99.41405571831598
patch: mant = str . substring ( 0 , exp CaMeL Pos - 0 , mant ) ;
rank: 321
score: 99.38553873697917
patch: mant = str . substring ( exp CaMeL Pos - 0 >= exp CaMeL Pos ) ;
rank: 321
score: 99.38516574435764
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; ; } else {
rank: 321
score: 99.33287702287946
patch: mant = str . substring ( exp CaMeL Pos 1 ) ; }
rank: 322
score: 99.45659790039062
patch: try { dec = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 322
score: 99.43857247488839
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) ;
rank: 322
score: 99.38502332899306
patch: mant = Math . min ( exp CaMeL Pos , exp CaMeL Pos ) ; break ;
rank: 322
score: 99.37926307091347
patch: mant = str . substring ( dec CaMeL Pos + 1 ,
rank: 322
score: 99.33269794170673
patch: str = str . substring ( exp CaMeL Pos ) ; }
rank: 323
score: 99.45962379092262
patch: mant = str . substring ( dec CaMeL Pos + 1 ) . starts CaMeL With ( $STRING$ ) ;
rank: 323
score: 99.45646866508152
patch: exp = str . substring ( exp CaMeL Pos + 1 , str . length ( ) - 1 ) ; }
rank: 323
score: 99.45288696289063
patch: mant = new Big CaMeL Integer ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 323
score: 99.41379801432292
patch: mant = str . substring ( exp CaMeL Pos + $STRING$ . length ( ) ) ;
rank: 323
score: 99.38498942057292
patch: sb . substring ( 0 , exp CaMeL Pos ) ;
rank: 323
score: 99.38479614257812
patch: mant = str . substring ( 0 , exp CaMeL Pos ) - 0 ;
rank: 323
score: 99.37925318667763
patch: { exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 323
score: 99.37407483552632
patch: return new str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 323
score: 99.33243233816964
patch: mant = str . substring ( exp CaMeL Pos ) ; ; }
rank: 324
score: 99.45263061523437
patch: exp = str . char CaMeL At ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 324
score: 99.438115234375
patch: exp CaMeL Pos = str . starts CaMeL With ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 324
score: 99.41355985753677
patch: mant = str . substring ( exp CaMeL Pos ? exp CaMeL Pos ] } ;
rank: 324
score: 99.38492624383224
patch: mant = str . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos - ) ;
rank: 324
score: 99.3845458984375
patch: mant = str . substring ( str . length ( ) ) ; ;
rank: 324
score: 99.37905544704861
patch: mant = str . substring ( dec CaMeL Pos + $NUMBER$ , dec CaMeL Pos ) ;
rank: 324
score: 99.3740234375
patch: result = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 324
score: 99.33157169117646
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) { throw new ) ; }
rank: 325
score: 99.45877207880434
patch: throw new Number CaMeL Format CaMeL Exception ( str , str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 325
score: 99.45580444335937
patch: exp = str . substring ( exp CaMeL Pos + 1 ) . length ( ) - 1 ;
rank: 325
score: 99.43799889605978
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ , Number CaMeL Format CaMeL Exception . $STRING$ ) ; }
rank: 325
score: 99.38475277549342
patch: mant = str . substring ( 0 , exp CaMeL Pos , exp CaMeL Pos ) ; ;
rank: 325
score: 99.38446044921875
patch: mant = str . substring ( exp CaMeL Pos + 0 + exp CaMeL Pos ) ;
rank: 325
score: 99.37881290211396
patch: mant = str . char CaMeL At ( dec CaMeL Pos + 1 ) ; }
rank: 325
score: 99.37371148003473
patch: mant = str . substring ( str . length ( ) - 1 ) ; continue ;
rank: 325
score: 99.33149988511029
patch: mant = str . starts CaMeL With ( $STRING$ ) ? $STRING$ : $STRING$ ; }
rank: 326
score: 99.45560128348214
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . substring ( exp CaMeL Pos ) ;
rank: 326
score: 99.41309311810662
patch: mant = ( char ) str . substring ( 0 , exp CaMeL Pos ) ;
rank: 326
score: 99.38471137152777
patch: mant ; mant = str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 326
score: 99.38296169704861
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; str = $STRING$ ;
rank: 326
score: 99.37357370476974
patch: mant = str . append ( $STRING$ ) . substring ( exp CaMeL Pos + 1 ) ;
rank: 326
score: 99.33113367417279
patch: return str . substring ( 0 , exp CaMeL Pos + exp CaMeL Pos ) ;
rank: 327
score: 99.45799424913194
patch: if ( exp CaMeL Pos < str . length ( ) ) { exp = str ;
rank: 327
score: 99.43728798314145
patch: mant = str . substring ( 0 , dec CaMeL Pos ) ; } dec = null ;
rank: 327
score: 99.41299099392361
patch: mant = str . substring ( str . trim ( ) + exp CaMeL Pos ) ;
rank: 327
score: 99.38288116455078
patch: str = str . substring ( 0 + exp CaMeL Pos - 1 ) ;
rank: 327
score: 99.37852647569444
patch: mant = create CaMeL Integer ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 327
score: 99.3733901977539
patch: str = str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 328
score: 99.45782470703125
patch: exp = str . to CaMeL String ( ) . substring ( exp CaMeL Pos + 1 ) ;
rank: 328
score: 99.45536472486413
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , exp CaMeL Pos ) - 1 ) ;
rank: 328
score: 99.41262478298611
patch: mant = str . substring ( exp CaMeL Pos ) . char CaMeL Value ( ) ;
rank: 328
score: 99.38462428042763
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } else { mant ;
rank: 328
score: 99.37844509548611
patch: mant = str . substring ( dec CaMeL Pos + 0 , exp CaMeL Pos ) ;
rank: 329
score: 99.45513625372024
patch: exp CaMeL Pos = str . substring ( 0 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 329
score: 99.45088500976563
patch: exp = str . substring ( exp CaMeL Pos + 1 , this . exp CaMeL Pos ) ;
rank: 329
score: 99.43632175611413
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { if ( exp CaMeL Pos < dec CaMeL Pos ) {
rank: 329
score: 99.41162109375
patch: mant = ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 329
score: 99.3843505859375
patch: mant = str . index CaMeL Of ( $STRING$ ) + 1 ; }
rank: 329
score: 99.38266170726104
patch: mant = str . substring ( exp CaMeL Pos - 1 , - 1 ) ;
rank: 329
score: 99.37828650841347
patch: mant = str . substring ( ! exp CaMeL Pos ) ;
rank: 329
score: 99.37196350097656
patch: mant = new Integer ( str . substring ( exp CaMeL Pos ) ) ;
rank: 330
score: 99.4361801147461
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 330
score: 99.41157362196181
patch: mant = chars . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 330
score: 99.38427016314338
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + 0 ; }
rank: 330
score: 99.3778076171875
patch: name = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 331
score: 99.45754076086956
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { mant = str . substring ( dec CaMeL Pos ) ;
rank: 331
score: 99.38385331003289
patch: mant = Integer . parse CaMeL Int ( exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 331
score: 99.37158203125
patch: mant = str . substring ( str . trim ( ) . length ( ) 1 ) ;
rank: 331
score: 99.32912310431985
patch: mant = str . substring ( exp CaMeL Pos ) . length ( ) ; }
rank: 332
score: 99.45750025699013
patch: throw new Number CaMeL Format CaMeL Exception ( str . starts CaMeL With ( str ) ) ;
rank: 332
score: 99.449853515625
patch: if ( exp CaMeL Pos > - 1 ) { mant = null ;
rank: 332
score: 99.43587593410327
patch: exp = str . substring ( str . index CaMeL Of ( $STRING$ ) + 1 , exp CaMeL Pos ) ;
rank: 332
score: 99.41126924402573
patch: mant = str . substring ( exp CaMeL Pos + - exp CaMeL Pos ) ;
rank: 332
score: 99.38120524088542
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos - $NUMBER$ ) ;
rank: 332
score: 99.37156918174342
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; break ; } else {
rank: 332
score: 99.32894193209134
patch: mant = $STRING$ . substring ( exp CaMeL Pos ) ; }
rank: 333
score: 99.45737711588542
patch: exp = null ; dec = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 333
score: 99.4498291015625
patch: exp = str . substring ( 0 , exp CaMeL Pos - 1 ) + 1 ;
rank: 333
score: 99.41120741102431
patch: mant = this . str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 333
score: 99.38119845920139
patch: mant = str . substring ( 0 , exp CaMeL Pos ? 1 : $NUMBER$ ) ;
rank: 334
score: 99.44954427083333
patch: mant = create CaMeL Big CaMeL Integer ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 334
score: 99.41070556640625
patch: mant = str . substring ( 0 , str . trim ( ) ) ;
rank: 334
score: 99.38229806082589
patch: mant = str . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 334
score: 99.38115692138672
patch: mant = str . substring ( str . exp CaMeL Pos - 1 ) ;
rank: 334
score: 99.3770751953125
patch: mant = str . trim ( ) . substring ( dec CaMeL Pos + 1 ) ;
rank: 334
score: 99.37117513020833
patch: mant = ( str . substring ( str . length ( ) - 1 ) ) ;
rank: 334
score: 99.3278299967448
patch: str = str . substring ( exp CaMeL Pos ) ;
rank: 335
score: 99.4356625205592
patch: mant = str . substring ( dec CaMeL Pos + $NUMBER$ , exp CaMeL Pos ) ; }
rank: 335
score: 99.38228352864583
patch: mant = str . substring ( ( 0 , exp CaMeL Pos ) + 1 ) ;
rank: 335
score: 99.38001251220703
patch: mant = str . substring ( 0 , exp CaMeL Pos , $STRING$ ) ;
rank: 335
score: 99.37702287946429
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ; } else {
rank: 336
score: 99.44890030570652
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . substring ( dec CaMeL Pos + 1 ) ;
rank: 336
score: 99.4354248046875
patch: throw new Number CaMeL Format CaMeL Exception ( Number CaMeL Format CaMeL Exception . $STRING$ ) ;
rank: 336
score: 99.40916612413194
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; mant = null ;
rank: 336
score: 99.38161892361111
patch: mant ; mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 336
score: 99.37890625
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; 0 = 0 ;
rank: 336
score: 99.37692599826389
patch: m = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 336
score: 99.3708137063419
patch: mant = ( long ) str . substring ( 0 , exp CaMeL Pos ) ;
rank: 336
score: 99.32726332720588
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + $STRING$ ; }
rank: 337
score: 99.44854058159723
patch: exp = str . substring ( exp CaMeL Pos - 1 , dec CaMeL Pos ) ;
rank: 337
score: 99.40909576416016
patch: mant = mant . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 337
score: 99.37687852647569
patch: tmp = create CaMeL Integer ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 337
score: 99.3272476196289
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos - 1 ) ;
rank: 338
score: 99.44840494791667
patch: exp = str . substring ( 0 , exp CaMeL Pos - dec CaMeL Pos ) ;
rank: 338
score: 99.40787506103516
patch: mant = value . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 338
score: 99.37686920166016
patch: dec = str . substring ( dec CaMeL Pos + 1 , 1 ) ;
rank: 338
score: 99.37017463235294
patch: mant = str . substring ( str . length ( ) - 1 ) ) ;
rank: 338
score: 99.32711588541666
patch: return str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 339
score: 99.45628051757812
patch: return create CaMeL Long ( str . substring ( dec CaMeL Pos + 1 ) + 1 ) ;
rank: 339
score: 99.43513289741848
patch: throw new Number CaMeL Format CaMeL Exception ( str + str . index CaMeL Of ( $STRING$ ) + 1 ) ;
rank: 339
score: 99.40778551603618
patch: synchronized ( mant ) { mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 339
score: 99.38113223805146
patch: sb . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 339
score: 99.3700310202206
patch: mant = str . substring ( str . length ( ) - 1 ) ; else
rank: 339
score: 99.32703354779412
patch: mant = str . substring ( new Integer ( exp CaMeL Pos ) ) ; }
rank: 340
score: 99.44825328480114
patch: exp = str . substring ( dec CaMeL Pos + 1 ) + str . length ( ) - 1 ;
rank: 340
score: 99.43489937160327
patch: mant = str . char CaMeL At ( 0 ) + str . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 340
score: 99.38111114501953
patch: mant = Integer . parse CaMeL Int ( 0 , exp CaMeL Pos ) ;
rank: 340
score: 99.37727864583333
patch: exp = str . substring ( str . length ( ) - exp CaMeL Pos ) ;
rank: 340
score: 99.37667846679688
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ; break ;
rank: 340
score: 99.36991882324219
patch: mant = mant . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 340
score: 99.32640165441177
patch: mant = str . substring ( exp CaMeL Pos . length ( ) ) ; }
rank: 341
score: 99.45184647409539
patch: dec = str . substring ( 0 , str . length ( ) - 1 ) ; }
rank: 341
score: 99.43466331845238
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) + 1 ; }
rank: 341
score: 99.37708875868056
patch: mant = str . substring ( str . length ( ) - 1 , 1 ) ;
rank: 341
score: 99.37616288034539
patch: return create CaMeL Long ( dec CaMeL Pos + 1 , str . length ( ) ) ;
rank: 341
score: 99.36906995271382
patch: mant = str . substring ( str . substring ( 1 , exp CaMeL Pos ) ) ;
rank: 342
score: 99.45526444284539
patch: return new Big CaMeL Integer ( str . substring ( dec CaMeL Pos + 1 ) ) ;
rank: 342
score: 99.45155400815217
patch: dec = str . substring ( exp CaMeL Pos - 1 , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 342
score: 99.44810180664062
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) ) { exp = null ;
rank: 342
score: 99.434619140625
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { exp = Number CaMeL Utils . create CaMeL Float ( str ) ;
rank: 342
score: 99.38085259331598
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } return exp ;
rank: 342
score: 99.37705993652344
patch: str = str . substring ( 0 , exp CaMeL Pos - 0 ) ;
rank: 342
score: 99.37582879317434
patch: return create CaMeL Integer ( exp CaMeL Pos + 1 , str . length ( ) ) ;
rank: 342
score: 99.36893717447917
patch: mant = ( str . length ( ) - exp CaMeL Pos ) ; break ; }
rank: 342
score: 99.3258056640625
patch: mant = str . substring ( exp CaMeL Pos ) ; } break ; }
rank: 343
score: 99.45504760742188
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( str . length ( ) - 1 ) ;
rank: 343
score: 99.45142364501953
patch: exp = str . substring ( 0 , str . length ( ) ) ;
rank: 343
score: 99.44771902901786
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } * /
rank: 343
score: 99.43458467371323
patch: exp = new Number ( str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 343
score: 99.40706380208333
patch: mant = mant . substring ( str . trim ( ) . length ( ) ) ;
rank: 343
score: 99.38059997558594
patch: mant = str . substring ( exp CaMeL Pos + ) + 1 ; }
rank: 343
score: 99.37646484375
patch: mant = substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 343
score: 99.36874389648438
patch: mant = str . append ( 0 , exp CaMeL Pos ) ; break ;
rank: 343
score: 99.3256476907169
patch: mant = str . substring ( exp CaMeL Pos ) ; mant = null ; }
rank: 344
score: 99.43437756990132
patch: str = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 344
score: 99.38037109375
patch: mant = Integer . parse CaMeL Int ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 344
score: 99.37636990017361
patch: mant = mant ; mant = str . substring ( exp CaMeL Pos - 1 ) ;
rank: 344
score: 99.37552642822266
patch: exp = str . substring ( dec CaMeL Pos , dec CaMeL Pos ) ;
rank: 344
score: 99.36853841145833
patch: mant = str . substring ( str . equals ( $STRING$ ) ) ;
rank: 344
score: 99.32514299665179
patch: sb = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 345
score: 99.43403957201087
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { if ( exp CaMeL Pos > dec CaMeL Pos ) {
rank: 345
score: 99.40690104166667
patch: mant = str . substring ( 0 , mant ) ;
rank: 345
score: 99.38014051649306
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } return new ;
rank: 345
score: 99.37619018554688
patch: mant = str . substring ( 0 , 0 - exp CaMeL Pos ) ;
rank: 345
score: 99.36827256944444
patch: mant = str . substring ( str . length ( ) + 1 ) ; break ;
rank: 345
score: 99.32513427734375
patch: return str . substring ( 0 , exp CaMeL Pos + 1 ) ; }
rank: 346
score: 99.45448369565217
patch: throw new Number CaMeL Format CaMeL Exception ( str , str . substring ( dec CaMeL Pos + 1 ) ) ;
rank: 346
score: 99.45022715692934
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , dec CaMeL Pos - 1 ) ) ;
rank: 346
score: 99.44748853600544
patch: mant = str . substring ( dec CaMeL Pos + 1 , Math . index CaMeL Of ( $STRING$ ) ) ;
rank: 346
score: 99.38013373480902
patch: mant ; mant = str . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 346
score: 99.37595502068015
patch: mant = str . substring ( exp CaMeL Pos - 0 , - 1 ) ;
rank: 346
score: 99.37424045138889
patch: exp = create CaMeL Long ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 346
score: 99.36769732306985
patch: return new Integer ( str . length ( ) - exp CaMeL Pos ) ; }
rank: 346
score: 99.32493489583334
patch: mant = str . substring ( exp CaMeL Pos ) + $STRING$ ; }
rank: 347
score: 99.454345703125
patch: throw new Number CaMeL Format CaMeL Exception ( str , $STRING$ ) ; }
rank: 347
score: 99.45018421519886
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 1 , dec CaMeL Pos ) ) ; }
rank: 347
score: 99.38007269965277
patch: throw str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 347
score: 99.32489013671875
patch: mant = $STRING$ . substring ( exp CaMeL Pos + 1 ) ;
rank: 348
score: 99.44681980298913
patch: mant = str . substring ( dec CaMeL Pos + 1 ) . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 348
score: 99.40590948807566
patch: mant = str . substring ( str . equals ( 0 , exp CaMeL Pos ) ) ;
rank: 348
score: 99.37957763671875
patch: mant = max . substring ( 0 , exp CaMeL Pos ) ;
rank: 348
score: 99.37401123046875
patch: mant = str . substring ( ! str . char CaMeL At ( dec CaMeL Pos ) ) ;
rank: 348
score: 99.36732393152573
patch: return new Integer ( str . substring ( str . length ( ) ) ) ;
rank: 348
score: 99.3248291015625
patch: return new Number ( str . char CaMeL At ( exp CaMeL Pos ) ) ;
rank: 349
score: 99.43333899456522
patch: mant = str . starts CaMeL With ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + $STRING$ ;
rank: 349
score: 99.40569305419922
patch: else { mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 349
score: 99.37560272216797
patch: mant = str . substring ( exp CaMeL Pos + 1 - 1 ) ;
rank: 349
score: 99.37390814887152
patch: mant = str . substring ( dec CaMeL Pos , dec CaMeL Pos + 1 ) ;
rank: 349
score: 99.3673095703125
patch: mant = new Integer ( str . length ( ) ) ;
rank: 349
score: 99.32477678571429
patch: throw new Number CaMeL Format CaMeL Exception ( name + $STRING$ ) ;
rank: 350
score: 99.44966125488281
patch: try { exp = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 350
score: 99.43309110753677
patch: mant = str . substring ( dec CaMeL Pos + 1 ) + 1 ; }
rank: 350
score: 99.40568712022569
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos + $NUMBER$ ) ;
rank: 350
score: 99.37548065185547
patch: mant = ( str . substring ( exp CaMeL Pos - 1 ) ) ;
rank: 350
score: 99.36703830295139
patch: mant = ( long ) str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 351
score: 99.45284016927083
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( exp CaMeL Pos ) + $STRING$ ) ; }
rank: 351
score: 99.4495361328125
patch: dec = str . substring ( str . length ( ) - 1 , exp CaMeL Pos ) ;
rank: 351
score: 99.4457674893466
patch: exp = str . substring ( dec CaMeL Pos - 1 , str . length ( ) - 1 ) ;
rank: 351
score: 99.37542046440973
patch: mant = str . substring ( 0 + 0 , exp CaMeL Pos - 0 ) ;
rank: 351
score: 99.3738784790039
patch: dec = str . substring ( dec CaMeL Pos + 1 , mant ) ;
rank: 351
score: 99.36689309512867
patch: mant = ( String ) str . substring ( str . length ( ) ) ;
rank: 351
score: 99.32441980698529
patch: mant = str . substring ( 1 , exp CaMeL Pos - 1 ) ; }
rank: 352
score: 99.45283840013587
patch: if ( exp CaMeL Pos > exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 352
score: 99.40518991570724
patch: mant = str . substring ( str . substring ( 0 ) , exp CaMeL Pos ) ;
rank: 352
score: 99.37906044407895
patch: mant = str . char CaMeL At ( exp CaMeL Pos + 1 ) ; break ; }
rank: 352
score: 99.37525939941406
patch: mant = str . substring ( 0 - exp CaMeL Pos + 1 ) ;
rank: 352
score: 99.37340777853261
patch: mant = str . substring ( dec CaMeL Pos + 1 ) . char CaMeL At ( dec CaMeL Pos ) ;
rank: 352
score: 99.32431927849265
patch: return str . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ;
rank: 353
score: 99.4527587890625
patch: throw new Number CaMeL Format CaMeL Exception ( str + Number CaMeL Format CaMeL Exception . $STRING$ ) ;
rank: 353
score: 99.4491299715909
patch: if ( exp CaMeL Pos > - 1 ) { mant = str . substring ( exp CaMeL Pos ) ;
rank: 353
score: 99.40479278564453
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + 0 ;
rank: 353
score: 99.37891303168402
patch: sb . append ( str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 353
score: 99.37490844726562
patch: mant = str . substring ( str . index CaMeL Of ( ) ) ;
rank: 353
score: 99.37314181857639
patch: 0 = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 353
score: 99.36595961626838
patch: { mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 353
score: 99.32414899553571
patch: mant = str ; exp CaMeL Pos = exp CaMeL Pos ; }
rank: 354
score: 99.452734375
patch: exp = str . substring ( 0 , exp CaMeL Pos ) . to CaMeL String ( ) ;
rank: 354
score: 99.44475555419922
patch: exp CaMeL Pos = str . char CaMeL At ( exp CaMeL Pos ) ;
rank: 354
score: 99.43189586292614
patch: mant += str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ; }
rank: 354
score: 99.40465023643092
patch: mant = Math . substring ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 354
score: 99.37873278166118
patch: mant = str . substring ( exp CaMeL Pos + ) + str . length ( ) ;
rank: 354
score: 99.37476942274306
patch: mant = str . substring ( exp CaMeL Pos && 1 >= exp CaMeL Pos ) ;
rank: 354
score: 99.32401529947917
patch: return str . substring ( exp CaMeL Pos ) ; }
rank: 355
score: 99.45255180027173
patch: if ( exp CaMeL Pos == dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 355
score: 99.4447021484375
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { exp CaMeL Pos = - 1 ;
rank: 355
score: 99.4318210767663
patch: dec = str . substring ( dec CaMeL Pos + 1 , str . length ( ) - 1 ) ; }
rank: 355
score: 99.40286593967014
patch: mant = $STRING$ . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 355
score: 99.37839642693015
patch: throw str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 355
score: 99.37468405330883
patch: mant = str . substring ( exp CaMeL Pos && exp CaMeL Pos ++ ) ;
rank: 355
score: 99.37125069754464
patch: sb = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 355
score: 99.36549778988487
patch: mant = ( String ) str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 355
score: 99.3237060546875
patch: z = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 356
score: 99.45193481445312
patch: if ( exp CaMeL Pos > - 1 ) { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 356
score: 99.43146484375
patch: exp CaMeL Pos += str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 356
score: 99.40279134114583
patch: mant = str . substring ( 0 , 0 , exp CaMeL Pos + 1 ) ;
rank: 356
score: 99.37837049696181
patch: mant = Double . value CaMeL Of ( str ) . double CaMeL Value ( ) ;
rank: 356
score: 99.3746566772461
patch: mant += str . substring ( 0 , exp CaMeL Pos , 1 ) ;
rank: 356
score: 99.37041015625
patch: mant = str . substring ( ! str . substring ( dec CaMeL Pos + 1 ) ) ;
rank: 356
score: 99.32308959960938
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos ) ; break ;
rank: 357
score: 99.45114135742188
patch: throw new Number CaMeL Format CaMeL Exception ( str . length ( ) ) ;
rank: 357
score: 99.44456787109375
patch: exp = str . substring ( dec CaMeL Pos + 1 , this . exp CaMeL Pos ) ;
rank: 357
score: 99.43095470610119
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + exp CaMeL Pos + $STRING$ ) ; }
rank: 357
score: 99.40253557477679
patch: mant = chars . substring ( 0 , exp CaMeL Pos ) ;
rank: 357
score: 99.37433268229167
patch: mant = str . substring ( str . equals ( 1 ) ) ;
rank: 357
score: 99.37026977539062
patch: mant = create CaMeL Integer ( str . length ( ) - 1 ) ;
rank: 358
score: 99.44711483226104
patch: dec = str . substring ( 0 , exp CaMeL Pos - 1 ) ; }
rank: 358
score: 99.4021060341283
patch: mant = str . substring ( 0 ) . substring ( 0 , exp CaMeL Pos ) ;
rank: 358
score: 99.37805893841912
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } ; }
rank: 358
score: 99.37413024902344
patch: mant = str . substring ( 0 + exp CaMeL Pos ) ; break ;
rank: 358
score: 99.37016950334821
patch: s = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 358
score: 99.36485188802084
patch: mant = ( int ) str . substring ( exp CaMeL Pos ) ;
rank: 358
score: 99.32237243652344
patch: final String str = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 359
score: 99.43092943274456
patch: if ( dec CaMeL Pos < dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 359
score: 99.40206909179688
patch: mant = exp . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 359
score: 99.37789481026786
patch: mant = str . substring ( exp CaMeL Pos ) + 1 ;
rank: 359
score: 99.36929524739584
patch: if ( exp CaMeL Pos <= str . length ( ) - 1 )
rank: 359
score: 99.32134137834821
patch: mant = str . substring ( exp CaMeL Pos ) ) ; }
rank: 360
score: 99.45081097146739
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { exp = str . substring ( exp CaMeL Pos ) ;
rank: 360
score: 99.44411399147727
patch: if ( ! Character . is CaMeL Digit ( exp CaMeL Pos ) && last CaMeL Char != $STRING$ ) {
rank: 360
score: 99.43073473478618
patch: exp = new Big CaMeL Integer ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 360
score: 99.40193684895833
patch: mant = mant . substring ( exp CaMeL Pos ) ;
rank: 360
score: 99.37393008961396
patch: mant = str . substring ( 0 + exp CaMeL Pos - - 1 ) ;
rank: 360
score: 99.36928923233695
patch: mant = str . substring ( dec CaMeL Pos + 1 ) . char CaMeL At ( exp CaMeL Pos ) ;
rank: 360
score: 99.3213119506836
patch: return str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 361
score: 99.45077853732639
patch: mant = str . substring ( dec CaMeL Pos + 1 ) . length ( ) ;
rank: 361
score: 99.44673919677734
patch: try { dec = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 361
score: 99.44396294487848
patch: exp = str . substring ( 0 , exp CaMeL Pos + 1 ) + 1 ;
rank: 361
score: 99.43060661764706
patch: exp = new Number ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 361
score: 99.40150451660156
patch: str = str . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 361
score: 99.37776264391448
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; continue ; }
rank: 361
score: 99.37392849392361
patch: mant = str . substring ( 0 + exp CaMeL Pos - 1 , 0 ) ;
rank: 361
score: 99.3692626953125
patch: exp = str . substring ( ! str . length ( ) - 1 ) ;
rank: 361
score: 99.36324869791666
patch: mant = ( str . length ( ) - exp CaMeL Pos ) ;
rank: 362
score: 99.44669242527173
patch: throw new Number CaMeL Format CaMeL Exception ( str + str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 362
score: 99.44393257472827
patch: mant = str . substring ( exp CaMeL Pos + 1 , Math . index CaMeL Of ( $STRING$ ) ) ;
rank: 362
score: 99.40139931126645
patch: mant = str . substring ( exp CaMeL Pos ? exp CaMeL Pos ] : 1 ) ;
rank: 362
score: 99.37775621916118
patch: mant = Math . max ( exp CaMeL Pos , exp CaMeL Pos + 1 ) ; }
rank: 362
score: 99.37332492404514
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos , 1 ) ;
rank: 362
score: 99.36251068115234
patch: mant = str . substring ( str . length ( ) , 0 ) ;
rank: 362
score: 99.32118225097656
patch: final String str = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 363
score: 99.45034391983695
patch: if ( exp CaMeL Pos <= exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 363
score: 99.43014865451389
patch: mant = str . substring ( 0 , str . length ( ) ) + 1 ;
rank: 363
score: 99.40102667557566
patch: mant = str . substring ( 0 ) . substring ( exp CaMeL Pos + 1 ) ;
rank: 363
score: 99.37323676215277
patch: mant = str . substring ( exp CaMeL Pos && exp CaMeL Pos >= 0 ) ;
rank: 364
score: 99.42999945746527
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } dec = null ; }
rank: 364
score: 99.37315368652344
patch: mant = str . substring ( 1 , exp CaMeL Pos - $NUMBER$ ) ;
rank: 364
score: 99.3206787109375
patch: mant = str . substring ( exp CaMeL Pos + exp CaMeL Pos ) ) ;
rank: 365
score: 99.44224481997283
patch: mant = str . substring ( exp CaMeL Pos + 1 ) . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 365
score: 99.42984008789062
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str . index CaMeL Of ( $STRING$ ) + $STRING$ ) ; }
rank: 365
score: 99.40091103001645
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos $NUMBER$ ) ;
rank: 365
score: 99.37708875868056
patch: mant = str ; str = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 365
score: 99.37271457248264
patch: mant += str . substring ( exp CaMeL Pos - exp CaMeL Pos - 1 ) ;
rank: 365
score: 99.3670295266544
patch: return create CaMeL Number ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 365
score: 99.36098225911458
patch: this . mant = str . substring ( str . length ( ) - 1 ) ;
rank: 366
score: 99.44999186197917
patch: if ( exp CaMeL Pos > - 1 ) { mant = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 366
score: 99.42976888020833
patch: dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ; }
rank: 366
score: 99.3998779296875
patch: String mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 366
score: 99.37693277994792
patch: mant = $STRING$ . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ;
rank: 366
score: 99.37232801649306
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) - 0 ;
rank: 366
score: 99.36094037224265
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + exp CaMeL Pos ) ; }
rank: 367
score: 99.44589072779605
patch: throw new Number CaMeL Format CaMeL Exception ( str . to CaMeL String ( ) ) ; }
rank: 367
score: 99.39842393663194
patch: mant = ( str . substring ( 0 , exp CaMeL Pos ) + 0 ) ;
rank: 367
score: 99.37676642922794
patch: mant = str . substring ( 0 , exp CaMeL Pos ) - 0 ; }
rank: 367
score: 99.3721923828125
patch: mant = str . substring ( 0 , exp CaMeL Pos ? str : 0 ) ;
rank: 367
score: 99.36639959161931
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos , dec CaMeL Pos ) ;
rank: 367
score: 99.36085420496323
patch: mant = exp . substring ( 0 , exp CaMeL Pos ) ; break ; }
rank: 368
score: 99.44551013764881
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str . substring ( exp CaMeL Pos ) ) ;
rank: 368
score: 99.44111938476563
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) ) { exp = str ;
rank: 368
score: 99.428876953125
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ; } }
rank: 368
score: 99.39841715494792
patch: mant = Math . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ;
rank: 368
score: 99.3720703125
patch: mant = str . substring ( 0 + exp CaMeL Pos exp CaMeL Pos ) ;
rank: 368
score: 99.36639404296875
patch: mant = str ; dec = str . substring ( dec CaMeL Pos ) ;
rank: 369
score: 99.44539184570313
patch: dec = str . substring ( exp CaMeL Pos - 1 , str . length ( ) ) ;
rank: 369
score: 99.42869808799342
patch: exp = str . substring ( str . index CaMeL Of ( $STRING$ ) + 1 ) ;
rank: 369
score: 99.39832827919408
patch: mant = ( str . trim ( ) . length ( ) - exp CaMeL Pos ) ;
rank: 369
score: 99.37654331752232
patch: mant = min . substring ( 0 , exp CaMeL Pos ) ;
rank: 369
score: 99.37186686197917
patch: mant = str . substring ( 0 + exp CaMeL Pos - 1 - 0 ) ;
rank: 369
score: 99.36046006944444
patch: { mant = str . substring ( str . length ( ) - 1 ) ; }
rank: 369
score: 99.31845990349265
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos - 1 ) ; }
rank: 370
score: 99.44470893012152
patch: mant = str . substring ( last CaMeL Char + 1 , exp CaMeL Pos ) ;
rank: 370
score: 99.44059030633224
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { exp CaMeL Pos = - 1 ;
rank: 370
score: 99.4286578634511
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { if ( exp CaMeL Pos < dec CaMeL Pos ) {
rank: 370
score: 99.37129041883681
patch: mant = str . substring ( 0 + 1 , exp CaMeL Pos - 1 ) ;
rank: 370
score: 99.36627752130681
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 370
score: 99.3173828125
patch: mant = str . substring ( ( exp CaMeL Pos + 1 ) ) ; }
rank: 371
score: 99.44468587239584
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } else {
rank: 371
score: 99.42862601902173
patch: mant = str . starts CaMeL With ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 371
score: 99.37614171645221
patch: double exp CaMeL Pos = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 371
score: 99.37076009114584
patch: mant = str . substring ( exp CaMeL Pos - ) + 1 ;
rank: 371
score: 99.31715494791666
patch: mant = new Big CaMeL Integer ( str . length ( ) ) ;
rank: 372
score: 99.44449869791667
patch: exp = str . substring ( exp CaMeL Pos + 1 ) . substring ( dec CaMeL Pos ) ;
rank: 372
score: 99.44013129340277
patch: if ( exp CaMeL Pos > - 1 ) { exp CaMeL Pos = - 1 ;
rank: 372
score: 99.4279849403783
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ; } mant = null ;
rank: 372
score: 99.39744808799342
patch: mant = str . substring ( exp CaMeL Pos ? exp CaMeL Pos ] : $STRING$ ) ;
rank: 372
score: 99.37571207682292
patch: mant = str . substring ( 0 , exp CaMeL Pos + 0 ) ; break ;
rank: 372
score: 99.37074908088235
patch: mant = str . substring ( 0 , exp CaMeL Pos + - 1 ) ;
rank: 372
score: 99.31643676757812
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ) ; }
rank: 373
score: 99.37569986979166
patch: mant = str . substring ( exp CaMeL Pos , 0 ) ; }
rank: 373
score: 99.37061982996323
patch: mant = substring ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 373
score: 99.3653564453125
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ; break ;
rank: 373
score: 99.35925971137152
patch: return new String ( str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 373
score: 99.31626263786765
patch: mant = str . trim ( ) ; exp CaMeL Pos = exp CaMeL Pos ;
rank: 374
score: 99.4469881924716
patch: if ( exp CaMeL Pos < - 1 ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 374
score: 99.4399169921875
patch: dec = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) + 1 ;
rank: 374
score: 99.42786225818452
patch: exp = new Big CaMeL Integer ( str . length ( ) - 1 , exp CaMeL Pos ) ;
rank: 374
score: 99.39716254340277
patch: mant = str . substring ( str . trim ( ) . trim ( ) ) ;
rank: 374
score: 99.37559599034927
patch: mant = $STRING$ . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 374
score: 99.36532931857639
patch: last CaMeL Char = str . char CaMeL At ( dec CaMeL Pos + 1 ) ;
rank: 374
score: 99.35910373263889
patch: return str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ; }
rank: 375
score: 99.44627621299342
patch: exp = create CaMeL Long ( str . substring ( dec CaMeL Pos + 1 ) ) ;
rank: 375
score: 99.42750133167614
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { exp CaMeL Pos = exp CaMeL Pos + 1 ;
rank: 375
score: 99.39712042557566
patch: mant = str . substring ( str . substring ( exp CaMeL Pos + $NUMBER$ ) ) ;
rank: 375
score: 99.37550982306985
patch: mant ; ; mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 375
score: 99.36528184678819
patch: dec = str . substring ( 0 , dec CaMeL Pos , dec CaMeL Pos ) ;
rank: 375
score: 99.31603285845588
patch: mant = str . substring ( ( exp CaMeL Pos ) + 1 ) ; }
rank: 376
score: 99.4440982216283
patch: return create CaMeL Long ( str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 376
score: 99.43951125372024
patch: if ( exp CaMeL Pos > 0 ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 376
score: 99.42747860863095
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; break ; }
rank: 376
score: 99.37528911389802
patch: mant = str . substring ( 0 , exp CaMeL Pos / exp CaMeL Pos ) ; }
rank: 376
score: 99.37004852294922
patch: mant = str . substring ( 0 + exp CaMeL Pos , mant ) ;
rank: 376
score: 99.36505126953125
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ , $STRING$ ) ;
rank: 376
score: 99.35887953814338
patch: return new mant ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 376
score: 99.31592514935662
patch: mant = str . substring ( exp CaMeL Pos ) ; } mant = $STRING$ ;
rank: 377
score: 99.44563802083333
patch: exp = str . substring ( dec CaMeL Pos + 1 ) ; mant = null ;
rank: 377
score: 99.3959228515625
patch: mant = ( byte ) str . substring ( exp CaMeL Pos ) ;
rank: 377
score: 99.37526568244485
patch: mant = str . to CaMeL Lower CaMeL Case ( ) . trim ( ) ;
rank: 377
score: 99.36983235677083
patch: mant = substring ( str . trim ( ) . length ( ) - 1 ) ;
rank: 377
score: 99.3158935546875
patch: return str . substring ( exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 378
score: 99.39574323381696
patch: mant = str . substring ( exp CaMeL Pos * 1 ) ;
rank: 378
score: 99.37525132123162
patch: mant ; } mant = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 378
score: 99.36971282958984
patch: mant = str . substring ( 0 < exp CaMeL Pos - 1 ) ;
rank: 378
score: 99.36414930555556
patch: exp = exp . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 378
score: 99.35858832465277
patch: mant = ( Character ) str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 378
score: 99.31571451822917
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) {
rank: 379
score: 99.44465942382813
patch: throw new Number CaMeL Format CaMeL Exception ( str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 379
score: 99.43894264914773
patch: mant = str . substring ( exp CaMeL Pos + 1 ) + str . length ( ) - 1 ;
rank: 379
score: 99.42719184027777
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + str + $STRING$ ) ;
rank: 379
score: 99.39568413628473
patch: mant = chars . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 379
score: 99.3751284950658
patch: mant = Double . value CaMeL Of ( str ) . double CaMeL Value ( ) ; }
rank: 379
score: 99.36898600260416
patch: mant = str . substring ( exp CaMeL Pos 1 , 1 ) ;
rank: 379
score: 99.36407470703125
patch: str = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 379
score: 99.31560202205883
patch: mant = str . substring ( exp CaMeL Pos ) ; } } return str ;
rank: 380
score: 99.37511528862848
patch: mant = Math . min ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ;
rank: 380
score: 99.36893039279514
patch: mant else { mant = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 381
score: 99.44354248046875
patch: try { dec = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 381
score: 99.44334501378677
patch: mant = str . substring ( dec CaMeL Pos + 1 ) ; } * /
rank: 381
score: 99.3941650390625
patch: mant = ( byte ) str . substring ( exp CaMeL Pos + 1 ) ;
rank: 381
score: 99.35823567708333
patch: mant = exp . substring ( 0 , exp CaMeL Pos ) ; }
rank: 381
score: 99.3144890280331
patch: mant = $STRING$ + str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 382
score: 99.43826729910714
patch: return create CaMeL Big CaMeL Integer ( str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 382
score: 99.42655675551471
patch: exp = new Big CaMeL Integer ( str . length ( ) - 1 ) ;
rank: 382
score: 99.3682861328125
patch: mant = str . substring ( $STRING$ . length ( ) + exp CaMeL Pos ) ;
rank: 382
score: 99.36321662454044
patch: mant = str . substring ( dec CaMeL Pos + 1 ) ; break ; }
rank: 382
score: 99.35781521267361
patch: mant = ( mant ) str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 383
score: 99.44258449388587
patch: mant = str . substring ( dec CaMeL Pos + 1 ) . substring ( dec CaMeL Pos + 1 ) ;
rank: 383
score: 99.43826426630434
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ; }
rank: 383
score: 99.42624830163044
patch: return new Big CaMeL Integer ( str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ) ;
rank: 383
score: 99.39374457465277
patch: mant = str . substring ( 0 , [ exp CaMeL Pos + 1 ] ) ;
rank: 383
score: 99.37491280691964
patch: b = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 383
score: 99.36806233723958
patch: mant = str . substring ( 0 , exp CaMeL Pos ) - exp CaMeL Pos ;
rank: 383
score: 99.31395048253677
patch: mant = new Double ( str . length ( ) - exp CaMeL Pos ) ;
rank: 384
score: 99.44257354736328
patch: try { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 384
score: 99.43806726792279
patch: if ( exp CaMeL Pos > - 1 ) { exp = exp CaMeL Pos ;
rank: 384
score: 99.426201171875
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ; } else
rank: 384
score: 99.39338514539931
patch: mant = chars . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 384
score: 99.37469951923077
patch: throw str . substring ( 0 , exp CaMeL Pos ) ;
rank: 384
score: 99.36794026692708
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) + $NUMBER$ ;
rank: 384
score: 99.36298571134868
patch: if ( exp CaMeL Pos >= - 1 && exp CaMeL Pos < dec CaMeL Pos ) {
rank: 384
score: 99.35725233289931
patch: mant = mant . substring ( 0 , str . length ( ) - 1 ) ;
rank: 384
score: 99.31388585707721
patch: str = str . substring ( exp CaMeL Pos + exp CaMeL Pos ) ; }
rank: 385
score: 99.4422378540039
patch: exp = str . substring ( 0 , 0 , exp CaMeL Pos ) ;
rank: 385
score: 99.43793015252976
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . substring ( dec CaMeL Pos ) ;
rank: 385
score: 99.39252672697368
patch: mant = str . substring ( str . substring ( str . length ( ) ) ) ;
rank: 385
score: 99.37457596628289
patch: mant = str . char CaMeL At ( exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 385
score: 99.36789279513889
patch: mant = str . substring ( str . ( 0 , exp CaMeL Pos ) ) ;
rank: 385
score: 99.36278533935547
patch: exp = str . substring ( dec CaMeL Pos + 1 , mant ) ;
rank: 385
score: 99.35722913240132
patch: mant = mant . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ; }
rank: 385
score: 99.3135986328125
patch: mant = str . substring ( 1 , exp CaMeL Pos ) ; } }
rank: 386
score: 99.44196883491848
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 386
score: 99.42583937872024
patch: mant = str . char CaMeL At ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 386
score: 99.39249674479167
patch: mant = str . substring ( 0 , exp CaMeL Pos ? exp CaMeL Pos ] else
rank: 386
score: 99.36783175998264
patch: mant = str . substring ( exp CaMeL Pos ? exp CaMeL Pos : 1 ) ;
rank: 386
score: 99.35711348684211
patch: return str . substring ( str . length ( ) - 1 , exp CaMeL Pos ) ;
rank: 386
score: 99.31330871582031
patch: mant = str . substring ( exp CaMeL Pos ) ; return null ; }
rank: 387
score: 99.44136555989583
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ) ; }
rank: 387
score: 99.42582370923913
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { if ( exp CaMeL Pos > dec CaMeL Pos ) {
rank: 387
score: 99.39153089021382
patch: mant = str . substring ( str . trim ( ) . length ( ) ) ; ;
rank: 387
score: 99.37391493055556
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + 1 ; } }
rank: 387
score: 99.36769104003906
patch: mant += str . substring ( exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 387
score: 99.31309599034927
patch: return new Number ( str . substring ( exp CaMeL Pos - 1 ) ) ;
rank: 388
score: 99.44248610276442
patch: mant = new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 388
score: 99.42564561631944
patch: return new Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 388
score: 99.37374538845486
patch: mant = str . substring ( Integer . MAX _ VALUE , exp CaMeL Pos ) ;
rank: 388
score: 99.36752658420139
patch: mant else mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 388
score: 99.35693359375
patch: mant = str . substring ( exp CaMeL Pos , mant . length ( ) ) ;
rank: 388
score: 99.31291198730469
patch: mant = str . substring ( exp CaMeL Pos . length ( ) ) ;
rank: 389
score: 99.43713909646739
patch: exp = str . substring ( dec CaMeL Pos + 1 ) . substring ( dec CaMeL Pos + 1 ) ;
rank: 389
score: 99.42543247767857
patch: mant = str . substring ( 0 , dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 389
score: 99.39104260896382
patch: mant = str . substring ( exp CaMeL Pos / - 1 , exp CaMeL Pos ) ;
rank: 389
score: 99.35692074424342
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; break ; } break ;
rank: 389
score: 99.31233978271484
patch: mant = str . substring ( exp CaMeL Pos + ) ; break ; }
rank: 390
score: 99.43986002604167
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + exp CaMeL Pos + str ) ;
rank: 390
score: 99.43703206380208
patch: exp = $STRING$ . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 390
score: 99.39031219482422
patch: mant = str . substring ( 0 , exp CaMeL Pos - substring ) ;
rank: 390
score: 99.37345123291016
patch: mant = str . starts CaMeL With ( $STRING$ ) ? str : str ;
rank: 390
score: 99.36697726779514
patch: mant = str . substring ( str . length ( ) ) ; mant = 0 ;
rank: 390
score: 99.36202199835526
patch: { mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 390
score: 99.35687255859375
patch: return new ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 391
score: 99.42445591517857
patch: dec = str . char CaMeL At ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 391
score: 99.39030626085069
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) +
rank: 391
score: 99.366943359375
patch: mant = $STRING$ . substring ( str . length ( ) - exp CaMeL Pos ) ;
rank: 391
score: 99.36201307508681
patch: mant = str ; dec = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 391
score: 99.35686178768383
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; case 1 :
rank: 391
score: 99.31122589111328
patch: mant = new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ; }
rank: 392
score: 99.44119698660714
patch: exp = str . substring ( 0 , exp CaMeL Pos ) . substring ( dec CaMeL Pos ) ;
rank: 392
score: 99.42433763586956
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } else {
rank: 392
score: 99.39024593955592
patch: return str . substring ( 0 , exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 392
score: 99.37302943638393
patch: mant = str . index CaMeL Of ( exp CaMeL Pos ) ;
rank: 392
score: 99.36693657769098
patch: mant = mant ; exp = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 392
score: 99.35685221354167
patch: mant = str . substring ( str . length ( ) - 1 ) ; ; }
rank: 392
score: 99.31084798177083
patch: mant = str . starts CaMeL With ( $STRING$ ) ; break ; }
rank: 393
score: 99.44110662286931
patch: mant = str . substring ( exp CaMeL Pos + 1 ) . index CaMeL Of ( $STRING$ ) ; }
rank: 393
score: 99.39018169202302
patch: mant = ( byte ) str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 393
score: 99.37242296006944
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; return 0 ; }
rank: 393
score: 99.36680772569444
patch: mant = str . substring ( str . substring ( 0 , exp CaMeL Pos ) ;
rank: 393
score: 99.31012321920956
patch: mant = str . substring ( exp CaMeL Pos + 1 ) + $STRING$ ; }
rank: 394
score: 99.43635559082031
patch: exp = str . substring ( exp CaMeL Pos + 1 , $NUMBER$ ) ;
rank: 394
score: 99.42337890625
patch: return create CaMeL Big CaMeL Integer ( str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ) ; }
rank: 394
score: 99.37205103824013
patch: mant = Math . max ( exp CaMeL Pos , exp CaMeL Pos - 1 ) ; }
rank: 394
score: 99.36670600043402
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ; ; ;
rank: 394
score: 99.36109508167614
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos * exp CaMeL Pos ) ;
rank: 394
score: 99.35606474034927
patch: mant = str . substring ( 0 , str . length ( ) 1 ) ;
rank: 395
score: 99.43813069661458
patch: try { exp = str . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 395
score: 99.36664581298828
patch: mant = str . substring ( exp CaMeL Pos ) ; mant = 0 ;
rank: 395
score: 99.3608757467831
patch: mant = str . substring ( dec CaMeL Pos , exp CaMeL Pos ) ; }
rank: 395
score: 99.35604055304276
patch: mant = ( int ) str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 395
score: 99.30973052978516
patch: this . str = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 396
score: 99.44037828947368
patch: return new Big CaMeL Integer ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 396
score: 99.4380126953125
patch: throw new Number CaMeL Format CaMeL Exception ( str + str ) ; }
rank: 396
score: 99.42255715762867
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { exp = null ; }
rank: 396
score: 99.37176044170673
patch: mant = str . trim ( ) . length ( ) ;
rank: 396
score: 99.3663558959961
patch: mant = str . substring ( ( exp CaMeL Pos - 0 ) ) ;
rank: 396
score: 99.360595703125
patch: mant = str . substring ( 0 , dec CaMeL Pos ] ) ;
rank: 396
score: 99.30885314941406
patch: mant = new Double ( str . substring ( exp CaMeL Pos ) ) ;
rank: 397
score: 99.44012741815476
patch: return create CaMeL Long ( str ) ; } throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 397
score: 99.43782905910327
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str . substring ( dec CaMeL Pos + 1 ) ) ;
rank: 397
score: 99.43580163043478
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 397
score: 99.42250569661458
patch: exp = str . substring ( dec CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 397
score: 99.36618221507354
patch: mant . = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 397
score: 99.36043972439236
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos > dec CaMeL Pos )
rank: 397
score: 99.35594177246094
patch: mant = new String ( str . substring ( exp CaMeL Pos ) ) ;
rank: 397
score: 99.3083855124081
patch: mant = str . substring ( exp CaMeL Pos ) ; mant = $STRING$ ; }
rank: 398
score: 99.44006958007813
patch: return create CaMeL Long ( str , str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 398
score: 99.38916015625
patch: mant = str . substring ( exp CaMeL Pos - - exp CaMeL Pos ) ;
rank: 398
score: 99.36610243055556
patch: mant = str . substring ( 0 - 0 , exp CaMeL Pos - 1 ) ;
rank: 398
score: 99.36003674958882
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos >= dec CaMeL Pos ) {
rank: 398
score: 99.30801212086396
patch: mant = str . substring ( exp CaMeL Pos ) ; break ; } break ;
rank: 399
score: 99.4353259858631
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; } * /
rank: 399
score: 99.42180432771382
patch: exp = new Big CaMeL Integer ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 399
score: 99.3891537314967
patch: mant = str . substring ( 0 , exp CaMeL Pos ? exp CaMeL Pos ] else }
rank: 399
score: 99.36609649658203
patch: mant = str . substring ( start , exp CaMeL Pos - 1 ) ;
rank: 399
score: 99.30726623535156
patch: mant = str ; exp CaMeL Pos = exp CaMeL Pos - 1 ; }
rank: 400
score: 99.43721147017045
patch: if ( exp CaMeL Pos <= dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ;
rank: 400
score: 99.4215777853261
patch: throw new Number CaMeL Format CaMeL Exception ( new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ) ; }
rank: 400
score: 99.38868543836806
patch: return str . substring ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 400
score: 99.37118869357639
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } else continue ;
rank: 400
score: 99.36563873291016
patch: exp = str . substring ( 0 + exp CaMeL Pos - 1 ) ;
rank: 401
score: 99.4390869140625
patch: if ( exp CaMeL Pos < - 1 && exp CaMeL Pos < str . length ( ) )
rank: 401
score: 99.42092063210227
patch: mant = str . starts CaMeL With ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ; }
rank: 401
score: 99.38863118489583
patch: mant = ( str . substring ( 0 , exp CaMeL Pos - 0 ) ) ;
rank: 401
score: 99.37079326923077
patch: mant = System . current CaMeL Time CaMeL Millis ( ) ;
rank: 401
score: 99.3591796875
patch: dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; break ;
rank: 401
score: 99.30721609933036
patch: mant = str . starts CaMeL With ( $STRING$ ) ; break ;
rank: 402
score: 99.43871392144098
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + dec CaMeL Pos - 1 ) ;
rank: 402
score: 99.3885498046875
patch: mant = str . substring ( exp CaMeL Pos Integer , exp CaMeL Pos ) ;
rank: 402
score: 99.37051552220395
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . trim ( ) ; ;
rank: 402
score: 99.36556570870536
patch: mant = str . substring ( 1 + exp CaMeL Pos ) ;
rank: 402
score: 99.35503472222223
patch: mant = new Integer ( str . substring ( str . length ( ) ) ) ;
rank: 403
score: 99.43558756510417
patch: try { exp = str . substring ( 0 , dec CaMeL Pos + 1 ) ;
rank: 403
score: 99.42048783735795
patch: exp = create CaMeL Big CaMeL Integer ( str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 403
score: 99.38812577097039
patch: return str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ;
rank: 403
score: 99.37042914496527
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } else { ;
rank: 403
score: 99.36545138888889
patch: mant = str . substring ( exp CaMeL Pos - 0 : exp CaMeL Pos ) ;
rank: 403
score: 99.35810403262867
patch: return create CaMeL Long ( exp CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 403
score: 99.35333251953125
patch: mant = mant . substring ( str . length ( ) + 1 ) ;
rank: 403
score: 99.30634014423077
patch: sb = str . substring ( exp CaMeL Pos ) ; }
rank: 404
score: 99.43814086914062
patch: try { exp = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 404
score: 99.38808186848958
patch: mant = str . substring ( mant . length ( ) - exp CaMeL Pos ) ;
rank: 404
score: 99.37040630139802
patch: mant = str . substring ( exp CaMeL Pos + exp CaMeL Pos ) + 1 ; }
rank: 404
score: 99.35809881036931
patch: dec = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos , exp CaMeL Pos ) ;
rank: 404
score: 99.30618106617646
patch: mant = str . substring ( exp CaMeL Pos ++ , exp CaMeL Pos ) ;
rank: 405
score: 99.43795340401786
patch: exp = str . substring ( 1 , exp CaMeL Pos ) ;
rank: 405
score: 99.43467203776042
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ && exp CaMeL Pos < str . length ( ) - 1 ) ;
rank: 405
score: 99.4200772372159
patch: mant += str . substring ( dec CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 405
score: 99.38765676398026
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos 1 ) ;
rank: 405
score: 99.36505805121527
patch: mant = 0 ; mant = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 405
score: 99.3528191061581
patch: mant = ( Integer ) str . substring ( str . length ( ) ) ;
rank: 406
score: 99.43325805664062
patch: exp = str . substring ( dec CaMeL Pos + 1 , $NUMBER$ ) ;
rank: 406
score: 99.41996765136719
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { exp = null ;
rank: 406
score: 99.38741726345486
patch: mant = exp . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 406
score: 99.37017501027961
patch: mant = Math . max ( exp CaMeL Pos , exp CaMeL Pos - 0 ) ; }
rank: 406
score: 99.36505126953125
patch: mant = str . substring ( str . length ( ) ? 1 : 0 ) ;
rank: 406
score: 99.35760139016544
patch: return create CaMeL Long ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 406
score: 99.3058837890625
patch: mant = str . substring ( this . exp CaMeL Pos ) ; }
rank: 407
score: 99.4197009858631
patch: dec = str . substring ( exp CaMeL Pos + 1 , str . length ( ) ) ; }
rank: 407
score: 99.38728162977431
patch: mant = str . substring ( str . trim ( ) - exp CaMeL Pos ) ;
rank: 407
score: 99.36501057942708
patch: mant = str . substring ( 0 + 1 ) ;
rank: 407
score: 99.30522155761719
patch: mant = str . substring ( exp CaMeL Pos - 1 ) ; continue ;
rank: 408
score: 99.43334282769098
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str . length ( ) ) ;
rank: 408
score: 99.43236626519098
patch: exp CaMeL Pos = str . substring ( 0 , exp CaMeL Pos ) + 1 ;
rank: 408
score: 99.41957493832237
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos 1 ) ;
rank: 408
score: 99.37000947840073
patch: mant = ( double ) str . substring ( 0 , exp CaMeL Pos ) ;
rank: 408
score: 99.35210860402961
patch: mant = str . substring ( str . length ( ) + 1 ) ; break ; }
rank: 408
score: 99.30494907924107
patch: return new Integer ( str . length ( ) - 1 ) ;
rank: 409
score: 99.43687608506944
patch: try { dec = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 409
score: 99.43328179253473
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + dec CaMeL Pos + $STRING$ ) ;
rank: 409
score: 99.38687294407895
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ) ;
rank: 409
score: 99.36928304036458
patch: throw new Number CaMeL Format CaMeL Exception ( ) ; }
rank: 409
score: 99.35745578342014
patch: if ( exp CaMeL Pos > 1 && exp CaMeL Pos < dec CaMeL Pos ) {
rank: 409
score: 99.35174919577206
patch: mant = str . substring ( 0 , str . length ( ) - ) ;
rank: 410
score: 99.43604871961806
patch: exp = str . substring ( last CaMeL Char + 1 , exp CaMeL Pos ) ;
rank: 410
score: 99.43327893708882
patch: exp = str . substring ( dec CaMeL Pos + 1 ) ; } dec = null ;
rank: 410
score: 99.38613552517361
patch: mant = str . substring ( exp CaMeL Pos ? mant : exp CaMeL Pos ) ;
rank: 410
score: 99.36869731702302
patch: mant = Math . max ( exp CaMeL Pos , exp CaMeL Pos ) ; } else {
rank: 410
score: 99.36438860212054
patch: mant += str . substring ( exp CaMeL Pos + 1 ) ;
rank: 410
score: 99.35741248497597
patch: if ( exp CaMeL Pos >= str . length ( ) )
rank: 410
score: 99.35172271728516
patch: return str . substring ( str . length ( ) - 1 ) ; }
rank: 410
score: 99.30310872395833
patch: mant = str . substring ( exp CaMeL Pos ) ; return null ;
rank: 411
score: 99.43310546875
patch: mant = str . substring ( dec CaMeL Pos + 1 ) ; mant = null ;
rank: 411
score: 99.43085479736328
patch: mant = str . substring ( exp CaMeL Pos + 1 , $STRING$ ) ;
rank: 411
score: 99.41933371803977
patch: mant = str . char CaMeL At ( 0 ) + str . index CaMeL Of ( $STRING$ ) ; }
rank: 411
score: 99.38589816623264
patch: mant = str . substring ( 0 , 0 , str . length ( ) ) ;
rank: 411
score: 99.36430528428819
patch: mant = str . substring ( ( exp CaMeL Pos == 1 ) - 1 ) ;
rank: 411
score: 99.35704888237848
patch: if ( exp CaMeL Pos > 0 && exp CaMeL Pos < dec CaMeL Pos ) {
rank: 411
score: 99.3509457236842
patch: mant = ( str . to CaMeL String ( ) . length ( ) - 1 ) ;
rank: 411
score: 99.30296325683594
patch: mant = Character . to CaMeL Upper CaMeL Case ( exp CaMeL Pos ) ;
rank: 412
score: 99.43560500372024
patch: dec = str . substring ( 0 , str . index CaMeL Of ( $STRING$ ) - 1 ) ;
rank: 412
score: 99.41915760869566
patch: dec = str . substring ( dec CaMeL Pos + 1 ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 412
score: 99.38432481553819
patch: mant = ( str . substring ( exp CaMeL Pos - exp CaMeL Pos ) ) ;
rank: 412
score: 99.36418600643383
patch: mant = str . substring ( str . length ( ) + 1 ) ; ;
rank: 412
score: 99.35701810396634
patch: return create CaMeL Long ( exp CaMeL Pos + 1 ) ;
rank: 412
score: 99.35048314144737
patch: mant = ( Integer ) str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 413
score: 99.43271891276042
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ) ; }
rank: 413
score: 99.4188232421875
patch: mant = str . substring ( exp CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 413
score: 99.36758583470395
patch: mant = str . substring ( exp CaMeL Pos , 0 , exp CaMeL Pos ) ; }
rank: 413
score: 99.3638671875
patch: mant = str . substring ( 0 , exp CaMeL Pos 0 ) ;
rank: 413
score: 99.35686292146382
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos <= dec CaMeL Pos ) {
rank: 413
score: 99.30228678385417
patch: mant = str . substring ( exp CaMeL Pos ; }
rank: 414
score: 99.41878255208333
patch: dec = str . substring ( dec CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 414
score: 99.3567886352539
patch: mant = str . substring ( dec CaMeL Pos ) ; dec = str ;
rank: 414
score: 99.34976999383224
patch: mant = mant . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; break ; }
rank: 414
score: 99.30226236979166
patch: mant += str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 415
score: 99.43353271484375
patch: dec = str . substring ( exp CaMeL Pos + 1 , last CaMeL Char ) ;
rank: 415
score: 99.42998946340461
patch: exp CaMeL Pos = str . substring ( 0 , dec CaMeL Pos + 1 ) ; }
rank: 415
score: 99.36715359157986
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } * / ;
rank: 415
score: 99.36367797851562
patch: mant = str . substring ( 1 , 0 , exp CaMeL Pos ) ;
rank: 415
score: 99.34933471679688
patch: mant = mant . substring ( str . length ( ) - $NUMBER$ ) ;
rank: 415
score: 99.30168805803571
patch: try { mant = str . substring ( exp CaMeL Pos ) ;
rank: 416
score: 99.41801452636719
patch: exp = str . substring ( 0 , exp CaMeL Pos ) ; } else
rank: 416
score: 99.38271077473958
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + exp CaMeL Pos ;
rank: 416
score: 99.36667209201389
patch: mant = str . char CaMeL At ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 416
score: 99.36358642578125
patch: mant = str . substring ( 0 , exp CaMeL Pos . length ( ) ) ;
rank: 416
score: 99.3563003540039
patch: dec = str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 416
score: 99.34932708740234
patch: result = str . substring ( str . length ( ) - 1 ) ;
rank: 417
score: 99.43186353600544
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , str . length ( ) ) ) ;
rank: 417
score: 99.41785346137152
patch: exp = Number CaMeL Utils . create CaMeL Float ( str , exp CaMeL Pos ) ;
rank: 417
score: 99.3666130514706
patch: mant = str . trim ( ) . to CaMeL Upper CaMeL Case ( ) ;
rank: 417
score: 99.36332702636719
patch: mant = mant ; mant = str . substring ( exp CaMeL Pos ) ;
rank: 417
score: 99.2999755859375
patch: final mant = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 418
score: 99.43335639105902
patch: is CaMeL All CaMeL Zeros = is CaMeL All CaMeL Zeros ( exp CaMeL Pos ) ;
rank: 418
score: 99.43155570652173
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { exp = str . substring ( exp CaMeL Pos ) ;
rank: 418
score: 99.42860171669408
patch: exp CaMeL Pos = str . substring ( 0 , exp CaMeL Pos - 1 ) ; }
rank: 418
score: 99.38195037841797
patch: mant = mant . substring ( 0 , exp CaMeL Pos - 0 ) ;
rank: 418
score: 99.36658999794408
patch: mant = $STRING$ . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ; }
rank: 418
score: 99.35551622178819
patch: dec = str . substring ( ! str . starts CaMeL With ( $STRING$ ) ) ;
rank: 418
score: 99.34850356158088
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; break ; ;
rank: 418
score: 99.29924011230469
patch: return str . substring ( exp CaMeL Pos - exp CaMeL Pos ) ; }
rank: 419
score: 99.43143717447917
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ - exp CaMeL Pos ) ;
rank: 419
score: 99.42827814275569
patch: exp = str . substring ( exp CaMeL Pos + 1 ) + str . length ( ) - 1 ;
rank: 419
score: 99.41773817274306
patch: exp = null ; dec = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 419
score: 99.38190660978618
patch: mant = ( str . trim ( ) . trim ( ) . length ( ) ) ;
rank: 419
score: 99.366455078125
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } else { continue ;
rank: 419
score: 99.36319986979167
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) + ) ;
rank: 419
score: 99.34789360894098
patch: mant = str . substring ( str . length ( ) - 1 , $NUMBER$ ) ;
rank: 419
score: 99.29901123046875
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + exp ) ;
rank: 420
score: 99.43312377929688
patch: dec = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; } }
rank: 420
score: 99.41698157269022
patch: exp = str . substring ( 0 , exp CaMeL Pos ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 420
score: 99.38179738898026
patch: mant = str . substring ( 0 , str . append ( exp CaMeL Pos ) ) ;
rank: 420
score: 99.36643981933594
patch: return str . substring ( 0 , exp CaMeL Pos ) ; } else {
rank: 420
score: 99.34785012637867
patch: return new Character ( str . substring ( exp CaMeL Pos - 1 ) ) ;
rank: 420
score: 99.29835510253906
patch: mant = str . substring ( 0 , exp CaMeL Pos ] ) ; }
rank: 421
score: 99.43294067382813
patch: dec = str . substring ( 0 , str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 421
score: 99.43135579427083
patch: if ( exp CaMeL Pos < str . length ( ) ) { mant = null ;
rank: 421
score: 99.42810668945313
patch: try { return create CaMeL Long ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 421
score: 99.41672585227273
patch: if ( exp CaMeL Pos > exp CaMeL Pos ) { if ( exp CaMeL Pos > dec CaMeL Pos )
rank: 421
score: 99.38127698396382
patch: mant = str . substring ( exp CaMeL Pos - 1 ) . append ( $STRING$ ) ;
rank: 421
score: 99.3655254657452
patch: sb . substring ( 0 , exp CaMeL Pos ) ; }
rank: 421
score: 99.36295812270221
patch: mant = str . substring ( 0 , exp CaMeL Pos - - 0 ) ;
rank: 421
score: 99.35530308314732
patch: mant = str . char CaMeL At ( dec CaMeL Pos ) ;
rank: 421
score: 99.34779188368056
patch: mant = new Integer ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 421
score: 99.29783528645834
patch: mant = mant . substring ( exp CaMeL Pos + 1 ) ; }
rank: 422
score: 99.43274603949652
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + last CaMeL Char + $STRING$ ) ;
rank: 422
score: 99.4312679893092
patch: mant = str . substring ( dec CaMeL Pos + 1 ) ; } dec = null ;
rank: 422
score: 99.427978515625
patch: exp = str . substring ( 0 , dec CaMeL Pos + 1 ) + 1 ;
rank: 422
score: 99.41646902901786
patch: mant = str . to CaMeL String ( ) . substring ( 0 , exp CaMeL Pos ) ; }
rank: 422
score: 99.381103515625
patch: mant = str . substring ( exp CaMeL Pos ) . to CaMeL Int ( ) ;
rank: 422
score: 99.36262781479779
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; mant ++ ;
rank: 422
score: 99.35524204799107
patch: d = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 422
score: 99.34774441189236
patch: mant = str . substring ( exp CaMeL Pos - 1 ) . length ( ) ;
rank: 422
score: 99.29750061035156
patch: mant = str . substring ( exp CaMeL Pos ) ; } else { }
rank: 423
score: 99.38077799479167
patch: mant = str . substring ( 0 , 0 , exp CaMeL Pos - 0 ) ;
rank: 423
score: 99.29667663574219
patch: mant = Big CaMeL Integer . parse CaMeL Int ( exp CaMeL Pos ) ;
rank: 424
score: 99.4320068359375
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos > str . length ( ) )
rank: 424
score: 99.43119884672619
patch: throw new Number CaMeL Format CaMeL Exception ( str + str . length ( ) - 1 ) ; }
rank: 424
score: 99.427734375
patch: mant = str . substring ( dec CaMeL Pos + dec CaMeL Pos ) ;
rank: 424
score: 99.36210632324219
patch: mant = str . substring ( exp CaMeL Pos - 1 , $NUMBER$ ) ;
rank: 424
score: 99.35490337171052
patch: if ( exp CaMeL Pos < - 1 && exp CaMeL Pos < exp CaMeL Pos ) {
rank: 424
score: 99.34760485197368
patch: mant = str . append ( $STRING$ ) . substring ( exp CaMeL Pos - 1 ) ;
rank: 425
score: 99.43176850818452
patch: return str . substring ( exp CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 425
score: 99.41624813988095
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos - 1 , exp CaMeL Pos ) ; }
rank: 425
score: 99.36209869384766
patch: mant = str . substring ( this . exp CaMeL Pos - 1 ) ;
rank: 425
score: 99.35462297712054
patch: if ( exp CaMeL Pos <= str . length ( ) ) {
rank: 425
score: 99.3475341796875
patch: mant = str . substring ( 0 , str . length ( ) ) ; break ;
rank: 425
score: 99.29547119140625
patch: mant = str . substring ( exp . length ( ) + 1 ) ;
rank: 426
score: 99.43170166015625
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ - 1 ) ;
rank: 426
score: 99.43055216471355
patch: if ( exp CaMeL Pos > - 1 ) { exp = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 426
score: 99.42756090666118
patch: exp CaMeL Pos = str . substring ( 0 , dec CaMeL Pos - 1 ) ; }
rank: 426
score: 99.38011410361842
patch: str = str . substring ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 426
score: 99.35446166992188
patch: dec = str . substring ( ! Character . is CaMeL Digit ( dec CaMeL Pos ) ) ;
rank: 426
score: 99.34745958116319
patch: mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ; } else
rank: 426
score: 99.29506138392857
patch: mant = str . substring ( this . exp CaMeL Pos ) ;
rank: 427
score: 99.36142865349265
patch: mant = $STRING$ + str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 427
score: 99.35442437065973
patch: mant = str . substring ( dec CaMeL Pos + 1 ) ; mant = str ;
rank: 427
score: 99.34737820095486
patch: mant = str . substring ( 0 , list . length ( ) - 1 ) ;
rank: 427
score: 99.29502868652344
patch: mant = str ; exp CaMeL Pos = exp CaMeL Pos + 1 ; }
rank: 428
score: 99.4312744140625
patch: try { dec = str . substring ( 0 , dec CaMeL Pos + 1 ) ;
rank: 428
score: 99.4305087002841
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ;
rank: 428
score: 99.41592227711396
patch: mant = str . substring ( 0 , dec CaMeL Pos ) + 1 ; }
rank: 428
score: 99.37990315755208
patch: mant = str . substring ( mant . length ( ) , exp CaMeL Pos ) ;
rank: 428
score: 99.36092703683036
patch: substring = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 429
score: 99.43037245008681
patch: exp = str . substring ( dec CaMeL Pos + 1 ) ; exp = null ;
rank: 429
score: 99.42737494574652
patch: mant = str . substring ( 0 , dec . length ( ) - 1 ) ;
rank: 429
score: 99.37981567382812
patch: mant = str . substring ( 0 ) ;
rank: 429
score: 99.36065673828125
patch: mant += str . substring ( 1 , exp CaMeL Pos ) ;
rank: 429
score: 99.3604736328125
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ) ;
rank: 429
score: 99.3532958984375
patch: return create CaMeL Big CaMeL Integer ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 429
score: 99.29481858473558
patch: mant = new Big CaMeL Integer ( exp CaMeL Pos ) ;
rank: 430
score: 99.42690700954861
patch: exp = str . substring ( 0 , exp CaMeL Pos ) ; dec = null ;
rank: 430
score: 99.37959289550781
patch: mant = Math . parse CaMeL Int ( 0 , exp CaMeL Pos ) ;
rank: 430
score: 99.36044650607639
patch: mant = str . length ( ) ;
rank: 430
score: 99.36027257582721
patch: mant = str . substring ( 0 , exp CaMeL Pos - ) ; break ;
rank: 430
score: 99.34693667763158
patch: { mant = str . substring ( str . length ( ) - exp CaMeL Pos ) ;
rank: 430
score: 99.29428100585938
patch: z = str . substring ( exp CaMeL Pos + exp CaMeL Pos ) ;
rank: 431
score: 99.43063693576389
patch: try { dec = str . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 431
score: 99.43004608154297
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + dec CaMeL Pos ) ;
rank: 431
score: 99.42565336681548
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos + 1 ) ; }
rank: 431
score: 99.41529482886905
patch: Number dec CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 431
score: 99.29407501220703
patch: mant = str . substring ( new Integer ( exp CaMeL Pos ) ) ;
rank: 432
score: 99.42999267578125
patch: return create CaMeL Integer ( str . substring ( 0 , dec CaMeL Pos ) ) ;
rank: 432
score: 99.4298957375919
patch: throw new Number CaMeL Format CaMeL Exception ( str ) ; } dec = null ;
rank: 432
score: 99.41524832589286
patch: mant = str . substring ( 0 , 1 ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 432
score: 99.37940738075658
patch: mant = str . substring ( str . substring ( exp CaMeL Pos - $NUMBER$ ) ) ;
rank: 432
score: 99.35950578962054
patch: dim = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 432
score: 99.35877182904412
patch: mant = ( Double ) str . substring ( 0 , exp CaMeL Pos ) ;
rank: 432
score: 99.35289001464844
patch: dec = str . substring ( str . length ( ) - 1 ) ;
rank: 432
score: 99.34670003255208
patch: mant = new String ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 432
score: 99.29399762834821
patch: mant = name . substring ( 0 , exp CaMeL Pos ) ;
rank: 433
score: 99.42513020833333
patch: exp = str . substring ( 0 , dec CaMeL Pos - dec CaMeL Pos ) ;
rank: 433
score: 99.41520421645221
patch: dec = str . substring ( 0 , dec CaMeL Pos - 1 ) ; }
rank: 433
score: 99.37929173519737
patch: mant = str . substring ( str . parse CaMeL Int ( exp CaMeL Pos ) ) ;
rank: 433
score: 99.35841369628906
patch: this . mant = str . substring ( exp CaMeL Pos - 1 ) ;
rank: 433
score: 99.35253034319196
patch: tmp = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 433
score: 99.3466861122533
patch: mant = this . str . substring ( 0 , exp CaMeL Pos ) ; break ; }
rank: 433
score: 99.29285430908203
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) { throw new ; }
rank: 434
score: 99.42952688116776
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } else { dec = null ;
rank: 434
score: 99.42488236860795
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 ) + str . length ( ) ;
rank: 434
score: 99.41514587402344
patch: mant = str . char CaMeL At ( 0 , dec CaMeL Pos ) ;
rank: 434
score: 99.37899780273438
patch: mant = str . substring ( 0 , mant , exp CaMeL Pos ) ;
rank: 434
score: 99.35841369628906
patch: str = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 434
score: 99.35252470128677
patch: return create CaMeL Integer ( exp CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 434
score: 99.34651947021484
patch: mant = $STRING$ . substring ( str . length ( ) - 1 ) ;
rank: 435
score: 99.42929475203805
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( dec CaMeL Pos + 1 ) , str ) ;
rank: 435
score: 99.42928059895833
patch: return create CaMeL Long ( str ) ;
rank: 435
score: 99.42466905381944
patch: mant = str . substring ( dec CaMeL Pos + 1 ) + exp CaMeL Pos ;
rank: 435
score: 99.41498879825367
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { exp = null ; }
rank: 435
score: 99.3789126747533
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos $NUMBER$ ) ;
rank: 435
score: 99.35872156479779
patch: mant = str . starts CaMeL With ( $STRING$ ) ? str : str ; }
rank: 435
score: 99.35828508649554
patch: mant = str . substring ( $STRING$ , exp CaMeL Pos ) ;
rank: 435
score: 99.35237943209134
patch: dec = str . substring ( dec CaMeL Pos ) ; }
rank: 435
score: 99.2924053485577
patch: return str . substring ( exp CaMeL Pos - 1 ) ;
rank: 436
score: 99.42849892064145
patch: return create CaMeL Long ( str . substring ( dec CaMeL Pos + 1 ) ) ; }
rank: 436
score: 99.42826334635417
patch: numeric = str . substring ( 0 , str . length ( ) - 1 ) ;
rank: 436
score: 99.42444525824652
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , 0 ) ;
rank: 436
score: 99.3787841796875
patch: value = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 436
score: 99.3582763671875
patch: mant = str . index CaMeL Of ( $STRING$ ) . trim ( ) ;
rank: 436
score: 99.35824148995536
patch: str = str . substring ( exp CaMeL Pos - 1 ) ;
rank: 436
score: 99.35191345214844
patch: mant = str . substring ( 0 , dec CaMeL Pos * 1 ) ;
rank: 436
score: 99.34646945529514
patch: mant = ( int ) ( str . length ( ) - exp CaMeL Pos ) ;
rank: 437
score: 99.41456187855114
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + str . index CaMeL Of ( $STRING$ ) ,
rank: 437
score: 99.37867495888158
patch: mant = str . substring ( exp CaMeL Pos / 1 , exp CaMeL Pos ) ; }
rank: 437
score: 99.3516781455592
patch: if ( exp CaMeL Pos <= - 1 && exp CaMeL Pos < dec CaMeL Pos ) {
rank: 437
score: 99.29202270507812
patch: mant = str . substring ( exp CaMeL Pos - 1 ) ; } else
rank: 438
score: 99.41445524796195
patch: mant = str . index CaMeL Of ( $STRING$ ) + $STRING$ + str . index CaMeL Of ( $STRING$ ) ;
rank: 438
score: 99.3786685341283
patch: mant = str . substring ( str . length ( ) - exp CaMeL Pos - ) ;
rank: 438
score: 99.35812557444854
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos - ) ;
rank: 438
score: 99.3461052389706
patch: mant = str . append ( $STRING$ ) . substring ( exp CaMeL Pos ) ;
rank: 438
score: 99.2919677734375
patch: mant = str . substring ( exp CaMeL Pos + ) ; break ;
rank: 439
score: 99.42694382440476
patch: if ( last CaMeL Char != $STRING$ ) { exp = str . substring ( exp CaMeL Pos ) ;
rank: 439
score: 99.414287109375
patch: exp CaMeL Pos = str . starts CaMeL With ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + $STRING$ ;
rank: 439
score: 99.37833658854167
patch: return ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 439
score: 99.35757446289062
patch: mant += str . substring ( str . length ( ) + 1 ) ;
rank: 439
score: 99.35689051011029
patch: mant = str . substring ( exp CaMeL Pos + 0 , 0 ) ; }
rank: 439
score: 99.35075378417969
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { mant = str ;
rank: 439
score: 99.34597439236111
patch: mant = str . substring ( str . length ( ) ) . trim ( ) ;
rank: 440
score: 99.42756733141448
patch: throw new Number CaMeL Format CaMeL Exception ( str + str . length ( ) ) ; }
rank: 440
score: 99.41408177425987
patch: dec = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos ) ; }
rank: 440
score: 99.3575210571289
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + $NUMBER$ ;
rank: 440
score: 99.3503353721217
patch: mant = str . substring ( dec CaMeL Pos + 1 , { exp CaMeL Pos ) ;
rank: 440
score: 99.34583333333333
patch: return str . substring ( str . length ( ) - 1 ) ;
rank: 441
score: 99.42692427201705
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( dec CaMeL Pos ) ) ; }
rank: 441
score: 99.4267578125
patch: dec = str . substring ( exp CaMeL Pos - 1 , str . length ( ) - 1 ) ;
rank: 441
score: 99.42347547743056
patch: exp = str . substring ( exp CaMeL Pos + $NUMBER$ , exp CaMeL Pos ) ;
rank: 441
score: 99.41407534950658
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + last CaMeL Char ) ; }
rank: 441
score: 99.3781802528783
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ) ;
rank: 441
score: 99.35747528076172
patch: exp = str . substring ( 0 , exp CaMeL Pos - 0 ) ;
rank: 441
score: 99.34957122802734
patch: if ( ! Character . is CaMeL Digit ( exp CaMeL Pos ) ) {
rank: 441
score: 99.29137420654297
patch: mant = str . substring ( exp CaMeL Pos ) ; } return mant ;
rank: 442
score: 99.35674285888672
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; ; ;
rank: 442
score: 99.35568033854166
patch: mant = Math . min ( 0 , exp CaMeL Pos ) ; }
rank: 442
score: 99.34950561523438
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; break ;
rank: 442
score: 99.34564887152777
patch: mant = str . substring ( 0 , chars . length ( ) - 1 ) ;
rank: 442
score: 99.29135131835938
patch: sb = str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 443
score: 99.42679850260417
patch: mant = str . substring ( dec CaMeL Pos + 1 ) ; exp = null ;
rank: 443
score: 99.35673253676471
patch: mant = str . substring ( 0 , exp CaMeL Pos , 1 ) ; }
rank: 443
score: 99.35406494140625
patch: mant = $STRING$ . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 443
score: 99.3492072610294
patch: mant = str . substring ( dec CaMeL Pos , dec CaMeL Pos ) ; }
rank: 443
score: 99.29129028320312
patch: mant = $STRING$ . substring ( exp CaMeL Pos ) ;
rank: 444
score: 99.41373344089673
patch: mant += str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 444
score: 99.37748887803819
patch: tmp = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 444
score: 99.35345818014706
patch: mant = Math . max ( exp CaMeL Pos , exp CaMeL Pos ) ; ;
rank: 444
score: 99.34479118795956
patch: mant = ( Character ) str . substring ( 0 , exp CaMeL Pos ) ;
rank: 444
score: 99.29122161865234
patch: str = str . substring ( exp CaMeL Pos + exp CaMeL Pos ) ;
rank: 445
score: 99.42636590254934
patch: mant = create CaMeL Long ( str . substring ( dec CaMeL Pos + 1 ) ) ;
rank: 445
score: 99.42619977678571
patch: throw new Number CaMeL Format CaMeL Exception ( exp CaMeL Pos ) ;
rank: 445
score: 99.42252604166667
patch: exp = str . substring ( 0 , 1 ) ;
rank: 445
score: 99.3771908408717
patch: mant = str . substring ( str . substring ( exp CaMeL Pos ) , mant ) ;
rank: 445
score: 99.35302016314338
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; ; ; }
rank: 445
score: 99.34892835115132
patch: return create CaMeL Integer ( dec CaMeL Pos + 1 , str . length ( ) ) ;
rank: 445
score: 99.2909912109375
patch: str = str . substring ( exp CaMeL Pos - 1 ) ; }
rank: 446
score: 99.42618560791016
patch: throw new Number CaMeL Format CaMeL Exception ( exp CaMeL Pos + 1 ) ;
rank: 446
score: 99.4253566576087
patch: if ( exp CaMeL Pos >= exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 446
score: 99.42206488715277
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 ) + 1 ;
rank: 446
score: 99.41322835286458
patch: mant = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + $STRING$ ; }
rank: 446
score: 99.376953125
patch: mant = ( byte ) str . substring ( str . length ( ) ) ;
rank: 446
score: 99.35574161305146
patch: mant += str . substring ( exp CaMeL Pos 1 , exp CaMeL Pos ) ;
rank: 446
score: 99.35300990513393
patch: mant = str . index CaMeL Of ( $STRING$ ) ; break ;
rank: 446
score: 99.3483378092448
patch: return create CaMeL Long ( str . char CaMeL At ( dec CaMeL Pos + 1 ) , exp CaMeL Pos ) ;
rank: 446
score: 99.3443603515625
patch: mant = start . substring ( str . length ( ) - 1 ) ;
rank: 446
score: 99.29073079427083
patch: sb = str . substring ( exp CaMeL Pos ) ;
rank: 447
score: 99.42518107096355
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , str . length ( ) + 1 ) ;
rank: 447
score: 99.42206365411931
patch: mant = str . substring ( exp CaMeL Pos + 1 , str . length ( ) - $NUMBER$ ) ;
rank: 447
score: 99.37650981702302
patch: mant = exp . substring ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 447
score: 99.35565948486328
patch: mant = str . substring ( $NUMBER$ , exp CaMeL Pos , 1 ) ;
rank: 447
score: 99.35214412913604
patch: mant = str . length ( ) ; exp CaMeL Pos = exp CaMeL Pos ;
rank: 448
score: 99.42607286241319
patch: dec = str . substring ( 0 , str . length ( ) + 1 ) ;
rank: 448
score: 99.42515497622283
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos + 1 ) , str ) ;
rank: 448
score: 99.37599690755208
patch: mant = Integer . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 448
score: 99.35548618861607
patch: mant += str . substring ( 0 + exp CaMeL Pos ) ;
rank: 448
score: 99.35203450520834
patch: mant = max . substring ( 0 , exp CaMeL Pos ) ; }
rank: 448
score: 99.34822591145833
patch: mant = str . substring ( dec CaMeL Pos + 1 ) . char CaMeL At ( 0 ) ;
rank: 448
score: 99.34419080946181
patch: mant = new String CaMeL Buffer ( str . substring ( exp CaMeL Pos ) ) ;
rank: 448
score: 99.29035949707031
patch: mant = str . substring ( exp CaMeL Pos ) ; } } else {
rank: 449
score: 99.42496163504464
patch: throw new Number CaMeL Format CaMeL Exception ( str , str ) ;
rank: 449
score: 99.37586975097656
patch: mant = Math . value CaMeL Of ( 0 , exp CaMeL Pos ) ;
rank: 449
score: 99.34765625
patch: mant = str . substring ( dec CaMeL Pos ) ; break ;
rank: 449
score: 99.289501953125
patch: int exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) ;
rank: 450
score: 99.42597888764881
patch: dec = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ; }
rank: 450
score: 99.35530598958333
patch: mant = str . substring ( 1 , exp CaMeL Pos ) ; ;
rank: 450
score: 99.34757995605469
patch: mant = str . substring ( dec CaMeL Pos ) ; mant = str ;
rank: 450
score: 99.28934151785714
patch: field = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 451
score: 99.4256950827206
patch: dec = str . substring ( 0 , exp CaMeL Pos + 1 ) ; }
rank: 451
score: 99.4112890625
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , str . length ( ) - 1 ) ; }
rank: 451
score: 99.35525512695312
patch: mant = str . substring ( 0 , $STRING$ + exp CaMeL Pos ) ;
rank: 451
score: 99.35106658935547
patch: mant = str . index CaMeL Of ( $STRING$ + exp CaMeL Pos ) ;
rank: 451
score: 99.34736902573529
patch: dec = str . substring ( ! str . length ( ) - 1 ) ;
rank: 451
score: 99.34351870888158
patch: mant = str . append ( $STRING$ ) . substring ( 0 , exp CaMeL Pos ) ;
rank: 451
score: 99.2890869140625
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) { break ; }
rank: 452
score: 99.42456817626953
patch: throw new Number CaMeL Format CaMeL Exception ( str , exp CaMeL Pos ) ;
rank: 452
score: 99.42154947916667
patch: exp = str . substring ( 0 , dec CaMeL Pos - 1 ) + 1 ;
rank: 452
score: 99.37527286305146
patch: mant = str . substring ( 0 ) . substring ( exp CaMeL Pos ) ;
rank: 452
score: 99.35521589006696
patch: mant = str . substring ( exp CaMeL Pos , mant ) ;
rank: 452
score: 99.34317355685764
patch: mant = new String ( str . substring ( str . length ( ) ) ) ;
rank: 452
score: 99.28903198242188
patch: return new Double ( str . substring ( exp CaMeL Pos ) ) ; }
rank: 453
score: 99.42559136284723
patch: try { exp = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 453
score: 99.41091739430146
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + 1 ; }
rank: 453
score: 99.35467529296875
patch: mant = str . substring ( str . length ( ) ) - 1 ;
rank: 453
score: 99.35053567325367
patch: mant = str = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 453
score: 99.34677522078805
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( dec CaMeL Pos ) + $STRING$ ) ;
rank: 454
score: 99.4212287454044
patch: mant = str . substring ( 0 , dec CaMeL Pos ) ; } * /
rank: 454
score: 99.37457275390625
patch: mant = str . substring ( str . abs ( ) , exp CaMeL Pos ) ;
rank: 454
score: 99.35423278808594
patch: mant = str . substring ( 0 / 0 , exp CaMeL Pos ) ;
rank: 454
score: 99.34983197380515
patch: mant = Integer . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 454
score: 99.34672715928819
patch: mant = str . substring ( dec CaMeL Pos ) + str . length ( ) ;
rank: 454
score: 99.28834533691406
patch: mant = new str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 455
score: 99.41028849283855
patch: throw new Number CaMeL Format CaMeL Exception ( str + str . index CaMeL Of ( $STRING$ ) + $STRING$ ) ; }
rank: 455
score: 99.37456512451172
patch: mant = mant . str . substring ( 0 , exp CaMeL Pos ) ;
rank: 455
score: 99.3541618795956
patch: mant = str . substring ( - 0 , exp CaMeL Pos - 1 ) ;
rank: 455
score: 99.34827378216912
patch: mant = str . replace ( exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 455
score: 99.34642028808594
patch: mant = str . substring ( dec CaMeL Pos + 1 , true ) ;
rank: 455
score: 99.34263780381944
patch: mant = new str . substring ( 0 , exp CaMeL Pos ) ; break ; }
rank: 455
score: 99.28788539341518
patch: return str . substring ( exp CaMeL Pos - 1 ) ; }
rank: 456
score: 99.42295771059783
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { mant = str . substring ( dec CaMeL Pos ) ;
rank: 456
score: 99.42094282670455
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos - 1 ) + 1 ;
rank: 456
score: 99.41010076349431
patch: exp = create CaMeL Big CaMeL Integer ( str . substring ( 0 , dec CaMeL Pos ) ) ; }
rank: 456
score: 99.37413194444444
patch: mant = ( byte + str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 456
score: 99.35410563151042
patch: mant = str . substring ( 1 , 1 ) ;
rank: 456
score: 99.34800809972427
patch: mant = Math . max ( 0 , exp CaMeL Pos - 0 ) ; }
rank: 456
score: 99.34548950195312
patch: dec = str . substring ( 0 , dec CaMeL Pos ) ; break ;
rank: 456
score: 99.34207492404514
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; break ; else {
rank: 457
score: 99.4243228310033
patch: mant = new Number CaMeL Format CaMeL Exception ( str . length ( ) - 1 ) ;
rank: 457
score: 99.4228515625
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos + 1 ) + str ) ;
rank: 457
score: 99.35393524169922
patch: mant = str . substring ( ( exp CaMeL Pos ) - 1 ) ;
rank: 457
score: 99.34674431295956
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; } * /
rank: 457
score: 99.28759002685547
patch: z = str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 458
score: 99.40984030330883
patch: mant = str . substring ( 0 , dec CaMeL Pos ) ; break ; }
rank: 458
score: 99.37398952907986
patch: mant = exp CaMeL Pos - str . substring ( 0 , exp CaMeL Pos ) ;
rank: 458
score: 99.34546712239583
patch: { dec = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 458
score: 99.34133013556985
patch: mant = new str . substring ( str . length ( ) - 1 ) ;
rank: 459
score: 99.422119140625
patch: if ( exp CaMeL Pos >= dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ;
rank: 459
score: 99.41975911458333
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; dec = null ;
rank: 459
score: 99.40983780570652
patch: dec = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + $STRING$ ;
rank: 459
score: 99.37397003173828
patch: mant = str . substring ( 0 , chars . length ( ) ) ;
rank: 459
score: 99.35243443080357
patch: mant = str . substring ( str . exp CaMeL Pos ) ;
rank: 459
score: 99.3461669921875
patch: } mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 459
score: 99.34526824951172
patch: if ( exp CaMeL Pos >= dec CaMeL Pos ) { mant = str ;
rank: 459
score: 99.34123149671052
patch: return str . substring ( str . length ( ) - 0 , exp CaMeL Pos ) ;
rank: 459
score: 99.2874286358173
patch: String str = str . substring ( exp CaMeL Pos ) ;
rank: 460
score: 99.37384354440789
patch: mant = str . substring ( str . substring ( exp CaMeL Pos ) , 0 ) ;
rank: 460
score: 99.3523178100586
patch: mant = str . substring ( exp CaMeL Pos - 1 + 0 ) ;
rank: 460
score: 99.3461555032169
patch: mant = str . substring ( 0 , exp CaMeL Pos ) * $NUMBER$ ; }
rank: 460
score: 99.344970703125
patch: { mant = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 460
score: 99.28594207763672
patch: mant = str . substring ( exp CaMeL Pos ) + 1 ; break ;
rank: 461
score: 99.4097210427989
patch: return create CaMeL Long ( str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ) ; }
rank: 461
score: 99.3735710592831
patch: mant = new String = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 461
score: 99.35200051700367
patch: mant ++ ; mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 462
score: 99.42096502130681
patch: if ( exp CaMeL Pos > - 1 ) { exp = str . substring ( dec CaMeL Pos ) ;
rank: 462
score: 99.40960693359375
patch: exp CaMeL Pos = str . starts CaMeL With ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ; }
rank: 462
score: 99.37356906467014
patch: mant = str . substring ( exp CaMeL Pos - name . length ( ) ) ;
rank: 462
score: 99.35176086425781
patch: mant = str . substring ( exp CaMeL Pos + 0 , 0 ) ;
rank: 462
score: 99.34577493106617
patch: mant = str . substring ( exp CaMeL Pos + 1 ) - 1 ; }
rank: 462
score: 99.34447079613095
patch: exp = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ; } else {
rank: 462
score: 99.33981805098684
patch: mant = Math . substring ( str . length ( ) , exp CaMeL Pos ) ; }
rank: 462
score: 99.28540802001953
patch: mant = str . substring ( exp CaMeL Pos ] + 1 ) ; }
rank: 463
score: 99.4189517372533
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ] ) ;
rank: 463
score: 99.37309434678819
patch: mant = mant . substring ( str . trim ( ) , exp CaMeL Pos ) ;
rank: 463
score: 99.34575544084821
patch: mant = str . trim ( ) . length ( ) ; }
rank: 463
score: 99.33967590332031
patch: m = str . substring ( str . length ( ) - 1 ) ;
rank: 464
score: 99.42052459716797
patch: throw new Number CaMeL Format CaMeL Exception ( str . trim ( ) ) ;
rank: 464
score: 99.4189453125
patch: mant = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos - 1 ) ; }
rank: 464
score: 99.409072265625
patch: if ( exp CaMeL Pos > exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 464
score: 99.37295193142361
patch: try { mant = str . substring ( 0 , exp CaMeL Pos - 0 ) ;
rank: 465
score: 99.42241876775569
patch: mant = str . substring ( dec CaMeL Pos + 1 ) . index CaMeL Of ( $STRING$ ) ; }
rank: 465
score: 99.41864304315476
patch: exp = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos - 1 ) ; }
rank: 465
score: 99.40857464334239
patch: exp = new Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) , exp CaMeL Pos ) ; }
rank: 465
score: 99.35084635416666
patch: mant = str . substring ( exp CaMeL Pos exp CaMeL Pos ) ;
rank: 465
score: 99.34403722426471
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos + ) ;
rank: 465
score: 99.34396844161184
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ] ) ;
rank: 465
score: 99.3391049033717
patch: mant = str . substring ( str . length ( ) - 1 ) ; } else {
rank: 466
score: 99.4202880859375
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 466
score: 99.4181769875919
patch: mant = str . substring ( dec CaMeL Pos + 1 , 0 ) ; }
rank: 466
score: 99.40830993652344
patch: exp = str . substring ( 0 , dec CaMeL Pos ) ; } else
rank: 466
score: 99.37174987792969
patch: mant = exp CaMeL Pos + str . substring ( exp CaMeL Pos ) ;
rank: 466
score: 99.35071563720703
patch: mant = str . substring ( 0 <= exp CaMeL Pos - 1 ) ;
rank: 466
score: 99.34380744485294
patch: mant = str . substring ( start + 1 , exp CaMeL Pos ) ; }
rank: 466
score: 99.34368024553571
patch: c = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 467
score: 99.41795712425595
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos + 1 ) ; }
rank: 467
score: 99.35065774356617
patch: mant = str . substring ( 1 , exp CaMeL Pos - 1 ) ; ;
rank: 467
score: 99.34369973575367
patch: mant = str . trim ( ) ; mant = str . trim ( ) ;
rank: 467
score: 99.28439767020089
patch: mant = str . substring ( exp CaMeL Pos ] ) ; }
rank: 468
score: 99.42188371930804
patch: dec = str . substring ( exp CaMeL Pos - 1 ) ;
rank: 468
score: 99.41777208116319
patch: last CaMeL Char = str . char CaMeL At ( exp CaMeL Pos + 1 ) ;
rank: 468
score: 99.40740966796875
patch: dec = str . substring ( 0 , dec CaMeL Pos ) ; } }
rank: 468
score: 99.37143283420139
patch: mant = Math . substring ( exp CaMeL Pos , exp CaMeL Pos - 1 ) ;
rank: 468
score: 99.35065460205078
patch: mant = str . substring ( 0 ++ exp CaMeL Pos - 1 ) ;
rank: 468
score: 99.34357766544117
patch: mant = Integer . parse CaMeL Int ( 0 , exp CaMeL Pos ) ; }
rank: 468
score: 99.33816348805146
patch: exp = str . substring ( 0 , exp CaMeL Pos ) ; break ; }
rank: 469
score: 99.4217529296875
patch: exp = str . substring ( exp CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ;
rank: 469
score: 99.41975541548295
patch: if ( exp CaMeL Pos == - 1 ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 469
score: 99.41716766357422
patch: mant = str . substring ( 1 , dec CaMeL Pos - 1 ) ;
rank: 469
score: 99.4073486328125
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 469
score: 99.37105984157986
patch: mant = str . substring ( exp CaMeL Pos ) . to CaMeL String ( ) ;
rank: 469
score: 99.35025787353516
patch: mant = str . substring ( exp CaMeL Pos + 0 , 1 ) ;
rank: 469
score: 99.34297485351563
patch: exp = str . substring ( ! Character . is CaMeL Digit ( last CaMeL Char ) ) ;
rank: 469
score: 99.34288024902344
patch: mant = str . substring ( start + 1 , exp CaMeL Pos ) ;
rank: 469
score: 99.3374087685033
patch: return new str . substring ( str . length ( ) - exp CaMeL Pos ) ; }
rank: 469
score: 99.283447265625
patch: mant = $STRING$ . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 470
score: 99.41928100585938
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos + 1 ) + $STRING$ ) ; }
rank: 470
score: 99.41701438210227
patch: mant = str . substring ( dec CaMeL Pos + 1 , str . length ( ) - $NUMBER$ ) ;
rank: 470
score: 99.40699768066406
patch: exp = str . substring ( 0 , exp CaMeL Pos ) ; } }
rank: 470
score: 99.37069702148438
patch: mant = str . substring ( 0 , [ exp CaMeL Pos ] ) ;
rank: 470
score: 99.35025460379464
patch: mant = str . substring ( $NUMBER$ + exp CaMeL Pos ) ;
rank: 470
score: 99.34261322021484
patch: exp = str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 470
score: 99.28274739583334
patch: final int exp CaMeL Pos = exp CaMeL Pos - exp CaMeL Pos ;
rank: 471
score: 99.41923253676471
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 1 ) ) ;
rank: 471
score: 99.40677642822266
patch: dec = str . substring ( 0 , exp CaMeL Pos ) ; } }
rank: 471
score: 99.35009765625
patch: mant = str . substring ( 0 : exp CaMeL Pos ) ;
rank: 471
score: 99.34217744715073
patch: mant = str . substring ( exp CaMeL Pos + . length ( ) ) ;
rank: 471
score: 99.342138671875
patch: mant = str . substring ( dec CaMeL Pos + 1 + 1 , dec CaMeL Pos ) ;
rank: 471
score: 99.33674701891448
patch: mant = str . substring ( ( int ) str . length ( ) - 1 ) ;
rank: 471
score: 99.28235626220703
patch: return str . substring ( 0 , exp CaMeL Pos - 1 ) ; }
rank: 472
score: 99.41659385279605
patch: exp CaMeL Pos = str . substring ( 0 , exp CaMeL Pos + 1 ) ; }
rank: 472
score: 99.40655517578125
patch: dec = str . substring ( 0 , exp CaMeL Pos ) ; } else
rank: 472
score: 99.36988740808823
patch: mant = new str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 472
score: 99.34980773925781
patch: mant = str . substring ( exp CaMeL Pos - 1 + $NUMBER$ ) ;
rank: 472
score: 99.3420181274414
patch: sb . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 472
score: 99.33636115579044
patch: mant = this . str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 472
score: 99.28220778245192
patch: final int exp CaMeL Pos = exp CaMeL Pos - 1 ;
rank: 473
score: 99.41898890904018
patch: exp = str . substring ( dec CaMeL Pos + $NUMBER$ ) ;
rank: 473
score: 99.41657257080078
patch: mant = str . substring ( dec CaMeL Pos + 1 , $STRING$ ) ;
rank: 473
score: 99.4063030740489
patch: exp = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + $STRING$ ;
rank: 473
score: 99.34954071044922
patch: mant = str . substring ( exp CaMeL Pos - 0 , $NUMBER$ ) ;
rank: 473
score: 99.34138488769531
patch: mant = str . char CaMeL At ( exp CaMeL Pos - 0 ) ;
rank: 473
score: 99.33528900146484
patch: mant = str . substring ( 0 , length , exp CaMeL Pos ) ;
rank: 473
score: 99.28180694580078
patch: mant = str . substring ( ( exp CaMeL Pos + 1 ) ) ;
rank: 474
score: 99.42012746710526
patch: mant = str . substring ( exp CaMeL Pos ) . index CaMeL Of ( $STRING$ ) ;
rank: 474
score: 99.41642761230469
patch: last CaMeL Char = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 474
score: 99.40590598366477
patch: if ( exp CaMeL Pos > dec CaMeL Pos - 1 && exp CaMeL Pos < dec CaMeL Pos ) {
rank: 474
score: 99.36970350477431
patch: mant = exp CaMeL Pos + str . substring ( exp CaMeL Pos + 1 ) ;
rank: 474
score: 99.34883117675781
patch: mant = str . substring ( 0 , exp CaMeL Pos ) - $NUMBER$ ;
rank: 474
score: 99.34185112847223
patch: mant = str . substring ( dec CaMeL Pos + 1 ) ; dec = str ;
rank: 474
score: 99.28123474121094
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) { return null ; }
rank: 475
score: 99.41988975123355
patch: return new Big CaMeL Integer ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 475
score: 99.41857231987848
patch: mant = new Float ( str . substring ( dec CaMeL Pos + 1 ) ) ;
rank: 475
score: 99.36958821614583
patch: mant = ( str . substring ( 0 , exp CaMeL Pos + 1 ) ) ;
rank: 475
score: 99.34881591796875
patch: mant = str . substring ( 0 < exp CaMeL Pos ) ;
rank: 475
score: 99.34181565504808
patch: if ( exp CaMeL Pos > str . length ( ) )
rank: 475
score: 99.33985811121323
patch: mant = str . substring ( exp CaMeL Pos , exp CaMeL Pos - ) ;
rank: 475
score: 99.33493939568015
patch: return new ( str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 475
score: 99.28059605189732
patch: mant = str . substring ( exp CaMeL Pos ++ ) ; }
rank: 476
score: 99.4051846590909
patch: if ( exp CaMeL Pos < dec CaMeL Pos - 1 && exp CaMeL Pos < dec CaMeL Pos ) {
rank: 476
score: 99.3486557006836
patch: mant = ) + str . substring ( 0 , exp CaMeL Pos ) ;
rank: 476
score: 99.34164910567434
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos <= exp CaMeL Pos ) {
rank: 476
score: 99.3396355124081
patch: mant ; str = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 476
score: 99.33476706112133
patch: mant = ( int ) mant . substring ( 0 , exp CaMeL Pos ) ;
rank: 476
score: 99.28007507324219
patch: mant = str . substring ( exp CaMeL Pos >= exp CaMeL Pos ) ;
rank: 477
score: 99.4178133877841
patch: return create CaMeL Long ( str . substring ( 0 , str . length ( ) - 1 ) ) ;
rank: 477
score: 99.4051513671875
patch: exp = new Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) + 1 , exp CaMeL Pos ) ;
rank: 477
score: 99.34820556640625
patch: mant = str . substring ( 0 , exp , exp CaMeL Pos ) ;
rank: 477
score: 99.34156901041666
patch: mant = str . substring ( dec CaMeL Pos - 1 ) ; }
rank: 477
score: 99.339453125
patch: mant = new str . substring ( exp CaMeL Pos + 1 ) ;
rank: 477
score: 99.33467102050781
patch: mant = exp . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 477
score: 99.27975463867188
patch: return new Integer ( exp CaMeL Pos ) ;
rank: 478
score: 99.41869007457386
patch: mant = str . substring ( exp CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ;
rank: 478
score: 99.34809875488281
patch: mant = str . substring ( exp CaMeL Pos - 1 - 0 ) ;
rank: 478
score: 99.33934110753677
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; return 0 ;
rank: 478
score: 99.334619140625
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; else
rank: 478
score: 99.27969796316964
patch: result = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 479
score: 99.4183682528409
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos > str . length ( ) - 1 )
rank: 479
score: 99.34786987304688
patch: substring = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 479
score: 99.34131731305804
patch: tmp = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 479
score: 99.33878871372768
patch: mant = str . substring ( exp CaMeL Pos + 0 ) ;
rank: 479
score: 99.33429918791118
patch: mant = ( int ) str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 479
score: 99.27952473958334
patch: result = str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 480
score: 99.41825358072917
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } else { return null ;
rank: 480
score: 99.41657366071429
patch: exp = str . substring ( dec CaMeL Pos + 1 ) . to CaMeL String ( ) ; }
rank: 480
score: 99.41448419744319
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - 1 ) + 1 ;
rank: 480
score: 99.40492248535156
patch: dec = str . substring ( 0 , dec CaMeL Pos ) ; } else
rank: 480
score: 99.34785012637867
patch: mant = str . substring ( 0 , exp CaMeL Pos - $NUMBER$ ) ; ;
rank: 480
score: 99.33869171142578
patch: mant = Integer . parse CaMeL Int ( exp CaMeL Pos ) ; break ;
rank: 480
score: 99.27730015345982
patch: mant = str . substring ( exp CaMeL Pos - ) ; }
rank: 481
score: 99.41439964657738
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 , dec CaMeL Pos ) ; }
rank: 481
score: 99.34776960100446
patch: mant = str . substring ( 0 / exp CaMeL Pos ) ;
rank: 481
score: 99.34115745907738
patch: return create CaMeL Long ( exp CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 481
score: 99.33868815104167
patch: float mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 481
score: 99.33380485983456
patch: mant = ( float ) str . substring ( 0 , exp CaMeL Pos ) ;
rank: 481
score: 99.2770004272461
patch: mant = new Character ( str . substring ( exp CaMeL Pos ) ) ;
rank: 482
score: 99.41554090711806
patch: exp = str . substring ( dec CaMeL Pos + 0 , exp CaMeL Pos ) ;
rank: 482
score: 99.41403537326389
patch: exp CaMeL Pos = str . char CaMeL At ( dec CaMeL Pos - 1 ) ;
rank: 482
score: 99.40413411458333
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 482
score: 99.34090169270833
patch: dec = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ; } else {
rank: 482
score: 99.33866613051471
patch: mant ; mant = str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 482
score: 99.3335693359375
patch: mant = ( String ) str . substring ( exp CaMeL Pos ) ;
rank: 482
score: 99.27681732177734
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; break )
rank: 483
score: 99.4179623252467
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , 1 ) ) ;
rank: 483
score: 99.41489045516305
patch: if ( exp CaMeL Pos <= exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 483
score: 99.40396781589673
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str . index CaMeL Of ( $STRING$ ) - 1 ) ;
rank: 483
score: 99.36778428819444
patch: value = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 483
score: 99.34662628173828
patch: mant = substring ( str . length ( ) - exp CaMeL Pos ) ;
rank: 483
score: 99.3384017944336
patch: mant = Math . max ( 0 , exp CaMeL Pos - 0 ) ;
rank: 483
score: 99.33329050164474
patch: str = str . substring ( str . length ( ) - exp CaMeL Pos ) ; }
rank: 483
score: 99.27628267728366
patch: final int exp CaMeL Pos = exp CaMeL Pos + 1 ;
rank: 484
score: 99.40345052083333
patch: exp = new Number ( str . length ( ) - 1 ) ;
rank: 484
score: 99.36776394314236
patch: string = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 484
score: 99.3465576171875
patch: mant = str . substring ( exp CaMeL Pos + 1 ) ; ;
rank: 484
score: 99.3407315340909
patch: mant = str . substring ( 0 , exp CaMeL Pos , str . length ( ) - 1 ) ;
rank: 484
score: 99.2754898071289
patch: exp CaMeL Pos = str . last CaMeL Index CaMeL Of ( $STRING$ ) ;
rank: 485
score: 99.41643608940973
patch: try { exp CaMeL Pos = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 485
score: 99.40282093394886
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; } else
rank: 485
score: 99.36766052246094
patch: mant = chars . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 485
score: 99.34645182291666
patch: mant ( str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 485
score: 99.34010314941406
patch: return create CaMeL Long ( str . char CaMeL At ( 0 ) ) ;
rank: 485
score: 99.33768956801471
patch: mant = str . char CaMeL At ( exp CaMeL Pos ) + 1 ; }
rank: 485
score: 99.33299496299342
patch: mant = ( int ) str . substring ( str . length ( ) - $NUMBER$ ) ;
rank: 485
score: 99.2750244140625
patch: mant = str . substring ( start , exp CaMeL Pos ) ; break ;
rank: 486
score: 99.41336059570312
patch: mant = str . substring ( dec CaMeL Pos + 1 ) + $STRING$ ;
rank: 486
score: 99.36737060546875
patch: mant = Math . substring ( exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 486
score: 99.34638671875
patch: mant = str . substring ( 0 + exp CaMeL Pos ) ; ;
rank: 486
score: 99.340087890625
patch: mant = str . substring ( 0 , dec CaMeL Pos , exp CaMeL Pos ) ; }
rank: 486
score: 99.33296283922698
patch: mant = str . substring ( 0 , str . length ( ) ) ; break ; }
rank: 486
score: 99.27482604980469
patch: mant = $STRING$ ; mant = str . substring ( exp CaMeL Pos ) ;
rank: 487
score: 99.4024149576823
patch: if ( exp CaMeL Pos >= dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; }
rank: 487
score: 99.36678314208984
patch: mant = mant . substring ( exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 487
score: 99.34635009765626
patch: mant = str . substring ( $NUMBER$ ) ;
rank: 487
score: 99.34004211425781
patch: last CaMeL Char = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 487
score: 99.33707682291667
patch: mant = str . substring ( exp CaMeL Pos + 0 ) ; }
rank: 487
score: 99.33273494944854
patch: mant = str . substring ( ( int ) str . length ( ) ) ;
rank: 487
score: 99.27452674278847
patch: mant = name . substring ( exp CaMeL Pos ) ; }
rank: 488
score: 99.41577826605902
patch: dec = str . substring ( 1 , str . length ( ) - 1 ) ;
rank: 488
score: 99.3461555032169
patch: mant = str . substring ( 0 + exp CaMeL Pos - 1 ) ) ;
rank: 488
score: 99.33243815104167
patch: mant = new String CaMeL Buffer ( str . length ( ) ) ;
rank: 488
score: 99.27325908954327
patch: mant = new Integer ( exp CaMeL Pos + 1 ) ;
rank: 489
score: 99.41322835286458
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 489
score: 99.412353515625
patch: mant = str . substring ( exp CaMeL Pos + dec CaMeL Pos ) ;
rank: 489
score: 99.4017822265625
patch: exp = Number CaMeL Utils . create CaMeL Float ( str ) ; }
rank: 489
score: 99.366455078125
patch: mant = mant . substring ( exp CaMeL Pos / 1 , exp CaMeL Pos ) ;
rank: 489
score: 99.34567260742188
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + $STRING$ ;
rank: 489
score: 99.339990234375
patch: { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 489
score: 99.33220358455883
patch: return new Character ( str . substring ( str . length ( ) ) ) ;
rank: 489
score: 99.272705078125
patch: z = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 490
score: 99.41531532689145
patch: return create CaMeL Long ( str . substring ( exp CaMeL Pos + 1 ) ) ; }
rank: 490
score: 99.34515380859375
patch: mant = str . substring ( str . length ( ) , mant ) ;
rank: 490
score: 99.33599446614583
patch: mant = str . char CaMeL At ( 0 ) ; break ; }
rank: 491
score: 99.41455078125
patch: return new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 491
score: 99.41272503396739
patch: mant = str . substring ( dec CaMeL Pos + 1 , str . starts CaMeL With ( $STRING$ ) ) ;
rank: 491
score: 99.41177707248264
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 , 0 ) ;
rank: 491
score: 99.34510149274554
patch: mant = str . get ( 0 , exp CaMeL Pos ) ;
rank: 491
score: 99.33945826480263
patch: String mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 491
score: 99.33595904181985
patch: mant = str . substring ( exp CaMeL Pos + $NUMBER$ ) ; break ; }
rank: 491
score: 99.33186848958333
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 492
score: 99.41439964657738
patch: return create CaMeL Long ( str ) ; } throw new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 492
score: 99.41217400045956
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + str ) ; }
rank: 492
score: 99.41139051649306
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 ) + 1 ;
rank: 492
score: 99.40110270182292
patch: if ( dec CaMeL Pos < dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; }
rank: 492
score: 99.36589219835069
patch: result = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 492
score: 99.34505462646484
patch: mant = str . substring ( 0 , exp CaMeL Pos ( ) ) ;
rank: 492
score: 99.33873833550348
patch: exp = str . substring ( ! str . starts CaMeL With ( $STRING$ ) ) ;
rank: 493
score: 99.41134207589286
patch: mant = str . substring ( dec CaMeL Pos + 1 ) + str . length ( ) ) ;
rank: 493
score: 99.36564805772569
patch: mant = str . substring ( name . length ( ) - exp CaMeL Pos ) ;
rank: 493
score: 99.34493001302083
patch: mant = str . substring ( - 1 , exp CaMeL Pos ) ;
rank: 493
score: 99.33078484786184
patch: mant = str . substring ( str . length ( ) - 1 ) ; continue ; }
rank: 494
score: 99.4139468544408
patch: dec = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ; }
rank: 494
score: 99.4116741677989
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { mant = str . substring ( exp CaMeL Pos ) ;
rank: 494
score: 99.41124810112848
patch: mant = new Float ( str . substring ( exp CaMeL Pos + 1 ) ) ;
rank: 494
score: 99.36492919921875
patch: tmp = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 494
score: 99.34464263916016
patch: mant = str . substring ( 0 + $NUMBER$ , exp CaMeL Pos ) ;
rank: 494
score: 99.33799438476562
patch: if ( Character . is CaMeL Digit ( last CaMeL Char ) && last CaMeL Char != $STRING$ )
rank: 494
score: 99.33534150965073
patch: mant = str . substring ( 0 , exp CaMeL Pos + ) ; break ;
rank: 494
score: 99.33049460018383
patch: mant = str . substring ( str . starts CaMeL With ( $STRING$ ) ) ;
rank: 495
score: 99.41387384588069
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos ) + $STRING$ ) ; }
rank: 495
score: 99.4116719563802
patch: if ( exp CaMeL Pos <= dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; }
rank: 495
score: 99.36489529079861
patch: mant = ( str . substring ( 0 , exp CaMeL Pos ) , mant ) ;
rank: 495
score: 99.33513997395833
patch: mant = new ) . substring ( 0 , exp CaMeL Pos ) ;
rank: 495
score: 99.3299560546875
patch: mant = exp . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ; }
rank: 496
score: 99.413818359375
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } }
rank: 496
score: 99.41144561767578
patch: mant = str . substring ( 0 , 0 , dec CaMeL Pos ) ;
rank: 496
score: 99.4003125
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + str . index CaMeL Of ( $STRING$ ) + $STRING$ ) ;
rank: 496
score: 99.3373031616211
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { exp = str ;
rank: 496
score: 99.33469935825893
patch: mant = str . replace ( 0 , exp CaMeL Pos ) ;
rank: 496
score: 99.32962239583334
patch: mant = ( Integer ) str . substring ( exp CaMeL Pos ) ;
rank: 497
score: 99.41338147615132
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } else { mant = str ;
rank: 497
score: 99.41068307976974
patch: mant = str . substring ( dec CaMeL Pos + 1 , last CaMeL Char ) ; }
rank: 497
score: 99.41027069091797
patch: exp = str . substring ( dec CaMeL Pos + 1 - 1 ) ;
rank: 497
score: 99.39992453835227
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) { if ( exp CaMeL Pos > dec CaMeL Pos )
rank: 497
score: 99.36461588541667
patch: mant = - str . substring ( 0 , exp CaMeL Pos ) ;
rank: 497
score: 99.34296013327206
patch: mant = str . substring ( str . substring ( 0 , 1 ) ) ;
rank: 497
score: 99.33467371323529
patch: mant = str . substring ( exp CaMeL Pos + exp CaMeL Pos ) ; ;
rank: 497
score: 99.32958984375
patch: mant = mant . substring ( str . length ( ) - 1 ) ; }
rank: 498
score: 99.41302780877976
patch: return str . substring ( dec CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 498
score: 99.40940259850544
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ; }
rank: 498
score: 99.3428955078125
patch: mant = str . substring ( exp CaMeL Pos - 0 - 1 ) ;
rank: 498
score: 99.33406829833984
patch: mant = Integer . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 499
score: 99.41298606178977
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str . substring ( exp CaMeL Pos ) ) ; }
rank: 499
score: 99.36447482638889
patch: mant = str . substring ( exp CaMeL Pos << 1 , exp CaMeL Pos ) ;
rank: 499
score: 99.34283088235294
patch: mant = str . substring ( exp CaMeL Pos - 1 ) ; return str ;
rank: 499
score: 99.33366842830883
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos ) ; ;
rank: 499
score: 99.3289794921875
patch: mant = str . substring ( 0 , list . length ( ) ) ;
rank: 500
score: 99.40858289930556
patch: mant = str . substring ( dec CaMeL Pos + 1 ) . trim ( ) ;
rank: 500
score: 99.39961751302083
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ , str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 500
score: 99.3642578125
patch: mant = Math . substring ( exp CaMeL Pos ) ;
rank: 500
score: 99.34246419270833
patch: mant = str . substring ( str . length ( ) ] ) ;
rank: 500
score: 99.33689252068015
patch: return create CaMeL Integer ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 500
score: 99.3333381204044
patch: sb . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ; }
rank: 500
score: 99.32872817095588
patch: return new Long ( str . substring ( exp CaMeL Pos - 1 ) ) ;
rank: 500
score: 99.26874248798077
patch: final mant = str . substring ( exp CaMeL Pos ) ;
rank: 501
score: 99.41287667410714
patch: exp = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos + 1 ) ; }
rank: 501
score: 99.39940643310547
patch: exp = str . substring ( 0 , dec CaMeL Pos ) ; } }
rank: 501
score: 99.3421989889706
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; mant -- ;
rank: 501
score: 99.33669211647727
patch: mant = str . substring ( dec CaMeL Pos + 1 , mant . length ( ) - 1 ) ;
rank: 501
score: 99.33251139322917
patch: mant = str . substring ( exp CaMeL Pos + ) + 1 ;
rank: 501
score: 99.2685775756836
patch: z = str . substring ( exp CaMeL Pos + 1 ) ; break ;
rank: 502
score: 99.41276411576705
patch: exp = str . substring ( exp CaMeL Pos + 1 ) . index CaMeL Of ( $STRING$ ) ; }
rank: 502
score: 99.40884060329861
patch: mant = str . substring ( dec CaMeL Pos + dec CaMeL Pos + 1 ) ;
rank: 502
score: 99.40812174479167
patch: str = str . substring ( 0 , str . length ( ) - 1 ) ;
rank: 502
score: 99.36402652138158
patch: mant = str . substring ( str . trim ( ) . length ( ) ) ; }
rank: 502
score: 99.34211730957031
patch: mant = str . substring ( 1 , str . length ( ) ) ;
rank: 502
score: 99.33663940429688
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + $STRING$ ) ;
rank: 502
score: 99.33232116699219
patch: mant = str . ends CaMeL With ( $STRING$ ) ? $STRING$ : $STRING$ ;
rank: 502
score: 99.32854461669922
patch: mant = mant . substring ( 0 , str . length ( ) ) ;
rank: 502
score: 99.26848958333333
patch: b = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 503
score: 99.40839301215277
patch: exp = $STRING$ . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 503
score: 99.3315658569336
patch: mant mant = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 503
score: 99.26841735839844
patch: return new Integer ( str . substring ( exp CaMeL Pos ) ) ; }
rank: 504
score: 99.3635612936581
patch: mant = str . substring ( exp CaMeL Pos int , exp CaMeL Pos ) ;
rank: 504
score: 99.3314697265625
patch: mant = str . index CaMeL Of ( exp CaMeL Pos ) ; }
rank: 504
score: 99.32834344161184
patch: result = str . substring ( str . length ( ) - exp CaMeL Pos ) ; }
rank: 504
score: 99.26840006510416
patch: mant = new Big CaMeL Integer ( exp CaMeL Pos + 1 ) ;
rank: 505
score: 99.41184596011513
patch: return create CaMeL Long ( str . substring ( 0 , dec CaMeL Pos ) ) ; }
rank: 505
score: 99.40768093532986
patch: if ( exp CaMeL Pos < - 1 ) { exp CaMeL Pos = - 1 ;
rank: 505
score: 99.40736897786458
patch: if ( exp CaMeL Pos < str . length ( ) ) { mant = str ;
rank: 505
score: 99.3988370028409
patch: if ( exp CaMeL Pos >= dec CaMeL Pos ) { if ( exp CaMeL Pos > dec CaMeL Pos )
rank: 505
score: 99.36351182725694
patch: sb = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 505
score: 99.34092712402344
patch: exp = str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 505
score: 99.33628443667763
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos > exp CaMeL Pos ) {
rank: 505
score: 99.32822963169643
patch: mant = start . substring ( 0 , exp CaMeL Pos ) ;
rank: 505
score: 99.26776123046875
patch: mant = new Double ( str . index CaMeL Of ( $STRING$ ) ) ;
rank: 506
score: 99.40727403428819
patch: mant = str . substring ( dec CaMeL Pos + 1 , 0 - 1 ) ;
rank: 506
score: 99.39871215820312
patch: exp = str . char CaMeL At ( 0 , exp CaMeL Pos ) ;
rank: 506
score: 99.36350911458334
patch: mant = ( str . substring ( 0 , exp CaMeL Pos ) ;
rank: 506
score: 99.33990885416667
patch: mant = str . substring ( 0 + exp CaMeL Pos ] ) ;
rank: 506
score: 99.33623712713069
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos , dec CaMeL Pos ) ;
rank: 507
score: 99.40717230902777
patch: exp = str . substring ( 0 , exp CaMeL Pos ) ; exp = null ;
rank: 507
score: 99.39840698242188
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; }
rank: 507
score: 99.36298285590277
patch: string = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 507
score: 99.3396504720052
patch: mant = substring ( 0 , exp CaMeL Pos ) ;
rank: 507
score: 99.32979329427083
patch: mant mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 507
score: 99.32792394301471
patch: mant = ( mant . length ( ) - exp CaMeL Pos ) ; break ;
rank: 507
score: 99.26724679129464
patch: mant = name . substring ( exp CaMeL Pos + 1 ) ;
rank: 508
score: 99.41085379464286
patch: if ( exp CaMeL Pos > 0 ) { exp = str . substring ( exp CaMeL Pos ) ;
rank: 508
score: 99.40702892485119
patch: if ( ! Character . is CaMeL Digit ( exp CaMeL Pos ) && last CaMeL Char != $STRING$ )
rank: 508
score: 99.40683322482639
patch: if ( exp CaMeL Pos > str . length ( ) ) { exp = null ;
rank: 508
score: 99.36284044053819
patch: mant = value . substring ( str . length ( ) - exp CaMeL Pos ) ;
rank: 508
score: 99.33946940104167
patch: mant = str . substring ( exp CaMeL Pos - - 1 ) ;
rank: 508
score: 99.32777163856908
patch: mant = new String ( str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 509
score: 99.36266217912946
patch: mant = mant . substring ( exp CaMeL Pos + 1 ) ;
rank: 509
score: 99.33909388950893
patch: mant = str . max ( 0 , exp CaMeL Pos ) ;
rank: 509
score: 99.33590698242188
patch: mant = str . substring ( dec CaMeL Pos + 1 ) ; } }
rank: 509
score: 99.3274658203125
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; )
rank: 509
score: 99.32728978207237
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } mant = 0 ;
rank: 510
score: 99.4065829190341
patch: mant = str . substring ( dec CaMeL Pos + 1 ) + str . length ( ) + 1 ;
rank: 510
score: 99.36241319444444
patch: if ( str . substring ( 0 , exp CaMeL Pos ) == - 1 ) {
rank: 510
score: 99.33901742788461
patch: mant = str . substring ( str . length ( ) ;
rank: 510
score: 99.33582652698864
patch: mant = str . trim ( ) . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 510
score: 99.26518903459821
patch: z = str . substring ( exp CaMeL Pos - 1 ) ;
rank: 511
score: 99.40973977481617
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } dec = str ;
rank: 511
score: 99.40673828125
patch: if ( exp CaMeL Pos == dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 511
score: 99.39691716974431
patch: mant = str . substring ( exp CaMeL Pos + 1 , str . length ( ) ) + 1 ;
rank: 511
score: 99.36107042100694
patch: mant = mant . substring ( exp CaMeL Pos - exp CaMeL Pos - 1 ) ;
rank: 511
score: 99.338623046875
patch: mant = str . substring ( 0 + 0 + exp CaMeL Pos ) ;
rank: 511
score: 99.3271125344669
patch: mant = new String CaMeL Buffer ( str . length ( ) - 1 ) ;
rank: 511
score: 99.32611846923828
patch: mant = str . starts CaMeL With ( $STRING$ ) ? $STRING$ : str ;
rank: 511
score: 99.26475423177084
patch: mant = new Double ( str . length ( ) - 1 ) ;
rank: 512
score: 99.40652465820312
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) + str . length ( ) ;
rank: 512
score: 99.40493774414062
patch: mant = str . substring ( exp CaMeL Pos + 1 ) + $STRING$ ;
rank: 512
score: 99.3969089673913
patch: throw new Number CaMeL Format CaMeL Exception ( str + str . index CaMeL Of ( $STRING$ ) - 1 ) ;
rank: 512
score: 99.36077202690973
patch: mant = str . substring ( 0 - exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 512
score: 99.337646484375
patch: mant = str . substring ( exp CaMeL Pos ) ; ;
rank: 512
score: 99.3353271484375
patch: tmp = create CaMeL Long ( str . index CaMeL Of ( $STRING$ ) ) ;
rank: 512
score: 99.32595825195312
patch: throw new Number CaMeL Format CaMeL Exception ( new String ( str ) ) ;
rank: 512
score: 99.2632568359375
patch: mant = new Big CaMeL Decimal ( str . length ( ) ) ;
rank: 513
score: 99.40593126085069
patch: mant = str . substring ( 0 , dec CaMeL Pos + 1 - 1 ) ;
rank: 513
score: 99.39662109375
patch: exp = new Number ( str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ) ;
rank: 513
score: 99.360107421875
patch: mant = str . substring ( exp CaMeL Pos / $NUMBER$ , exp CaMeL Pos ) ;
rank: 513
score: 99.33509063720703
patch: tmp = create CaMeL Integer ( str . length ( ) - 1 ) ;
rank: 513
score: 99.32633891858552
patch: str = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ; }
rank: 513
score: 99.32582194010416
patch: mant ; } mant = str . substring ( exp CaMeL Pos ) ;
rank: 513
score: 99.26238141741071
patch: mant = str . length ( ) - exp CaMeL Pos ; }
rank: 514
score: 99.40586786684783
patch: if ( exp CaMeL Pos <= dec CaMeL Pos ) { exp = str . substring ( dec CaMeL Pos ) ;
rank: 514
score: 99.40457313939145
patch: mant = str . substring ( exp CaMeL Pos + 1 , last CaMeL Char ) ; }
rank: 514
score: 99.35975406044408
patch: mant = ( String ) str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 514
score: 99.33488325639205
patch: mant = str . substring ( ! str . char CaMeL At ( dec CaMeL Pos + 1 ) ) ;
rank: 514
score: 99.3260562294408
patch: mant = ( byte ) str . substring ( str . length ( ) - 1 ) ;
rank: 514
score: 99.32559640066964
patch: mant = str . substring ( exp CaMeL Pos ) ; } ;
rank: 514
score: 99.2608642578125
patch: mant = new Integer ( exp CaMeL Pos ) ; }
rank: 515
score: 99.40428524925595
patch: if ( exp CaMeL Pos > - 1 ) { exp = str . to CaMeL String ( ) ;
rank: 515
score: 99.35964626736111
patch: mant = str . substring ( exp CaMeL Pos / str . length ( ) ) ;
rank: 515
score: 99.33608111213235
patch: mant = str . substring ( 0 + exp CaMeL Pos ) ; break ; }
rank: 515
score: 99.32520294189453
patch: mant = str . starts CaMeL With ( $STRING$ ) ? str : $STRING$ ;
rank: 515
score: 99.2603759765625
patch: mant = $STRING$ + str . substring ( exp CaMeL Pos ) ; }
rank: 516
score: 99.40552867542614
patch: mant = str . substring ( dec CaMeL Pos + $NUMBER$ , str . length ( ) - 1 ) ;
rank: 516
score: 99.40422227647569
patch: mant = str . substring ( exp CaMeL Pos + dec CaMeL Pos + 1 ) ;
rank: 516
score: 99.39609375
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + $NUMBER$ ;
rank: 516
score: 99.35886637369792
patch: mant = exp . substring ( exp CaMeL Pos - 0 , exp CaMeL Pos ) ;
rank: 516
score: 99.33597564697266
patch: mant = str . substring ( 1 + 0 , exp CaMeL Pos ) ;
rank: 516
score: 99.33453078497024
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) && last CaMeL Char == $STRING$ )
rank: 516
score: 99.32416643415179
patch: throw str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 516
score: 99.26028645833334
patch: mant = str . index CaMeL Of ( $STRING$ ) ; break ; }
rank: 517
score: 99.4041748046875
patch: mant = str . substring ( 0 , dec CaMeL Pos ) ; dec = null ;
rank: 517
score: 99.3959628018466
patch: mant += str . substring ( exp CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 517
score: 99.33592936197917
patch: mant = str . substring ( 0 + exp CaMeL Pos + ) ;
rank: 517
score: 99.3344497680664
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ , null ) ;
rank: 517
score: 99.32470703125
patch: mant = str . append ( 0 , str . length ( ) ) ;
rank: 517
score: 99.25954965444711
patch: mant = str . substring ( exp CaMeL Pos + 1 )
rank: 518
score: 99.40385606553819
patch: mant = str . substring ( exp CaMeL Pos + 1 , 0 - 1 ) ;
rank: 518
score: 99.39519708806819
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ )
rank: 518
score: 99.32470703125
patch: { mant = str . substring ( 0 , exp CaMeL Pos ) ; } }
rank: 518
score: 99.25930350167411
patch: mant = str . substring ( 0 , exp CaMeL Pos ; }
rank: 519
score: 99.40369466145833
patch: if ( exp CaMeL Pos > - 1 ) { exp = $STRING$ ;
rank: 519
score: 99.3950726052989
patch: if ( dec CaMeL Pos > dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 519
score: 99.33478860294117
patch: mant = str . substring ( str . length ( ) - 0 ) ; ;
rank: 519
score: 99.33401692708334
patch: { exp = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 519
score: 99.32437896728516
patch: mant = str . append ( str . length ( ) - 1 ) ;
rank: 519
score: 99.32288411458333
patch: mant = min . substring ( 0 , exp CaMeL Pos ) ; }
rank: 520
score: 99.40484064275569
patch: if ( exp CaMeL Pos < - 1 ) { throw new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 520
score: 99.40328216552734
patch: exp = str . substring ( 1 , exp CaMeL Pos - 1 ) ;
rank: 520
score: 99.33397216796875
patch: return create CaMeL Big CaMeL Integer ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 520
score: 99.32418823242188
patch: tmp = str . substring ( str . length ( ) - 1 ) ;
rank: 520
score: 99.25884602864583
patch: sb = str . substring ( exp CaMeL Pos - 1 ) ; }
rank: 521
score: 99.40462493896484
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ , exp CaMeL Pos ) ;
rank: 521
score: 99.40289306640625
patch: mant = str . substring ( str . length ( ) - 1 ) + 1 ;
rank: 521
score: 99.39441935221355
patch: if ( exp CaMeL Pos > exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; }
rank: 521
score: 99.33423614501953
patch: mant = str . substring ( ( 0 , exp CaMeL Pos ) ) ;
rank: 521
score: 99.33385009765625
patch: mant = str . substring ( 0 , dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 521
score: 99.32402801513672
patch: mant = str . substring ( 0 , length ( ) - 1 ) ;
rank: 521
score: 99.25862630208333
patch: final int exp CaMeL Pos = str . length ( ) - 1 ;
rank: 522
score: 99.40425441576087
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos < str . index CaMeL Of ( $STRING$ ) )
rank: 522
score: 99.40285915798611
patch: exp = str . substring ( 0 , dec CaMeL Pos ) ; dec = null ;
rank: 522
score: 99.3553466796875
patch: mant = str . substring ( 0 , mant . length ( ) - 0 ) ;
rank: 522
score: 99.33416389016544
patch: mant = str . substring ( 0 + 0 , exp CaMeL Pos ) ; ;
rank: 522
score: 99.33382161458333
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos >= str . length ( ) ) {
rank: 522
score: 99.3226318359375
patch: mant = ( ) str . substring ( 0 , exp CaMeL Pos ) ;
rank: 523
score: 99.35477023654514
patch: mant = str . substring ( exp CaMeL Pos ) + 0 + exp CaMeL Pos ;
rank: 523
score: 99.33387666590073
patch: mant = str . substring ( str . starts CaMeL With ( 1 ) ) ;
rank: 523
score: 99.3235222311581
patch: mant = mant . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 523
score: 99.32221330915179
patch: mant = str . starts CaMeL With ( exp CaMeL Pos ) ;
rank: 523
score: 99.2570068359375
patch: b = str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 524
score: 99.40352376302083
patch: if ( exp CaMeL Pos < - 1 ) { exp = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 524
score: 99.4028087797619
patch: exp CaMeL Pos = str . substring ( 0 , str . length ( ) - 1 ) ; }
rank: 524
score: 99.35466766357422
patch: mant = str . substring ( exp CaMeL Pos ) + exp CaMeL Pos ;
rank: 524
score: 99.33383178710938
patch: mant += str . substring ( 0 + 0 , exp CaMeL Pos ) ;
rank: 524
score: 99.33357961554276
patch: mant = str . substring ( dec CaMeL Pos - 1 , dec CaMeL Pos ) ; }
rank: 524
score: 99.32207489013672
patch: mant = exp CaMeL Pos ; } else { mant = exp CaMeL Pos ;
rank: 524
score: 99.25684407552083
patch: mant = $STRING$ . substring ( exp CaMeL Pos - 1 ) ; }
rank: 525
score: 99.40678267045455
patch: if ( exp CaMeL Pos < - 1 && exp CaMeL Pos < str . length ( ) - 1 )
rank: 525
score: 99.4032315340909
patch: if ( exp CaMeL Pos > - 1 ) { mant = str . substring ( dec CaMeL Pos ) ;
rank: 525
score: 99.39330078125
patch: if ( dec CaMeL Pos < dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 525
score: 99.3338153545673
patch: mant = str . substring ( 0 , - 1 ) ;
rank: 525
score: 99.2555419921875
patch: if ( exp CaMeL Pos > exp CaMeL Pos ) { break ; }
rank: 526
score: 99.4064079733456
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + last CaMeL Char ) ; }
rank: 526
score: 99.40289306640625
patch: if ( exp CaMeL Pos > - 1 ) { mant = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 526
score: 99.39326615767045
patch: exp = str . substring ( dec CaMeL Pos + 1 , str . length ( ) ) + 1 ;
rank: 526
score: 99.33328683035714
patch: mant = $STRING$ . substring ( exp CaMeL Pos - 1 ) ;
rank: 526
score: 99.33308628627232
patch: p = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 526
score: 99.25543212890625
patch: throw new Number CaMeL Format CaMeL Exception ( name ) ;
rank: 527
score: 99.40191650390625
patch: last CaMeL Char = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 527
score: 99.39314408735795
patch: if ( exp CaMeL Pos > exp CaMeL Pos ) { if ( exp CaMeL Pos < dec CaMeL Pos )
rank: 527
score: 99.333251953125
patch: mant ( str . substring ( 0 , exp CaMeL Pos - 1 ) ) ;
rank: 527
score: 99.33267647879464
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos ) ;
rank: 527
score: 99.32275390625
patch: mant = str . substring ( 0 , exp . length ( ) ) ;
rank: 527
score: 99.31974792480469
patch: mant = str ) . substring ( 0 , exp CaMeL Pos ) ; }
rank: 528
score: 99.40548545435855
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } else { exp = str ;
rank: 528
score: 99.40269403872283
patch: if ( exp CaMeL Pos > 0 ) { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 528
score: 99.35396321614583
patch: result = str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 528
score: 99.33265787760416
patch: String exp = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 528
score: 99.32274105674342
patch: mant = str . append ( str . length ( ) - exp CaMeL Pos ) ; }
rank: 528
score: 99.25504557291667
patch: mant = new Big CaMeL Integer ( str . trim ( ) ) ;
rank: 529
score: 99.40248174252717
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ; }
rank: 529
score: 99.33225384880515
patch: = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 529
score: 99.25502232142857
patch: mant = $STRING$ . substring ( exp CaMeL Pos ) ; break ;
rank: 530
score: 99.40233656939338
patch: throw new Number CaMeL Format CaMeL Exception ( str + str + $STRING$ ) ; }
rank: 530
score: 99.33282111672794
patch: mant = str . substring ( 0 , 0 , exp CaMeL Pos ) ; ;
rank: 530
score: 99.33218149038461
patch: exp = str . substring ( dec CaMeL Pos ) ; }
rank: 530
score: 99.32235717773438
patch: mant = str . iterator ( ) . index CaMeL Of ( $STRING$ ) ;
rank: 530
score: 99.31898498535156
patch: mant = str . char CaMeL At ( 0 ) . trim ( ) ;
rank: 530
score: 99.25449044363839
patch: final String str = str . substring ( exp CaMeL Pos ) ;
rank: 531
score: 99.40189855238971
patch: exp = str . substring ( dec CaMeL Pos + 1 ) ; } * /
rank: 531
score: 99.40102317116477
patch: exp = str . substring ( exp CaMeL Pos + 1 , str . length ( ) - $NUMBER$ ) ;
rank: 531
score: 99.39285411005434
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 , str . length ( ) ) ; }
rank: 531
score: 99.2544677734375
patch: mant = str . substring ( exp CaMeL Pos ) - 1 ; }
rank: 532
score: 99.4046630859375
patch: exp = new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 532
score: 99.40171305338542
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , exp CaMeL Pos + 1 ) ) ; }
rank: 532
score: 99.40076264880952
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } * /
rank: 532
score: 99.39283243815105
patch: dec = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + 1 ; }
rank: 532
score: 99.35333930121527
patch: mant = mant . substring ( exp CaMeL Pos - str . length ( ) ) ;
rank: 532
score: 99.33226821001838
patch: mant = str . substring ( str . equals ( 0 ) - 1 ) ;
rank: 532
score: 99.25298602764423
patch: mant = str . substring ( 0 , 0 ) ; }
rank: 533
score: 99.4040057842548
patch: exp = str . substring ( exp CaMeL Pos ) ; }
rank: 533
score: 99.4016446200284
patch: throw new Number CaMeL Format CaMeL Exception ( str ;
rank: 533
score: 99.40068817138672
patch: exp = str . substring ( exp CaMeL Pos + 1 , $STRING$ ) ;
rank: 533
score: 99.33220672607422
patch: mant = str . substring ( $NUMBER$ + 0 , exp CaMeL Pos ) ;
rank: 533
score: 99.33087713068181
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) || last CaMeL Char != $STRING$ ) {
rank: 533
score: 99.25296456473214
patch: field = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 534
score: 99.40034484863281
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec ) ;
rank: 534
score: 99.3924789428711
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ; } else
rank: 534
score: 99.33202406939338
patch: mant = str . substring ( 0 + exp CaMeL Pos + 1 ) ; ;
rank: 534
score: 99.33082339638158
patch: if ( exp CaMeL Pos == - 1 && exp CaMeL Pos < dec CaMeL Pos ) {
rank: 534
score: 99.32028680098684
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; mant = $NUMBER$ ; }
rank: 534
score: 99.3166748046875
patch: mant = Math . max ( exp CaMeL Pos , 0 ) ; }
rank: 534
score: 99.25269571940105
patch: mant = str . length ( ) - 1 ; }
rank: 535
score: 99.40101114908855
patch: if ( exp CaMeL Pos < - 1 ) { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 535
score: 99.39989217122395
patch: exp = str . substring ( 0 , 0 ) ;
rank: 535
score: 99.39244842529297
patch: exp = str . substring ( 0 , dec CaMeL Pos ) + 1 ;
rank: 535
score: 99.35234631990132
patch: mant = str . substring ( exp CaMeL Pos - str . length ( ) ) ; ;
rank: 535
score: 99.33200073242188
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + ) ;
rank: 535
score: 99.3201840049342
patch: return str . substring ( str . length ( ) - exp CaMeL Pos - 1 ) ;
rank: 535
score: 99.25179036458333
patch: mant = str . substring ( 0 ) . trim ( ) ; }
rank: 536
score: 99.3985366821289
patch: exp = str . char CaMeL At ( exp CaMeL Pos - 1 ) ;
rank: 536
score: 99.39214728860294
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ; } break ;
rank: 536
score: 99.33171844482422
patch: mant = str . substring ( 1 - exp CaMeL Pos - 1 ) ;
rank: 536
score: 99.33048930921052
patch: if ( exp CaMeL Pos < - 1 && exp CaMeL Pos > dec CaMeL Pos ) {
rank: 536
score: 99.3159408569336
patch: mant = str . substring ( exp CaMeL Pos + $NUMBER$ ) ; break ;
rank: 536
score: 99.25142415364583
patch: final str = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 537
score: 99.40235093060662
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } mant = str ;
rank: 537
score: 99.39188385009766
patch: exp = Number CaMeL Utils . create CaMeL Big CaMeL Integer ( str ) ;
rank: 537
score: 99.35179379111842
patch: mant = Math . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 537
score: 99.33134242466518
patch: mant = str . substring ( 0 <= exp CaMeL Pos ) ;
rank: 537
score: 99.32992393092105
patch: mant = str . substring ( dec CaMeL Pos ) ; } else { mant = str ;
rank: 537
score: 99.31568254743304
patch: mant = str . replace CaMeL All ( $STRING$ , $STRING$ ) ;
rank: 537
score: 99.25074114118304
patch: final int mant = str . index CaMeL Of ( $STRING$ ) ;
rank: 538
score: 99.39813523065476
patch: exp = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; } * /
rank: 538
score: 99.39183807373047
patch: exp = Number CaMeL Utils . create CaMeL Float ( str + $STRING$ ) ;
rank: 538
score: 99.32990056818181
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos * dec CaMeL Pos ) ;
rank: 538
score: 99.3196159811581
patch: result = str . substring ( 0 , exp CaMeL Pos ) ; break ; }
rank: 538
score: 99.24894205729167
patch: mant = new Big CaMeL Decimal ( str . trim ( ) ) ;
rank: 539
score: 99.39181518554688
patch: mant = str . char CaMeL At ( dec CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 539
score: 99.35079520089286
patch: mant = mant . substring ( exp CaMeL Pos - 1 ) ;
rank: 539
score: 99.33127728630515
patch: mant = str . substring ( 0 , exp CaMeL Pos - ) + 1 ;
rank: 539
score: 99.32977849786931
patch: exp = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos , exp CaMeL Pos ) ;
rank: 539
score: 99.31952981387867
patch: return new Integer ( str . substring ( $NUMBER$ , exp CaMeL Pos ) ) ;
rank: 540
score: 99.3992336107337
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) { exp = str . substring ( dec CaMeL Pos ) ;
rank: 540
score: 99.33103942871094
patch: mant = str . substring ( exp CaMeL Pos - 0 + 0 ) ;
rank: 540
score: 99.32919311523438
patch: throw new Number CaMeL Format CaMeL Exception ( str . char CaMeL At ( 0 ) ) ; }
rank: 540
score: 99.31949013157895
patch: result = str . substring ( exp CaMeL Pos - 1 , exp CaMeL Pos ) ; }
rank: 540
score: 99.31492614746094
patch: mant = str . trim ( ) . index CaMeL Of ( $STRING$ ) ;
rank: 540
score: 99.24843924386161
patch: mant = str . to CaMeL Lower CaMeL Case ( ) ; }
rank: 541
score: 99.39920176630434
patch: if ( exp CaMeL Pos >= dec CaMeL Pos ) { exp = str . substring ( dec CaMeL Pos ) ;
rank: 541
score: 99.33058166503906
patch: mant = str . substring ( 0 + exp CaMeL Pos , 0 ) ;
rank: 541
score: 99.32914806547619
patch: mant = str . substring ( dec CaMeL Pos + 1 ) . substring ( dec CaMeL Pos ) ;
rank: 541
score: 99.31490325927734
patch: mant = str + str . substring ( 0 , exp CaMeL Pos ) ;
rank: 541
score: 99.24829915364583
patch: mant = value . substring ( 0 , exp CaMeL Pos ) ; }
rank: 542
score: 99.39630681818181
patch: try { mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ;
rank: 542
score: 99.3912353515625
patch: if ( exp CaMeL Pos > - 1 ) { exp = null ; }
rank: 542
score: 99.33031463623047
patch: mant = str . substring ( 0 - 1 , exp CaMeL Pos ) ;
rank: 542
score: 99.31928453947368
patch: mant = str . substring ( exp CaMeL Pos , str . length ( ) ) ; }
rank: 542
score: 99.31489562988281
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + ; }
rank: 543
score: 99.39570756392045
patch: numeric = str . substring ( exp CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 543
score: 99.39090728759766
patch: dec = str . char CaMeL At ( 0 , exp CaMeL Pos ) ;
rank: 543
score: 99.32852975945724
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 ) ; } else {
rank: 543
score: 99.31927849264706
patch: mant = ( str . length ( ) - exp CaMeL Pos ) ; break ;
rank: 543
score: 99.24781212439903
patch: mant += str . substring ( exp CaMeL Pos ) ; }
rank: 544
score: 99.33003234863281
patch: mant = str . exp . substring ( 0 , exp CaMeL Pos ) ;
rank: 544
score: 99.32852333470395
patch: if ( exp CaMeL Pos < dec CaMeL Pos && exp CaMeL Pos < exp CaMeL Pos )
rank: 544
score: 99.31923540900735
patch: m = str . substring ( 0 , exp CaMeL Pos ) ; break ; }
rank: 544
score: 99.24775390625
patch: mant = value . substring ( exp CaMeL Pos + 1 ) ; }
rank: 545
score: 99.34841918945312
patch: mant = str . substring ( 0 , name . length ( ) ) ;
rank: 545
score: 99.32834986636513
patch: if ( exp CaMeL Pos < dec CaMeL Pos && exp CaMeL Pos < dec CaMeL Pos )
rank: 545
score: 99.3189761513158
patch: return new Integer ( str . substring ( str . length ( ) - 1 ) ) ;
rank: 545
score: 99.24747408353366
patch: mant = str . starts CaMeL With ( $STRING$ ) ; }
rank: 546
score: 99.39762369791667
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( dec CaMeL Pos + 1 ) + $STRING$ ) ; }
rank: 546
score: 99.3896484375
patch: return new Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) ) ;
rank: 546
score: 99.32909342447917
patch: mant = = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 546
score: 99.32827758789062
patch: if ( exp CaMeL Pos > exp CaMeL Pos ) {
rank: 546
score: 99.31168989701705
patch: throw new Number CaMeL Format CaMeL Exception ( ) ;
rank: 546
score: 99.24740397135416
patch: final int exp CaMeL Pos = exp CaMeL Pos + exp CaMeL Pos ;
rank: 547
score: 99.39756146599265
patch: exp = str . substring ( 0 , exp CaMeL Pos ) ; } * /
rank: 547
score: 99.38953746448864
patch: if ( exp CaMeL Pos >= dec CaMeL Pos ) { if ( exp CaMeL Pos < dec CaMeL Pos )
rank: 547
score: 99.34815809461806
patch: else { mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 547
score: 99.32886505126953
patch: mant = str . substring ( $STRING$ . length ( ) , 1 ) ;
rank: 547
score: 99.311376953125
patch: mant = str . substring ( 0 , exp CaMeL Pos - ; }
rank: 547
score: 99.24730506310097
patch: mant = null ; } else { mant = null ; }
rank: 548
score: 99.38946533203125
patch: mant = str . substring ( dec CaMeL Pos + 1 ) + str . index CaMeL Of ( $STRING$ ) ; }
rank: 548
score: 99.32794658954327
patch: return str . substring ( dec CaMeL Pos + 1 ) ;
rank: 548
score: 99.3275375366211
patch: mant = str . substring ( exp CaMeL Pos - 1 , $STRING$ ) ;
rank: 548
score: 99.31883480674342
patch: mant = mant . substring ( 0 , exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 548
score: 99.24703543526786
patch: z = str . substring ( exp CaMeL Pos ) ; break ;
rank: 549
score: 99.389365234375
patch: mant = str . substring ( dec CaMeL Pos + 1 ) + str . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 549
score: 99.34761555989583
patch: mant = ( str . substring ( 0 , exp CaMeL Pos ) - 0 ) ;
rank: 549
score: 99.31878983347039
patch: mant = str . substring ( str . length ( ) - 1 ) ; return mant ;
rank: 549
score: 99.30933380126953
patch: mant = str . starts CaMeL With ( 0 , exp CaMeL Pos ) ;
rank: 549
score: 99.24690755208333
patch: mant = str . trim ( ) ; break ; }
rank: 550
score: 99.39715576171875
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) mant = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 550
score: 99.39691716974431
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos <= str . length ( ) - 1 )
rank: 550
score: 99.39410400390625
patch: exp = str . substring ( dec CaMeL Pos + dec CaMeL Pos ) ;
rank: 550
score: 99.389208984375
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) - 1 ;
rank: 550
score: 99.34748670789931
patch: mant = str . substring ( name . trim ( ) . length ( ) ) ;
rank: 550
score: 99.3277652138158
patch: if ( exp CaMeL Pos < dec CaMeL Pos || exp CaMeL Pos < dec CaMeL Pos )
rank: 550
score: 99.3271484375
patch: mant = str . substring ( exp CaMeL Pos && exp CaMeL Pos > ) ;
rank: 550
score: 99.30931854248047
patch: mant ; mant = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 550
score: 99.2465069110577
patch: z = str . substring ( exp CaMeL Pos ) ; }
rank: 551
score: 99.39600372314453
patch: exp = str . substring ( dec CaMeL Pos + 1 ) + $STRING$ ;
rank: 551
score: 99.39409845525569
patch: mant = str . substring ( exp CaMeL Pos + 1 , mant . length ( ) - 1 ) ;
rank: 551
score: 99.38902936662946
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 551
score: 99.32708381204044
patch: mant = str . substring ( str . length ( ) ) ; } else {
rank: 551
score: 99.31871032714844
patch: mant = new Integer ( str . index CaMeL Of ( $STRING$ ) ) ;
rank: 551
score: 99.24634806315105
patch: result = str . substring ( exp CaMeL Pos ) ;
rank: 552
score: 99.34670538651316
patch: mant = str . substring ( str . trim ( ) , exp CaMeL Pos ) ; }
rank: 553
score: 99.3933438387784
patch: try { mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - 1 ) ;
rank: 553
score: 99.3465935202206
patch: String mant = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 553
score: 99.32594058388158
patch: tmp = create CaMeL Long ( str . substring ( dec CaMeL Pos + 1 ) ) ;
rank: 553
score: 99.31825884650735
patch: mant = ( String ) mant . substring ( 0 , exp CaMeL Pos ) ;
rank: 553
score: 99.30811360677083
patch: mant = str ) . substring ( 0 , exp CaMeL Pos ) ;
rank: 554
score: 99.3951999830163
patch: if ( exp CaMeL Pos >= exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 554
score: 99.3925552368164
patch: exp CaMeL Pos = str . substring ( 1 , exp CaMeL Pos ) ;
rank: 554
score: 99.3871433423913
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } dec = null ;
rank: 554
score: 99.32666015625
patch: mant = str . substring ( 0 , exp CaMeL Pos ? str : ) ;
rank: 554
score: 99.32566615513393
patch: dec = str . substring ( 0 + exp CaMeL Pos ) ;
rank: 554
score: 99.3074199969952
patch: mant = str . substring ( 0 , exp CaMeL Pos ;
rank: 555
score: 99.39612926136364
patch: dec = str . substring ( exp CaMeL Pos + 1 ) . index CaMeL Of ( $STRING$ ) ; }
rank: 555
score: 99.34585232204861
patch: mant = ( str . substring ( 0 , str . length ( ) ) ) ;
rank: 555
score: 99.32660271139706
patch: mant = str . substring ( exp CaMeL Pos || exp CaMeL Pos ++ ) ;
rank: 555
score: 99.32557091346153
patch: return create CaMeL Integer ( exp CaMeL Pos + 1 ) ;
rank: 555
score: 99.31800601356908
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } mant = mant ;
rank: 555
score: 99.30722045898438
patch: mant = str . ends CaMeL With ( $STRING$ ) ? str : str ;
rank: 555
score: 99.24422200520833
patch: mant = $STRING$ . substring ( exp CaMeL Pos ) ; break ; }
rank: 556
score: 99.3957186612216
patch: exp = str . substring ( exp CaMeL Pos + 1 ) . substring ( exp CaMeL Pos ) ; }
rank: 556
score: 99.32637241908482
patch: mant = str . substring ( str . equals ( ) ) ;
rank: 556
score: 99.3255031419837
patch: mant = Number CaMeL Utils . create CaMeL Float ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 556
score: 99.31768439797794
patch: mant = str . substring ( ( int ) exp CaMeL Pos - 1 ) ;
rank: 556
score: 99.24411843039773
patch: mant = str . trim ( ) ; break ;
rank: 557
score: 99.39438045726104
patch: mant = str . to CaMeL String ( ) . length ( ) - 1 ;
rank: 557
score: 99.38589079483695
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { exp = create CaMeL Big CaMeL Integer ( str ) ;
rank: 557
score: 99.32614135742188
patch: mant = str . substring ( 0 = exp CaMeL Pos - 1 ) ;
rank: 557
score: 99.31763509114583
patch: mant = str . substring ( 0 + exp CaMeL Pos ) ; }
rank: 557
score: 99.3064956665039
patch: mant = str . index CaMeL Of ( exp CaMeL Pos ) ; break ;
rank: 557
score: 99.243896484375
patch: mant = new str . substring ( exp CaMeL Pos ) ;
rank: 558
score: 99.32606506347656
patch: mant = str . substring ( str . length ( ) ) + 0 ;
rank: 558
score: 99.31763509114583
patch: m = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 558
score: 99.30636596679688
patch: mant = str . substring ( 0 , Integer . MAX _ VALUE ) ;
rank: 558
score: 99.24379185267857
patch: mant = str . last CaMeL Index CaMeL Of ( $STRING$ ) ;
rank: 559
score: 99.39488932291667
patch: throw new Number CaMeL Format CaMeL Exception ( exp CaMeL Pos ) ; }
rank: 559
score: 99.3852783203125
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) ; }
rank: 559
score: 99.32586669921875
patch: mant = str . substring ( exp CaMeL Pos - $NUMBER$ + 1 ) ;
rank: 559
score: 99.31756591796875
patch: mant = mant . trim ( 0 , exp CaMeL Pos ) ;
rank: 559
score: 99.3062744140625
patch: mant = str . char CaMeL At ( 0 ) ; break ;
rank: 559
score: 99.24300130208333
patch: String str = str . substring ( exp CaMeL Pos - 1 ) ;
rank: 560
score: 99.39417266845703
patch: exp = str . substring ( 1 , exp CaMeL Pos + 1 ) ;
rank: 560
score: 99.34514303768383
patch: mant = ( short ) str . substring ( 0 , exp CaMeL Pos ) ;
rank: 560
score: 99.32563781738281
patch: mant = str . substring ( 0 , exp CaMeL Pos ) - $STRING$ ;
rank: 560
score: 99.24272809709821
patch: b = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 561
score: 99.3941141764323
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) + str . length ( ) ;
rank: 561
score: 99.38467843191964
patch: mant += str . substring ( 0 , dec CaMeL Pos ) ;
rank: 561
score: 99.30579427083333
patch: mant = str . substring ( 0 , exp CaMeL Pos + ; }
rank: 561
score: 99.241796875
patch: } else { mant = str . substring ( exp CaMeL Pos ) ;
rank: 562
score: 99.39443137428977
patch: dec = str . substring ( dec CaMeL Pos - 1 , str . length ( ) - 1 ) ;
rank: 562
score: 99.3903579711914
patch: last CaMeL Char = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 562
score: 99.344873046875
patch: int mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 563
score: 99.39409845525569
patch: if ( str . starts CaMeL With ( $STRING$ ) && exp CaMeL Pos < str . length ( ) )
rank: 563
score: 99.3899154663086
patch: mant = str . substring ( 1 , dec CaMeL Pos + 1 ) ;
rank: 563
score: 99.3443603515625
patch: mant = Double . value CaMeL Of ( 0 , exp CaMeL Pos ) ;
rank: 563
score: 99.32387907608695
patch: tmp = create CaMeL Long ( str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ) ;
rank: 563
score: 99.3049072265625
patch: mant = str . index CaMeL Of ( $STRING$ ) ; } ) ;
rank: 563
score: 99.23890904017857
patch: mant = new str . substring ( exp CaMeL Pos ) ; }
rank: 564
score: 99.324462890625
patch: return str . substring ( 0 , exp CaMeL Pos - 0 ) ;
rank: 564
score: 99.32361370584239
patch: exp = Number CaMeL Utils . create CaMeL Float ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 564
score: 99.31483369715073
patch: mant = ( byte ) str . substring ( exp CaMeL Pos - 1 ) ;
rank: 564
score: 99.23732096354166
patch: mant = str . substring ( exp CaMeL Pos ) ; } continue ;
rank: 565
score: 99.39389935661765
patch: exp = str . substring ( str . length ( ) - 1 ) ; }
rank: 565
score: 99.38367716471355
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos - 1 , exp CaMeL Pos ) ;
rank: 565
score: 99.34254673549107
patch: value = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 565
score: 99.32423311121323
patch: mant = str . substring ( 0 + exp CaMeL Pos - ) + 1 ;
rank: 565
score: 99.323486328125
patch: b = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 565
score: 99.23722330729167
patch: mant = str . substring ( exp CaMeL Pos - 1 ) ) ;
rank: 566
score: 99.39224243164062
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ && exp CaMeL Pos < str . length ( ) ) ;
rank: 566
score: 99.38337053571429
patch: mant = Number CaMeL Utils . create CaMeL Float ( str ) ;
rank: 566
score: 99.34176815257354
patch: mant = str . substring ( 0 , str . equals ( $STRING$ ) ) ;
rank: 566
score: 99.32402487362133
patch: mant = str . substring ( str . length ( ) ) ; return str ;
rank: 566
score: 99.32309441817434
patch: if ( str . char CaMeL At ( dec CaMeL Pos + 1 ) == $STRING$ ) {
rank: 566
score: 99.31422526041666
patch: { mant = str . substring ( str . length ( ) ) ;
rank: 566
score: 99.23663736979167
patch: mant = str . substring ( exp CaMeL Pos + ; break ; }
rank: 567
score: 99.38846588134766
patch: exp = str . substring ( exp CaMeL Pos + dec CaMeL Pos ) ;
rank: 567
score: 99.38320524796195
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { mant = str . substring ( exp CaMeL Pos ) ;
rank: 567
score: 99.34136199951172
patch: mant = str . substring ( 0 , exp CaMeL Pos << 1 ) ;
rank: 567
score: 99.32386067708333
patch: mant = str . substring ( 1 , exp CaMeL Pos - ) ;
rank: 567
score: 99.32308799342105
patch: { dec = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 567
score: 99.31399972098214
patch: m = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 568
score: 99.39143589564732
patch: throw new Number CaMeL Format CaMeL Exception ( str + 1 ) ;
rank: 568
score: 99.383056640625
patch: mant = str . substring ( str . index CaMeL Of ( $STRING$ ) + 1 , exp CaMeL Pos ) ; }
rank: 568
score: 99.32308156866776
patch: else dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 568
score: 99.31369253305289
patch: mant = str . substring ( 0 , $NUMBER$ ) ; }
rank: 568
score: 99.30293491908482
patch: mant = str . index CaMeL Of ( $STRING$ ) ; } ;
rank: 568
score: 99.23514811197917
patch: mant = str . trim ( ) . trim ( ) ; break ;
rank: 569
score: 99.39181518554688
patch: try { exp = Number CaMeL Utils . create CaMeL Float ( str ) ;
rank: 569
score: 99.38782501220703
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos - 1 ) ;
rank: 569
score: 99.3235855102539
patch: mant = str . substring ( 0 , exp CaMeL Pos ) / 1 ;
rank: 569
score: 99.322998046875
patch: return create CaMeL Integer ( exp CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 569
score: 99.31353400735294
patch: mant = ( mant . length ( ) - str . length ( ) ) ;
rank: 569
score: 99.23495279947916
patch: mant = str . replace ( $STRING$ , exp CaMeL Pos ) ; }
rank: 570
score: 99.38280487060547
patch: dec = str . substring ( 0 , exp CaMeL Pos ) + 1 ;
rank: 570
score: 99.34074850643383
patch: mant = str . substring ( 0 , exp CaMeL Pos - . 1 ) ;
rank: 570
score: 99.32274228050595
patch: return create CaMeL Long ( dec CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 570
score: 99.31351725260417
patch: mant = str . to CaMeL String ( ) . length ( ) ;
rank: 570
score: 99.30107879638672
patch: mant = min . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 570
score: 99.23470633370536
patch: str = str . substring ( exp CaMeL Pos ) ; break ;
rank: 571
score: 99.39014689127605
patch: if ( str . starts CaMeL With ( $STRING$ ) ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 571
score: 99.38231404622395
patch: return new Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ )
rank: 571
score: 99.3400390625
patch: mant = str . substring ( exp CaMeL Pos + - 1 ) ;
rank: 571
score: 99.32289225260416
patch: mant = str . substring ( $NUMBER$ , exp CaMeL Pos ) ; ;
rank: 571
score: 99.31336212158203
patch: mant = str . substring ( $NUMBER$ , str . length ( ) ) ;
rank: 571
score: 99.3009765625
patch: sb . substring ( exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 571
score: 99.2341796875
patch: mant = str ; exp CaMeL Pos = exp CaMeL Pos ; break ;
rank: 572
score: 99.39003499348958
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos < str . index CaMeL Of ( $STRING$ ) ) {
rank: 572
score: 99.38765092329545
patch: if ( exp CaMeL Pos <= - 1 ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 572
score: 99.38225911458333
patch: return new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ; }
rank: 572
score: 99.30026245117188
patch: sb . substring ( exp CaMeL Pos + 0 , exp CaMeL Pos ) ;
rank: 573
score: 99.39080255681819
patch: exp = str . substring ( dec CaMeL Pos + 1 ) . index CaMeL Of ( $STRING$ ) ; }
rank: 573
score: 99.38739013671875
patch: dec = str . char CaMeL At ( exp CaMeL Pos + 1 ) ;
rank: 573
score: 99.38205973307292
patch: exp = str . substring ( exp CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 573
score: 99.33949279785156
patch: mant = value . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 573
score: 99.32283782958984
patch: mant = str . substring ( exp CaMeL Pos ? 0 : 1 ) ;
rank: 573
score: 99.31291198730469
patch: result = str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 573
score: 99.2339111328125
patch: mant = str . last CaMeL Index CaMeL Of ( $STRING$ ) ; }
rank: 574
score: 99.3872403231534
patch: exp = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos - 1 ) + 1 ;
rank: 574
score: 99.38160241168478
patch: dec = str . substring ( exp CaMeL Pos + 1 , str . length ( ) - 1 ) ; }
rank: 574
score: 99.32268524169922
patch: mant = str . substring ( 0 - exp CaMeL Pos - 0 ) ;
rank: 574
score: 99.23238699776786
patch: mant = str . substring ( exp CaMeL Pos + ; break ;
rank: 575
score: 99.38864135742188
patch: exp = str . substring ( 0 , 0 , dec CaMeL Pos ) ;
rank: 575
score: 99.3871737393466
patch: numeric = str . substring ( dec CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 575
score: 99.38153839111328
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + $STRING$ ;
rank: 575
score: 99.33846282958984
patch: mant = ( str . substring ( str . length ( ) ) ) ;
rank: 575
score: 99.29855782645089
patch: mant = Math . max ( exp CaMeL Pos , 0 ) ;
rank: 575
score: 99.23216959635417
patch: String name = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 576
score: 99.3220947265625
patch: mant = str . substring ( exp CaMeL Pos - ) + 0 ;
rank: 576
score: 99.32152258831522
patch: if ( exp CaMeL Pos < - 1 && exp CaMeL Pos < str . length ( ) - 1 ) {
rank: 576
score: 99.31214904785156
patch: mant = new Integer ( 0 , exp CaMeL Pos ) ; break ; }
rank: 576
score: 99.23172433035714
patch: mant = str . substring ( exp CaMeL Pos ; break ; }
rank: 577
score: 99.3883944424716
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . index CaMeL Of ( $STRING$ ) ; }
rank: 577
score: 99.38775634765625
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ,
rank: 577
score: 99.32203892299107
patch: mant = str . substring ( exp , exp CaMeL Pos ) ;
rank: 577
score: 99.32136674360795
patch: return create CaMeL Integer ( str . substring ( dec CaMeL Pos + 1 ) , exp CaMeL Pos ) ;
rank: 577
score: 99.31182098388672
patch: mant = in . substring ( str . length ( ) - 1 ) ;
rank: 577
score: 99.29803059895833
patch: mant = str . replace CaMeL All ( $STRING$ , $STRING$ ) ; }
rank: 577
score: 99.229248046875
patch: mant = new Number ( str . length ( ) - 1 ) ;
rank: 578
score: 99.3868049172794
patch: mant = str . substring ( dec CaMeL Pos + 1 , 1 ) ; }
rank: 578
score: 99.32188505284927
patch: mant = str . substring ( ( exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 579
score: 99.3876953125
patch: mant = str . substring ( 0 , exp CaMeL Pos ) . substring ( exp CaMeL Pos ) ; }
rank: 579
score: 99.38677423650569
patch: exp = str . substring ( dec CaMeL Pos + 1 , str . length ( ) - $NUMBER$ ) ;
rank: 579
score: 99.38093367866848
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { exp = create CaMeL Big CaMeL Integer ( str ) ;
rank: 579
score: 99.32053786057692
patch: return create CaMeL Long ( dec CaMeL Pos + 1 ) ;
rank: 579
score: 99.29747009277344
patch: throw new Number CaMeL Format CaMeL Exception ( new String ( $STRING$ ) ) ;
rank: 579
score: 99.2286865234375
patch: String exp = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 580
score: 99.38765092329545
patch: if ( dec . is CaMeL Infinite ( ) || exp CaMeL Pos < str . length ( ) ) {
rank: 580
score: 99.380859375
patch: return create CaMeL Integer ( str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ) ; }
rank: 580
score: 99.30937957763672
patch: mant = ( int ) str . substring ( exp CaMeL Pos ) ; }
rank: 580
score: 99.29703521728516
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ; } ;
rank: 580
score: 99.2284647623698
patch: mant = null ; } else { mant = null ;
rank: 581
score: 99.38502086292614
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) && exp CaMeL Pos > - 1 )
rank: 581
score: 99.32171630859375
patch: mant = str . substring ( 0 + exp CaMeL Pos + $NUMBER$ ) ;
rank: 581
score: 99.29682922363281
patch: mant = str . replace ( 0 , exp CaMeL Pos ) ; break ;
rank: 581
score: 99.2283935546875
patch: sb = str . substring ( exp CaMeL Pos - 1 ) ;
rank: 582
score: 99.38697052001953
patch: exp = str . substring ( exp CaMeL Pos + 1 ) ; } }
rank: 582
score: 99.3804347826087
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) + 1 ; }
rank: 582
score: 99.33486502511161
patch: mant = this . str . substring ( exp CaMeL Pos ) ;
rank: 582
score: 99.32169342041016
patch: mant += str . substring ( 1 , exp CaMeL Pos - 1 ) ;
rank: 582
score: 99.31927811472039
patch: if ( exp CaMeL Pos < dec CaMeL Pos || exp CaMeL Pos < exp CaMeL Pos )
rank: 582
score: 99.29681865985577
patch: mant = str . char CaMeL At ( 0 ) ; }
rank: 582
score: 99.2281963641827
patch: final int exp CaMeL Pos = str . length ( ) ;
rank: 583
score: 99.38304554332386
patch: exp = str . substring ( dec CaMeL Pos + 1 , mant . length ( ) - 1 ) ;
rank: 583
score: 99.38038170855978
patch: mant = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ; } else
rank: 583
score: 99.33445739746094
patch: mant = exp . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 583
score: 99.30743408203125
patch: mant = Integer . parse CaMeL Int ( str . length ( ) ) ;
rank: 583
score: 99.22813197544643
patch: director = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 584
score: 99.38677423650569
patch: mant = str . substring ( exp CaMeL Pos + 1 ) . substring ( exp CaMeL Pos ) ; }
rank: 584
score: 99.38267517089844
patch: mant = str . substring ( dec CaMeL Pos + 1 ) - 1 ;
rank: 584
score: 99.33417069284539
patch: mant = ( byte ) str . substring ( 0 , exp CaMeL Pos - 0 ) ;
rank: 584
score: 99.32151884191177
patch: mant = str . substring ( exp CaMeL Pos - ) + exp CaMeL Pos ;
rank: 584
score: 99.31883329503677
patch: mant = str . substring ( dec CaMeL Pos + 1 ) [ 0 ] ;
rank: 584
score: 99.22723858173077
patch: mant = new Double ( str . length ( ) ) ;
rank: 585
score: 99.38242409446023
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos - 1 ) + 1 ;
rank: 585
score: 99.33411407470703
patch: mant = mant . substring ( 0 , 0 , exp CaMeL Pos ) ;
rank: 585
score: 99.3072265625
patch: mant = str . substring ( 0 , = exp CaMeL Pos ) ;
rank: 585
score: 99.29613318810097
patch: mant = str . length ( ) - exp CaMeL Pos ;
rank: 585
score: 99.22696126302084
patch: return new Integer ( str . length ( ) - 1 ) ; }
rank: 586
score: 99.38549041748047
patch: return create CaMeL Long ( str . substring ( exp CaMeL Pos ) ) ;
rank: 586
score: 99.33371869255515
patch: mant = new String ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 586
score: 99.3212890625
patch: mant = str . substring ( 0 , -- exp CaMeL Pos ) ;
rank: 586
score: 99.31842041015625
patch: ch = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 586
score: 99.30712018694196
patch: mant = str . substring ( 0 , [ 1 ] ) ;
rank: 586
score: 99.226806640625
patch: mant = str . substring ( exp CaMeL Pos ) ; return mant ;
rank: 587
score: 99.38175964355469
patch: exp = str . substring ( exp CaMeL Pos + 1 ) + $STRING$ ;
rank: 587
score: 99.37943699048913
patch: mant = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ; } }
rank: 587
score: 99.32124328613281
patch: mant = str . substring ( 0 , exp CaMeL Pos . 1 ) ;
rank: 587
score: 99.31826346261161
patch: buf = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 587
score: 99.30709838867188
patch: mant = str . substring ( exp CaMeL Pos ) . length ( ) ;
rank: 587
score: 99.29415690104166
patch: mant ; mant = str . substring ( exp CaMeL Pos ) ; }
rank: 587
score: 99.2266845703125
patch: mant = name . substring ( exp CaMeL Pos ) ;
rank: 588
score: 99.38173606178977
patch: exp = str . substring ( dec CaMeL Pos + 1 ) + str . length ( ) + 1 ;
rank: 588
score: 99.37919284986413
patch: dec = str . starts CaMeL With ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + $STRING$ ;
rank: 588
score: 99.37765502929688
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ,
rank: 588
score: 99.3330078125
patch: mant = mant . substring ( 0 , mant . length ( ) ) ;
rank: 588
score: 99.32117417279412
patch: mant else { exp = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 588
score: 99.3177734375
patch: dec = str . substring ( dec CaMeL Pos + 1 ) + str . length ( ) ;
rank: 588
score: 99.30633544921875
patch: try { mant = str . substring ( str . length ( ) ) ;
rank: 588
score: 99.29384068080357
patch: mant = str . index CaMeL Of ( $STRING$ ) - 1 ;
rank: 588
score: 99.2260272686298
patch: mant = $STRING$ ; } else { mant = $STRING$ ; }
rank: 589
score: 99.384765625
patch: exp = str . substring ( 0 , exp CaMeL Pos ) . substring ( exp CaMeL Pos ) ; }
rank: 589
score: 99.3327865600586
patch: mant = str . substring ( 0 , exp CaMeL Pos * 0 ) ;
rank: 589
score: 99.3171053799716
patch: if ( exp CaMeL Pos < - 1 ) {
rank: 589
score: 99.29364013671875
patch: mant ; mant = str . substring ( exp CaMeL Pos ) ;
rank: 589
score: 99.22576497395833
patch: mant = str . substring ( exp , exp CaMeL Pos ) ; }
rank: 590
score: 99.38446403952206
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + dec CaMeL Pos ) ; }
rank: 590
score: 99.38142395019531
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { mant = null ;
rank: 590
score: 99.37720743815105
patch: if ( exp CaMeL Pos < - 1 ) { mant = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 590
score: 99.33256979549633
patch: return str . substring ( str . trim ( ) . length ( ) ) ;
rank: 590
score: 99.3050765991211
patch: mant = str . substring ( 0 , exp CaMeL Pos - length ) ;
rank: 590
score: 99.22386823381696
patch: search = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 591
score: 99.37814198369566
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { exp CaMeL Pos = exp CaMeL Pos + 1 ; }
rank: 591
score: 99.33237130301339
patch: mant = ( str . substring ( exp CaMeL Pos ) ) ;
rank: 591
score: 99.32059151785714
patch: mant = str . min ( 0 , exp CaMeL Pos ) ;
rank: 592
score: 99.38430606617646
patch: throw new Number CaMeL Format CaMeL Exception ( exp CaMeL Pos + 1 ) ; }
rank: 592
score: 99.3771240234375
patch: throw new Number CaMeL Format CaMeL Exception ( str + + $STRING$ ) ;
rank: 592
score: 99.3204345703125
patch: mant = str . split ( 0 , exp CaMeL Pos ) ;
rank: 592
score: 99.30265808105469
patch: m = str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 592
score: 99.28703090122768
patch: ret = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 592
score: 99.22166224888393
patch: this . str = str . substring ( exp CaMeL Pos ) ;
rank: 593
score: 99.37734985351562
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 593
score: 99.37668863932292
patch: if ( exp CaMeL Pos < str . length ( ) ) { throw new Number CaMeL Format CaMeL Exception ( str ;
rank: 593
score: 99.3309555053711
patch: final String mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 593
score: 99.3201904296875
patch: mant = str . append ( 0 , exp CaMeL Pos - 1 ) ;
rank: 593
score: 99.31658325195312
patch: dec = str . substring ( dec CaMeL Pos + 1 + 1 , exp CaMeL Pos ) ;
rank: 593
score: 99.30196940104166
patch: mant = mant . substring ( str . length ( ) - ) ;
rank: 593
score: 99.28670247395833
patch: mant = str . substring ( exp CaMeL Pos + ) ; } }
rank: 593
score: 99.22160121372768
patch: doc = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 594
score: 99.38297765395221
patch: return str . substring ( 0 , str . length ( ) - 1 ) ;
rank: 594
score: 99.37652587890625
patch: throw new Number CaMeL Format CaMeL Exception ( str . substring ( 0 , dec CaMeL Pos + 1 ) ) ; }
rank: 594
score: 99.33059256417411
patch: string = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 594
score: 99.3200912475586
patch: mant = str . substring ( 0 + exp CaMeL Pos ) + 1 ;
rank: 594
score: 99.31654866536458
patch: if ( exp CaMeL Pos <= dec CaMeL Pos ) {
rank: 594
score: 99.30130004882812
patch: mant = ( mant . length ( ) - exp CaMeL Pos ) ; }
rank: 594
score: 99.22156633649554
patch: mant = new Integer ( exp CaMeL Pos + 1 ) ; }
rank: 595
score: 99.37910600142045
patch: mant = str . substring ( exp CaMeL Pos + 1 ) + str . length ( ) + 1 ;
rank: 595
score: 99.30120086669922
patch: mant = str . substring ( str . length ( ) , $NUMBER$ ) ;
rank: 595
score: 99.284912109375
patch: mant = str . index CaMeL Of ( $STRING$ ) + $STRING$ ;
rank: 596
score: 99.3785400390625
patch: if ( exp CaMeL Pos > 0 ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; }
rank: 596
score: 99.37523651123047
patch: exp = new Long ( str . index CaMeL Of ( $STRING$ ) ) ;
rank: 596
score: 99.31951141357422
patch: mant = str . substring ( exp CaMeL Pos - 1 ) + 0 ;
rank: 596
score: 99.3009541829427
patch: return new Integer ( str . length ( ) ) ;
rank: 596
score: 99.28257533482143
patch: sb . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 596
score: 99.22119140625
patch: break str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 597
score: 99.37478637695312
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str . substring ( 0 , exp CaMeL Pos ) ) ; }
rank: 597
score: 99.32975499770221
patch: mant = str . substring ( str . value CaMeL Of ( $STRING$ ) ) ;
rank: 597
score: 99.3148193359375
patch: mant = str . substring ( 0 , dec CaMeL Pos . length ( ) - 1 ) ;
rank: 597
score: 99.2998275756836
patch: mant = mant . trim ( str . length ( ) - 1 ) ;
rank: 597
score: 99.28221842447917
patch: mant = str . index CaMeL Of ( $STRING$ ) ; } else {
rank: 597
score: 99.22044959435097
patch: mant = new Big CaMeL Decimal ( exp CaMeL Pos ) ;
rank: 598
score: 99.3781967163086
patch: mant = str . char CaMeL At ( dec CaMeL Pos - 1 ) ;
rank: 598
score: 99.3746337890625
patch: mant = str . substring ( 1 , dec CaMeL Pos ) ; }
rank: 598
score: 99.37312316894531
patch: exp = str . substring ( 1 , dec CaMeL Pos + 1 ) ;
rank: 598
score: 99.32965087890625
patch: mant = str . substring ( 0 , exp CaMeL Pos + $STRING$ ) ;
rank: 598
score: 99.31919860839844
patch: mant = str . substring ( 0 : exp CaMeL Pos - 1 ) ;
rank: 598
score: 99.29946664663461
patch: return str . substring ( str . length ( ) ) ;
rank: 598
score: 99.28219168526786
patch: start = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 599
score: 99.38109241832386
patch: str = str . substring ( exp CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 599
score: 99.37807791573661
patch: exp = str . substring ( 1 , dec CaMeL Pos ) ;
rank: 599
score: 99.3723653157552
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) exp = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 599
score: 99.32931698069854
patch: assert str . substring ( 0 , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 599
score: 99.31889073988971
patch: mant = str . substring ( 0 + 0 , exp CaMeL Pos ) ; }
rank: 599
score: 99.31453080610795
patch: mant = str . substring ( 0 , dec CaMeL Pos , str . length ( ) - 1 ) ;
rank: 599
score: 99.21786934988839
patch: mant = str . substring ( exp CaMeL Pos ) 1 ; }
rank: 600
score: 99.38092595880681
patch: dec = str . substring ( exp CaMeL Pos + 1 , str . length ( ) + 1 ) ;
rank: 600
score: 99.37804412841797
patch: exp CaMeL Pos = str . char CaMeL At ( dec CaMeL Pos ) ;
rank: 600
score: 99.373505859375
patch: exp CaMeL Pos += str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + $STRING$ ;
rank: 600
score: 99.32931518554688
patch: mant = str . substring ( 0 , exp CaMeL Pos | 1 ) ;
rank: 600
score: 99.21781703404018
patch: hierarchy = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 601
score: 99.38057084517045
patch: mant = str . substring ( last CaMeL Char + 1 , str . length ( ) - 1 ) ;
rank: 601
score: 99.3732401529948
patch: exp = str . substring ( dec CaMeL Pos + 1 ) + str . index CaMeL Of ( $STRING$ ) ; }
rank: 601
score: 99.37160237630208
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) dec = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 601
score: 99.3282111672794
patch: mant = new String ( str , exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 601
score: 99.3182144165039
patch: mant += str . substring ( 0 + exp CaMeL Pos + 1 ) ;
rank: 601
score: 99.31369500411184
patch: dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ] ) ;
rank: 601
score: 99.29571533203125
patch: b = str . substring ( str . length ( ) - 1 ) ;
rank: 601
score: 99.28016880580357
patch: mant = str . replace ( $STRING$ , exp CaMeL Pos ) ;
rank: 601
score: 99.21732875279018
patch: mant = str . substring ( exp CaMeL Pos ) ; break )
rank: 602
score: 99.3804931640625
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str ) ; }
rank: 602
score: 99.31809895833334
patch: mant = str . substring ( 1 , exp CaMeL Pos 1 ) ;
rank: 602
score: 99.31352153577302
patch: mant = str . char CaMeL At ( dec CaMeL Pos + 1 ) ; } else {
rank: 602
score: 99.29412434895833
patch: mant = new Integer ( str . length ( ) - 0 ) ;
rank: 602
score: 99.21696254185268
patch: mant = $STRING$ + str . substring ( exp CaMeL Pos ) ;
rank: 603
score: 99.38035365513393
patch: exp = str . char CaMeL At ( exp CaMeL Pos ) ;
rank: 603
score: 99.37750244140625
patch: exp = str . substring ( dec CaMeL Pos + 1 , $STRING$ ) ;
rank: 603
score: 99.37203979492188
patch: exp = new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ; }
rank: 603
score: 99.3707987467448
patch: if ( exp CaMeL Pos <= dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ) ; }
rank: 603
score: 99.31765747070312
patch: mant = this . str . substring ( exp CaMeL Pos - 1 ) ;
rank: 603
score: 99.31349283854166
patch: mant = str . substring ( ! exp CaMeL Pos + 1 ) ;
rank: 603
score: 99.2786865234375
patch: query = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 604
score: 99.38027121803977
patch: exp CaMeL Pos = str . substring ( 0 , str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 604
score: 99.37730823863636
patch: exp = str . substring ( exp CaMeL Pos + 1 , mant . length ( ) - 1 ) ;
rank: 604
score: 99.31333229758523
patch: mant = str . substring ( ! Character . is CaMeL Digit ( dec CaMeL Pos + 1 ) ) ;
rank: 604
score: 99.29348520132211
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 604
score: 99.27806678185097
patch: mant = str . substring ( 0 , exp CaMeL Pos )
rank: 604
score: 99.21666541466347
patch: mant = str . substring ( exp CaMeL Pos ; break ;
rank: 605
score: 99.37729779411765
patch: exp = str . substring ( exp CaMeL Pos + 1 , 0 ) ; }
rank: 605
score: 99.36978149414062
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str ) ; }
rank: 605
score: 99.31753540039062
patch: mant = str . substring ( exp CaMeL Pos - 1 ) + 1 ;
rank: 605
score: 99.2780517578125
patch: mant = str . char CaMeL At ( exp CaMeL Pos ) ; ;
rank: 605
score: 99.21619524274554
patch: sb = str . substring ( exp CaMeL Pos ) ; break ;
rank: 606
score: 99.37782287597656
patch: dec = str . substring ( 0 , str . length ( ) ) ;
rank: 606
score: 99.31746419270833
patch: mant = str . substring ( exp CaMeL Pos ? 1 : ) ;
rank: 606
score: 99.29158528645833
patch: mant = str . substring ( 0 , $NUMBER$ ) ; break ; }
rank: 606
score: 99.27788434709821
patch: mant = str . substring ( max , exp CaMeL Pos ) ;
rank: 606
score: 99.21514020647321
patch: c = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 607
score: 99.37782287597656
patch: return create CaMeL Long ( str ) ; } else { exp = null ;
rank: 607
score: 99.37718200683594
patch: last CaMeL Char = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 607
score: 99.37111409505208
patch: dec = str . substring ( exp CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ) ; }
rank: 607
score: 99.3694709329044
patch: return new Number ( str . substring ( dec CaMeL Pos + 1 ) ) ;
rank: 607
score: 99.31739908854166
patch: mant = str . substring ( exp CaMeL Pos ] - 1 ) ;
rank: 607
score: 99.21458082932692
patch: mant = mant . substring ( exp CaMeL Pos ) ; }
rank: 608
score: 99.3694559733073
patch: throw new Number CaMeL Format CaMeL Exception ( str . length ( ) - 1 , str . length ( ) ) ;
rank: 608
score: 99.3269401999081
patch: mant = str . substring ( str . append ( exp CaMeL Pos ) ) ;
rank: 608
score: 99.31737518310547
patch: mant = str . substring ( $STRING$ . length ( ) - $NUMBER$ ) ;
rank: 608
score: 99.29122488839286
patch: str = str . substring ( str . length ( ) ) ;
rank: 608
score: 99.27740071614583
patch: mant = Double . parse CaMeL Double ( exp CaMeL Pos ) ; }
rank: 608
score: 99.212646484375
patch: state = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 609
score: 99.37068684895833
patch: return new Big CaMeL Integer ( str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ) ; }
rank: 609
score: 99.36915079752605
patch: if ( exp CaMeL Pos < - 1 ) { exp = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 609
score: 99.3172966452206
patch: mant = str . substring ( 0 , exp CaMeL Pos ) / - 1 ;
rank: 609
score: 99.27730887276786
patch: mant = Integer . substring ( 0 , exp CaMeL Pos ) ;
rank: 609
score: 99.21137346540179
patch: sheet = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 610
score: 99.3764892578125
patch: exp = str . substring ( exp CaMeL Pos - 1 ) ; }
rank: 610
score: 99.36619567871094
patch: exp = str . substring ( str . length ( ) + 1 ) ;
rank: 610
score: 99.32576751708984
patch: mant = Math . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 610
score: 99.2906723022461
patch: mant = ( str . length ( ) - exp CaMeL Pos ) ; }
rank: 610
score: 99.27643694196429
patch: mant = $STRING$ . index CaMeL Of ( exp CaMeL Pos ) ;
rank: 610
score: 99.21088518415179
patch: atom = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 611
score: 99.3759765625
patch: exp = str . substring ( 1 , dec CaMeL Pos - 1 ) ;
rank: 611
score: 99.37035115559895
patch: exp = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + 1 ; }
rank: 611
score: 99.32572937011719
patch: mant = str . value . substring ( 0 , exp CaMeL Pos ) ;
rank: 611
score: 99.31688690185547
patch: mant = mant . substring ( 0 + exp CaMeL Pos - 1 ) ;
rank: 611
score: 99.31199340820312
patch: mant = str . substring ( ! str . index CaMeL Of ( $STRING$ ) + 1 ) ;
rank: 611
score: 99.29007161458334
patch: mant = str . substring ( str . length ( ) ; break ;
rank: 611
score: 99.21085902622768
patch: return new str . substring ( 0 , exp CaMeL Pos ) ;
rank: 612
score: 99.37593078613281
patch: exp = str . substring ( dec CaMeL Pos + 1 ) ; } }
rank: 612
score: 99.32566923253677
patch: mant = str . substring ( str . equals ( exp CaMeL Pos ) ) ;
rank: 612
score: 99.31640625
patch: mant = str . substring ( exp CaMeL Pos 1 , 0 ) ;
rank: 612
score: 99.27542317708334
patch: mant = str . char CaMeL At ( exp CaMeL Pos + ) ;
rank: 612
score: 99.21067592075893
patch: z = str . char CaMeL At ( exp CaMeL Pos ) ;
rank: 613
score: 99.36505126953125
patch: if ( exp CaMeL Pos == - 1 ) { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 613
score: 99.31620788574219
patch: mant += str . substring ( 0 , exp CaMeL Pos - $NUMBER$ ) ;
rank: 613
score: 99.31154087611607
patch: dec = str . substring ( dec CaMeL Pos + $NUMBER$ ) ;
rank: 613
score: 99.27408854166667
patch: mant = str . substring ( exp CaMeL Pos ) ; } * /
rank: 613
score: 99.2102938565341
patch: final int exp CaMeL Pos = exp CaMeL Pos ;
rank: 614
score: 99.37477022058823
patch: exp = str . substring ( dec CaMeL Pos + 1 , 0 ) ; }
rank: 614
score: 99.36485290527344
patch: mant = str . substring ( 0 , dec CaMeL Pos + $NUMBER$ ) ;
rank: 614
score: 99.31614583333334
patch: mant = str . substring ( 0 , - exp CaMeL Pos ) ;
rank: 614
score: 99.31136067708333
patch: mant = str . substring ( dec CaMeL Pos ) ; break ; }
rank: 614
score: 99.28945922851562
patch: mant = ( String ) str . substring ( exp CaMeL Pos ) ; }
rank: 614
score: 99.2740234375
patch: mant = str 1 . substring ( 0 , exp CaMeL Pos ) ;
rank: 615
score: 99.37448299632354
patch: mant = str . substring ( exp CaMeL Pos + 1 , 1 ) ; }
rank: 615
score: 99.3692626953125
patch: mant += str . substring ( 0 , dec CaMeL Pos ) ; }
rank: 615
score: 99.3247802734375
patch: mant = str . substring ( exp CaMeL Pos ? exp CaMeL Pos ]
rank: 615
score: 99.31610107421875
patch: mant = str . substring ( exp CaMeL Pos - 0 , $STRING$ ) ;
rank: 615
score: 99.31122789884868
patch: tmp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 615
score: 99.2884033203125
patch: mant = str . substring ( ( int ) exp CaMeL Pos ) ;
rank: 615
score: 99.27372523716518
patch: mant = Double . parse CaMeL Double ( exp CaMeL Pos ) ;
rank: 615
score: 99.20970662434895
patch: field = str . substring ( exp CaMeL Pos ) ;
rank: 616
score: 99.363525390625
patch: if ( exp CaMeL Pos == - 1 ) { exp = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 616
score: 99.32466125488281
patch: mant = $STRING$ . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 616
score: 99.31598772321429
patch: mant += str . substring ( $NUMBER$ , exp CaMeL Pos ) ;
rank: 616
score: 99.27341134207589
patch: mant = str . trim ( 0 , exp CaMeL Pos ) ;
rank: 616
score: 99.20872279575893
patch: mant = new Big CaMeL Integer ( exp CaMeL Pos ) ; }
rank: 617
score: 99.373046875
patch: if ( exp CaMeL Pos == - 1 ) { exp = null ;
rank: 617
score: 99.36183166503906
patch: exp = str . substring ( exp CaMeL Pos + 1 + 1 ) ;
rank: 617
score: 99.31107370476974
patch: String exp = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 617
score: 99.27323404947917
patch: sb . substring ( 0 , exp CaMeL Pos ) ; break ; }
rank: 618
score: 99.373876953125
patch: dec = new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 618
score: 99.36842854817708
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , str . length ( ) ) + 1 ;
rank: 618
score: 99.32395306755515
patch: mant = new byte = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 618
score: 99.31562042236328
patch: mant = str . substring ( exp CaMeL Pos ? 1 : $NUMBER$ ) ;
rank: 618
score: 99.31058995863971
patch: dec = str . char CaMeL At ( dec CaMeL Pos + 1 ) ; }
rank: 618
score: 99.28812408447266
patch: { exp = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 618
score: 99.27293294270834
patch: mant = str . index CaMeL Of ( $STRING$ ) + $STRING$ ; }
rank: 618
score: 99.20824256310097
patch: mant = str ; exp CaMeL Pos = exp CaMeL Pos ;
rank: 619
score: 99.37079620361328
patch: return create CaMeL Long ( str ) ; } else { mant = null ;
rank: 619
score: 99.36836751302083
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } throw new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 619
score: 99.32366584329044
patch: if ( str . substring ( 0 , exp CaMeL Pos ) == 0 ) {
rank: 619
score: 99.31538660386029
patch: mant += str . substring ( 0 , exp CaMeL Pos - 1 ) ; ;
rank: 619
score: 99.3104248046875
patch: ! Character . is CaMeL Digit ( last CaMeL Char ) && last CaMeL Char != $STRING$ )
rank: 619
score: 99.27228190104167
patch: mant ; } mant = str . index CaMeL Of ( $STRING$ ) ;
rank: 619
score: 99.20759800502232
patch: clazz = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 620
score: 99.31485748291016
patch: str = str . substring ( 0 , exp CaMeL Pos , 1 ) ;
rank: 620
score: 99.31020682198661
patch: mant = $STRING$ . substring ( dec CaMeL Pos + 1 ) ;
rank: 620
score: 99.28736114501953
patch: mant = str . max ( str . length ( ) - 1 ) ;
rank: 620
score: 99.26993001302084
patch: mant = str . substring ( exp CaMeL Pos + ; } else {
rank: 620
score: 99.20737130301339
patch: hierarchy = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 621
score: 99.3711669921875
patch: if ( exp CaMeL Pos > - 1 ) { mant = $STRING$ ;
rank: 621
score: 99.36739349365234
patch: dec = str . substring ( 0 , dec CaMeL Pos ) + 1 ;
rank: 621
score: 99.32211483226104
patch: mant = str . substring ( exp CaMeL Pos String . length ( ) ) ;
rank: 621
score: 99.31471252441406
patch: mant = substring ( exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 621
score: 99.28707885742188
patch: mant = str . append ( 0 , exp CaMeL Pos + 1 ) ;
rank: 621
score: 99.26983235677083
patch: mant = str . trim ( 0 , exp CaMeL Pos ) ; }
rank: 622
score: 99.36970738002232
patch: numeric = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 622
score: 99.365048828125
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + 0 ;
rank: 622
score: 99.3145751953125
patch: mant = str . substring ( 1 + exp CaMeL Pos + 1 ) ;
rank: 622
score: 99.26976725260417
patch: mant = str . substring ( exp CaMeL Pos ) + 0 ; }
rank: 623
score: 99.36484596946023
patch: return create CaMeL Big CaMeL Integer ( str ) ;
rank: 623
score: 99.35494232177734
patch: exp = str . substring ( 0 , exp CaMeL Pos + $NUMBER$ ) ;
rank: 623
score: 99.31451416015625
patch: mant = $STRING$ . substring ( 0 + exp CaMeL Pos - 1 ) ;
rank: 623
score: 99.30915270353618
patch: mant = str . substring ( 1 ) . substring ( dec CaMeL Pos + 1 ) ;
rank: 623
score: 99.28642578125
patch: return new Character ( str . substring ( exp CaMeL Pos ) ) ;
rank: 623
score: 99.26956380208334
patch: mant = str . starts CaMeL With ( exp CaMeL Pos ) ; }
rank: 623
score: 99.20596749441964
patch: state = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 624
score: 99.3692626953125
patch: throw new Number CaMeL Format CaMeL Exception ( exp CaMeL Pos - 1 ) ;
rank: 624
score: 99.3684441061581
patch: if ( exp CaMeL Pos > 0 ) { exp CaMeL Pos = - 1 ;
rank: 624
score: 99.36461292613636
patch: exp CaMeL Pos = exp CaMeL Pos + 1 ;
rank: 624
score: 99.35488891601562
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + 1 ) ;
rank: 624
score: 99.31396484375
patch: mant = str . substring ( 0 , exp CaMeL Pos ) / 0 ;
rank: 624
score: 99.30884399414063
patch: mant = str . substring ( dec CaMeL Pos + 1 , 0 , exp CaMeL Pos ) ;
rank: 624
score: 99.20566231863839
patch: label = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 625
score: 99.3671630859375
patch: if ( exp CaMeL Pos < - 1 ) { exp = null ;
rank: 625
score: 99.354736328125
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ , str ) ;
rank: 625
score: 99.31309407552084
patch: mant = str . substring ( exp CaMeL Pos 1 - 1 ) ;
rank: 625
score: 99.3084716796875
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos * 1 ) ;
rank: 625
score: 99.28606414794922
patch: mant = str . substring ( str . length ( ) - ) ; }
rank: 625
score: 99.20427594866071
patch: img = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 626
score: 99.36614990234375
patch: exp = str . substring ( exp CaMeL Pos + 1 ) ; } else
rank: 626
score: 99.35350036621094
patch: exp = exp CaMeL Pos . substring ( dec CaMeL Pos + 1 ) ;
rank: 626
score: 99.3205795288086
patch: mant = str . substring ( 0 , exp CaMeL Pos - exp ) ;
rank: 626
score: 99.20394461495536
patch: clazz = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 627
score: 99.36608123779297
patch: dec = str . substring ( exp CaMeL Pos + 1 ) + 1 ;
rank: 627
score: 99.31292724609375
patch: mant else ; = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 627
score: 99.28557477678571
patch: mant = in . substring ( 0 , exp CaMeL Pos ) ;
rank: 627
score: 99.2677734375
patch: mant = str . index CaMeL Of ( $STRING$ ) - 1 ; }
rank: 628
score: 99.3631640625
patch: exp CaMeL Pos = str . substring ( exp CaMeL Pos + 1 , str . length ( ) - 1 ) ; }
rank: 628
score: 99.3201904296875
patch: mant . append ( str . substring ( exp CaMeL Pos ) ) ;
rank: 628
score: 99.31291961669922
patch: mant = str . substring ( str . char CaMeL Value ( ) ) ;
rank: 628
score: 99.30715110085227
patch: mant = str . substring ( exp CaMeL Pos + 1 , exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 628
score: 99.28465169270834
patch: mant = new Integer ( str . length ( ) - $NUMBER$ ) ;
rank: 628
score: 99.26758626302083
patch: mant = str . split ( 0 , exp CaMeL Pos ) ; }
rank: 629
score: 99.363056640625
patch: if ( dec CaMeL Pos > dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 629
score: 99.31979370117188
patch: mant = str . substring ( 0 , str . exp CaMeL Pos ) ;
rank: 629
score: 99.30713762555804
patch: s = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 629
score: 99.26723069411058
patch: mant = str . to CaMeL Lower CaMeL Case ( ) ;
rank: 629
score: 99.20306396484375
patch: mant = str = str . substring ( exp CaMeL Pos ) ;
rank: 630
score: 99.31959533691406
patch: mant = ( str . substring ( mant . length ( ) ) ) ;
rank: 630
score: 99.3127212524414
patch: mant = str . substring ( exp CaMeL Pos + 0 , mant ) ;
rank: 630
score: 99.28426361083984
patch: mant = str . substring ( 0 , Character . length ( ) ) ;
rank: 630
score: 99.26670735677084
patch: throw str . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 630
score: 99.20281110491071
patch: return new Integer ( str . length ( ) + 1 ) ;
rank: 631
score: 99.3629150390625
patch: mant = str . substring ( - 1 , dec CaMeL Pos ) ;
rank: 631
score: 99.31896100725446
patch: mant = str . substring ( exp CaMeL Pos / $NUMBER$ ) ;
rank: 631
score: 99.3125
patch: long exp CaMeL Pos = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 631
score: 99.30672200520833
patch: { dec = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 631
score: 99.20199148995536
patch: null = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 632
score: 99.36270904541016
patch: exp = str . char CaMeL At ( 0 , dec CaMeL Pos ) ;
rank: 632
score: 99.31207275390625
patch: mant = str . substring ( 0 , start ) ;
rank: 632
score: 99.30664672851563
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos >= str . length ( ) )
rank: 632
score: 99.28382110595703
patch: result = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 632
score: 99.2662353515625
patch: mant = System . current CaMeL Time CaMeL Millis ( ) ; }
rank: 632
score: 99.20169503348214
patch: ch = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 633
score: 99.36245727539062
patch: return new Number ( str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ) ;
rank: 633
score: 99.36221078725961
patch: return create CaMeL Long ( str , exp CaMeL Pos ) ;
rank: 633
score: 99.36199188232422
patch: mant = str . substring ( exp CaMeL Pos + 1 , dec ) ;
rank: 633
score: 99.3482894897461
patch: exp = str . substring ( 0 , dec CaMeL Pos + $NUMBER$ ) ;
rank: 633
score: 99.31759643554688
patch: mant = Math . parse CaMeL Int ( str , exp CaMeL Pos ) ;
rank: 633
score: 99.3118408203125
patch: mant += str . substring ( 0 , exp CaMeL Pos ) ; ;
rank: 633
score: 99.30615844726563
patch: mant = str . substring ( dec CaMeL Pos + 1 , mant . length ( ) ) ;
rank: 633
score: 99.28366088867188
patch: str = str . substring ( str . length ( ) - $NUMBER$ ) ;
rank: 633
score: 99.2657470703125
patch: float exp = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 633
score: 99.20042201450893
patch: mant = Character . parse CaMeL Int ( exp CaMeL Pos ) ;
rank: 634
score: 99.362236328125
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + str . index CaMeL Of ( $STRING$ ) + 1 ) ;
rank: 634
score: 99.3055419921875
patch: dec = str . substring ( 0 , exp CaMeL Pos + 1 , exp CaMeL Pos ) ;
rank: 634
score: 99.2834716796875
patch: mant = start . substring ( 0 , exp CaMeL Pos ) ; }
rank: 634
score: 99.26559244791666
patch: mant = str . substring ( max , exp CaMeL Pos ) ; }
rank: 634
score: 99.20022147042411
patch: inst = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 635
score: 99.36134033203125
patch: return create CaMeL Long ( str ) ; }
rank: 635
score: 99.36038970947266
patch: exp = str . substring ( dec CaMeL Pos + 1 , dec ) ;
rank: 635
score: 99.31171061197917
patch: mant = str . substring ( str . equals ( $NUMBER$ ) ) ;
rank: 635
score: 99.20016915457589
patch: name = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 636
score: 99.36156209309895
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { exp = new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 636
score: 99.35996791294643
patch: exp CaMeL Pos = str . char CaMeL At ( 0 ) ;
rank: 636
score: 99.31669616699219
patch: value = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 636
score: 99.31144714355469
patch: mant = str . substring ( exp CaMeL Pos - 0 + $NUMBER$ ) ;
rank: 636
score: 99.28293282645089
patch: mant = exp . substring ( str . length ( ) ) ;
rank: 636
score: 99.2644287109375
patch: mant = str . substring ( exp CaMeL Pos ) + $NUMBER$ ; }
rank: 636
score: 99.20001690204327
patch: result = str . substring ( exp CaMeL Pos ) ; }
rank: 637
score: 99.36138671875
patch: exp = Number CaMeL Utils . create CaMeL Float ( str ) ; mant = str . substring ( dec CaMeL Pos ) ;
rank: 637
score: 99.35973307291667
patch: mant = new Number CaMeL Format CaMeL Exception ( str , $STRING$ ) ;
rank: 637
score: 99.34556579589844
patch: throw new Big CaMeL Integer ( str . length ( ) - 1 ) ;
rank: 637
score: 99.31641387939453
patch: mant = str . substring ( 0 , exp CaMeL Pos & 1 ) ;
rank: 637
score: 99.31086730957031
patch: mant = str . substring ( exp CaMeL Pos - $NUMBER$ , 1 ) ;
rank: 637
score: 99.28260091145833
patch: tmp = str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 637
score: 99.19964599609375
patch: b = str . substring ( exp CaMeL Pos ) ;
rank: 638
score: 99.3613671875
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + ) ;
rank: 638
score: 99.31550598144531
patch: tmp = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 638
score: 99.31032889229911
patch: mant = str . substring ( 0 + 0 , 0 ) ;
rank: 638
score: 99.19817243303571
patch: frame = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 639
score: 99.34487479073661
patch: numeric = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 639
score: 99.31031799316406
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; else {
rank: 639
score: 99.30446166992188
patch: mant = str . substring ( ! str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 639
score: 99.19725690569196
patch: template = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 640
score: 99.360712890625
patch: exp = str . substring ( dec CaMeL Pos + 1 ) + str . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 640
score: 99.34455871582031
patch: throw new Number CaMeL Format CaMeL Exception ( str , str + $STRING$ ) ;
rank: 640
score: 99.3150634765625
patch: i = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 640
score: 99.31024169921875
patch: mant = str . substring ( name . length ( ) - 1 ) ;
rank: 640
score: 99.27736002604166
patch: return str . substring ( 0 , exp CaMeL Pos ) ; } }
rank: 640
score: 99.26176234654018
patch: expression = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 640
score: 99.19594029017857
patch: lm = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 641
score: 99.360380859375
patch: mant = str . substring ( dec CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) + 1 ) ;
rank: 641
score: 99.3101806640625
patch: mant = str . substring ( exp CaMeL Pos , $NUMBER$ ) ;
rank: 641
score: 99.3040438565341
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) && last CaMeL Char > $STRING$ ) {
rank: 641
score: 99.2769775390625
patch: mant = ( str . length ( ) - 1 ) ;
rank: 641
score: 99.26145833333334
patch: if ( exp CaMeL Pos <= exp CaMeL Pos ) { break ; }
rank: 641
score: 99.19580950055804
patch: throw new ) . Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 642
score: 99.360361328125
patch: mant = str . substring ( exp CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) - 1 ) ;
rank: 642
score: 99.34355163574219
patch: if ( exp CaMeL Pos <= dec CaMeL Pos ) { exp = null ;
rank: 642
score: 99.27572866586539
patch: mant = new String ( 0 , exp CaMeL Pos ) ;
rank: 642
score: 99.19566127232143
patch: if ( str . length ( ) > exp CaMeL Pos ) {
rank: 643
score: 99.36015319824219
patch: dec = str . char CaMeL At ( 0 , dec CaMeL Pos ) ;
rank: 643
score: 99.34307861328125
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ , 1 ) ;
rank: 643
score: 99.3036221590909
patch: dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos , dec CaMeL Pos ) ;
rank: 643
score: 99.2750244140625
patch: mant = str . substring ( str . length ( ) ) ) ;
rank: 643
score: 99.25900065104166
patch: mant = str . length ( ) + str . length ( ) ;
rank: 643
score: 99.1947021484375
patch: director = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 644
score: 99.3095932006836
patch: mant = str . substring ( $NUMBER$ , exp CaMeL Pos - $NUMBER$ ) ;
rank: 644
score: 99.30352783203125
patch: exp = str . substring ( 0 + exp CaMeL Pos ) ;
rank: 644
score: 99.27483258928571
patch: results = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 644
score: 99.19437081473214
patch: final int exp = str . index CaMeL Of ( $STRING$ ) ;
rank: 645
score: 99.3580322265625
patch: if ( exp CaMeL Pos > dec CaMeL Pos )
rank: 645
score: 99.35570417131696
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } else
rank: 645
score: 99.30943952287946
patch: mant = str . substring ( 0 , exp CaMeL Pos , ;
rank: 645
score: 99.30257161458333
patch: mant = str . substring ( dec CaMeL Pos ) ; } * /
rank: 645
score: 99.27474539620536
patch: mant = str . append ( str . length ( ) ) ;
rank: 645
score: 99.25837053571429
patch: mant = str . equals ( 0 , exp CaMeL Pos ) ;
rank: 645
score: 99.19410051618304
patch: stmt = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 646
score: 99.3139419555664
patch: mant = mant . char CaMeL At ( 0 , exp CaMeL Pos ) ;
rank: 646
score: 99.30224609375
patch: n = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 646
score: 99.2742919921875
patch: return str . substring ( str . length ( ) ) ; }
rank: 647
score: 99.35733032226562
patch: exp = str . substring ( dec CaMeL Pos + 1 ) ; } else
rank: 647
score: 99.35514322916667
patch: exp = str . substring ( exp CaMeL Pos ) ; } else {
rank: 647
score: 99.3138656616211
patch: mant = Math . substring ( 0 , 0 , exp CaMeL Pos ) ;
rank: 647
score: 99.30873325892857
patch: mant = str . substring ( ( exp CaMeL Pos ) ) ;
rank: 647
score: 99.3022216796875
patch: int dec CaMeL Pos = str . index CaMeL Of ( $STRING$ ) ;
rank: 647
score: 99.25770786830357
patch: mant = Math . abs ( 0 , exp CaMeL Pos ) ;
rank: 647
score: 99.19247000558036
patch: break str . substring ( exp CaMeL Pos + 1 ) ; }
rank: 648
score: 99.357158203125
patch: mant = str . substring ( dec CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) ) + 1 ;
rank: 648
score: 99.35173797607422
patch: mant = str . substring ( exp CaMeL Pos + 1 ) - 1 ;
rank: 648
score: 99.31366838727679
patch: mant = str . substring ( exp CaMeL Pos - mant ) ;
rank: 648
score: 99.30852508544922
patch: mant = str . substring ( str . substring ( exp CaMeL Pos ) ;
rank: 648
score: 99.25758713942308
patch: mant = str . replace ( 0 , $STRING$ ) ; }
rank: 649
score: 99.35687255859375
patch: if ( dec CaMeL Pos > dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; }
rank: 649
score: 99.35171508789062
patch: exp = str . char CaMeL At ( dec CaMeL Pos - 1 ) ;
rank: 649
score: 99.30844552176339
patch: mant -= str . substring ( 0 , exp CaMeL Pos ) ;
rank: 649
score: 99.30194091796875
patch: dec = str . substring ( 0 + dec CaMeL Pos ) ;
rank: 649
score: 99.27293294270834
patch: { return str . substring ( 0 , exp CaMeL Pos ) ; }
rank: 649
score: 99.25748988560268
patch: def = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 650
score: 99.35425676618304
patch: try { dec = str . substring ( exp CaMeL Pos ) ;
rank: 650
score: 99.3125228881836
patch: mant = chars . substring ( 0 , exp CaMeL Pos + 1 ) ;
rank: 650
score: 99.30829620361328
patch: mant = str . substring ( 0 >= exp CaMeL Pos - 1 ) ;
rank: 650
score: 99.30121459960938
patch: exp = str . substring ( dec CaMeL Pos + 1 + 1 , exp CaMeL Pos ) ;
rank: 650
score: 99.19129289899554
patch: host = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 651
score: 99.31212506975446
patch: 0 = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 651
score: 99.30793108258929
patch: mant = str . substring ( 0 , 0 , 1 ) ;
rank: 651
score: 99.300927734375
patch: mant = str . substring ( dec CaMeL Pos - 1 , exp CaMeL Pos + 1 ) ;
rank: 651
score: 99.27271446814903
patch: mant = new Integer ( 0 , exp CaMeL Pos ) ;
rank: 651
score: 99.25660923549107
patch: max = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 651
score: 99.19084821428571
patch: return new Number ( str . length ( ) - 1 ) ;
rank: 652
score: 99.34969656808036
patch: mant = str . substring ( 0 , last CaMeL Char ) ;
rank: 652
score: 99.3365707397461
patch: if ( exp CaMeL Pos >= dec CaMeL Pos ) { exp = null ;
rank: 652
score: 99.25601632254464
patch: mant = str . index CaMeL Of ( $STRING$ ) ; ; }
rank: 653
score: 99.35636393229167
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + $STRING$ ) ; }
rank: 653
score: 99.31158806295956
patch: mant = str . substring ( 0 , exp CaMeL Pos ? exp CaMeL Pos ]
rank: 653
score: 99.30675506591797
patch: mant = str . substring ( exp CaMeL Pos + 1 + 0 ) ;
rank: 653
score: 99.3006103515625
patch: throw new Number CaMeL Format CaMeL Exception ( str ) ; } else {
rank: 653
score: 99.18933977399554
patch: mant = name . substring ( exp CaMeL Pos ) ; break ;
rank: 654
score: 99.3563461303711
patch: exp = new Number ( str . length ( ) - 1 ) ; }
rank: 654
score: 99.35332782451923
patch: mant = new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 654
score: 99.34922688802084
patch: if ( exp CaMeL Pos < - 1 ) { exp = str ;
rank: 654
score: 99.33610534667969
patch: exp = str . substring ( dec CaMeL Pos + 1 ) - 1 ;
rank: 654
score: 99.31124877929688
patch: string = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 654
score: 99.30054931640625
patch: dec = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ; break ;
rank: 654
score: 99.25369466145834
patch: if ( exp CaMeL Pos >= exp CaMeL Pos ) { break ; }
rank: 654
score: 99.18918081430289
patch: sb = new Big CaMeL Integer ( exp CaMeL Pos ) ;
rank: 655
score: 99.33503941127232
patch: throw new Number CaMeL Format CaMeL Exception ( last CaMeL Char ) ;
rank: 655
score: 99.30652618408203
patch: mant = str . substring ( 0 , exp CaMeL Pos , true ) ;
rank: 655
score: 99.30042085193452
patch: mant = str . substring ( ! Character . is CaMeL Digit ( last CaMeL Char ) ) ; }
rank: 655
score: 99.25361328125
patch: mant = $STRING$ . index CaMeL Of ( exp CaMeL Pos ) ; }
rank: 655
score: 99.18892415364583
patch: if ( exp CaMeL Pos <= exp CaMeL Pos ) {
rank: 656
score: 99.35388671875
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ; break ;
rank: 656
score: 99.35293579101562
patch: try { mant = Number CaMeL Utils . create CaMeL Float ( str ) ;
rank: 656
score: 99.34686686197917
patch: if ( exp CaMeL Pos < - 1 ) { mant = str ;
rank: 656
score: 99.18881225585938
patch: exp CaMeL Pos = exp CaMeL Pos ; break ; }
rank: 657
score: 99.353408203125
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + str . substring ( 0 , exp CaMeL Pos ) ) ;
rank: 657
score: 99.30575561523438
patch: mant = $STRING$ . substring ( 0 , exp CaMeL Pos - 0 ) ;
rank: 657
score: 99.26925893930289
patch: return new String ( str , exp CaMeL Pos ) ; }
rank: 657
score: 99.18867631392045
patch: return new Integer ( exp CaMeL Pos ) ; }
rank: 658
score: 99.34576009114583
patch: if ( exp CaMeL Pos == - 1 ) { exp = str ;
rank: 658
score: 99.30950927734375
patch: mant = str . substring ( exp CaMeL Pos ) ; mant = mant ;
rank: 658
score: 99.29996744791667
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos <= str . length ( ) ) {
rank: 658
score: 99.26864420572916
patch: mant = str . substring ( str . length ( ) $NUMBER$ ) ;
rank: 658
score: 99.25250244140625
patch: mant = str . length ( ) ; }
rank: 658
score: 99.18854631696429
patch: exp CaMeL Pos = exp CaMeL Pos - exp CaMeL Pos ; }
rank: 659
score: 99.35308837890625
patch: throw new Number CaMeL Format CaMeL Exception ( str + str . index CaMeL Of ( $STRING$ ) + 1 ) ; }
rank: 659
score: 99.34529935396634
patch: exp = str . substring ( 0 , - 1 ) ;
rank: 659
score: 99.30943080357143
patch: mant = str . substring ( exp CaMeL Pos ) + 0 ;
rank: 659
score: 99.30526733398438
patch: mant = null ; mant = str . substring ( exp CaMeL Pos ) ;
rank: 659
score: 99.267138671875
patch: mant = mant . substring ( 0 , exp CaMeL Pos ) ; ;
rank: 659
score: 99.18811907087054
patch: mant = new Integer ( exp CaMeL Pos ) ; break ; }
rank: 660
score: 99.35281575520834
patch: exp = str . substring ( - 1 , exp CaMeL Pos ) ;
rank: 660
score: 99.35142299107143
patch: dec = str . substring ( 1 , exp CaMeL Pos ) ;
rank: 660
score: 99.34498697916666
patch: exp = str . substring ( dec CaMeL Pos - 1 ) ; }
rank: 660
score: 99.32755533854167
patch: throw new Number CaMeL Format CaMeL Exception ( str , str ) ; }
rank: 660
score: 99.18698556082589
patch: inst = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 661
score: 99.35250854492188
patch: exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + ;
rank: 661
score: 99.32752336774554
patch: throw new Number CaMeL Format CaMeL Exception ( str , 1 ) ;
rank: 661
score: 99.30477142333984
patch: mant += str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 661
score: 99.26582845052083
patch: return str . substring ( 0 , str . length ( ) ) ;
rank: 661
score: 99.25181361607143
patch: mant = Double . value CaMeL Of ( exp CaMeL Pos ) ;
rank: 661
score: 99.18558175223214
patch: book = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 662
score: 99.35116577148438
patch: exp = str . substring ( 0 , last CaMeL Char + 1 ) ;
rank: 662
score: 99.3440933227539
patch: exp CaMeL Pos = str . substring ( 1 , dec CaMeL Pos ) ;
rank: 662
score: 99.30860137939453
patch: mant = str . substring ( str . length ( ) - mant ) ;
rank: 662
score: 99.29902576264881
patch: if ( exp CaMeL Pos < - 1 && exp CaMeL Pos < str . length ( ) ) {
rank: 662
score: 99.26573768028847
patch: mant = str . substring ( 0 , 1 ) ; }
rank: 662
score: 99.25096784319196
patch: sb . substring ( exp CaMeL Pos , exp CaMeL Pos ) ;
rank: 662
score: 99.18533761160714
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + name ) ;
rank: 663
score: 99.350771484375
patch: exp = new Number ( str . index CaMeL Of ( $STRING$ ) , str . index CaMeL Of ( $STRING$ ) ) ;
rank: 663
score: 99.32523600260417
patch: throw new Number CaMeL Format CaMeL Exception ( str ; }
rank: 663
score: 99.30381774902344
patch: mant = str . substring ( 0 * exp CaMeL Pos - 1 ) ;
rank: 663
score: 99.29879760742188
patch: mant = str . substring ( 0 , exp CaMeL Pos + 1 , dec CaMeL Pos ) ;
rank: 664
score: 99.35003662109375
patch: exp = str . substring ( str . index CaMeL Of ( $STRING$ ) + 1 , exp CaMeL Pos ) ; }
rank: 664
score: 99.34375
patch: exp CaMeL Pos = str . length ( ) - 1 ;
rank: 664
score: 99.32506452287946
patch: exp = str . substring ( exp CaMeL Pos + $NUMBER$ ) ;
rank: 664
score: 99.30765787760417
patch: mant = str . substring ( 0 , exp CaMeL Pos ? str ;
rank: 664
score: 99.3037338256836
patch: mant = str . substring ( 0 , exp CaMeL Pos ) - ) ;
rank: 664
score: 99.29861450195312
patch: mant = str . substring ( dec CaMeL Pos ) + str . length ( ) - 1 ;
rank: 664
score: 99.18475341796875
patch: exp CaMeL Pos = exp CaMeL Pos ; }
rank: 665
score: 99.35052490234375
patch: exp = str . substring ( 0 , last CaMeL Char ) ;
rank: 665
score: 99.3481953938802
patch: dec = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + $STRING$ ; }
rank: 665
score: 99.30754852294922
patch: sb = str . substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 665
score: 99.3033218383789
patch: mant = str . substring ( str . length ( ) ( ) ) ;
rank: 665
score: 99.26451764787946
patch: mant = str . substring ( exp CaMeL Pos - length ) ;
rank: 665
score: 99.24795096261161
patch: n = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 665
score: 99.18433634440105
patch: if ( exp CaMeL Pos >= exp CaMeL Pos ) {
rank: 666
score: 99.350341796875
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ - 1 ) ;
rank: 666
score: 99.34814453125
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + str . index CaMeL Of ( $STRING$ ) - 1 ) ;
rank: 666
score: 99.34344889322917
patch: if ( exp CaMeL Pos == - 1 ) { mant = str ;
rank: 666
score: 99.3203125
patch: try { return create CaMeL Long ( str ) ;
rank: 666
score: 99.30659484863281
patch: mant = str . substring ( exp CaMeL Pos / 1 , mant ) ;
rank: 666
score: 99.30299595424107
patch: mant = str . substring ( 0 , exp CaMeL Pos - ;
rank: 666
score: 99.29825846354167
patch: mant = str . substring ( dec CaMeL Pos + 1 ) ; } else { mant = str ;
rank: 666
score: 99.24531773158482
patch: mant = Math . min ( exp CaMeL Pos , 0 ) ;
rank: 667
score: 99.34935651506696
patch: try { exp = str . substring ( exp CaMeL Pos ) ;
rank: 667
score: 99.34294128417969
patch: mant = str . substring ( 0 , last CaMeL Char + 1 ) ;
rank: 667
score: 99.302734375
patch: mant = str . substring ( 0 : str . length ( ) ) ;
rank: 667
score: 99.29787772042411
patch: f = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 667
score: 99.263427734375
patch: return mant . substring ( 0 , exp CaMeL Pos ) ; }
rank: 668
score: 99.34835611979166
patch: return create CaMeL Big CaMeL Integer ( str , exp CaMeL Pos ) ;
rank: 668
score: 99.34712727864583
patch: mant = str . starts CaMeL With ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + $STRING$ ; }
rank: 668
score: 99.30271911621094
patch: mant = str . substring ( str . char CaMeL Count ( ) ) ;
rank: 668
score: 99.2978515625
patch: v = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 668
score: 99.26162923177084
patch: { mant = str . substring ( exp CaMeL Pos - 1 ) ;
rank: 668
score: 99.24393136160714
patch: d = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 668
score: 99.18317522321429
patch: script = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 669
score: 99.346669921875
patch: exp = new Float ( str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ) ;
rank: 669
score: 99.31832682291666
patch: return create CaMeL Long ( str , exp CaMeL Pos + 1 ) ;
rank: 669
score: 99.30594308035714
patch: mant = format . substring ( 0 , exp CaMeL Pos ) ;
rank: 669
score: 99.30269368489583
patch: mant = str . substring ( $NUMBER$ , 1 ) ;
rank: 669
score: 99.29700237771739
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 669
score: 99.25968424479167
patch: mant = new String ( 0 , str . length ( ) ) ;
rank: 669
score: 99.24277169363839
patch: throw new Number CaMeL Format CaMeL Exception ( str + ) ; }
rank: 669
score: 99.18306187220982
patch: atom = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 670
score: 99.346591796875
patch: exp = new Long ( str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ) ;
rank: 670
score: 99.30535125732422
patch: mant = str . substring ( exp CaMeL Pos / 1 , 0 ) ;
rank: 671
score: 99.34544788707386
patch: if ( exp CaMeL Pos < dec CaMeL Pos )
rank: 671
score: 99.3402328491211
patch: exp = str . substring ( exp CaMeL Pos + 1 , mant ) ;
rank: 671
score: 99.31606619698661
patch: throw new Number CaMeL Format CaMeL Exception ( str + $NUMBER$ ) ;
rank: 671
score: 99.30500030517578
patch: mant = str . substring ( exp CaMeL Pos ) - exp CaMeL Pos ;
rank: 672
score: 99.30135904947916
patch: long mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 672
score: 99.29678199404762
patch: return create CaMeL Integer ( dec CaMeL Pos + 1 , str . length ( ) - 1 ) ;
rank: 672
score: 99.2417704264323
patch: mant = str . substring ( exp CaMeL Pos + ;
rank: 672
score: 99.18205915178571
patch: throw new Number CaMeL Format CaMeL Exception ( name , $STRING$ ) ;
rank: 673
score: 99.34464518229167
patch: exp = str . substring ( 1 , exp CaMeL Pos ) ; }
rank: 673
score: 99.3395526592548
patch: dec = str . substring ( exp CaMeL Pos ) ; }
rank: 673
score: 99.338623046875
patch: if ( exp CaMeL Pos <= - 1 ) { exp = null ;
rank: 673
score: 99.31421712239583
patch: if ( exp CaMeL Pos < - 1 ) { mant = null ;
rank: 673
score: 99.30313110351562
patch: mant = str . substring ( exp CaMeL Pos - exp CaMeL Pos ) +
rank: 673
score: 99.30030406605114
patch: mant = str . substring ( exp CaMeL Pos ;
rank: 673
score: 99.29625883556548
patch: int exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . length ( ) ;
rank: 673
score: 99.25823567708333
patch: mant = new Integer ( 0 , str . length ( ) ) ;
rank: 673
score: 99.2401874248798
patch: mant = Integer . parse CaMeL Int ( str ) ; }
rank: 674
score: 99.34386189778645
patch: return create CaMeL Big CaMeL Integer ( str ) ; }
rank: 674
score: 99.33852713448661
patch: exp CaMeL Pos = str . substring ( 0 , 1 ) ;
rank: 674
score: 99.33850969587054
patch: exp = str . substring ( last CaMeL Char + 1 ) ;
rank: 674
score: 99.30239868164062
patch: mant = str . substring ( start , exp CaMeL Pos + 1 ) ;
rank: 674
score: 99.30010114397321
patch: mant = substring ( 0 , exp CaMeL Pos - 1 ) ;
rank: 674
score: 99.29618503736413
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) && exp CaMeL Pos < dec CaMeL Pos )
rank: 674
score: 99.25555013020833
patch: mant = str . substring ( str . length ( ) - ; ;
rank: 674
score: 99.2391866048177
patch: mant = Integer . parse CaMeL Int ( str ) ;
rank: 674
score: 99.18071637834821
patch: last CaMeL Char = str . substring ( exp CaMeL Pos ) ;
rank: 675
score: 99.343857421875
patch: return new Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 675
score: 99.23801967075893
patch: layout = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 675
score: 99.18064662388393
patch: temp = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 676
score: 99.33617292131696
patch: mant = str . substring ( last CaMeL Char + 1 ) ;
rank: 676
score: 99.33616129557292
patch: exp = str . substring ( 0 , $NUMBER$ ) ;
rank: 676
score: 99.25224609375
patch: return new Long ( str . substring ( exp CaMeL Pos ) ) ;
rank: 676
score: 99.18063354492188
patch: return new Integer ( exp CaMeL Pos + 1 ) ;
rank: 677
score: 99.3420703125
patch: mant = str . substring ( str . index CaMeL Of ( $STRING$ ) + 1 , str . length ( ) ) ;
rank: 677
score: 99.33614676339286
patch: exp = $STRING$ . substring ( exp CaMeL Pos + 1 ) ;
rank: 677
score: 99.3077392578125
patch: try { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 677
score: 99.30167388916016
patch: mant = exp = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 677
score: 99.29555838448661
patch: exp = str . substring ( str . length ( ) ) ;
rank: 677
score: 99.29462541852679
patch: i = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 677
score: 99.17989676339286
patch: mant = str . substring ( exp . length ( ) ) ;
rank: 678
score: 99.33505684988839
patch: try { mant = str . substring ( dec CaMeL Pos ) ;
rank: 678
score: 99.30683244977679
patch: m = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 678
score: 99.30157470703125
patch: str = str . substring ( 0 , str . length ( ) ) ;
rank: 678
score: 99.25211879185268
patch: mant = str . substring ( 0 , [ $NUMBER$ ] ) ;
rank: 678
score: 99.23532540457589
patch: record = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 679
score: 99.29435511997768
patch: buf = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 679
score: 99.1795654296875
patch: b = str . substring ( exp CaMeL Pos ) ; break ;
rank: 680
score: 99.3394266764323
patch: exp CaMeL Pos = exp CaMeL Pos + 1 ; }
rank: 680
score: 99.33244977678571
patch: throw new Number CaMeL Format CaMeL Exception ( str - 1 ) ;
rank: 680
score: 99.25107421875
patch: mant = str . substring ( 0 , 1 ) ; break ; }
rank: 680
score: 99.17935884915866
patch: mant = str . substring ( exp CaMeL Pos - ; }
rank: 681
score: 99.33818359375
patch: dec = str . substring ( dec CaMeL Pos + 1 , str . index CaMeL Of ( $STRING$ ) - 1 ) ;
rank: 681
score: 99.33035714285714
patch: return create CaMeL Long ( str ) ; } dec = null ;
rank: 681
score: 99.3045987215909
patch: exp = str . to CaMeL String ( ) ;
rank: 681
score: 99.29374363111413
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos > str . length ( ) - 1 ) {
rank: 681
score: 99.29287923177084
patch: return str . substring ( 0 + exp CaMeL Pos - 1 ) ;
rank: 681
score: 99.25084635416667
patch: mant = str . substring ( 0 , += exp CaMeL Pos ) ;
rank: 681
score: 99.23262845552884
patch: mant = str . index CaMeL Of ( $STRING$ ) ; ;
rank: 681
score: 99.17892690805289
patch: break str . substring ( 0 , exp CaMeL Pos ) ;
rank: 682
score: 99.33775390625
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } dec = null ;
rank: 682
score: 99.2984390258789
patch: mant = str . substring ( exp CaMeL Pos - 1 , exp ) ;
rank: 682
score: 99.29366629464286
patch: int dec CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . length ( ) ;
rank: 682
score: 99.17571551983173
patch: mant = str . substring ( exp CaMeL Pos ++ ) ;
rank: 683
score: 99.3375244140625
patch: dec = str . substring ( 1 , dec CaMeL Pos ) ;
rank: 683
score: 99.30400739397321
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 683
score: 99.29830932617188
patch: mant = str . substring ( start , exp CaMeL Pos - 0 ) ;
rank: 683
score: 99.29331752232143
patch: mant = str . substring ( ! Character . is CaMeL Digit ( exp CaMeL Pos ) ) ; }
rank: 683
score: 99.25072428385417
patch: mant = new str . substring ( str . length ( ) ) ;
rank: 683
score: 99.23239571707589
patch: mant = abs . substring ( 0 , exp CaMeL Pos ) ;
rank: 683
score: 99.17564978966347
patch: return str . substring ( 1 , exp CaMeL Pos ) ;
rank: 684
score: 99.33703125
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } }
rank: 684
score: 99.32726178850446
patch: exp = $STRING$ . substring ( 0 , exp CaMeL Pos ) ;
rank: 684
score: 99.29817338423295
patch: mant = str . to CaMeL String ( ) ;
rank: 684
score: 99.291552734375
patch: mant = str . substring ( ( exp CaMeL Pos 1 ) ) ;
rank: 684
score: 99.17555588942308
patch: b = str . substring ( exp CaMeL Pos ) ; }
rank: 685
score: 99.3228759765625
patch: numeric = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 685
score: 99.30340576171875
patch: throw new Number CaMeL Format CaMeL Exception ( this + $STRING$ ) ;
rank: 685
score: 99.29288736979167
patch: if ( str . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 685
score: 99.25002817007211
patch: return new Integer ( str . length ( ) ) ; }
rank: 685
score: 99.23068673270089
patch: mant = Long . parse CaMeL Int ( exp CaMeL Pos ) ;
rank: 685
score: 99.17554649939903
patch: mant = new Integer ( exp CaMeL Pos ) ; break ;
rank: 686
score: 99.32352992466518
patch: try { dec = str . substring ( dec CaMeL Pos ) ;
rank: 686
score: 99.29670061383929
patch: mant = str . substring ( mant , exp CaMeL Pos ) ;
rank: 686
score: 99.24881184895834
patch: mant = mant . trim ( 0 , exp CaMeL Pos ) ; }
rank: 686
score: 99.17488919771634
patch: mant = str . replace ( $STRING$ , $STRING$ ) ; }
rank: 687
score: 99.335810546875
patch: if ( exp CaMeL Pos >= exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 687
score: 99.29630279541016
patch: mant = str . substring ( 0 , exp CaMeL Pos * mant ) ;
rank: 687
score: 99.22896030970982
patch: mant = str . index CaMeL Of ( ) + 1 ; }
rank: 687
score: 99.17210975060097
patch: mant = value . substring ( exp CaMeL Pos ) ; }
rank: 688
score: 99.32266671316964
patch: dec = str . char CaMeL At ( exp CaMeL Pos ) ;
rank: 688
score: 99.32115885416667
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) )
rank: 688
score: 99.29933384486607
patch: exp = str . value ( dec CaMeL Pos + 1 ) ;
rank: 688
score: 99.296142578125
patch: mant = value . substring ( exp CaMeL Pos ) ;
rank: 688
score: 99.29225852272727
patch: mant = str . substring ( ! Character . is CaMeL Digit ( exp CaMeL Pos + 1 ) ) ;
rank: 688
score: 99.24824741908482
patch: return str . substring ( $NUMBER$ , exp CaMeL Pos ) ; }
rank: 688
score: 99.22869873046875
patch: mant = str . substring ( exp CaMeL Pos ) ; * /
rank: 688
score: 99.17195268110795
patch: mant = str . substring ( exp CaMeL Pos )
rank: 689
score: 99.335107421875
patch: exp = new Long ( str . length ( ) - 1 ) ;
rank: 689
score: 99.32247220552884
patch: exp = new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 689
score: 99.29867989676339
patch: exp = $STRING$ . substring ( dec CaMeL Pos + 1 ) ;
rank: 689
score: 99.24811662946429
patch: mant = str . add ( 0 , exp CaMeL Pos ) ;
rank: 689
score: 99.22861153738839
patch: mant = str . index CaMeL Of ( $STRING$ ) ; } }
rank: 689
score: 99.16786545973558
patch: final int exp CaMeL Pos = exp CaMeL Pos ; break ;
rank: 690
score: 99.3345947265625
patch: mant $NUMBER$ = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 690
score: 99.29732259114583
patch: exp = str [ dec CaMeL Pos + 1 ] ;
rank: 690
score: 99.29562377929688
patch: mant = Math . to CaMeL String ( 0 , exp CaMeL Pos ) ;
rank: 690
score: 99.29178059895834
patch: exp = str . substring ( ! str . length ( ) ) ;
rank: 690
score: 99.22837611607143
patch: mant = Integer . value CaMeL Of ( exp CaMeL Pos ) ;
rank: 690
score: 99.16783728966347
patch: return create CaMeL Number ( str , exp CaMeL Pos ) ;
rank: 691
score: 99.33447265625
patch: mant = str . substring ( 0 , dec CaMeL Pos + 1 ) + str . index CaMeL Of ( $STRING$ ) ;
rank: 691
score: 99.29528045654297
patch: mant = str . substring ( exp CaMeL Pos ) ; mant = $STRING$ ;
rank: 691
score: 99.29102376302083
patch: { exp = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 691
score: 99.28694370814732
patch: f = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 691
score: 99.22672213040866
patch: mant = Double . parse CaMeL Double ( str ) ; }
rank: 691
score: 99.1649169921875
patch: mant = new Integer ( exp CaMeL Pos - 1 ) ;
rank: 692
score: 99.3333740234375
patch: str = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 692
score: 99.29075404575893
patch: mant = str [ str . length ( ) - 1 ] ;
rank: 693
score: 99.332890625
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { mant = str . substring ( exp CaMeL Pos + 1 ) ;
rank: 693
score: 99.31909993489583
patch: if ( exp CaMeL Pos > - 1 ) { exp = 0 ;
rank: 693
score: 99.31857096354166
patch: return create CaMeL Long ( str ) ; } else { return null ;
rank: 693
score: 99.29490443638393
patch: mant = out . substring ( 0 , exp CaMeL Pos ) ;
rank: 693
score: 99.29072265625
patch: { dec = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 693
score: 99.28505859375
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; /
rank: 693
score: 99.246142578125
patch: mant = str . add ( 0 , exp CaMeL Pos ) ; }
rank: 693
score: 99.22483473557692
patch: return exp . substring ( 0 , exp CaMeL Pos ) ;
rank: 693
score: 99.16066331129808
patch: mant = new Float ( str . length ( ) ) ;
rank: 694
score: 99.332431640625
patch: mant = str . substring ( exp CaMeL Pos + 1 ) + str . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 694
score: 99.31747000558036
patch: exp = str . char CaMeL At ( dec CaMeL Pos ) ;
rank: 694
score: 99.294873046875
patch: return create CaMeL Long ( 0 , exp CaMeL Pos + 1 ) ;
rank: 694
score: 99.29473876953125
patch: mant = value . substring ( 0 , exp CaMeL Pos - 0 ) ;
rank: 694
score: 99.29047100360577
patch: dec = str . substring ( ! exp CaMeL Pos ) ;
rank: 694
score: 99.28468424479166
patch: mant = str . substring ( exp CaMeL Pos , - 1 ) ;
rank: 694
score: 99.22426060267857
patch: mant = System . identity CaMeL Hash CaMeL Code ( str ) ;
rank: 695
score: 99.31787109375
patch: exp CaMeL Pos = str . substring ( 0 , 0 ) ;
rank: 695
score: 99.31710611979166
patch: throw new Number CaMeL Format CaMeL Exception ( last CaMeL Char ) ; }
rank: 695
score: 99.29454040527344
patch: mant = str . substring ( exp CaMeL Pos ? exp CaMeL Pos ] else
rank: 695
score: 99.24391392299107
patch: result = str . substring ( str . length ( ) ) ;
rank: 695
score: 99.22385951450893
patch: end = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 695
score: 99.15672810872395
patch: state = str . substring ( exp CaMeL Pos ) ;
rank: 696
score: 99.331396484375
patch: dec = str . substring ( 1 , exp CaMeL Pos ) ; }
rank: 696
score: 99.31748860677084
patch: if ( exp CaMeL Pos > - 1 ) { mant = 0 ;
rank: 696
score: 99.2898837002841
patch: if ( exp CaMeL Pos < dec CaMeL Pos || exp CaMeL Pos < str . length ( ) ) {
rank: 696
score: 99.28457205636161
patch: str = str . substring ( 0 + exp CaMeL Pos ) ;
rank: 696
score: 99.24361979166666
patch: return str . substring ( 0 , exp CaMeL Pos ) ; break ;
rank: 696
score: 99.15623121995192
patch: } mant = str . substring ( exp CaMeL Pos ) ;
rank: 697
score: 99.31634928385417
patch: exp = new Number CaMeL Format CaMeL Exception ( str , $STRING$ ) ;
rank: 697
score: 99.28937322443181
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) && last CaMeL Char < $STRING$ ) {
rank: 697
score: 99.28428548177084
patch: mant . = str . substring ( exp CaMeL Pos - 1 ) ;
rank: 697
score: 99.24291053185097
patch: mant = ( str . length ( ) - 0 ) ;
rank: 697
score: 99.1558368389423
patch: return str . char CaMeL At ( exp CaMeL Pos ) ;
rank: 698
score: 99.315576171875
patch: if ( exp CaMeL Pos <= - 1 ) { mant = str ;
rank: 698
score: 99.29362487792969
patch: mant = System . str . substring ( 0 , exp CaMeL Pos ) ;
rank: 698
score: 99.283544921875
patch: mant = str . substring ( exp CaMeL Pos - 1 + ) ;
rank: 698
score: 99.24109700520833
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; {
rank: 698
score: 99.22289167131696
patch: mant = str . equals ( $STRING$ ) ? str : str ;
rank: 698
score: 99.15525124289773
patch: exp CaMeL Pos = exp CaMeL Pos ; break ;
rank: 699
score: 99.3294140625
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ + str . substring ( 0 , dec CaMeL Pos ) ) ;
rank: 699
score: 99.31630161830357
patch: throw new Number CaMeL Format CaMeL Exception ( str ) ; } }
rank: 699
score: 99.3155517578125
patch: if ( exp CaMeL Pos <= - 1 ) { exp = str ;
rank: 699
score: 99.28324381510417
patch: mant . add ( str . substring ( exp CaMeL Pos ) ) ;
rank: 699
score: 99.1550625887784
patch: mant = new Double ( exp CaMeL Pos ) ;
rank: 700
score: 99.29252624511719
patch: mant = str . substring ( 0 , exp CaMeL Pos / 0 ) ;
rank: 700
score: 99.28310922475961
patch: mant = str . substring ( exp CaMeL Pos $NUMBER$ ) ;
rank: 700
score: 99.24015590122768
patch: mant = new Integer ( 0 , exp CaMeL Pos ) ; }
rank: 700
score: 99.15475463867188
patch: mant = str ; break ; }
rank: 701
score: 99.328076171875
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 701
score: 99.31543579101563
patch: if ( exp CaMeL Pos > - 1 )
rank: 701
score: 99.29244995117188
patch: exp = str . substring ( exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 701
score: 99.28994954427084
patch: throw new Number CaMeL Format CaMeL Exception ( str str + $STRING$ ) ;
rank: 701
score: 99.21990966796875
patch: mant = new ) ; exp CaMeL Pos = exp CaMeL Pos ;
rank: 701
score: 99.15444946289062
patch: mant = str . replace ( $STRING$ , $STRING$ ) ;
rank: 702
score: 99.327705078125
patch: if ( exp CaMeL Pos > - 1 ) { throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ; }
rank: 702
score: 99.2923355102539
patch: mant = str . substring ( exp CaMeL Pos ? 1 : $STRING$ ) ;
rank: 702
score: 99.289501953125
patch: throw new Number CaMeL Format CaMeL Exception ( str String + $STRING$ ) ;
rank: 702
score: 99.28690011160714
patch: dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } * /
rank: 702
score: 99.280908203125
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; .
rank: 702
score: 99.239111328125
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; do
rank: 702
score: 99.21956961495536
patch: group = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 702
score: 99.15436260516827
patch: final str = str . substring ( exp CaMeL Pos ) ;
rank: 703
score: 99.32700892857143
patch: mant = str . substring ( dec CaMeL Pos ) + 1 ;
rank: 703
score: 99.31040736607143
patch: numeric = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 703
score: 99.2921371459961
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) { mant = mant ;
rank: 703
score: 99.28607177734375
patch: s = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 703
score: 99.2364501953125
patch: mant = str . iterator ( ) . length ( ) ;
rank: 703
score: 99.15285237630208
patch: mant = $STRING$ ; } else { mant = $STRING$ ;
rank: 704
score: 99.326708984375
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 704
score: 99.29167938232422
patch: mant = str . substring ( str . trim ( ) , 0 ) ;
rank: 704
score: 99.28560965401786
patch: throw new Number CaMeL Format CaMeL Exception ( str , $NUMBER$ ) ;
rank: 704
score: 99.28023856026786
patch: str = str . substring ( 1 , exp CaMeL Pos ) ;
rank: 704
score: 99.23487200055804
patch: o = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 704
score: 99.21685791015625
patch: mant = Long . parse CaMeL Long ( exp CaMeL Pos ) ;
rank: 704
score: 99.1519305889423
patch: mant = str [ exp CaMeL Pos - 1 ] ; }
rank: 705
score: 99.326513671875
patch: exp = Number CaMeL Utils . create CaMeL Float ( str ) ; dec = str . substring ( dec CaMeL Pos ) ;
rank: 705
score: 99.3125732421875
patch: dec = str . substring ( exp CaMeL Pos - 1 ) ; }
rank: 705
score: 99.15064493815105
patch: mant = str . ends CaMeL With ( $STRING$ ) ;
rank: 706
score: 99.31219889322917
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ - 1 ) ; }
rank: 706
score: 99.29153006417411
patch: mant = str . substring ( mant . length ( ) ) ;
rank: 706
score: 99.28521437872024
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos > str . length ( ) ) {
rank: 706
score: 99.21568080357143
patch: mant = str . substring ( exp CaMeL Pos , max ) ;
rank: 706
score: 99.14991251627605
patch: return new Big CaMeL Integer ( exp CaMeL Pos ) ;
rank: 707
score: 99.325361328125
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; } }
rank: 707
score: 99.30978829520089
patch: if ( exp CaMeL Pos > 0 ) { mant = str ;
rank: 707
score: 99.28488026494566
patch: if ( exp CaMeL Pos < dec CaMeL Pos || exp CaMeL Pos < str . length ( ) - 1 )
rank: 707
score: 99.2796630859375
patch: mant = str [ dec CaMeL Pos + 1 ] ;
rank: 707
score: 99.278759765625
patch: mant = str . substring ( exp CaMeL Pos - ) ; break ;
rank: 707
score: 99.23030308314732
patch: mant = str . read ( 0 , exp CaMeL Pos ) ;
rank: 707
score: 99.21548461914062
patch: mant = Math . abs ( exp CaMeL Pos ) ;
rank: 707
score: 99.1476299579327
patch: String mant = str . substring ( exp CaMeL Pos ) ;
rank: 708
score: 99.325048828125
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str ) ;
rank: 708
score: 99.30992780412946
patch: mant = new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; }
rank: 708
score: 99.29125213623047
patch: str = str . substring ( exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 708
score: 99.28480596127717
patch: if ( exp CaMeL Pos < dec CaMeL Pos && exp CaMeL Pos < str . length ( ) - 1 )
rank: 708
score: 99.21443394252232
patch: mant = str . index CaMeL Of ( $STRING$ ) ; * /
rank: 708
score: 99.14637247721355
patch: mant = str . length ( ) + 1 ; }
rank: 709
score: 99.30938720703125
patch: mant = create CaMeL Big CaMeL Integer ( str ) ;
rank: 709
score: 99.29122488839286
patch: mant = Math . start ( 0 , exp CaMeL Pos ) ;
rank: 709
score: 99.27818080357143
patch: exp = str . substring ( $NUMBER$ , exp CaMeL Pos ) ;
rank: 709
score: 99.22712925502232
patch: mant = $STRING$ . substring ( str . length ( ) ) ;
rank: 709
score: 99.21376255580357
patch: pi = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 709
score: 99.14520263671875
patch: exp CaMeL Pos = exp CaMeL Pos - 1 ; }
rank: 710
score: 99.3248046875
patch: mant = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ ) + str . to CaMeL
rank: 710
score: 99.29092843191964
patch: mant = Math . substring ( mant , exp CaMeL Pos ) ;
rank: 710
score: 99.27772874098558
patch: mant = str . substring ( - exp CaMeL Pos ) ;
rank: 710
score: 99.21350969587054
patch: mant = str . equals ( $STRING$ ) ? $STRING$ : $STRING$ ;
rank: 711
score: 99.324462890625
patch: exp = new Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ )
rank: 711
score: 99.28423517400569
patch: if ( exp CaMeL Pos < dec CaMeL Pos && exp CaMeL Pos < str . length ( ) ) {
rank: 711
score: 99.27772623697916
patch: mant = str . substring ( exp CaMeL Pos 1 + 1 ) ;
rank: 711
score: 99.22467912946429
patch: mant = mant . trim ( str . length ( ) ) ;
rank: 711
score: 99.14186448317308
patch: mant = new Character ( str . length ( ) ) ;
rank: 712
score: 99.32384765625
patch: mant = str . substring ( 0 , exp CaMeL Pos ) + str . index CaMeL Of ( $STRING$ ) + 1 ;
rank: 712
score: 99.2899169921875
patch: mant = ( str . substring ( 0 ) , exp CaMeL Pos ) ;
rank: 712
score: 99.2832263764881
patch: last CaMeL Char = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 712
score: 99.27766927083333
patch: mant = str . substring ( exp CaMeL Pos - ) + ) ;
rank: 712
score: 99.2245624248798
patch: mant = ( mant . length ( ) - 0 ) ;
rank: 712
score: 99.20986502511161
patch: mant = str . substring ( exp CaMeL Pos + ; } }
rank: 713
score: 99.32372029622395
patch: exp = create CaMeL Big CaMeL Integer ( str ) ;
rank: 713
score: 99.28266252790179
patch: if ( exp CaMeL Pos > dec CaMeL Pos + 1 ) {
rank: 713
score: 99.27763148716518
patch: mant = str . substring ( str , exp CaMeL Pos ) ;
rank: 713
score: 99.22441755022321
patch: mant = str . substring ( length , exp CaMeL Pos ) ;
rank: 713
score: 99.20952497209821
patch: chunk = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 714
score: 99.323505859375
patch: if ( exp CaMeL Pos < str . length ( ) ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 714
score: 99.28261311848958
patch: mant = str ; } else { mant = str ;
rank: 714
score: 99.27752278645833
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; mant
rank: 714
score: 99.22440883091518
patch: mant = str . max ( str . length ( ) ) ;
rank: 714
score: 99.14092548076923
patch: throw str . substring ( exp CaMeL Pos + 1 ) ;
rank: 715
score: 99.322158203125
patch: exp = create CaMeL Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) , exp CaMeL Pos ) ; } else
rank: 715
score: 99.28244454520089
patch: sb = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 715
score: 99.27709089006696
patch: mant = str . substring ( 0 , 0 , 0 ) ;
rank: 715
score: 99.27517361111111
patch: return create CaMeL Integer ( str ) ;
rank: 715
score: 99.22358921595982
patch: mant = ( String ) mant . to CaMeL String ( ) ;
rank: 716
score: 99.32211100260416
patch: exp = str . substring ( 1 , dec CaMeL Pos ) ; }
rank: 716
score: 99.28804016113281
patch: mant = mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 716
score: 99.28164672851562
patch: mant = str [ exp CaMeL Pos + 1 ] ;
rank: 716
score: 99.27427455357143
patch: throw new Number CaMeL Format CaMeL Exception ( String . $STRING$ ) ;
rank: 716
score: 99.20900181361607
patch: mant = str . substring ( exp CaMeL Pos ) - 1 ;
rank: 716
score: 99.1373291015625
patch: return new Integer ( exp CaMeL Pos + 1 ) ; }
rank: 717
score: 99.28770446777344
patch: if ( exp CaMeL Pos < exp CaMeL Pos ) { mant = 0 ;
rank: 717
score: 99.28126162574405
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ; } * /
rank: 717
score: 99.20859200613839
patch: mant = str . index CaMeL Of ( $STRING$ ) + $NUMBER$ ;
rank: 717
score: 99.1353008563702
patch: mant = new Double ( str . trim ( ) ) ;
rank: 718
score: 99.32197265625
patch: exp = new Big CaMeL Integer ( str . index CaMeL Of ( $STRING$ ) + 1 , exp CaMeL Pos ) ; }
rank: 718
score: 99.301513671875
patch: if ( exp CaMeL Pos == - 1 ) { mant = null ;
rank: 718
score: 99.28116548978366
patch: if ( str . starts CaMeL With ( $STRING$ ) ) {
rank: 718
score: 99.276220703125
patch: mant = ! str . substring ( 0 , exp CaMeL Pos ) ;
rank: 718
score: 99.22210693359375
patch: mant = new Integer ( str . equals ( $STRING$ ) ) ;
rank: 718
score: 99.13516939603366
patch: mant = str ; } else { mant = str ; }
rank: 719
score: 99.28693389892578
patch: ) { mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 719
score: 99.2806729403409
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos . length ( ) ) ;
rank: 719
score: 99.2694600423177
patch: exp = str [ exp CaMeL Pos + 1 ] ;
rank: 719
score: 99.22181919642857
patch: mant = new String ( 0 , exp CaMeL Pos ) ; }
rank: 719
score: 99.13434307391827
patch: mant = str . substring ( exp CaMeL Pos - 1 )
rank: 720
score: 99.28583233173077
patch: mant = new String ( str , exp CaMeL Pos ) ;
rank: 720
score: 99.27611432756696
patch: mant = mant . substring ( 1 , exp CaMeL Pos ) ;
rank: 720
score: 99.26926967075893
patch: result = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 720
score: 99.22128295898438
patch: return new String ( str , exp CaMeL Pos ) ;
rank: 720
score: 99.13418579101562
patch: hierarchy = str . substring ( exp CaMeL Pos ) ;
rank: 721
score: 99.32120186941964
patch: mant = str . substring ( dec CaMeL Pos , 1 ) ;
rank: 721
score: 99.22095743815105
patch: return new Long ( str . length ( ) ) ;
rank: 721
score: 99.20620291573661
patch: block = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 722
score: 99.320458984375
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str ) ;
rank: 722
score: 99.2854248046875
patch: double mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 722
score: 99.22072056361607
patch: mant = str . substring ( 0 , length ( ) ) ;
rank: 722
score: 99.20615797776442
patch: mant = new str . index CaMeL Of ( $STRING$ ) ;
rank: 723
score: 99.3193359375
patch: mant $NUMBER$ = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 723
score: 99.29367065429688
patch: return new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 723
score: 99.28031703404018
patch: l = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 723
score: 99.27569986979167
patch: mant = str . substring ( str . equals ( str ) ) ;
rank: 723
score: 99.20551409040179
patch: mant = new str . substring ( exp CaMeL Pos + ) ;
rank: 723
score: 99.13154740767045
patch: mant = str . length ( ) - 1 ;
rank: 724
score: 99.29366048177083
patch: dec = str . substring ( 0 , 1 ) ;
rank: 724
score: 99.28475516183036
patch: mant = str . substring ( 0 ) . trim ( ) ;
rank: 724
score: 99.28019575639205
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; mant = str ;
rank: 724
score: 99.20517403738839
patch: sb . append ( str ) . append ( str ) ; }
rank: 724
score: 99.13016764322917
patch: director = str . substring ( exp CaMeL Pos ) ;
rank: 725
score: 99.29502650669643
patch: if ( exp CaMeL Pos > 0 ) { exp = null ;
rank: 725
score: 99.28017356178977
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; dec = str ;
rank: 725
score: 99.26649693080357
patch: try { throw new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 725
score: 99.22018868582589
patch: mant = str . decode ( 0 , exp CaMeL Pos ) ;
rank: 725
score: 99.20401000976562
patch: mant = str . replace ( 0 , $STRING$ ) ;
rank: 725
score: 99.12949625651042
patch: clazz = str . substring ( exp CaMeL Pos ) ;
rank: 726
score: 99.26575724283855
patch: mant = str . value CaMeL Of ( $STRING$ ) ;
rank: 726
score: 99.12770432692308
patch: mant = new Number ( str . length ( ) ) ;
rank: 727
score: 99.3173095703125
patch: str = str . substring ( 0 , dec CaMeL Pos ) ; }
rank: 727
score: 99.28217424665179
patch: mant = Math . trim ( 0 , exp CaMeL Pos ) ;
rank: 727
score: 99.279296875
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp . length ( ) - 1 ) ;
rank: 727
score: 99.274462890625
patch: mant = str . substring ( 0 + exp CaMeL Pos $NUMBER$ ) ;
rank: 727
score: 99.21840994698661
patch: mant = exp . substring ( exp CaMeL Pos - 1 ) ;
rank: 727
score: 99.20152869591347
patch: throw new Number CaMeL Format CaMeL Exception ( str + ) ;
rank: 727
score: 99.12726299579327
patch: mant = str . length ( ) - 1 ; break ;
rank: 728
score: 99.3170654296875
patch: dec = str . substring ( 1 , dec CaMeL Pos ) ; }
rank: 728
score: 99.27907017299107
patch: string = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 728
score: 99.2736083984375
patch: mant = str . substring ( 0 , exp CaMeL Pos ; break ;
rank: 728
score: 99.21829659598214
patch: mant = start . substring ( str . length ( ) ) ;
rank: 728
score: 99.1961669921875
patch: mant = new ; exp CaMeL Pos = exp CaMeL Pos ;
rank: 728
score: 99.12660725911458
patch: c = str . substring ( exp CaMeL Pos ) ;
rank: 729
score: 99.2799072265625
patch: j = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 729
score: 99.27885105298913
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos >= str . length ( ) - 1 ) {
rank: 729
score: 99.2726806640625
patch: mant = str . substring ( exp CaMeL Pos 1 , mant ) ;
rank: 729
score: 99.21796875
patch: mant = str . append ( $STRING$ ) ;
rank: 730
score: 99.27961948939732
patch: p = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 730
score: 99.27844769021739
patch: if ( exp CaMeL Pos >= - 1 && exp CaMeL Pos < str . length ( ) - 1 ) {
rank: 730
score: 99.27171834309895
patch: mant = str . substring ( 1 , 0 ) ;
rank: 730
score: 99.1261494954427
patch: mant = str . trim ( ) ; } break ;
rank: 731
score: 99.27841331845238
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ; break ; }
rank: 731
score: 99.27125651041666
patch: mant = str . substring ( 0 , exp [ 0 ] ) ;
rank: 731
score: 99.19432654747597
patch: mant = str . substring ( 0 , exp ) ; }
rank: 731
score: 99.1250712076823
patch: atom = str . substring ( exp CaMeL Pos ) ;
rank: 732
score: 99.28977748325893
patch: try { exp = str . substring ( dec CaMeL Pos ) ;
rank: 732
score: 99.28725022536058
patch: exp = str . substring ( 0 , 1 ) ; }
rank: 732
score: 99.27100481305804
patch: mant = str . substring ( 0 >= exp CaMeL Pos ) ;
rank: 732
score: 99.21759033203125
patch: cached = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 732
score: 99.193603515625
patch: mant = $STRING$ . equals ( exp CaMeL Pos ) ;
rank: 732
score: 99.1238544170673
patch: wmant = str . substring ( exp CaMeL Pos ) ;
rank: 733
score: 99.31065016526442
patch: new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ;
rank: 733
score: 99.27874348958333
patch: mant = new String CaMeL Buffer ( 0 , exp CaMeL Pos ) ;
rank: 733
score: 99.27097574869792
patch: mant = str . substring ( 0 , $STRING$ ) ;
rank: 733
score: 99.19277954101562
patch: throw new Number CaMeL Format CaMeL Exception ( mant ) ;
rank: 733
score: 99.12380981445312
patch: return new Double ( str . trim ( ) ) ;
rank: 734
score: 99.27903529575893
patch: exp = str [ str . length ( ) - 1 ] ;
rank: 734
score: 99.27711070667614
patch: mant = exp CaMeL Pos + exp CaMeL Pos ;
rank: 734
score: 99.27077811104911
patch: mant = str . substring ( 1 - exp CaMeL Pos ) ;
rank: 734
score: 99.12317911783855
patch: while ( exp CaMeL Pos < exp CaMeL Pos ) {
rank: 735
score: 99.21585787259616
patch: return new Integer ( 0 , exp CaMeL Pos ) ; }
rank: 736
score: 99.25840065696023
patch: return create CaMeL Long ( last CaMeL Char ) ;
rank: 736
score: 99.21581092247597
patch: mant = str . substring ( 0 , length ) ; }
rank: 736
score: 99.18484497070312
patch: mant = str . split ( $STRING$ ) ;
rank: 736
score: 99.12119362571023
patch: mant = str . substring ( 1 ) ; }
rank: 737
score: 99.30669294084821
patch: exp = Number CaMeL Utils . create CaMeL Long ( str ) ;
rank: 737
score: 99.27617536272321
patch: if ( exp CaMeL Pos > 0 ) { exp = str ;
rank: 737
score: 99.27372233072917
patch: mant = ( String ) mant . get ( exp CaMeL Pos ) ;
rank: 737
score: 99.2694600423177
patch: mant = str . substring ( 0 , length ) ;
rank: 737
score: 99.2152569110577
patch: mant = ( mant . length ( ) - 1 ) ;
rank: 737
score: 99.12112426757812
patch: int exp CaMeL Pos = exp CaMeL Pos - 1 ;
rank: 738
score: 99.272802734375
patch: String 0 = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 738
score: 99.26901681082589
patch: mant = substring ( str . length ( ) - 1 ) ;
rank: 738
score: 99.18189493815105
patch: mant = str . index CaMeL Of ( ) ; }
rank: 738
score: 99.1201923076923
patch: retval = str . substring ( exp CaMeL Pos ) ; }
rank: 739
score: 99.28348795572917
patch: return new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 739
score: 99.27109200613839
patch: mant = mant . str . substring ( exp CaMeL Pos ) ;
rank: 739
score: 99.26880754743304
patch: mant = str . substring ( false , exp CaMeL Pos ) ;
rank: 739
score: 99.21335073617789
patch: mant = ( str . length ( ) - $NUMBER$ ) ;
rank: 739
score: 99.18091837565105
patch: mant = str . to CaMeL String ( ) ; }
rank: 739
score: 99.11896221454327
patch: mant = str . substring ( exp CaMeL Pos ) ; )
rank: 740
score: 99.28260216346153
patch: dec = new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 740
score: 99.27643694196429
patch: if ( exp CaMeL Pos >= - 1 && exp CaMeL Pos < str . length ( ) ) {
rank: 740
score: 99.26708984375
patch: mant = str . substring ( exp CaMeL Pos + ) + 0 ;
rank: 740
score: 99.25713641826923
patch: throw new Number CaMeL Format CaMeL Exception ( str + str ;
rank: 740
score: 99.18051382211539
patch: mant = str . index CaMeL Of ( str ) ; }
rank: 740
score: 99.11886831430289
patch: final int exp CaMeL Pos = exp CaMeL Pos - 0 ;
rank: 741
score: 99.28204345703125
patch: exp = str . substring ( exp CaMeL Pos ) + 1 ;
rank: 741
score: 99.27625093005952
patch: if ( exp CaMeL Pos < dec CaMeL Pos || exp CaMeL Pos < str . length ( ) )
rank: 741
score: 99.27499389648438
patch: exp = str . char CaMeL At ( 0 ) ;
rank: 741
score: 99.26701136997768
patch: mant = str . substring ( 0 == exp CaMeL Pos ) ;
rank: 741
score: 99.25400216238839
patch: throw new Number CaMeL Format CaMeL Exception ( str , null ) ;
rank: 741
score: 99.21312604631696
patch: m = str . substring ( str . length ( ) ) ;
rank: 741
score: 99.18030724158653
patch: exp CaMeL Pos = exp CaMeL Pos + exp CaMeL Pos ;
rank: 741
score: 99.11871807391827
patch: mant = 0 ; } else { mant = 0 ; }
rank: 742
score: 99.27618877704327
patch: return create CaMeL Long ( 0 , exp CaMeL Pos ) ;
rank: 742
score: 99.27083914620536
patch: mant = Math . value CaMeL Of ( exp CaMeL Pos ) ;
rank: 742
score: 99.26453450520833
patch: mant = str . substring ( 0 - exp CaMeL Pos - ) ;
rank: 742
score: 99.25270298549107
patch: throw new Number CaMeL Format CaMeL Exception ( dec CaMeL Pos ) ;
rank: 742
score: 99.18030724158653
patch: mant = Math . abs ( exp CaMeL Pos ) ; }
rank: 742
score: 99.11861478365384
patch: mant = new Double ( exp CaMeL Pos + 1 ) ;
rank: 743
score: 99.30340576171875
patch: mant = str . substring ( 0 , - 1 ) ; }
rank: 743
score: 99.21002752130681
patch: mant = str . to CaMeL Int ( ) ;
rank: 743
score: 99.17337740384616
patch: sb . append ( str ) . append ( $STRING$ ) ;
rank: 743
score: 99.1182528409091
patch: mant = new Big CaMeL Integer ( $STRING$ ) ;
rank: 744
score: 99.28000313895089
patch: return create CaMeL Long ( str , exp CaMeL Pos ) ; }
rank: 744
score: 99.27606201171875
patch: exp = str . substring ( 0 + dec CaMeL Pos ) ;
rank: 744
score: 99.17067307692308
patch: return mant . substring ( 0 , exp CaMeL Pos ) ;
rank: 744
score: 99.1175028483073
patch: doc = str . substring ( exp CaMeL Pos ) ;
rank: 745
score: 99.27571323939732
patch: o = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 745
score: 99.1174825032552
patch: return new str . substring ( exp CaMeL Pos ) ;
rank: 746
score: 99.27763148716518
patch: return new Number CaMeL Format CaMeL Exception ( str , $STRING$ ) ;
rank: 746
score: 99.27568708147321
patch: exp = create CaMeL Long ( exp CaMeL Pos + 1 ) ;
rank: 746
score: 99.26790364583333
patch: mant = ( str . trim ( ) . length ( ) ) ;
rank: 746
score: 99.26025390625
patch: mant = substring ( exp CaMeL Pos - 1 ) ;
rank: 746
score: 99.1700908954327
patch: mant = str . length ( ) + exp CaMeL Pos ;
rank: 746
score: 99.11580403645833
patch: search = str . substring ( exp CaMeL Pos ) ;
rank: 747
score: 99.27760532924107
patch: dec = str . char CaMeL At ( dec CaMeL Pos ) ;
rank: 747
score: 99.275634765625
patch: return create CaMeL Integer ( dec CaMeL Pos + 1 ) ;
rank: 747
score: 99.20600237165179
patch: mant = mant . get ( 0 , exp CaMeL Pos ) ;
rank: 748
score: 99.27523367745536
patch: val = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 748
score: 99.268798828125
patch: exp = str . substring ( 0 , 0 ) ; }
rank: 748
score: 99.26657540457589
patch: mant = list . substring ( 0 , exp CaMeL Pos ) ;
rank: 748
score: 99.26011439732143
patch: mant = str . substring ( $NUMBER$ - exp CaMeL Pos ) ;
rank: 748
score: 99.24727085658482
patch: exp = create CaMeL Long ( 0 , exp CaMeL Pos ) ;
rank: 748
score: 99.20426722935268
patch: mant = mant . equals ( 0 , exp CaMeL Pos ) ;
rank: 748
score: 99.11324055989583
patch: label = str . substring ( exp CaMeL Pos ) ;
rank: 749
score: 99.29717145647321
patch: new Number CaMeL Format CaMeL Exception ( str + $STRING$ ) ; }
rank: 749
score: 99.27495783025569
patch: if ( exp CaMeL Pos >= dec CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( str +
rank: 749
score: 99.16485595703125
patch: mant = System . get CaMeL Property ( $STRING$ ) ;
rank: 749
score: 99.11269124348958
patch: sheet = str . substring ( exp CaMeL Pos ) ;
rank: 750
score: 99.26575520833333
patch: mant = str . substring ( 0 , exp CaMeL Pos int ) ;
rank: 750
score: 99.25927734375
patch: return str . substring ( 0 , exp CaMeL Pos , 1 ) ;
rank: 750
score: 99.16214693509616
patch: mant = str . substring ( exp CaMeL Pos + 1 ;
rank: 751
score: 99.28989479758523
patch: exp CaMeL Pos = dec CaMeL Pos + 1 ;
rank: 751
score: 99.27435857599431
patch: if ( exp CaMeL Pos > 0 && exp CaMeL Pos < str . length ( ) - 1 ) {
rank: 751
score: 99.26575520833333
patch: mant = str . substring ( 0 , [ exp CaMeL Pos ) ;
rank: 751
score: 99.20379169170673
patch: return new Character ( 0 , exp CaMeL Pos ) ; }
rank: 751
score: 99.11212768554688
patch: return new Double ( exp CaMeL Pos ) ;
rank: 752
score: 99.27426292782738
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos + 1 ) ; }
rank: 752
score: 99.26526750837054
patch: exp CaMeL Pos = str . substring ( 0 , $NUMBER$ ) ;
rank: 752
score: 99.25880533854166
patch: mant += str . substring ( 0 , exp CaMeL Pos - ) ;
rank: 752
score: 99.15794959435097
patch: sb . substring ( 0 , exp CaMeL Pos ) ; ;
rank: 753
score: 99.26517159598214
patch: mant = str . substring ( 0 , 1 - 1 ) ;
rank: 753
score: 99.25823567708333
patch: mant = str . substring ( exp CaMeL Pos - 1 1 ) ;
rank: 753
score: 99.2025146484375
patch: mant = mant . substring ( $NUMBER$ , exp CaMeL Pos ) ;
rank: 753
score: 99.15793081430289
patch: mant = new Long ( str . length ( ) ) ;
rank: 753
score: 99.1116943359375
patch: mant = new double [ exp CaMeL Pos ] ;
rank: 754
score: 99.27402131453805
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) && exp CaMeL Pos < exp CaMeL Pos )
rank: 754
score: 99.25672258649554
patch: mant = $STRING$ . substring ( 1 , exp CaMeL Pos ) ;
rank: 754
score: 99.24394880022321
patch: throw new Number CaMeL Format CaMeL Exception ( str , 0 ) ;
rank: 754
score: 99.20221819196429
patch: tmp = str . substring ( str . length ( ) ) ;
rank: 754
score: 99.1565692608173
patch: mant = new Double ( 0 , exp CaMeL Pos ) ;
rank: 754
score: 99.11018676757813
patch: mant = $STRING$ + exp CaMeL Pos ; }
rank: 755
score: 99.28227015904018
patch: mant = str . substring ( $NUMBER$ , dec CaMeL Pos ) ;
rank: 755
score: 99.27379789806548
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) || last CaMeL Char != $STRING$ )
rank: 755
score: 99.26250813802083
patch: double exp = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 755
score: 99.25584193638393
patch: mant = str . substring ( 0 ++ exp CaMeL Pos ) ;
rank: 755
score: 99.15622965494792
patch: mant = str . equals ( exp CaMeL Pos ) ;
rank: 755
score: 99.10978560014205
patch: mant = new Big CaMeL Integer ( str ) ;
rank: 756
score: 99.27364676339286
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) [ 0 ] ;
rank: 756
score: 99.26456124441964
patch: dec = str . substring ( 0 , last CaMeL Char ) ;
rank: 756
score: 99.25555419921875
patch: mant = str . substring ( 0 = exp CaMeL Pos ) ;
rank: 756
score: 99.15456918569711
patch: mant = $STRING$ . equals ( exp CaMeL Pos ) ; }
rank: 756
score: 99.1094258626302
patch: inst = str . substring ( exp CaMeL Pos ) ;
rank: 757
score: 99.26380266462054
patch: throw new Number CaMeL Format CaMeL Exception ( mant + $STRING$ ) ;
rank: 757
score: 99.26149204799107
patch: if ( exp CaMeL Pos > 0 ) { mant = null ;
rank: 757
score: 99.25513712565105
patch: mant = str . substring ( 0 + $NUMBER$ ) ;
rank: 757
score: 99.23976643880208
patch: exp = str . index CaMeL Of ( $STRING$ ) ;
rank: 757
score: 99.20163399832589
patch: mant = in . substring ( str . length ( ) ) ;
rank: 757
score: 99.15438842773438
patch: mant = new Double ( exp CaMeL Pos ) ; }
rank: 757
score: 99.10911976207386
patch: mant = new Float ( exp CaMeL Pos ) ;
rank: 758
score: 99.27695138113839
patch: mant = str . substring ( 0 , 1 ) + 1 ;
rank: 758
score: 99.27338115985577
patch: dec = str . substring ( dec CaMeL Pos + 1 ,
rank: 758
score: 99.26187569754464
patch: mant = str . substring ( exp CaMeL Pos ) + $STRING$ ;
rank: 758
score: 99.25910295758929
patch: exp = $STRING$ . substring ( 0 , dec CaMeL Pos ) ;
rank: 758
score: 99.25406319754464
patch: mant = str . substring ( 0 > exp CaMeL Pos ) ;
rank: 758
score: 99.2393329326923
patch: mant = new Float ( exp CaMeL Pos + 1 ) ;
rank: 758
score: 99.15359262319711
patch: mant = ( exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 758
score: 99.10811360677083
patch: frame = str . substring ( exp CaMeL Pos ) ;
rank: 759
score: 99.27362530048077
patch: exp = null ; } else { exp = null ; }
rank: 759
score: 99.27230980282738
patch: mant = str . substring ( 0 , exp CaMeL Pos ) ; } else { mant = str ;
rank: 759
score: 99.26180826822916
patch: String value = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 759
score: 99.25191824776786
patch: mant else mant = str . substring ( exp CaMeL Pos ) ;
rank: 759
score: 99.2373798076923
patch: exp = str . [ dec CaMeL Pos + 1 ] ;
rank: 759
score: 99.10788796164773
patch: mant = new Big CaMeL Decimal ( str ) ;
rank: 760
score: 99.27223899147727
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp . length ( ) - 1 ) ;
rank: 760
score: 99.26341756184895
patch: throw new Number CaMeL Format CaMeL Exception ( 0 ) ;
rank: 760
score: 99.25150923295455
patch: mant = str . substring ( - 1 ) ;
rank: 760
score: 99.23687189275569
patch: return create CaMeL Long ( str + $STRING$ ) ;
rank: 760
score: 99.1515362079327
patch: break . substring ( 0 , exp CaMeL Pos ) ; }
rank: 760
score: 99.1072998046875
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 761
score: 99.2720235188802
patch: exp CaMeL Pos = dec CaMeL Pos + 1 ; }
rank: 761
score: 99.2606201171875
patch: else mant = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 761
score: 99.20042201450893
patch: return $STRING$ . substring ( 0 , exp CaMeL Pos ) ; }
rank: 761
score: 99.15133901742789
patch: mant = str . to CaMeL Char CaMeL Array ( ) ;
rank: 761
score: 99.10723876953125
patch: if ( str . starts CaMeL With ( $STRING$ ) )
rank: 762
score: 99.27192826704545
patch: if ( exp CaMeL Pos > 1 && exp CaMeL Pos < str . length ( ) - 1 ) {
rank: 762
score: 99.26319231305804
patch: dec = str . substring ( last CaMeL Char + 1 ) ;
rank: 762
score: 99.26007080078125
patch: mant = str . substring ( 0 , exp CaMeL Pos ) +
rank: 762
score: 99.25660923549107
patch: exp CaMeL Pos = create CaMeL Big CaMeL Integer ( str ) ;
rank: 762
score: 99.25062779017857
patch: mant = str . substring ( substring , exp CaMeL Pos ) ;
rank: 762
score: 99.23113544170673
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ;
rank: 762
score: 99.15094463641827
patch: mant = 0 ; exp CaMeL Pos = exp CaMeL Pos ;
rank: 762
score: 99.10701497395833
patch: dim = str . substring ( exp CaMeL Pos ) ;
rank: 763
score: 99.27159772600446
patch: d = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 763
score: 99.25959995814732
patch: mant = random . substring ( 0 , exp CaMeL Pos ) ;
rank: 763
score: 99.25655691964286
patch: if ( last CaMeL Char != $STRING$ ) { exp = null ;
rank: 763
score: 99.25027901785714
patch: str = str . substring ( $NUMBER$ , exp CaMeL Pos ) ;
rank: 763
score: 99.10675048828125
patch: return new Integer ( str . trim ( ) ) ;
rank: 764
score: 99.26004464285714
patch: return create CaMeL Long ( str ) ; } mant = null ;
rank: 764
score: 99.25642613002232
patch: mant = str . substring ( 0 , 0 - 1 ) ;
rank: 764
score: 99.24955531529018
patch: mant = str . substring ( $STRING$ + exp CaMeL Pos ) ;
rank: 764
score: 99.22732309194711
patch: mant = str . [ dec CaMeL Pos + 1 ] ;
rank: 764
score: 99.14976149338942
patch: mant = str . index CaMeL Of ( ) ; break ;
rank: 764
score: 99.10641915457589
patch: mant = str ; break ;
rank: 765
score: 99.27083914620536
patch: dec += str . substring ( dec CaMeL Pos + 1 ) ;
rank: 765
score: 99.25442504882812
patch: exp = null ; } else { exp = null ;
rank: 765
score: 99.24888258713942
patch: mant = str . substring ( 0 , - 0 ) ;
rank: 765
score: 99.22661884014423
patch: exp = new Integer ( exp CaMeL Pos + 1 ) ;
rank: 765
score: 99.149169921875
patch: mant = Double . parse CaMeL Double ( str ) ;
rank: 765
score: 99.10538736979167
patch: s = str . substring ( exp CaMeL Pos ) ;
rank: 766
score: 99.27029551630434
patch: if ( exp CaMeL Pos <= - 1 && exp CaMeL Pos < str . length ( ) - 1 ) {
rank: 766
score: 99.25436636117789
patch: mant = str . substring ( exp CaMeL Pos + 1 ,
rank: 766
score: 99.22365159254808
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ + str ;
rank: 766
score: 99.19681490384616
patch: return new String ( 0 , exp CaMeL Pos ) ; }
rank: 766
score: 99.14838115985577
patch: return create CaMeL Integer ( str , exp CaMeL Pos ) ;
rank: 766
score: 99.10502115885417
patch: name = str . substring ( exp CaMeL Pos ) ;
rank: 767
score: 99.27010444972827
patch: if ( ! Character . is CaMeL Digit ( exp CaMeL Pos ) && exp CaMeL Pos < dec CaMeL Pos )
rank: 767
score: 99.25885881696429
patch: exp = new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; }
rank: 767
score: 99.25660923549107
patch: mant = value . substring ( exp CaMeL Pos + 1 ) ;
rank: 767
score: 99.24522181919643
patch: mant . mant = str . substring ( exp CaMeL Pos ) ;
rank: 767
score: 99.19629778180804
patch: return str . substring ( 0 , exp CaMeL Pos ) ; ;
rank: 767
score: 99.10497029622395
patch: int exp CaMeL Pos = exp CaMeL Pos + 1 ;
rank: 768
score: 99.2697986421131
patch: dec CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; }
rank: 769
score: 99.26975416100544
patch: tmp = create CaMeL Long ( str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ) ;
rank: 769
score: 99.2573711688702
patch: exp = create CaMeL Big CaMeL Integer ( str ) ; }
rank: 769
score: 99.25443522135417
patch: mant = Math . substring ( 0 , exp CaMeL Pos ) ; }
rank: 769
score: 99.19446672712054
patch: mant = start . substring ( exp CaMeL Pos - 1 ) ;
rank: 769
score: 99.10035196940105
patch: img = str . substring ( exp CaMeL Pos ) ;
rank: 770
score: 99.21461838942308
patch: mant = new Long ( exp CaMeL Pos + 1 ) ;
rank: 770
score: 99.14407348632812
patch: throw new Number CaMeL Format CaMeL Exception ( exp ) ;
rank: 770
score: 99.09915161132812
patch: return new Number ( str . trim ( ) ) ;
rank: 771
score: 99.2451883951823
patch: return create CaMeL Long ( str + $STRING$ ) ; }
rank: 771
score: 99.14395141601562
patch: mant = str . char CaMeL At ( max ) ;
rank: 771
score: 99.09836832682292
patch: mant = str + $STRING$ + exp CaMeL Pos ; }
rank: 772
score: 99.2685879794034
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; break ;
rank: 772
score: 99.25392503004808
patch: mant = exp CaMeL Pos + str . trim ( ) ;
rank: 772
score: 99.2484600360577
patch: mant = str . to CaMeL Big CaMeL Integer ( ) ;
rank: 772
score: 99.24466646634616
patch: exp = new Number ( exp CaMeL Pos + 1 ) ;
rank: 772
score: 99.24046979631696
patch: mant = str . exp . substring ( exp CaMeL Pos ) ;
rank: 772
score: 99.18626990685097
patch: mant = ( Integer ) mant . get ( 0 ) ;
rank: 772
score: 99.14180814302884
patch: mant = str . equals ( exp CaMeL Pos ) ; }
rank: 772
score: 99.09827677408855
patch: mant = chars . substring ( exp CaMeL Pos ) ;
rank: 773
score: 99.24539888822116
patch: return new Number CaMeL Format CaMeL Exception ( $STRING$ ) ; }
rank: 773
score: 99.2425067608173
patch: exp = new Big CaMeL Integer ( exp CaMeL Pos ) ;
rank: 773
score: 99.21084359975961
patch: exp = new Long ( exp CaMeL Pos + 1 ) ;
rank: 773
score: 99.14119779146634
patch: mant = new mant ( str , exp CaMeL Pos ) ;
rank: 773
score: 99.09808904474431
patch: mant = new byte [ exp CaMeL Pos ] ;
rank: 774
score: 99.25318254743304
patch: mant = value . substring ( exp CaMeL Pos - 1 ) ;
rank: 774
score: 99.24124849759616
patch: if ( exp CaMeL Pos <= str . length ( ) )
rank: 774
score: 99.23992919921875
patch: mant = str . substring ( 0 + 0 , 1 ) ;
rank: 774
score: 99.1791522686298
patch: mant = ( mant . length ( ) - $NUMBER$ ) ;
rank: 774
score: 99.1405537923177
patch: mant = str . index CaMeL Of ( str ) ;
rank: 774
score: 99.09488932291667
patch: tmp = str . substring ( exp CaMeL Pos ) ;
rank: 775
score: 99.26741166548295
patch: if ( exp CaMeL Pos > dec CaMeL Pos ) { return create CaMeL Long ( exp CaMeL Pos ) ;
rank: 775
score: 99.2421875
patch: return create CaMeL Big CaMeL Integer ( str + $STRING$ ) ;
rank: 775
score: 99.23874918619792
patch: mant = str . substring ( $NUMBER$ , 0 ) ;
rank: 775
score: 99.23827107747395
patch: dec = str . index CaMeL Of ( $STRING$ ) ;
rank: 775
score: 99.14026896158855
patch: break . substring ( 0 , exp CaMeL Pos ) ;
rank: 775
score: 99.09400431315105
patch: template = str . substring ( exp CaMeL Pos ) ;
rank: 776
score: 99.20880596454327
patch: exp = str . [ exp CaMeL Pos + 1 ] ;
rank: 776
score: 99.0928446451823
patch: ch = str . substring ( exp CaMeL Pos ) ;
rank: 777
score: 99.23268479567308
patch: mant = str . length ( ) - dec CaMeL Pos ;
rank: 777
score: 99.20392315204327
patch: mant = str . [ exp CaMeL Pos + 1 ] ;
rank: 777
score: 99.09266153971355
patch: null = str . substring ( exp CaMeL Pos ) ;
rank: 778
score: 99.26680324388587
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos <= str . length ( ) - 1 ) {
rank: 778
score: 99.24019681490384
patch: return create CaMeL Big CaMeL Integer ( exp CaMeL Pos ) ;
rank: 778
score: 99.23516845703125
patch: mant += str . substring ( exp CaMeL Pos , 1 ) ;
rank: 778
score: 99.09161987304688
patch: mant = $STRING$ . trim ( ) ; }
rank: 779
score: 99.26626441592262
patch: mant = str . substring ( dec CaMeL Pos + 1 ) [ dec CaMeL Pos - 1 ] ;
rank: 779
score: 99.2396991436298
patch: return new Big CaMeL Integer ( exp CaMeL Pos ) ; }
rank: 779
score: 99.17022705078125
patch: mant = ( int ) str . length ( ) ;
rank: 779
score: 99.09065755208333
patch: mant = str . substring ( exp CaMeL Pos } ;
rank: 780
score: 99.249755859375
patch: mant = str . substring ( exp CaMeL Pos - substring ) ;
rank: 780
score: 99.23469761439732
patch: mant = substring ( exp CaMeL Pos - exp CaMeL Pos ) ;
rank: 780
score: 99.2330830891927
patch: return create CaMeL Long ( str ) ; } else {
rank: 780
score: 99.22353293678977
patch: mant = str . to CaMeL Float ( ) ;
rank: 780
score: 99.1317647298177
patch: sb . append ( 0 , exp CaMeL Pos ) ;
rank: 780
score: 99.08922322591145
patch: final int exp CaMeL Pos = exp CaMeL Pos ) ;
rank: 781
score: 99.24913736979167
patch: mant = str . substring ( 0 , exp CaMeL Pos ? 1 ]
rank: 781
score: 99.23260028545673
patch: return new Number CaMeL Format CaMeL Exception ( str ) ; }
rank: 781
score: 99.19803873697917
patch: return new Long ( exp CaMeL Pos + 1 ) ;
rank: 781
score: 99.0879239169034
patch: mant = str . trim ( ) ; } }
rank: 782
score: 99.26535268930289
patch: return create CaMeL Integer ( 0 , exp CaMeL Pos ) ;
rank: 782
score: 99.23694786658653
patch: dec = str . substring ( 0 , 1 ) ; }
rank: 782
score: 99.23147348257211
patch: throw new Number CaMeL Format CaMeL Exception ( 0 ) ; }
rank: 782
score: 99.22021484375
patch: exp = str . substring ( exp CaMeL Pos + 1 ,
rank: 782
score: 99.16849459134616
patch: return new str . substring ( exp CaMeL Pos ) ; }
rank: 782
score: 99.12910970052083
patch: mant = str . substring ( 0 , exp ) ;
rank: 782
score: 99.08662923177083
patch: return new Number ( str . length ( ) ) ;
rank: 783
score: 99.24822591145833
patch: return mant . str . substring ( 0 , exp CaMeL Pos ) ;
rank: 783
score: 99.1963641826923
patch: exp = str . to CaMeL Big CaMeL Integer ( ) ;
rank: 783
score: 99.16701096754808
patch: mant = new Integer ( mant . length ( ) ) ;
rank: 783
score: 99.12782796223958
patch: mant += str . index CaMeL Of ( $STRING$ ) ;
rank: 784
score: 99.26499720982143
patch: token = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 784
score: 99.23609337439903
patch: exp = new Number ( dec CaMeL Pos + 1 ) ;
rank: 784
score: 99.23195103236607
patch: mant = str . substring ( str . length ( ) - ;
rank: 784
score: 99.19420447716347
patch: exp = str . length ( ) - exp CaMeL Pos ;
rank: 784
score: 99.08470662434895
patch: if ( exp CaMeL Pos == exp CaMeL Pos ) {
rank: 785
score: 99.2645596590909
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; dec = null ;
rank: 785
score: 99.21646118164062
patch: throw new Number CaMeL Format CaMeL Exception ( $NUMBER$ ) ;
rank: 785
score: 99.08410034179687
patch: mant = exp CaMeL Pos ; break ; }
rank: 786
score: 99.26434326171875
patch: t = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 786
score: 99.23484450120192
patch: return create CaMeL Big CaMeL Integer ( last CaMeL Char ) ;
rank: 786
score: 99.21535081129808
patch: dec = str . substring ( 0 , - 1 ) ;
rank: 786
score: 99.20842895507812
patch: exp = str . substring ( 1 ) ;
rank: 786
score: 99.16506723257211
patch: mant = new int [ str . length ( ) ] ;
rank: 786
score: 99.12135823567708
patch: mant = Math . round ( exp CaMeL Pos ) ;
rank: 786
score: 99.08249918619792
patch: lm = str . substring ( exp CaMeL Pos ) ;
rank: 787
score: 99.26404918323864
patch: dec = str . substring ( 0 , exp CaMeL Pos , str . length ( ) - 1 ) ;
rank: 787
score: 99.24715750558036
patch: mant = str . substring ( exp CaMeL Pos ) + $NUMBER$ ;
rank: 787
score: 99.22977992466518
patch: mant = str . substring ( null , exp CaMeL Pos ) ;
rank: 787
score: 99.2081807454427
patch: dec = str . substring ( 0 , 0 ) ;
rank: 787
score: 99.1642596905048
patch: mant = str . substring ( 0 , - $NUMBER$ ) ;
rank: 787
score: 99.082275390625
patch: mant = str . substring ( last CaMeL Char ) ;
rank: 788
score: 99.26404680524554
patch: c = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 788
score: 99.24590192522321
patch: mant = Math . parse CaMeL Int ( exp CaMeL Pos ) ;
rank: 788
score: 99.23227761008523
patch: exp = new Number ( exp CaMeL Pos ) ;
rank: 788
score: 99.22885567801339
patch: mant += str . substring ( exp CaMeL Pos - $NUMBER$ ) ;
rank: 788
score: 99.18916829427083
patch: return new Number ( exp CaMeL Pos + 1 ) ;
rank: 788
score: 99.1614239032452
patch: mant = ( String ) mant . get ( 0 ) ;
rank: 788
score: 99.11940511067708
patch: mant = str . substring ( 0 , max ) ;
rank: 788
score: 99.0818379720052
patch: v = str . substring ( exp CaMeL Pos ) ;
rank: 789
score: 99.20520958533653
patch: exp = str . substring ( dec CaMeL Pos + 1 ,
rank: 789
score: 99.11890758167614
patch: mant = str . split ( $STRING$ ) ; }
rank: 789
score: 99.08017985026042
patch: return new Integer ( exp CaMeL Pos - 1 ) ;
rank: 790
score: 99.26181862571023
patch: if ( exp CaMeL Pos > dec CaMeL Pos && exp CaMeL Pos < str . length ( ) ) {
rank: 790
score: 99.22785295758929
patch: mant = str . substring ( name . length ( ) ) ;
rank: 790
score: 99.16009990985577
patch: return new Long ( str . length ( ) ) ; }
rank: 790
score: 99.11515299479167
patch: mant = str . length ( ) + $NUMBER$ ; }
rank: 790
score: 99.07987467447917
patch: temp = str . substring ( exp CaMeL Pos ) ;
rank: 791
score: 99.24545288085938
patch: mant = exp . substring ( exp CaMeL Pos ) ;
rank: 791
score: 99.2276611328125
patch: mant = str . substring ( exp CaMeL Pos ] 1 ) ;
rank: 791
score: 99.2047588641827
patch: exp = str . substring ( 0 , $NUMBER$ ) ; }
rank: 791
score: 99.18473307291667
patch: throw new Number CaMeL Format CaMeL Exception ( 1 ) ;
rank: 791
score: 99.1573016826923
patch: return str . substring ( $NUMBER$ , exp CaMeL Pos ) ;
rank: 791
score: 99.07928466796875
patch: exp CaMeL Pos = str . length ( ) ; }
rank: 792
score: 99.22898512620192
patch: return create CaMeL Long ( str , dec CaMeL Pos ) ;
rank: 792
score: 99.22714669363839
patch: mant = str . substring ( 0 * exp CaMeL Pos ) ;
rank: 792
score: 99.18410081129808
patch: return str . substring ( 0 , dec CaMeL Pos ) ;
rank: 792
score: 99.156982421875
patch: mant = mant . to CaMeL String ( ) ;
rank: 792
score: 99.1135965983073
patch: mant = str . length ( ) - 0 ; }
rank: 792
score: 99.07904607599431
patch: mant = str . substring ( 0 ) ; }
rank: 793
score: 99.26096413352273
patch: dec = str . substring ( dec CaMeL Pos + 1 ) + str . length ( ) - 1 ;
rank: 793
score: 99.24462018694196
patch: prefix = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 793
score: 99.2266845703125
patch: = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 793
score: 99.1565185546875
patch: mant = str . equals ( $STRING$ ) ;
rank: 794
score: 99.2259012858073
patch: mant = substring ( str . length ( ) ) ;
rank: 794
score: 99.15634390024039
patch: { mant = str . substring ( exp CaMeL Pos ) ;
rank: 794
score: 99.0743916829427
patch: retval = str . substring ( exp CaMeL Pos ) ;
rank: 795
score: 99.26081649116848
patch: mant = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos , exp CaMeL Pos ) ; }
rank: 795
score: 99.24386160714286
patch: loc = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 795
score: 99.15518188476562
patch: return new int [ ] { exp CaMeL Pos } ;
rank: 795
score: 99.10990397135417
patch: mant = str . length ( ) ; break ; }
rank: 796
score: 99.25951038707386
patch: exp = str . substring ( 0 , exp CaMeL Pos , str . length ( ) - 1 ) ;
rank: 796
score: 99.1549541766827
patch: mant = new String ( str . length ( ) ) ;
rank: 796
score: 99.10808771306819
patch: mant = str . length ( ) ; break ;
rank: 796
score: 99.0726318359375
patch: cp = str . substring ( exp CaMeL Pos ) ;
rank: 797
score: 99.10440063476562
patch: mant ; } mant = str . trim ( ) ;
rank: 797
score: 99.07262166341145
patch: script = str . substring ( exp CaMeL Pos ) ;
rank: 798
score: 99.2188720703125
patch: mant = str . substring ( 0 + exp CaMeL Pos ;
rank: 798
score: 99.21771850585938
patch: return create CaMeL Integer ( str ) ; }
rank: 798
score: 99.17914373224431
patch: return create CaMeL Integer ( last CaMeL Char ) ;
rank: 798
score: 99.0717264811198
patch: mant = str . append ( exp CaMeL Pos ) ;
rank: 799
score: 99.25861150568181
patch: if ( exp CaMeL Pos >= - 1 && exp CaMeL Pos < str . length ( ) - 1 )
rank: 799
score: 99.24160531850961
patch: assert str . substring ( 0 , exp CaMeL Pos ) ;
rank: 799
score: 99.21768892728366
patch: dec = str . index CaMeL Of ( $STRING$ ) ; }
rank: 799
score: 99.15090110085227
patch: mant = str . length ( ) - $NUMBER$ ;
rank: 799
score: 99.0711669921875
patch: m = str . substring ( exp CaMeL Pos ) ;
rank: 800
score: 99.24025181361607
patch: if = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 800
score: 99.17788461538461
patch: throw new Number CaMeL Format CaMeL Exception ( str + $STRING$ ,
rank: 800
score: 99.15057842548077
patch: mant = ( int ) str . substring ( $NUMBER$ ) ;
rank: 800
score: 99.10286458333333
patch: mant = str . substring ( 0 , exp ; }
rank: 800
score: 99.07083129882812
patch: stmt = str . substring ( exp CaMeL Pos ) ;
rank: 801
score: 99.2579345703125
patch: text = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 801
score: 99.24005681818181
patch: mant = exp CaMeL Pos - exp CaMeL Pos ;
rank: 801
score: 99.21487426757812
patch: dec = str . length ( ) - 1 ; }
rank: 801
score: 99.21109008789062
patch: mant = str . substring ( exp CaMeL Pos - ;
rank: 801
score: 99.20033616286058
patch: return create CaMeL Long ( str , last CaMeL Char ) ;
rank: 801
score: 99.19716233473558
patch: mant = str . substring ( dec CaMeL Pos ] ) ;
rank: 801
score: 99.06919352213542
patch: mant = str . trim ( ) ; } else {
rank: 802
score: 99.25757774939903
patch: exp = str . substring ( ! exp CaMeL Pos ) ;
rank: 802
score: 99.21019568810097
patch: if ( exp CaMeL Pos < dec CaMeL Pos - 1 )
rank: 802
score: 99.17478590745192
patch: try { return create CaMeL Long ( last CaMeL Char ) ;
rank: 802
score: 99.10137939453125
patch: mant = str . substring ( 0 , exp CaMeL Pos
rank: 802
score: 99.06865900213069
patch: exp CaMeL Pos = str . length ( ) ;
rank: 803
score: 99.2574795809659
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) && last CaMeL Char != null ) {
rank: 803
score: 99.23910086495536
patch: buffer = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 803
score: 99.17252604166667
patch: exp = str [ exp CaMeL Pos - 1 ] ;
rank: 803
score: 99.0679423014323
patch: rule = str . substring ( exp CaMeL Pos ) ;
rank: 804
score: 99.25724574497768
patch: if ( exp == str . length ( ) - 1 ) {
rank: 804
score: 99.20956420898438
patch: mant = str . substring ( 1 , $NUMBER$ ) ;
rank: 804
score: 99.20479329427083
patch: exp = new Number ( exp CaMeL Pos ) ; }
rank: 804
score: 99.19866943359375
patch: throw new Number CaMeL Format CaMeL Exception ( null ) ;
rank: 804
score: 99.19414813701923
patch: mant = str . char CaMeL At ( - 1 ) ;
rank: 804
score: 99.17197487571023
patch: return create CaMeL Long ( exp CaMeL Pos ) ;
rank: 804
score: 99.0927225748698
patch: mant = str . trim ( exp CaMeL Pos ) ;
rank: 804
score: 99.0675557454427
patch: head = str . substring ( exp CaMeL Pos ) ;
rank: 805
score: 99.20944213867188
patch: mant += str . substring ( 0 , 1 ) ;
rank: 805
score: 99.19385704627403
patch: ! Character . is CaMeL Digit ( last CaMeL Char ) ;
rank: 805
score: 99.14639986478366
patch: mant = str . substring ( 0 , scale ) ; }
rank: 805
score: 99.092041015625
patch: mant = min . substring ( exp CaMeL Pos ) ;
rank: 805
score: 99.0672607421875
patch: int exp CaMeL Pos = str . length ( ) ;
rank: 806
score: 99.25680106026786
patch: mant = str . substring ( ! exp CaMeL Pos ) ; }
rank: 806
score: 99.23839460100446
patch: e = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 806
score: 99.2088153545673
patch: mant . = str . substring ( exp CaMeL Pos ) ;
rank: 806
score: 99.20308837890624
patch: exp = create CaMeL Long ( str ) ;
rank: 806
score: 99.19862717848558
patch: dec = new Number CaMeL Format CaMeL Exception ( str ) ;
rank: 806
score: 99.16504923502605
patch: mant = str [ exp CaMeL Pos - 1 ] ;
rank: 806
score: 99.09043375651042
patch: mant = str . starts CaMeL With ( str ) ;
rank: 806
score: 99.06709798177083
patch: book = str . substring ( exp CaMeL Pos ) ;
rank: 807
score: 99.25645228794643
patch: q = str . substring ( dec CaMeL Pos + 1 ) ;
rank: 807
score: 99.23761858258929
patch: text = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 807
score: 99.19966264204545
patch: throw new Number CaMeL Format CaMeL Exception ( str +
rank: 807
score: 99.19520060221355
patch: dec = str . char CaMeL At ( 0 ) ;
rank: 807
score: 99.08732096354167
patch: sb . substring ( exp CaMeL Pos + 1 ) ;
rank: 807
score: 99.06592814127605
patch: re = str . substring ( exp CaMeL Pos ) ;
rank: 808
score: 99.25641741071429
patch: mant = create CaMeL Long ( exp CaMeL Pos + 1 ) ;
rank: 808
score: 99.19265747070312
patch: exp = $STRING$ . substring ( exp CaMeL Pos ) ;
rank: 808
score: 99.16341145833333
patch: throw new Long ( exp CaMeL Pos + 1 ) ;
rank: 808
score: 99.14316813151042
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 808
score: 99.0658671061198
patch: bonus = str . substring ( exp CaMeL Pos ) ;
rank: 809
score: 99.25632546164773
patch: mant = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; exp = null ;
rank: 809
score: 99.1939697265625
patch: mant += str . substring ( exp CaMeL Pos - ) ;
rank: 809
score: 99.19215087890625
patch: mant = create CaMeL Long ( str ) ;
rank: 809
score: 99.1422870342548
patch: return $STRING$ . substring ( 0 , exp CaMeL Pos ) ;
rank: 809
score: 99.06536310369319
patch: mant = str . substring ( start ) ; }
rank: 810
score: 99.19190470377605
patch: exp = str . substring ( last CaMeL Char ) ;
rank: 810
score: 99.15867106119792
patch: exp = str [ dec CaMeL Pos - 1 ] ;
rank: 810
score: 99.08522542317708
patch: mant = Long . parse CaMeL Int ( str ) ;
rank: 810
score: 99.0652364095052
patch: return new Double ( str . length ( ) ) ;
rank: 811
score: 99.25579833984375
patch: exp = create CaMeL Integer ( exp CaMeL Pos + 1 ) ;
rank: 811
score: 99.23642306857639
patch: mant = mant . trim ( ) ;
rank: 811
score: 99.1926778157552
patch: if ( dec CaMeL Pos < dec CaMeL Pos ) {
rank: 811
score: 99.1809414950284
patch: if ( exp CaMeL Pos == - 1 ) {
rank: 811
score: 99.15584309895833
patch: throw new Number CaMeL Format CaMeL Exception ( dec ) ;
rank: 811
score: 99.08462524414062
patch: mant = max . substring ( exp CaMeL Pos ) ;
rank: 811
score: 99.06429036458333
patch: host = str . substring ( exp CaMeL Pos ) ;
rank: 812
score: 99.25571511008523
patch: if ( exp CaMeL Pos <= - 1 && exp CaMeL Pos < str . length ( ) - 1 )
rank: 812
score: 99.19058227539062
patch: mant = str . substring ( 0 - 1 ) ;
rank: 812
score: 99.17987615411931
patch: exp = str . length ( ) - 1 ;
rank: 813
score: 99.25446111505681
patch: if ( ! Character . is CaMeL Digit ( last CaMeL Char ) && last CaMeL Char >= $STRING$ ) {
rank: 813
score: 99.19076538085938
patch: return create CaMeL Integer ( str + $STRING$ ) ; }
rank: 813
score: 99.18977864583333
patch: mant += str . substring ( 0 , 0 ) ;
rank: 813
score: 99.17898559570312
patch: exp = null ; } else { mant = null ;
rank: 813
score: 99.08353678385417
patch: start = str . index CaMeL Of ( $STRING$ ) ;
rank: 813
score: 99.06317693536931
patch: mant = new Big CaMeL Decimal ( $STRING$ ) ;
rank: 814
score: 99.25436837332589
patch: p = str . substring ( 0 , dec CaMeL Pos ) ;
rank: 814
score: 99.1884432705966
patch: mant = str . length ( ) + 1 ;
rank: 814
score: 99.1815655048077
patch: mant = str . substring ( 0 , 1 ) ; ;
rank: 814
score: 99.1764803799716
patch: if ( exp CaMeL Pos <= - 1 ) {
rank: 814
score: 99.07860218394886
patch: throw ( Number CaMeL Format CaMeL Exception ) str ;
rank: 814
score: 99.06307983398438
patch: val = str . substring ( exp CaMeL Pos ) ;
rank: 815
score: 99.23403494698661
patch: expr = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 815
score: 99.18389337713069
patch: return create CaMeL Integer ( str + $STRING$ ) ;
rank: 815
score: 99.17649489182692
patch: return str . substring ( 0 + exp CaMeL Pos ) ;
rank: 815
score: 99.1737548828125
patch: exp = str . append ( $STRING$ ) ;
rank: 815
score: 99.1279296875
patch: mant = mant . index CaMeL Of ( $STRING$ ) ;
rank: 815
score: 99.06272379557292
patch: failed = str . substring ( exp CaMeL Pos ) ;
rank: 816
score: 99.25390625
patch: return create CaMeL Big CaMeL Integer ( dec CaMeL Pos + 1 , exp CaMeL Pos ) ; } else {
rank: 816
score: 99.23394775390625
patch: list = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 816
score: 99.1738993326823
patch: mant = str . substring ( 0 , true ) ;
rank: 816
score: 99.1660664876302
patch: mant = null ; } else { exp = null ;
rank: 816
score: 99.12298583984375
patch: mant = ( String ) mant . trim ( ) ;
rank: 816
score: 99.07619406960227
patch: mant = str . index CaMeL Of ( ) ;
rank: 816
score: 99.06178792317708
patch: obj = str . substring ( exp CaMeL Pos ) ;
rank: 817
score: 99.25339577414773
patch: if ( exp CaMeL Pos > - 1 && exp CaMeL Pos >= str . length ( ) - 1 )
rank: 817
score: 99.23388671875
patch: mant = str . substring ( exp CaMeL Pos * $NUMBER$ ) ;
rank: 817
score: 99.17922973632812
patch: return create CaMeL Long ( exp CaMeL Pos ) ; }
rank: 817
score: 99.17344313401442
patch: mant = str . substring ( 0 , 0 ) ; ;
rank: 817
score: 99.15941365559895
patch: mant = str . char CaMeL At ( 1 ) ;
rank: 817
score: 99.12277221679688
patch: mant = ( int ) mant . length ( ) ;
rank: 817
score: 99.07417805989583
patch: sb . append ( str ) ; }
rank: 817
score: 99.06177775065105
patch: mant = str . trim ( ) + 1 ; }
rank: 818
score: 99.23243931361607
patch: mant = err . substring ( 0 , exp CaMeL Pos ) ;
rank: 818
score: 99.17563698508523
patch: if ( exp CaMeL Pos >= dec CaMeL Pos )
rank: 818
score: 99.16830105251736
patch: mant = str . start ( ) ;
rank: 818
score: 99.15941273082386
patch: exp = str . to CaMeL Float ( ) ;
rank: 818
score: 99.12257893880208
patch: return new String ( 0 , exp CaMeL Pos ) ;
rank: 818
score: 99.0718994140625
patch: mant = Math . ceil ( exp CaMeL Pos ) ;
rank: 819
score: 99.25321628736413
patch: dec = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 819
score: 99.23236955915179
patch: mant = str . substring ( exp CaMeL Pos - start ) ;
rank: 819
score: 99.1671854654948
patch: mant = substring ( exp CaMeL Pos + 1 ) ;
rank: 819
score: 99.15870666503906
patch: exp CaMeL Pos = - 1 ;
rank: 819
score: 99.1444091796875
patch: exp = str . value CaMeL Of ( $STRING$ ) ;
rank: 819
score: 99.06863403320312
patch: mant = $STRING$ . index CaMeL Of ( $STRING$ ) ;
rank: 819
score: 99.06078084309895
patch: mant = new Float ( exp CaMeL Pos ) ; }
rank: 820
score: 99.2523193359375
patch: mant = str . substring ( ! dec CaMeL Pos ) ;
rank: 820
score: 99.23020717075893
patch: mant = str . substring ( exp CaMeL Pos & 1 ) ;
rank: 820
score: 99.16434420072116
patch: mant += str . substring ( exp CaMeL Pos + ) ;
rank: 820
score: 99.14124552408855
patch: mant = str [ dec CaMeL Pos - 1 ] ;
rank: 820
score: 99.11612955729167
patch: return new Character ( 0 , exp CaMeL Pos ) ;
rank: 820
score: 99.06062825520833
patch: col = str . substring ( exp CaMeL Pos ) ;
rank: 821
score: 99.25190873579545
patch: if ( exp CaMeL Pos < dec CaMeL Pos ) { return create CaMeL Long ( exp CaMeL Pos ) ;
rank: 821
score: 99.22784423828125
patch: mant = str . substring ( start + exp CaMeL Pos ) ;
rank: 821
score: 99.15427652994792
patch: substring = str . substring ( exp CaMeL Pos ) ;
rank: 821
score: 99.1148681640625
patch: mant = ( str . length ( ) ) ;
rank: 821
score: 99.0604756673177
patch: if ( exp CaMeL Pos != exp CaMeL Pos ) {
rank: 822
score: 99.25085979959239
patch: if ( exp CaMeL Pos == - 1 && exp CaMeL Pos < str . length ( ) - 1 ) {
rank: 822
score: 99.16988118489583
patch: mant = str . substring ( - 1 ) ; }
rank: 822
score: 99.15420532226562
patch: mant = str . substring ( $NUMBER$ , $NUMBER$ ) ;
rank: 822
score: 99.1494649251302
patch: dec = str . substring ( 0 , $NUMBER$ ) ;
rank: 822
score: 99.06594848632812
patch: throw new Number CaMeL Format CaMeL Exception ( trim ) ;
rank: 822
score: 99.06043590198864
patch: sb = new Integer ( exp CaMeL Pos ) ;
rank: 823
score: 99.15384928385417
patch: mant = str . substring ( 0 : 1 ) ;
rank: 823
score: 99.11160278320312
patch: mant = str . substring ( 0 , scale ) ;
rank: 823
score: 99.06134588068181
patch: throw str . substring ( exp CaMeL Pos ) ;
rank: 823
score: 99.05898030598958
patch: mant = str . substring ( exp CaMeL Pos + 1
rank: 824
score: 99.24976457868304
patch: if ( exp CaMeL Pos < dec CaMeL Pos + 1 ) {
rank: 824
score: 99.16837158203126
patch: if ( exp CaMeL Pos < - 1 )
rank: 824
score: 99.15045166015625
patch: mant += str . substring ( 0 , mant ) ;
rank: 824
score: 99.14832560221355
patch: mant = str ; } else { mant = null ;
rank: 824
score: 99.05857340494792
patch: expr = str . substring ( exp CaMeL Pos ) ;
rank: 824
score: 99.05787242542614
patch: mant = str . length ( ) - 0 ;
rank: 825
score: 99.24929942255434
patch: exp CaMeL Pos = str . substring ( dec CaMeL Pos + 1 , dec CaMeL Pos ) ; } else {
rank: 825
score: 99.22637939453125
patch: mant = str . value . substring ( exp CaMeL Pos ) ;
rank: 825
score: 99.16754705255681
patch: if ( exp CaMeL Pos > exp CaMeL Pos )
rank: 825
score: 99.16004527698864
patch: dec = str . to CaMeL String ( ) ;
rank: 825
score: 99.14840698242188
patch: mant = str . substring ( 0 , false ) ;
rank: 825
score: 99.14821555397727
patch: mant = str . to CaMeL Long ( ) ;
rank: 825
score: 99.0582275390625
patch: string = str . substring ( exp CaMeL Pos ) ;
rank: 826
score: 99.24909774116848
patch: if ( exp CaMeL Pos == exp CaMeL Pos ) { throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;
rank: 826
score: 99.15910200639205
patch: return create CaMeL Long ( str , str ) ;
rank: 826
score: 99.14058430989583
patch: mant = str . substring ( 0 + 0 ) ;
rank: 826
score: 99.1056416829427
patch: return new Integer ( mant . length ( ) ) ;
rank: 826
score: 99.05772816051136
patch: if ( exp CaMeL Pos < exp CaMeL Pos )
rank: 827
score: 99.16658528645833
patch: exp = str . length ( ) - 1 ; }
rank: 827
score: 99.05770874023438
patch: break str . substring ( exp CaMeL Pos ) ; }
rank: 827
score: 99.04804021661931
patch: mant ; mant = str . trim ( ) ;
rank: 828
score: 99.10117409446023
patch: mant = new int [ exp CaMeL Pos ] ;
rank: 828
score: 99.05752563476562
patch: return new Number ( str , exp CaMeL Pos ) ;
rank: 829
score: 99.22391183035714
patch: mant = str . substring ( 0 . length ( ) ) ;
rank: 829
score: 99.1597900390625
patch: exp CaMeL Pos = exp CaMeL Pos - 1 ;
rank: 829
score: 99.14957682291667
patch: try { if ( exp CaMeL Pos > - 1 )
rank: 829
score: 99.13768513997395
patch: mant = null ; } else { mant = str ;
rank: 829
score: 99.12767444957386
patch: try { return create CaMeL Integer ( str ) ;
rank: 829
score: 99.0574239095052
patch: parameter = str . substring ( exp CaMeL Pos ) ;
rank: 829
score: 99.04273681640625
patch: throw str + $STRING$ + exp CaMeL Pos ;
rank: 830
score: 99.22372000558036
patch: mant = value . substring ( str . length ( ) ) ;
rank: 830
score: 99.15829467773438
patch: throw new Number CaMeL Format CaMeL Exception ( str
rank: 830
score: 99.12608846028645
patch: exp = str . to CaMeL String ( ) ; }
rank: 830
score: 99.09995524088542
patch: return new Character ( str . length ( ) ) ;
rank: 830
score: 99.056884765625
patch: value = str . substring ( exp CaMeL Pos ) ;
rank: 831
score: 99.22289167131696
patch: mant = str . substring ( exp CaMeL Pos | 1 ) ;
rank: 831
score: 99.15605024857955
patch: dec = str . length ( ) - 1 ;
rank: 831
score: 99.14572143554688
patch: numeric = str . substring ( exp CaMeL Pos ) ;
rank: 831
score: 99.13480631510417
patch: str = str . substring ( 0 , 1 ) ;
rank: 831
score: 99.09756469726562
patch: return new Integer ( 0 , exp CaMeL Pos ) ;
rank: 831
score: 99.05568440755208
patch: statement = str . substring ( exp CaMeL Pos ) ;
rank: 832
score: 99.24080757472827
patch: if ( exp CaMeL Pos > dec CaMeL Pos && exp CaMeL Pos < str . length ( ) - 1 )
rank: 832
score: 99.12613932291667
patch: str = str . substring ( 0 , 0 ) ;
rank: 832
score: 99.0971171061198
patch: mant = ( Integer ) str . length ( ) ;
rank: 832
score: 99.05527750651042
patch: cached = str . substring ( exp CaMeL Pos ) ;
rank: 833
score: 99.23991593070652
patch: if ( exp CaMeL Pos < - 1 && exp CaMeL Pos > str . length ( ) - 1 ) {
rank: 833
score: 99.22146170479911
patch: mant = Math . to CaMeL String ( exp CaMeL Pos ) ;
rank: 833
score: 99.15404163707386
patch: exp = new Long ( exp CaMeL Pos ) ;
rank: 833
score: 99.12738037109375
patch: exp = null ; } else { mant = str ;
rank: 833
score: 99.12357584635417
patch: return create CaMeL Long ( last CaMeL Char ) ; }
rank: 833
score: 99.05518595377605
patch: return new Number ( 0 , exp CaMeL Pos ) ;
rank: 833
score: 99.03452370383523
patch: mant = str . trim ( ) ; ; }
rank: 834
score: 99.1512939453125
patch: exp = create CaMeL Integer ( str ) ;
rank: 834
score: 99.12495930989583
patch: mant = str . substring ( exp CaMeL Pos ] ;
rank: 834
score: 99.12234497070312
patch: exp = str . substring ( 0 - 1 ) ;
rank: 834
score: 99.0948486328125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( str ) ;
rank: 834
score: 99.05514526367188
patch: pos = str . index CaMeL Of ( $STRING$ ) ;
rank: 835
score: 99.14183553059895
patch: try { exp = create CaMeL Long ( str ) ;
rank: 835
score: 99.12454223632812
patch: mant = str . substring ( $NUMBER$ , mant ) ;
rank: 835
score: 99.09407552083333
patch: mant = str . to CaMeL Int ( ) ; }
rank: 835
score: 99.0536397298177
patch: lbl = str . substring ( exp CaMeL Pos ) ;
rank: 835
score: 99.02262573242187
patch: mant = str . substring ( exp ) ;
rank: 836
score: 99.14171346028645
patch: return new Big CaMeL Integer ( last CaMeL Char ) ;
rank: 836
score: 99.12656656901042
patch: exp = str ; } else { exp = null ;
rank: 836
score: 99.12266845703125
patch: mant = str . substring ( start ) ;
rank: 836
score: 99.11891867897727
patch: throw new Number CaMeL Format CaMeL Exception ( $STRING$ ;
rank: 836
score: 99.0940274325284
patch: mant = str . append ( $STRING$ ) ; }
rank: 836
score: 99.0495849609375
patch: return new Number ( exp CaMeL Pos ) ;
rank: 836
score: 99.0226162997159
patch: mant = str . substring ( exp ) ; }
rank: 837
score: 99.23820694633152
patch: int dec CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ )
rank: 837
score: 99.14806019176136
patch: return new Number ( exp CaMeL Pos ) ; }
rank: 837
score: 99.12204996744792
patch: if ( mant != 0 ) { mant = 0 ;
rank: 838
score: 99.21363176618304
patch: mant = Math . append ( str , exp CaMeL Pos ) ;
rank: 838
score: 99.14774169921876
patch: exp = create CaMeL Float ( str ) ;
rank: 838
score: 99.09120686848958
patch: mant = start . substring ( exp CaMeL Pos ) ;
rank: 838
score: 99.0472412109375
patch: assert str . starts CaMeL With ( $STRING$ ) ;
rank: 839
score: 99.23786727241848
patch: int exp CaMeL Pos = str . index CaMeL Of ( $STRING$ ) + str . index CaMeL Of ( $STRING$ )
rank: 839
score: 99.21162632533482
patch: mant = length . substring ( 0 , exp CaMeL Pos ) ;
rank: 839
score: 99.11725531684027
patch: mant = 0 ; mant = 0 ;
rank: 839
score: 99.11679909446023
patch: exp = str . substring ( - 1 ) ;
rank: 839
score: 99.11444091796875
patch: throw new Number CaMeL Format CaMeL Exception ( true ) ;
rank: 839
score: 99.09065755208333
patch: mant = 0 . index CaMeL Of ( $STRING$ ) ;
rank: 839
score: 99.0468417080966
patch: result = new Integer ( exp CaMeL Pos ) ;
rank: 840
score: 99.23597783627717
patch: if ( str . starts CaMeL With ( $STRING$ ) && exp CaMeL Pos < str . length ( ) ) {
rank: 840
score: 99.1129150390625
patch: return create CaMeL Number ( str ) ;
rank: 841
score: 99.21068464006696
patch: reader = str . substring ( 0 , exp CaMeL Pos ) ;
rank: 841
score: 99.14186789772727
patch: return create CaMeL Big CaMeL Integer ( mant ) ;
rank: 841
score: 99.115673828125
patch: if ( exp CaMeL Pos > 0 ) {
rank: 841
score: 99.11173502604167
patch: mant -= str . substring ( exp CaMeL Pos ) ;
rank: 841
score: 99.08458455403645
patch: return new char [ ] { exp CaMeL Pos } ;
rank: 841
score: 99.03928444602273
patch: mant = new Character ( exp CaMeL Pos ) ;
rank: 841
score: 99.01231800426136
patch: mant = str + $STRING$ + exp CaMeL Pos ;
rank: 842
score: 99.21028355189732
patch: mant = str . substring ( 0 , 0 , mant ) ;
rank: 842
score: 99.1367520419034
patch: return new Long ( exp CaMeL Pos ) ; }
rank: 842
score: 99.10863240559895
patch: exp = create CaMeL Long ( exp CaMeL Pos ) ;
rank: 842
score: 99.01090864701705
patch: mant = str . trim ( ) ; } ;
rank: 843
score: 99.13616388494319
patch: exp = create CaMeL Long ( str ) ; }
rank: 843
score: 99.12746175130208
patch: mant = null ; } else { exp = str ;
rank: 843
score: 99.11191813151042
patch: mant = str . substring ( 0 , ] ) ;
rank: 843
score: 99.10550944010417
patch: mant . substring ( 0 , exp CaMeL Pos ) ;
rank: 843
score: 99.08148871527777
patch: mant = mant . length ( ) ;
rank: 843
score: 99.03772735595703
patch: mant = exp CaMeL Pos ; }
rank: 843
score: 99.01090494791667
patch: mant += str . length ( ) ;
rank: 844
score: 99.20912388392857
patch: mant = mant . substring ( exp CaMeL Pos / 1 ) ;
rank: 844
score: 99.10238647460938
patch: mant = str . substring ( 0 , value ) ;
rank: 844
score: 99.08118693033855
patch: mant = mant . to CaMeL String ( ) ; }
rank: 844
score: 99.03636585582386
patch: mant = new char [ exp CaMeL Pos ] ;
rank: 844
score: 99.01067560369319
patch: sb . substring ( exp CaMeL Pos ) ; }
rank: 845
score: 99.20738002232143
patch: mant = Math . substring ( exp CaMeL Pos + 1 ) ;
rank: 845
score: 99.1072998046875
patch: exp = str . substring ( 0 , $STRING$ ) ;
rank: 845
score: 99.032275390625
patch: exp CaMeL Pos += exp CaMeL Pos ; }
rank: 845
score: 99.0106689453125
patch: sb . append ( exp CaMeL Pos ) ;
rank: 846
score: 99.22840947690217
patch: exp = str . substring ( dec CaMeL Pos + 1 , exp CaMeL Pos , exp CaMeL Pos ) ; }
rank: 846
score: 99.12699751420455
patch: if ( dec CaMeL Pos < dec CaMeL Pos )
rank: 846
score: 99.10135904947917
patch: mant = str . substring ( 1 + 1 ) ;
rank: 846
score: 99.0751953125
patch: mant = str . substring ( $NUMBER$ ) ; }
rank: 846
score: 99.02540172230114
patch: mant = str [ exp CaMeL Pos ] ; }
rank: 847
score: 99.10387166341145
patch: exp = str . char CaMeL At ( 1 ) ;
rank: 847
score: 99.10096324573864
patch: mant = ( mant - exp CaMeL Pos ) ;
rank: 847
score: 99.0716552734375
patch: mant = ( int ) mant . trim ( ) ;
rank: 847
score: 99.02494673295455
patch: sb = new char [ exp CaMeL Pos ] ;
rank: 847
score: 99.00476752387152
patch: mant = new Double ( 0 ) ;
rank: 848
score: 99.20003255208333
patch: mant = str . substring ( exp CaMeL Pos ) +
rank: 848
score: 99.11801979758523
patch: return create CaMeL Big CaMeL Integer ( dec ) ;
rank: 848
score: 99.10294966264205
patch: if ( exp CaMeL Pos >= - 1 ) {
rank: 848
score: 99.10005696614583
patch: mant = str . substring ( 0 : $NUMBER$ ) ;
rank: 848
score: 99.00269775390625
patch: sb . substring ( exp CaMeL Pos ) ;
rank: 849
score: 99.19919996995192
patch: mant = new byte [ str . length ( ) ] ;
rank: 849
score: 99.11536754261364
patch: if ( exp CaMeL Pos <= dec CaMeL Pos )
rank: 849
score: 99.11440207741477
patch: return create CaMeL Integer ( exp CaMeL Pos ) ;
rank: 849
score: 99.10392252604167
patch: exp = str . starts CaMeL With ( $STRING$ ) ;
rank: 849
score: 99.1020840731534
patch: exp = str . to CaMeL Long ( ) ;
rank: 849
score: 99.06766764322917
patch: mant = ( int ) str . trim ( ) ;
rank: 849
score: 99.02293812144886
patch: mant = null ; mant = null ; break ;
rank: 849
score: 99.00164240056819
patch: exp CaMeL Pos = exp CaMeL Pos - 0 ;
rank: 850
score: 99.11323686079545
patch: return create CaMeL Long ( str , dec ) ;
rank: 850
score: 99.1128262606534
patch: exp = new Float ( exp CaMeL Pos ) ;
rank: 850
score: 99.09911092122395
patch: mant = str . substring ( 1 , mant ) ;
rank: 850
score: 99.00072021484375
patch: mant += str . length ( ) ; }
rank: 851
score: 99.2180887858073
patch: tmp = str . substring ( dec CaMeL Pos ) ;
rank: 851
score: 99.1086758700284
patch: return create CaMeL Long ( str ) ; } }
rank: 851
score: 99.09865315755208
patch: mant = str . substring ( 1 ) ; break ;
rank: 851
score: 99.06600952148438
patch: mant = ( Integer ) mant . trim ( ) ;
rank: 852
score: 99.19561767578125
patch: mant = Math . trim ( exp CaMeL Pos ) ;
rank: 852
score: 99.09584554036458
patch: mant = str . substring ( $NUMBER$ + 1 ) ;
rank: 852
score: 99.06539916992188
patch: mant = ( int ) exp CaMeL Pos ;
rank: 852
score: 99.01838822798295
patch: return new Double ( exp CaMeL Pos ) ; }
rank: 852
score: 98.99889026988636
patch: mant = new Number ( exp CaMeL Pos ) ;
rank: 853
score: 99.1940166766827
patch: mant = str . substring ( exp CaMeL Pos int ) ;
rank: 853
score: 99.10108032226563
patch: mant = create CaMeL Integer ( str ) ;
rank: 853
score: 99.09473673502605
patch: mant = str . substring ( 0 / 1 ) ;
rank: 853
score: 98.99650435014205
patch: mant = str . length ( ) + $NUMBER$ ;
rank: 854
score: 99.20925668569711
patch: mant = str . substring ( dec CaMeL Pos ++ ) ;
rank: 854
score: 99.18798828125
patch: mant = str . substring ( exp CaMeL Pos / ) ;
rank: 854
score: 99.09471638997395
patch: mant = substring ( 1 , exp CaMeL Pos ) ;
rank: 855
score: 99.20415790264423
patch: { mant = str . substring ( dec CaMeL Pos ) ;
rank: 855
score: 99.09116821289062
patch: mant = str . equals ( 0 ) ;
rank: 855
score: 99.0793789950284
patch: if ( exp CaMeL Pos != - 1 ) {
rank: 855
score: 98.99543900923295
patch: exp CaMeL Pos = exp CaMeL Pos + 0 ;
rank: 856
score: 99.10296630859375
patch: exp = null ; } dec = null ;
rank: 856
score: 99.08919270833333
patch: mant += str . substring ( 0 , $NUMBER$ ) ;
rank: 856
score: 99.0838623046875
patch: return create CaMeL Long ( $STRING$ ) ;
rank: 856
score: 99.06199137369792
patch: return new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 856
score: 99.01265462239583
patch: mant = str ; }
rank: 856
score: 98.990966796875
patch: mant = str . substring ( max ) ;
rank: 857
score: 99.20177205403645
patch: mant += str . substring ( dec CaMeL Pos ) ;
rank: 857
score: 99.09719848632812
patch: exp = create CaMeL Long ( last CaMeL Char ) ;
rank: 857
score: 99.08418782552083
patch: mant = str . substring ( 0 , substring ) ;
rank: 857
score: 99.05943714488636
patch: return mant . to CaMeL String ( ) ; }
rank: 857
score: 99.01105291193181
patch: break str . substring ( exp CaMeL Pos ) ;
rank: 857
score: 98.99092102050781
patch: sb . append ( str ) ;
rank: 858
score: 99.0942049893466
patch: exp = new Integer ( exp CaMeL Pos ) ;
rank: 858
score: 99.08291625976562
patch: mant = substring ( exp CaMeL Pos ) ;
rank: 858
score: 99.07883522727273
patch: return create CaMeL Long ( str ) ; } else
rank: 858
score: 99.06844075520833
patch: exp = exp CaMeL Pos + 1 ;
rank: 858
score: 99.05740966796876
patch: return mant . to CaMeL String ( ) ;
rank: 858
score: 99.00919596354167
patch: mant = exp CaMeL Pos ; break ;
rank: 859
score: 99.19873985877403
patch: dec = str . substring ( ! dec CaMeL Pos ) ;
rank: 859
score: 99.0920743075284
patch: exp = create CaMeL Float ( str ) ; }
rank: 859
score: 99.08037775213069
patch: mant = ( mant , exp CaMeL Pos ) ;
rank: 859
score: 99.05696244673295
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 860
score: 99.19590407151442
patch: if ( is CaMeL All CaMeL Zeros ( exp ) ) {
rank: 860
score: 99.0910311612216
patch: exp = create CaMeL Integer ( str ) ; }
rank: 860
score: 99.07361949573864
patch: mant = str . char CaMeL Value ( ) ;
rank: 860
score: 99.06492106119792
patch: exp = str . trim ( ) ;
rank: 860
score: 99.05497233072917
patch: mant = str . substring ( ) ;
rank: 860
score: 99.00361772017045
patch: sb = new byte [ exp CaMeL Pos ] ;
rank: 860
score: 98.982666015625
patch: sb . append ( exp CaMeL Pos ) ; }
rank: 861
score: 99.08672540838069
patch: if ( dec CaMeL Pos > dec CaMeL Pos )
rank: 861
score: 99.0546875
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 861
score: 99.05360107421875
patch: if ( exp CaMeL Pos == - 1 )
rank: 861
score: 98.97924194335937
patch: mant = parse CaMeL Int ( str ) ;
rank: 862
score: 99.16947115384616
patch: mant = str . substring ( exp CaMeL Pos ? str ;
rank: 862
score: 99.08660333806819
patch: return new Big CaMeL Integer ( mant ) ; }
rank: 862
score: 99.07223510742188
patch: mant = create CaMeL Float ( str ) ;
rank: 862
score: 98.99896795099431
patch: mant = new Big CaMeL Integer ( 0 ) ;
rank: 862
score: 98.97739479758523
patch: mant = str . trim ( ) ; continue ;
rank: 863
score: 99.08480224609374
patch: return create CaMeL Float ( str ) ; }
rank: 863
score: 99.06060236150569
patch: mant = str . substring ( 1 ) ; ;
rank: 863
score: 99.04958274147727
patch: mant = mant . to CaMeL Int ( ) ;
rank: 864
score: 99.19273885091145
patch: buf = str . substring ( dec CaMeL Pos ) ;
rank: 864
score: 99.1683819110577
patch: int mant = str . substring ( exp CaMeL Pos ) ;
rank: 864
score: 99.06810413707386
patch: return create CaMeL Big CaMeL Integer ( $STRING$ ) ;
rank: 864
score: 99.05314497514205
patch: mant = str . substring ( - $NUMBER$ ) ;
rank: 864
score: 98.99266221788194
patch: mant = new Integer ( 0 ) ;
rank: 864
score: 98.97593994140625
patch: mant = str . equals ( str ) ;
rank: 865
score: 99.08392333984375
patch: return new Long ( exp CaMeL Pos ) ;
rank: 865
score: 99.08109907670455
patch: exp = new Number ( last CaMeL Char ) ;
rank: 865
score: 99.06647406684027
patch: return create CaMeL Float ( str ) ;
rank: 865
score: 99.04911665482955
patch: mant = 0 ; mant = exp CaMeL Pos ;
rank: 865
score: 99.04466663707386
patch: exp CaMeL Pos = dec CaMeL Pos - 1 ;
rank: 865
score: 98.99207763671875
patch: mant = mant . trim ( ) ; }
rank: 865
score: 98.97083629261364
patch: mant = str . equals ( str ) ; }
rank: 866
score: 99.04791259765625
patch: mant = str . substring ( $STRING$ ) ;
rank: 866
score: 99.03617720170455
patch: return str . to CaMeL String ( ) ; }
rank: 866
score: 98.9908114346591
patch: return str . index CaMeL Of ( $STRING$ ) ;
rank: 866
score: 98.96995960582386
patch: mant = new Long ( exp CaMeL Pos ) ;
rank: 867
score: 99.061328125
patch: mant = create CaMeL Double ( str ) ;
rank: 867
score: 99.04352361505681
patch: mant = str . length ( ) + 0 ;
rank: 867
score: 99.04191450639205
patch: mant = str . to CaMeL Double ( ) ;
rank: 867
score: 98.9759188565341
patch: mant = new String [ exp CaMeL Pos ] ;
rank: 868
score: 99.18422444661458
patch: exp = create CaMeL Integer ( exp CaMeL Pos ) ;
rank: 868
score: 99.06126819957386
patch: return str . substring ( dec CaMeL Pos ) ;
rank: 868
score: 98.97300026633523
patch: b = new Integer ( exp CaMeL Pos ) ;
rank: 869
score: 99.18208821614583
patch: mant = create CaMeL Long ( exp CaMeL Pos ) ;
rank: 869
score: 99.07037908380681
patch: return new Float ( exp CaMeL Pos ) ; }
rank: 870
score: 99.16201547475961
patch: mant = new byte [ exp CaMeL Pos + 1 ] ;
rank: 870
score: 99.03937322443181
patch: return str . substring ( 0 , 0 ) ;
rank: 870
score: 99.03326970880681
patch: exp CaMeL Pos = str . trim ( ) ;
rank: 870
score: 98.96873779296875
patch: mant = exp CaMeL Pos - 1 ; }
rank: 870
score: 98.96715698242187
patch: mant = new str . trim ( ) ;
rank: 871
score: 99.17469278971355
patch: dec = str [ dec CaMeL Pos + 1 ] ;
rank: 871
score: 99.02940673828125
patch: if ( exp CaMeL Pos <= - 1 )
rank: 871
score: 98.96701882102273
patch: mant = $STRING$ . trim ( ) ; break ;
rank: 872
score: 99.1742655436198
patch: s = str . substring ( dec CaMeL Pos ) ;
rank: 872
score: 99.1559307391827
patch: mant = exp CaMeL Pos - str . trim ( ) ;
rank: 872
score: 99.06613991477273
patch: return create CaMeL Float ( str + $STRING$ ) ;
rank: 872
score: 99.05689586292614
patch: if ( dec CaMeL Pos > - 1 ) {
rank: 872
score: 98.96671919389205
patch: result = new Double ( exp CaMeL Pos ) ;
rank: 872
score: 98.96474880642361
patch: mant = $STRING$ + exp CaMeL Pos ;
rank: 873
score: 99.15177408854167
patch: mant = decode ( str , exp CaMeL Pos ) ;
rank: 873
score: 99.0152920809659
patch: mant = str . substring ( 0 , ) ;
rank: 873
score: 98.96187744140624
patch: int exp CaMeL Pos = exp CaMeL Pos ;
rank: 874
score: 99.05463201349431
patch: return create CaMeL Number ( last CaMeL Char ) ;
rank: 874
score: 99.02278275923295
patch: exp = new Big CaMeL Integer ( $STRING$ ) ;
rank: 874
score: 99.01376342773438
patch: return str . to CaMeL String ( ) ;
rank: 874
score: 98.96554565429688
patch: mant = exp CaMeL Pos + 1 ; }
rank: 874
score: 98.96148071289062
patch: mant = str . substring ( exp CaMeL Pos
rank: 875
score: 99.16908772786458
patch: mant = str ; } else { dec = str ;
rank: 875
score: 99.15067232572116
patch: mant = exp CaMeL Pos + str . length ( ) ;
rank: 875
score: 99.05989213423295
patch: return create CaMeL Big CaMeL Decimal ( str ) ;
rank: 875
score: 99.02243874289773
patch: mant = mant ; mant = exp CaMeL Pos ;
rank: 875
score: 98.96480560302734
patch: mant = null ; break ; }
rank: 875
score: 98.95971069335937
patch: throw str . to CaMeL String ( ) ;
rank: 876
score: 99.167236328125
patch: sb = str . substring ( dec CaMeL Pos ) ;
rank: 876
score: 99.05809326171875
patch: exp CaMeL Pos = dec CaMeL Pos ; }
rank: 876
score: 99.05026245117188
patch: return create CaMeL Long ( $STRING$ ) ; }
rank: 876
score: 99.01610218394886
patch: return str . substring ( 0 , 1 ) ;
rank: 876
score: 99.0120516690341
patch: mant = ( mant . length ( ) ) ;
rank: 876
score: 98.95773315429688
patch: mant = str . trim ( ) ; ;
rank: 877
score: 99.16697184244792
patch: if ( exp CaMeL Pos == dec CaMeL Pos ) {
rank: 877
score: 99.05637428977273
patch: exp = null ; } dec = null ; }
rank: 877
score: 99.04805908203124
patch: exp = create CaMeL Double ( str ) ;
rank: 877
score: 99.01576926491477
patch: mant = str . substring ( $NUMBER$ ) ; ;
rank: 877
score: 99.01026611328125
patch: mant = str . remove ( 0 ) ;
rank: 878
score: 99.1649881998698
patch: tmp = create CaMeL Long ( exp CaMeL Pos ) ;
rank: 878
score: 99.00835503472223
patch: mant = 0 + exp CaMeL Pos ;
rank: 878
score: 98.95440063476562
patch: mant = null ; } mant = null ;
rank: 878
score: 98.94989013671875
patch: mant = ( double ) exp CaMeL Pos ;
rank: 879
score: 99.1644795735677
patch: mant = str ; } else { exp = null ;
rank: 879
score: 99.05572509765625
patch: return create CaMeL Number ( str ) ; }
rank: 879
score: 99.04268022017045
patch: return create CaMeL Long ( str , $STRING$ ) ;
rank: 879
score: 99.01340553977273
patch: mant = str . substring ( 0 : ) ;
rank: 879
score: 99.0049560546875
patch: dec = str . substring ( 1 ) ;
rank: 879
score: 98.9989901455966
patch: mant = str . substring ( str . ) ;
rank: 879
score: 98.95339965820312
patch: return new Big CaMeL Integer ( str ) ;
rank: 879
score: 98.94129096137152
patch: mant = $STRING$ . length ( ) ;
rank: 880
score: 99.16211954752605
patch: str = str . substring ( dec CaMeL Pos ) ;
rank: 880
score: 99.14825439453125
patch: mant . append ( 0 , exp CaMeL Pos ) ;
rank: 880
score: 99.04255506727431
patch: return create CaMeL Long ( 0 ) ;
rank: 880
score: 99.0389071377841
patch: throw ( Number CaMeL Format CaMeL Exception ) null ;
rank: 880
score: 98.998291015625
patch: mant = exp CaMeL Pos + 1 ;
rank: 880
score: 98.99443359375
patch: mant = str . substring ( length ) ;
rank: 880
score: 98.93928833007813
patch: mant = $STRING$ . equals ( str ) ;
rank: 881
score: 98.99739379882813
patch: if ( last CaMeL Char != $STRING$ ) {
rank: 881
score: 98.99227905273438
patch: mant = new String CaMeL Buffer ( ) ;
rank: 881
score: 98.93729248046876
patch: mant = new str . length ( ) ;
rank: 882
score: 99.14175415039062
patch: mant = Integer . substring ( exp CaMeL Pos ) ;
rank: 882
score: 99.00929953835227
patch: mant = str . substring ( 0 ] ) ;
rank: 882
score: 98.9910400390625
patch: return new Character ( exp CaMeL Pos ) ;
rank: 882
score: 98.98953857421876
patch: dec = str . append ( $STRING$ ) ;
rank: 882
score: 98.93723551432292
patch: mant = $STRING$ . trim ( ) ;
rank: 882
score: 98.9350341796875
patch: mant = str [ exp CaMeL Pos ] ;
rank: 883
score: 99.1394512469952
patch: mant = new String ( mant , exp CaMeL Pos ) ;
rank: 883
score: 99.03109130859374
patch: if ( exp CaMeL Pos >= - 1 )
rank: 883
score: 99.00719105113636
patch: mant = $STRING$ . to CaMeL String ( ) ;
rank: 883
score: 98.98334295099431
patch: mant = mant . length ( ) ; break ;
rank: 883
score: 98.98323364257813
patch: exp = str . substring ( $NUMBER$ ) ;
rank: 884
score: 99.15453084309895
patch: return create CaMeL Integer ( exp CaMeL Pos ) ; }
rank: 884
score: 99.13929239908855
patch: mant = mant . substring ( 0 , 0 ) ;
rank: 884
score: 99.036962890625
patch: if ( dec CaMeL Pos > - 1 )
rank: 884
score: 99.02200317382812
patch: throw new Long ( exp CaMeL Pos ) ;
rank: 884
score: 99.00091552734375
patch: mant = str . append ( str ) ;
rank: 884
score: 98.97494845920139
patch: mant = str . value ( ) ;
rank: 884
score: 98.92734375
patch: mant = str . trim ( ) ) ;
rank: 885
score: 99.15325927734375
patch: dec = str [ dec CaMeL Pos - 1 ] ;
rank: 885
score: 99.02112926136364
patch: exp = str . length ( ) + 1 ;
rank: 885
score: 99.02037963867187
patch: exp = exp CaMeL Pos + 1 ; }
rank: 885
score: 98.97084554036458
patch: if ( exp CaMeL Pos > 0 )
rank: 886
score: 99.15297444661458
patch: d = str . substring ( dec CaMeL Pos ) ;
rank: 886
score: 99.01873168945312
patch: mant = str ; } dec = null ;
rank: 887
score: 99.15272013346355
patch: dec = str [ exp CaMeL Pos + 1 ] ;
rank: 887
score: 99.012353515625
patch: exp CaMeL Pos = exp CaMeL Pos ) ;
rank: 887
score: 98.9170166015625
patch: mant = str . length ( ) ) ;
rank: 888
score: 99.14893595377605
patch: mant = create CaMeL Integer ( exp CaMeL Pos ) ;
rank: 888
score: 99.12894694010417
patch: 0 = str . substring ( exp CaMeL Pos ) ;
rank: 888
score: 99.01453857421875
patch: mant = null ; } dec = null ;
rank: 888
score: 98.9873046875
patch: mant += str . to CaMeL String ( ) ;
rank: 888
score: 98.97328879616477
patch: mant = str . start ( ) ; break ;
rank: 888
score: 98.90886094835069
patch: mant = exp CaMeL Pos - 0 ;
rank: 889
score: 98.97287819602273
patch: mant = new String ( exp CaMeL Pos ) ;
rank: 889
score: 98.95086669921875
patch: exp = null ; exp = null ;
rank: 889
score: 98.9077880859375
patch: mant = to CaMeL Int ( str ) ;
rank: 890
score: 99.14049275716145
patch: c = str . substring ( dec CaMeL Pos ) ;
rank: 890
score: 99.12303670247395
patch: mant = Math . start ( exp CaMeL Pos ) ;
rank: 890
score: 99.00277099609374
patch: return new Big CaMeL Integer ( mant ) ;
rank: 890
score: 98.99888305664062
patch: result = create CaMeL Long ( str ) ;
rank: 890
score: 98.98284301757812
patch: mant += str . substring ( 1 ) ;
rank: 890
score: 98.94822998046875
patch: mant = ( Float ) exp CaMeL Pos ;
rank: 890
score: 98.90790405273438
patch: mant = null ; mant = null ; }
rank: 890
score: 98.90306091308594
patch: sb . append ( $STRING$ ) ;
rank: 891
score: 98.98179117838542
patch: mant = mant ; mant = 0 ;
rank: 891
score: 98.96561008029514
patch: mant = str . iterator ( ) ;
rank: 891
score: 98.90618218315973
patch: mant = null ; mant = null ;
rank: 891
score: 98.90125189887152
patch: mant = new mant ( str ) ;
rank: 892
score: 99.12027994791667
patch: mant = out . substring ( exp CaMeL Pos ) ;
rank: 892
score: 98.99412027994792
patch: return create CaMeL Double ( str ) ;
rank: 892
score: 98.98152299360795
patch: mant = str . substring ( 1 ) ) ;
rank: 892
score: 98.96445041232639
patch: break . append ( $STRING$ ) ; }
rank: 892
score: 98.94478759765624
patch: exp = ( String ) exp CaMeL Pos ;
rank: 892
score: 98.90402560763889
patch: return str . trim ( ) ; }
rank: 892
score: 98.89722290039063
patch: mant = to CaMeL String ( str ) ;
rank: 893
score: 99.13517252604167
patch: dec = str [ exp CaMeL Pos - 1 ] ;
rank: 893
score: 99.11824544270833
patch: i = str . substring ( exp CaMeL Pos ) ;
rank: 893
score: 99.00856711647727
patch: exp = new Double ( exp CaMeL Pos ) ;
rank: 893
score: 98.98490600585937
patch: throw new Number CaMeL Format CaMeL Exception ( }
rank: 893
score: 98.98135036892361
patch: mant = str . abs ( ) ;
rank: 893
score: 98.89525146484375
patch: float exp CaMeL Pos = exp CaMeL Pos ;
rank: 894
score: 99.13295676491477
patch: switch ( exp CaMeL Pos ) { case $STRING$ :
rank: 894
score: 99.11588541666667
patch: mant = ( String ) mant . length ( ) ;
rank: 894
score: 99.00791237571023
patch: try { return create CaMeL Number ( str ) ;
rank: 894
score: 98.97929077148437
patch: return create CaMeL Double ( str ) ; }
rank: 894
score: 98.97416381835937
patch: mant = str . get ( 0 ) ;
rank: 894
score: 98.95669555664062
patch: mant = mant . length ( ) ; }
rank: 894
score: 98.94239637586806
patch: assert exp CaMeL Pos > - 1 ;
rank: 894
score: 98.895263671875
patch: str = $STRING$ + exp CaMeL Pos ; }
rank: 895
score: 99.13275146484375
patch: dec = str ; } else { dec = str ;
rank: 895
score: 98.9659423828125
patch: mant = exp CaMeL Pos + 0 ;
rank: 895
score: 98.95557861328125
patch: mant = str . add ( $STRING$ ) ;
rank: 895
score: 98.89348754882812
patch: mant = new mant ( str ) ; }
rank: 895
score: 98.89173889160156
patch: return new Integer ( 0 ) ;
rank: 896
score: 98.95463256835937
patch: mant = 0 ; mant = 0 ; }
rank: 896
score: 98.89157104492188
patch: return new Double ( str ) ;
rank: 896
score: 98.89022827148438
patch: mant = str . length ( ) ; ;
rank: 897
score: 99.10953776041667
patch: buf = str . substring ( exp CaMeL Pos ) ;
rank: 897
score: 99.00349564985795
patch: return create CaMeL Long ( 0 , str ) ;
rank: 897
score: 98.9852294921875
patch: return create CaMeL Long ( mant ) ; }
rank: 897
score: 98.95509168836806
patch: mant = str . close ( ) ;
rank: 897
score: 98.95259399414063
patch: mant = ( Integer ) exp CaMeL Pos ;
rank: 897
score: 98.93804931640625
patch: mant = ( Number ) exp CaMeL Pos ;
rank: 897
score: 98.88995971679688
patch: mant = str + exp CaMeL Pos ; }
rank: 897
score: 98.88912963867188
patch: sb . append ( str + $STRING$ ) ;
rank: 898
score: 99.10355631510417
patch: mant = random . substring ( exp CaMeL Pos ) ;
rank: 898
score: 99.00205078125
patch: return new Float ( exp CaMeL Pos ) ;
rank: 898
score: 98.94840698242187
patch: break . to CaMeL Int ( ) ; }
rank: 898
score: 98.93718804253473
patch: mant = str . intern ( ) ;
rank: 898
score: 98.88878784179687
patch: assert str . length ( ) > 0 ;
rank: 898
score: 98.88416137695313
patch: mant = str . substring ( ) ; }
rank: 899
score: 99.12556966145833
patch: p = str . substring ( dec CaMeL Pos ) ;
rank: 899
score: 98.946826171875
patch: mant = ( String ) exp CaMeL Pos ;
rank: 899
score: 98.9377197265625
patch: if ( exp CaMeL Pos != - 1 )
rank: 899
score: 98.93418579101562
patch: mant += str . substring ( $NUMBER$ ) ;
rank: 899
score: 98.88104858398438
patch: mant = str . trim ( 1 ) ;
rank: 900
score: 99.10235595703125
patch: mant = in . substring ( exp CaMeL Pos ) ;
rank: 900
score: 98.98031005859374
patch: exp = create CaMeL Number ( str ) ;
rank: 900
score: 98.88262939453125
patch: mant = null ; break ;
rank: 901
score: 99.09986368815105
patch: mant = str . substring ( 0 ) ; break ;
rank: 901
score: 98.92940673828124
patch: if ( mant == null ) return null ;
rank: 901
score: 98.92822265625
patch: exp CaMeL Pos ( exp CaMeL Pos ) ;
rank: 901
score: 98.88031616210938
patch: mant = str . trim ( $NUMBER$ ) ;
rank: 902
score: 99.09773763020833
patch: mant = format ( str , exp CaMeL Pos ) ;
rank: 902
score: 98.97513834635417
patch: exp = null ; }
rank: 902
score: 98.92633056640625
patch: mant = str . start ( ) ; }
rank: 902
score: 98.92451307508681
patch: mant = str [ - 1 ] ;
rank: 902
score: 98.87938842773437
patch: throw new Number CaMeL Format CaMeL Exception ( ;
rank: 902
score: 98.87836456298828
patch: mant = $STRING$ ; break ; }
rank: 903
score: 99.12197265625
patch: tmp = create CaMeL Long ( str ) ;
rank: 903
score: 99.0946044921875
patch: mant = Math . min ( exp CaMeL Pos ) ;
rank: 903
score: 98.97500610351562
patch: return create CaMeL Long ( dec ) ; }
rank: 903
score: 98.94434204101563
patch: return new Big CaMeL Integer ( $STRING$ ) ;
rank: 903
score: 98.92594604492187
patch: mant = mant . get ( 0 ) ;
rank: 903
score: 98.87777099609374
patch: if ( 0 == exp CaMeL Pos ) {
rank: 903
score: 98.87484130859374
patch: mant = str . trim ( $STRING$ ) ;
rank: 904
score: 98.92496066623264
patch: mant = str . substring ( str ;
rank: 904
score: 98.92466227213542
patch: return new Integer ( 0 ) ; }
rank: 904
score: 98.92164306640625
patch: mant = str . substring ( ] ) ;
rank: 904
score: 98.86502414279514
patch: sb . append ( $STRING$ ) ; }
rank: 905
score: 98.97025553385417
patch: return create CaMeL Long ( mant ) ;
rank: 905
score: 98.92025417751736
patch: mant = 0 ; mant = $STRING$ ;
rank: 905
score: 98.91768798828124
patch: if ( exp CaMeL Pos == 0 ) {
rank: 905
score: 98.85371907552083
patch: mant = new Double ( str ) ;
rank: 906
score: 99.09353637695312
patch: p = str . substring ( exp CaMeL Pos ) ;
rank: 906
score: 98.97024875217014
patch: exp CaMeL Pos = exp CaMeL Pos ;
rank: 906
score: 98.96089477539063
patch: return new Integer ( last CaMeL Char ) ;
rank: 906
score: 98.93625895182292
patch: mant = null ; }
rank: 906
score: 98.91458468967014
patch: mant = 0 . length ( ) ;
rank: 906
score: 98.85093180338542
patch: mant -= str . length ( ) ;
rank: 907
score: 99.09134928385417
patch: end = str . substring ( exp CaMeL Pos ) ;
rank: 907
score: 98.96979370117188
patch: dec = str . length ( ) ; }
rank: 907
score: 98.96067504882812
patch: exp = str ; } dec = null ;
rank: 907
score: 98.92274475097656
patch: mant = null ; } else {
rank: 907
score: 98.91738891601562
patch: mant = str . equals ( $NUMBER$ ) ;
rank: 908
score: 99.09116617838542
patch: mant = format . substring ( exp CaMeL Pos ) ;
rank: 908
score: 98.91657172309027
patch: if ( last CaMeL Char != $STRING$ )
rank: 908
score: 98.91572265625
patch: mant = str . round ( 0 ) ;
rank: 908
score: 98.84345838758681
patch: mant = new double [ 0 ] ;
rank: 909
score: 98.91487630208333
patch: exp = str [ - 1 ] ;
rank: 909
score: 98.90625610351563
patch: mant = str . substring ( substring ) ;
rank: 909
score: 98.90519409179687
patch: mant = ( byte ) exp CaMeL Pos ;
rank: 909
score: 98.86409505208333
patch: throw ( Number ) exp CaMeL Pos ;
rank: 909
score: 98.8593505859375
patch: mant = $STRING$ ; mant = $STRING$ ; }
rank: 910
score: 99.09063720703125
patch: mant = str . min ( exp CaMeL Pos ) ;
rank: 910
score: 98.96055094401042
patch: exp CaMeL Pos = - 1 ; }
rank: 910
score: 98.90396118164062
patch: return new String ( str ) ;
rank: 910
score: 98.9037353515625
patch: mant = str . substring ( str ) ;
rank: 910
score: 98.83231608072917
patch: max = str . length ( ) ;
rank: 911
score: 98.93470458984375
patch: return new Long ( last CaMeL Char ) ;
rank: 911
score: 98.90559217664931
patch: exp = str . value ( ) ;
rank: 911
score: 98.85885959201389
patch: return create CaMeL Long ( name ) ;
rank: 912
score: 98.93123779296874
patch: exp = str . substring ( 0 ) ;
rank: 912
score: 98.90107557508681
patch: mant = str . delete ( ) ;
rank: 912
score: 98.89145236545139
patch: exp = exp CaMeL Pos - 1 ;
rank: 912
score: 98.88821750217014
patch: mant = $NUMBER$ + exp CaMeL Pos ;
rank: 912
score: 98.85855441623264
patch: dec = str . trim ( ) ;
rank: 912
score: 98.83095296223958
patch: final int exp CaMeL Pos = 0 ;
rank: 912
score: 98.81390380859375
patch: return str . trim ( ) ;
rank: 913
score: 99.07145385742187
patch: if ( exp CaMeL Pos > 1 ) {
rank: 913
score: 98.9575927734375
patch: if ( dec CaMeL Pos < - 1 )
rank: 913
score: 98.92911376953126
patch: return new Number ( last CaMeL Char ) ;
rank: 913
score: 98.90042114257812
patch: mant = str . abs ( 0 ) ;
rank: 913
score: 98.88480050223214
patch: mant = 0 ; break ;
rank: 913
score: 98.82769775390625
patch: mant = str + $STRING$ ; }
rank: 913
score: 98.81205240885417
patch: mant = exp CaMeL Pos - 1 ;
rank: 914
score: 98.95567626953125
patch: throw new Error ( str + $STRING$ ) ;
rank: 914
score: 98.86855740017361
patch: mant = str . read ( ) ;
rank: 914
score: 98.84796142578125
patch: exp = null ; } else {
rank: 914
score: 98.8260498046875
patch: mant = $STRING$ ; break ;
rank: 914
score: 98.80706108940973
patch: mant = str . split ( ) ;
rank: 915
score: 98.95499267578126
patch: if ( exp CaMeL Pos < 0 ) {
rank: 915
score: 98.92692260742187
patch: return create CaMeL Long ( 0 ) ; }
rank: 915
score: 98.8943359375
patch: str = str . substring ( 1 ) ;
rank: 915
score: 98.87403700086806
patch: exp CaMeL Pos ( - 1 ) ;
rank: 915
score: 98.84775119357639
patch: return create CaMeL Long ( dec ) ;
rank: 915
score: 98.8202896118164
patch: return new Number ( str ) ;
rank: 915
score: 98.79111735026042
patch: mant = str . substring ( ; }
rank: 916
score: 99.08111572265625
patch: mant = Math . length ( exp CaMeL Pos ) ;
rank: 916
score: 99.06136474609374
patch: tmp = create CaMeL Integer ( str ) ;
rank: 916
score: 98.9257080078125
patch: throw new Big CaMeL Integer ( $STRING$ ) ;
rank: 916
score: 98.89075927734375
patch: mant = substring ( 0 , 0 ) ;
rank: 916
score: 98.84320831298828
patch: return str . length ( ) ;
rank: 916
score: 98.82021755642361
patch: mant = new Double ( $STRING$ ) ;
rank: 917
score: 99.0780029296875
patch: j = str . substring ( exp CaMeL Pos ) ;
rank: 917
score: 98.93888854980469
patch: exp = exp CaMeL Pos ; }
rank: 917
score: 98.8414306640625
patch: create CaMeL Long ( str ) ;
rank: 917
score: 98.83285861545139
patch: return new String ( str ) ; }
rank: 917
score: 98.81831190321181
patch: this . mant = str ; break ;
rank: 917
score: 98.78468831380208
patch: exp CaMeL Pos = 0 ; break ;
rank: 918
score: 99.07708740234375
patch: mant = str . substring ( exp CaMeL Pos ; {
rank: 918
score: 98.90567626953126
patch: throw new Integer ( exp CaMeL Pos ) ;
rank: 918
score: 98.88949245876736
patch: mant += str . trim ( ) ;
rank: 918
score: 98.84036593967014
patch: return create CaMeL Long ( null ) ;
rank: 918
score: 98.80583360460069
patch: mant = new Float ( 0 ) ;
rank: 919
score: 99.0751241048177
patch: mant = str . substring ( exp CaMeL Pos ) &&
rank: 919
score: 98.85003662109375
patch: if ( ! exp CaMeL Pos ) {
rank: 919
score: 98.83988444010417
patch: return create CaMeL Long ( this ) ;
rank: 919
score: 98.82838439941406
patch: mant = 0 ; break ; }
rank: 919
score: 98.77587890625
patch: mant = max . trim ( ) ;
rank: 920
score: 98.92401885986328
patch: mant = str . substring ( 0
rank: 920
score: 98.8877685546875
patch: mant = str . substring ( - ) ;
rank: 920
score: 98.84439425998264
patch: mant = new Float ( $STRING$ ) ;
rank: 920
score: 98.82717556423611
patch: mant = exp . length ( ) ;
rank: 920
score: 98.79819742838542
patch: mant = str + $STRING$ ; break ;
rank: 920
score: 98.76829020182292
patch: start = str . length ( ) ;
rank: 921
score: 99.07318115234375
patch: mant = Math . parse CaMeL Int ( str ) ;
rank: 921
score: 98.81987847222223
patch: throw new Error ( $STRING$ ) ; }
rank: 921
score: 98.79796006944444
patch: return new Double ( str ) ; }
rank: 922
score: 99.07144165039062
patch: mant = list . substring ( exp CaMeL Pos ) ;
rank: 922
score: 98.89967041015625
patch: exp ( exp CaMeL Pos + 1 ) ;
rank: 922
score: 98.87391493055556
patch: mant = $STRING$ ; mant = $STRING$ ;
rank: 922
score: 98.82757568359375
patch: return create CaMeL Integer ( $STRING$ ) ;
rank: 922
score: 98.82699924045139
patch: exp = null ; dec = null ;
rank: 922
score: 98.81424967447917
patch: throw new Exception ( $STRING$ ) ; }
rank: 923
score: 98.89261881510417
patch: return create CaMeL Integer ( mant ) ;
rank: 923
score: 98.87355041503906
patch: mant = exp CaMeL Pos ) ;
rank: 923
score: 98.82398986816406
patch: if ( dec == null ) {
rank: 924
score: 99.06941731770833
patch: mant = compare ( str , exp CaMeL Pos ) ;
rank: 924
score: 98.88697052001953
patch: exp CaMeL Pos = 0 ; }
rank: 924
score: 98.86881510416667
patch: mant = $STRING$ ; mant = 0 ;
rank: 924
score: 98.81941731770833
patch: mant = null ; dec = null ;
rank: 924
score: 98.81324768066406
patch: mant = ( int ) 0 ;
rank: 924
score: 98.78814019097223
patch: return new Number ( str ) ; }
rank: 924
score: 98.75996907552083
patch: new Integer ( exp CaMeL Pos ) ;
rank: 925
score: 99.06920369466145
patch: mant = ( String ) exp CaMeL Pos + 1 ;
rank: 925
score: 99.03615112304688
patch: if ( exp CaMeL Pos < 1 ) {
rank: 925
score: 98.8971435546875
patch: try { create CaMeL Long ( str ) ;
rank: 925
score: 98.88652886284723
patch: mant = str . substring ( 0 ,
rank: 925
score: 98.813720703125
patch: exp = str . start ( ) ;
rank: 925
score: 98.81163787841797
patch: return new Long ( 0 ) ;
rank: 926
score: 98.87981499565973
patch: exp = new Number ( mant ) ;
rank: 926
score: 98.86447482638889
patch: mant = mant ; mant = $STRING$ ;
rank: 926
score: 98.81304253472223
patch: mant = null ; exp = null ;
rank: 926
score: 98.81304168701172
patch: switch ( exp CaMeL Pos ) {
rank: 926
score: 98.78228081597223
patch: sb = new String ( str ) ;
rank: 926
score: 98.75560167100694
patch: mant . add ( str ) ; }
rank: 927
score: 99.05830522017045
patch: mant = mant . char CaMeL Value ( ) ;
rank: 927
score: 99.0355557528409
patch: mant = str [ exp CaMeL Pos ) ] ;
rank: 927
score: 98.89052327473958
patch: exp = str . name ( ) ;
rank: 927
score: 98.87757703993056
patch: dec = str . length ( ) ;
rank: 927
score: 98.86246066623264
patch: mant = $NUMBER$ ; mant = 0 ;
rank: 927
score: 98.80894639756944
patch: return new str . length ( ) ;
rank: 927
score: 98.80636935763889
patch: if ( exp CaMeL Pos > $STRING$ )
rank: 927
score: 98.77999538845486
patch: mant = str . substring ( } ;
rank: 927
score: 98.75464545355902
patch: sb . append ( str ) ; ;
rank: 928
score: 99.03506469726562
patch: if ( exp == exp CaMeL Pos ) {
rank: 928
score: 98.88308376736111
patch: return create CaMeL Integer ( 0 ) ;
rank: 928
score: 98.87318250868056
patch: create CaMeL Long ( str ) ; }
rank: 928
score: 98.85418023003473
patch: mant = 0 ; mant = 1 ;
rank: 928
score: 98.80485026041667
patch: return create CaMeL Long ( value ) ;
rank: 928
score: 98.77705383300781
patch: mant = str ; } break ;
rank: 928
score: 98.75326877170139
patch: mant = str . substring ( exp ;
rank: 929
score: 99.03992808948864
patch: mant = ( byte + exp CaMeL Pos ) ;
rank: 929
score: 98.86555989583333
patch: if ( exp CaMeL Pos < 0 )
rank: 929
score: 98.84718322753906
patch: mant = exp CaMeL Pos ; ;
rank: 929
score: 98.80414496527777
patch: if ( dec == - 1 ) {
rank: 929
score: 98.79665120442708
patch: mant = new String ( str ) ;
rank: 929
score: 98.75217692057292
patch: end = str . length ( ) ;
rank: 930
score: 99.03676535866477
patch: mant = random . to CaMeL String ( ) ;
rank: 930
score: 98.86587524414062
patch: exp = str [ 0 ] ;
rank: 930
score: 98.86491563585069
patch: return create CaMeL Integer ( dec ) ;
rank: 930
score: 98.84543863932292
patch: mant = str . substring ( $STRING$ ;
rank: 930
score: 98.80135091145833
patch: if ( exp CaMeL Pos > 1 )
rank: 930
score: 98.79262966579861
patch: if ( last CaMeL Char == $STRING$ )
rank: 930
score: 98.78441704644098
patch: mant = str . left ( ) ;
rank: 930
score: 98.75067138671875
patch: mant = new ) ;
rank: 931
score: 98.783447265625
patch: len = str . length ( ) ;
rank: 931
score: 98.77191162109375
patch: mant = str ; } else {
rank: 932
score: 99.018505859375
patch: tmp = create CaMeL Long ( mant ) ;
rank: 932
score: 98.85872395833333
patch: exp = str . length ( ) ;
rank: 932
score: 98.84200032552083
patch: mant = str ; mant = 0 ;
rank: 932
score: 98.78160095214844
patch: return new Integer ( mant ) ;
rank: 932
score: 98.7672119140625
patch: try { mant = null ;
rank: 932
score: 98.74827745225694
patch: mant = min . trim ( ) ;
rank: 933
score: 99.0284756747159
patch: mant = new String ( str + $STRING$ ) ;
rank: 933
score: 98.83763970269098
patch: mant = 0 ; mant = $NUMBER$ ;
rank: 933
score: 98.78439670138889
patch: if ( exp CaMeL Pos == 0 )
rank: 933
score: 98.78128390842014
patch: return str . length ( ) ; }
rank: 933
score: 98.76380266462054
patch: try { mant = str ;
rank: 933
score: 98.76355997721355
patch: mant = $STRING$ ; }
rank: 934
score: 99.01765950520833
patch: if ( exp == - 1 ) {
rank: 934
score: 98.83543178013393
patch: mant = exp CaMeL Pos ;
rank: 934
score: 98.78047688802083
patch: mant = str . max ( ) ;
rank: 934
score: 98.77791595458984
patch: return new Integer ( str ) ;
rank: 934
score: 98.76299285888672
patch: break . trim ( ) ; }
rank: 934
score: 98.74491373697917
patch: mant = value . trim ( ) ;
rank: 935
score: 98.83506944444444
patch: mant = str . substring ( 0 ;
rank: 935
score: 98.7740707397461
patch: mant = ( int ) $NUMBER$ ;
rank: 936
score: 99.01159057617187
patch: b = create CaMeL Long ( str ) ;
rank: 936
score: 98.77120971679688
patch: mant = 0 ; }
rank: 936
score: 98.75442165798611
patch: mant = str ; break ; } }
rank: 936
score: 98.73883819580078
patch: exp = str ; } else {
rank: 936
score: 98.71316092354911
patch: mant = new ) ; }
rank: 937
score: 99.01019287109375
patch: if ( dec == exp CaMeL Pos ) {
rank: 937
score: 98.85076226128473
patch: return new Number ( dec ) ; }
rank: 937
score: 98.83222113715277
patch: mant = str . name ( ) ;
rank: 937
score: 98.76994323730469
patch: return new Character ( str ) ;
rank: 937
score: 98.73867797851562
patch: mant = str [ 0 ] ;
rank: 937
score: 98.73004150390625
patch: exp CaMeL Pos ( str ) ;
rank: 938
score: 98.99412231445312
patch: mant = str . substring ( mant ) ;
rank: 938
score: 98.81699625651042
patch: mant = exp CaMeL Pos + $NUMBER$ ;
rank: 938
score: 98.74276394314236
patch: mant = new Character ( $STRING$ ) ;
rank: 938
score: 98.72999790736607
patch: try { dec = null ;
rank: 939
score: 98.84040662977431
patch: dec = exp CaMeL Pos + 1 ;
rank: 939
score: 98.80403645833333
patch: mant = str . EMPTY ( ) ;
rank: 939
score: 98.74732208251953
patch: return mant . trim ( ) ;
rank: 939
score: 98.72128731863839
patch: try { dec = str ;
rank: 939
score: 98.668701171875
patch: throw str + $STRING$ + str ;
rank: 940
score: 98.98086547851562
patch: mant = mant . substring ( 0 ) ;
rank: 940
score: 98.84040069580078
patch: exp CaMeL Pos = null ; }
rank: 940
score: 98.79826524522569
patch: mant = 0 ; exp = 0 ;
rank: 940
score: 98.72774505615234
patch: mant . add ( str ) ;
rank: 940
score: 98.71924845377605
patch: exp = str ; }
rank: 940
score: 98.68096160888672
patch: ! exp CaMeL Pos + 1 ;
rank: 941
score: 98.79712592230902
patch: mant = null ; mant = 0 ;
rank: 941
score: 98.71000671386719
patch: break . append ( $STRING$ ) ;
rank: 941
score: 98.70285034179688
patch: switch ( last CaMeL Char ) {
rank: 941
score: 98.64785766601562
patch: mant = Math . ) ; }
rank: 942
score: 98.91296997070313
patch: mant = Math . substring ( 0 ) ;
rank: 942
score: 98.80259874131944
patch: return create CaMeL Number ( 0 ) ;
rank: 942
score: 98.79498291015625
patch: mant = 0 ; mant = null ;
rank: 942
score: 98.70875549316406
patch: throw new Error ( $STRING$ ) ;
rank: 942
score: 98.70235770089286
patch: try { exp = null ;
rank: 942
score: 98.66268157958984
patch: mant = null ; } * /
rank: 943
score: 98.90560302734374
patch: str = str . substring ( 0 ) ;
rank: 943
score: 98.79422336154514
patch: mant = exp CaMeL Pos + ) ;
rank: 943
score: 98.71265411376953
patch: return new Double ( 0 ) ;
rank: 943
score: 98.66061401367188
patch: if ( ! exp CaMeL Pos )
rank: 943
score: 98.640869140625
patch: mant = new ) ; ; }
rank: 944
score: 98.79770236545139
patch: break create CaMeL Long ( str ) ;
rank: 944
score: 98.79471588134766
patch: exp = str . substring ( 0
rank: 944
score: 98.79289415147569
patch: mant = 1 ; mant = 0 ;
rank: 944
score: 98.6944808959961
patch: { mant = exp CaMeL Pos ;
rank: 944
score: 98.6396484375
patch: mant = str ; ; }
rank: 945
score: 98.9671142578125
patch: if ( exp == dec CaMeL Pos ) {
rank: 945
score: 98.88436889648438
patch: throw ( $STRING$ + exp CaMeL Pos ) ;
rank: 945
score: 98.78882514105902
patch: mant = str . clone ( ) ;
rank: 945
score: 98.69176483154297
patch: mant = ( mant ) mant ;
rank: 945
score: 98.63274383544922
patch: mant = 0 . 0 ; }
rank: 946
score: 98.76925659179688
patch: create CaMeL Integer ( str ) ;
rank: 946
score: 98.70552062988281
patch: return new Number ( 0 ) ;
rank: 946
score: 98.68272181919643
patch: mant = $NUMBER$ ; break ;
rank: 946
score: 98.66398620605469
patch: if ( dec == - 1 )
rank: 947
score: 98.87483045789931
patch: mant = new byte [ 0 ] ;
rank: 947
score: 98.77537027994792
patch: exp = str . [ 0 ] ;
rank: 947
score: 98.75294494628906
patch: dec = str . substring ( 0
rank: 947
score: 98.72122192382812
patch: mant . append ( str ) ;
rank: 947
score: 98.68145751953125
patch: return new ( str ) ; }
rank: 947
score: 98.67431640625
patch: this . mant = str ; }
rank: 948
score: 98.96455078125
patch: return new Long ( dec CaMeL Pos ) ;
rank: 948
score: 98.68914031982422
patch: mant = ( mant ) 0 ;
rank: 948
score: 98.6795654296875
patch: return mant . length ( ) ;
rank: 948
score: 98.67143249511719
patch: pos = exp CaMeL Pos ; }
rank: 948
score: 98.64976283482143
patch: try { exp = str ;
rank: 948
score: 98.63488006591797
patch: assert exp CaMeL Pos > 0 ;
rank: 949
score: 98.96415405273437
patch: buf = create CaMeL Long ( str ) ;
rank: 949
score: 98.75080871582031
patch: exp CaMeL Pos = 1 ; }
rank: 949
score: 98.67214965820312
patch: mant = str . min ) ;
rank: 949
score: 98.65009307861328
patch: mant = mant ; break ; }
rank: 949
score: 98.59217834472656
patch: mant += exp CaMeL Pos ; }
rank: 950
score: 98.95979614257813
patch: exp = create CaMeL Integer ( exp ) ;
rank: 950
score: 98.7502212524414
patch: dec = exp CaMeL Pos ; }
rank: 950
score: 98.66868591308594
patch: mant = ( byte ) 0 ;
rank: 950
score: 98.664306640625
patch: mant = ( Integer ) mant ;
rank: 950
score: 98.635986328125
patch: z = exp CaMeL Pos ; }
rank: 950
score: 98.63249969482422
patch: mant = $STRING$ ; } else {
rank: 950
score: 98.62818145751953
patch: exp CaMeL Pos ( dec ) ;
rank: 951
score: 98.66667175292969
patch: mant = $NUMBER$ ; break ; }
rank: 951
score: 98.65296936035156
patch: mant = str . EMPTY ) ;
rank: 951
score: 98.63243865966797
patch: str . append ( $STRING$ ) ;
rank: 951
score: 98.62621307373047
patch: exp = null ; } * /
rank: 952
score: 98.950634765625
patch: buf = create CaMeL Integer ( str ) ;
rank: 952
score: 98.72715759277344
patch: exp = null ; break ; }
rank: 952
score: 98.66111755371094
patch: return new Integer ( $NUMBER$ ) ;
rank: 952
score: 98.64324079241071
patch: mant = ) + 0 ;
rank: 952
score: 98.6214599609375
patch: exp = exp CaMeL Pos ) ;
rank: 952
score: 98.6207275390625
patch: dec = null ; }
rank: 952
score: 98.60967254638672
patch: mant = $STRING$ ; } break ;
rank: 952
score: 98.57755279541016
patch: mant = $STRING$ + str ; }
rank: 953
score: 98.82553439670139
patch: mant = random . trim ( ) ;
rank: 953
score: 98.6606216430664
patch: mant = ( int ) mant ;
rank: 953
score: 98.63211059570312
patch: mant = str . EMPTY mant ;
rank: 953
score: 98.6032002766927
patch: exp = $STRING$ ; }
rank: 953
score: 98.57509068080357
patch: mant = $STRING$ + str ;
rank: 954
score: 98.94874403211806
patch: mant = str ; dec = null ;
rank: 954
score: 98.7182388305664
patch: exp CaMeL Pos = mant ; }
rank: 954
score: 98.65592956542969
patch: throw new Exception ( $STRING$ ) ;
rank: 954
score: 98.63177490234375
patch: mant . append ( $STRING$ ) ;
rank: 954
score: 98.60233306884766
patch: mant = null ; } break ;
rank: 954
score: 98.58573695591518
patch: mant = null ; } }
rank: 954
score: 98.56748744419643
patch: mant = str + $STRING$ ;
rank: 955
score: 98.68204498291016
patch: return create CaMeL Long ( str ;
rank: 955
score: 98.65296936035156
patch: return new Long ( str ) ;
rank: 955
score: 98.60314178466797
patch: if ( mant == null ) {
rank: 955
score: 98.59518432617188
patch: fail ( str + $STRING$ ) ;
rank: 955
score: 98.58273751395089
patch: if ( dec == null )
rank: 955
score: 98.5537109375
patch: mant = - 1 ; }
rank: 956
score: 98.7135009765625
patch: exp CaMeL Pos = $STRING$ ; }
rank: 956
score: 98.6498794555664
patch: return new Character ( 0 ) ;
rank: 956
score: 98.55242047991071
patch: mant = str ; } }
rank: 956
score: 98.53415934244792
patch: dec = str ; }
rank: 957
score: 98.9410400390625
patch: ret = create CaMeL Long ( str ) ;
rank: 957
score: 98.7095718383789
patch: return new Number ( dec ) ;
rank: 957
score: 98.64347076416016
patch: mant = ( String ) mant ;
rank: 957
score: 98.61069742838542
patch: mant = - 1 ;
rank: 957
score: 98.58827427455357
patch: exp = str + $STRING$ ;
rank: 957
score: 98.52717808314732
patch: exp = null ; } }
rank: 958
score: 98.67109680175781
patch: exp ( exp CaMeL Pos ) ;
rank: 958
score: 98.64105987548828
patch: return new mant ( str ) ;
rank: 958
score: 98.60958862304688
patch: mant . add ( $STRING$ ) ;
rank: 958
score: 98.58206612723214
patch: exp = exp CaMeL Pos ;
rank: 958
score: 98.55839320591518
patch: mant = mant ; break ;
rank: 958
score: 98.51707763671875
patch: mant = null ;
rank: 959
score: 98.6055679321289
patch: mant = str . max ) ;
rank: 959
score: 98.5419921875
patch: throw new ) ; }
rank: 960
score: 98.49919782366071
patch: mant = str ; continue ;
rank: 961
score: 98.78582763671875
patch: mant = new String ( exp ) ;
rank: 961
score: 98.63800811767578
patch: mant = ( byte ) $NUMBER$ ;
rank: 961
score: 98.49439348493304
patch: sb = str ; break ;
rank: 961
score: 98.47096470424107
patch: mant = null ; } else
rank: 961
score: 98.45928955078125
patch: mant ; mant = str ;
rank: 962
score: 98.90950520833333
patch: mant = str ; exp = null ;
rank: 962
score: 98.78055148654514
patch: mant = exp CaMeL Pos + mant ;
rank: 962
score: 98.63746643066406
patch: return new String ( mant ) ;
rank: 962
score: 98.53853352864583
patch: mant = - 0 ;
rank: 962
score: 98.46820940290179
patch: exp = null ; } else
rank: 962
score: 98.45219203404018
patch: mant = new ) ; ;
rank: 963
score: 98.90095350477431
patch: mant = str ; dec = str ;
rank: 963
score: 98.63594055175781
patch: mant = ( String ) 0 ;
rank: 963
score: 98.52758178710937
patch: mant = 0 ;
rank: 964
score: 98.87510850694444
patch: buf = new String ( str ) ;
rank: 964
score: 98.609619140625
patch: if ( mant == null )
rank: 964
score: 98.5982666015625
patch: throw new Long ( $STRING$ ) ;
rank: 964
score: 98.45751953125
patch: try { mant = $STRING$ ;
rank: 964
score: 98.44560895647321
patch: mant = str ; } ;
rank: 964
score: 98.44097900390625
patch: mant = value ; break ;
rank: 965
score: 98.87228732638889
patch: if ( mant == - 1 ) {
rank: 965
score: 98.75372314453125
patch: mant = exp CaMeL Pos - mant ;
rank: 965
score: 98.49082641601562
patch: exp = null ;
rank: 965
score: 98.48383440290179
patch: mant else mant = 0 ;
rank: 966
score: 98.87154388427734
patch: if ( exp == $STRING$ ) {
rank: 966
score: 98.58042689732143
patch: if ( mant != null )
rank: 966
score: 98.48640659877232
patch: exp CaMeL Pos = null ;
rank: 966
score: 98.4651590983073
patch: mant = str ; ;
rank: 966
score: 98.44675990513393
patch: return null ; } else {
rank: 966
score: 98.43484933035714
patch: found = true ; break ;
rank: 967
score: 98.57840401785714
patch: mant = true ; break ;
rank: 967
score: 98.55287388392857
patch: mant = str ; } else
rank: 967
score: 98.46483503069196
patch: mant = $STRING$ + 0 ;
rank: 967
score: 98.43123953683036
patch: return str + $STRING$ ; }
rank: 967
score: 98.40218098958333
patch: throw str + $STRING$ ;
rank: 968
score: 98.56339808872768
patch: mant = 0 ; } }
rank: 968
score: 98.46468680245536
patch: mant = mant + 0 ;
rank: 968
score: 98.46227416992187
patch: mant = str ;
rank: 968
score: 98.42425537109375
patch: mant = new ; break ;
rank: 968
score: 98.39784458705357
patch: mant = $STRING$ ; ; }
rank: 969
score: 98.84869384765625
patch: dec = str ; } else {
rank: 969
score: 98.71907806396484
patch: mant = ( byte ) mant ;
rank: 969
score: 98.55481828962054
patch: { mant = 0 ; }
rank: 969
score: 98.4644775390625
patch: mant = mant ;
rank: 969
score: 98.42423502604167
patch: mant = mant ; }
rank: 969
score: 98.39681570870536
patch: mant ( str ) ; }
rank: 969
score: 98.362939453125
patch: exp = str ;
rank: 970
score: 98.55188860212054
patch: mant = length ( ) ;
rank: 970
score: 98.41866629464286
patch: sb = null ; break ;
rank: 970
score: 98.38982282366071
patch: mant = str ) ; }
rank: 971
score: 98.82356092664931
patch: mant = str [ 0 ] ; }
rank: 971
score: 98.51853724888393
patch: exp = null ; break ;
rank: 971
score: 98.41822160993304
patch: b = str ; break ;
rank: 971
score: 98.408935546875
patch: exp CaMeL Pos = 0 ;
rank: 971
score: 98.38764299665179
patch: mant ; mant = $STRING$ ;
rank: 972
score: 98.53086635044643
patch: return new ( str ) ;
rank: 972
score: 98.40984235491071
patch: mant = name ; break ;
rank: 972
score: 98.4083964029948
patch: mant = 0 ; ;
rank: 972
score: 98.40243966238839
patch: exp CaMeL Pos = $STRING$ ;
rank: 972
score: 98.37240164620536
patch: mant = 0 ; ; }
rank: 972
score: 98.36582728794643
patch: else { exp = null ;
rank: 972
score: 98.31407674153645
patch: exp = 0 ; }
rank: 973
score: 98.79725646972656
patch: if ( exp == null ) {
rank: 973
score: 98.62493133544922
patch: mant = ( byte ) 1 ;
rank: 973
score: 98.51596069335938
patch: mant = $NUMBER$ ; }
rank: 973
score: 98.39989362444196
patch: str = $STRING$ ; break ;
rank: 973
score: 98.29925537109375
patch: exp = - 1 ;
rank: 974
score: 98.76416778564453
patch: if ( exp == - 1 )
rank: 974
score: 98.39625767299107
patch: exp CaMeL Pos = str ;
rank: 974
score: 98.39591761997768
patch: return str [ 0 ] ;
rank: 974
score: 98.39300537109375
patch: mant = ) + 1 ;
rank: 974
score: 98.28538004557292
patch: dec = $STRING$ ; }
rank: 974
score: 98.27635701497395
patch: mant = max ; }
rank: 975
score: 98.46451241629464
patch: mant = false ; break ;
rank: 975
score: 98.39407784598214
patch: str = str ; break ;
rank: 975
score: 98.25431315104167
patch: throw new $STRING$ ; }
rank: 976
score: 98.75872039794922
patch: if ( exp == exp ) {
rank: 976
score: 98.61087036132812
patch: mant = ( byte ) str ;
rank: 976
score: 98.3651123046875
patch: mant = mant ; ;
rank: 976
score: 98.32242838541667
patch: return str + $STRING$ ;
rank: 976
score: 98.2576395670573
patch: mant ; break ; }
rank: 976
score: 98.202880859375
patch: return null ; } }
rank: 977
score: 98.74488830566406
patch: dec = str [ 0 ] ;
rank: 977
score: 98.42867024739583
patch: mant = true ; }
rank: 977
score: 98.35193888346355
patch: mant = str ) ;
rank: 977
score: 98.29837036132812
patch: mant = new str ;
rank: 977
score: 98.17124430338542
patch: break ; } else {
rank: 978
score: 98.39780680338542
patch: mant = false ; }
rank: 978
score: 98.38485717773438
patch: return new ) ; }
rank: 978
score: 98.3245137532552
patch: return ( mant ) ;
rank: 978
score: 98.2479756673177
patch: mant = value ; }
rank: 978
score: 98.1635233561198
patch: { exp = null ;
rank: 979
score: 98.704833984375
patch: if ( exp == 0 ) {
rank: 979
score: 98.4207763671875
patch: mant = new int 0 ;
rank: 979
score: 98.31296793619792
patch: mant = $STRING$ ; ;
rank: 979
score: 98.2478535970052
patch: str = $STRING$ ; }
rank: 979
score: 98.21809895833333
patch: try { return null ;
rank: 979
score: 98.16184488932292
patch: { mant = null ;
rank: 980
score: 98.68551635742188
patch: mant = str ; } * /
rank: 980
score: 98.40481131417411
patch: try { mant = 0 ;
rank: 980
score: 98.37471516927083
patch: { mant = 0 ;
rank: 980
score: 98.26170857747395
patch: mant = - ) ;
rank: 980
score: 98.24697875976562
patch: mant = name ; }
rank: 980
score: 98.18563842773438
patch: mant = new ; }
rank: 980
score: 98.15995279947917
patch: dec = 0 ; }
rank: 981
score: 98.30992635091145
patch: exp = false ; }
rank: 981
score: 98.2830301920573
patch: exp = str ) ;
rank: 981
score: 98.260400390625
patch: mant = $STRING$ ;
rank: 981
score: 98.14739990234375
patch: fail ( $STRING$ ) ;
rank: 982
score: 98.66671752929688
patch: mant = str [ 1 ] ;
rank: 982
score: 98.30790201822917
patch: println ( $STRING$ ) ;
rank: 982
score: 98.24879964192708
patch: mant = - $NUMBER$ ;
rank: 982
score: 98.21837361653645
patch: str = str ; }
rank: 982
score: 98.13761393229167
patch: throw null ; } }
rank: 982
score: 98.13463338216145
patch: mant = min ; }
rank: 983
score: 98.19652303059895
patch: sb = str ; }
rank: 983
score: 98.13155110677083
patch: return exp CaMeL Pos ;
rank: 983
score: 98.11680094401042
patch: numeric ( str ) ;
rank: 984
score: 98.1951192220052
patch: return new str ; }
rank: 984
score: 98.11519775390624
patch: dec = str ;
rank: 985
score: 98.29005940755208
patch: exp = mant ; }
rank: 985
score: 98.17537434895833
patch: mant = ! mant ;
rank: 985
score: 98.06565348307292
patch: log ( str ) ;
rank: 986
score: 98.23853556315105
patch: { mant = $NUMBER$ ;
rank: 986
score: 98.17399088541667
patch: debug ( $STRING$ ) ;
rank: 986
score: 98.10936279296875
patch: exp = $STRING$ ;
rank: 986
score: 98.107470703125
patch: dec = null ;
rank: 987
score: 98.05841064453125
patch: mant ( str ) ;
rank: 988
score: 98.26652018229167
patch: dec = - 1 ;
rank: 988
score: 98.22627766927083
patch: throw ( $STRING$ ) ;
rank: 988
score: 98.16572265625
patch: throw new ) ;
rank: 989
score: 98.1798604329427
patch: return mant ; } }
rank: 989
score: 98.1097412109375
patch: return new mant ) ;
rank: 989
score: 97.8377685546875
patch: throw str ; }
rank: 989
score: 97.71671142578126
patch: throw null ; }
rank: 990
score: 98.24822998046875
patch: dec = false ; }
rank: 990
score: 98.17263793945312
patch: mant = 1 ; }
rank: 990
score: 98.08444213867188
patch: mant = = 0 ;
rank: 990
score: 97.93084716796875
patch: return null ; }
rank: 990
score: 97.70490112304688
patch: return str ; }
rank: 991
score: 98.12019856770833
patch: str = null ; }
rank: 991
score: 98.103076171875
patch: mant = $NUMBER$ ;
rank: 991
score: 98.08209228515625
patch: mant = ) mant ;
rank: 992
score: 97.88659057617187
patch: exp = 0 ;
rank: 993
score: 97.94615478515625
patch: mant = true ;
rank: 993
score: 97.91318969726562
patch: mant = 1 ;
rank: 993
score: 97.38296508789062
patch: break ; }
rank: 993
score: 97.341064453125
patch: throw str ;
rank: 994
score: 97.843310546875
patch: mant += 0 ;
rank: 994
score: 97.40711212158203
patch: return null ;
rank: 994
score: 97.38046264648438
patch: throw null ;
rank: 994
score: 97.3272705078125
patch: mant ; }
rank: 995
score: 97.83038940429688
patch: mant = false ;
rank: 995
score: 97.73713989257813
patch: throw new ; }
rank: 995
score: 97.33169555664062
patch: continue ; }
rank: 996
score: 97.78973388671875
patch: return mant ; }
rank: 996
score: 97.60452270507812
patch: return str ;
rank: 997
score: 97.24774169921875
patch: return mant ;
rank: 997
score: 96.9188741048177
patch: break ;
rank: 997
score: 96.68766276041667
patch: try {
rank: 998
score: 97.33731079101562
patch: throw new ;
rank: 998
score: 97.26898193359375
patch: mant ++ ;
rank: 998
score: 96.55818684895833
patch: continue ;
rank: 998
score: 96.30391438802083
patch: mant ;
rank: 999
score: 97.09663391113281
patch: mant -- ;
rank: 999
score: 96.156982421875
patch: throw ;
rank: 1000
score: 96.26092529296875
patch: break str
rank: 1000
score: 95.93190511067708
patch: exp ;
rank: 1000
score: 94.38716125488281
patch: {
