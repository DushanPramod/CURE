rank: 1
score: 99.86461724175348
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 1
score: 99.58030007102273
patch: return line 1 . intersection ( line $NUMBER$ ) ;
rank: 1
score: 99.34973493303572
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( )
rank: 1
score: 99.10059756324405
patch: int length = line 1 . get CaMeL Length ( ) line $NUMBER$ . get CaMeL Length ( ) ;
rank: 1
score: 98.95502319335938
patch: / / / /
rank: 1
score: 98.86912027994792
patch: / * / / / * / /
rank: 1
score: 98.79351806640625
patch: if ( intersection ) {
rank: 2
score: 99.75543534128289
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 2
score: 99.65966796875
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 2
score: 99.65770048253677
patch: Line line $NUMBER$ = ( Line ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 2
score: 99.62962239583334
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 2
score: 99.53331163194444
patch: this . include CaMeL End CaMeL Points = line 1 . intersection ( line $NUMBER$ ) ;
rank: 2
score: 99.3146551724138
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( )
rank: 2
score: 99.02529761904762
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + line 1 . get CaMeL Class ( ) ) ;
rank: 2
score: 98.92554728190105
patch: / / / / /
rank: 2
score: 98.86099008413461
patch: / * / / / * / / / * / /
rank: 2
score: 98.70303005642361
patch: if ( intersection ) { / * /
rank: 3
score: 99.64956183182566
patch: final Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 3
score: 99.57591610863095
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 3
score: 99.51671078330592
patch: this . line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 3
score: 99.30181361607143
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( )
rank: 3
score: 99.0209209735577
patch: if ( line $NUMBER$ == null || line $NUMBER$ == null )
rank: 3
score: 98.91996765136719
patch: / / / / / / /
rank: 3
score: 98.8604736328125
patch: / * / / / * / / * * / /
rank: 3
score: 98.68892045454545
patch: if ( intersection ) { System . / * /
rank: 4
score: 99.68751220703125
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 4
score: 99.64814976283482
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 4
score: 99.51255289713542
patch: int line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 4
score: 99.29854642427884
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < line 1 . get CaMeL Line CaMeL Number ( ) ) {
rank: 4
score: 99.01874069940476
patch: int size = line 1 . get CaMeL Size ( ) line $NUMBER$ . get CaMeL Size ( ) ;
rank: 4
score: 98.91619001116071
patch: / / / / / /
rank: 4
score: 98.8582294170673
patch: / * / / / int / / / / / /
rank: 4
score: 98.68550618489583
patch: if ( intersection ( intersection ) / / * / /
rank: 5
score: 99.61895751953125
patch: Line line $NUMBER$ = ( Region ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 5
score: 99.55833277209052
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 5
score: 99.50474717881944
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 5
score: 99.28309044471153
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) > line 1 . get CaMeL Line CaMeL Number ( ) ) {
rank: 5
score: 99.01085205078125
patch: if ( intersection . is CaMeL Empty ( ) || line $NUMBER$ . is CaMeL Empty ( ) )
rank: 5
score: 98.87398952907986
patch: / / / / / / / /
rank: 5
score: 98.85304612379808
patch: / int / / / / / / / / / /
rank: 5
score: 98.68206176757812
patch: if / * /
rank: 6
score: 99.65388997395833
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line ( ) ;
rank: 6
score: 99.64138357979911
patch: Line line $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 6
score: 99.50355113636364
patch: this . include CaMeL End CaMeL Points = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 6
score: 99.27649864783653
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) != line 1 . get CaMeL Line CaMeL Number ( ) ) {
rank: 6
score: 99.00816514756944
patch: if ( intersection == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 6
score: 98.85090467664931
patch: / * / / * * / /
rank: 6
score: 98.8077901204427
patch: / / / / compute
rank: 6
score: 98.63253784179688
patch: if ( intersection ) { System . / * * /
rank: 7
score: 99.653076171875
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 7
score: 99.55107964409723
patch: String line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 7
score: 99.50264699835526
patch: this . line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 7
score: 99.27246771918402
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( / /
rank: 7
score: 99.00419689360119
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + line 1 . get CaMeL Message ( ) ) ;
rank: 7
score: 98.8507831280048
patch: / / int / / / / / / / / /
rank: 7
score: 98.78525797526042
patch: / / / / / / / compute
rank: 7
score: 98.62984212239583
patch: if ( intersection ) { System . / / * /
rank: 8
score: 99.65179084329044
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 8
score: 99.63392857142857
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 8
score: 99.60767211914063
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) ;
rank: 8
score: 99.500341796875
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 8
score: 99.26927771935097
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) <= line 1 . get CaMeL Line CaMeL Number ( ) ) {
rank: 8
score: 98.99719848632813
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < intersection . size ( ) )
rank: 8
score: 98.85060471754808
patch: / * / / * / / / * * / /
rank: 8
score: 98.76614040798611
patch: / / { / / / / /
rank: 8
score: 98.6192959872159
patch: if ( intersection ( intersection ) / * / /
rank: 9
score: 99.632724609375
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 9
score: 99.60638427734375
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ;
rank: 9
score: 99.49685187088816
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 9
score: 99.26739971454327
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < line $NUMBER$ . get CaMeL Line CaMeL Number ( ) ) {
rank: 9
score: 98.99256807215073
patch: if ( line $NUMBER$ != null && line $NUMBER$ . is CaMeL Empty ( ) )
rank: 9
score: 98.83615347055289
patch: / * / / / int / / / * / /
rank: 9
score: 98.75285339355469
patch: / / / / / / compute
rank: 9
score: 98.59128639914773
patch: if ( intersection ) { / * / * /
rank: 10
score: 99.62872314453125
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 10
score: 99.62530158547794
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( )
rank: 10
score: 99.52715012122844
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 10
score: 99.49304651331019
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 10
score: 99.267236328125
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < line 1 . get CaMeL Line CaMeL Number ( ) )
rank: 10
score: 98.99072265625
patch: int size = line 1 . get CaMeL Size ( ) line $NUMBER$ . get CaMeL Length ( ) ;
rank: 10
score: 98.8333028157552
patch: / * / / * / / / * / /
rank: 10
score: 98.74292602539063
patch: / / / compute
rank: 10
score: 98.58062189275569
patch: if ( intersection ( intersection ) / / * /
rank: 11
score: 99.6249935752467
patch: Line line 1 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 11
score: 99.61937459309895
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 11
score: 99.58695903577302
patch: Line line $NUMBER$ = ( Line 1 ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 11
score: 99.5220718383789
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 11
score: 99.49168113425925
patch: this . sub CaMeL Line = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 11
score: 99.2624609375
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) != line 1 . get CaMeL Line CaMeL Number ( ) )
rank: 11
score: 98.987109375
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection . size ( ) )
rank: 11
score: 98.83240763346355
patch: / * / / / * / / * / /
rank: 11
score: 98.72622680664062
patch: / / { / / / /
rank: 11
score: 98.5789462002841
patch: if ( intersection ) { / * / } /
rank: 12
score: 99.62417763157895
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 12
score: 99.521669921875
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 12
score: 99.49154663085938
patch: this . sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 12
score: 99.26104329427083
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( / /
rank: 12
score: 98.98528180803571
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( line 1 . to CaMeL String ( ) ) ;
rank: 12
score: 98.83164284446023
patch: / * / / / * / * / /
rank: 12
score: 98.69223458426339
patch: / / / / / compute
rank: 12
score: 98.5771993001302
patch: if / * / / / / / / * /
rank: 13
score: 99.61675840435606
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 13
score: 99.48457336425781
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 13
score: 99.26037991431451
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) / /
rank: 13
score: 98.97769325657895
patch: int size = line 1 . get CaMeL Size ( ) line $NUMBER$ . size ( ) ;
rank: 13
score: 98.83057657877605
patch: / * / / * / / * * / /
rank: 13
score: 98.65581403459821
patch: / / { / / /
rank: 13
score: 98.5728251139323
patch: if ( intersection ) { / * / / * /
rank: 14
score: 99.51677911931819
patch: Sub CaMeL Line line $NUMBER$ = ( Sub CaMeL Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 14
score: 99.47956986860795
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 14
score: 99.26019965277777
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) )
rank: 14
score: 98.97562448601974
patch: if ( line $NUMBER$ == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 14
score: 98.82501220703125
patch: / * / / / / * / * / /
rank: 14
score: 98.63042534722223
patch: / / { / / / / compute
rank: 14
score: 98.57203979492188
patch: / * * /
rank: 15
score: 99.59932250976563
patch: Line line $NUMBER$ = ( Line ) this . sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 15
score: 99.54434204101562
patch: try { Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 15
score: 99.51514434814453
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 15
score: 99.46791015625
patch: this . sub CaMeL Line = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 15
score: 99.25994698660715
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line 1
rank: 15
score: 98.97340223524306
patch: if ( line $NUMBER$ != null line $NUMBER$ . get CaMeL Line CaMeL Number ( ) )
rank: 15
score: 98.82388305664062
patch: / / int / / / / / / / /
rank: 15
score: 98.57071533203126
patch: if ( intersection ( intersection ) / * /
rank: 15
score: 98.52489556206598
patch: / { / / / / / /
rank: 16
score: 99.53530883789062
patch: if ( include CaMeL End CaMeL Points ) {
rank: 16
score: 99.46588456003289
patch: return line 1 . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 16
score: 99.259384765625
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection . get CaMeL Line CaMeL Number ( ) ) {
rank: 16
score: 98.97274925595238
patch: boolean is CaMeL Empty = line 1 . is CaMeL Empty ( ) ; if ( is CaMeL Empty )
rank: 16
score: 98.82351449819711
patch: / * / / / * / / * / / /
rank: 16
score: 98.56201171875
patch: if ( intersection ) { / * / * / }
rank: 16
score: 98.51420084635417
patch: / / { / /
rank: 17
score: 99.59450396369485
patch: line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 17
score: 99.58928765190973
patch: Location line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 17
score: 99.53447129991319
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 17
score: 99.50696478949652
patch: File line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 17
score: 99.45653392650463
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 17
score: 99.25758713942308
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) > line $NUMBER$ . get CaMeL Line CaMeL Number ( ) ) {
rank: 17
score: 98.97248840332031
patch: Object [ ] intersection = new Object [ intersection . size ( ) ] ;
rank: 17
score: 98.82293146306819
patch: / / int / / / / / / /
rank: 17
score: 98.5568135579427
patch: if ( intersection ( intersection ) / * * / /
rank: 17
score: 98.48688422309027
patch: / / / / { / / /
rank: 18
score: 99.59099014945652
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 18
score: 99.4522265625
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 18
score: 99.25725686961206
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( )
rank: 18
score: 98.97134219898896
patch: if ( intersection == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 18
score: 98.81417846679688
patch: / * / int / / / / * / /
rank: 18
score: 98.55546061197917
patch: if ( intersection ) { / * / * / /
rank: 18
score: 98.47906494140625
patch: / / { / / / compute
rank: 19
score: 99.58619326636905
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 19
score: 99.50628952752976
patch: String line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 19
score: 99.44891357421875
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 19
score: 99.25250244140625
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( line 1
rank: 19
score: 98.9674072265625
patch: if ( intersection . is CaMeL Empty ( ) && line $NUMBER$ . is CaMeL Empty ( ) )
rank: 19
score: 98.81403057391827
patch: / * / / / / int / / / / /
rank: 19
score: 98.55063883463542
patch: if / * * /
rank: 19
score: 98.4765625
patch: / { / / / / /
rank: 20
score: 99.57554408482143
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . ( ) ;
rank: 20
score: 99.44816080729167
patch: else line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 20
score: 99.25243201622597
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == line 1 . get CaMeL Line CaMeL Number ( ) ) {
rank: 20
score: 98.96122233072917
patch: byte [ ] intersection = new byte [ intersection . intersection . size ( ) ] ;
rank: 20
score: 98.81394449869792
patch: / * * * * * * * * / /
rank: 20
score: 98.54999334161931
patch: if ( intersection != null ) { / * /
rank: 20
score: 98.46392822265625
patch: / / / { / / / /
rank: 21
score: 99.58446393694196
patch: Line line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) ;
rank: 21
score: 99.57033962673611
patch: Region line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 21
score: 99.52264404296875
patch: Node line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 21
score: 99.44704764229911
patch: this . include CaMeL End CaMeL Points = line 1 . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 21
score: 99.251796875
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) > line 1 . get CaMeL Line CaMeL Number ( ) )
rank: 21
score: 98.81370192307692
patch: / * * * * * * * * * / /
rank: 21
score: 98.54923502604167
patch: if ( intersection ) { / * / } * /
rank: 21
score: 98.43655056423611
patch: intersection / / / / / / /
rank: 22
score: 99.56868286132813
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 22
score: 99.51766967773438
patch: Line line $NUMBER$ = ( Sub CaMeL Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 22
score: 99.49335680509868
patch: Line sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 22
score: 99.44625693873355
patch: else sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 22
score: 99.25140625
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) <= line 1 . get CaMeL Line CaMeL Number ( ) )
rank: 22
score: 98.95826480263158
patch: if ( intersection == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 22
score: 98.81338266225961
patch: / * / / * / / * * * / /
rank: 22
score: 98.54850260416667
patch: if ( intersection ( intersection ) / * / ) {
rank: 22
score: 98.42567274305556
patch: infinite / / / / / / /
rank: 23
score: 99.582275390625
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 23
score: 99.56720842633929
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 23
score: 99.44533058449075
patch: this . sub CaMeL Line = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 23
score: 99.24586995442708
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( / *
rank: 23
score: 98.95743600945724
patch: if ( intersection == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 23
score: 98.8096923828125
patch: / * / / / / * / / * / /
rank: 23
score: 98.54638671875
patch: / * / throw / / / / / * /
rank: 23
score: 98.42082977294922
patch: / / / / { / /
rank: 24
score: 99.56173545435855
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line $NUMBER$ ( ) ;
rank: 24
score: 99.51393636067708
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Length ( ) ;
rank: 24
score: 99.49154663085938
patch: Sub CaMeL Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 24
score: 99.44401041666667
patch: for ( Sub CaMeL Line sub CaMeL Line : sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 24
score: 99.24388970269098
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line 1 )
rank: 24
score: 98.95642671130952
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) < intersection . size ( ) )
rank: 24
score: 98.80730731670673
patch: / * / / / int / / * / / /
rank: 24
score: 98.54353550502232
patch: if / * * * /
rank: 24
score: 98.41217041015625
patch: / / / { / / /
rank: 25
score: 99.57738470262096
patch: loc = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 25
score: 99.56063682154605
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line 1 . get CaMeL Hyperplane ( ) ;
rank: 25
score: 99.51280381944444
patch: if ( include CaMeL End CaMeL Points )
rank: 25
score: 99.49116443452381
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 25
score: 99.44208441840277
patch: this . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 25
score: 99.2396875
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == line 1 . get CaMeL Line CaMeL Number ( ) )
rank: 25
score: 98.95577566964286
patch: byte [ ] intersection = new byte [ intersection . length ] ;
rank: 25
score: 98.80516639122597
patch: / * / / * / / * / * / /
rank: 25
score: 98.54062906901042
patch: if ( intersection ) { / * / / } /
rank: 25
score: 98.39617919921875
patch: / { / / / / / compute
rank: 26
score: 99.57683856670673
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 26
score: 99.55501556396484
patch: Line line $NUMBER$ 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 26
score: 99.50874408922698
patch: Line line $NUMBER$ = ( Line ) line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 26
score: 99.48988694411058
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 26
score: 99.44072614397321
patch: this . include CaMeL End CaMeL Points = line 1 . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 26
score: 99.2387225811298
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < line 1 . get CaMeL Line CaMeL Number ( ) ) {
rank: 26
score: 98.95517113095238
patch: if ( intersection . is CaMeL Empty ( ) || line $NUMBER$ . is CaMeL Empty ( ) ) {
rank: 26
score: 98.80497602982955
patch: / * / / * / / * / /
rank: 26
score: 98.53742065429688
patch: if ( intersection ) { return / * /
rank: 26
score: 98.38692474365234
patch: / / /
rank: 27
score: 99.57630986752717
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 27
score: 99.55228464226974
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . intersection ( line 1 ) ;
rank: 27
score: 99.48550415039062
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 27
score: 99.43603515625
patch: if ( include CaMeL End CaMeL Points ) { if ( include CaMeL End CaMeL Points ) {
rank: 27
score: 99.23759765625
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < line $NUMBER$ . get CaMeL Line CaMeL Number ( ) )
rank: 27
score: 98.9521716889881
patch: boolean is CaMeL Empty = line $NUMBER$ . is CaMeL Empty ( ) ; if ( is CaMeL Empty )
rank: 27
score: 98.80340106670673
patch: / * / / * / / / / * / /
rank: 27
score: 98.53635660807292
patch: String intersection = intersection . to CaMeL String ( ) ;
rank: 27
score: 98.38471815321181
patch: int / / / / / / /
rank: 28
score: 99.5695571899414
patch: loc 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 28
score: 99.48507374730603
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 28
score: 99.435966796875
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 28
score: 99.23602653952206
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location (
rank: 28
score: 98.95066139914773
patch: if ( line $NUMBER$ . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) == null )
rank: 28
score: 98.80080837673611
patch: / * / * * * / /
rank: 28
score: 98.53610229492188
patch: if ( intersection ) { / System . / * /
rank: 28
score: 98.36260986328125
patch: / / / / else / / /
rank: 29
score: 99.54821196056548
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . line 1 ;
rank: 29
score: 99.50174110814145
patch: final String line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 29
score: 99.4832763671875
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 29
score: 99.43584650213069
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points || include CaMeL End CaMeL Points ) {
rank: 29
score: 99.23484235491071
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( )
rank: 29
score: 98.94980690696023
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / * line 1 . get CaMeL Message ( ) ) ;
rank: 29
score: 98.8006591796875
patch: / * / / / * / / / /
rank: 29
score: 98.5356201171875
patch: / * / /
rank: 29
score: 98.35175323486328
patch: infinite / / / / / /
rank: 30
score: 99.48123931884766
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 30
score: 99.43409559461806
patch: for ( Line line $NUMBER$ : sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 30
score: 99.23253631591797
patch: if ( line 1 . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number ( line 1
rank: 30
score: 98.9497958096591
patch: if ( line $NUMBER$ . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) == 0 )
rank: 30
score: 98.79910982572116
patch: / * / / * / / / * / / /
rank: 30
score: 98.53335571289062
patch: if ( intersection ) { System . / * / }
rank: 30
score: 98.35037570529514
patch: if / / / / / / /
rank: 31
score: 99.54621967516448
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Line ( ) ;
rank: 31
score: 99.49506378173828
patch: Line line $NUMBER$ = ( Line ) get CaMeL Remaining CaMeL Region ( ) ;
rank: 31
score: 99.48086368336396
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 31
score: 99.43375069754464
patch: this . include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 31
score: 99.23049692007211
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) <= line $NUMBER$ . get CaMeL Line CaMeL Number ( ) ) {
rank: 31
score: 98.9496737393466
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / * line $NUMBER$ . get CaMeL Message ( ) ) ;
rank: 31
score: 98.79608623798077
patch: / * / / / / / * / * / /
rank: 31
score: 98.53299967447917
patch: if ( intersection ) { this . intersection / * /
rank: 31
score: 98.34674072265625
patch: intersection / / / / / /
rank: 32
score: 99.55891219429348
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 32
score: 99.4914191750919
patch: Line line $NUMBER$ = ( Line ) line $NUMBER$ . get CaMeL Hyperplane ( ) ;
rank: 32
score: 99.43140366498162
patch: this . sub CaMeL Line = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 32
score: 99.23041449652777
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( / /
rank: 32
score: 98.948046875
patch: if ( intersection == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 32
score: 98.79347581129808
patch: / * / / * * / / * * / /
rank: 32
score: 98.52775065104167
patch: if ( intersection ) { System . / * / /
rank: 32
score: 98.34013366699219
patch: int / / / / / /
rank: 33
score: 99.556884765625
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 33
score: 99.54163953993056
patch: Line line $NUMBER$ 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 33
score: 99.48977821751645
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; }
rank: 33
score: 99.47832573784723
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 33
score: 99.42960611979167
patch: if ( line 1 != null && include CaMeL End CaMeL Points ) {
rank: 33
score: 99.22929551866319
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) ;
rank: 33
score: 98.94426879882812
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) >= intersection . size ( ) )
rank: 33
score: 98.79148512620192
patch: / * / / / * / * * * / /
rank: 33
score: 98.52646891276042
patch: / * * * /
rank: 33
score: 98.33756510416667
patch: / / / / { / / compute
rank: 34
score: 99.55626627604167
patch: return sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 34
score: 99.54060194227431
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Line ( ) ;
rank: 34
score: 99.48807565789474
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . intersection ( sub CaMeL Line ) ;
rank: 34
score: 99.47793666294643
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 34
score: 99.42960611979167
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( ) ;
rank: 34
score: 99.22872220552884
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != line 1 . get CaMeL Line CaMeL Number ( ) ) {
rank: 34
score: 98.94219415838069
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ / * line $NUMBER$ . get CaMeL Message ( ) ) ;
rank: 34
score: 98.79139122596153
patch: / * / / / * / * / * / /
rank: 34
score: 98.52449798583984
patch: if ( intersection ) { * /
rank: 34
score: 98.33509657118056
patch: / / / / / / compute CaMeL
rank: 35
score: 99.4855224609375
patch: Object line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 35
score: 99.47686476934524
patch: String line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 35
score: 99.42719377790179
patch: this . include CaMeL End CaMeL Points = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 35
score: 99.22824331430289
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) != line $NUMBER$ . get CaMeL Line CaMeL Number ( ) ) {
rank: 35
score: 98.94198947482639
patch: if ( line $NUMBER$ == null || ! line $NUMBER$ . is CaMeL Empty ( ) )
rank: 35
score: 98.7911376953125
patch: / * / int / / / / / * / /
rank: 35
score: 98.52370198567708
patch: if ( intersection ( intersection ) / / / / compute
rank: 35
score: 98.33444213867188
patch: / / { /
rank: 36
score: 99.55030235877403
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ;
rank: 36
score: 99.53207542782738
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 36
score: 99.4764633178711
patch: Sub CaMeL Line sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 36
score: 99.42598179408482
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( $STRING$ ) ;
rank: 36
score: 99.227255859375
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) > line $NUMBER$ . get CaMeL Line CaMeL Number ( ) )
rank: 36
score: 98.94184802827381
patch: if ( line $NUMBER$ != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != null )
rank: 36
score: 98.79091574928977
patch: / * / / / * * / / /
rank: 36
score: 98.52315266927083
patch: if ( intersection ) { / * / } / }
rank: 36
score: 98.33425564236111
patch: public / / / / / / /
rank: 37
score: 99.54862706801471
patch: loc 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 37
score: 99.53038969494048
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) ;
rank: 37
score: 99.48524780273438
patch: Line sub CaMeL Line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 37
score: 99.47531467013889
patch: String line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 37
score: 99.42564453125
patch: this . include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 37
score: 99.22611490885417
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( / *
rank: 37
score: 98.94005669487848
patch: if ( line $NUMBER$ == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 37
score: 98.78926908052884
patch: / * / / / int * / / / / /
rank: 37
score: 98.52187093098958
patch: if ( intersection ) { return intersection / / * /
rank: 37
score: 98.32968575613839
patch: / { / / / /
rank: 38
score: 99.54833196824596
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 38
score: 99.52992553710938
patch: Line line $NUMBER$ 1 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 38
score: 99.48432360197368
patch: Line line $NUMBER$ = ( Line $NUMBER$ ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 38
score: 99.47357700892857
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 38
score: 99.42526112432066
patch: this . sub CaMeL Line = sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 38
score: 99.22354910714286
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( }
rank: 38
score: 98.93882533482143
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + line 1 . get CaMeL Line ( ) ) ;
rank: 38
score: 98.78870567908653
patch: / * / / / * * / / * / /
rank: 38
score: 98.5181884765625
patch: if ( intersection ( intersection ( intersection ) / / compute
rank: 38
score: 98.32324896918402
patch: / / / / } / / /
rank: 39
score: 99.47282579210069
patch: Element line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 39
score: 99.42449951171875
patch: this . include CaMeL End CaMeL Points = line 1 . get CaMeL Hyperplane ( ) ;
rank: 39
score: 99.2217266376202
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < line $NUMBER$ . get CaMeL Line CaMeL Number ( ) ) {
rank: 39
score: 98.93755231584821
patch: Object [ ] intersection = new Object [ intersection . length ] ;
rank: 39
score: 98.78823617788461
patch: / / / / / / / / / / / /
rank: 39
score: 98.5166348544034
patch: if ( intersection ( intersection ( intersection ( intersection )
rank: 39
score: 98.32253011067708
patch: / int / / / / / /
rank: 40
score: 99.54488431490384
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 40
score: 99.48021647135417
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 40
score: 99.471435546875
patch: final Sub CaMeL Line line $NUMBER$ = ( Sub CaMeL Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 40
score: 99.42448820891204
patch: this . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 40
score: 99.22113506610577
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > line 1 . get CaMeL Line CaMeL Number ( ) ) {
rank: 40
score: 98.93736356847427
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == - 1 )
rank: 40
score: 98.78823617788461
patch: / * / int / / / / * / / /
rank: 40
score: 98.51636759440105
patch: if ( intersection ) { / * / } / /
rank: 40
score: 98.31957135881696
patch: infinite / / / / /
rank: 41
score: 99.54293915719697
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 41
score: 99.52546243106617
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) ;
rank: 41
score: 99.47011021205357
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 41
score: 99.42360206886575
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 41
score: 99.22080775669643
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line 1 . get CaMeL Location ( )
rank: 41
score: 98.93724907769098
patch: Object [ ] intersection = new Object [ intersection . intersection . size ( ) ] ;
rank: 41
score: 98.78781362680289
patch: / * / / / / / * * / / /
rank: 41
score: 98.51300048828125
patch: if ( intersection ) { / / * /
rank: 41
score: 98.31843397352431
patch: / / / / / / } /
rank: 42
score: 99.54241071428571
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 42
score: 99.52535207648026
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line 1 ( ) ;
rank: 42
score: 99.47533365885417
patch: = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 42
score: 99.46970533288044
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 42
score: 99.42116001674107
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 42
score: 99.22045084635417
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( line 1
rank: 42
score: 98.9371004971591
patch: if ( line $NUMBER$ . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) != null )
rank: 42
score: 98.78731595552884
patch: / * / / * * / / / * / /
rank: 42
score: 98.5120137532552
patch: if / * / / / / * / * /
rank: 42
score: 98.31656222873264
patch: / / / { / / / compute
rank: 43
score: 99.54193115234375
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 43
score: 99.52455540707237
patch: final Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 43
score: 99.47396047491776
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 43
score: 99.46847195095486
patch: Line - 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 43
score: 99.42024448939732
patch: this . intersection = line 1 . intersection ( line $NUMBER$ ) ;
rank: 43
score: 99.219287109375
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < intersection . get CaMeL Line CaMeL Number ( ) ) {
rank: 43
score: 98.93586077008929
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < intersection . size ( ) ) {
rank: 43
score: 98.78659292367789
patch: / * / / * / / * * / / /
rank: 43
score: 98.5114237467448
patch: if ( intersection ) { / / * / * /
rank: 43
score: 98.31154378255208
patch: infinite / / / / / / compute
rank: 44
score: 99.54006865530303
patch: sub CaMeL Line = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 44
score: 99.52132161458333
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 44
score: 99.47211456298828
patch: final Object line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 44
score: 99.46843927556819
patch: final boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 44
score: 99.41864013671875
patch: if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points ) {
rank: 44
score: 99.2179754849138
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line 1
rank: 44
score: 98.93488159179688
patch: int length = line 1 . get CaMeL Length ( ) line $NUMBER$ . get CaMeL Length ( )
rank: 44
score: 98.78606708233173
patch: / * / / / * / / / / / /
rank: 44
score: 98.50809733072917
patch: if / * / / / / / * / /
rank: 44
score: 98.30986870659723
patch: / / / else / / / /
rank: 45
score: 99.53999255952381
patch: return ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 45
score: 99.41845703125
patch: this . sub CaMeL Line = line 1 . intersection ( line $NUMBER$ ) ;
rank: 45
score: 99.21766183035714
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line 1 . get CaMeL Location ( ) . get CaMeL Location ( )
rank: 45
score: 98.93217540922619
patch: if ( intersection . is CaMeL Empty ( ) / * || intersection . is CaMeL Empty ( ) )
rank: 45
score: 98.78594501201923
patch: / * / / / / * / * / / /
rank: 45
score: 98.5079854329427
patch: if ( intersection ( intersection ) / * / / /
rank: 45
score: 98.3085225423177
patch: / { / / /
rank: 46
score: 99.5388516512784
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 46
score: 99.46717593544408
patch: if ( line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 46
score: 99.41815476190476
patch: if ( include CaMeL End CaMeL Points ) { return sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 46
score: 99.2164306640625
patch: if ( line 1 . get CaMeL Location ( ) . equals ( line 1 . get CaMeL Location ( ) ) )
rank: 46
score: 98.93113606770834
patch: byte [ ] intersection = new byte [ intersection . / $NUMBER$ ] ;
rank: 46
score: 98.78543795072116
patch: / * / / / * / / / / * /
rank: 46
score: 98.50776811079545
patch: if ( intersection ) { return / / * /
rank: 46
score: 98.30841064453125
patch: / / int / / / / /
rank: 47
score: 99.53860473632812
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( ) ;
rank: 47
score: 99.46660020616319
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 47
score: 99.41770935058594
patch: super . intersection ( sub CaMeL Line , include CaMeL End CaMeL Points ) ;
rank: 47
score: 99.21635584677419
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) ) {
rank: 47
score: 98.93086170014881
patch: if ( line $NUMBER$ != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > 0 )
rank: 47
score: 98.78477986653645
patch: / * / / / * * / * / /
rank: 47
score: 98.5076904296875
patch: if ( intersection ( intersection ) / / * compute
rank: 47
score: 98.30782318115234
patch: / / / } / / /
rank: 48
score: 99.53781029485887
patch: loc = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 48
score: 99.51531372070312
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ,
rank: 48
score: 99.46441329152961
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line ) . get CaMeL Hyperplane ( ) ;
rank: 48
score: 99.417412109375
patch: this . sub CaMeL Line = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 48
score: 99.215078125
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != line 1 . get CaMeL Line CaMeL Number ( ) )
rank: 48
score: 98.93076985677084
patch: final int [ ] intersection = new int [ intersection . length ] ;
rank: 48
score: 98.78453911675348
patch: / * * / * * / /
rank: 48
score: 98.50637817382812
patch: if ( intersection ( intersection ) / / / * /
rank: 48
score: 98.30769348144531
patch: / / / / } / /
rank: 49
score: 99.41680438701923
patch: this . line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 49
score: 99.214990234375
patch: if ( line 1 . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number (
rank: 49
score: 98.9306640625
patch: if ( line 1 != null && line $NUMBER$ . is CaMeL Empty ( ) )
rank: 49
score: 98.78450150923295
patch: / * / / / * * * / /
rank: 49
score: 98.5044453938802
patch: if / * / / / * / / * /
rank: 49
score: 98.30581325954861
patch: / * / / / / / /
rank: 50
score: 99.53385620117187
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 50
score: 99.51318359375
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) ;
rank: 50
score: 99.4637451171875
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 50
score: 99.46293334960937
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( $STRING$ ) ;
rank: 50
score: 99.41646321614583
patch: this . include CaMeL End CaMeL Points = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 50
score: 99.21486118861607
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( line 1 . to CaMeL Lower CaMeL Case ( ) ) )
rank: 50
score: 98.93052673339844
patch: if ( intersection != null && line $NUMBER$ . is CaMeL Empty ( ) )
rank: 50
score: 98.78431532118056
patch: / * / / * / / /
rank: 50
score: 98.50074259440105
patch: if ( intersection ) { / / } / * /
rank: 50
score: 98.30294460720486
patch: / / / / / } / /
rank: 51
score: 99.53384399414062
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) ;
rank: 51
score: 99.512890625
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ )
rank: 51
score: 99.46227309283088
patch: try { Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 51
score: 99.214736328125
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) != line $NUMBER$ . get CaMeL Line CaMeL Number ( ) )
rank: 51
score: 98.92921084449405
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection . size ( ) ) {
rank: 51
score: 98.78397993607955
patch: / * * * * * * * / /
rank: 51
score: 98.4984639485677
patch: if ( intersection ) { / / * / } /
rank: 51
score: 98.30243791852679
patch: / / { / / compute
rank: 52
score: 99.53369903564453
patch: line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 52
score: 99.51270751953125
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 )
rank: 52
score: 99.41461540670956
patch: p $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 52
score: 99.21426156850961
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) <= line 1 . get CaMeL Line CaMeL Number ( ) ) {
rank: 52
score: 98.92901611328125
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) >= intersection . size ( ) )
rank: 52
score: 98.78321422230114
patch: / * / / / * / / * /
rank: 52
score: 98.49652654474431
patch: if ( intersection ( intersection ) / / / compute
rank: 52
score: 98.29597981770833
patch: / / / / / / / }
rank: 53
score: 99.45709635416667
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( line $NUMBER$ ) ;
rank: 53
score: 99.41355678013393
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 53
score: 99.213828125
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) <= line $NUMBER$ . get CaMeL Line CaMeL Number ( ) )
rank: 53
score: 98.92877752130681
patch: if ( intersection . is CaMeL Empty ( ) / * || intersection . is CaMeL Empty ( ) * /
rank: 53
score: 98.78000217013889
patch: / * / / / int * /
rank: 53
score: 98.49564615885417
patch: if ( intersection / / / / / / / /
rank: 53
score: 98.29377092633929
patch: intersection / / / / /
rank: 54
score: 99.53308868408203
patch: loc 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 54
score: 99.51231689453125
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection (
rank: 54
score: 99.46309538810483
patch: Sub CaMeL Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 54
score: 99.45490858289931
patch: Object line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 54
score: 99.41319056919643
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 54
score: 99.21318359375
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line $NUMBER$
rank: 54
score: 98.92828838641827
patch: final int [ ] intersection = new int [ $NUMBER$ ] ;
rank: 54
score: 98.77846272786458
patch: / * / / * / * * * / /
rank: 54
score: 98.49527587890626
patch: / / * /
rank: 54
score: 98.28971354166667
patch: / / / / / / / try
rank: 55
score: 99.50982344777961
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1
rank: 55
score: 99.45816243489584
patch: Line sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 55
score: 99.45415649414062
patch: Line line $NUMBER$ = ( Region ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 55
score: 99.41263521634616
patch: this . include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . intersection ( line $NUMBER$ ) ;
rank: 55
score: 99.21201171875
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( / /
rank: 55
score: 98.92356178977273
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) == 0 )
rank: 55
score: 98.77552286783855
patch: / * / / / / * * * / /
rank: 55
score: 98.49420166015625
patch: if ( intersection ) { / * * / } /
rank: 55
score: 98.28406439887152
patch: / / / } / / / /
rank: 56
score: 99.52824964021382
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) == null
rank: 56
score: 99.50954718338816
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 56
score: 99.45806674299568
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 56
score: 99.45280456542969
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( sub CaMeL Line ) ;
rank: 56
score: 99.41180419921875
patch: / * if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 56
score: 99.21181955645162
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) / /
rank: 56
score: 98.92265181107955
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) == null )
rank: 56
score: 98.77488014914773
patch: / * / / / int / / / /
rank: 56
score: 98.49043782552083
patch: if ( intersection ) { / * / * * /
rank: 56
score: 98.27836778428819
patch: / / final / / / / /
rank: 57
score: 99.52782185872395
patch: Line line $NUMBER$ = line 1 . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 57
score: 99.45775204613095
patch: final Sub CaMeL Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 57
score: 99.45265197753906
patch: final Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 57
score: 99.41164926382211
patch: this . include CaMeL End CaMeL Points = line 1 . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 57
score: 99.2105224609375
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line 1 )
rank: 57
score: 98.92225864955357
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) >= intersection . size ( ) )
rank: 57
score: 98.77381727430556
patch: / * * * * * / /
rank: 57
score: 98.48893599076705
patch: if ( intersection ) { return intersection / * /
rank: 57
score: 98.27810668945312
patch: / int / / / / /
rank: 58
score: 99.50586615668402
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Space ( ) ;
rank: 58
score: 99.45222981770833
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) {
rank: 58
score: 99.41131591796875
patch: Point line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 58
score: 99.21031775841347
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == line $NUMBER$ . get CaMeL Line CaMeL Number ( ) ) {
rank: 58
score: 98.9220721905048
patch: if ( line 1 == null || line $NUMBER$ == null )
rank: 58
score: 98.77189497514205
patch: / * / / * * / / * /
rank: 58
score: 98.4865010579427
patch: if / * * * / } / / * /
rank: 58
score: 98.27584075927734
patch: / / / / else / /
rank: 59
score: 99.5269775390625
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Remaining CaMeL Region ( ) ;
rank: 59
score: 99.45632102272727
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 59
score: 99.45017700195312
patch: Line sub CaMeL Line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 59
score: 99.4104296875
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 59
score: 99.21013532366071
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( line $NUMBER$ . to CaMeL Lower CaMeL Case ( ) ) )
rank: 59
score: 98.92167358398437
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < intersection . length / $NUMBER$ )
rank: 59
score: 98.77131791548295
patch: / * / / * * / * / /
rank: 59
score: 98.48648071289062
patch: / * / System . / / / / * /
rank: 59
score: 98.27531215122768
patch: / / / } / /
rank: 60
score: 99.52589634486607
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 60
score: 99.45328422214673
patch: Sub CaMeL Line sub CaMeL Line = ( Sub CaMeL Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 60
score: 99.44939221833882
patch: Line line $NUMBER$ = ( Line ) ( sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 60
score: 99.40985576923077
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ;
rank: 60
score: 99.20821439302884
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > line $NUMBER$ . get CaMeL Line CaMeL Number ( ) ) {
rank: 60
score: 98.92136840820312
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line CaMeL Number ( ) ;
rank: 60
score: 98.77052815755208
patch: / * / / / / / * * / /
rank: 60
score: 98.48525168678977
patch: if ( intersection ) { return / * / }
rank: 60
score: 98.27471245659723
patch: / / / / / { / /
rank: 61
score: 99.52580915178571
patch: loc 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 61
score: 99.50423177083333
patch: Location line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 61
score: 99.44464111328125
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Offset ( ) ;
rank: 61
score: 99.40730503627232
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( this ) ;
rank: 61
score: 99.2073465983073
patch: if ( line 1 . get CaMeL Name ( ) . equals ( line 1 . get CaMeL Name ( ) ) )
rank: 61
score: 98.9213534268466
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < intersection . size ( ) / $NUMBER$ )
rank: 61
score: 98.7701416015625
patch: / * / / * * / / * / /
rank: 61
score: 98.48445638020833
patch: if ( intersection ( intersection ( intersection )
rank: 61
score: 98.27336774553571
patch: int / / / / /
rank: 62
score: 99.52576700846355
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ;
rank: 62
score: 99.50393880208334
patch: Line line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 62
score: 99.45151154891305
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 62
score: 99.40650523792614
patch: if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 62
score: 99.207138671875
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < line 1 . get CaMeL Line CaMeL Number ( ) )
rank: 62
score: 98.92079856178977
patch: if ( line $NUMBER$ . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) > 0 )
rank: 62
score: 98.76975504557292
patch: / * / / / / int / / / /
rank: 62
score: 98.4836934407552
patch: if ( intersection ) { return / * / * /
rank: 62
score: 98.2719497680664
patch: / { / / / / compute
rank: 63
score: 99.40581665039062
patch: this . include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 63
score: 99.20676618303571
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line 1
rank: 63
score: 98.92059616815476
patch: if ( intersection . is CaMeL Empty ( ) && line $NUMBER$ . is CaMeL Empty ( ) ) {
rank: 63
score: 98.76971435546875
patch: / * / / / * * * * / /
rank: 63
score: 98.4832763671875
patch: if / * / / / / / * * /
rank: 63
score: 98.26842583550348
patch: / / * / / / / /
rank: 64
score: 99.52337890625
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( sub CaMeL Line ) ;
rank: 64
score: 99.49847819010417
patch: Line line $NUMBER$ 1 = line 1 . intersection ( line $NUMBER$ ) ;
rank: 64
score: 99.44005126953125
patch: = get CaMeL Remaining CaMeL Region ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 64
score: 99.4053203876202
patch: this . line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 64
score: 99.203994140625
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) / /
rank: 64
score: 98.91976768092105
patch: if ( line $NUMBER$ != null line $NUMBER$ . get CaMeL Line CaMeL Number ( ) ) {
rank: 64
score: 98.766162109375
patch: / * / / * * * / /
rank: 64
score: 98.48276774088542
patch: if ( intersection ( intersection ( intersection ) / * /
rank: 64
score: 98.2637939453125
patch: throw / / / / / / /
rank: 65
score: 99.52321490119485
patch: line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 65
score: 99.49705595128677
patch: Line line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 65
score: 99.45074252424568
patch: String line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 65
score: 99.43913188733552
patch: final Object line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 65
score: 99.40456136067708
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) != null ) {
rank: 65
score: 99.20221416766827
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == line 1 . get CaMeL Line CaMeL Number ( ) ) {
rank: 65
score: 98.915771484375
patch: byte [ ] intersection = new byte [ $NUMBER$ ] ;
rank: 65
score: 98.76602172851562
patch: / * / / * / / / * * /
rank: 65
score: 98.47938537597656
patch: if ( intersection != null ) {
rank: 65
score: 98.26176622178819
patch: intersection / { / / / / /
rank: 66
score: 99.52321019665948
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 66
score: 99.49616156684027
patch: sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 66
score: 99.4500262920673
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 66
score: 99.43907973345588
patch: Line line $NUMBER$ = sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ;
rank: 66
score: 99.40347726004464
patch: this . include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 ) ;
rank: 66
score: 99.20219421386719
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) / / /
rank: 66
score: 98.9145751953125
patch: if ( line $NUMBER$ == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 66
score: 98.7650655110677
patch: / * / / / * / * * / /
rank: 66
score: 98.47938121448864
patch: if / * / / / / / * /
rank: 66
score: 98.26041085379464
patch: / / / / { /
rank: 67
score: 99.52263274016204
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) : sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 67
score: 99.49556884765624
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get (
rank: 67
score: 99.44971575055804
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 67
score: 99.43764776932566
patch: Line line $NUMBER$ = ( Line ) line 1 . get CaMeL Sub CaMeL Space ( ) ;
rank: 67
score: 99.40111400462963
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . intersection ( line 1 ) ;
rank: 67
score: 99.19805145263672
patch: if ( line 1 . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line 1
rank: 67
score: 98.91379266036184
patch: String line $NUMBER$ = ( String ) sub CaMeL Line . get CaMeL Property ( $STRING$ ) ;
rank: 67
score: 98.76449584960938
patch: / * / / * / * / /
rank: 67
score: 98.47632853190105
patch: if ( intersection ( intersection ( intersection ) / / /
rank: 67
score: 98.25627983940973
patch: int / / / / / / compute
rank: 68
score: 99.5215625
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) : sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 68
score: 99.49546412417763
patch: Line line $NUMBER$ $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 68
score: 99.44903041294643
patch: int include CaMeL End CaMeL Points = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 68
score: 99.43653700086806
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . intersection ( line 1 ) ;
rank: 68
score: 99.40011935763889
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ;
rank: 68
score: 99.1976651278409
patch: if ( line 1 . get CaMeL Line ( ) != line 1 . get CaMeL Line ( ) ) {
rank: 68
score: 98.91218705610795
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( line 1 . get CaMeL Line CaMeL Number ( ) )
rank: 68
score: 98.7642578125
patch: / / int / / / / / /
rank: 68
score: 98.47320556640625
patch: if ( intersection ( intersection ) / / compute
rank: 68
score: 98.2562026977539
patch: public / / / / / /
rank: 69
score: 99.52108869881465
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 69
score: 99.44874441964286
patch: int include CaMeL End CaMeL Points = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 69
score: 99.43559827302632
patch: Line line $NUMBER$ = ( Line ) line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ;
rank: 69
score: 99.197421875
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == line $NUMBER$ . get CaMeL Line CaMeL Number ( ) )
rank: 69
score: 98.9121157997533
patch: Array CaMeL List < String > intersection = new Array CaMeL List < String > ( ) ;
rank: 69
score: 98.76243082682292
patch: / * / / / / * / / / /
rank: 69
score: 98.47291259765625
patch: if ( intersection ) { / * / }
rank: 69
score: 98.25613403320312
patch: / / / / try
rank: 70
score: 99.52070674189815
patch: loc = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 70
score: 99.49444221047794
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( )
rank: 70
score: 99.44866536458333
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 70
score: 99.43538411458333
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . ( ) ;
rank: 70
score: 99.3978859230324
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points || include CaMeL End CaMeL Points )
rank: 70
score: 99.19596644810268
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) . equals ( line 1 . get CaMeL Line CaMeL Number ( ) ) )
rank: 70
score: 98.91194291548295
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ / * line 1 . get CaMeL Message ( ) ) ;
rank: 70
score: 98.7623623934659
patch: / * / / / / * * / /
rank: 70
score: 98.4727783203125
patch: / * / throw / / / / * /
rank: 70
score: 98.25335693359375
patch: / / throw / / / / /
rank: 71
score: 99.52046926398026
patch: Line line $NUMBER$ = ( Line ) get CaMeL Remaining CaMeL Region ( sub CaMeL Line ) ;
rank: 71
score: 99.44833984375
patch: Line line $NUMBER$ = sub CaMeL Line . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 71
score: 99.39759657118056
patch: double line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 71
score: 99.19576710668103
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( line 1 . to CaMeL Lower CaMeL Case ( ) ) ) {
rank: 71
score: 98.91083984375
patch: String line $NUMBER$ = ( String ) sub CaMeL Line . get CaMeL Line CaMeL Number ( ) ;
rank: 71
score: 98.7620137532552
patch: / * / / * / * / * / /
rank: 71
score: 98.47265625
patch: if ( intersection ) { / * / /
rank: 71
score: 98.24773491753473
patch: / / boolean / / / / /
rank: 72
score: 99.5191983309659
patch: Line line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 72
score: 99.49356882195724
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Sub CaMeL Space ( )
rank: 72
score: 99.44731212797619
patch: String line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 72
score: 99.43303479646382
patch: Line line $NUMBER$ = ( Line ) ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 72
score: 99.39652876420455
patch: super . intersection ( sub CaMeL Line , include CaMeL End CaMeL Points , include CaMeL End CaMeL Points ) ;
rank: 72
score: 99.19568359375
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) <= line 1 . get CaMeL Line CaMeL Number ( ) )
rank: 72
score: 98.9106778231534
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( line 1 . to CaMeL String ( ) / $NUMBER$ )
rank: 72
score: 98.76122029622395
patch: / * / / * * * / * / /
rank: 72
score: 98.47201538085938
patch: / / * / / / / / / * /
rank: 72
score: 98.24365234375
patch: infinite / / / / / compute
rank: 73
score: 99.51919410342262
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; / * /
rank: 73
score: 99.49176635742188
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . intersection ( sub CaMeL Line ) ;
rank: 73
score: 99.446044921875
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space (
rank: 73
score: 99.43092105263158
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; ;
rank: 73
score: 99.39522611177884
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 73
score: 99.1953125
patch: if ( line 1 . equals CaMeL Ignore CaMeL Case ( $STRING$ ) || line $NUMBER$ . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 73
score: 98.91011962890624
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > intersection . size ( ) )
rank: 73
score: 98.760986328125
patch: / * / / * * * * / /
rank: 73
score: 98.47125244140625
patch: if / * * * * /
rank: 73
score: 98.2433090209961
patch: / * / / / / /
rank: 74
score: 99.51790645204741
patch: return line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 74
score: 99.39443630642361
patch: int line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 74
score: 99.19527180989583
patch: if ( line 1 . get CaMeL Line ( ) . equals ( line 1 . get CaMeL Line ( ) ) )
rank: 74
score: 98.90961770450367
patch: if ( line $NUMBER$ == null || line $NUMBER$ . is CaMeL Empty ( ) )
rank: 74
score: 98.76068670099431
patch: / * / / * * / / / /
rank: 74
score: 98.47101593017578
patch: if / * * * / /
rank: 74
score: 98.24089704241071
patch: / / / { / /
rank: 75
score: 99.49042069284539
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) != null
rank: 75
score: 99.44531989820075
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 75
score: 99.42896185980902
patch: Line intersection 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 75
score: 99.3939453125
patch: return get CaMeL Remaining CaMeL Region ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 75
score: 99.194775390625
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) )
rank: 75
score: 98.90863591974431
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection . size ( ) / $NUMBER$ )
rank: 75
score: 98.75906711154514
patch: / * / * / * / /
rank: 75
score: 98.47056070963542
patch: if / * / / / / / * / }
rank: 75
score: 98.23885769314236
patch: logger / / / / / / /
rank: 76
score: 99.49012586805556
patch: Region line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 76
score: 99.42872450086806
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Name ( ) ;
rank: 76
score: 99.39311161747685
patch: if ( include CaMeL End CaMeL Points && line 1 . to CaMeL Sub CaMeL Space ( ) . include CaMeL End CaMeL Points ) {
rank: 76
score: 99.19462193080358
patch: if ( line $NUMBER$ . get CaMeL Line ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( )
rank: 76
score: 98.90779252485795
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) != null )
rank: 76
score: 98.7577412923177
patch: / * / / / int / / * / /
rank: 76
score: 98.46995960582386
patch: if ( intersection ) { try { / * /
rank: 76
score: 98.23881700303819
patch: intersection / / / / / / compute
rank: 77
score: 99.51696014404297
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 77
score: 99.39308763586956
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) != null )
rank: 77
score: 99.19427849264706
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line
rank: 77
score: 98.90770321800595
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) <= intersection . size ( ) )
rank: 77
score: 98.7562744140625
patch: / * * / * * * / /
rank: 77
score: 98.46910749162946
patch: / * / * / /
rank: 77
score: 98.23433685302734
patch: / / / else / / /
rank: 78
score: 99.51695667613636
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 78
score: 99.44086248224431
patch: Sub CaMeL Line line 1 = ( Sub CaMeL Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 78
score: 99.39171142578125
patch: return line 1 . intersection ( include CaMeL End CaMeL Points , include CaMeL End CaMeL Points ) ;
rank: 78
score: 99.19424293154762
patch: if ( line 1 . get CaMeL Line ( ) != line 1 . get CaMeL Line ( ) )
rank: 78
score: 98.9066650390625
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) <= intersection . size ( ) )
rank: 78
score: 98.75620524088542
patch: / * / / * * * * * / /
rank: 78
score: 98.46620871803977
patch: if ( intersection ) { / / * / /
rank: 78
score: 98.23401641845703
patch: / / / / * / /
rank: 79
score: 99.514404296875
patch: return sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 79
score: 99.48859252929688
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; / *
rank: 79
score: 99.44082302517361
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 79
score: 99.39049421037946
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points || include CaMeL End CaMeL Points ) {
rank: 79
score: 99.192001953125
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < line $NUMBER$ . get CaMeL Line CaMeL Number ( ) )
rank: 79
score: 98.90378705193015
patch: if ( line 1 != null && line 1 . is CaMeL Empty ( ) )
rank: 79
score: 98.75553755326705
patch: / * / / / / * / / /
rank: 79
score: 98.46565551757813
patch: if ( intersection ) { intersection / * /
rank: 79
score: 98.2335205078125
patch: / int / / / / / compute
rank: 80
score: 99.51409715221774
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 80
score: 99.48831515842014
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) +
rank: 80
score: 99.43962991648706
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 80
score: 99.42278089021382
patch: Object line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 80
score: 99.39036729600694
patch: long line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 80
score: 99.19176374162946
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( line 1 . to CaMeL Lower CaMeL Case ( ) / /
rank: 80
score: 98.90377371651786
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) < intersection . length / $NUMBER$ )
rank: 80
score: 98.75367228190105
patch: / int / / / / / / / / /
rank: 80
score: 98.46434020996094
patch: if ( intersection && intersection ) {
rank: 80
score: 98.23284149169922
patch: / / / / / } /
rank: 81
score: 99.48639787946429
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 == null
rank: 81
score: 99.43791852678571
patch: Line line $NUMBER$ = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 81
score: 99.42268451891448
patch: if ( line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 81
score: 99.3899158296131
patch: return intersection ( sub CaMeL Line , include CaMeL End CaMeL Points , include CaMeL End CaMeL Points ) ;
rank: 81
score: 99.190673828125
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number ( line 1
rank: 81
score: 98.90325927734375
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection . length / $NUMBER$ )
rank: 81
score: 98.75355113636364
patch: / * / / * * * / / /
rank: 81
score: 98.46317545572917
patch: if ( intersection ( intersection ) / / / * compute
rank: 81
score: 98.23050265842014
patch: / / / / / else / /
rank: 82
score: 99.51318359375
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 82
score: 99.48540938527961
patch: String line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 82
score: 99.4375887784091
patch: final boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 82
score: 99.42074245876736
patch: D line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 82
score: 99.38988037109375
patch: / * Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 82
score: 99.19013503502156
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) . equals ( line 1 . get CaMeL Line CaMeL Number ( ) ) ) {
rank: 82
score: 98.90277420847039
patch: int length = line 1 . get CaMeL Length ( ) line $NUMBER$ . length ( ) ;
rank: 82
score: 98.75344016335227
patch: / * / / / int * / / /
rank: 82
score: 98.462890625
patch: if ( intersection == null ) { return / * /
rank: 82
score: 98.22890896267361
patch: / / int / / / / compute
rank: 83
score: 99.51309967041016
patch: Line line $NUMBER$ = ( Line ) this . get CaMeL Hyperplane ( ) ;
rank: 83
score: 99.484619140625
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) *
rank: 83
score: 99.43704223632812
patch: Sub CaMeL Line sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 83
score: 99.42044228001645
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 83
score: 99.38896348741319
patch: else line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 83
score: 99.189697265625
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > line 1 . get CaMeL Line CaMeL Number ( ) )
rank: 83
score: 98.90276544744319
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / * line 1 . get CaMeL Class ( ) ) ;
rank: 83
score: 98.7527567545573
patch: / * / / / / / / * / /
rank: 83
score: 98.4628018465909
patch: if ( intersection && intersection ) { / * /
rank: 83
score: 98.22816297743056
patch: / / else / / / / /
rank: 84
score: 99.51296164772727
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 84
score: 99.43633270263672
patch: long include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 84
score: 99.41945929276316
patch: final Line line $NUMBER$ = ( Region ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 84
score: 99.38836991159539
patch: for ( Line sub CaMeL Line : sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 84
score: 99.189599609375
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == line 1 . get CaMeL Line CaMeL Number ( ) )
rank: 84
score: 98.90148207720588
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == - 1 )
rank: 84
score: 98.7518310546875
patch: / * / int / / / * / /
rank: 84
score: 98.46184747869319
patch: if ( intersection ) { / / * / }
rank: 84
score: 98.22791205512152
patch: / / / / / / / int
rank: 85
score: 99.483837890625
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ,
rank: 85
score: 99.41834781044408
patch: Line Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 85
score: 99.18923424030173
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( line $NUMBER$ . to CaMeL Lower CaMeL Case ( ) ) ) {
rank: 85
score: 98.90097045898438
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) <= intersection . size ( ) )
rank: 85
score: 98.7498779296875
patch: / * * / / * / /
rank: 85
score: 98.45927290482955
patch: if ( intersection || intersection ) { / * /
rank: 85
score: 98.22597249348958
patch: infinite / / / /
rank: 86
score: 99.51233673095703
patch: line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 86
score: 99.48348236083984
patch: Line line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 86
score: 99.43523615056819
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 86
score: 99.38767578125
patch: this . include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 86
score: 99.18885323660714
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( /
rank: 86
score: 98.9008544921875
patch: int size = line 1 . get CaMeL Size ( ) line $NUMBER$ . get CaMeL Size ( )
rank: 86
score: 98.7496846516927
patch: / * / / / * * / / / /
rank: 86
score: 98.45668538411458
patch: if / * / / / / } / * /
rank: 86
score: 98.2255630493164
patch: / / final / / / /
rank: 87
score: 99.51093581627156
patch: sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 87
score: 99.482958984375
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Line ( ) ;
rank: 87
score: 99.43436686197917
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 87
score: 99.41789165296052
patch: final Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line ( ) ;
rank: 87
score: 99.38673037574405
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 87
score: 99.18842315673828
patch: if ( line 1 . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number ( line $NUMBER$
rank: 87
score: 98.90003662109375
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) > intersection . size ( ) )
rank: 87
score: 98.74888305664062
patch: / * * * * * * / /
rank: 87
score: 98.45610700334821
patch: / * * * * /
rank: 87
score: 98.22404479980469
patch: / / / / / / }
rank: 88
score: 99.50953125
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 88
score: 99.47970145089286
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line 1 ) ;
rank: 88
score: 99.41718493009868
patch: final int line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 88
score: 99.38587297712054
patch: this . include CaMeL End CaMeL Points = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 88
score: 99.18772259880515
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( line 1 . to CaMeL Lower CaMeL Case ( line $NUMBER$ . to CaMeL Lower CaMeL Case (
rank: 88
score: 98.89975314670139
patch: if ( intersection == null ) throw new Illegal CaMeL Argument CaMeL Exception ( intersection ) ;
rank: 88
score: 98.7481689453125
patch: / * / / / / int * / /
rank: 88
score: 98.45541381835938
patch: if ( intersection ) { / * / return / /
rank: 88
score: 98.2237777709961
patch: if / / / / / /
rank: 89
score: 99.50926971435547
patch: Line line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 89
score: 99.47947064568015
patch: Line line $NUMBER$ 1 = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 89
score: 99.43202944155092
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( )
rank: 89
score: 99.41665649414062
patch: final String line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 89
score: 99.38583034939236
patch: if ( line 1 != null ) {
rank: 89
score: 99.187138671875
patch: if ( line 1 . get CaMeL Name ( ) . equals ( line 1 . get CaMeL Name ( ) ) ) {
rank: 89
score: 98.89949798583984
patch: byte [ ] intersection = new byte [ intersection . length * $NUMBER$ ] ;
rank: 89
score: 98.7479756673177
patch: / * / / * / / * / / /
rank: 89
score: 98.45537719726562
patch: if ( intersection ) { if / * /
rank: 89
score: 98.22323269314236
patch: infinite / { / / / / /
rank: 90
score: 99.50798034667969
patch: loc $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 90
score: 99.43115931919642
patch: final boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 90
score: 99.38580078125
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line 1 ) ;
rank: 90
score: 99.18660762392241
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( }
rank: 90
score: 98.89826202392578
patch: if ( intersection == null || line $NUMBER$ . is CaMeL Empty ( ) )
rank: 90
score: 98.74699263139205
patch: / * / / * / * * / /
rank: 90
score: 98.45482288707386
patch: / * * * / } / / * /
rank: 90
score: 98.21983506944444
patch: / / / / throw / / /
rank: 91
score: 99.5079345703125
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 91
score: 99.43106418185764
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 91
score: 99.41541883680556
patch: Line line $NUMBER$ = ( Integer ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 91
score: 99.38555438701923
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Length ( ) ;
rank: 91
score: 99.18648529052734
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) < line 1 . get CaMeL Line CaMeL Number ( ) ) {
rank: 91
score: 98.8976821899414
patch: byte [ ] intersection = new byte [ intersection . size ( ) ] ;
rank: 91
score: 98.74683634440105
patch: / * / / / int / / / / /
rank: 91
score: 98.453857421875
patch: if / * / / / / * /
rank: 91
score: 98.21809217664931
patch: / / boolean / / / / compute
rank: 92
score: 99.507783203125
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 92
score: 99.47866821289062
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line ;
rank: 92
score: 99.43094211154514
patch: Line - $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 92
score: 99.38517252604167
patch: this . line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 92
score: 99.18600643382354
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location (
rank: 92
score: 98.89728655133929
patch: if ( line 1 != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != null )
rank: 92
score: 98.74681507457386
patch: / * / / * / * / / /
rank: 92
score: 98.4537353515625
patch: if ( intersection / / / / / / / compute
rank: 92
score: 98.21717834472656
patch: / / / / / / try
rank: 93
score: 99.5069140625
patch: Line line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 93
score: 99.43080357142857
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 93
score: 99.4122802734375
patch: Line line $NUMBER$ = sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 93
score: 99.38427734375
patch: for ( Line line $NUMBER$ : sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 93
score: 99.185986328125
patch: if ( line 1 . get CaMeL Location ( ) . equals ( line 1 . get CaMeL Location ( ) ) ) {
rank: 93
score: 98.89674595424107
patch: String [ ] intersection = new String [ intersection . length ] ;
rank: 93
score: 98.74592729048295
patch: / * / / / int / * / /
rank: 93
score: 98.45323689778645
patch: / / * / / / / / * / /
rank: 93
score: 98.21150037977431
patch: / / / / } / / compute
rank: 94
score: 99.5066669170673
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 94
score: 99.47404174804687
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . ( )
rank: 94
score: 99.412060546875
patch: Line line 1 = ( Line ) sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ;
rank: 94
score: 99.18522135416667
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) / $NUMBER$ ) {
rank: 94
score: 98.89466857910156
patch: byte [ ] intersection = new byte [ intersection . length / $NUMBER$ ] ;
rank: 94
score: 98.74502563476562
patch: / * / / / / int / * / /
rank: 94
score: 98.45308061079545
patch: if ( intersection ) { / * * / /
rank: 94
score: 98.20907931857639
patch: / / / } / / / compute
rank: 95
score: 99.50432718211206
patch: sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 95
score: 99.47373744419643
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ )
rank: 95
score: 99.41072387695313
patch: Line line $NUMBER$ = ( Region ) sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) ;
rank: 95
score: 99.38319614955357
patch: this . include CaMeL End CaMeL Points = ( Line ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 95
score: 99.18389214409723
patch: if ( line 1 . equals CaMeL Ignore CaMeL Case ( $STRING$ ) || line 1 . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 95
score: 98.89373224431819
patch: if ( intersection . is CaMeL Empty ( ) )
rank: 95
score: 98.74271392822266
patch: / * / / * / /
rank: 95
score: 98.45138549804688
patch: if ( intersection ) { / * * /
rank: 95
score: 98.20818413628473
patch: { / / / / / / /
rank: 96
score: 99.47235107421875
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Line $NUMBER$ ( ) ;
rank: 96
score: 99.43042710248162
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 96
score: 99.38318401834239
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) == null )
rank: 96
score: 99.18363189697266
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) / $NUMBER$ )
rank: 96
score: 98.89363606770833
patch: int [ ] intersection = new int [ intersection . intersection . size ( ) ] ;
rank: 96
score: 98.74118041992188
patch: / * / / * * / * * / /
rank: 96
score: 98.4503506747159
patch: if ( intersection == null ) { / * /
rank: 96
score: 98.20700412326389
patch: / / / / / / / System
rank: 97
score: 99.50403201941288
patch: sub CaMeL Line = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 97
score: 99.42989226310483
patch: Sub CaMeL Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 97
score: 99.41006630345395
patch: Line line $NUMBER$ = ( Line ) line 1 . get CaMeL Remaining CaMeL Region ( ) ;
rank: 97
score: 99.18301391601562
patch: if ( line 1 . get CaMeL Line CaMeL Number ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number ( line 1
rank: 97
score: 98.89322335379464
patch: int [ ] intersection = new int [ intersection . length ] ;
rank: 97
score: 98.74064127604167
patch: / * / * / / / * * / /
rank: 97
score: 98.44993082682292
patch: if ( intersection ) { / / * / / }
rank: 97
score: 98.20458984375
patch: / / * / / / /
rank: 98
score: 99.5032207782452
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( ) ;
rank: 98
score: 99.38207068810097
patch: return get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 98
score: 99.18299057904412
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( line 1 . to CaMeL Lower CaMeL Case ( line 1 . to CaMeL Lower CaMeL Case (
rank: 98
score: 98.89298706054687
patch: assert line $NUMBER$ != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != null ;
rank: 98
score: 98.74062093098958
patch: / * / / / * / * / / /
rank: 98
score: 98.44798694957386
patch: if ( intersection ) { return / * * /
rank: 98
score: 98.2039794921875
patch: / / / / } /
rank: 99
score: 99.50244140625
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 99
score: 99.47056820518092
patch: Line line $NUMBER$ 1 = ( Region ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 99
score: 99.42837524414062
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 99
score: 99.38191441127232
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( false ) ;
rank: 99
score: 99.18278285435268
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < line 1 . get CaMeL Line CaMeL Number ( ) / $NUMBER$ ) {
rank: 99
score: 98.89277576264881
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) > intersection . size ( ) )
rank: 99
score: 98.74050903320312
patch: / * / / / * * / /
rank: 99
score: 98.44676717122395
patch: if ( intersection ) { / / continue / * /
rank: 99
score: 98.20196533203125
patch: if / / / / / / compute
rank: 100
score: 99.50144856770834
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) : sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 100
score: 99.46930541992188
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 100
score: 99.428359375
patch: Line line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 100
score: 99.40833740234375
patch: if ( line $NUMBER$ . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) )
rank: 100
score: 99.38022189670139
patch: for ( Line line 1 : sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 100
score: 99.18266078404018
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( line $NUMBER$ . to CaMeL Lower CaMeL Case ( ) / /
rank: 100
score: 98.89031982421875
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( intersection . size ( ) ) ;
rank: 100
score: 98.7395731608073
patch: / * / / / / * * / / /
rank: 100
score: 98.4456278483073
patch: if ( intersection ( intersection ) / / * / )
rank: 100
score: 98.19960239955357
patch: / / final / / /
rank: 101
score: 99.4691521139706
patch: Line - = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 101
score: 99.37997436523438
patch: this . line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 101
score: 99.1820427389706
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection . get CaMeL Line CaMeL Number ( ) line $NUMBER$ . get CaMeL Line CaMeL Number ( ) )
rank: 101
score: 98.88961181640624
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line $NUMBER$ ) / $NUMBER$ . 0 )
rank: 101
score: 98.73842551491477
patch: / * / / / / / * / /
rank: 101
score: 98.44532775878906
patch: if ( intersection || intersection ) {
rank: 101
score: 98.19827609592014
patch: / / / / else / / compute
rank: 102
score: 99.49885559082031
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 102
score: 99.46847098214286
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . ( ) ;
rank: 102
score: 99.42728097098214
patch: int line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 102
score: 99.40765991210938
patch: if ( line $NUMBER$ . contains ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) )
rank: 102
score: 99.37975260416667
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 102
score: 99.18181501116071
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection . get CaMeL Line CaMeL Number ( ) line $NUMBER$ . get CaMeL Line CaMeL Number ( ) ) {
rank: 102
score: 98.889306640625
patch: if ( line $NUMBER$ == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 102
score: 98.73597301136364
patch: / * / / * / / / * /
rank: 102
score: 98.4446512858073
patch: if ( intersection ) { return / / for * /
rank: 102
score: 98.19694010416667
patch: / / / / / / * /
rank: 103
score: 99.4981689453125
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 103
score: 99.46834309895833
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 )
rank: 103
score: 99.40760633680556
patch: Line intersection $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 103
score: 99.3785400390625
patch: return get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 103
score: 99.18159993489583
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line 1 ,
rank: 103
score: 98.88883463541667
patch: if ( line $NUMBER$ != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == null )
rank: 103
score: 98.73536265980114
patch: / * / / * / / * * /
rank: 103
score: 98.44271850585938
patch: if ( intersection ) { / * / / / }
rank: 103
score: 98.19596862792969
patch: / / int / / / /
rank: 104
score: 99.49787902832031
patch: line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 104
score: 99.4675762469952
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 104
score: 99.42673828125
patch: Line line $NUMBER$ = sub CaMeL Line . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 104
score: 99.406982421875
patch: String line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 104
score: 99.37816443810097
patch: if ( line 1 . intersection ( line $NUMBER$ ) ) {
rank: 104
score: 99.180517578125
patch: if ( line 1 . get CaMeL Name ( ) . equals ( $STRING$ line 1 . get CaMeL Name ( ) ) )
rank: 104
score: 98.88803335336539
patch: final int [ ] intersection = new int [ 1 ] ;
rank: 104
score: 98.73484293619792
patch: / * / / / * / / / / /
rank: 104
score: 98.44220525568181
patch: if ( intersection ) { / return / * /
rank: 104
score: 98.19512939453125
patch: / / { / { / / /
rank: 105
score: 99.49720255533855
patch: loc 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 105
score: 99.46756184895834
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( line 1 ) ;
rank: 105
score: 99.42662635216347
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 105
score: 99.40595245361328
patch: final int line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 105
score: 99.37790749289773
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) != null ) {
rank: 105
score: 99.1802978515625
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( line $NUMBER$ . to CaMeL Lower CaMeL Case ( line $NUMBER$ . to CaMeL Lower CaMeL Case (
rank: 105
score: 98.88799758184524
patch: if ( line $NUMBER$ != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == 0 )
rank: 105
score: 98.73476155598958
patch: / * / / / / int * / / /
rank: 105
score: 98.4421895345052
patch: if ( intersection ( intersection ) / / * / }
rank: 105
score: 98.19454616970486
patch: / / / / final / / /
rank: 106
score: 99.49712775735294
patch: Line line $NUMBER$ = get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 106
score: 99.46738568474265
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line ( )
rank: 106
score: 99.4265887920673
patch: = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 106
score: 99.40413625616776
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; else
rank: 106
score: 99.37552315848214
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 106
score: 99.1802266438802
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection . get CaMeL Line CaMeL Number ( ) )
rank: 106
score: 98.88759358723958
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 106
score: 98.44117228190105
patch: if / * / / / / * / / /
rank: 106
score: 98.19402313232422
patch: / / / / / { /
rank: 107
score: 99.49570826480263
patch: Line line $NUMBER$ = get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 107
score: 99.46732584635417
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ,
rank: 107
score: 99.40372721354167
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Parent ( ) ;
rank: 107
score: 99.37507430366848
patch: / * if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 107
score: 99.179736328125
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line $NUMBER$ . get CaMeL Location ( )
rank: 107
score: 98.88724517822266
patch: String [ ] intersection = new String [ intersection . size ( ) ] ;
rank: 107
score: 98.7335693359375
patch: / * / / * * / / /
rank: 107
score: 98.44106038411458
patch: if ( intersection ) { / / while / * /
rank: 107
score: 98.19340684678819
patch: / / / / / / else /
rank: 108
score: 99.49526977539062
patch: return include CaMeL End CaMeL Points . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 108
score: 99.46724243164063
patch: Sub CaMeL Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 108
score: 99.42638671875
patch: String line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 108
score: 99.40323215060764
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Y ( ) ;
rank: 108
score: 99.37461344401042
patch: return line 1 . intersection ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 108
score: 99.17955322265625
patch: if ( line 1 . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 108
score: 98.88638160342262
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) != null ) { / * /
rank: 108
score: 98.73238118489583
patch: / * / / / System . / / / /
rank: 108
score: 98.4408846768466
patch: if ( intersection ( intersection ( intersection ) / /
rank: 108
score: 98.18701171875
patch: intersection / / / /
rank: 109
score: 99.49484432444854
patch: Line line $NUMBER$ = ( Line ) line 1 . intersection ( line $NUMBER$ ) ;
rank: 109
score: 99.42632446289062
patch: String line $NUMBER$ = ( Sub CaMeL Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 109
score: 99.40282592773437
patch: if ( line $NUMBER$ . equals ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) )
rank: 109
score: 99.37423366970486
patch: Item line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 109
score: 99.1793800636574
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < line 1 . get CaMeL Line CaMeL Number ( ) / $NUMBER$ )
rank: 109
score: 98.88509368896484
patch: int [ ] intersection = new int [ intersection . length / $NUMBER$ ] ;
rank: 109
score: 98.73236083984375
patch: / * / int * /
rank: 109
score: 98.43865966796875
patch: / * * * / /
rank: 109
score: 98.18390570746527
patch: / / / else / / / compute
rank: 110
score: 99.49449091372283
patch: if ( line 1 . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ) {
rank: 110
score: 99.46670871310764
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ )
rank: 110
score: 99.42624136117789
patch: Line get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 110
score: 99.40271674262152
patch: Line line $NUMBER$ = ( Region ) sub CaMeL Line . get CaMeL Line ( ) ;
rank: 110
score: 99.37384440104167
patch: if ( line $NUMBER$ != null && include CaMeL End CaMeL Points ) {
rank: 110
score: 99.17925814924568
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( line 1 . to CaMeL Lower CaMeL Case ( ) ) / /
rank: 110
score: 98.88481212797619
patch: if ( line 1 != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > 0 )
rank: 110
score: 98.73145548502605
patch: / * * / / / / * * / /
rank: 110
score: 98.43848673502605
patch: if ( intersection ) { try { intersection / * /
rank: 110
score: 98.18133544921875
patch: / * / / / / / compute
rank: 111
score: 99.49425252278645
patch: Line line $NUMBER$ = line 1 . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 111
score: 99.46657200863487
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$
rank: 111
score: 99.373291015625
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points || include CaMeL End CaMeL Points )
rank: 111
score: 99.178955078125
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( )
rank: 111
score: 98.88413783482143
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) >= intersection . size ( ) ) {
rank: 111
score: 98.7295430501302
patch: / * * / / / * / * / /
rank: 111
score: 98.43832397460938
patch: if ( intersection ) { / * / / } }
rank: 111
score: 98.18104383680556
patch: / / / / * / / /
rank: 112
score: 99.49368286132812
patch: Line line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 112
score: 99.46556260850694
patch: Space line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 112
score: 99.42373046875
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 112
score: 99.40155707465277
patch: int line $NUMBER$ = ( Integer ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 112
score: 99.37246704101562
patch: this . line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 112
score: 99.1788917824074
patch: if ( line 1 . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ line 1 . get CaMeL Name ( ) ) )
rank: 112
score: 98.88411458333333
patch: if ( intersection . is CaMeL Empty ( ) / * && intersection . is CaMeL Empty ( ) )
rank: 112
score: 98.72932942708333
patch: / * / int * * / /
rank: 112
score: 98.43831380208333
patch: if ( intersection ) { / / char / * /
rank: 112
score: 98.18058776855469
patch: / / / / / * /
rank: 113
score: 99.49287414550781
patch: if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ) {
rank: 113
score: 99.46507626488095
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( sub CaMeL Line ) ;
rank: 113
score: 99.40097225413604
patch: / * = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 113
score: 99.3710304542824
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points || include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 113
score: 99.177978515625
patch: if ( line 1 . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) / /
rank: 113
score: 98.88404134114583
patch: Object [ ] intersection = new Object [ intersection . / $NUMBER$ ] ;
rank: 113
score: 98.7288106282552
patch: / * / int / / / * / / /
rank: 113
score: 98.43784586588542
patch: if / * / / / / / / / /
rank: 113
score: 98.179931640625
patch: / / final / / / / compute
rank: 114
score: 99.4927978515625
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 114
score: 99.42321196056548
patch: Object line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 114
score: 99.37019856770833
patch: / * if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 114
score: 99.177919921875
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > line $NUMBER$ . get CaMeL Line CaMeL Number ( ) )
rank: 114
score: 98.88370768229167
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == - 1 ) {
rank: 114
score: 98.7284647623698
patch: / * / / / / System . / * /
rank: 114
score: 98.43630149147727
patch: if ( intersection ) { return / * / /
rank: 114
score: 98.17911105685764
patch: / / / throw / / / /
rank: 115
score: 99.49114990234375
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) : sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 115
score: 99.42293003627232
patch: line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 115
score: 99.36968994140625
patch: return get CaMeL Remaining CaMeL Region ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 115
score: 99.17763884171195
patch: if ( line 1 . get CaMeL Location ( ) . equals ( line 1 . get CaMeL Location ( ) )
rank: 115
score: 98.88353135850694
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == - 1 )
rank: 115
score: 98.72796630859375
patch: / * / / * / / / int * /
rank: 115
score: 98.43618774414062
patch: if ( intersection ( intersection , intersection ) / * /
rank: 115
score: 98.1751708984375
patch: / else / / / / / /
rank: 116
score: 99.4614025297619
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ,
rank: 116
score: 99.36949811662946
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( 0 ) ;
rank: 116
score: 99.17683410644531
patch: if ( line 1 . get CaMeL Line CaMeL Number ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line 1
rank: 116
score: 98.88292643229167
patch: boolean is CaMeL Empty = line 1 . is CaMeL Empty ( ) ;
rank: 116
score: 98.7275390625
patch: / / / int / / / / / / /
rank: 116
score: 98.43409312855114
patch: if ( intersection ? intersection ) { / * /
rank: 116
score: 98.17506239149306
patch: / / / / / * / /
rank: 117
score: 99.4900410970052
patch: Line line $NUMBER$ = ( Line ) get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 117
score: 99.46090262276786
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point (
rank: 117
score: 99.42225477430556
patch: final boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 117
score: 99.39852566189236
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Size ( ) ;
rank: 117
score: 99.36934230638587
patch: this . sub CaMeL Line = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ;
rank: 117
score: 99.17674386160714
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( }
rank: 117
score: 98.88179016113281
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == 0 )
rank: 117
score: 98.72710503472223
patch: / * * / * / / /
rank: 117
score: 98.43385314941406
patch: / * / System . / /
rank: 117
score: 98.17502170138889
patch: / / int intersection = / / compute
rank: 118
score: 99.48948620211694
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Hyperplane ( ) ) ;
rank: 118
score: 99.42073848329741
patch: Object line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 118
score: 99.39841180098684
patch: final T line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 118
score: 99.36906602647569
patch: this . intersection = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 118
score: 99.17613118489584
patch: if ( line 1 . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number ( line $NUMBER$ . get CaMeL Line CaMeL Number (
rank: 118
score: 98.88149879092262
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < intersection . length / $NUMBER$ ) {
rank: 118
score: 98.72507546164773
patch: / * / / / int * * / /
rank: 118
score: 98.4327059659091
patch: if ( intersection ) { / break / * /
rank: 118
score: 98.1745834350586
patch: intersection / / / / / compute
rank: 119
score: 99.4892911044034
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 119
score: 99.4595085592831
patch: Line line $NUMBER$ = ( Line ) line 1 . get CaMeL Line ( ) ;
rank: 119
score: 99.42039659288194
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 119
score: 99.39788818359375
patch: else { Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 119
score: 99.36901092529297
patch: this . line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 119
score: 99.1759033203125
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) /
rank: 119
score: 98.88111877441406
patch: String [ ] intersection = new String [ intersection . length / $NUMBER$ ] ;
rank: 119
score: 98.72489013671876
patch: / * / / / * / / /
rank: 119
score: 98.43124389648438
patch: if ( intersection != null ) { / / * /
rank: 119
score: 98.17354329427083
patch: / / int intersection = / / /
rank: 120
score: 99.4892341859879
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ) ;
rank: 120
score: 99.45943410773026
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Line $NUMBER$ ( ) ;
rank: 120
score: 99.42037760416666
patch: Line sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 120
score: 99.36860207950367
patch: i $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 120
score: 99.17582433363971
patch: switch ( line 1 . get CaMeL Line CaMeL Number ( ) line $NUMBER$ . get CaMeL Line CaMeL Number ( ) line $NUMBER$ . get CaMeL Line CaMeL Number ( ) )
rank: 120
score: 98.87968175551471
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != - 1 )
rank: 120
score: 98.72456868489583
patch: / * / / / / / * / / /
rank: 120
score: 98.43124389648438
patch: if / * / / / / * / / }
rank: 120
score: 98.17231750488281
patch: int / / / / / compute
rank: 121
score: 99.39761691623264
patch: Line line 1 = ( Region ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 121
score: 99.36852010091145
patch: / * if ( include CaMeL End CaMeL Points ) {
rank: 121
score: 99.175537109375
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) ;
rank: 121
score: 98.87961832682292
patch: if ( line $NUMBER$ != null && ! line $NUMBER$ . is CaMeL Empty ( ) )
rank: 121
score: 98.72247869318181
patch: / * / / / / int / / /
rank: 121
score: 98.42930094401042
patch: / * / * /
rank: 121
score: 98.16944715711806
patch: intersection / * / / / / /
rank: 122
score: 99.48816448709239
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( sub CaMeL Line ) ;
rank: 122
score: 99.4584896689967
patch: Line line 1 = ( Line ) sub CaMeL Line 1 . get CaMeL Hyperplane ( ) ;
rank: 122
score: 99.42009203361742
patch: final Sub CaMeL Line sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 122
score: 99.39696655273437
patch: Line line $NUMBER$ = ( Region ) sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ;
rank: 122
score: 99.3680078125
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 122
score: 99.17545340401786
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( line
rank: 122
score: 98.87927827380952
patch: if ( line $NUMBER$ == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 122
score: 98.72176106770833
patch: / * / / / / / int * / /
rank: 122
score: 98.42872203480114
patch: / * / System . / / / * /
rank: 122
score: 98.16895887586806
patch: } / / / / / / /
rank: 123
score: 99.45843796502976
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ; if ( include CaMeL End CaMeL Points )
rank: 123
score: 99.41807972301136
patch: Line line $NUMBER$ = sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 123
score: 99.39661929481908
patch: sub CaMeL Line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 123
score: 99.3678311434659
patch: if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points || include CaMeL End CaMeL Points ) {
rank: 123
score: 99.17542550223214
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Offset ( )
rank: 123
score: 98.87905738467262
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) > 0 ) { / * /
rank: 123
score: 98.71947224934895
patch: / * / * * * * * * / /
rank: 123
score: 98.42836507161458
patch: if / * / / * / / / * /
rank: 123
score: 98.16868760850694
patch: / / byte / / / / /
rank: 124
score: 99.48744201660156
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 124
score: 99.45793714021382
patch: Location line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 124
score: 99.41730608258929
patch: String line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 124
score: 99.39661865234375
patch: = get CaMeL Remaining CaMeL Region ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 124
score: 99.36740451388889
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( this ) ;
rank: 124
score: 99.1748779296875
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( / *
rank: 124
score: 98.71881658380681
patch: / int / / / / / / / /
rank: 124
score: 98.42813110351562
patch: if ( intersection ) { return / / * / }
rank: 124
score: 98.16806466238839
patch: / * / / / /
rank: 125
score: 99.48716412168561
patch: long line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 125
score: 99.41709321120689
patch: String line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 125
score: 99.39569413034539
patch: final String line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 125
score: 99.36696951729911
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points || include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 125
score: 99.17482043850806
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . starts CaMeL With ( $STRING$ line $NUMBER$ . to CaMeL Lower CaMeL Case ( ) ) )
rank: 125
score: 98.87605116102431
patch: String line $NUMBER$ = ( String ) sub CaMeL Line . get CaMeL Line ( ) ;
rank: 125
score: 98.71825062144886
patch: / * * * * * / / / /
rank: 125
score: 98.4271952311198
patch: / * * * / } / / / * /
rank: 125
score: 98.167236328125
patch: public / / / / / / compute
rank: 126
score: 99.486923828125
patch: String line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 126
score: 99.41652018229166
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 126
score: 99.39558919270833
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Location ( ) ;
rank: 126
score: 99.17466157058189
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( line $NUMBER$ . to CaMeL Lower CaMeL Case ( ) ) / /
rank: 126
score: 98.8757091703869
patch: if ( line 1 != null && line 1 . get CaMeL Line CaMeL Number ( ) != null )
rank: 126
score: 98.7177401455966
patch: / * * / / / * * / /
rank: 126
score: 98.42691040039062
patch: if ( intersection ) { / * * / * /
rank: 126
score: 98.16585540771484
patch: logger / / / / / /
rank: 127
score: 99.48681640625
patch: check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 127
score: 99.41642992424242
patch: final int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 127
score: 99.36686197916667
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) != null )
rank: 127
score: 99.17459422144397
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( )
rank: 127
score: 98.87552682976974
patch: if ( intersection == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( intersection ) ;
rank: 127
score: 98.71731567382812
patch: / * / / / * / / * * /
rank: 127
score: 98.42620294744319
patch: if ( intersection ( intersection ) / * ? /
rank: 127
score: 98.16557481553819
patch: / / throw / / / / compute
rank: 128
score: 99.48668416341145
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line 1 ) ;
rank: 128
score: 99.45679995888158
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . to CaMeL Sub CaMeL Space ( )
rank: 128
score: 99.41607455549568
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line ) ;
rank: 128
score: 99.39471435546875
patch: if ( sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 128
score: 99.36654227120536
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Remaining CaMeL Region ( ) ;
rank: 128
score: 99.17327008928571
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ;
rank: 128
score: 98.87550982306985
patch: if ( intersection != null && line $NUMBER$ . is CaMeL Empty ( ) ) {
rank: 128
score: 98.71719360351562
patch: / * / / / * * * / / /
rank: 128
score: 98.42584228515625
patch: / / * / { / / / / * /
rank: 128
score: 98.16445922851562
patch: / / / / int
rank: 129
score: 99.48576354980469
patch: loc 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 129
score: 99.41600822679925
patch: Line line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 129
score: 99.39444130345395
patch: = line 1 . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 129
score: 99.3662109375
patch: list = line 1 . intersection ( line $NUMBER$ ) ;
rank: 129
score: 99.17256433823529
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < line 1 . get CaMeL Line CaMeL Number ( ) . get CaMeL Line CaMeL Number ( ) ) {
rank: 129
score: 98.87534993489584
patch: String [ ] intersection = new String [ intersection . / $NUMBER$ ] ;
rank: 129
score: 98.71601104736328
patch: / * * / * / /
rank: 129
score: 98.42556762695312
patch: / * / / / / / / / * /
rank: 129
score: 98.16411675347223
patch: / / / / / / / *
rank: 130
score: 99.36612642728366
patch: this . line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 130
score: 99.17173549107143
patch: if ( line 1 . get CaMeL Length ( ) < line 1 . get CaMeL Length ( ) )
rank: 130
score: 98.87516276041667
patch: if ( line $NUMBER$ != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) <= 0 )
rank: 130
score: 98.71600341796875
patch: / * / / / int * / / / /
rank: 130
score: 98.42478249289773
patch: if ( intersection ) { / * / } }
rank: 130
score: 98.16153293185764
patch: / / if / / / / /
rank: 131
score: 99.45563065378289
patch: int line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 131
score: 99.39421929253473
patch: Document line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 131
score: 99.36521314538044
patch: get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 131
score: 99.17144949776785
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) != line 1 . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number ( ) ) )
rank: 131
score: 98.87476748511905
patch: if ( line $NUMBER$ != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != 0 )
rank: 131
score: 98.71563720703125
patch: / * / int / / / * * / /
rank: 131
score: 98.42350260416667
patch: if ( intersection ) { return intersection / * * /
rank: 131
score: 98.1602783203125
patch: / / / / / / int
rank: 132
score: 99.48484205163044
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 132
score: 99.41554309475806
patch: Sub CaMeL Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 132
score: 99.36470031738281
patch: return intersection ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 132
score: 99.17094421386719
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) > line 1 . get CaMeL Line CaMeL Number ( ) ) {
rank: 132
score: 98.874072265625
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( line 1 . to CaMeL String ( ) )
rank: 132
score: 98.71547629616477
patch: / * * * * * * / / /
rank: 132
score: 98.42082214355469
patch: if / * / / / /
rank: 132
score: 98.15943739149306
patch: / / / / / / { /
rank: 133
score: 99.45486886160714
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line ,
rank: 133
score: 99.41520385742187
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; / ?
rank: 133
score: 99.39406451056985
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . intersection ( $STRING$ ) ;
rank: 133
score: 99.36367563100961
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space (
rank: 133
score: 99.1708755493164
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . / /
rank: 133
score: 98.8737323467548
patch: if ( line 1 == null || line 1 == null )
rank: 133
score: 98.7138671875
patch: / * / / * / / * * * /
rank: 133
score: 98.42052112926136
patch: if ( intersection ) { / * / / }
rank: 133
score: 98.15833875868056
patch: / / double / / / / /
rank: 134
score: 99.48394775390625
patch: include CaMeL End CaMeL Points = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 134
score: 99.45453171502976
patch: Line line $NUMBER$ = ( Line ) get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( )
rank: 134
score: 99.39394017269737
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line $NUMBER$ . get CaMeL Hyperplane ( ) ;
rank: 134
score: 99.36348783052884
patch: return ( line 1 . intersection ( line $NUMBER$ ) ) ;
rank: 134
score: 99.1705655184659
patch: if ( line 1 . get CaMeL Length ( ) < line 1 . get CaMeL Length ( ) ) {
rank: 134
score: 98.8736343383789
patch: int [ ] intersection = new int [ intersection . size ( ) ] ;
rank: 134
score: 98.7127352627841
patch: / * / / * / / / / /
rank: 134
score: 98.42036576704545
patch: if / * * * / / / * /
rank: 134
score: 98.15718078613281
patch: / / boolean / / / /
rank: 135
score: 99.45292358398437
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . ) ;
rank: 135
score: 99.39297146267361
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Instance ( ) ;
rank: 135
score: 99.36346435546875
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) == null ) {
rank: 135
score: 99.170361328125
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number (
rank: 135
score: 98.87356085526316
patch: Array CaMeL List < Line > intersection = new Array CaMeL List < Line > ( ) ;
rank: 135
score: 98.71266682942708
patch: / * / / / * * / / * /
rank: 135
score: 98.41912841796875
patch: if ( intersection / / / / / / * /
rank: 135
score: 98.15532090928819
patch: / / / / / / / else
rank: 136
score: 99.48344894935344
patch: return line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 136
score: 99.41466238839286
patch: final boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 136
score: 99.39231962316177
patch: Line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 136
score: 99.36323765345982
patch: this . include CaMeL End CaMeL Points = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 136
score: 99.1702880859375
patch: if ( line 1 . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ line 1 . get CaMeL Name ( ) ) ) {
rank: 136
score: 98.87198893229167
patch: String [ ] intersection = new String [ $NUMBER$ ] ;
rank: 136
score: 98.7115987141927
patch: / * * / / / * * * / /
rank: 136
score: 98.41804643110795
patch: if ( intersection ( intersection ( intersection , intersection )
rank: 136
score: 98.1538314819336
patch: / / / } / / compute
rank: 137
score: 99.48330688476562
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 137
score: 99.45231119791667
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . line 1 ;
rank: 137
score: 99.39210815429688
patch: final final Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 137
score: 99.363193359375
patch: long line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 137
score: 99.16973286290323
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( / / this
rank: 137
score: 98.8717041015625
patch: int [ ] intersection = new int [ intersection . / $NUMBER$ ] ;
rank: 137
score: 98.7107442220052
patch: / * / / / * / / / * /
rank: 137
score: 98.41762288411458
patch: if / * / / / / / / / }
rank: 137
score: 98.15050506591797
patch: intersection / { / / / /
rank: 138
score: 99.41443241003788
patch: Line line $NUMBER$ = sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 138
score: 99.39127604166667
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Type ( ) ;
rank: 138
score: 99.3631591796875
patch: Offset line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 138
score: 99.16925223214285
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line $NUMBER$
rank: 138
score: 98.8713887532552
patch: int [ ] intersection = new int [ $NUMBER$ ] ;
rank: 138
score: 98.71067301432292
patch: / * / / / * * /
rank: 138
score: 98.41726684570312
patch: if ( intersection / / / / / / / }
rank: 138
score: 98.14827473958333
patch: / / / break / / / /
rank: 139
score: 99.45174560546874
patch: Location line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 139
score: 99.414375
patch: final boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 139
score: 99.38989868164063
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . null ;
rank: 139
score: 99.36309814453125
patch: this . include CaMeL End CaMeL Points = line 1 . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 139
score: 99.16828719429348
patch: if ( line 1 . get CaMeL Location ( ) . equals ( intersection . get CaMeL Location ( ) ) )
rank: 139
score: 98.87117513020833
patch: if ( line 1 != null && line 1 . get CaMeL Line CaMeL Number ( ) > 0 )
rank: 139
score: 98.7103780110677
patch: / * / / * / / * / * /
rank: 139
score: 98.41636149088542
patch: if ( intersection ) { return / / / * /
rank: 139
score: 98.14742279052734
patch: / / / { / / compute
rank: 140
score: 99.4827178030303
patch: Line line $NUMBER$ += sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 140
score: 99.45170665922619
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 != null
rank: 140
score: 99.36281331380208
patch: this . include CaMeL End CaMeL Points = line 1 . intersection ( line 1 ) ;
rank: 140
score: 99.16808688256049
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . starts CaMeL With ( $STRING$ line 1 . to CaMeL Lower CaMeL Case ( ) ) )
rank: 140
score: 98.87060546875
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) >= intersection . size ( ) ) {
rank: 140
score: 98.70974392361111
patch: / * / / * / * /
rank: 140
score: 98.41622924804688
patch: if ( intersection ? intersection ) {
rank: 140
score: 98.147216796875
patch: / / / / final / /
rank: 141
score: 99.48254925271739
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ;
rank: 141
score: 99.45100911458333
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( )
rank: 141
score: 99.3890380859375
patch: Line line $NUMBER$ = ( Vector 1 D ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 141
score: 99.36237444196429
patch: return get CaMeL Remaining CaMeL Region ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 141
score: 99.16722845262096
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) < line 1 . get CaMeL Line CaMeL Number ( ) )
rank: 141
score: 98.87017501027961
patch: if ( line $NUMBER$ != null && line $NUMBER$ . get CaMeL Length ( ) > 0 )
rank: 141
score: 98.70965021306819
patch: / * / / * / * / * /
rank: 141
score: 98.4160664876302
patch: if ( intersection / / / / / * / /
rank: 141
score: 98.14553493923611
patch: return / / / / / / /
rank: 142
score: 99.48238932291666
patch: loc 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 142
score: 99.41318540219908
patch: boolean include CaMeL End CaMeL Points = line 1 . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 142
score: 99.3888671875
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . check CaMeL Point ( line $NUMBER$ ) ;
rank: 142
score: 99.362236328125
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( ) ;
rank: 142
score: 99.16699936810662
patch: if ( line 1 . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number ( line 1 ) )
rank: 142
score: 98.86980329241071
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == null ) { / * /
rank: 142
score: 98.70949300130208
patch: / * / / / / int * * / /
rank: 142
score: 98.41439819335938
patch: if ( intersection ( intersection ) / * / / )
rank: 142
score: 98.14454650878906
patch: / / throw / / / /
rank: 143
score: 99.45074172247024
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ == null
rank: 143
score: 99.38836669921875
patch: Line start $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 143
score: 99.36164656929348
patch: this . intersection = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 143
score: 99.1665926846591
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 143
score: 98.86953895970395
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( line 1 . / $NUMBER$ / $NUMBER$ )
rank: 143
score: 98.709228515625
patch: / * / / * / / / / / /
rank: 143
score: 98.41427612304688
patch: if ( intersection ( intersection ) / break / / compute
rank: 143
score: 98.14358956473214
patch: / int / / / /
rank: 144
score: 99.4122314453125
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 144
score: 99.38775313527961
patch: else Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 144
score: 99.36105782645089
patch: this . sub CaMeL Line = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 144
score: 99.1665751139323
patch: if ( line 1 . get CaMeL Line ( ) . equals ( line $NUMBER$ . get CaMeL Line ( ) ) )
rank: 144
score: 98.86905710320724
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == null / * / )
rank: 144
score: 98.70709783380681
patch: / * / / / * / * * /
rank: 144
score: 98.41393025716145
patch: if ( intersection ( intersection ) ) { / * /
rank: 144
score: 98.1433817545573
patch: / / / } /
rank: 145
score: 99.48129670516305
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( )
rank: 145
score: 99.4481689453125
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1
rank: 145
score: 99.41204279119319
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 145
score: 99.38753051757813
patch: if ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . size ( ) > 0 )
rank: 145
score: 99.36099008413461
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Size ( ) ;
rank: 145
score: 99.16652425130208
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( / /
rank: 145
score: 98.86747741699219
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == null )
rank: 145
score: 98.7067362467448
patch: / * / / * / / / / * /
rank: 145
score: 98.41373019748264
patch: if / * / / / * /
rank: 145
score: 98.14282989501953
patch: / / / / / / System
rank: 146
score: 99.48103332519531
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 146
score: 99.38734741210938
patch: Line line $NUMBER$ = ( Line [ ] ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 146
score: 99.36033278245192
patch: / * return line 1 . intersection ( line $NUMBER$ ) ;
rank: 146
score: 99.16615125868056
patch: if ( line 1 . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ line $NUMBER$ . get CaMeL Name ( ) ) )
rank: 146
score: 98.86705017089844
patch: if ( line $NUMBER$ == null )
rank: 146
score: 98.7063876065341
patch: / * / / / * / / / compute
rank: 146
score: 98.41367594401042
patch: if ( intersection ) { return / * / } /
rank: 146
score: 98.14187961154514
patch: / / else / / / / compute
rank: 147
score: 99.48099949048913
patch: line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 147
score: 99.44783528645833
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ;
rank: 147
score: 99.41175426136364
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 147
score: 99.38673159950658
patch: Line line 1 = ( Line 1 ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 147
score: 99.36032339242789
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( ) ;
rank: 147
score: 99.16566910282258
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) ) {
rank: 147
score: 98.86700148809524
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection . length / $NUMBER$ ) {
rank: 147
score: 98.70613606770833
patch: / * / / / / System . / / /
rank: 147
score: 98.41306559244792
patch: if ( intersection ( intersection ) / * / / {
rank: 147
score: 98.14127349853516
patch: / / else / / / /
rank: 148
score: 99.4808016690341
patch: String line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 148
score: 99.447021484375
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . public null ;
rank: 148
score: 99.41128540039062
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 148
score: 99.38658383018092
patch: if ( include CaMeL End CaMeL Points ) return line 1 . intersection ( line $NUMBER$ ) ;
rank: 148
score: 99.3602294921875
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( null ) ;
rank: 148
score: 99.16561686197916
patch: if ( line 1 . get CaMeL Line CaMeL Number ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number (
rank: 148
score: 98.86680603027344
patch: if ( intersection != null && line 1 . is CaMeL Empty ( ) )
rank: 148
score: 98.70497639973958
patch: / * / / * * * / / / /
rank: 148
score: 98.41221923828125
patch: if ( intersection / * / intersection ) {
rank: 148
score: 98.14102511935764
patch: / / / / boolean / / /
rank: 149
score: 99.44677734375
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 149
score: 99.41124906994048
patch: Sub CaMeL Line sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 149
score: 99.38638644748264
patch: String line $NUMBER$ = ( Integer ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 149
score: 99.16530198317308
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) != line 1 . get CaMeL Line CaMeL Number ( ) / /
rank: 149
score: 98.86588781020221
patch: Object [ ] intersection = new Object [ line 1 . size ( ) ] ;
rank: 149
score: 98.70462036132812
patch: / * / * * * * / * / /
rank: 149
score: 98.4116923014323
patch: if / * / System . / / / * /
rank: 149
score: 98.14021809895833
patch: int / / / /
rank: 150
score: 99.44533819901316
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( )
rank: 150
score: 99.41109582149622
patch: int include CaMeL End CaMeL Points $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 150
score: 99.38554551866319
patch: if ( line $NUMBER$ != null ) {
rank: 150
score: 99.3592529296875
patch: return get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 150
score: 99.16396989493535
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line $NUMBER$
rank: 150
score: 98.86553596047794
patch: if ( intersection == null / * || intersection . is CaMeL Empty ( ) )
rank: 150
score: 98.70436604817708
patch: / * / / / / * / / * /
rank: 150
score: 98.13857014973958
patch: / if / / / / / /
rank: 151
score: 99.47913953993056
patch: / / get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 151
score: 99.44437081473214
patch: Line line $NUMBER$ 1 = ( Sub CaMeL Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 151
score: 99.35888671875
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && ! include CaMeL End CaMeL Points ) {
rank: 151
score: 99.16392933238636
patch: if ( line 1 . get CaMeL Length ( ) > line 1 . get CaMeL Length ( ) ) {
rank: 151
score: 98.8654296875
patch: if ( intersection != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > 0 )
rank: 151
score: 98.70305841619319
patch: / * / / / / / int * /
rank: 151
score: 98.41080729166667
patch: if ( intersection ( intersection ) / / for * /
rank: 151
score: 98.1373291015625
patch: / / / / / / * compute
rank: 152
score: 99.44373779296875
patch: Line line $NUMBER$ 1 $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 152
score: 99.35819046585648
patch: if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 152
score: 99.16337890625
patch: if ( line 1 . get CaMeL Line ( ) . equals ( line 1 . get CaMeL Line ( ) ) ) {
rank: 152
score: 98.86537798713235
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / * line 1 / / /
rank: 152
score: 98.7030362215909
patch: / * / / * * * / * /
rank: 152
score: 98.4107157389323
patch: if ( intersection ) { return / * / / }
rank: 152
score: 98.13716343470982
patch: / / / / / try
rank: 153
score: 99.4783706665039
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 153
score: 99.44366164434524
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ;
rank: 153
score: 99.41007133152173
patch: Sub CaMeL Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 153
score: 99.38282686121323
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . ( line $NUMBER$ ) ;
rank: 153
score: 99.35808249080883
patch: return line 1 . intersection ( line $NUMBER$ , include CaMeL End CaMeL Points ) ;
rank: 153
score: 99.1627705891927
patch: if ( line 1 . get CaMeL Location ( ) . equals ( line $NUMBER$ . get CaMeL Location ( ) ) )
rank: 153
score: 98.86526489257812
patch: Object [ ] intersection = new Object [ 1 ] ;
rank: 153
score: 98.70293634588069
patch: / * / / / * * / * /
rank: 153
score: 98.41070001775569
patch: if / * / / / / * / /
rank: 153
score: 98.13709368024554
patch: intersection / { / / /
rank: 154
score: 99.44151204427084
patch: Line line $NUMBER$ 1 = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 154
score: 99.40873209635417
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 154
score: 99.38251410590277
patch: int line $NUMBER$ = ( int ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 154
score: 99.3577880859375
patch: return line 1 . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( include CaMeL End CaMeL Points ) ) ;
rank: 154
score: 99.162685546875
patch: if ( line 1 . get CaMeL Name ( ) . equals ( $STRING$ line $NUMBER$ . get CaMeL Name ( ) ) )
rank: 154
score: 98.86492450420673
patch: if ( line $NUMBER$ == null ) { / * / /
rank: 154
score: 98.70284016927083
patch: / * / / int / / / * / /
rank: 154
score: 98.4105936686198
patch: if / / / / / / / / * /
rank: 154
score: 98.13553619384766
patch: / / / / System / /
rank: 155
score: 99.4780337685033
patch: return ( ( Sub CaMeL Line ) sub CaMeL Line ) . intersection ( line $NUMBER$ ) ;
rank: 155
score: 99.44149925595238
patch: Line line $NUMBER$ = line 1 . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 155
score: 99.40872547238372
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 155
score: 99.38206787109375
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) : null ;
rank: 155
score: 99.35735473632812
patch: this . include CaMeL End CaMeL Points = line 1 . check CaMeL Point ( line $NUMBER$ ) ;
rank: 155
score: 99.1611961082176
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( line 1 . to CaMeL Lower CaMeL Case ( ) )
rank: 155
score: 98.86436360677084
patch: boolean is CaMeL Empty = line $NUMBER$ . is CaMeL Empty ( ) ;
rank: 155
score: 98.70197088068181
patch: / / / int / / / / / /
rank: 155
score: 98.41024780273438
patch: if ( intersection ) { final / * / * /
rank: 155
score: 98.13504791259766
patch: / / / / / else /
rank: 156
score: 99.4776382446289
patch: line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 156
score: 99.3814697265625
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ;
rank: 156
score: 99.35727945963542
patch: if ( include CaMeL End CaMeL Points ) { if ( include CaMeL End CaMeL Points )
rank: 156
score: 99.16003811743951
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) != line 1 . get CaMeL Line CaMeL Number ( ) )
rank: 156
score: 98.86415405273438
patch: if ( line $NUMBER$ . get CaMeL Line ( ) . get CaMeL Offset ( ) == 0 )
rank: 156
score: 98.7016934481534
patch: / * / / / / int * / line
rank: 156
score: 98.40894571940105
patch: / * / System . / / / * / /
rank: 156
score: 98.13412911551339
patch: / / / / else /
rank: 157
score: 99.43947466681985
patch: Line line 1 = ( Line ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 157
score: 99.40729314630681
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 157
score: 99.35673304966518
patch: this . sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 157
score: 99.15971848060344
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line 1 . get CaMeL Location ( )
rank: 157
score: 98.86339721679687
patch: if ( line 1 == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 157
score: 98.7015889485677
patch: / * / / / * / / int * /
rank: 157
score: 98.40802556818181
patch: if ( intersection ) { this . intersection * /
rank: 157
score: 98.13357883029514
patch: throw / / / / / / compute
rank: 158
score: 99.4775390625
patch: Line line $NUMBER$ = get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 158
score: 99.43944149925595
patch: Line line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 158
score: 99.40679524739583
patch: final Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 158
score: 99.37969006990132
patch: { Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 158
score: 99.35619245256696
patch: if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 158
score: 99.15957346270162
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) / $NUMBER$
rank: 158
score: 98.86315155029297
patch: int [ ] intersection = new int [ intersection . length * $NUMBER$ ] ;
rank: 158
score: 98.70127175071023
patch: / * / * * * / * / /
rank: 158
score: 98.40789794921875
patch: if ( intersection / * /
rank: 158
score: 98.13357543945312
patch: / / / / int / /
rank: 159
score: 99.4394287109375
patch: Line line $NUMBER$ 1 = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 159
score: 99.37839869449013
patch: Line line $NUMBER$ = ( Line 1 ) sub CaMeL Line . get CaMeL Line ( ) ;
rank: 159
score: 99.35514692826705
patch: for ( final Sub CaMeL Line sub CaMeL Line : sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 159
score: 99.15878208705357
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line 1 . get CaMeL Location ( )
rank: 159
score: 98.86183675130208
patch: Object [ ] intersection = new Object [ $NUMBER$ ] ;
rank: 159
score: 98.70111083984375
patch: / * / * / / * * * / /
rank: 159
score: 98.40779252485795
patch: if ( this . intersection ) { / * /
rank: 159
score: 98.13205973307292
patch: / / / / System
rank: 160
score: 99.47732747395834
patch: Line line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 160
score: 99.43901134672619
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ,
rank: 160
score: 99.4062969501202
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 160
score: 99.37828911675348
patch: Line line $NUMBER$ = ( String ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 160
score: 99.354736328125
patch: get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 160
score: 99.15854116586539
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == line 1 . get CaMeL Line CaMeL Number ( ) / /
rank: 160
score: 98.86176147460938
patch: if ( line $NUMBER$ == null ) { throw new Null CaMeL Pointer CaMeL Exception ( ) ; }
rank: 160
score: 98.70079456676136
patch: / * * / * * * * / /
rank: 160
score: 98.40777587890625
patch: / * / { / / / / / * /
rank: 160
score: 98.13138156467014
patch: / / { / / / / try
rank: 161
score: 99.47666015625
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 161
score: 99.378173828125
patch: try { Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 161
score: 99.3546142578125
patch: return line 1 . intersection ( include CaMeL End CaMeL Points ) ;
rank: 161
score: 99.15800548735119
patch: if ( line 1 . get CaMeL Line ( ) != line $NUMBER$ . get CaMeL Line ( ) )
rank: 161
score: 98.86160278320312
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > 0 )
rank: 161
score: 98.70028686523438
patch: / * / / * / * / / / /
rank: 161
score: 98.40724875710227
patch: if ( intersection ( intersection ) / * * /
rank: 161
score: 98.13058132595486
patch: / / / * / / / /
rank: 162
score: 99.40532622466216
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 162
score: 99.3771728515625
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( this ) ;
rank: 162
score: 99.35419170673077
patch: this . include CaMeL End CaMeL Points = line 1 . get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 162
score: 99.15777064732143
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection . get CaMeL Line CaMeL Number ( ) line 1 . get CaMeL Line CaMeL Number ( ) ) {
rank: 162
score: 98.86071014404297
patch: intersection ( intersection ( line $NUMBER$ , include CaMeL End CaMeL Points ) ) ;
rank: 162
score: 98.6999178799716
patch: / * / / / System . / * /
rank: 162
score: 98.40715789794922
patch: if ( this . intersection ) {
rank: 162
score: 98.1301040649414
patch: / / / / { / compute
rank: 163
score: 99.47645786830357
patch: loc 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 163
score: 99.40529959542411
patch: Line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 163
score: 99.37711791992187
patch: Line line $NUMBER$ = ( Line ) ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 163
score: 99.35416353665866
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 163
score: 99.15772501627605
patch: if ( line 1 . get CaMeL Name ( ) . equals ( line $NUMBER$ . get CaMeL Name ( ) ) )
rank: 163
score: 98.86028442382812
patch: Array CaMeL List < String > intersection = new Array CaMeL List < String > ( intersection ) ;
rank: 163
score: 98.69920857747395
patch: / * * * * * * * * * /
rank: 163
score: 98.40703790838069
patch: if ( intersection ( intersection ) / * / )
rank: 163
score: 98.12953186035156
patch: throw / / / / / /
rank: 164
score: 99.47624067826705
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( line $NUMBER$ ) ;
rank: 164
score: 99.437255859375
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line $NUMBER$ ( )
rank: 164
score: 99.3765869140625
patch: Line line $NUMBER$ = ( Line ) ! sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 164
score: 99.35414341517857
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) . include CaMeL End CaMeL Points ) {
rank: 164
score: 99.15762765066964
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) . equals ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) ) )
rank: 164
score: 98.85933002672698
patch: Array CaMeL List < Integer > intersection = new Array CaMeL List < Integer > ( ) ;
rank: 164
score: 98.69905598958333
patch: / * / / * * * / / * /
rank: 164
score: 98.4063720703125
patch: / * * * * * /
rank: 164
score: 98.12876892089844
patch: { / / / / / /
rank: 165
score: 99.37652587890625
patch: if ( line 1 . equals ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) )
rank: 165
score: 99.35401675575658
patch: for ( String sub CaMeL Line : sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 165
score: 99.15726143973214
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) > line 1 . get CaMeL Line CaMeL Number ( ) / $NUMBER$ ) {
rank: 165
score: 98.85751488095238
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > intersection . size ( ) ) {
rank: 165
score: 98.69858805338542
patch: / * / int / / / / / / /
rank: 165
score: 98.40456321022727
patch: / / * / / / / / * /
rank: 165
score: 98.12690565321181
patch: } / { / / / / /
rank: 166
score: 99.4365298622533
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point (
rank: 166
score: 99.37601318359376
patch: if ( line $NUMBER$ . add ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) )
rank: 166
score: 99.1565692608173
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) > line 1 . get CaMeL Line CaMeL Number ( ) / /
rank: 166
score: 98.85703822544643
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == 0 ) { / * /
rank: 166
score: 98.69798787434895
patch: / * / / * / * / / * /
rank: 166
score: 98.40399724786931
patch: if ( intersection ) { / / } * /
rank: 166
score: 98.12663051060268
patch: public / / / / /
rank: 167
score: 99.43648856026786
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Line ( ) . get CaMeL Hyperplane ( ) ;
rank: 167
score: 99.404052734375
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 167
score: 99.37587280273438
patch: if ( line 1 . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) )
rank: 167
score: 99.353271484375
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ;
rank: 167
score: 99.15635463169643
patch: if ( line 1 . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ line $NUMBER$ . get CaMeL Name ( ) ) ) {
rank: 167
score: 98.85703735351562
patch: if ( intersection . is CaMeL Empty ( ) / * || intersection . is CaMeL Empty ( )
rank: 167
score: 98.69771999782986
patch: / * / int / * / /
rank: 167
score: 98.40289306640625
patch: if / * / / * /
rank: 167
score: 98.12607150607639
patch: / / System / / / / /
rank: 168
score: 99.43631998697917
patch: Line line $NUMBER$ 1 = sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) ;
rank: 168
score: 99.40373883928571
patch: int line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 168
score: 99.37558322482639
patch: Block line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 168
score: 99.35323757595486
patch: / * if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points ) {
rank: 168
score: 99.15614670973558
patch: if ( line 1 . get CaMeL Name ( ) . equals ( $STRING$ line 1 . get CaMeL Name ( ) ) ) {
rank: 168
score: 98.8564220610119
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < intersection . size ( ) / *
rank: 168
score: 98.69712320963542
patch: / / / / / / / / / / /
rank: 168
score: 98.40146484375
patch: / * / / / / * / /
rank: 168
score: 98.12575954861111
patch: / / * / / / / compute
rank: 169
score: 99.47476309317129
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( include CaMeL End CaMeL Points ) ;
rank: 169
score: 99.4361508018092
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . intersection ( line 1 ) ;
rank: 169
score: 99.35301862444196
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( true ) ;
rank: 169
score: 99.15565249794408
patch: switch ( line 1 . get CaMeL Line CaMeL Number ( ) ) { case - 1 :
rank: 169
score: 98.85628509521484
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != null )
rank: 169
score: 98.69666544596355
patch: / * * * * * * / * / /
rank: 169
score: 98.39878151633523
patch: if ( intersection ) { / / * * /
rank: 169
score: 98.12454986572266
patch: / / / / try / /
rank: 170
score: 99.47462047230114
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( line 1 ) ;
rank: 170
score: 99.43613978794643
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . line $NUMBER$ ;
rank: 170
score: 99.40325317382812
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 170
score: 99.37489077919408
patch: sub CaMeL Line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 170
score: 99.35238792782738
patch: return line 1 . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 170
score: 99.15531782670455
patch: if ( line 1 . get CaMeL Line ( ) != line $NUMBER$ . get CaMeL Line ( ) ) {
rank: 170
score: 98.856005859375
patch: if ( intersection == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( intersection ) ; }
rank: 170
score: 98.69639078776042
patch: / * / / * * / / * * /
rank: 170
score: 98.39743874289773
patch: if ( intersection ) { / } / * /
rank: 170
score: 98.1229248046875
patch: } / / / / / /
rank: 171
score: 99.47450474330357
patch: Line line $NUMBER$ = line 1 . intersection ( line 1 ) ;
rank: 171
score: 99.40264129638672
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line ) ) ;
rank: 171
score: 99.37479400634766
patch: if ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) == null )
rank: 171
score: 99.35211588541667
patch: return intersection ( sub CaMeL Line , include CaMeL End CaMeL Points ) ;
rank: 171
score: 99.15530831473214
patch: if ( line 1 . equals CaMeL Ignore CaMeL Case ( $STRING$ ) || line $NUMBER$ . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 171
score: 98.85440063476562
patch: if ( line $NUMBER$ == null ) { / * /
rank: 171
score: 98.69634454900569
patch: / * * * * * / * / /
rank: 171
score: 98.39517211914062
patch: / * * / /
rank: 171
score: 98.12251790364583
patch: / / / final / / / /
rank: 172
score: 99.351953125
patch: this . line $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 172
score: 99.15492466517857
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < intersection . get CaMeL Line CaMeL Number ( ) line $NUMBER$ . get CaMeL Line CaMeL Number ( ) ) {
rank: 172
score: 98.85413178943452
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) <= intersection . size ( ) ) {
rank: 172
score: 98.69492409446023
patch: / * * * * * * * * /
rank: 172
score: 98.3944091796875
patch: if ( intersection ) { / / continue * /
rank: 172
score: 98.12036895751953
patch: infinite / { / / / /
rank: 173
score: 99.47414328835227
patch: Line line $NUMBER$ = ( Line ) get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ;
rank: 173
score: 99.40150188577586
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 173
score: 99.35171169704861
patch: if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) != null ) {
rank: 173
score: 99.15412008351294
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location line 1
rank: 173
score: 98.854052734375
patch: int size = line 1 . get CaMeL Size ( ) / $NUMBER$ ;
rank: 173
score: 98.69484641335227
patch: / * / / / / System . / /
rank: 173
score: 98.39324188232422
patch: if / * * * / }
rank: 173
score: 98.11733669704861
patch: / / / / System / / /
rank: 174
score: 99.473662109375
patch: long line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 174
score: 99.35146859975961
patch: this . sub CaMeL Line = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 174
score: 99.15390450613839
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < line $NUMBER$ . get CaMeL Line CaMeL Number ( ) / $NUMBER$ ) {
rank: 174
score: 98.85393608940973
patch: final line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line ( ) ;
rank: 174
score: 98.69466145833333
patch: / * / / * * / / / * /
rank: 174
score: 98.39293323863636
patch: if ( intersection ) { / / char * /
rank: 174
score: 98.11728922526042
patch: / / / System / / / /
rank: 175
score: 99.47325134277344
patch: Line line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 175
score: 99.43006134033203
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . sub CaMeL Line ;
rank: 175
score: 99.3507568359375
patch: this . line 1 = line 1 . intersection ( line $NUMBER$ ) ;
rank: 175
score: 99.15389578683036
patch: if ( line 1 . get CaMeL Location ( ) . equals ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( )
rank: 175
score: 98.8527896278783
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == intersection / * / )
rank: 175
score: 98.69463556463069
patch: / * / * * * * * / /
rank: 175
score: 98.39252387152777
patch: if / * * * / } /
rank: 175
score: 98.11576334635417
patch: logger / / / / / / compute
rank: 176
score: 99.47305790070564
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 176
score: 99.37288208007813
patch: if ( line 1 . contains ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) )
rank: 176
score: 99.3506328876202
patch: this . line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 176
score: 99.15312668372844
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( /
rank: 176
score: 98.8527099609375
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) >= line $NUMBER$ . / $NUMBER$ )
rank: 176
score: 98.6941805752841
patch: / * * / * * * / / /
rank: 176
score: 98.39251154119319
patch: if ( intersection ) { / / / * /
rank: 176
score: 98.11537388392857
patch: / / / / * /
rank: 177
score: 99.4728582974138
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 177
score: 99.40093994140625
patch: long include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 177
score: 99.37185187088816
patch: Line line $NUMBER$ = ( Line ) line $NUMBER$ . get CaMeL Sub CaMeL Space ( ) ;
rank: 177
score: 99.35052490234375
patch: this . include CaMeL End CaMeL Points = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 177
score: 99.15158420138889
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( line $NUMBER$ . to CaMeL Lower CaMeL Case ( ) )
rank: 177
score: 98.85265435112848
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line $NUMBER$ ) / $NUMBER$ )
rank: 177
score: 98.69315185546876
patch: / * / * * * * / /
rank: 177
score: 98.39234008789063
patch: / * / System . / / * /
rank: 177
score: 98.11420549665179
patch: if / / / / /
rank: 178
score: 99.4723651592548
patch: Line line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) : sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 178
score: 99.371826171875
patch: if ( include CaMeL End CaMeL Points && line $NUMBER$ . get CaMeL Hyperplane ( ) == null )
rank: 178
score: 99.35044459292763
patch: if ( include CaMeL End CaMeL Points && line 1 . include CaMeL End CaMeL Points ) {
rank: 178
score: 99.15006510416667
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < line $NUMBER$ . get CaMeL Line CaMeL Number ( ) / $NUMBER$ )
rank: 178
score: 98.85243853400735
patch: if ( intersection == null || line $NUMBER$ . is CaMeL Empty ( ) ) {
rank: 178
score: 98.3923110961914
patch: / * * * * / /
rank: 178
score: 98.11278618706598
patch: / throw / / / / / /
rank: 179
score: 99.4720791903409
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 179
score: 99.42793782552083
patch: line $NUMBER$ . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 179
score: 99.39949898097827
patch: String line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( line $NUMBER$ ) ;
rank: 179
score: 99.36986490885417
patch: Line line $NUMBER$ = ( Line 1 ) get CaMeL Hyperplane ( ) ;
rank: 179
score: 99.3500264485677
patch: return line 1 . intersection ( sub CaMeL Line ) ;
rank: 179
score: 99.14959161931819
patch: if ( line 1 . get CaMeL Offset ( ) < line 1 . get CaMeL Offset ( ) ) {
rank: 179
score: 98.85194702148438
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == intersection / * / )
rank: 179
score: 98.69185384114583
patch: / / System . / / / / / / /
rank: 179
score: 98.39122425426136
patch: if ( intersection || intersection ) return / * /
rank: 179
score: 98.1126708984375
patch: / { / /
rank: 180
score: 99.47184244791667
patch: final Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 180
score: 99.39939597800925
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 180
score: 99.3499609375
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point (
rank: 180
score: 99.149326171875
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < this . get CaMeL Line CaMeL Number ( ) ) {
rank: 180
score: 98.85179036458334
patch: int length = line 1 . get CaMeL Length ( ) / $NUMBER$ ;
rank: 180
score: 98.69147283380681
patch: / * / / * / / int * /
rank: 180
score: 98.39083523220486
patch: if ( intersection ( intersection ) ) {
rank: 180
score: 98.11229705810547
patch: / / / / throw / /
rank: 181
score: 99.47184244791667
patch: final boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 181
score: 99.42727322048611
patch: Line line $NUMBER$ = ( Line ) line 1 . to CaMeL Sub CaMeL Space ( )
rank: 181
score: 99.34984290081522
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) . length > 0 )
rank: 181
score: 99.1484375
patch: if ( line 1 . get CaMeL Name ( ) . equals ( line 1 . get CaMeL Name ( ) )
rank: 181
score: 98.85130818684895
patch: if ( intersection . is CaMeL Empty ( ) ) {
rank: 181
score: 98.691455078125
patch: / * / / / int * / /
rank: 181
score: 98.3897705078125
patch: if ( intersection ( intersection ) / this ) {
rank: 181
score: 98.11214773995536
patch: / / boolean / / /
rank: 182
score: 99.47174072265625
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get ( line $NUMBER$ ) ;
rank: 182
score: 99.39890747070312
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 182
score: 99.36801147460938
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . check CaMeL Point ( line 1 ) ;
rank: 182
score: 99.34971400669643
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) ; if ( include CaMeL End CaMeL Points ) {
rank: 182
score: 99.14832899305556
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) <= line 1 . get CaMeL Line CaMeL Number ( ) / $NUMBER$ )
rank: 182
score: 98.85100763494319
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 182
score: 98.69077555338542
patch: / * * * * * * * / / /
rank: 182
score: 98.38836669921875
patch: if ( intersection )
rank: 182
score: 98.11138916015625
patch: / / / / / / / intersection
rank: 183
score: 99.42584228515625
patch: Line line $NUMBER$ 1 = ( Line ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 183
score: 99.36784532335069
patch: if ( include CaMeL End CaMeL Points && line $NUMBER$ . intersection ( line $NUMBER$ ) )
rank: 183
score: 99.34962100074405
patch: return line 1 . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 183
score: 99.14810844089673
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) > 0 ) {
rank: 183
score: 98.85100446428571
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line $NUMBER$ ) / $NUMBER$ . 0 ) {
rank: 183
score: 98.69033813476562
patch: / * / / * / / / /
rank: 183
score: 98.38822798295455
patch: if / * / System . / / * /
rank: 183
score: 98.11082628038194
patch: / / / / int / / /
rank: 184
score: 99.471044921875
patch: final boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 184
score: 99.42576197574013
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ( )
rank: 184
score: 99.36781819661458
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL X ( ) ;
rank: 184
score: 99.34947791466347
patch: this . include CaMeL End CaMeL Points = line 1 . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 184
score: 99.1479961688702
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < line 1 . get CaMeL Line CaMeL Number ( ) / /
rank: 184
score: 98.8505859375
patch: if ( line $NUMBER$ != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) >= 0 )
rank: 184
score: 98.68990071614583
patch: / * / int * / / / * / /
rank: 184
score: 98.38714044744319
patch: if ( intersection / / / / / / compute
rank: 184
score: 98.1107177734375
patch: / / double / / / / compute
rank: 185
score: 99.4706794984879
patch: loc 1 = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 185
score: 99.39710735452586
patch: Line - 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 185
score: 99.36751556396484
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) != null ) {
rank: 185
score: 99.34871732271634
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Array ( ) ;
rank: 185
score: 99.14761207217262
patch: if ( line 1 . get CaMeL Line ( ) == line 1 . get CaMeL Line ( ) )
rank: 185
score: 98.85030110677083
patch: int length = line $NUMBER$ . get CaMeL Length ( ) / $NUMBER$ ;
rank: 185
score: 98.68968616832386
patch: / * / / / System . / / /
rank: 185
score: 98.38467068142361
patch: / * / System . / * /
rank: 185
score: 98.10898166232639
patch: / / / case / / / /
rank: 186
score: 99.47064208984375
patch: loc $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 186
score: 99.42508737664474
patch: Region line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 186
score: 99.39692723473837
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 186
score: 99.36708374023438
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . length ;
rank: 186
score: 99.34809932002315
patch: this . line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space (
rank: 186
score: 99.147216796875
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) <= line 1 . get CaMeL Line CaMeL Number ( ) / $NUMBER$ ) {
rank: 186
score: 98.85024879092262
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) <= intersection . size ( ) ) {
rank: 186
score: 98.6895751953125
patch: / * / * / / * / * / /
rank: 186
score: 98.3843106356534
patch: / * / / / / / / * /
rank: 186
score: 98.10686577690973
patch: / / char / / / / /
rank: 187
score: 99.46983681955645
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 187
score: 99.42498779296875
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ( ) ;
rank: 187
score: 99.39690085018383
patch: boolean include CaMeL End CaMeL Points = line 1 . intersection ( line $NUMBER$ ) ;
rank: 187
score: 99.36698608398437
patch: if ( include CaMeL End CaMeL Points && line $NUMBER$ . get CaMeL Hyperplane ( ) != null )
rank: 187
score: 99.3480812355324
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 187
score: 99.14707728794643
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) != line 1 . get CaMeL Line CaMeL Number ( ) / $NUMBER$ ) {
rank: 187
score: 98.85013156467014
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < intersection / $NUMBER$ )
rank: 187
score: 98.68883260091145
patch: / * / / / / / int * / line
rank: 187
score: 98.38318980823864
patch: if / * * * * * / } /
rank: 187
score: 98.10683865017361
patch: / / / / / / / boolean
rank: 188
score: 99.4697598544034
patch: Line line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) . intersection ( line $NUMBER$ ) ;
rank: 188
score: 99.39684295654297
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( sub CaMeL Line ) ) ;
rank: 188
score: 99.36676346628289
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . ;
rank: 188
score: 99.347412109375
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) {
rank: 188
score: 99.14698327105978
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) < 0 ) {
rank: 188
score: 98.85008239746094
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == 0 )
rank: 188
score: 98.68883167613636
patch: / * / * * * / / * /
rank: 188
score: 98.38278198242188
patch: if ( intersection ( intersection ) / / {
rank: 188
score: 98.10673014322917
patch: / / / / / / / line
rank: 189
score: 99.4695536295573
patch: loc 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 189
score: 99.42384248621323
patch: Line line $NUMBER$ 1 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 189
score: 99.39661096643519
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( )
rank: 189
score: 99.36656996783088
patch: if ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) == null ) {
rank: 189
score: 99.34679497612848
patch: return sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 189
score: 99.146943359375
patch: if ( line 1 . get CaMeL Location ( ) . equals ( line 1 . get CaMeL Location ( ) ) / /
rank: 189
score: 98.84981863839286
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) > intersection . size ( ) ) {
rank: 189
score: 98.6886494954427
patch: / * / / * / * * / / /
rank: 189
score: 98.38263494318181
patch: if ( intersection ) { / * * / }
rank: 189
score: 98.10638427734375
patch: / / / / / { / compute
rank: 190
score: 99.46927527225378
patch: return ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 190
score: 99.42379421657986
patch: line $NUMBER$ . intersection ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 190
score: 99.3465576171875
patch: if ( include CaMeL End CaMeL Points && line 1 . to CaMeL Sub CaMeL Space ( ) . include CaMeL End CaMeL Points )
rank: 190
score: 99.14687771267361
patch: if ( line 1 . get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 190
score: 98.84951443142361
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == - 1 ) {
rank: 190
score: 98.68772194602273
patch: / * / * / * * * / /
rank: 190
score: 98.38236694335937
patch: if / * * / / / * /
rank: 190
score: 98.10462951660156
patch: / int / / / / compute
rank: 191
score: 99.4691852072011
patch: if ( line $NUMBER$ . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ) {
rank: 191
score: 99.4236198874081
patch: Line line $NUMBER$ 1 = ( Line ) get CaMeL Remaining CaMeL Region ( ) ;
rank: 191
score: 99.36448160807292
patch: Line line $NUMBER$ = ( Object ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 191
score: 99.34648075810185
patch: this . line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 191
score: 99.146494140625
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) / /
rank: 191
score: 98.8493881225586
patch: Line [ ] intersection = new Line [ intersection . size ( ) ] ;
rank: 191
score: 98.68758138020833
patch: / * / / / / / / / / /
rank: 191
score: 98.38116455078125
patch: / * * * / * /
rank: 191
score: 98.10441080729167
patch: / / / / throw / / compute
rank: 192
score: 99.42351331208882
patch: Line line 1 1 = ( Line ) sub CaMeL Line . get CaMeL Line ( ) ;
rank: 192
score: 99.39596557617188
patch: final Sub CaMeL Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 192
score: 99.36424967447917
patch: try { Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 192
score: 99.14622192382812
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( intersection . to CaMeL String ( ) ) ;
rank: 192
score: 98.84927707248264
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < 0 / $NUMBER$ )
rank: 192
score: 98.68705610795455
patch: / * / / / / int * * /
rank: 192
score: 98.37973854758523
patch: if ( intersection ) { intersection } / * /
rank: 192
score: 98.10423448350694
patch: / / / boolean / / / /
rank: 193
score: 99.395751953125
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 193
score: 99.36371459960938
patch: if ( line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 193
score: 99.34605577256944
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( $STRING$ ) ;
rank: 193
score: 99.14603097098214
patch: if ( line 1 . get CaMeL Length ( ) > line 1 . get CaMeL Length ( ) )
rank: 193
score: 98.8490851907169
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / * line $NUMBER$ / / /
rank: 193
score: 98.6852518717448
patch: / * / * / * * * * / /
rank: 193
score: 98.37835693359375
patch: / * * * / }
rank: 193
score: 98.10330539279514
patch: { / / / / / / compute
rank: 194
score: 99.46698319284539
patch: final boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 194
score: 99.39541543496621
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 194
score: 99.36368136935764
patch: Component line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 194
score: 99.34566650390624
patch: for ( Sub CaMeL Line line 1 : sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 194
score: 99.14527476917614
patch: if ( line 1 . get CaMeL Line ( ) == line 1 . get CaMeL Line ( ) ) {
rank: 194
score: 98.84886532738095
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == null / * / ) {
rank: 194
score: 98.68498091264205
patch: / * / / * * / * * /
rank: 194
score: 98.37696075439453
patch: if ( intersection / * / /
rank: 194
score: 98.10190158420139
patch: / else / / / / / compute
rank: 195
score: 99.46675618489583
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 195
score: 99.42243508731617
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point (
rank: 195
score: 99.34553833007813
patch: for ( Sub CaMeL Line line $NUMBER$ : sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 195
score: 99.14439039963942
patch: if ( line 1 . is CaMeL Na CaMeL N ( ) || line 1 . is CaMeL Na CaMeL N ( ) ) {
rank: 195
score: 98.8486328125
patch: int [ ] intersection = new int [ line 1 . size ( ) ] ;
rank: 195
score: 98.68468128551136
patch: / * / / / int * / * /
rank: 195
score: 98.37528852982955
patch: if / * / / / / * * /
rank: 195
score: 98.09937879774306
patch: / / byte / / / / compute
rank: 196
score: 99.46674262152777
patch: loc = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 196
score: 99.42219623766448
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Line 1 ( ) ;
rank: 196
score: 99.3951171875
patch: final boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 196
score: 99.36255493164063
patch: Line line $NUMBER$ = ( Line ) get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point (
rank: 196
score: 99.34520580150463
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points || include CaMeL End CaMeL Points || include CaMeL End CaMeL Points )
rank: 196
score: 99.14430519386575
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( ) / $NUMBER$ ) {
rank: 196
score: 98.8482666015625
patch: assert line $NUMBER$ != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > 0 ;
rank: 196
score: 98.68428178267045
patch: / * / / / / * / / compute
rank: 196
score: 98.37407892400569
patch: if ( intersection ) { intersection / / * /
rank: 196
score: 98.09864044189453
patch: / else / / / / /
rank: 197
score: 99.4663594563802
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 197
score: 99.42095626027961
patch: String line 1 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 197
score: 99.39496170847039
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( sub CaMeL Line , line $NUMBER$ ) ;
rank: 197
score: 99.36142578125
patch: Node line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) ;
rank: 197
score: 99.34457879317434
patch: return line 1 . intersection ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 197
score: 99.1441317471591
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . starts CaMeL With ( $STRING$ ) / /
rank: 197
score: 98.84816607306985
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ / * line $NUMBER$ / / /
rank: 197
score: 98.68419300426136
patch: / * / / / / * / * /
rank: 197
score: 98.37335815429688
patch: if / * * * / * / /
rank: 197
score: 98.09773763020833
patch: / / log / / / / /
rank: 198
score: 99.46621817129629
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Hyperplane ( ) ) ;
rank: 198
score: 99.42032470703126
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 )
rank: 198
score: 99.36124460320724
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; {
rank: 198
score: 99.34451171875
patch: int line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 198
score: 99.14319719587054
patch: if ( line 1 . equals CaMeL Ignore CaMeL Case ( $STRING$ ) || line 1 . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 198
score: 98.84788295200893
patch: if ( line $NUMBER$ == null / * intersection . * / )
rank: 198
score: 98.683056640625
patch: / * / / * / / * /
rank: 198
score: 98.37323608398438
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 198
score: 98.09773254394531
patch: / / / / / / else
rank: 199
score: 99.4661153157552
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 199
score: 99.41916910807292
patch: Line start 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 199
score: 99.39441338900862
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Sub CaMeL Space ( ) ) ;
rank: 199
score: 99.36123175370066
patch: if ( include CaMeL End CaMeL Points && line $NUMBER$ . intersection ( line $NUMBER$ ) ) {
rank: 199
score: 99.34441669170673
patch: if ( include CaMeL End CaMeL Points ) { include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 199
score: 99.14287651909723
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) > line 1 . get CaMeL Line CaMeL Number ( ) / $NUMBER$ )
rank: 199
score: 98.84737454927884
patch: if ( line $NUMBER$ == null && line $NUMBER$ == null )
rank: 199
score: 98.68282645089286
patch: / * / / * /
rank: 199
score: 98.37269176136364
patch: if ( intersection ) { / * * * /
rank: 199
score: 98.09689670138889
patch: / / } / / / / /
rank: 200
score: 99.46577785326087
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( ) ;
rank: 200
score: 99.34404296875
patch: if ( include CaMeL End CaMeL Points && line 1 != null ) {
rank: 200
score: 99.14254056490384
patch: if ( line 1 . get CaMeL Location ( ) . starts CaMeL With ( line 1 . get CaMeL Location ( ) ) )
rank: 200
score: 98.84670584542411
patch: if ( line $NUMBER$ . get CaMeL Length ( ) == 0 )
rank: 200
score: 98.68280029296875
patch: / * / / / int / * / / /
rank: 200
score: 98.37112862723214
patch: if / * * / /
rank: 200
score: 98.09596082899306
patch: / / / / boolean / / compute
rank: 201
score: 99.46538837139423
patch: include CaMeL End CaMeL Points = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 201
score: 99.4188296669408
patch: Line line $NUMBER$ = ( Line ) get CaMeL Line 1 . get CaMeL Hyperplane ( ) ;
rank: 201
score: 99.36032443576389
patch: String line $NUMBER$ = ( int ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 201
score: 99.142431640625
patch: if ( line 1 . get CaMeL Line ( ) . equals ( line 1 . get CaMeL Line ( ) ) / /
rank: 201
score: 98.84628441220238
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection . size ( ) / *
rank: 201
score: 98.68241743607955
patch: / * / / / int / / * /
rank: 201
score: 98.37111594460227
patch: if / * / / / / * / }
rank: 201
score: 98.09448920355902
patch: / / / / try / / /
rank: 202
score: 99.41825358072917
patch: Location line $NUMBER$ = ( Region ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 202
score: 99.39349365234375
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 202
score: 99.36015489366319
patch: Line line $NUMBER$ = ( Hyperplane ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 202
score: 99.14212890625
patch: if ( line 1 . get CaMeL Name ( ) . equals ( line 1 . get CaMeL Name ( ) ) / /
rank: 202
score: 98.84558823529412
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) != - 1 )
rank: 202
score: 98.68239339192708
patch: / * / / * * / / / / /
rank: 202
score: 98.37063259548611
patch: / * * * / * / /
rank: 202
score: 98.09445626395089
patch: / / int / / /
rank: 203
score: 99.393310546875
patch: boolean include CaMeL End CaMeL Points = line 1 . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 203
score: 99.34279378255208
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) . length > 0 ) {
rank: 203
score: 99.14193960336539
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) <= line 1 . get CaMeL Line CaMeL Number ( ) / /
rank: 203
score: 98.84540264423077
patch: if ( line $NUMBER$ == null / * intersection * / )
rank: 203
score: 98.68239339192708
patch: / * / * * * / * * / /
rank: 203
score: 98.37002224392361
patch: if / * * * / * /
rank: 203
score: 98.09023708767361
patch: intersection / int / / / / /
rank: 204
score: 99.464677734375
patch: Line line $NUMBER$ += sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 204
score: 99.41721801757812
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ )
rank: 204
score: 99.39328095407197
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 204
score: 99.35913764105902
patch: Line line $NUMBER$ = ( Long ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 204
score: 99.34154595269098
patch: Atom line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 204
score: 99.14145688657408
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection . get CaMeL Line CaMeL Number ( ) / $NUMBER$ ) {
rank: 204
score: 98.8441226356908
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != null / * / )
rank: 204
score: 98.68190696022727
patch: / * * / * * / / / /
rank: 204
score: 98.37001731178977
patch: / * / System . / / * / /
rank: 204
score: 98.090087890625
patch: / / / boolean / / /
rank: 205
score: 99.46441359747024
patch: / * / Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 205
score: 99.4168701171875
patch: Line line $NUMBER$ = get CaMeL Line 1 . intersection ( line $NUMBER$ ) ;
rank: 205
score: 99.3931300951087
patch: Line line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 205
score: 99.35907303659539
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane $NUMBER$ ( ) ;
rank: 205
score: 99.34142388237848
patch: Image line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 205
score: 99.140625
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < intersection . get CaMeL Line CaMeL Number ( ) )
rank: 205
score: 98.84401568244485
patch: String [ ] intersection = new String [ line 1 . size ( ) ] ;
rank: 205
score: 98.68170720880681
patch: / * int / / / / * / /
rank: 205
score: 98.36849975585938
patch: if ( intersection ) { final / * /
rank: 205
score: 98.08997344970703
patch: if / / / / / compute
rank: 206
score: 99.4643790952621
patch: loc 1 = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 206
score: 99.39271129261364
patch: boolean include CaMeL End CaMeL Points = line 1 . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 206
score: 99.35899047851562
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) . size ( ) > 0 )
rank: 206
score: 99.34076538085938
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 206
score: 99.1406017485119
patch: if ( line 1 . get CaMeL Length ( ) < line $NUMBER$ . get CaMeL Length ( ) )
rank: 206
score: 98.84368896484375
patch: List line $NUMBER$ = ( List ) sub CaMeL Line . get CaMeL Line ( ) ;
rank: 206
score: 98.68125221946023
patch: / * / * * * / / / /
rank: 206
score: 98.36836751302083
patch: / * / / / / * /
rank: 206
score: 98.08805338541667
patch: / / void / / / / /
rank: 207
score: 99.46427055027173
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 207
score: 99.41439016241776
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; final
rank: 207
score: 99.39268756734914
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . to CaMeL Sub CaMeL Space ( sub CaMeL Line ) ;
rank: 207
score: 99.3585269325658
patch: Line line $NUMBER$ = ( Region ) sub CaMeL Line 1 . get CaMeL Hyperplane ( ) ;
rank: 207
score: 99.34037109375
patch: if ( include CaMeL End CaMeL Points ) { if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 207
score: 99.14043317522321
patch: if ( line 1 . get CaMeL Line ( line 1 . get CaMeL Line CaMeL Number ( line 1 . get CaMeL Line CaMeL Number (
rank: 207
score: 98.84354073660714
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) >= line $NUMBER$ . / $NUMBER$ ) {
rank: 207
score: 98.68107466264205
patch: / * * / / * / * / /
rank: 207
score: 98.3672762784091
patch: if ( intersection ) { / / while * /
rank: 207
score: 98.08687337239583
patch: / / / / break / / /
rank: 208
score: 99.46426595052084
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 208
score: 99.41417236328125
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Line $NUMBER$ ( ) ;
rank: 208
score: 99.39199594350961
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 208
score: 99.35796712239583
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) == null )
rank: 208
score: 99.340283203125
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ;
rank: 208
score: 99.13971557617188
patch: if ( line 1 . to CaMeL String ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 208
score: 98.84351303998162
patch: Object [ ] intersection = new Object [ line $NUMBER$ . size ( ) ] ;
rank: 208
score: 98.68101917613636
patch: / * / / int * / / / /
rank: 208
score: 98.3669766512784
patch: if ( intersection == null ) return / * /
rank: 208
score: 98.08645290798611
patch: } / / / / / / compute
rank: 209
score: 99.46410345262096
patch: final boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 209
score: 99.41393432617187
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . value ;
rank: 209
score: 99.39188143102135
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 209
score: 99.35703638980263
patch: try { line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 209
score: 99.34009951636905
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Line ( ) . get CaMeL Hyperplane ( ) ;
rank: 209
score: 99.13931039663461
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection . get CaMeL Line CaMeL Number ( ) / $NUMBER$ )
rank: 209
score: 98.84334106445313
patch: if ( line 1 == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 209
score: 98.68035210503473
patch: / * * / * / * /
rank: 209
score: 98.36557839133523
patch: / * / else / / / / * /
rank: 209
score: 98.08628336588542
patch: / { / / compute
rank: 210
score: 99.4638034986413
patch: line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 210
score: 99.41356136924342
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line 1 . get CaMeL Line ( ) ;
rank: 210
score: 99.391865234375
patch: Line line $NUMBER$ = sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 210
score: 99.35694795496323
patch: Line line $NUMBER$ = ( Region ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 210
score: 99.34007727581522
patch: / * if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points || include CaMeL End CaMeL Points )
rank: 210
score: 99.13897150213069
patch: if ( line 1 . get CaMeL Length ( ) < line $NUMBER$ . get CaMeL Length ( ) ) {
rank: 210
score: 98.84326934814453
patch: Object [ ] intersection = new Object [ intersection . length / $NUMBER$ ] ;
rank: 210
score: 98.68030802408855
patch: / * int / / / / / * / /
rank: 210
score: 98.36451305042614
patch: / * / System . out . / * /
rank: 210
score: 98.08531358506944
patch: public / * / / / / /
rank: 211
score: 99.46338678175404
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Hyperplane ( ) ) ;
rank: 211
score: 99.41352282072368
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; )
rank: 211
score: 99.39171100484914
patch: int line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 211
score: 99.35632934570313
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL
rank: 211
score: 99.33952985491071
patch: if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 211
score: 99.13827659970238
patch: if ( line 1 . get CaMeL Length ( ) == line 1 . get CaMeL Length ( ) )
rank: 211
score: 98.84316871279762
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == intersection / * / ) {
rank: 211
score: 98.68017578125
patch: / / System . / / / / / /
rank: 211
score: 98.36376953125
patch: if ( intersection ( intersection ) / ) {
rank: 211
score: 98.08498128255208
patch: infinite / * / / / / /
rank: 212
score: 99.46212005615234
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Remaining CaMeL Region ( ) ;
rank: 212
score: 99.41350354646382
patch: Line line $NUMBER$ = get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 212
score: 99.39126150948661
patch: line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 212
score: 99.35606625205592
patch: Line line $NUMBER$ = ( Line ) line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) ;
rank: 212
score: 99.13768368675595
patch: if ( line 1 . get CaMeL Length ( ) != line 1 . get CaMeL Length ( ) )
rank: 212
score: 98.84309217664931
patch: if ( intersection ( intersection ( line $NUMBER$ , include CaMeL End CaMeL Points ) ) )
rank: 212
score: 98.68014526367188
patch: / * * * * * * / / / /
rank: 212
score: 98.36372375488281
patch: / * * * / } /
rank: 212
score: 98.08428276909723
patch: infinite / { / / / / compute
rank: 213
score: 99.39051555765086
patch: String line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 213
score: 99.35472412109375
patch: Line line $NUMBER$ = ( Line 1 Region ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 213
score: 99.3387920673077
patch: this . include CaMeL End CaMeL Points = line $NUMBER$ . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 213
score: 99.13758916440217
patch: if ( line 1 . get CaMeL Line ( ) . equals ( line 1 . get CaMeL Line ( ) )
rank: 213
score: 98.68009810014205
patch: / * * / / / int * / /
rank: 213
score: 98.3635586825284
patch: if ( intersection ( intersection ) / - * /
rank: 213
score: 98.08338080512152
patch: / / / / * / / compute
rank: 214
score: 99.41231282552083
patch: final Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 214
score: 99.35457356770833
patch: Line 1 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 214
score: 99.33875122070313
patch: if ( include CaMeL End CaMeL Points ) { return line 1 . intersection ( line $NUMBER$ ) ;
rank: 214
score: 99.13744212962963
patch: if ( line 1 . get CaMeL Location ( ) . starts CaMeL With ( line 1 . get CaMeL Location ( ) ) ) {
rank: 214
score: 98.84169921875
patch: int size = line $NUMBER$ . get CaMeL Size ( ) / $NUMBER$ ;
rank: 214
score: 98.67960611979167
patch: / * / / / System . / * / /
rank: 214
score: 98.36309259588069
patch: if ( intersection ) { / / in * /
rank: 214
score: 98.08335658482143
patch: / / / else / /
rank: 215
score: 99.46172540838069
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( ) ;
rank: 215
score: 99.41191549862133
patch: Line line $NUMBER$ 1 = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ;
rank: 215
score: 99.39035373263889
patch: final boolean include CaMeL End CaMeL Points = line 1 . intersection ( line $NUMBER$ ) ;
rank: 215
score: 99.33870755709134
patch: this . sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 215
score: 99.13646443684895
patch: if ( line 1 . get CaMeL Location ( ) . equals ( intersection . get CaMeL Location ( ) ) ) {
rank: 215
score: 98.84164574032738
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / * line 1 . get CaMeL Message ( ) ,
rank: 215
score: 98.67933349609375
patch: / * / / / / int * /
rank: 215
score: 98.36070667613636
patch: if ( intersection && intersection ) return / * /
rank: 215
score: 98.0802230834961
patch: / / / / / compute CaMeL
rank: 216
score: 99.46160888671875
patch: Line line $NUMBER$ = line 1 . check CaMeL Point ( line 1 ) ;
rank: 216
score: 99.41172688802084
patch: Line line $NUMBER$ 1 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 216
score: 99.13644409179688
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . equals ( line 1 . get CaMeL Location ( ) ) )
rank: 216
score: 98.84127103365384
patch: if ( line $NUMBER$ == null || line 1 == null )
rank: 216
score: 98.67933238636364
patch: / * * / / * * * / /
rank: 216
score: 98.35951926491477
patch: if ( intersection / / / / / / /
rank: 216
score: 98.07923889160156
patch: / / / final / / /
rank: 217
score: 99.46152131453805
patch: if ( include CaMeL End CaMeL Points ) { line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 217
score: 99.4111083984375
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ,
rank: 217
score: 99.35384792751736
patch: String line $NUMBER$ = ( String ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 217
score: 99.13531494140625
patch: switch ( line 1 . get CaMeL Line CaMeL Number ( ) line $NUMBER$ . get CaMeL Line CaMeL Number ( ) )
rank: 217
score: 98.8412353515625
patch: final String [ ] intersection = new String [ intersection . length ] ;
rank: 217
score: 98.6792500813802
patch: / * / / int * / / / / /
rank: 217
score: 98.35938720703125
patch: if / * * * / * / }
rank: 217
score: 98.07914225260417
patch: System / / / / / / /
rank: 218
score: 99.46150008491848
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . intersection ( line 1 ) ;
rank: 218
score: 99.41091918945312
patch: Line line 1 1 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 218
score: 99.38971578663794
patch: File line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 218
score: 99.35383605957031
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) == null ) {
rank: 218
score: 99.335791015625
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && line 1 . include CaMeL End CaMeL Points ) {
rank: 218
score: 99.13409978693181
patch: if ( line 1 . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 218
score: 98.84107607886905
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == intersection / * / ) /
rank: 218
score: 98.67884410511364
patch: / * / / / * / int * /
rank: 218
score: 98.35884232954545
patch: if ( intersection == null / * / ) {
rank: 218
score: 98.07807074652777
patch: / / { / / / * /
rank: 219
score: 99.41055118336396
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( sub CaMeL Line ) ;
rank: 219
score: 99.33559056332237
patch: this . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 219
score: 99.13259055397727
patch: if ( line 1 . get CaMeL Length ( ) != line 1 . get CaMeL Length ( ) ) {
rank: 219
score: 98.84075164794922
patch: String [ ] intersection = new String [ intersection . length * $NUMBER$ ] ;
rank: 219
score: 98.67823375355114
patch: / * / / / int * * * /
rank: 219
score: 98.35773259943181
patch: if ( intersection ) { this . / * /
rank: 219
score: 98.07794867621527
patch: / / -- / / / / /
rank: 220
score: 99.38957868303571
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 220
score: 99.33549948299633
patch: / * if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 220
score: 99.13119652157738
patch: if ( line 1 . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) / / {
rank: 220
score: 98.84073893229167
patch: byte [ ] intersection = new byte [ 1 ] ;
rank: 220
score: 98.67588112571023
patch: / * * / * * / * / /
rank: 220
score: 98.3573330965909
patch: if ( intersection ) { if / * * /
rank: 220
score: 98.07742745535714
patch: / / / / compute CaMeL
rank: 221
score: 99.46061488560268
patch: line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 221
score: 99.3526611328125
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) != null )
rank: 221
score: 99.33542887369792
patch: for ( String line $NUMBER$ : sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 221
score: 99.13090183423913
patch: if ( line 1 . get CaMeL Location ( ) . equals ( intersection . get CaMeL Location ( ) / /
rank: 221
score: 98.84019252232143
patch: if ( line $NUMBER$ != null && line 1 . get CaMeL Line CaMeL Number ( ) != null )
rank: 221
score: 98.6756924715909
patch: / * / / / / / / / /
rank: 221
score: 98.07594807942708
patch: intersection / { / / / / compute
rank: 222
score: 99.46001519097223
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 222
score: 99.40865749782986
patch: Space line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 222
score: 99.38888962204392
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 222
score: 99.33528859991776
patch: this . sub CaMeL Line . get CaMeL Hyperplane ( ) . add ( line $NUMBER$ ) ;
rank: 222
score: 99.1308826264881
patch: if ( line 1 . get CaMeL Length ( ) <= line 1 . get CaMeL Length ( ) )
rank: 222
score: 98.84010074013158
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == 0 / * / )
rank: 222
score: 98.35634155273438
patch: if / * * * * / } /
rank: 222
score: 98.0746078491211
patch: / / boolean / / / compute
rank: 223
score: 99.45986328125
patch: line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 223
score: 99.40858459472656
patch: Line line $NUMBER$ = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ;
rank: 223
score: 99.38870239257812
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 223
score: 99.35243626644737
patch: final int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 223
score: 99.3350830078125
patch: this . line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 223
score: 99.12871955422794
patch: switch ( line 1 . get CaMeL Offset ( ) ) { case - 1 :
rank: 223
score: 98.83999454273896
patch: byte [ ] intersection = new byte [ line 1 . size ( ) ] ;
rank: 223
score: 98.67559259588069
patch: / * / int * * / / / /
rank: 223
score: 98.35581276633523
patch: if ( intersection != null / * / ) {
rank: 223
score: 98.07421875
patch: / / { / / / / int
rank: 224
score: 99.45975378787878
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 224
score: 99.35202026367188
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) == null )
rank: 224
score: 99.33471001519098
patch: this . sub CaMeL Line = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 224
score: 99.12823195684524
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Length ( ) > 0 ) {
rank: 224
score: 98.8399722450658
patch: List line $NUMBER$ = ( List ) sub CaMeL Line . get CaMeL Property ( $STRING$ ) ;
rank: 224
score: 98.67491319444444
patch: / * / / * * * /
rank: 224
score: 98.3544034090909
patch: / / * * / } / / * /
rank: 224
score: 98.07306671142578
patch: / / System / / / /
rank: 225
score: 99.45974829889113
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ) ;
rank: 225
score: 99.407958984375
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line 1 . get CaMeL Hyperplane ( ) ;
rank: 225
score: 99.38858235677084
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 225
score: 99.35178736636513
patch: if ( line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 225
score: 99.33468627929688
patch: result = line 1 . intersection ( line $NUMBER$ ) ;
rank: 225
score: 99.12788722826087
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( )
rank: 225
score: 98.83952026367187
patch: if ( intersection != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != null )
rank: 225
score: 98.35393732244319
patch: / * / else { / / / * /
rank: 225
score: 98.07187906901042
patch: / / / boolean / / / compute
rank: 226
score: 99.45968062789352
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( line $NUMBER$ ) ;
rank: 226
score: 99.40757123161765
patch: Line line $NUMBER$ 1 = sub CaMeL Line . get CaMeL Line $NUMBER$ ( ) ;
rank: 226
score: 99.38813838252315
patch: sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 226
score: 99.3514175415039
patch: if ( line $NUMBER$ != null )
rank: 226
score: 99.33444552951389
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Remaining CaMeL Region ( ) ;
rank: 226
score: 99.1274746981534
patch: if ( line 1 . get CaMeL Length ( ) > line $NUMBER$ . get CaMeL Length ( ) ) {
rank: 226
score: 98.83937581380208
patch: if ( line $NUMBER$ != null && line $NUMBER$ . is CaMeL Empty ( ) ) {
rank: 226
score: 98.67329545454545
patch: / * * * * * * / * /
rank: 226
score: 98.35365600585938
patch: if / * / System . / * /
rank: 226
score: 98.07171630859375
patch: / / / / / int
rank: 227
score: 99.4589335123698
patch: line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 227
score: 99.38770693824405
patch: else { sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; }
rank: 227
score: 99.33416341145833
patch: if ( line 1 != null || include CaMeL End CaMeL Points ) {
rank: 227
score: 99.12741921164773
patch: if ( line 1 . get CaMeL Length ( ) == line 1 . get CaMeL Length ( ) ) {
rank: 227
score: 98.83925083705357
patch: if ( line 1 != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == null )
rank: 227
score: 98.67259385850694
patch: / * / * * / / /
rank: 227
score: 98.07144504123264
patch: / / / / final / / compute
rank: 228
score: 99.40745785361842
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Space ( ) ;
rank: 228
score: 99.38746800915948
patch: Region line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 228
score: 99.34851752387152
patch: URL line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 228
score: 99.33413516773896
patch: return line 1 . intersection ( line $NUMBER$ . get CaMeL Hyperplane ( ) ) ;
rank: 228
score: 99.12703804347827
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) != 0 ) {
rank: 228
score: 98.83903672960069
patch: List line $NUMBER$ = ( List ) sub CaMeL Line . get CaMeL Parent ( ) ;
rank: 228
score: 98.67244262695313
patch: / * * / * * / / /
rank: 228
score: 98.35218811035156
patch: if ( intersection == null ) {
rank: 228
score: 98.070068359375
patch: / / / / = / /
rank: 229
score: 99.40665929457721
patch: Location line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 229
score: 99.34848201976104
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . intersection ( null ) ;
rank: 229
score: 99.334033203125
patch: for ( Sub CaMeL Line sub CaMeL Line : sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 229
score: 99.12552218967014
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) != - 1 ) {
rank: 229
score: 98.83900210731908
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == - 1 ) {
rank: 229
score: 98.6708251953125
patch: / * * / * / * / /
rank: 229
score: 98.35176225142045
patch: if / * / / * / / * /
rank: 229
score: 98.0692138671875
patch: / / / throw / / / compute
rank: 230
score: 99.45841710707721
patch: loc $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 230
score: 99.38733331088362
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line ) ;
rank: 230
score: 99.34835379464286
patch: Line line $NUMBER$ = ( Region ) get CaMeL Hyperplane ( ) ;
rank: 230
score: 99.33392578125
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) . size ( ) > 0 )
rank: 230
score: 99.12495561079545
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( intersection . get CaMeL Line CaMeL Number ( ) ) ;
rank: 230
score: 98.83865017361111
patch: if ( intersection == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / *
rank: 230
score: 98.66989968039773
patch: / * * * * * / / * /
rank: 230
score: 98.35120738636364
patch: if ( intersection ) { if ( intersection ) {
rank: 230
score: 98.06901719835069
patch: / / / / / / int line
rank: 231
score: 99.40619860197368
patch: Line line 1 $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 231
score: 99.38731032151442
patch: Line get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 231
score: 99.34835012335526
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . . get CaMeL Hyperplane ( ) ;
rank: 231
score: 99.33386682581019
patch: if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points && include CaMeL End CaMeL Points || include CaMeL End CaMeL Points )
rank: 231
score: 99.12483723958333
patch: if ( line 1 . get CaMeL Line ( ) == line $NUMBER$ . get CaMeL Line ( ) )
rank: 231
score: 98.83835963199013
patch: if ( line 1 != null && line $NUMBER$ . get CaMeL Length ( ) > 0 )
rank: 231
score: 98.66933371803977
patch: / * / * / / * * / /
rank: 231
score: 98.35105202414773
patch: if ( intersection / / * / intersection ) {
rank: 231
score: 98.06891547309027
patch: / / System / / / / compute
rank: 232
score: 99.40422973632812
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ;
rank: 232
score: 99.38692921605603
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Sub CaMeL Space ( ) ) ;
rank: 232
score: 99.34784256784539
patch: if ( include CaMeL End CaMeL Points ) return line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 232
score: 99.3336893717448
patch: / * if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points || include CaMeL End CaMeL Points ) {
rank: 232
score: 99.124755859375
patch: if ( line 1 . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) / /
rank: 232
score: 98.83831787109375
patch: double [ ] intersection = new double [ intersection . size ( ) ] ;
rank: 232
score: 98.66816850142045
patch: / * * / * * / / * /
rank: 232
score: 98.35020141601562
patch: if ( intersection ) { } / * /
rank: 232
score: 98.06888834635417
patch: / / { / compute
rank: 233
score: 99.45815641983695
patch: return ( ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ) . intersection ( line $NUMBER$ ) ;
rank: 233
score: 99.38687133789062
patch: Line line $NUMBER$ = line 1 . get CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 233
score: 99.34762234157986
patch: Date line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 233
score: 99.3333740234375
patch: Row line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 233
score: 99.12298583984375
patch: if ( line $NUMBER$ . get CaMeL Name ( ) . equals ( line 1 . get CaMeL Name ( ) ) )
rank: 233
score: 98.83809988839286
patch: if ( line $NUMBER$ != null && line 1 . get CaMeL Line CaMeL Number ( ) > 0 )
rank: 233
score: 98.6678799715909
patch: / * / / / / / / / compute
rank: 233
score: 98.349609375
patch: if ( intersection , intersection ) { / * /
rank: 233
score: 98.06826443142361
patch: / / return / / / / /
rank: 234
score: 99.45757649739583
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space (
rank: 234
score: 99.40380096435547
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Line 1 ( ) ;
rank: 234
score: 99.38642035590277
patch: Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 234
score: 99.33320886948529
patch: column $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 234
score: 99.12236938476562
patch: if ( line 1 . to CaMeL String ( ) . starts CaMeL With ( $STRING$ ) / /
rank: 234
score: 98.83798014322916
patch: byte [ ] intersection = new byte [ line 1 . length ] ;
rank: 234
score: 98.66755814985795
patch: / * / * * * * / * /
rank: 234
score: 98.34953169389205
patch: if ( intersection ) { intersection / * * /
rank: 234
score: 98.06812201605902
patch: / / / / / / else compute
rank: 235
score: 99.45751953125
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) + sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 235
score: 99.40352783203124
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$
rank: 235
score: 99.38548229586694
patch: Sub CaMeL Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 235
score: 99.34731038411458
patch: Line break $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 235
score: 99.3328628540039
patch: return line 1 . intersection ( get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 235
score: 99.1221211751302
patch: if ( line 1 . get CaMeL Name ( ) . equals ( $STRING$ line 1 . get CaMeL Name ( ) )
rank: 235
score: 98.83757581208882
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( intersection ) / * / ) {
rank: 235
score: 98.66736450195313
patch: / * * * * * / / /
rank: 235
score: 98.06757269965277
patch: return / / / / / / compute
rank: 236
score: 99.45726799242425
patch: final boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 236
score: 99.38543146306819
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 236
score: 99.34681532118056
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Bytes ( ) ;
rank: 236
score: 99.33280888310185
patch: this . include CaMeL End CaMeL Points = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( $STRING$ ) ;
rank: 236
score: 99.12173063858695
patch: if ( line 1 . get CaMeL Location ( ) . equals ( line $NUMBER$ . get CaMeL Location ( ) )
rank: 236
score: 98.83724172491776
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( line $NUMBER$ . / $NUMBER$ / $NUMBER$ )
rank: 236
score: 98.66719193892045
patch: / * / int / * / / / /
rank: 236
score: 98.34848854758523
patch: if ( intersection ( intersection ) || intersection ) {
rank: 236
score: 98.06756591796875
patch: / / / / = / / /
rank: 237
score: 99.40309244791666
patch: Line line $NUMBER$ 1 = line 1 . intersection ( line 1 ) ;
rank: 237
score: 99.3852959994612
patch: Line - $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 237
score: 99.34625922309027
patch: Line line $NUMBER$ = ( Number ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 237
score: 99.33255208333334
patch: if ( line 1 == null && include CaMeL End CaMeL Points ) {
rank: 237
score: 99.12035071331522
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . equals ( intersection . get CaMeL Location ( ) ) )
rank: 237
score: 98.83722245065789
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) >= line $NUMBER$ / $NUMBER$ )
rank: 237
score: 98.66510564630681
patch: / * / * * * * / / /
rank: 237
score: 98.34786648220486
patch: / * / System . / / /
rank: 237
score: 98.06732177734375
patch: / / / if / / / /
rank: 238
score: 99.45701090494792
patch: sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 238
score: 99.4024658203125
patch: / * int line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 238
score: 99.34604317801339
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL
rank: 238
score: 99.33251953125
patch: try { return line 1 . intersection ( line $NUMBER$ ) ;
rank: 238
score: 99.11961829144022
patch: if ( line 1 . get CaMeL Line ( ) . equals ( intersection . get CaMeL Line ( ) ) )
rank: 238
score: 98.83704291449652
patch: if ( intersection . size ( intersection . size ( ) - 1 ) == 0 )
rank: 238
score: 98.6648837002841
patch: / * * / * / / * / /
rank: 238
score: 98.34737396240234
patch: / / * / * / /
rank: 238
score: 98.067138671875
patch: { / { / / / / /
rank: 239
score: 99.45699055989583
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 239
score: 99.402099609375
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( line $NUMBER$ ) ;
rank: 239
score: 99.3844463641827
patch: = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 239
score: 99.34590418198529
patch: if ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) != null ) {
rank: 239
score: 99.33174133300781
patch: if ( sub CaMeL Line != null && include CaMeL End CaMeL Points ) {
rank: 239
score: 99.11907958984375
patch: if ( line $NUMBER$ . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) / /
rank: 239
score: 98.83607177734375
patch: Array CaMeL List < Line > intersection = new Array CaMeL List < intersection . size ( ) ;
rank: 239
score: 98.6640625
patch: / * / int * / / / / /
rank: 239
score: 98.34689767020089
patch: / / * * * /
rank: 239
score: 98.06546020507812
patch: / / / / / / *
rank: 240
score: 99.38390692349138
patch: Object line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 240
score: 99.34569594439338
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) == null ) {
rank: 240
score: 99.33165394176136
patch: this . intersection = line 1 . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 240
score: 99.1186767578125
patch: if ( line $NUMBER$ . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 240
score: 98.8355712890625
patch: final String [ ] intersection = new String [ $NUMBER$ ] ;
rank: 240
score: 98.66365966796874
patch: / * / / / int * * /
rank: 240
score: 98.34605407714844
patch: try { / * / * /
rank: 240
score: 98.06487274169922
patch: / / / throw / / /
rank: 241
score: 99.4567009420956
patch: return ( ( Line ) sub CaMeL Line ) . intersection ( line $NUMBER$ ) ;
rank: 241
score: 99.40206298828124
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) . intersection ( line 1 ) ;
rank: 241
score: 99.38374467329545
patch: final Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 241
score: 99.34564887152777
patch: Line line $NUMBER$ = ( Short ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 241
score: 99.33147834329044
patch: int include CaMeL End CaMeL Points = line 1 . get CaMeL Hyperplane ( ) ;
rank: 241
score: 99.11864217122395
patch: if ( line 1 . get CaMeL Line ( ) . equals ( line 1 . get CaMeL Line ( ) / /
rank: 241
score: 98.83554222470238
patch: if ( line 1 != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == 0 )
rank: 241
score: 98.6621826171875
patch: / * * / / * * / /
rank: 241
score: 98.34576970880681
patch: if ( intersection ( intersection ) / case * /
rank: 241
score: 98.06466674804688
patch: / if / / / / /
rank: 242
score: 99.40189208984376
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( )
rank: 242
score: 99.38370768229167
patch: final Sub CaMeL Line sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 242
score: 99.32973410866477
patch: this . line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ;
rank: 242
score: 99.11858258928571
patch: if ( line 1 . get CaMeL Offset ( ) < line 1 . get CaMeL Offset ( ) )
rank: 242
score: 98.83544921875
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) >= line 1 . / $NUMBER$ )
rank: 242
score: 98.662109375
patch: / * / / * / / / / compute
rank: 242
score: 98.34483642578125
patch: if ( intersection ( intersection ) / * compute
rank: 242
score: 98.06441921657986
patch: return / { / / / / /
rank: 243
score: 99.45561872209821
patch: loc $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 243
score: 99.40138003700658
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) / *
rank: 243
score: 99.1177090731534
patch: if ( line 1 . get CaMeL Line ( ) == line $NUMBER$ . get CaMeL Line ( ) ) {
rank: 243
score: 98.83525534237133
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == null ) {
rank: 243
score: 98.66193181818181
patch: / * / * / / / * / /
rank: 243
score: 98.34424438476563
patch: / * / / / / / * /
rank: 243
score: 98.06431070963542
patch: / / final / /
rank: 244
score: 99.45548502604167
patch: Line line $NUMBER$ = ( Line ) get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 244
score: 99.40133056640624
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; try {
rank: 244
score: 99.38346354166667
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) ) ;
rank: 244
score: 99.32903693704044
patch: if ( include CaMeL End CaMeL Points && ! include CaMeL End CaMeL Points ) {
rank: 244
score: 99.11659934303977
patch: if ( line 1 . get CaMeL Length ( ) <= line 1 . get CaMeL Length ( ) ) {
rank: 244
score: 98.83474731445312
patch: Object [ ] intersection = new Object [ intersection . length * $NUMBER$ ] ;
rank: 244
score: 98.66181776258681
patch: / * / / int * / /
rank: 244
score: 98.34405517578125
patch: / / * / /
rank: 244
score: 98.06409454345703
patch: / / final / / / compute
rank: 245
score: 99.455078125
patch: line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 245
score: 99.38340435606061
patch: final int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 245
score: 99.34311252170139
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . intersection ( $STRING$ ) ;
rank: 245
score: 99.32900766225961
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) . size ( ) > 0 ) {
rank: 245
score: 99.11538696289062
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( / *
rank: 245
score: 98.83463541666667
patch: int size = line 1 . get CaMeL Length ( ) / $NUMBER$ ;
rank: 245
score: 98.6597900390625
patch: / / int } / / / / / /
rank: 245
score: 98.34384155273438
patch: / * * * * / * / /
rank: 245
score: 98.06403266059027
patch: / / try / / / / /
rank: 246
score: 99.45445760091145
patch: Line line $NUMBER$ = line $NUMBER$ . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 246
score: 99.40080823396382
patch: Line line 1 = ( Line ) line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 246
score: 99.3426284790039
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . length ( ) ;
rank: 246
score: 99.32822487571023
patch: this . include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( line $NUMBER$ ) ;
rank: 246
score: 98.83458187705592
patch: byte [ ] intersection = new byte [ line 1 . get CaMeL Length ( ) ] ;
rank: 246
score: 98.65744850852273
patch: / * * / / / * / / /
rank: 246
score: 98.3426180752841
patch: / * * / } / / / * /
rank: 246
score: 98.06400553385417
patch: / / / try / / / /
rank: 247
score: 99.4543212890625
patch: Line line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 247
score: 99.38316243489584
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 247
score: 99.3419189453125
patch: int line $NUMBER$ = ( String ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 247
score: 99.32805524553571
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Length ( ) > 0 )
rank: 247
score: 99.113525390625
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < 0 ) {
rank: 247
score: 98.83450137867646
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) != null )
rank: 247
score: 98.65621337890624
patch: / * * / / / * / /
rank: 247
score: 98.34239850725446
patch: System . / * * /
rank: 247
score: 98.06336127387152
patch: / / log / / / / compute
rank: 248
score: 99.4538330078125
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ) {
rank: 248
score: 99.4002197265625
patch: Line line 1 = ( Sub CaMeL Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 248
score: 99.38258155616555
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 248
score: 99.34178402549342
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ;
rank: 248
score: 99.32779043692129
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) ; if ( include CaMeL End CaMeL Points )
rank: 248
score: 99.11300659179688
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < line 1 . get CaMeL Line CaMeL Number ( )
rank: 248
score: 98.8343864889706
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == null )
rank: 248
score: 98.65607244318181
patch: / * / / / / / } / /
rank: 248
score: 98.34180450439453
patch: / / * * * / /
rank: 248
score: 98.06302218967014
patch: / / / / / / / {
rank: 249
score: 99.4535546875
patch: Line line $NUMBER$ = ( Line ) get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 249
score: 99.39898071289062
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get (
rank: 249
score: 99.34139811197916
patch: final Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 249
score: 99.32654918323864
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Length ( ) > 0 ) {
rank: 249
score: 99.11089797247024
patch: if ( line 1 . get CaMeL Length ( ) > line $NUMBER$ . get CaMeL Length ( ) )
rank: 249
score: 98.83399200439453
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < 0 )
rank: 249
score: 98.65573952414773
patch: / * / int / / * / / /
rank: 249
score: 98.34129749644886
patch: if / * / * / / / * /
rank: 249
score: 98.06192355685764
patch: / / { / / / / *
rank: 250
score: 99.38182751885776
patch: Object line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 250
score: 99.34093560112848
patch: Line out 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 250
score: 99.3265380859375
patch: for ( Line line 1 : sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 250
score: 99.1103515625
patch: if ( line 1 . get CaMeL Line ( ) . equals ( intersection . get CaMeL Line ( ) / /
rank: 250
score: 98.83343505859375
patch: byte [ ] intersection = new byte [ line 1 . / $NUMBER$ ] ;
rank: 250
score: 98.65450439453124
patch: / * / / / int / / /
rank: 250
score: 98.34110804966518
patch: / * / * * /
rank: 250
score: 98.06171332465277
patch: / / / int / / / /
rank: 251
score: 99.39812873391544
patch: Line line $NUMBER$ 1 = line 1 . get CaMeL Remaining CaMeL Region ( ) ;
rank: 251
score: 99.38171780493951
patch: Line line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 251
score: 99.3408203125
patch: line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 251
score: 99.32622736150569
patch: this . line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ;
rank: 251
score: 99.10972528872283
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) == 0 ) {
rank: 251
score: 98.83339146205357
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < intersection . size ( ) / /
rank: 251
score: 98.65382603236607
patch: / * * / / /
rank: 251
score: 98.34104225852273
patch: if / * * * / * / * /
rank: 251
score: 98.06121826171875
patch: / / } / / /
rank: 252
score: 99.45181169181035
patch: final boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 252
score: 99.3975830078125
patch: Object line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 252
score: 99.34065515854779
patch: if ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) == null )
rank: 252
score: 99.325634765625
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) { if ( include CaMeL End CaMeL Points ) {
rank: 252
score: 99.10936215049342
patch: if ( line 1 . get CaMeL Line ( ) . length ( ) > 0 ) {
rank: 252
score: 98.83334350585938
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == null / * / )
rank: 252
score: 98.65376112196181
patch: / * / int * / / /
rank: 252
score: 98.34084250710227
patch: if ( intersection ) { final / / * /
rank: 252
score: 98.06002807617188
patch: / / int / / / compute
rank: 253
score: 99.38084457859848
patch: boolean include CaMeL End CaMeL Points = line 1 . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 253
score: 99.34059544613487
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . check CaMeL Point ( $STRING$ ) ;
rank: 253
score: 99.32546657986111
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) { return sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 253
score: 99.1090799967448
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( / /
rank: 253
score: 98.83319854736328
patch: if ( / * intersection . is CaMeL Empty ( ) * / ) {
rank: 253
score: 98.65346457741477
patch: / * / / / / / * * /
rank: 253
score: 98.34047629616477
patch: if / * * * / * / } /
rank: 253
score: 98.05990261501736
patch: / / break / / / / /
rank: 254
score: 99.45091663707386
patch: final boolean include CaMeL End CaMeL Points = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 254
score: 99.39703979492188
patch: final Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 254
score: 99.37971125422297
patch: = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 254
score: 99.34041555304276
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane 1 ( ) ;
rank: 254
score: 99.32545823317308
patch: this . sub CaMeL Line = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( $STRING$ ) ;
rank: 254
score: 99.1087062669837
patch: if ( line 1 . get CaMeL Line ( ) . equals ( line $NUMBER$ . get CaMeL Line ( ) )
rank: 254
score: 98.83291286892361
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) >= line $NUMBER$ / /
rank: 254
score: 98.65336470170455
patch: / * / * / * / * / /
rank: 254
score: 98.05961100260417
patch: / / / / / * / compute
rank: 255
score: 99.39534719366776
patch: final int line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 255
score: 99.37964771412037
patch: boolean include CaMeL End CaMeL Points = line $NUMBER$ . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 255
score: 99.34004720052083
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Node ( ) ;
rank: 255
score: 99.32518627025463
patch: this . include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( $STRING$ ) ;
rank: 255
score: 99.10745675223214
patch: if ( line 1 . get CaMeL Type ( ) == line 1 . get CaMeL Type ( ) )
rank: 255
score: 98.83228975183823
patch: intersection ( intersection ( line $NUMBER$ , include CaMeL End CaMeL Points ) / * /
rank: 255
score: 98.65221058238636
patch: / * / / / int * / } /
rank: 255
score: 98.34009898792614
patch: if / * / / / * / * /
rank: 255
score: 98.05762481689453
patch: / / if / / / /
rank: 256
score: 99.45062255859375
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 256
score: 99.39532470703125
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ )
rank: 256
score: 99.37949070785984
patch: int include CaMeL End CaMeL Points $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 256
score: 99.33974095394737
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . intersection ( line 1 ) ;
rank: 256
score: 99.32493082682292
patch: int line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 256
score: 99.10709281589673
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Line CaMeL Number ( ) > 0 ) {
rank: 256
score: 98.83204481336806
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == - 1 / /
rank: 256
score: 98.65181107954545
patch: / * / * / / / * * /
rank: 256
score: 98.33986990792411
patch: / * / * / }
rank: 256
score: 98.0572738647461
patch: / / / / boolean / /
rank: 257
score: 99.39501342773437
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Sub CaMeL Space ( )
rank: 257
score: 99.37944103422619
patch: Object line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 257
score: 99.33970811631944
patch: Line max $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 257
score: 99.3247578938802
patch: this . line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 257
score: 99.10539106889205
patch: if ( line 1 . get CaMeL Type ( ) == line 1 . get CaMeL Type ( ) ) {
rank: 257
score: 98.83197021484375
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( line 1 . / $NUMBER$ ) ;
rank: 257
score: 98.65144486860795
patch: / * / / / int / / / compute
rank: 257
score: 98.33902316623264
patch: if / * * * * * /
rank: 257
score: 98.05719672309027
patch: / / / char / / / /
rank: 258
score: 99.39495849609375
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . to CaMeL
rank: 258
score: 99.3396240234375
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line [ 0 ] ;
rank: 258
score: 99.32425059442934
patch: if ( include CaMeL End CaMeL Points && line 1 . get CaMeL Remaining CaMeL Region ( ) != null ) {
rank: 258
score: 99.10526706861413
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . starts CaMeL With ( $STRING$ ) / / {
rank: 258
score: 98.831787109375
patch: if ( line 1 == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 258
score: 98.6512451171875
patch: / * / int * * * /
rank: 258
score: 98.33887828480114
patch: if ( intersection / * / / / * /
rank: 258
score: 98.05670844184027
patch: / / if / / / / compute
rank: 259
score: 99.44950226814517
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Remaining CaMeL Region ( )
rank: 259
score: 99.37861965013587
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( line $NUMBER$ ) ;
rank: 259
score: 99.33869086371527
patch: if ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) == null ) {
rank: 259
score: 99.3232421875
patch: return sub CaMeL Line . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 259
score: 99.10474694293478
patch: if ( line 1 . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) / / {
rank: 259
score: 98.83174641927083
patch: int [ ] intersection = new int [ 1 ] ;
rank: 259
score: 98.65092329545455
patch: / * * / / * * / / /
rank: 259
score: 98.05641004774306
patch: / if / / / / / compute
rank: 260
score: 99.44939630681819
patch: line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 260
score: 99.37822661528716
patch: Line get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 260
score: 99.3382568359375
patch: if ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) != null )
rank: 260
score: 99.3231670673077
patch: this . include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( ) ;
rank: 260
score: 99.10380222486413
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 260
score: 98.83154296875
patch: if ( line $NUMBER$ != null && line $NUMBER$ . get CaMeL Length ( ) == 0 )
rank: 260
score: 98.6509033203125
patch: / * / / * * / * /
rank: 260
score: 98.05626085069444
patch: / / boolean intersection = / / /
rank: 261
score: 99.39458907277961
patch: Line line $NUMBER$ 1 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 261
score: 99.37822614397321
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ,
rank: 261
score: 99.33820258246527
patch: I line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 261
score: 99.32292829241071
patch: if ( line 1 != null && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 261
score: 99.10323486328124
patch: if ( line 1 . get CaMeL Location ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 261
score: 98.83137730189732
patch: Line [ ] intersection = new Line [ intersection . length ] ;
rank: 261
score: 98.65015758167614
patch: / * / / * * / int * /
rank: 261
score: 98.33726917613636
patch: if ( intersection ) { intersection = / * /
rank: 261
score: 98.05598958333333
patch: / / / / / / } compute
rank: 262
score: 99.44908650716145
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 262
score: 99.39359966077302
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) == null
rank: 262
score: 99.378173828125
patch: Element line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 262
score: 99.32283782958984
patch: return intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 262
score: 99.10272575827206
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) > 0 ) {
rank: 262
score: 98.83136858258929
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) >= line 1 . / $NUMBER$ ) {
rank: 262
score: 98.33723588423295
patch: try { intersection ( intersection ( intersection ( intersection )
rank: 262
score: 98.05519104003906
patch: / / try / / / /
rank: 263
score: 99.4488013482863
patch: return ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 263
score: 99.3935546875
patch: final Region line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 263
score: 99.37810124577703
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 263
score: 99.33754368832237
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) 1 ;
rank: 263
score: 99.3226953125
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . length > 0 )
rank: 263
score: 99.10256958007812
patch: if ( line 1 . get CaMeL Location ( ) . equals ( intersection . get CaMeL Location ( ) ) / /
rank: 263
score: 98.8312255859375
patch: Array CaMeL List < Line > intersection = new Array CaMeL List < Line > ( intersection ) ;
rank: 263
score: 98.64989124644886
patch: / * * / * * * / * /
rank: 263
score: 98.3358866373698
patch: / / * * /
rank: 263
score: 98.05498504638672
patch: / / { / { / /
rank: 264
score: 99.4486773947011
patch: if ( line 1 . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ) {
rank: 264
score: 99.3364193564967
patch: Object line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . intersection ( line 1 ) ;
rank: 264
score: 99.32250072337963
patch: this . line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 264
score: 99.1025634765625
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( $STRING$ ) ) {
rank: 264
score: 98.83106994628906
patch: if ( intersection . is CaMeL Empty ( ) ) { / * / /
rank: 264
score: 98.64972478693181
patch: / ? / int / / / / / /
rank: 264
score: 98.33543565538194
patch: / * * * * / } /
rank: 264
score: 98.05411783854167
patch: / / / { /
rank: 265
score: 99.44851888020834
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 265
score: 99.3931396484375
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection (
rank: 265
score: 99.33580186631944
patch: Line line $NUMBER$ = ( Line ) this . get CaMeL Remaining CaMeL Region ( ) ;
rank: 265
score: 99.3224346454327
patch: if ( this . include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) != null ) {
rank: 265
score: 99.1023661295573
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) . get CaMeL Location ( line 1
rank: 265
score: 98.83095974392361
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != - 1 ) {
rank: 265
score: 98.6484375
patch: / * / int * * /
rank: 265
score: 98.33472357855902
patch: / * / } / / * /
rank: 265
score: 98.05379909939236
patch: / / / / / / / this
rank: 266
score: 99.37735648777173
patch: Sub CaMeL Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 266
score: 99.3218994140625
patch: this . intersection = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 266
score: 99.10165405273438
patch: if ( line $NUMBER$ . get CaMeL Line ( ) . equals ( line 1 . get CaMeL Line ( ) ) )
rank: 266
score: 98.83086751302083
patch: if ( intersection . size ( ) == 0 ) { / * /
rank: 266
score: 98.6477938565341
patch: / * * / / / int * * /
rank: 266
score: 98.33416748046875
patch: / * * * * / * /
rank: 266
score: 98.05366516113281
patch: / / / / / / boolean
rank: 267
score: 99.39302825927734
patch: Line line 1 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 267
score: 99.32157817639802
patch: / * / if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 267
score: 99.10162674753289
patch: if ( line 1 . get CaMeL Location ( ) . length ( ) > 0 ) {
rank: 267
score: 98.83073594835069
patch: if ( line 1 . get CaMeL Line CaMeL Number ( line $NUMBER$ ) / $NUMBER$ )
rank: 267
score: 98.64774169921876
patch: / * * / / / int * /
rank: 267
score: 98.33405095880681
patch: / * * * / final / / * /
rank: 267
score: 98.05341339111328
patch: / / / * / / /
rank: 268
score: 99.44773267663044
patch: String line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 268
score: 99.39281412760417
patch: Line line $NUMBER$ 1 = line 1 . get CaMeL Hyperplane ( ) ;
rank: 268
score: 99.37693189538044
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 268
score: 99.33362579345703
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . size ( ) ;
rank: 268
score: 99.321533203125
patch: if ( include CaMeL End CaMeL Points ) { if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL
rank: 268
score: 99.09906364889706
patch: if ( line 1 . compare CaMeL To ( line 1 ) < 0 ) {
rank: 268
score: 98.83064778645833
patch: if ( line $NUMBER$ != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < 0 )
rank: 268
score: 98.64768676757812
patch: / * * / * * / * /
rank: 268
score: 98.33403930664062
patch: if ( intersection ) { break / * /
rank: 268
score: 98.05269949776786
patch: / { / / / compute
rank: 269
score: 99.44753793569711
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ) {
rank: 269
score: 99.37674713134766
patch: Line line $NUMBER$ = line 1 . check CaMeL Point ( line $NUMBER$ ) ;
rank: 269
score: 99.33350287543402
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . to CaMeL Space ( ) ;
rank: 269
score: 99.32073974609375
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . include CaMeL End CaMeL Points ) {
rank: 269
score: 99.0984523607337
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) <= 0 ) {
rank: 269
score: 98.83055877685547
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) <= 0 )
rank: 269
score: 98.64768288352273
patch: / * * / / / / * / /
rank: 269
score: 98.33383178710938
patch: if / * * / * /
rank: 269
score: 98.05072699652777
patch: / / int intersection . / / /
rank: 270
score: 99.44731987847223
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 270
score: 99.3922119140625
patch: Line line $NUMBER$ = ( Line ) line $NUMBER$ . get CaMeL Line ( ) ;
rank: 270
score: 99.37662760416667
patch: short line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 270
score: 99.33342827690973
patch: Line line $NUMBER$ = ( Boolean ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 270
score: 99.32072618272569
patch: Integer line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 270
score: 99.09788818359375
patch: if ( line $NUMBER$ . to CaMeL String ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 270
score: 98.83029174804688
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != null ) { / * /
rank: 270
score: 98.64689497514205
patch: / * / int * / / / * /
rank: 270
score: 98.33331976996527
patch: if / * * * * / /
rank: 270
score: 98.0500259399414
patch: / / / / * / compute
rank: 271
score: 99.44709546638258
patch: long line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 271
score: 99.391162109375
patch: Region line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 271
score: 99.37635904947916
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( 0 ) ) ;
rank: 271
score: 99.33333333333333
patch: Node line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 271
score: 99.32066278872283
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( ) ;
rank: 271
score: 99.09758194633152
patch: if ( line $NUMBER$ . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) > 0 ) {
rank: 271
score: 98.83003162202381
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) != null / * / ) {
rank: 271
score: 98.64509721235795
patch: / * / * * * / * * /
rank: 271
score: 98.3332852450284
patch: if ( intersection ) { ) { / * /
rank: 271
score: 98.04991997612848
patch: / / / / try / / compute
rank: 272
score: 99.44673084077381
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 272
score: 99.33305528428819
patch: Line 1 = ( Line 1 ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 272
score: 99.320478515625
patch: this . sub CaMeL Line = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( ) ;
rank: 272
score: 99.09694505774456
patch: if ( line $NUMBER$ . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) < 0 ) {
rank: 272
score: 98.82991536458333
patch: Object [ ] intersection = new Object [ 0 ] ;
rank: 272
score: 98.6440096768466
patch: / * * / * / * * / /
rank: 272
score: 98.33255343967014
patch: if ( intersection ) { intersection * /
rank: 272
score: 98.0489013671875
patch: int / / /
rank: 273
score: 99.44657759232955
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 273
score: 99.39064427425987
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( )
rank: 273
score: 99.33289292279412
patch: Line line $NUMBER$ = ( Line 1 ) get CaMeL Remaining CaMeL Region ( ) ;
rank: 273
score: 99.32033284505208
patch: return get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 273
score: 99.09566066576087
patch: if ( line 1 . get CaMeL Location ( ) . equals ( this . get CaMeL Location ( ) / /
rank: 273
score: 98.82989860983456
patch: byte [ ] intersection = new byte [ line $NUMBER$ . size ( ) ] ;
rank: 273
score: 98.64382102272727
patch: / * / * * / * * / /
rank: 273
score: 98.33224487304688
patch: / * / / / * /
rank: 273
score: 98.04862467447917
patch: } / / { / / / /
rank: 274
score: 99.44649621212122
patch: Line line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 274
score: 99.3761215209961
patch: Line line $NUMBER$ = line 1 . get CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 274
score: 99.33289252387152
patch: if ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) != null ) {
rank: 274
score: 99.31913248697917
patch: if ( include CaMeL End CaMeL Points ) { if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 274
score: 99.09554390285327
patch: if ( line 1 . get CaMeL Name ( ) . equals ( this . get CaMeL Name ( ) ) )
rank: 274
score: 98.82984161376953
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) > 0 )
rank: 274
score: 98.64375443892045
patch: / * / int * / } / / /
rank: 274
score: 98.33214222301136
patch: if / * * / / / / * /
rank: 274
score: 98.04637315538194
patch: / / { / / / * compute
rank: 275
score: 99.44647894965277
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ) ;
rank: 275
score: 99.37604166666667
patch: final Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 275
score: 99.33279579564145
patch: Line line $NUMBER$ = intersection ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 275
score: 99.3186786358173
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . length > 0 ) {
rank: 275
score: 99.09522646949405
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Location ( ) != null ) {
rank: 275
score: 98.82976331208882
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == intersection / * / )
rank: 275
score: 98.6433438387784
patch: / * / int / / / / / /
rank: 275
score: 98.33144309303977
patch: / / * / } / / / * /
rank: 275
score: 98.04544067382812
patch: / int / / /
rank: 276
score: 99.3900390625
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; / /
rank: 276
score: 99.37591083233173
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 276
score: 99.31820678710938
patch: this . sub CaMeL Line = line 1 . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 276
score: 98.829248046875
patch: if ( intersection . is CaMeL Empty ( ) ) { / * /
rank: 276
score: 98.6415682705966
patch: / * / int * * / int * /
rank: 276
score: 98.33123779296875
patch: else { / * / * /
rank: 276
score: 98.04528045654297
patch: / / / / / int intersection
rank: 277
score: 99.44623674665179
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Hyperplane ( ) ;
rank: 277
score: 99.38986687911184
patch: Line - line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 277
score: 99.3758877840909
patch: ( ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ) . intersection ( line $NUMBER$ ) ;
rank: 277
score: 99.33108520507812
patch: Line line $NUMBER$ = ( Line ) null ;
rank: 277
score: 99.31788271949405
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) . is CaMeL Empty ( ) ) {
rank: 277
score: 99.09475840692934
patch: if ( line 1 . get CaMeL Line ( ) != line 1 . get CaMeL Line CaMeL Number ( ) )
rank: 277
score: 98.82915182674633
patch: int [ ] intersection = new int [ line $NUMBER$ . size ( ) ] ;
rank: 277
score: 98.6412353515625
patch: / * / / int * /
rank: 277
score: 98.33077392578124
patch: if / * * * / * * /
rank: 277
score: 98.04500906808036
patch: infinite / { / / /
rank: 278
score: 99.44610040838069
patch: / / check CaMeL Point line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 278
score: 99.38980102539062
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( line 1 ) ;
rank: 278
score: 99.37584867931548
patch: Object line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 278
score: 99.33043670654297
patch: Line sub CaMeL Line = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 278
score: 99.3173828125
patch: if ( include CaMeL End CaMeL Points && line 1 . get CaMeL Hyperplane ( ) ) {
rank: 278
score: 99.09436753216912
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) != 0 ) {
rank: 278
score: 98.8291015625
patch: if ( intersection == null ) { / * / /
rank: 278
score: 98.64016384548611
patch: / * / int * / * /
rank: 278
score: 98.330517578125
patch: / * / System . / / / /
rank: 278
score: 98.04470825195312
patch: / / / try / / /
rank: 279
score: 99.44595829133064
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Space ( ) ) ;
rank: 279
score: 99.38968234592014
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . intersection ( line 1 )
rank: 279
score: 99.37558419363839
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) )
rank: 279
score: 99.32998860677084
patch: Line line $NUMBER$ = ( Line ) intersection ( sub CaMeL Line ) ;
rank: 279
score: 99.09420955882354
patch: if ( line $NUMBER$ . index CaMeL Of ( $STRING$ ) > - 1 ) {
rank: 279
score: 98.82879279641544
patch: Array CaMeL List list = new Array CaMeL List ( line 1 / $NUMBER$ ) ;
rank: 279
score: 98.63981489701705
patch: / * / int / / / / * /
rank: 279
score: 98.32966752485795
patch: intersection ( intersection ( intersection ) / / * /
rank: 279
score: 98.04451497395833
patch: / / / -- / / / /
rank: 280
score: 99.38961181640624
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ )
rank: 280
score: 99.37554408482143
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 280
score: 99.32883172286184
patch: Line line $NUMBER$ = ( Region ) line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 280
score: 99.31703814338235
patch: this . get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 280
score: 99.09310249660327
patch: if ( line 1 . get CaMeL Name ( ) . equals ( line $NUMBER$ . get CaMeL Name ( ) )
rank: 280
score: 98.8283447265625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / * line $NUMBER$ . get CaMeL Message ( )
rank: 280
score: 98.63978271484375
patch: / * / / / int * / line
rank: 280
score: 98.32803955078126
patch: / / * / / / / * /
rank: 280
score: 98.04446750217014
patch: / / / / / else / compute
rank: 281
score: 99.44559151785714
patch: return include CaMeL End CaMeL Points . intersection ( line $NUMBER$ ) ;
rank: 281
score: 99.37543402777777
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Hyperplane ( ) ) ;
rank: 281
score: 99.32863362630208
patch: Line line $NUMBER$ = ( Region ) sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 281
score: 99.31698947482639
patch: Packet line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 281
score: 99.09164089626736
patch: if ( line 1 . get CaMeL Name ( ) . equals ( $STRING$ ) / /
rank: 281
score: 98.82830810546875
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == null ) { / * /
rank: 281
score: 98.32745916193181
patch: if ( intersection ) { / / List / /
rank: 281
score: 98.04409354073661
patch: / / * / / /
rank: 282
score: 99.4455798921131
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( this ) ;
rank: 282
score: 99.38823784722223
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Id ( ) ;
rank: 282
score: 99.32819959852431
patch: try { Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( sub CaMeL Line ) ;
rank: 282
score: 99.31667193244485
patch: p 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 282
score: 99.09127674932066
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . equals ( line 1 . get CaMeL Location ( ) )
rank: 282
score: 98.82803955078126
patch: if ( line $NUMBER$ == null ) { throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 282
score: 98.63871626420455
patch: / * * / / * / / * /
rank: 282
score: 98.32713734019886
patch: / * / / { / / / * /
rank: 282
score: 98.04337855747768
patch: / / else / / /
rank: 283
score: 99.44532470703125
patch: return sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 283
score: 99.38814697265624
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) - 1 ;
rank: 283
score: 99.32814654181985
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) != null ) {
rank: 283
score: 99.31659613715277
patch: Label line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 283
score: 99.09068231997283
patch: if ( line 1 . starts CaMeL With ( $STRING$ ) || line 1 . starts CaMeL With ( $STRING$ ) )
rank: 283
score: 98.82779733758224
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( intersection ) / * / / /
rank: 283
score: 98.32708129882812
patch: / * / System . / * * /
rank: 283
score: 98.04296112060547
patch: / / } / / / /
rank: 284
score: 99.44530232747395
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 284
score: 99.3878662109375
patch: Line line $NUMBER$ 1 = ( Line 1 ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 284
score: 99.37396484375
patch: boolean include CaMeL End CaMeL Points = line 1 . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 284
score: 99.31638746995192
patch: this . sub CaMeL Line = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 ) ;
rank: 284
score: 99.09027777777777
patch: switch ( line 1 . get CaMeL Line CaMeL Number ( ) ) { case 0 :
rank: 284
score: 98.82744284237133
patch: final int [ ] intersection = new int [ intersection . length / $NUMBER$ ] ;
rank: 284
score: 98.637744140625
patch: / * / / int * / / /
rank: 284
score: 98.32636108398438
patch: if ( intersection ) { for / * /
rank: 284
score: 98.04214816623264
patch: / / / / return / / /
rank: 285
score: 99.38750610351562
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . class ;
rank: 285
score: 99.37389026988636
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) : sub CaMeL Line ;
rank: 285
score: 99.32762145996094
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . trim ( ) ;
rank: 285
score: 99.31575520833333
patch: if ( this . include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 285
score: 99.08976606889205
patch: if ( line 1 . length > line 1 . length line $NUMBER$ . length line $NUMBER$ . length ) {
rank: 285
score: 98.82725306919643
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / * line $NUMBER$ . get CaMeL Message ( ) ,
rank: 285
score: 98.6373291015625
patch: / * * * * / / /
rank: 285
score: 98.32558371803977
patch: if ( intersection ) { final / * / /
rank: 285
score: 98.04190402560764
patch: LOG / / / / / / /
rank: 286
score: 99.44504616477273
patch: Line line $NUMBER$ += sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 286
score: 99.37375139508929
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 286
score: 99.32740614149306
patch: Path line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 286
score: 99.31571138822116
patch: this . include CaMeL End CaMeL Points = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( ) ;
rank: 286
score: 99.08976236979167
patch: if ( line 1 . to CaMeL String ( ) . starts CaMeL With ( $STRING$ ) / / {
rank: 286
score: 98.82709503173828
patch: byte [ ] intersection = new byte [ line $NUMBER$ . / $NUMBER$ ] ;
rank: 286
score: 98.63709106445313
patch: / * / * * * / / /
rank: 286
score: 98.32520640980114
patch: if ( intersection ( intersection ( intersection ( intersection (
rank: 286
score: 98.04181586371527
patch: / / { / / / compute CaMeL
rank: 287
score: 99.44477900752315
patch: final boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ;
rank: 287
score: 99.38712565104167
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) [
rank: 287
score: 99.37374441964286
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 287
score: 99.32679748535156
patch: if ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) == 0 )
rank: 287
score: 99.31561957465277
patch: int include CaMeL End CaMeL Points = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 287
score: 99.08955463610198
patch: if ( line 1 . get CaMeL Name ( ) . length ( ) > 0 ) {
rank: 287
score: 98.82671760110294
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > - 1 )
rank: 287
score: 98.63605291193181
patch: / * / / / / int / * /
rank: 287
score: 98.32286919487848
patch: / * * * * * * /
rank: 287
score: 98.04137420654297
patch: / / / / / * compute
rank: 288
score: 99.4446688565341
patch: String line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 288
score: 99.38680869654605
patch: Object line 1 = get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 288
score: 99.37353515625
patch: Line line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 288
score: 99.32624897203948
patch: try { Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 288
score: 99.31555989583333
patch: if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points )
rank: 288
score: 99.089013671875
patch: if ( line 1 . get CaMeL Location ( ) . starts CaMeL With ( $STRING$ ) / /
rank: 288
score: 98.82671508789062
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / * line 1 . get CaMeL Message ( )
rank: 288
score: 98.6358309659091
patch: / * / / * / * * * /
rank: 288
score: 98.3227206143466
patch: / / int intersection = intersection / / * /
rank: 288
score: 98.03799099392361
patch: / / / / ? / / /
rank: 289
score: 99.44438171386719
patch: if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ) {
rank: 289
score: 99.38680691189236
patch: Line line 1 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 289
score: 99.32467490748355
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) . size ( ) > 0 )
rank: 289
score: 99.31551419771634
patch: this . include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . intersection ( line 1 ) ;
rank: 289
score: 99.08777386209239
patch: if ( line 1 . starts CaMeL With ( $STRING$ ) || line $NUMBER$ . starts CaMeL With ( $STRING$ ) )
rank: 289
score: 98.82644653320312
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > 0 ) { / * /
rank: 289
score: 98.63507634943181
patch: / / char / / / / / / /
rank: 289
score: 98.32218794389205
patch: / * / else { / * / * /
rank: 289
score: 98.03797743055556
patch: / / { / { / / compute
rank: 290
score: 99.44407552083334
patch: loc 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 290
score: 99.37340914818549
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( )
rank: 290
score: 99.32423909505208
patch: Line line $NUMBER$ = ( Line ) get CaMeL Remaining CaMeL Region ( line $NUMBER$ ) ;
rank: 290
score: 99.31508608217592
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . is CaMeL Empty ( ) )
rank: 290
score: 99.08371151194854
patch: if ( line 1 . compare CaMeL To ( line $NUMBER$ ) < 0 ) {
rank: 290
score: 98.82615033318015
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == 0 )
rank: 290
score: 98.6347323330966
patch: / * / * * / / * / /
rank: 290
score: 98.3218994140625
patch: if / / / / / / / / /
rank: 290
score: 98.03761121961806
patch: / / / / / throw / /
rank: 291
score: 99.4440166766827
patch: Line line $NUMBER$ = ( Line ) this . sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 291
score: 99.38666848575367
patch: Line line 1 = sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) ;
rank: 291
score: 99.3730827780331
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 291
score: 99.32294921875
patch: Object line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 291
score: 99.08272058823529
patch: switch ( line 1 . get CaMeL Location ( ) ) { case - 1 :
rank: 291
score: 98.8261486235119
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + line 1 . get CaMeL Message ( ) / *
rank: 291
score: 98.6338778409091
patch: / * / / / * int * / /
rank: 291
score: 98.31879216974431
patch: if / / * / / / / * /
rank: 291
score: 98.03709581163194
patch: * / / / / / / /
rank: 292
score: 99.44358228600544
patch: loc 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 292
score: 99.38656005859374
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . start ;
rank: 292
score: 99.37291124131944
patch: int include CaMeL End CaMeL Points = line 1 . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 292
score: 99.3228400735294
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . intersection ( 0 ) ;
rank: 292
score: 99.31481352306548
patch: if ( include CaMeL End CaMeL Points && line 1 . to CaMeL Sub CaMeL Space ( ) ) {
rank: 292
score: 99.08225504557292
patch: if ( line $NUMBER$ . get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 292
score: 98.82607550370066
patch: if ( line 1 != null && line 1 . get CaMeL Length ( ) > 0 )
rank: 292
score: 98.63331187855114
patch: / * * / / / int * / line
rank: 292
score: 98.31746215820313
patch: if / * / / / * / }
rank: 292
score: 98.03668212890625
patch: / * / / / / compute
rank: 293
score: 99.443505859375
patch: Line line $NUMBER$ += sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 293
score: 99.38615112304687
patch: String line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 293
score: 99.37249966325432
patch: sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 293
score: 99.32239487591912
patch: if ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) != null )
rank: 293
score: 99.31446422230114
patch: this . line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 293
score: 99.08221726190476
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . starts CaMeL With ( $STRING$ ) )
rank: 293
score: 98.82555389404297
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != 0 )
rank: 293
score: 98.63267933238636
patch: / / / System . / / / / /
rank: 293
score: 98.31691284179688
patch: / * / } / / * / /
rank: 293
score: 98.03599330357143
patch: logger / / / / /
rank: 294
score: 99.37202962239583
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( 0 ) ) ;
rank: 294
score: 99.08124542236328
patch: switch ( line 1 . get CaMeL Offset ( ) ) { case 0 :
rank: 294
score: 98.8254753561581
patch: Array CaMeL List list = new Array CaMeL List ( line $NUMBER$ / $NUMBER$ ) ;
rank: 294
score: 98.6326016512784
patch: / * / * / / / int * /
rank: 294
score: 98.31559614701705
patch: if / / ? / / / / / /
rank: 294
score: 98.03589630126953
patch: intersection / { / / / compute
rank: 295
score: 99.44332570043103
patch: if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ;
rank: 295
score: 99.38552856445312
patch: line $NUMBER$ . intersection ( line $NUMBER$ . intersection ( line $NUMBER$ ) ) ;
rank: 295
score: 99.37145182291667
patch: Line get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line ) ;
rank: 295
score: 99.31426323784723
patch: this . include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Sub CaMeL Space ( ) ;
rank: 295
score: 99.08123779296875
patch: if ( line 1 . length > line 1 . length line $NUMBER$ . length ) {
rank: 295
score: 98.82529994419643
patch: if ( line 1 != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) <= 0 )
rank: 295
score: 98.63097034801136
patch: / * * / / / / int * /
rank: 295
score: 98.3141860961914
patch: if ( intersection ) / * /
rank: 295
score: 98.03548177083333
patch: public / / / /
rank: 296
score: 99.4432705965909
patch: Line line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 296
score: 99.38540167557566
patch: sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 296
score: 99.31407165527344
patch: this . sub CaMeL Line = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 296
score: 99.08056030273437
patch: if ( line $NUMBER$ . to CaMeL String ( ) . starts CaMeL With ( $STRING$ ) / /
rank: 296
score: 98.82527883429276
patch: if ( line $NUMBER$ != null && line $NUMBER$ . get CaMeL Line ( ) != null )
rank: 296
score: 98.630859375
patch: / * * / * * /
rank: 296
score: 98.31401715959821
patch: / / * / * /
rank: 296
score: 98.03502061631944
patch: / / / / if / / /
rank: 297
score: 99.44297438401442
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 297
score: 99.38522338867188
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; System .
rank: 297
score: 99.3711438301282
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( sub CaMeL Line ) ) ;
rank: 297
score: 99.321044921875
patch: Line sub CaMeL Line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 297
score: 99.31390739889706
patch: return line 1 . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 297
score: 99.08053152901786
patch: if ( line 1 . to CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 297
score: 98.82524557674633
patch: if ( intersection ( line $NUMBER$ , include CaMeL End CaMeL Points ) / * /
rank: 297
score: 98.63064236111111
patch: / * / * * / * /
rank: 297
score: 98.03461371527777
patch: / < / / / / / /
rank: 298
score: 99.44293767755681
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 298
score: 99.37069631177326
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 298
score: 99.32094855057566
patch: Line line $NUMBER$ = sub CaMeL Line . to CaMeL Sub CaMeL Space ( line $NUMBER$ ) ;
rank: 298
score: 99.31374193274456
patch: if ( include CaMeL End CaMeL Points ) { return sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 298
score: 99.08024327895221
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < 0 ) {
rank: 298
score: 98.82505170036765
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) > 0 )
rank: 298
score: 98.63051535866477
patch: / * * * * * / * * /
rank: 298
score: 98.31231134588069
patch: / / * / { / / / * /
rank: 298
score: 98.03416612413194
patch: / { / / { / / /
rank: 299
score: 99.44276751893939
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 299
score: 99.38517038445724
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ )
rank: 299
score: 99.37059759324596
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( )
rank: 299
score: 99.32071261935764
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Segments ( ) ;
rank: 299
score: 99.313623046875
patch: double line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 299
score: 99.08017449629934
patch: if ( line 1 . get CaMeL Line ( ) . size ( ) > 0 ) {
rank: 299
score: 98.82471865699405
patch: if ( line 1 != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != 0 )
rank: 299
score: 98.63004557291667
patch: / * / * / * * /
rank: 299
score: 98.31215598366477
patch: if ( intersection ( intersection ) / * * compute
rank: 299
score: 98.03390502929688
patch: infinite / / /
rank: 300
score: 99.44271414620536
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 300
score: 99.38432760799633
patch: Line line $NUMBER$ = get CaMeL Hyperplane ( ) . intersection ( line 1 ) ;
rank: 300
score: 99.37056361607142
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line ) ) ;
rank: 300
score: 99.32063293457031
patch: if ( line 1 == null )
rank: 300
score: 99.3135296365489
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL
rank: 300
score: 99.0798572358631
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Length ( ) == 0 ) {
rank: 300
score: 98.8244384765625
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( line 1 . / $NUMBER$ / $NUMBER$ ) ;
rank: 300
score: 98.6295166015625
patch: / * * / / / * / * /
rank: 300
score: 98.3106201171875
patch: / / * * * / * / /
rank: 300
score: 98.03364393446181
patch: / / / / System / / compute
rank: 301
score: 99.44266550164474
patch: / / line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 301
score: 99.38411865234374
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) - $NUMBER$ ;
rank: 301
score: 99.37044852120536
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . to CaMeL Sub CaMeL Space ( line $NUMBER$ ) ;
rank: 301
score: 99.31328986672794
patch: c $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 301
score: 99.07955322265624
patch: if ( line 1 . get CaMeL Line ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 301
score: 98.82396240234375
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) != null / * / )
rank: 301
score: 98.6283846768466
patch: / * / / * / int * / /
rank: 301
score: 98.3099365234375
patch: / / * * * * /
rank: 301
score: 98.03364393446181
patch: if / * / / / / /
rank: 302
score: 99.44264914772727
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get ( ) ;
rank: 302
score: 99.37020874023438
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; else {
rank: 302
score: 99.3199462890625
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) != null )
rank: 302
score: 99.31320425180289
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Location ( ) ;
rank: 302
score: 99.07913368626645
patch: if ( line 1 . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) )
rank: 302
score: 98.82392713758681
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line 1 ) / $NUMBER$ )
rank: 302
score: 98.62837357954545
patch: / * / / / / } / / /
rank: 302
score: 98.3089599609375
patch: / * / else { / * /
rank: 302
score: 98.03324890136719
patch: / / int intersection = / /
rank: 303
score: 99.44254032258064
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 303
score: 99.38362426757813
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( sub CaMeL Line , sub CaMeL Line ) ;
rank: 303
score: 99.369873046875
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 303
score: 99.31844753689236
patch: if ( line $NUMBER$ == null ) {
rank: 303
score: 99.31308815696023
patch: return line 1 . intersection ( line 1 ) ;
rank: 303
score: 98.82379557291667
patch: if ( intersection == null || intersection . size ( ) == 0 )
rank: 303
score: 98.62776322798295
patch: / * / / * / int * * /
rank: 303
score: 98.30870361328125
patch: if ( intersection / / / * / /
rank: 303
score: 98.03214518229167
patch: / / / / int / / compute
rank: 304
score: 99.4424249057112
patch: long line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 304
score: 99.36961059570312
patch: final Line sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 304
score: 99.31803813733552
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . }
rank: 304
score: 99.07505170036765
patch: switch ( line 1 . get CaMeL Line ( ) ) { case - 1 :
rank: 304
score: 98.82351202713816
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == null / * / )
rank: 304
score: 98.62684215198864
patch: / * / / / int / * * /
rank: 304
score: 98.30842895507813
patch: / * * / } / / * /
rank: 304
score: 98.03129577636719
patch: intersection / * / / / /
rank: 305
score: 99.36935860770089
patch: Line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 305
score: 99.31698947482639
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Priority ( ) ;
rank: 305
score: 99.31292724609375
patch: if ( include CaMeL End CaMeL Points || sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) != null ) {
rank: 305
score: 99.07406761532738
patch: if ( line $NUMBER$ . get CaMeL Line ( ) . get CaMeL Length ( ) > 0 ) {
rank: 305
score: 98.82295227050781
patch: Object [ ] intersection = new Object [ line 1 . / $NUMBER$ ] ;
rank: 305
score: 98.62677612304688
patch: / * / / * / int * /
rank: 305
score: 98.30772399902344
patch: / * / * / * /
rank: 305
score: 98.03077528211806
patch: / / } / / / / compute
rank: 306
score: 99.44232940673828
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Remaining CaMeL Region ( ) ;
rank: 306
score: 99.3834587545956
patch: Line line 1 = ( Line ) line $NUMBER$ . get CaMeL Hyperplane ( ) ;
rank: 306
score: 99.3693359375
patch: = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line ) ;
rank: 306
score: 99.31669398716518
patch: Line line 1 = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 306
score: 99.31284360532408
patch: if ( include CaMeL End CaMeL Points ) { include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) ; }
rank: 306
score: 99.07255284926471
patch: if ( line 1 . index CaMeL Of ( $STRING$ ) > - 1 ) {
rank: 306
score: 98.8228530883789
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ / * line $NUMBER$ / /
rank: 306
score: 98.62623180042614
patch: / * * / / / / * * /
rank: 306
score: 98.30674743652344
patch: if / * * / } /
rank: 306
score: 98.02932400173611
patch: / / char / / / / compute
rank: 307
score: 99.44228108723958
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ; / * /
rank: 307
score: 99.38318634033203
patch: Line line $NUMBER$ = get CaMeL Line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 307
score: 99.36916588092673
patch: String line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 307
score: 99.31584167480469
patch: if ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) == $STRING$ )
rank: 307
score: 99.31125806725544
patch: if ( include CaMeL End CaMeL Points || sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) == null )
rank: 307
score: 99.07229953342014
patch: if ( line 1 . size ( ) > line 1 . size ( ) ) {
rank: 307
score: 98.82283782958984
patch: if ( intersection ( line $NUMBER$ , include CaMeL End CaMeL Points ) ) {
rank: 307
score: 98.62565474076705
patch: / * / * / * / / * /
rank: 307
score: 98.30662318638393
patch: if / * / * /
rank: 307
score: 98.02898491753473
patch: / / / / / } / compute
rank: 308
score: 99.44224105342742
patch: loc 1 = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 308
score: 99.36912434895834
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , ) ;
rank: 308
score: 99.31103515625
patch: int line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 308
score: 99.07184801603618
patch: if ( line 1 . get CaMeL Line ( ) . equals ( line 1 ) ) {
rank: 308
score: 98.82273356119792
patch: if ( intersection == null || line $NUMBER$ == null )
rank: 308
score: 98.62473366477273
patch: / * / / / / int * / intersection
rank: 308
score: 98.305908203125
patch: if ( intersection ( intersection ) )
rank: 308
score: 98.02871365017361
patch: / / / System / / / compute
rank: 309
score: 99.44178873697916
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 309
score: 99.38295384457237
patch: Line line $NUMBER$ = line 1 . intersection ( get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 309
score: 99.31510162353516
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get ( ) ;
rank: 309
score: 99.31080040564903
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) instanceof Sub CaMeL Line ) {
rank: 309
score: 99.07157175164474
patch: if ( line 1 . get CaMeL Location ( ) . equals ( line 1 ) ) {
rank: 309
score: 98.82268415178571
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + line 1 . get CaMeL Line ( ) / /
rank: 309
score: 98.62349076704545
patch: / * / int * / / * / /
rank: 309
score: 98.3057861328125
patch: / * / System . / * / /
rank: 309
score: 98.02825927734375
patch: / throw / / / / /
rank: 310
score: 99.4417140794837
patch: Line line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 310
score: 99.36908721923828
patch: Line line $NUMBER$ = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 310
score: 99.31032081886575
patch: if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points || include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 310
score: 99.07151884191177
patch: if ( line 1 . trim ( ) . length ( ) > 0 ) {
rank: 310
score: 98.8226318359375
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == 0 ) { / * /
rank: 310
score: 98.62300248579545
patch: / * / / / * * / / compute
rank: 310
score: 98.30439453125
patch: if / * / / / * * /
rank: 310
score: 98.02768283420139
patch: / / / * / / / compute
rank: 311
score: 99.441494140625
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . ;
rank: 311
score: 99.3822509765625
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 )
rank: 311
score: 99.3690673828125
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 311
score: 99.31482805524554
patch: Line line $NUMBER$ = ( Line ) intersection ( line $NUMBER$ ) ;
rank: 311
score: 99.3102496603261
patch: / * if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 311
score: 99.07050115411931
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) < 0 )
rank: 311
score: 98.82259328741776
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( intersection . size ( ) / $NUMBER$ )
rank: 311
score: 98.62287055121527
patch: / / * / / * / /
rank: 311
score: 98.30362374441964
patch: / * * / * /
rank: 311
score: 98.02766927083333
patch: / System / / / / / /
rank: 312
score: 99.44134521484375
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line ( ) . get CaMeL Hyperplane ( ) ;
rank: 312
score: 99.38221499794408
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) != null
rank: 312
score: 99.3689930050872
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 312
score: 99.3148193359375
patch: if ( line 1 != null )
rank: 312
score: 99.31015805844908
patch: this . line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 312
score: 99.07031860351563
patch: if ( line 1 . get CaMeL Location ( ) . ends CaMeL With ( $STRING$ ) ) {
rank: 312
score: 98.82245836759868
patch: byte [ ] intersection = new byte [ line $NUMBER$ . get CaMeL Length ( ) ] ;
rank: 312
score: 98.62224578857422
patch: / * / / * * /
rank: 312
score: 98.302294921875
patch: / * / } / / / * /
rank: 312
score: 98.02729143415179
patch: / / / / / System
rank: 313
score: 99.44114467075893
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Remaining CaMeL Region ( ) ;
rank: 313
score: 99.38210720486111
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) :
rank: 313
score: 99.368916015625
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . sub CaMeL Line ) ;
rank: 313
score: 99.3098895733173
patch: this . include CaMeL End CaMeL Points = line 1 . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 313
score: 99.06915838068181
patch: if ( line 1 . length > line $NUMBER$ . length line $NUMBER$ . length line $NUMBER$ . length ) {
rank: 313
score: 98.82223690257354
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ / * line 1 / / /
rank: 313
score: 98.62122691761364
patch: / * / * / * * / * /
rank: 313
score: 98.30155639648437
patch: if / * * * * * / /
rank: 313
score: 98.02711995442708
patch: / throw / / / / / compute
rank: 314
score: 99.38210720486111
patch: line 1 . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 314
score: 99.31456801470588
patch: if ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) == 0 ) {
rank: 314
score: 99.30971116286058
patch: this . sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ;
rank: 314
score: 99.06901411576705
patch: if ( line 1 . length == line 1 . length line $NUMBER$ . length line $NUMBER$ . length ) {
rank: 314
score: 98.82112943209134
patch: int size = line 1 . get CaMeL Size ( ) ;
rank: 314
score: 98.62033913352273
patch: / * / / / int * * / line
rank: 314
score: 98.3014404296875
patch: if ( this . intersection != null ) {
rank: 314
score: 98.02664184570312
patch: / / / / {
rank: 315
score: 99.440673828125
patch: Line line $NUMBER$ = ( Line ) this . sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 315
score: 99.36865234375
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 315
score: 99.31406656901042
patch: Line line 1 = ( Line ) sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 315
score: 99.30958984375
patch: this . line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 315
score: 99.06890578497024
patch: switch ( line 1 . get CaMeL Type ( ) line $NUMBER$ . get CaMeL Type ( ) / /
rank: 315
score: 98.82075427827381
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ / * line $NUMBER$ . get CaMeL Message ( ) )
rank: 315
score: 98.61995849609374
patch: / * / / / * / * /
rank: 315
score: 98.30036078559027
patch: if ( intersection ) return / * /
rank: 315
score: 98.02590942382812
patch: / / / / / int /
rank: 316
score: 99.38173828125
patch: sub CaMeL Line 1 = ( Line ) sub CaMeL Line 1 . get CaMeL Hyperplane ( ) ;
rank: 316
score: 99.36848667689732
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 316
score: 99.31336263020833
patch: Line line $NUMBER$ = ( Line 1 . get CaMeL Hyperplane ( ) ;
rank: 316
score: 99.30935329861111
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) . get CaMeL Hyperplane ( ) ;
rank: 316
score: 99.06796409970238
patch: if ( line $NUMBER$ . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) / / {
rank: 316
score: 98.82065943667763
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > 0 / * / )
rank: 316
score: 98.619873046875
patch: / * * / * * * /
rank: 316
score: 98.30028686523437
patch: if / * / * / / * /
rank: 316
score: 98.0245361328125
patch: / / case / / / / /
rank: 317
score: 99.44051920572916
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ;
rank: 317
score: 99.3815982216283
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( ) ;
rank: 317
score: 99.3128726356908
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Property ( $STRING$ ) ;
rank: 317
score: 99.30875338040866
patch: return intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 317
score: 99.06774184283088
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > 0 ) {
rank: 317
score: 98.8205333891369
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == 0 / * / ) {
rank: 317
score: 98.61972878196023
patch: / * / int / * / * / /
rank: 317
score: 98.30006917317708
patch: / / * / / / * /
rank: 318
score: 99.44022914341518
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 318
score: 99.38146362304687
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) / $NUMBER$ ;
rank: 318
score: 99.36837768554688
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 318
score: 99.31259494357639
patch: Line line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( line $NUMBER$ ) ;
rank: 318
score: 98.82050916883681
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection / $NUMBER$ )
rank: 318
score: 98.6196621981534
patch: / / / int * / / / / /
rank: 318
score: 98.29981994628906
patch: / * * * * / }
rank: 318
score: 98.0230712890625
patch: / / { / / / / System
rank: 319
score: 99.43998500279018
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 319
score: 99.38127055921052
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) / $NUMBER$
rank: 319
score: 99.36837005615234
patch: Line line $NUMBER$ = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 319
score: 99.31251284950658
patch: if ( line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 319
score: 99.30862192007211
patch: return intersection ( line 1 . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 319
score: 99.0670498934659
patch: if ( line 1 . get CaMeL Line ( ) != line 1 . get CaMeL Line ( ) / /
rank: 319
score: 98.8200619346217
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) >= line $NUMBER$ / / /
rank: 319
score: 98.61956232244319
patch: / * / / / / int * / }
rank: 319
score: 98.29943237304687
patch: if / * / / / * / /
rank: 319
score: 98.02286783854167
patch: Iterator / / / / / / /
rank: 320
score: 99.43995620265152
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Sub CaMeL Space ( ) ) ;
rank: 320
score: 99.38077799479167
patch: Line line $NUMBER$ = ( Line ) line $NUMBER$ . to CaMeL Sub CaMeL Space ( )
rank: 320
score: 99.36835710392442
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 320
score: 99.31234305245536
patch: final Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 320
score: 99.30826416015626
patch: if ( line 1 != null && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 320
score: 99.06668429904514
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) > - 1 ) {
rank: 320
score: 98.81967308407738
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection . size ( ) / /
rank: 320
score: 98.61916281960227
patch: / * / / / int } / / /
rank: 320
score: 98.29905192057292
patch: / * / else / / * /
rank: 320
score: 98.02204241071429
patch: / / / / int intersection
rank: 321
score: 99.31220446134868
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; try
rank: 321
score: 99.30821010044643
patch: if ( line 1 != null && include CaMeL End CaMeL Points )
rank: 321
score: 99.06653941761364
patch: if ( line 1 . length < line 1 . length line $NUMBER$ . length line $NUMBER$ . length ) {
rank: 321
score: 98.81944274902344
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / * line 1 / /
rank: 321
score: 98.29872436523438
patch: if ( intersection / / / / / compute
rank: 321
score: 98.0219955444336
patch: } / { / / / /
rank: 322
score: 99.43956409801136
patch: loc 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 322
score: 99.31092664930556
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL End ( ) ;
rank: 322
score: 99.3081563313802
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) { if ( include CaMeL End CaMeL Points )
rank: 322
score: 99.06555786132813
patch: if ( line 1 . get CaMeL Location ( ) . ends CaMeL With ( $STRING$ ) / /
rank: 322
score: 98.81932875689338
patch: boolean is CaMeL Empty = line 1 . is CaMeL Empty ( ) / $NUMBER$ ;
rank: 322
score: 98.61853637695313
patch: / * / * * / * / /
rank: 322
score: 98.29852294921875
patch: if / * / * / /
rank: 322
score: 98.02182345920139
patch: assert / / / / / / /
rank: 323
score: 99.38011410361842
patch: Line - 1 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 323
score: 99.36754557291667
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ; }
rank: 323
score: 99.3081387606534
patch: this . line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 323
score: 99.06313907398896
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) <= 0 ) {
rank: 323
score: 98.81916155133929
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == intersection / * / / /
rank: 323
score: 98.61836381392045
patch: / * / / / * * * * /
rank: 323
score: 98.29808213975694
patch: try { / * / * / /
rank: 323
score: 98.02173614501953
patch: return / / / / / /
rank: 324
score: 99.3799560546875
patch: String line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) ;
rank: 324
score: 99.36738855698529
patch: = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 324
score: 99.3104248046875
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Package ( ) ;
rank: 324
score: 99.3078946200284
patch: this . line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 324
score: 99.06264038085938
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . starts CaMeL With ( $STRING$ ) ) {
rank: 324
score: 98.81903839111328
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == null )
rank: 324
score: 98.61745383522727
patch: / * / / int / / * / /
rank: 324
score: 98.2978515625
patch: if ( intersection , intersection ) {
rank: 324
score: 98.02084011501736
patch: / / / / / / int intersection
rank: 325
score: 99.37955729166667
patch: Location line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line ( ) ;
rank: 325
score: 99.36715382543103
patch: int intersection $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 325
score: 99.3099136352539
patch: if ( line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 325
score: 99.3074367357337
patch: this . sub CaMeL Line = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( ) ;
rank: 325
score: 99.06256975446429
patch: if ( line 1 . get CaMeL Location ( ) . get CaMeL Location ( ) != null ) {
rank: 325
score: 98.8185302734375
patch: if ( intersection . is CaMeL Empty ( ) / * / ) {
rank: 325
score: 98.61732313368056
patch: / * / / int * * /
rank: 325
score: 98.29769897460938
patch: final Array CaMeL List / * /
rank: 325
score: 98.02024623325893
patch: } / / / / /
rank: 326
score: 99.438232421875
patch: if ( include CaMeL End CaMeL Points ) { line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 326
score: 99.37862820095486
patch: Line line $NUMBER$ = get CaMeL Line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 326
score: 99.36706912878788
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Sub CaMeL Space ( ) ) ;
rank: 326
score: 99.30921846277573
patch: if ( line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 326
score: 99.06212797619048
patch: if ( line 1 . get CaMeL Location ( ) . starts CaMeL With ( $STRING$ ) / / {
rank: 326
score: 98.81847426470588
patch: if ( intersection != null && line 1 . is CaMeL Empty ( ) ) {
rank: 326
score: 98.6171875
patch: / * / / / / * * * /
rank: 326
score: 98.29745483398438
patch: if / * / / / / / }
rank: 326
score: 98.0193862915039
patch: / / * / / / compute
rank: 327
score: 99.43819173177083
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Hyperplane ( ) ) ;
rank: 327
score: 99.36706090856481
patch: sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 327
score: 99.3084716796875
patch: Object line $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 327
score: 99.3072265625
patch: this . intersection = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 327
score: 99.06193033854167
patch: if ( line 1 . get CaMeL Location ( ) . ends CaMeL With ( $STRING$ ) / / {
rank: 327
score: 98.81799994574652
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < intersection . length )
rank: 327
score: 98.6171875
patch: / * * * / * * * / /
rank: 327
score: 98.29741821289062
patch: / / * / / / * / /
rank: 327
score: 98.01906331380208
patch: / / / return / / / /
rank: 328
score: 99.4380215731534
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ;
rank: 328
score: 99.37832802220395
patch: Line line 1 = ( Line ) sub CaMeL Line ) . get CaMeL Hyperplane ( ) ;
rank: 328
score: 99.36647191540948
patch: short line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 328
score: 99.30841742621527
patch: if ( line 1 == null ) {
rank: 328
score: 99.30715603298611
patch: float line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 328
score: 99.0616814108456
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == 0 ) {
rank: 328
score: 98.81756882440476
patch: if ( line 1 != null && line 1 . get CaMeL Line CaMeL Number ( ) == 0 )
rank: 328
score: 98.61663263494319
patch: / / int / / / / / / compute
rank: 328
score: 98.29485405815973
patch: if ( intersection ) { * * /
rank: 328
score: 98.01790364583333
patch: / / / / / / / float
rank: 329
score: 99.37806460731908
patch: Line line $NUMBER$ = ( Line ) get CaMeL Line ( ) . get CaMeL Hyperplane ( )
rank: 329
score: 99.36635228207237
patch: Line get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 329
score: 99.30755293996711
patch: if ( line $NUMBER$ != null + line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) )
rank: 329
score: 99.30684407552083
patch: / * if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 329
score: 98.81736924913194
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line $NUMBER$ ) != null )
rank: 329
score: 98.6166104403409
patch: / * / / * * / / / *
rank: 329
score: 98.29479370117187
patch: / * / try { / * / /
rank: 329
score: 98.01742214626736
patch: / / try / / / / compute
rank: 330
score: 99.43771362304688
patch: return include CaMeL End CaMeL Points . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 330
score: 99.365498046875
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line , line $NUMBER$ ) ;
rank: 330
score: 99.30699920654297
patch: Line line $NUMBER$ = ( Region ) get CaMeL Remaining CaMeL Region ( ) ;
rank: 330
score: 99.30666632401316
patch: if ( include CaMeL End CaMeL Points && line 1 . intersection ( line $NUMBER$ ) ) {
rank: 330
score: 99.0610710592831
patch: if ( line 1 . get CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 330
score: 98.81729736328126
patch: if ( intersection . is CaMeL Empty ( ) / * && intersection . is CaMeL Empty ( )
rank: 330
score: 98.61626519097223
patch: / * / / / int / /
rank: 330
score: 98.294482421875
patch: if ( intersection / * / / / /
rank: 330
score: 98.01741245814732
patch: / / / / try /
rank: 331
score: 99.43746609157986
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 331
score: 99.37750854492188
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; / *
rank: 331
score: 99.30666097005208
patch: if ( include CaMeL End CaMeL Points ) { Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 331
score: 99.06099018297698
patch: if ( line $NUMBER$ . get CaMeL Line ( ) . length ( ) > 0 ) {
rank: 331
score: 98.81727359169408
patch: if ( line $NUMBER$ == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / *
rank: 331
score: 98.61602228338069
patch: / * / * * / / / * /
rank: 331
score: 98.29381646050348
patch: if / * / / / / }
rank: 331
score: 98.01683213975694
patch: / return / / / / / /
rank: 332
score: 99.43713008996212
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ;
rank: 332
score: 99.37737426757812
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get ;
rank: 332
score: 99.30663123497597
patch: long line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space (
rank: 332
score: 99.30609893798828
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) == 0 )
rank: 332
score: 99.06048874627976
patch: if ( line 1 . get CaMeL Location ( ) . starts CaMeL With ( line 1 ) ) {
rank: 332
score: 98.81708984375
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == null / * / ) {
rank: 332
score: 98.6159912109375
patch: / / * / * * * / /
rank: 332
score: 98.29311794704861
patch: if ( intersection ( intersection ) / /
rank: 332
score: 98.01645914713542
patch: / / / / / break / /
rank: 333
score: 99.37711588541667
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Line ( )
rank: 333
score: 99.3653564453125
patch: sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 333
score: 99.306484375
patch: if ( include CaMeL End CaMeL Points ) { if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points ) {
rank: 333
score: 99.30601591222427
patch: try { int line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 333
score: 99.0600830078125
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( intersection . get CaMeL Line ( ) ) ;
rank: 333
score: 98.81677964154412
patch: if ( intersection != null && line $NUMBER$ . is CaMeL Empty ( intersection ) )
rank: 333
score: 98.61594460227273
patch: / * ] / / / / * / /
rank: 333
score: 98.29298231336806
patch: / * * * / * * /
rank: 333
score: 98.01641845703125
patch: / public / / / / / /
rank: 334
score: 99.4368426983173
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 334
score: 99.37617492675781
patch: Line line $NUMBER$ = get CaMeL Line 1 . get CaMeL Hyperplane ( ) ;
rank: 334
score: 99.36503191692073
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 334
score: 99.30642264229911
patch: return ( Line ) line 1 . intersection ( line $NUMBER$ ) ;
rank: 334
score: 99.30558776855469
patch: final Object line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 334
score: 99.05879350142045
patch: if ( line 1 . is CaMeL Empty ( ) || line 1 . is CaMeL Empty ( ) ) {
rank: 334
score: 98.81607216282895
patch: if ( intersection == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / *
rank: 334
score: 98.61580033735795
patch: / * / int * * / * / /
rank: 334
score: 98.291552734375
patch: if ( intersection ) { this / * /
rank: 334
score: 98.0152587890625
patch: / / / System / / /
rank: 335
score: 99.436572265625
patch: loc 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 335
score: 99.37540893554687
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1
rank: 335
score: 99.36498084435097
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 335
score: 99.30631510416667
patch: for ( final Sub CaMeL Line sub CaMeL Line : sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 335
score: 99.30490548270089
patch: / * = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 335
score: 99.05841619318181
patch: if ( line 1 . get CaMeL Location ( ) . equals ( line 1 . get CaMeL Location ( )
rank: 335
score: 98.81576683407738
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + line 1 . get CaMeL Class ( ) / *
rank: 335
score: 98.61552124023437
patch: / * * / * / / * /
rank: 335
score: 98.29146728515624
patch: / * / else / / / * /
rank: 335
score: 98.01483832465277
patch: / / / try / / / compute
rank: 336
score: 99.43633626302083
patch: if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ) {
rank: 336
score: 99.37540690104167
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) . check CaMeL Point (
rank: 336
score: 99.364892578125
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . sub CaMeL Line ) ;
rank: 336
score: 99.30620783025569
patch: if ( sub CaMeL Line != null && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 336
score: 99.30460851332721
patch: if ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) == $STRING$ ) {
rank: 336
score: 99.0570401278409
patch: / * throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ line 1 . to CaMeL String ( ) ) ;
rank: 336
score: 98.81571451822917
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < 0 / $NUMBER$ )
rank: 336
score: 98.61489035866477
patch: / / / / / / / / / /
rank: 336
score: 98.29005737304688
patch: / * * * * * / * /
rank: 336
score: 98.01474338107639
patch: long / / / / / / /
rank: 337
score: 99.43631417410714
patch: final boolean include CaMeL End CaMeL Points = line 1 . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 337
score: 99.37509155273438
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . ( )
rank: 337
score: 99.36489035866477
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 337
score: 99.30603479456019
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) . ) {
rank: 337
score: 99.30419243706598
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Dimension ( ) ;
rank: 337
score: 99.05652436755952
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Length ( ) < 0 ) {
rank: 337
score: 98.81556701660156
patch: final int [ ] intersection = new int [ intersection . / $NUMBER$ ] ;
rank: 337
score: 98.61470170454545
patch: / * / / / / int / / compute
rank: 337
score: 98.0140151977539
patch: / / double / / / /
rank: 338
score: 99.37483045789931
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Space ( ) ;
rank: 338
score: 99.36438409213362
patch: Node line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 338
score: 99.306015625
patch: if ( this . include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) != null )
rank: 338
score: 99.05640933388158
patch: if ( line 1 . get CaMeL Name ( ) . equals ( $STRING$ ) / / {
rank: 338
score: 98.81544846754808
patch: int length = line 1 . get CaMeL Length ( ) ;
rank: 338
score: 98.61435768821023
patch: / * / int / / * * / /
rank: 338
score: 98.28935411241319
patch: if / * * / / * /
rank: 338
score: 98.01341417100694
patch: / / / / / System / /
rank: 339
score: 99.37427368164063
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ,
rank: 339
score: 99.36437536168981
patch: int include CaMeL End CaMeL Points = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 339
score: 99.3059326171875
patch: this . include CaMeL End CaMeL Points = line 1 . check CaMeL Point ( line 1 ) ;
rank: 339
score: 99.30164252387152
patch: Line line $NUMBER$ = ( Line 1 ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 339
score: 99.05505981445313
patch: if ( line 1 . get CaMeL Line ( ) . starts CaMeL With ( $STRING$ ) / /
rank: 339
score: 98.81537155877976
patch: int size = line 1 . get CaMeL Size ( ) / $NUMBER$ line $NUMBER$ . size ( ) ;
rank: 339
score: 98.28709716796875
patch: / * * * * / } / /
rank: 339
score: 98.01161702473958
patch: / / / / / / / set
rank: 340
score: 99.43603515625
patch: line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 340
score: 99.36417203336148
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 340
score: 99.30551034432871
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) != null )
rank: 340
score: 99.30064290364584
patch: Node line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 340
score: 99.055029296875
patch: switch ( line 1 . get CaMeL Type ( ) line $NUMBER$ . get CaMeL Type ( ) )
rank: 340
score: 98.81526692708333
patch: int size = line 1 . get CaMeL Size ( ) line $NUMBER$ . size ( )
rank: 340
score: 98.61359197443181
patch: / * * / * / * / / /
rank: 340
score: 98.28698120117187
patch: if ( intersection ( intersection ) / / }
rank: 340
score: 98.01114908854167
patch: / / / / / / break /
rank: 341
score: 99.43601481119792
patch: final boolean include CaMeL End CaMeL Points = line 1 . get CaMeL Hyperplane ( ) ;
rank: 341
score: 99.373046875
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 341
score: 99.36382293701172
patch: final Sub CaMeL Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 341
score: 99.30539279513889
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL
rank: 341
score: 99.30015345982143
patch: Line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 341
score: 99.05467640269886
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Line CaMeL Number ( ) > 0 )
rank: 341
score: 98.814453125
patch: if ( line 1 != null && line 1 . get CaMeL Line CaMeL Number ( ) == null )
rank: 341
score: 98.61350708007812
patch: / / System . / / / / /
rank: 341
score: 98.28602600097656
patch: if / / final / * /
rank: 341
score: 98.01090785435268
patch: / / / / int /
rank: 342
score: 99.37301974826389
patch: Class line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 342
score: 99.30526029146634
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 342
score: 99.30012781479779
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . ( line 1 ) ;
rank: 342
score: 99.05430692784927
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != 0 ) {
rank: 342
score: 98.81424386160714
patch: if ( line 1 != null && line 1 . get CaMeL Line CaMeL Number ( ) != 0 )
rank: 342
score: 98.61332872178819
patch: / * * / / * * /
rank: 342
score: 98.28546142578125
patch: System . / * * / /
rank: 342
score: 98.0107930501302
patch: / / int / /
rank: 343
score: 99.37301635742188
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . line 1
rank: 343
score: 99.36376953125
patch: int line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 343
score: 99.30516415550595
patch: if ( include CaMeL End CaMeL Points ) { return sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 343
score: 99.2991943359375
patch: Line line $NUMBER$ = ( Line ) get CaMeL Line ( ) ;
rank: 343
score: 99.05333362926136
patch: if ( line 1 . length < line $NUMBER$ . length line $NUMBER$ . length line $NUMBER$ . length ) {
rank: 343
score: 98.81414184570312
patch: if ( intersection != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == 0 )
rank: 343
score: 98.61318137428977
patch: / * / / int * / * / /
rank: 343
score: 98.28519897460937
patch: if ( intersection ) { / * } /
rank: 343
score: 98.01053466796876
patch: intersection / / /
rank: 344
score: 99.43517672631049
patch: if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) )
rank: 344
score: 99.305107421875
patch: return ( ( Sub CaMeL Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ) . intersection ( line $NUMBER$ ) ;
rank: 344
score: 99.29898410373264
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . check CaMeL Point ( ) ;
rank: 344
score: 99.05247860863095
patch: if ( line 1 . contains ( line 1 . get CaMeL Line CaMeL Number ( ) ) ) {
rank: 344
score: 98.81404622395833
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) <= 0 / $NUMBER$ )
rank: 344
score: 98.6131591796875
patch: / * / int * * * / * /
rank: 344
score: 98.28446451822917
patch: / * / try { / * /
rank: 344
score: 98.01042344835069
patch: / / ? / / / / /
rank: 345
score: 99.43516474184783
patch: loc = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 345
score: 99.37262284128289
patch: Line line $NUMBER$ = ( Line ) get CaMeL Line $NUMBER$ . get CaMeL Hyperplane ( ) ;
rank: 345
score: 99.305078125
patch: for ( Line line $NUMBER$ : sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) {
rank: 345
score: 99.29869666466347
patch: Line line $NUMBER$ = ( Line ) new Line ( ) ;
rank: 345
score: 99.05230243389423
patch: if ( line 1 . size ( ) > 0 ) {
rank: 345
score: 98.81359281994048
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + line 1 . get CaMeL Class ( ) + $STRING$
rank: 345
score: 98.61311645507813
patch: / * / / * / * * /
rank: 345
score: 98.28369903564453
patch: if ( intersection / / * /
rank: 345
score: 98.01023356119792
patch: / / { / / * / /
rank: 346
score: 99.43501613451087
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ) ;
rank: 346
score: 99.3724365234375
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Line 1 ( ) ;
rank: 346
score: 99.36336576021634
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line , sub CaMeL Line ) ;
rank: 346
score: 99.304951171875
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) instanceof Sub CaMeL Line )
rank: 346
score: 99.29776436941964
patch: if ( line $NUMBER$ . get CaMeL Hyperplane ( ) == null )
rank: 346
score: 99.05166965060764
patch: if ( line 1 . length > line $NUMBER$ . length line $NUMBER$ . length ) {
rank: 346
score: 98.81355794270833
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < intersection . length / $NUMBER$ / /
rank: 346
score: 98.61284845525569
patch: / / int / / * / / / /
rank: 346
score: 98.2824462890625
patch: / * / else { / * / }
rank: 346
score: 98.01019287109375
patch: infinite / { / / / compute
rank: 347
score: 99.37232666015625
patch: Line line $NUMBER$ 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point (
rank: 347
score: 99.36311848958333
patch: Sub CaMeL Line line $NUMBER$ = ( Sub CaMeL Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 347
score: 99.30478922526042
patch: byte line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 347
score: 99.05086263020833
patch: if ( line 1 . is CaMeL Empty ( ) || line 1 . is CaMeL Empty ( ) )
rank: 347
score: 98.8133544921875
patch: if ( intersection . size ( ) > 0 ) { / * /
rank: 347
score: 98.282275390625
patch: if / * * * * / * /
rank: 347
score: 98.00936126708984
patch: / / / / / / intersection
rank: 348
score: 99.43488018329327
patch: line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 348
score: 99.36287434895833
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( sub CaMeL Line ) ) ;
rank: 348
score: 99.30461774553571
patch: if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points || include CaMeL End CaMeL Points )
rank: 348
score: 99.29667833116319
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . ( sub CaMeL Line ) ;
rank: 348
score: 99.05078803168402
patch: if ( line 1 . length ( ) > line 1 . length ( ) ) {
rank: 348
score: 98.81289833470395
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == 0 / * / )
rank: 348
score: 98.61260431463069
patch: / * / * / * / * * /
rank: 348
score: 98.28207397460938
patch: if / * * * * * / }
rank: 348
score: 98.00870090060764
patch: intersection / * / / / / compute
rank: 349
score: 99.434697265625
patch: loc 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 349
score: 99.37178548177083
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line 1 ( )
rank: 349
score: 99.3626953125
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( sub CaMeL Line ) ) ;
rank: 349
score: 99.30460611979167
patch: return ( line 1 != null ) && include CaMeL End CaMeL Points ;
rank: 349
score: 99.29625701904297
patch: Line line $NUMBER$ = ( Line 1 . get CaMeL Hyperplane ( ) ) ;
rank: 349
score: 99.04986572265625
patch: if ( line $NUMBER$ . get CaMeL Location ( ) . starts CaMeL With ( $STRING$ ) / /
rank: 349
score: 98.81283365885416
patch: if ( intersection . is CaMeL Empty ( ) ) / * / /
rank: 349
score: 98.6115389737216
patch: / * / * / / * / * /
rank: 349
score: 98.28134155273438
patch: if ( intersection ) return / * / /
rank: 349
score: 98.00849066840277
patch: / / / / / int / /
rank: 350
score: 99.43458048502605
patch: line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 350
score: 99.37095424107143
patch: Line line 1 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 350
score: 99.30456012228261
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) continue ;
rank: 350
score: 99.29579264322916
patch: if ( line $NUMBER$ . get CaMeL Hyperplane ( ) == null ) {
rank: 350
score: 99.04986281622024
patch: if ( line 1 . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) / / /
rank: 350
score: 98.81279907226562
patch: if ( intersection != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) <= 0 )
rank: 350
score: 98.61095081676136
patch: / * / int * * * / / /
rank: 350
score: 98.28104858398437
patch: / * int * * / } / /
rank: 350
score: 98.00818888346355
patch: / * / / /
rank: 351
score: 99.4345703125
patch: Line line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 351
score: 99.37076144748264
patch: String line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line ( ) ;
rank: 351
score: 99.36185302734376
patch: Sub CaMeL Line sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 351
score: 99.304462890625
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 351
score: 99.29572610294117
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) == 0 ) {
rank: 351
score: 99.04958767361111
patch: if ( line 1 . to CaMeL String ( ) . equals ( $STRING$ ) ) {
rank: 351
score: 98.81277286305146
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == 0 ) {
rank: 351
score: 98.61090087890625
patch: / * / int * / / / /
rank: 351
score: 98.2806884765625
patch: if ( intersection != null / * / /
rank: 351
score: 98.00601196289062
patch: / / byte / / / /
rank: 352
score: 99.43452962239583
patch: Line line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) : sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 352
score: 99.36175380608974
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line ) ) ;
rank: 352
score: 99.304462890625
patch: int line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 352
score: 99.29564711626838
patch: try { Line line $NUMBER$ = sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 352
score: 99.04678199404762
patch: if ( line $NUMBER$ . to CaMeL String ( ) . starts CaMeL With ( $STRING$ ) / / {
rank: 352
score: 98.81228298611111
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) >= line $NUMBER$ / /
rank: 352
score: 98.6108065518466
patch: / * / int * * / } / /
rank: 352
score: 98.27874755859375
patch: if ( intersection / / * / /
rank: 352
score: 98.0057601928711
patch: / / / / return / /
rank: 353
score: 99.43425218986742
patch: return ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 353
score: 99.37021213107639
patch: Line line $NUMBER$ 1 = ( Line ) line $NUMBER$ . get CaMeL Hyperplane ( ) ;
rank: 353
score: 99.3043212890625
patch: if ( include CaMeL End CaMeL Points && line 1 . get CaMeL Remaining CaMeL Region ( ) != null )
rank: 353
score: 99.29564711626838
patch: return line 1 . intersection ( line $NUMBER$ . intersection ( line $NUMBER$ ) ) ;
rank: 353
score: 99.04616292317708
patch: switch ( line 1 . get CaMeL Line CaMeL Number ( ) ) { case 1 :
rank: 353
score: 98.81144205729167
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + line 1 / /
rank: 353
score: 98.60936889648437
patch: / * / int * * / / /
rank: 353
score: 98.278173828125
patch: / * / else { / * / /
rank: 353
score: 98.00516510009766
patch: / / / break / / /
rank: 354
score: 99.434189453125
patch: line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 354
score: 99.36112706801471
patch: Line get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 354
score: 99.30421799879808
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 354
score: 99.29479217529297
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) == $STRING$ )
rank: 354
score: 98.81136067708333
patch: if ( intersection == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 354
score: 98.60927124023438
patch: / * * * * / / / /
rank: 354
score: 98.27787272135417
patch: / * * * / } / /
rank: 354
score: 98.00503540039062
patch: / / / / boolean
rank: 355
score: 99.43412017822266
patch: Line line 1 = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 355
score: 99.36922414679276
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) + $STRING$
rank: 355
score: 99.30392020089286
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) == ) {
rank: 355
score: 99.29469129774306
patch: if ( include CaMeL End CaMeL Points && line 1 . intersection ( line $NUMBER$ ) )
rank: 355
score: 99.044775390625
patch: if ( line 1 . get CaMeL Length ( ) > 0 ) {
rank: 355
score: 98.81123860677083
patch: if ( intersection != null ) { / * / /
rank: 355
score: 98.60890891335227
patch: / * / int / * * / / /
rank: 355
score: 98.27764892578125
patch: try { / * /
rank: 355
score: 98.00424194335938
patch: / / / else / / compute
rank: 356
score: 99.43407141644022
patch: line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 356
score: 99.36838892886513
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Line $NUMBER$ ( )
rank: 356
score: 99.36099609375
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 , sub CaMeL Line ) ;
rank: 356
score: 99.30389959161931
patch: this . include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( line 1 ) ;
rank: 356
score: 99.29468536376953
patch: Line line $NUMBER$ = ( Sub CaMeL Line ) get CaMeL Hyperplane ( ) ;
rank: 356
score: 99.04456284466912
patch: if ( line 1 . index CaMeL Of ( line 1 ) < 0 ) {
rank: 356
score: 98.81097005208333
patch: byte [ ] intersection = new byte [ line $NUMBER$ . length ] ;
rank: 356
score: 98.60882013494319
patch: / * / / * * / / / compute
rank: 356
score: 98.27638549804688
patch: if / * * * * * * /
rank: 356
score: 98.00322723388672
patch: / / / / / / {
rank: 357
score: 99.43397874098558
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ;
rank: 357
score: 99.3038330078125
patch: int line $NUMBER$ = get CaMeL Line ( ) . get CaMeL Hyperplane ( ) ;
rank: 357
score: 99.29442545572917
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) == 0 )
rank: 357
score: 99.04363141741071
patch: if ( line $NUMBER$ . get CaMeL Line ( ) . get CaMeL Location ( ) != null ) {
rank: 357
score: 98.81092593544408
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == 0 ) / * /
rank: 357
score: 98.6087979403409
patch: / * / * * / * / * /
rank: 357
score: 98.27372233072917
patch: else { / * / * / /
rank: 357
score: 98.00205775669643
patch: int / / / / compute
rank: 358
score: 99.43390089465726
patch: line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 358
score: 99.3675601356908
patch: Location line 1 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 358
score: 99.36085728236607
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 358
score: 99.3037109375
patch: this . include CaMeL End CaMeL Points = line $NUMBER$ . get CaMeL Hyperplane ( ) ;
rank: 358
score: 99.29434543185764
patch: if ( include CaMeL End CaMeL Points || line $NUMBER$ . intersection ( line $NUMBER$ ) )
rank: 358
score: 99.04350729549633
patch: if ( line $NUMBER$ . index CaMeL Of ( $STRING$ ) != - 1 ) {
rank: 358
score: 98.8109130859375
patch: final int [ ] intersection = new int [ intersection . length * $NUMBER$ ] ;
rank: 358
score: 98.6083096590909
patch: / / List / / / / / / /
rank: 358
score: 98.27334933810764
patch: / / * * * / * /
rank: 358
score: 98.0016098022461
patch: System / / / / / /
rank: 359
score: 99.43360595703125
patch: / * / line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 359
score: 99.36741236636513
patch: String line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 359
score: 98.81089274088542
patch: if ( line 1 . get CaMeL Line CaMeL Number ( line 1 ) / $NUMBER$ )
rank: 359
score: 98.60811157226563
patch: / * / * * * / * /
rank: 359
score: 98.27267456054688
patch: / * * int intersection * /
rank: 359
score: 98.00118255615234
patch: / / / / List / /
rank: 360
score: 99.43350956357759
patch: boolean include CaMeL End CaMeL Points = line 1 . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 360
score: 99.360400390625
patch: Line line 1 = sub CaMeL Line . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 360
score: 99.30347741168478
patch: if ( include CaMeL End CaMeL Points || sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) != null )
rank: 360
score: 99.29393095128677
patch: Object line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 360
score: 99.04179077148437
patch: switch ( line 1 . get CaMeL Offset ( ) line $NUMBER$ . get CaMeL Offset ( ) )
rank: 360
score: 98.81070285373264
patch: if ( intersection . is CaMeL Empty ( ) / * / ) { / * /
rank: 360
score: 98.60792846679688
patch: / * / / int * / * /
rank: 360
score: 98.27178344726562
patch: / * / System . / / / }
rank: 360
score: 97.99903869628906
patch: / / / int / / /
rank: 361
score: 99.30322265625
patch: return line 1 . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( sub CaMeL Line ) ) ;
rank: 361
score: 99.29229377297794
patch: final Line line $NUMBER$ = ( Line ) get CaMeL Remaining CaMeL Region ( ) ;
rank: 361
score: 99.03989129317434
patch: if ( line 1 == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 361
score: 98.81069464432566
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line $NUMBER$ ) / $NUMBER$ / /
rank: 361
score: 98.60783247514205
patch: / * * / * / * / * /
rank: 361
score: 98.27128295898437
patch: if / / final / / / * /
rank: 361
score: 97.99874877929688
patch: / / / / if / /
rank: 362
score: 99.43315272177419
patch: long line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 362
score: 99.36716134207589
patch: Line line $NUMBER$ = line $NUMBER$ . intersection ( line 1 ) ;
rank: 362
score: 99.30315692608173
patch: Point line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space (
rank: 362
score: 99.29188447840073
patch: try { Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( line $NUMBER$ ) ;
rank: 362
score: 99.0397590188419
patch: switch ( line 1 . get CaMeL Y ( ) ) { case - 1 :
rank: 362
score: 98.81048583984375
patch: String [ ] intersection = new String [ 0 ] ;
rank: 362
score: 98.60776095920139
patch: / * / * / / / /
rank: 362
score: 98.27119140625
patch: / / int * * / } / /
rank: 362
score: 97.99853515625
patch: / / log / / / /
rank: 363
score: 99.43300993546195
patch: long line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 363
score: 99.30284052309783
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) . length > 1 )
rank: 363
score: 99.29166906020221
patch: Line line $NUMBER$ = ( Region ) line $NUMBER$ . get CaMeL Hyperplane ( ) ;
rank: 363
score: 99.03949938322368
patch: if ( line 1 . get CaMeL Name ( ) . length ( ) == 0 ) {
rank: 363
score: 98.81036376953125
patch: if ( intersection . is CaMeL Empty ( ) ) { return / * /
rank: 363
score: 98.6075439453125
patch: / * / * / * * / /
rank: 363
score: 98.27086639404297
patch: / * / final / * /
rank: 363
score: 97.99831717354911
patch: / / / / final /
rank: 364
score: 99.43288702713816
patch: Line line $NUMBER$ = new Line ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 364
score: 99.35919189453125
patch: int line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 364
score: 99.30276254507211
patch: Point line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 364
score: 99.29161783854167
patch: if ( include CaMeL End CaMeL Points && line $NUMBER$ != null ) {
rank: 364
score: 99.03925238715277
patch: if ( line 1 . length == line 1 . length line $NUMBER$ . length ) {
rank: 364
score: 98.81008572048611
patch: if ( intersection ( line $NUMBER$ , include CaMeL End CaMeL Points ) / * / /
rank: 364
score: 98.6072665127841
patch: / * * / / * / / / /
rank: 364
score: 98.26998291015624
patch: if ( intersection / * / intersection ) /
rank: 364
score: 97.99809047154018
patch: / / / / / *
rank: 365
score: 99.43258231026786
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) - sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 365
score: 99.36674669053819
patch: Element line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 365
score: 99.35916453394397
patch: Line - 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 365
score: 99.30276007401316
patch: / * check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 365
score: 99.29157172309027
patch: Line line $NUMBER$ = ( Line ) line 1 . intersection ( sub CaMeL Line ) ;
rank: 365
score: 99.0389468544408
patch: if ( line 1 . equals CaMeL Ignore CaMeL Case ( line 1 / $NUMBER$ ) ) {
rank: 365
score: 98.80989583333333
patch: if ( intersection == null ) throw new Illegal CaMeL Argument CaMeL Exception ( / * /
rank: 365
score: 98.6069003018466
patch: / * / / / * / / / *
rank: 365
score: 98.26979573567708
patch: if ( intersection ) / / * /
rank: 365
score: 97.998046875
patch: / / / / / }
rank: 366
score: 99.43243815104167
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ;
rank: 366
score: 99.36644222861842
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) false ;
rank: 366
score: 99.35873046875
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ , sub CaMeL Line ) ;
rank: 366
score: 99.30228515625
patch: this . line 1 = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 366
score: 99.03786107113487
patch: if ( line 1 . get CaMeL Line CaMeL Number ( line 1 ) < 0 ) {
rank: 366
score: 98.809814453125
patch: int size = line 1 . get CaMeL Length ( ) ;
rank: 366
score: 98.60627885298295
patch: / * / int / * * * / /
rank: 366
score: 98.26791042751736
patch: synchronized ( this ) { / * /
rank: 366
score: 97.99530029296875
patch: / / void / / / /
rank: 367
score: 99.432373046875
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Length ( ) ;
rank: 367
score: 99.30220703125
patch: return line 1 . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 367
score: 99.29007975260417
patch: if ( sub CaMeL Line = sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 367
score: 99.03718397352431
patch: if ( line 1 . length < line 1 . length line $NUMBER$ . length ) {
rank: 367
score: 98.80974982766544
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != null ) {
rank: 367
score: 98.60594593394886
patch: / * / int * * * * / /
rank: 367
score: 98.26709747314453
patch: / * / } / * /
rank: 367
score: 97.99403381347656
patch: logger / / / / / compute
rank: 368
score: 99.3656070106908
patch: int line 1 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 368
score: 99.302138671875
patch: / * if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL
rank: 368
score: 99.29007720947266
patch: = get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 368
score: 99.0357666015625
patch: if ( line 1 . length ( ) > 0 ) {
rank: 368
score: 98.8095703125
patch: if ( line $NUMBER$ != null && line $NUMBER$ != null )
rank: 368
score: 98.60578070746527
patch: / * / int / / / /
rank: 368
score: 98.26666259765625
patch: if ( intersection / / * / intersection )
rank: 368
score: 97.99174499511719
patch: / / return / / / /
rank: 369
score: 99.36534359580592
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) - $NUMBER$
rank: 369
score: 99.35821063701923
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Sub CaMeL Space ( ) ;
rank: 369
score: 99.30212890625
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) . size ( ) > 1 )
rank: 369
score: 99.28927791819854
patch: Line line $NUMBER$ = ( Line ) line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 369
score: 99.03439170435855
patch: if ( line 1 . to CaMeL String ( ) . starts CaMeL With ( $STRING$ ) )
rank: 369
score: 98.80928955078124
patch: assert line $NUMBER$ != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) >= 0 ;
rank: 369
score: 98.605712890625
patch: / * ? / / / / * / /
rank: 369
score: 98.26499633789062
patch: if ( intersection ( intersection ) * / /
rank: 369
score: 97.98939732142857
patch: / / throw / / /
rank: 370
score: 99.43179321289062
patch: Line line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 ) ;
rank: 370
score: 99.36484888980263
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Attribute ( $STRING$ ) ;
rank: 370
score: 99.30174763997395
patch: this . include CaMeL End CaMeL Points = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 370
score: 99.2887714092548
patch: if ( line $NUMBER$ . intersection ( line $NUMBER$ ) ) {
rank: 370
score: 99.03428739659927
patch: if ( line 1 . index CaMeL Of ( line $NUMBER$ ) < 0 ) {
rank: 370
score: 98.80913543701172
patch: int [ ] intersection = new int [ line 1 . / $NUMBER$ ] ;
rank: 370
score: 98.6055908203125
patch: / * / / * * / } / /
rank: 370
score: 98.2647705078125
patch: / / * * * * / /
rank: 370
score: 97.98825073242188
patch: / / / / break / /
rank: 371
score: 99.43169981060606
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 371
score: 99.36480712890625
patch: Line line $NUMBER$ 1 = line 1 . get CaMeL Line $NUMBER$ ( ) ;
rank: 371
score: 99.35804161658653
patch: Sub CaMeL Line sub CaMeL Line = ( Sub CaMeL Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 371
score: 99.3017219094669
patch: synchronized ( sub CaMeL Line ) { if ( include CaMeL End CaMeL Points ) {
rank: 371
score: 99.03366427951389
patch: if ( line 1 == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 371
score: 98.80869547526042
patch: if ( line $NUMBER$ == null / * / ) {
rank: 371
score: 98.60496690538194
patch: / / * / * / / /
rank: 371
score: 98.264697265625
patch: if ( intersection / / * / / /
rank: 371
score: 97.98649597167969
patch: / / / / else / compute
rank: 372
score: 99.43149636008523
patch: Line line $NUMBER$ = ( Line ) this . sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 372
score: 99.36442735460069
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) +
rank: 372
score: 99.30109320746527
patch: double line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 372
score: 99.28845932904412
patch: final Object line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 372
score: 99.0327880859375
patch: if ( line 1 == null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }
rank: 372
score: 98.80845289963942
patch: int length = line $NUMBER$ . get CaMeL Length ( ) ;
rank: 372
score: 98.60441080729167
patch: / * / * / / * /
rank: 372
score: 98.26429748535156
patch: System . / * * * /
rank: 372
score: 97.98523966471355
patch: infinite / / / compute
rank: 373
score: 99.43149201766305
patch: String line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 373
score: 99.36400604248047
patch: Line line $NUMBER$ 1 = sub CaMeL Line . get CaMeL Line ( ) ;
rank: 373
score: 99.30106847426471
patch: int line $NUMBER$ = ( ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 373
score: 99.2875114889706
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . intersection ( false ) ;
rank: 373
score: 99.03254968979779
patch: if ( line $NUMBER$ . trim ( ) . length ( ) > 0 ) {
rank: 373
score: 98.80770263671874
patch: if ( line $NUMBER$ != null line $NUMBER$ . get CaMeL Line CaMeL Number ( line $NUMBER$ ) )
rank: 373
score: 98.60218641493056
patch: / * * / / / * /
rank: 373
score: 98.26422797309027
patch: / * * * / } } /
rank: 373
score: 97.9847640991211
patch: / / / / System / compute
rank: 374
score: 99.43145197088069
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; / * * /
rank: 374
score: 99.36360931396484
patch: Line line $NUMBER$ 1 = line 1 . to CaMeL Sub CaMeL Space ( )
rank: 374
score: 99.357734375
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 ) ;
rank: 374
score: 99.30103648792614
patch: if ( include CaMeL End CaMeL Points ) { return sub CaMeL Line . get CaMeL Hyperplane ( ) ; }
rank: 374
score: 99.03234185112848
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < - 1 ) {
rank: 374
score: 98.8075310202206
patch: boolean is CaMeL Empty = line $NUMBER$ . is CaMeL Empty ( ) / $NUMBER$ ;
rank: 374
score: 98.60144653320313
patch: / * / * / * / / /
rank: 374
score: 98.26403198242187
patch: if ( intersection ( intersection ( intersection / /
rank: 374
score: 97.98470306396484
patch: / else / / / / compute
rank: 375
score: 99.30056280838816
patch: if ( include CaMeL End CaMeL Points && line $NUMBER$ . include CaMeL End CaMeL Points ) {
rank: 375
score: 99.28681640625
patch: if ( line $NUMBER$ . get CaMeL Hyperplane ( ) != null ) {
rank: 375
score: 99.031982421875
patch: if ( line 1 . get CaMeL Location ( ) != null ) {
rank: 375
score: 98.80702611019737
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != null / * / /
rank: 375
score: 98.60127563476563
patch: / * / / / int * / }
rank: 375
score: 97.98379952566964
patch: / / final / / compute
rank: 376
score: 99.43121337890625
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 376
score: 99.36336517333984
patch: Line line 1 = ( Line ) get CaMeL Remaining CaMeL Region ( ) ;
rank: 376
score: 99.35767389112904
patch: = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 376
score: 99.28661346435547
patch: Object line $NUMBER$ = get CaMeL Remaining CaMeL Region ( sub CaMeL Line ) ;
rank: 376
score: 99.03046264648438
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( intersection . to CaMeL String ( ) / /
rank: 376
score: 98.80682373046875
patch: Line [ ] intersection = new Line [ intersection . length / $NUMBER$ ] ;
rank: 376
score: 98.60100708007812
patch: / / * / * / * / /
rank: 376
score: 98.2624755859375
patch: / / int intersection = intersection / / /
rank: 376
score: 97.98243204752605
patch: / / boolean / /
rank: 377
score: 99.43101846018145
patch: final boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ;
rank: 377
score: 99.30015625
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Remaining CaMeL Region ( ) ;
rank: 377
score: 99.28657362196181
patch: final Line line $NUMBER$ = sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ;
rank: 377
score: 99.03028215680804
patch: if ( line 1 != null && line 1 != null ) {
rank: 377
score: 98.80662231445312
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) > 0 / * / )
rank: 377
score: 98.261474609375
patch: / * / * * / /
rank: 377
score: 97.97848074776786
patch: / / try / / /
rank: 378
score: 99.36294320913461
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line ;
rank: 378
score: 99.35738699776786
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ,
rank: 378
score: 99.300048828125
patch: if ( include CaMeL End CaMeL Points && line 1 . to CaMeL Sub CaMeL Space ( ) . is CaMeL Empty ( ) ) {
rank: 378
score: 99.28626206341912
patch: if ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) == 0 )
rank: 378
score: 99.02951947380515
patch: if ( line $NUMBER$ . index CaMeL Of ( $STRING$ ) < - 1 ) {
rank: 378
score: 98.80660671657986
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line $NUMBER$ ) == 0 )
rank: 378
score: 98.59966362847223
patch: / * / / * int * /
rank: 378
score: 98.26097412109375
patch: String intersection = intersection / / / * /
rank: 378
score: 97.97737121582031
patch: / / { / * / /
rank: 379
score: 99.36277142693015
patch: Line line $NUMBER$ 1 = line 1 . get CaMeL Sub CaMeL Space ( ) ;
rank: 379
score: 99.35729631696428
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line ) ) ;
rank: 379
score: 99.30000813802083
patch: int line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ;
rank: 379
score: 99.28610409007354
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . intersection ( this ) ;
rank: 379
score: 99.02867431640625
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( intersection . size ( ) / $NUMBER$ ) ;
rank: 379
score: 98.80640933388158
patch: if ( line $NUMBER$ == null || ! line $NUMBER$ . is CaMeL Empty ( ) ) {
rank: 379
score: 98.59916381835937
patch: / * / int / / * / /
rank: 379
score: 98.26077880859376
patch: / * / else { / / * /
rank: 379
score: 97.97672526041667
patch: int / / / compute
rank: 380
score: 99.36249743009868
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . get CaMeL Length ( ) ;
rank: 380
score: 99.35709635416667
patch: Line line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 380
score: 99.29996744791667
patch: if ( include CaMeL End CaMeL Points && line 1 . get CaMeL Hyperplane ( ) != null ) {
rank: 380
score: 99.28573608398438
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) == 0 ) {
rank: 380
score: 99.028076171875
patch: if ( line 1 . get CaMeL Line ( ) != - 1 ) {
rank: 380
score: 98.80613878038194
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( intersection ) / * / /
rank: 380
score: 98.5986328125
patch: / * / * / / * / /
rank: 380
score: 98.26066589355469
patch: if / * / / / }
rank: 380
score: 97.97666713169643
patch: throw / / / / /
rank: 381
score: 99.43021065848214
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . intersection ( include CaMeL End CaMeL Points ) ;
rank: 381
score: 99.3624267578125
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) &
rank: 381
score: 99.29972759046052
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . intersection ( line $NUMBER$ ) )
rank: 381
score: 99.28529268152573
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) == $STRING$ ) {
rank: 381
score: 99.02755737304688
patch: if ( line $NUMBER$ . index CaMeL Of ( $STRING$ ) < 0 ) {
rank: 381
score: 98.80596051897321
patch: if ( line 1 . get CaMeL Length ( ) == 0 )
rank: 381
score: 98.2604736328125
patch: intersection / * /
rank: 381
score: 97.97517395019531
patch: } / / / / / compute
rank: 382
score: 99.36198425292969
patch: Line line 1 = sub CaMeL Line . get CaMeL Line $NUMBER$ ( ) ;
rank: 382
score: 99.35696176382211
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ; }
rank: 382
score: 99.29964505709134
patch: double line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space (
rank: 382
score: 99.28519694010417
patch: final Object line $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 382
score: 99.02630004882812
patch: if ( line 1 . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) / *
rank: 382
score: 98.80584038628473
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) / $NUMBER$ . 0 )
rank: 382
score: 98.5978515625
patch: / * / int * * * / /
rank: 382
score: 98.25876193576389
patch: / * int * * / } /
rank: 382
score: 97.97494506835938
patch: / / { / / * /
rank: 383
score: 99.429873046875
patch: if ( line 1 . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ) {
rank: 383
score: 99.29932250976563
patch: / * Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 383
score: 99.2842155905331
patch: if ( sub CaMeL Line = sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 383
score: 99.02602251838235
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) <= 0 ) {
rank: 383
score: 98.80567016601563
patch: assert line $NUMBER$ != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == null ;
rank: 383
score: 98.25790744357639
patch: / * / final / * / /
rank: 383
score: 97.97474888392857
patch: { / / / / /
rank: 384
score: 99.42975408380681
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 384
score: 99.36055501302083
patch: Line line $NUMBER$ 1 = sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ;
rank: 384
score: 99.29930701622597
patch: int line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space (
rank: 384
score: 99.28389485677083
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Chars ( ) ;
rank: 384
score: 99.02596028645833
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > - 1 ) {
rank: 384
score: 98.80551147460938
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + line 1 / / /
rank: 384
score: 98.25628662109375
patch: / * / int intersection * /
rank: 384
score: 97.9740982055664
patch: / / else / / / compute
rank: 385
score: 99.42942810058594
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) )
rank: 385
score: 99.35633505544355
patch: Object line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 385
score: 99.29921361019737
patch: for ( final Line line $NUMBER$ : sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 385
score: 99.28298950195312
patch: = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 385
score: 99.02483367919922
patch: List intersection = new Array CaMeL List ( intersection . size ( ) ) ;
rank: 385
score: 98.80506727430556
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == null ) {
rank: 385
score: 98.59636840820312
patch: / * / / / / } / /
rank: 385
score: 98.25525512695313
patch: / * / else / / * / /
rank: 385
score: 97.97352600097656
patch: / / break / / / /
rank: 386
score: 99.42937677556819
patch: Line line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 386
score: 99.36039011101974
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) == 0
rank: 386
score: 99.29910714285714
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) == this )
rank: 386
score: 99.28295084635417
patch: Line line $NUMBER$ = sub CaMeL Line . intersection ( line 1 ) ;
rank: 386
score: 99.02475155101104
patch: if ( line 1 . index CaMeL Of ( $STRING$ ) != - 1 ) {
rank: 386
score: 98.80363384046052
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) >= line 1 / / /
rank: 386
score: 98.59618462456598
patch: / * / * * * * /
rank: 386
score: 98.255126953125
patch: / / * * / /
rank: 386
score: 97.97352600097656
patch: / / / / try / compute
rank: 387
score: 99.42926025390625
patch: sub CaMeL Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 387
score: 99.36030016447368
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1
rank: 387
score: 99.35623168945312
patch: Line line 1 = ( Line ) this . sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 387
score: 99.29899516858552
patch: / / check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 387
score: 99.02420383029514
patch: if ( line $NUMBER$ . get CaMeL Name ( ) . equals ( $STRING$ ) / /
rank: 387
score: 98.80339965820312
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == 0 / * / )
rank: 387
score: 98.593505859375
patch: / * / int / * * /
rank: 387
score: 98.25484212239583
patch: if / / * /
rank: 387
score: 97.97329275948661
patch: infinite / / / / compute
rank: 388
score: 99.35603279903017
patch: Region line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 388
score: 99.29832922894022
patch: if ( include CaMeL End CaMeL Points ? line 1 : sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 388
score: 99.28037109375
patch: if ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) {
rank: 388
score: 98.80316162109375
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) != 0 )
rank: 388
score: 98.59343872070312
patch: / * / int * * / * /
rank: 388
score: 98.25330268012152
patch: if ( intersection / / / / compute
rank: 388
score: 97.97278849283855
patch: / / / compute CaMeL
rank: 389
score: 99.3598965731534
patch: Line line $NUMBER$ = get CaMeL Hyperplane ( ) ;
rank: 389
score: 99.298095703125
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) == this ) {
rank: 389
score: 99.27955537683823
patch: Line line $NUMBER$ = ( Line ) get CaMeL Line ( sub CaMeL Line ) ;
rank: 389
score: 99.02250840928819
patch: List intersection = new Array CaMeL List ( intersection . size ( ) / $NUMBER$ ) ;
rank: 389
score: 98.80298790564903
patch: int size = line $NUMBER$ . get CaMeL Size ( ) ;
rank: 389
score: 98.2523681640625
patch: if ( intersection ) { continue / * /
rank: 389
score: 97.97210693359375
patch: intersection / / / compute
rank: 390
score: 99.42847467237904
patch: loc 1 = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 390
score: 99.35982259114583
patch: Line line $NUMBER$ 1 = line $NUMBER$ . intersection ( line 1 ) ;
rank: 390
score: 99.35581391433189
patch: Location line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 390
score: 99.29801218133224
patch: this . sub CaMeL Line = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 390
score: 99.02208116319444
patch: if ( line $NUMBER$ . length > line 1 . length line $NUMBER$ . length ) {
rank: 390
score: 98.80298461914063
patch: int size = line 1 . get CaMeL Size ( ) line $NUMBER$ . get CaMeL Length ( )
rank: 390
score: 98.59065246582031
patch: / * * / / * /
rank: 390
score: 98.25145128038194
patch: / * / System . / / }
rank: 390
score: 97.97023518880208
patch: / / } / /
rank: 391
score: 99.42841339111328
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 391
score: 99.29792586616848
patch: if ( include CaMeL End CaMeL Points ) { line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 391
score: 99.2794189453125
patch: if ( sub CaMeL Line . intersection ( line $NUMBER$ ) ) {
rank: 391
score: 99.02204975328948
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) / $NUMBER$ < 0 ) {
rank: 391
score: 98.80295697380515
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( intersection . size ( ) )
rank: 391
score: 98.25121392144098
patch: / * * * / try { /
rank: 391
score: 97.96944427490234
patch: / / / boolean / / compute
rank: 392
score: 99.35965126439145
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1
rank: 392
score: 99.35546061197917
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( $STRING$ ) ) ;
rank: 392
score: 99.297841796875
patch: this . line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 392
score: 99.2789077758789
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( sub CaMeL Line ) ;
rank: 392
score: 99.02089556525735
patch: if ( line 1 . compare CaMeL To ( line $NUMBER$ ) > 0 ) {
rank: 392
score: 98.80284881591797
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ / * line 1 / /
rank: 392
score: 98.59030490451389
patch: / / * / * * / /
rank: 392
score: 98.24996512276786
patch: / * / } / /
rank: 392
score: 97.96812438964844
patch: public / / / / / compute
rank: 393
score: 99.42778087797619
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( $STRING$ ) ;
rank: 393
score: 99.35939534505208
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) *
rank: 393
score: 99.35533558238636
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 393
score: 99.29774234169408
patch: return line $NUMBER$ . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 393
score: 99.27887725830078
patch: Object line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 393
score: 99.0205078125
patch: if ( line $NUMBER$ . index CaMeL Of ( $STRING$ ) == - 1 ) {
rank: 393
score: 98.80237534466912
patch: final int [ ] intersection = new int [ intersection . size ( ) ] ;
rank: 393
score: 98.58967895507813
patch: / * / / / * / / compute
rank: 393
score: 97.96678161621094
patch: / return / / / / /
rank: 394
score: 99.42765808105469
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 394
score: 99.35514042295259
patch: Line line $NUMBER$ += get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 394
score: 99.29773530505952
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) == null )
rank: 394
score: 99.27811976841518
patch: if ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) )
rank: 394
score: 99.02016977163461
patch: if ( line 1 == null ) { return null ; }
rank: 394
score: 98.8018329326923
patch: if ( line 1 == null ) { / * / /
rank: 394
score: 98.58864135742188
patch: / * / * / * / * /
rank: 394
score: 98.24964599609375
patch: if ( intersection == null / / * /
rank: 394
score: 97.96629333496094
patch: } / / { / / /
rank: 395
score: 99.42755859375
patch: final Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 395
score: 99.35816786024306
patch: Line line $NUMBER$ 1 1 = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 395
score: 99.29766290838069
patch: if ( include CaMeL End CaMeL Points && line 1 . get CaMeL Remaining CaMeL Region ( ) == null )
rank: 395
score: 99.27774483816964
patch: if ( include CaMeL End CaMeL Points && line $NUMBER$ != null )
rank: 395
score: 99.02007293701172
patch: if ( line 1 . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ) {
rank: 395
score: 98.80144904641544
patch: if ( intersection == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$
rank: 395
score: 98.58812866210937
patch: / * / int * / } / /
rank: 395
score: 98.24948120117188
patch: if ( intersection / / / compute
rank: 395
score: 97.96598307291667
patch: logger / / / /
rank: 396
score: 99.42752075195312
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ] ) ;
rank: 396
score: 99.35768636067708
patch: Region line $NUMBER$ = ( Region ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 396
score: 99.35483940972222
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 396
score: 99.2974853515625
patch: return sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 396
score: 99.27671461838942
patch: Object line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 396
score: 99.0200554342831
patch: if ( line 1 . size ( ) > line 1 . size ( ) )
rank: 396
score: 98.80120528371711
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == intersection / * / /
rank: 396
score: 98.58798217773438
patch: / * / / / System . / /
rank: 396
score: 98.24931640625
patch: final synchronized ( this ) { / * /
rank: 396
score: 97.96533203125
patch: intersection / { / /
rank: 397
score: 99.29746704101562
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . intersection ( line $NUMBER$ ) ) {
rank: 397
score: 99.27630974264706
patch: Line line $NUMBER$ = ( Region ) sub CaMeL Line . get CaMeL Hyperplane ( )
rank: 397
score: 99.02001953125
patch: switch ( line 1 . get CaMeL Type ( ) ) { case - 1 :
rank: 397
score: 98.8011944110577
patch: Array CaMeL List intersection = new Array CaMeL List ( ) ;
rank: 397
score: 98.58785400390624
patch: / * * / / * / / /
rank: 397
score: 98.24801974826389
patch: / * / / } / * /
rank: 397
score: 97.9635238647461
patch: * / / / / / /
rank: 398
score: 99.42737186316288
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 398
score: 99.35750325520833
patch: Field line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 398
score: 99.29728190104167
patch: if ( sub CaMeL Line != null && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 398
score: 99.27621459960938
patch: final String line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 398
score: 99.01934814453125
patch: if ( line 1 . size ( ) > line $NUMBER$ . size ( ) ) {
rank: 398
score: 98.80097961425781
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) != null )
rank: 398
score: 98.58685913085938
patch: / * * / * / * * /
rank: 398
score: 98.24650355747768
patch: if ( intersection && intersection )
rank: 398
score: 97.9618911743164
patch: / / / / / try /
rank: 399
score: 99.35708957248264
patch: line 1 . intersection ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 399
score: 99.3546241554054
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( 0 ) ) ;
rank: 399
score: 99.29688561480978
patch: if ( include CaMeL End CaMeL Points && ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) )
rank: 399
score: 99.01908605238971
patch: if ( line 1 . compare CaMeL To ( line 1 ) > 0 ) {
rank: 399
score: 98.80097791883681
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( line $NUMBER$ . / $NUMBER$ ) ;
rank: 399
score: 98.58623657226562
patch: / * * * * / / * /
rank: 399
score: 98.24614606584821
patch: if ( intersection || intersection )
rank: 399
score: 97.96144321986607
patch: } / { / / /
rank: 400
score: 99.42705688476562
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) != null ;
rank: 400
score: 99.35457356770833
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 400
score: 99.29677170973558
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) . size ( ) > 1 ) {
rank: 400
score: 99.27510340073529
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . intersection ( true ) ;
rank: 400
score: 99.01895480685764
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) <= - 1 ) {
rank: 400
score: 98.80084228515625
patch: if ( intersection . size ( intersection . size ( ) - 1 ) < 0 )
rank: 400
score: 98.5861328125
patch: / * / int / * / / /
rank: 400
score: 98.24575805664062
patch: if / / char / * /
rank: 400
score: 97.96046447753906
patch: / System / / / / /
rank: 401
score: 99.42600661057692
patch: Sub CaMeL Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 401
score: 99.35541449652777
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point (
rank: 401
score: 99.29612223307292
patch: return get CaMeL Hyperplane ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 401
score: 99.01790161132813
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( $STRING$ ) / /
rank: 401
score: 98.80064086914062
patch: assert line $NUMBER$ != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) <= 0 ;
rank: 401
score: 98.24522569444444
patch: else { / * / * / }
rank: 401
score: 97.9592514038086
patch: / public / / / / /
rank: 402
score: 99.4259033203125
patch: include CaMeL End CaMeL Points = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 402
score: 99.35521742876838
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Size ( )
rank: 402
score: 99.3543701171875
patch: int line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 402
score: 99.29609231387867
patch: if ( line 1 != null && this . include CaMeL End CaMeL Points ) {
rank: 402
score: 99.01737467447917
patch: if ( line 1 . length < line $NUMBER$ . length line $NUMBER$ . length ) {
rank: 402
score: 98.80030653211806
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) >= line 1 / /
rank: 402
score: 98.58458862304687
patch: / / / int / / / / /
rank: 402
score: 98.24457465277777
patch: if ( intersection this . intersection ) {
rank: 402
score: 97.95701381138393
patch: / / / / / {
rank: 403
score: 99.42586788054436
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 403
score: 99.3552017211914
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Sub CaMeL Space ( )
rank: 403
score: 99.29600694444444
patch: return intersection ( line 1 . to CaMeL Sub CaMeL Space ( ) , line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 403
score: 99.01734008789063
patch: if ( line 1 . get CaMeL Line ( ) . get CaMeL Length ( ) > 0 )
rank: 403
score: 98.80002955386513
patch: if ( line $NUMBER$ == null ) throw new Illegal CaMeL Argument CaMeL Exception ( intersection ) ;
rank: 403
score: 98.58350830078125
patch: / * / * * / / / /
rank: 403
score: 98.24404296875
patch: if ( intersection / / * / ) {
rank: 403
score: 97.95551409040179
patch: / / / / * compute
rank: 404
score: 99.42583356584821
patch: if ( get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ) {
rank: 404
score: 99.35469563802083
patch: int line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line ( ) ;
rank: 404
score: 99.35416666666667
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( $STRING$ ) ) ;
rank: 404
score: 99.29554814877717
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) . size ( ) >
rank: 404
score: 99.27365291819854
patch: = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 404
score: 99.0169677734375
patch: if ( line 1 == null ) { return this ; }
rank: 404
score: 98.79987649356617
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( intersection ) == null )
rank: 404
score: 98.58259887695313
patch: / * * / * / / / /
rank: 404
score: 98.24365234375
patch: / * /
rank: 404
score: 97.95262145996094
patch: { / / / / / compute
rank: 405
score: 99.4257179542824
patch: Line line $NUMBER$ = get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 405
score: 99.29541954627403
patch: if ( include CaMeL End CaMeL Points && line 1 . to CaMeL Sub CaMeL Space ( ) . is CaMeL Empty ( ) )
rank: 405
score: 99.27345969460227
patch: if ( sub CaMeL Line $NUMBER$ != null ) {
rank: 405
score: 98.79972534179687
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line $NUMBER$ ) / $NUMBER$ == 0 )
rank: 405
score: 98.58203735351563
patch: / / int * / / / / /
rank: 405
score: 97.95201110839844
patch: / / / / / / float
rank: 406
score: 99.42562373991936
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 406
score: 99.35332697088069
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; sub CaMeL Line .
rank: 406
score: 99.29521741365132
patch: this . sub CaMeL Line . get CaMeL Hyperplane ( ) . add ( line 1 ) ;
rank: 406
score: 99.01561215049342
patch: if ( line 1 . get CaMeL Line CaMeL Number ( line 1 ) != 0 ) {
rank: 406
score: 98.7996826171875
patch: if ( line $NUMBER$ == null / * intersection . * / ) /
rank: 406
score: 98.58121337890626
patch: / * * / / / * * /
rank: 406
score: 98.24178059895833
patch: if / * * * * / }
rank: 406
score: 97.95170084635417
patch: if / / / /
rank: 407
score: 99.42547052556819
patch: boolean include CaMeL End CaMeL Points = line 1 . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 407
score: 99.35322097252156
patch: File line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 407
score: 99.35285186767578
patch: line 1 . intersection ( line $NUMBER$ . intersection ( line $NUMBER$ ) ) ;
rank: 407
score: 99.29497327302632
patch: for ( Sub CaMeL Line line $NUMBER$ : sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 407
score: 99.27099609375
patch: if ( line $NUMBER$ . intersection ( line $NUMBER$ ) )
rank: 407
score: 98.79963684082031
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < 0 )
rank: 407
score: 98.57965087890625
patch: / * / * * / / * /
rank: 407
score: 97.95093536376953
patch: / / { / / / try
rank: 408
score: 99.35275503305289
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space (
rank: 408
score: 99.35273960658482
patch: Line line 1 = line 1 . intersection ( line $NUMBER$ ) ;
rank: 408
score: 99.29488332648026
patch: for ( Sub CaMeL Line line 1 : sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 408
score: 99.27097981770834
patch: = ( Region ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 408
score: 99.0147705078125
patch: switch ( line 1 . get CaMeL Line ( ) ) { case 0 :
rank: 408
score: 98.79953002929688
patch: String [ ] intersection = new String [ intersection . length + 1 ] ;
rank: 408
score: 98.57848442925348
patch: / * / / * / / *
rank: 408
score: 97.95055389404297
patch: / / / / ? / /
rank: 409
score: 99.42530871975806
patch: loc 1 = line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 409
score: 99.35267857142857
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 409
score: 99.29486083984375
patch: if ( include CaMeL End CaMeL Points || sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) == null ) {
rank: 409
score: 99.01457383897569
patch: if ( line 1 . length > line 1 . length line 1 . length ) {
rank: 409
score: 98.79950310202206
patch: List < Line > intersection = new Array CaMeL List < Line > ( ) ;
rank: 409
score: 98.5782958984375
patch: / * * * / * * / /
rank: 409
score: 98.24009486607143
patch: / / int intersection * /
rank: 409
score: 97.95020403180804
patch: / / / / / boolean
rank: 410
score: 99.42511749267578
patch: ( ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 410
score: 99.35257761101974
patch: = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 410
score: 99.35092163085938
patch: int line $NUMBER$ 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 410
score: 99.29486083984375
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) . length > 1 ) {
rank: 410
score: 98.79906354631696
patch: final int size = line 1 . get CaMeL Length ( ) ;
rank: 410
score: 98.23936631944444
patch: if ( intersection != null / * /
rank: 410
score: 97.9500732421875
patch: / / throw / / / compute
rank: 411
score: 99.42510695684524
patch: boolean include CaMeL End CaMeL Points = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 411
score: 99.2948357077206
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 411
score: 99.26943969726562
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . intersection ( ) ;
rank: 411
score: 99.01319077435662
patch: if ( line 1 . index CaMeL Of ( $STRING$ ) < - 1 ) {
rank: 411
score: 98.79906354631696
patch: if ( intersection . is CaMeL Empty ( ) ) / * /
rank: 411
score: 98.57744683159723
patch: / * ] / / * / /
rank: 411
score: 98.23882293701172
patch: if ( intersection ) { ) {
rank: 411
score: 97.94720458984375
patch: / / / / / / this
rank: 412
score: 99.35237426757813
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; if (
rank: 412
score: 99.35044950597427
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 412
score: 99.294677734375
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) . length == 0 )
rank: 412
score: 99.26927274816177
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . size ( ) 1 ;
rank: 412
score: 99.01314504523026
patch: if ( line $NUMBER$ . get CaMeL Name ( ) . starts CaMeL With ( $STRING$ ) )
rank: 412
score: 98.7989501953125
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) <= 0 )
rank: 412
score: 98.57717895507812
patch: / * * / / * / * /
rank: 412
score: 98.23699079241071
patch: final List / * * /
rank: 412
score: 97.94618225097656
patch: / / -- / / / /
rank: 413
score: 99.4250724546371
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 413
score: 99.352294921875
patch: boolean include CaMeL End CaMeL Points = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 413
score: 99.35015462239583
patch: Location line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 413
score: 99.2944921875
patch: this . line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ;
rank: 413
score: 99.26910041360294
patch: if ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) != 0 ) {
rank: 413
score: 99.01242547286184
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( line 1 ) < 0 ) {
rank: 413
score: 98.79774475097656
patch: Object [ ] intersection = new Object [ line $NUMBER$ . / $NUMBER$ ] ;
rank: 413
score: 98.57412719726562
patch: / * * * * * * * /
rank: 413
score: 98.23681640625
patch: / / / * /
rank: 413
score: 97.94491141183036
patch: / / / boolean / /
rank: 414
score: 99.35228774126838
patch: final Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 414
score: 99.35012817382812
patch: Line line $NUMBER$ = line 1 . get CaMeL Sub CaMeL Space ( ) ;
rank: 414
score: 99.29429626464844
patch: this . sub CaMeL Line = line 1 . get CaMeL Hyperplane ( ) ;
rank: 414
score: 99.26834869384766
patch: if ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) != 0 )
rank: 414
score: 99.01081285978618
patch: if ( line 1 . to CaMeL Lower CaMeL Case ( ) . equals ( $STRING$ ) )
rank: 414
score: 98.7977294921875
patch: if ( intersection != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) >= 0 )
rank: 414
score: 98.23484971788194
patch: if / * * / * / /
rank: 414
score: 97.94464111328125
patch: / / / / boolean /
rank: 415
score: 99.42485981602823
patch: String line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 415
score: 99.35211859809027
patch: File line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 415
score: 99.29427083333333
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( )
rank: 415
score: 99.26707356770834
patch: if ( line 1 . get CaMeL Hyperplane ( ) == null ) {
rank: 415
score: 99.01054944490132
patch: if ( line 1 . get CaMeL Line ( ) . equals ( line $NUMBER$ ) ) {
rank: 415
score: 98.79730987548828
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / * line $NUMBER$ / /
rank: 415
score: 98.57349989149306
patch: / * * / / int * /
rank: 415
score: 97.94391741071429
patch: / / / try / /
rank: 416
score: 99.42484537760417
patch: Line line $NUMBER$ = line 1 . check CaMeL Point ( line 1 . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 416
score: 99.35157012939453
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 416
score: 99.34929342830883
patch: / * int line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 416
score: 99.29364013671875
patch: E line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 416
score: 99.26705932617188
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) != 0 ) {
rank: 416
score: 99.01025390625
patch: if ( line 1 == null ) { return - 1 ; }
rank: 416
score: 98.79730224609375
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( intersection . length ( ) ) ;
rank: 416
score: 98.57349310980902
patch: / * ? / / * / /
rank: 416
score: 98.23200225830078
patch: / * / if / * /
rank: 416
score: 97.9434814453125
patch: infinite / * / / / /
rank: 417
score: 99.35143622036638
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Char CaMeL Array ( ) ) ;
rank: 417
score: 99.34894875919117
patch: Line line $NUMBER$ 1 = line 1 . check CaMeL Point ( line $NUMBER$ ) ;
rank: 417
score: 99.29345024956598
patch: Point line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 417
score: 99.00996229383681
patch: if ( line 1 . length != line 1 . length line $NUMBER$ . length ) {
rank: 417
score: 98.79722086588542
patch: final int [ ] intersection = new int [ line 1 . size ( ) ] ;
rank: 417
score: 98.57344360351563
patch: / / int / / / / / compute
rank: 417
score: 98.23155212402344
patch: try { / * * / /
rank: 417
score: 97.94114685058594
patch: LOG / / / / / /
rank: 418
score: 99.42466334292763
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ; / * * /
rank: 418
score: 99.35106230945122
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 418
score: 99.29310191761364
patch: for ( Line line $NUMBER$ : line 1 ) {
rank: 418
score: 99.26658630371094
patch: int line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 418
score: 99.00995950137867
patch: switch ( line 1 . get CaMeL X ( ) ) { case - 1 :
rank: 418
score: 98.7970199584961
patch: double [ ] intersection = new double [ intersection . length * $NUMBER$ ] ;
rank: 418
score: 98.57329711914062
patch: / int / / / / / / /
rank: 418
score: 98.23154703776042
patch: if ( intersection ) { * / /
rank: 418
score: 97.94066619873047
patch: intersection / int / / / /
rank: 419
score: 99.35095635775862
patch: Object line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 419
score: 99.34855143229167
patch: Line line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( )
rank: 419
score: 99.292939453125
patch: if ( include CaMeL End CaMeL Points ? line 1 : sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) {
rank: 419
score: 99.26656668526786
patch: if ( line 1 . get CaMeL Hyperplane ( ) == null )
rank: 419
score: 99.00975126378677
patch: final List intersection = new Array CaMeL List ( intersection . size ( ) ) ;
rank: 419
score: 98.79636056082589
patch: double [ ] intersection = new double [ intersection . length ] ;
rank: 419
score: 98.57239990234375
patch: / * / / / int / * /
rank: 419
score: 98.22913469587054
patch: if / * * / }
rank: 419
score: 97.9405746459961
patch: } / * / / / /
rank: 420
score: 99.42455212823276
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space (
rank: 420
score: 99.35072063577586
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Char CaMeL Array ( ) ) ;
rank: 420
score: 99.34854830228366
patch: Region line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 420
score: 99.292880859375
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . intersection ( line $NUMBER$ ) ;
rank: 420
score: 99.26549421037946
patch: if ( line $NUMBER$ . get CaMeL Hyperplane ( ) != null )
rank: 420
score: 99.00894775390626
patch: if ( line 1 . get CaMeL Line CaMeL Number ( line 1 ) != - 1 ) {
rank: 420
score: 98.79578247070313
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line ( line $NUMBER$ ) ;
rank: 420
score: 98.57105712890625
patch: / * / / / int * / intersection
rank: 420
score: 98.22907366071429
patch: / / List / * /
rank: 420
score: 97.9379374186198
patch: / / / / }
rank: 421
score: 99.42455115685097
patch: Sub CaMeL Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 421
score: 99.3506747159091
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 421
score: 99.29277886284723
patch: Marker line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 421
score: 99.26470540364583
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( line $NUMBER$ ) ;
rank: 421
score: 99.00830078125
patch: if ( line 1 != null && line $NUMBER$ != null ) {
rank: 421
score: 98.79555838448661
patch: final int size = line 1 . get CaMeL Size ( ) ;
rank: 421
score: 98.57079467773437
patch: / / int / / * / / /
rank: 421
score: 98.2282943725586
patch: if ( intersection / / * compute
rank: 421
score: 97.93766784667969
patch: Iterator / / / / / /
rank: 422
score: 99.34730360243056
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ )
rank: 422
score: 99.29264613560268
patch: return get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 422
score: 99.26427350725446
patch: final Object line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 422
score: 99.00714111328125
patch: if ( line 1 . length ( ) > line $NUMBER$ . length ( ) ) {
rank: 422
score: 98.79521348741319
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == - 1 / /
rank: 422
score: 98.56849365234375
patch: / * ] / / / * / /
rank: 422
score: 98.22781711154514
patch: / / * * * * * /
rank: 422
score: 97.93748256138393
patch: / else / / / /
rank: 423
score: 99.34728190104167
patch: Line line 1 = sub CaMeL Line . get CaMeL Line ( ) ;
rank: 423
score: 99.2923251065341
patch: if ( include CaMeL End CaMeL Points ? line 1 : sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 423
score: 99.26255696614584
patch: String line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 423
score: 99.00654432508681
patch: if ( line $NUMBER$ . to CaMeL String ( ) . equals ( $STRING$ ) ) {
rank: 423
score: 98.79518479567308
patch: if ( line 1 == null && line $NUMBER$ == null )
rank: 423
score: 98.5679931640625
patch: / * / / / * / *
rank: 423
score: 98.22696261935764
patch: if ( intersection == null / * /
rank: 423
score: 97.93707275390625
patch: / / continue / / / /
rank: 424
score: 99.42446067116477
patch: / * / sub CaMeL Line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 424
score: 99.35033240685097
patch: final boolean include CaMeL End CaMeL Points = line 1 . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 424
score: 99.34577941894531
patch: Line line $NUMBER$ = get CaMeL Line 1 . intersection ( line 1 ) ;
rank: 424
score: 99.29216172960069
patch: Axis line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 424
score: 99.26250457763672
patch: try { Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 424
score: 99.00615491365132
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) / $NUMBER$ > 0 ) {
rank: 424
score: 98.7947998046875
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( intersection ) / * / )
rank: 424
score: 98.56780395507812
patch: / * / / * * / / *
rank: 424
score: 98.22550964355469
patch: / / * / * * /
rank: 424
score: 97.93705531529018
patch: / / / final / /
rank: 425
score: 99.42425340221774
patch: Line line $NUMBER$ += sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 425
score: 99.35031467013889
patch: final boolean include CaMeL End CaMeL Points = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 425
score: 99.29179243607955
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && ! include CaMeL End CaMeL Points )
rank: 425
score: 99.26120174632354
patch: if ( include CaMeL End CaMeL Points && get CaMeL Hyperplane ( ) == null )
rank: 425
score: 99.00535824424342
patch: if ( line 1 . equals ( line $NUMBER$ . get CaMeL Line ( ) ) ) {
rank: 425
score: 98.79466552734375
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) > 0 ) { / * /
rank: 425
score: 98.22538926866319
patch: String intersection = intersection / / * /
rank: 425
score: 97.93540736607143
patch: intersection / / / / compute
rank: 426
score: 99.42399458451705
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . size ( ) ;
rank: 426
score: 99.35021602746212
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Char CaMeL Array ( ) ) ;
rank: 426
score: 99.2917712983631
patch: long line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 426
score: 99.26119290865384
patch: if ( sub CaMeL Line . intersection ( line $NUMBER$ ) )
rank: 426
score: 99.0049819946289
patch: if ( line 1 . char CaMeL At ( 0 ) != $STRING$ ) {
rank: 426
score: 98.79453125
patch: if ( line $NUMBER$ == null / * intersection . * / ) {
rank: 426
score: 98.56692165798611
patch: / * / / int * / line
rank: 426
score: 98.22518484933036
patch: else { / * / }
rank: 426
score: 97.93476104736328
patch: / / / case / / /
rank: 427
score: 99.42389112903226
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 427
score: 99.3501864346591
patch: final String line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 427
score: 99.34471842447917
patch: Region line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 427
score: 99.29147338867188
patch: if ( include CaMeL End CaMeL Points ? line 1 : sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) )
rank: 427
score: 99.2608642578125
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line $NUMBER$ != null ) {
rank: 427
score: 99.0048828125
patch: if ( line 1 . get CaMeL Line ( ) != null ) {
rank: 427
score: 98.79442749023437
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) <= 0 ) { / * /
rank: 427
score: 98.56690063476563
patch: / / * / / * * / /
rank: 427
score: 98.22464328342014
patch: if ( intersection / * / intersection )
rank: 427
score: 97.93343680245536
patch: / / / * / /
rank: 428
score: 99.423828125
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point (
rank: 428
score: 99.35017903645833
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 428
score: 99.34441061580883
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Length ( )
rank: 428
score: 99.29147135416666
patch: return ( Line ) sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 428
score: 99.2605842141544
patch: if ( line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 428
score: 99.00460815429688
patch: if ( line 1 . index CaMeL Of ( $STRING$ ) < 0 ) {
rank: 428
score: 98.79425726996527
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) > line $NUMBER$ / /
rank: 428
score: 98.22438557942708
patch: / / * * / * / /
rank: 428
score: 97.93335978190105
patch: } / / / /
rank: 429
score: 99.34440104166667
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ,
rank: 429
score: 99.26030883789062
patch: Line line $NUMBER$ = ( Line ) false ;
rank: 429
score: 99.00445235402961
patch: if ( line 1 . get CaMeL Line ( ) . length ( ) == 0 ) {
rank: 429
score: 98.56521267361111
patch: / * / int * / } /
rank: 429
score: 98.22420247395833
patch: if ( intersection / * / / /
rank: 429
score: 97.93299102783203
patch: / / char / / / /
rank: 430
score: 99.42338731553819
patch: return intersection ( line 1 , sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 430
score: 99.34997952368951
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) )
rank: 430
score: 99.3441521139706
patch: Region line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 430
score: 99.291259765625
patch: Token line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 430
score: 99.26009928385416
patch: if ( line 1 . get CaMeL Hyperplane ( ) != null ) {
rank: 430
score: 98.79293212890624
patch: if ( intersection != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == null )
rank: 430
score: 98.56478542751736
patch: / * / / / } / /
rank: 430
score: 98.22411431206598
patch: / / * * * / } /
rank: 430
score: 97.93285369873047
patch: / out / / / / /
rank: 431
score: 99.4233169555664
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 431
score: 99.3499500363372
patch: int include CaMeL End CaMeL Points = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 431
score: 99.2911044034091
patch: this . intersection = line $NUMBER$ . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 431
score: 99.25982666015625
patch: if ( line $NUMBER$ . trim ( ) . length ( ) > 0 )
rank: 431
score: 99.00419536389802
patch: if ( line 1 == null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 431
score: 98.7927978515625
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( line $NUMBER$ . / $NUMBER$ / $NUMBER$ ) ;
rank: 431
score: 98.56416829427083
patch: / * / } / * / /
rank: 431
score: 98.22400665283203
patch: / * / * * * /
rank: 431
score: 97.93162536621094
patch: / / / / } / compute
rank: 432
score: 99.42308666087963
patch: line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 432
score: 99.34993489583333
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 432
score: 99.3438720703125
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Space ( ) ;
rank: 432
score: 99.29103781960227
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) )
rank: 432
score: 99.25982259114583
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) != 0 )
rank: 432
score: 99.00399169921874
patch: if ( line 1 . to CaMeL String ( ) . starts CaMeL With ( $STRING$ ) / *
rank: 432
score: 98.79265594482422
patch: byte [ ] intersection = new byte [ intersection . length + 1 ] ;
rank: 432
score: 98.56346435546875
patch: / * / / / / / / /
rank: 432
score: 98.22357855902777
patch: if ( intersection ) { / * compute
rank: 432
score: 97.93162536621094
patch: throw / / / / / compute
rank: 433
score: 99.42299517463235
patch: v $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 433
score: 99.34265814887152
patch: Document line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 433
score: 99.29091389973958
patch: if ( include CaMeL End CaMeL Points && ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) ) {
rank: 433
score: 99.00379854090073
patch: List intersection = new Array CaMeL List ( intersection . size ( ) / $NUMBER$ )
rank: 433
score: 98.79222914751838
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) != 0 )
rank: 433
score: 98.56328735351562
patch: / * / / / * int * /
rank: 433
score: 98.22184922960069
patch: if / / final / * / /
rank: 433
score: 97.93147277832031
patch: / / } / / / compute
rank: 434
score: 99.34935805376838
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 434
score: 99.3426284790039
patch: Line line 1 = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 434
score: 99.29042454769737
patch: this . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 434
score: 99.25848795572917
patch: Line line $NUMBER$ = ( Line ) ( get CaMeL Hyperplane ( ) ;
rank: 434
score: 99.00376674107143
patch: if ( line 1 == null || line 1 == null ) {
rank: 434
score: 98.79214816623264
patch: if ( intersection == null ) throw new Illegal CaMeL Argument CaMeL Exception ( / * $STRING$
rank: 434
score: 98.56173095703124
patch: / / int / * / / / /
rank: 434
score: 98.22078450520833
patch: if / * / /
rank: 434
score: 97.92988586425781
patch: / / ? / / / /
rank: 435
score: 99.4228751890121
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Space ( ) ) ;
rank: 435
score: 99.34916294642858
patch: Line sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 435
score: 99.34192657470703
patch: Line line $NUMBER$ = sub CaMeL Line . to CaMeL Sub CaMeL Space ( )
rank: 435
score: 99.29027258831522
patch: if ( include CaMeL End CaMeL Points || sub CaMeL Line . get CaMeL Hyperplane ( ) . length > 0 )
rank: 435
score: 99.00367495888158
patch: if ( line 1 . contains ( line 1 . get CaMeL Line ( ) ) ) {
rank: 435
score: 98.79212782118056
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) <= line $NUMBER$ / /
rank: 435
score: 98.56106567382812
patch: / * / int * / line
rank: 435
score: 98.22027587890625
patch: / * ? * /
rank: 435
score: 97.92804718017578
patch: / / / / / else compute
rank: 436
score: 99.42264988111413
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 436
score: 99.34909583782327
patch: Line - $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 436
score: 99.34175618489583
patch: line 1 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 436
score: 99.29021747295673
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . intersection ( line 1 ) ;
rank: 436
score: 99.00358501233552
patch: if ( line 1 . get CaMeL Line CaMeL Number ( line $NUMBER$ ) < 0 ) {
rank: 436
score: 98.79205932617188
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ / * line $NUMBER$ . get CaMeL Message ( )
rank: 436
score: 98.56097412109375
patch: / / char / / / / / /
rank: 436
score: 98.21919468470982
patch: System . / / * /
rank: 436
score: 97.92640032087054
patch: / / int intersection = /
rank: 437
score: 99.34909237132354
patch: final Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 437
score: 99.34080595128677
patch: Line line $NUMBER$ = get CaMeL Line ( ) . get CaMeL Hyperplane ( ) ;
rank: 437
score: 99.28983800551471
patch: if ( line 1 . get CaMeL Remaining CaMeL Region ( ) != null ) {
rank: 437
score: 99.25835712139423
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line != null
rank: 437
score: 99.00276453354779
patch: if ( line 1 . is CaMeL Empty ( ) ) { return this ; }
rank: 437
score: 98.79195404052734
patch: int [ ] intersection = new int [ intersection . length + 1 ] ;
rank: 437
score: 98.5609130859375
patch: / * / / / / * * /
rank: 437
score: 98.21894666883681
patch: if ( intersection / * / ) {
rank: 437
score: 97.92540486653645
patch: / / / / else
rank: 438
score: 99.42251699942129
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 438
score: 99.34022432215073
patch: String line $NUMBER$ = sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) ;
rank: 438
score: 99.25791302849265
patch: if ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) == $STRING$ )
rank: 438
score: 99.00273980034723
patch: if ( line 1 . equals ( intersection . get CaMeL Line ( ) ) ) {
rank: 438
score: 98.79169464111328
patch: int [ ] intersection = new int [ line $NUMBER$ . / $NUMBER$ ] ;
rank: 438
score: 98.55992974175348
patch: / * / * / int * /
rank: 438
score: 98.21791076660156
patch: if / * / * * /
rank: 438
score: 97.9243392944336
patch: / / / / char / /
rank: 439
score: 99.42243303571429
patch: long line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 439
score: 99.34898721018145
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) )
rank: 439
score: 99.3397216796875
patch: Line line $NUMBER$ 1 = sub CaMeL Line . get CaMeL Line 1 ( ) ;
rank: 439
score: 99.28968641493056
patch: if ( include CaMeL End CaMeL Points && this . include CaMeL End CaMeL Points ) {
rank: 439
score: 99.25775146484375
patch: Line line $NUMBER$ = sub CaMeL Line . intersection ( sub CaMeL Line ) ;
rank: 439
score: 98.791650390625
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < 0 ) { / * /
rank: 439
score: 98.55895317925348
patch: / * * ? * * / /
rank: 439
score: 98.21663411458333
patch: if / * * / * * /
rank: 439
score: 97.92337472098214
patch: / int / / / compute
rank: 440
score: 99.42223727318549
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 440
score: 99.34881122295673
patch: String line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 440
score: 99.33931477864583
patch: Line line $NUMBER$ = line 1 . get CaMeL Line $NUMBER$ ( ) ;
rank: 440
score: 99.28921847873264
patch: Edge line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 440
score: 99.25723266601562
patch: if ( line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 440
score: 99.00182387408088
patch: if ( line 1 . trim ( ) . length ( ) == 0 ) {
rank: 440
score: 98.55664672851563
patch: / * / / int * * / /
rank: 440
score: 98.2158203125
patch: intersection / * * * /
rank: 440
score: 97.922119140625
patch: / * / / / compute
rank: 441
score: 99.42215064264113
patch: boolean include CaMeL End CaMeL Points = ( sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 441
score: 99.34870539484797
patch: Line get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 441
score: 99.33903503417969
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( sub CaMeL Line ) ;
rank: 441
score: 99.28920200892857
patch: return intersection ( line 1 . intersection ( line $NUMBER$ ) ) ;
rank: 441
score: 99.25650787353516
patch: final Line line $NUMBER$ = sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 441
score: 99.00091083233173
patch: if ( line $NUMBER$ . length ( ) > 0 ) {
rank: 441
score: 98.79111056857639
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) >= line 1 / /
rank: 441
score: 98.55521240234376
patch: / * / int / * * / /
rank: 441
score: 98.21558295355902
patch: / * / final / / * /
rank: 441
score: 97.92198181152344
patch: { / { / / / /
rank: 442
score: 99.4221420288086
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ) {
rank: 442
score: 99.33850775824652
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( )
rank: 442
score: 99.28916579026442
patch: long line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 442
score: 99.25579833984375
patch: Object sub CaMeL Line = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 442
score: 98.99991005345395
patch: if ( line 1 . equals CaMeL Ignore CaMeL Case ( line $NUMBER$ / $NUMBER$ ) ) {
rank: 442
score: 98.79014282226562
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == 0 ) { / * /
rank: 442
score: 98.55464002821181
patch: / * / / int * / }
rank: 442
score: 98.214599609375
patch: final / * /
rank: 442
score: 97.92185974121094
patch: / / try / / / compute
rank: 443
score: 99.42201675907258
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL String ( ) ) ;
rank: 443
score: 99.34845440204327
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) : get CaMeL Remaining CaMeL Region ( ) ;
rank: 443
score: 99.33826361762152
patch: T line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 443
score: 99.28907606336806
patch: long line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 443
score: 99.25568704044117
patch: try { if ( sub CaMeL Line . get CaMeL Hyperplane ( ) == null )
rank: 443
score: 98.99942016601562
patch: if ( line 1 . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 443
score: 98.7897479717548
patch: if ( line 1 != null && line $NUMBER$ != null )
rank: 443
score: 98.55442810058594
patch: / * / int * / /
rank: 443
score: 98.21457926432292
patch: / / * / * / * /
rank: 443
score: 97.92047991071429
patch: intersection / * / / /
rank: 444
score: 99.34838299418605
patch: int include CaMeL End CaMeL Points = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 444
score: 99.28904371995192
patch: double line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 444
score: 99.25564139229911
patch: Line line $NUMBER$ = ( Line ) intersection ( line 1 ) ;
rank: 444
score: 98.9971923828125
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < - 1 ) {
rank: 444
score: 98.78942192925348
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) != null ) {
rank: 444
score: 98.55301513671876
patch: / * / int * / * / /
rank: 444
score: 98.21322195870536
patch: if / / char * /
rank: 444
score: 97.92035784040179
patch: / / / / / else
rank: 445
score: 99.42171748991936
patch: loc 1 = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 445
score: 99.28897094726562
patch: int line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL
rank: 445
score: 99.25547162224265
patch: if ( include CaMeL End CaMeL Points && get CaMeL Hyperplane ( ) != null )
rank: 445
score: 98.99713456003289
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) / $NUMBER$ != 0 ) {
rank: 445
score: 98.78923950195312
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) == intersection / * / /
rank: 445
score: 98.552978515625
patch: / * / int * * / }
rank: 445
score: 98.21311950683594
patch: / * * * ? * /
rank: 445
score: 97.91586303710938
patch: / / / / List / compute
rank: 446
score: 99.34779866536458
patch: Attribute line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 446
score: 99.33694797092014
patch: short line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 446
score: 99.28877590013587
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) == this )
rank: 446
score: 99.25535673253677
patch: for ( Line line $NUMBER$ : sub CaMeL Line . intersection ( line $NUMBER$ ) )
rank: 446
score: 98.99647923519737
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) / $NUMBER$ < 0 ) {
rank: 446
score: 98.78890555245536
patch: if ( line 1 == null / * intersection . * / )
rank: 446
score: 98.55295138888889
patch: / * * * / / / /
rank: 446
score: 98.21301947699652
patch: else { / * / / * /
rank: 446
score: 97.91450718470982
patch: / / / / throw /
rank: 447
score: 99.34754435221355
patch: Line line $NUMBER$ = line $NUMBER$ . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 447
score: 99.33635397518383
patch: Line line $NUMBER$ 1 = get CaMeL Line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 447
score: 99.28866577148438
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) == this ) {
rank: 447
score: 99.25501302083333
patch: int intersection $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 447
score: 98.99623736213235
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < intersection ) {
rank: 447
score: 98.7884521484375
patch: if ( intersection != null && line $NUMBER$ . get CaMeL Line CaMeL Number ( ) != 0 )
rank: 447
score: 98.5527587890625
patch: / * / * / / int * /
rank: 447
score: 98.21284484863281
patch: final List / * * * /
rank: 447
score: 97.91334533691406
patch: / / / / throw / compute
rank: 448
score: 99.42140151515152
patch: Line line $NUMBER$ += sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 448
score: 99.34734143708882
patch: Line line $NUMBER$ = ( Line . ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 448
score: 99.33599853515625
patch: Space line $NUMBER$ = ( Region ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 448
score: 99.28852844238281
patch: if ( sub CaMeL Line . get CaMeL Length ( ) > 0 ) {
rank: 448
score: 99.25486845128677
patch: int line $NUMBER$ = sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ;
rank: 448
score: 98.9958724975586
patch: switch ( line 1 . get CaMeL Offset ( ) ) { case 1 :
rank: 448
score: 98.78836059570312
patch: if ( line $NUMBER$ . is CaMeL Empty ( ) )
rank: 448
score: 98.55248413085937
patch: / * / / / int intersection * /
rank: 448
score: 98.21210394965277
patch: intersection ( intersection ( intersection ( intersection )
rank: 448
score: 97.91278076171875
patch: / / / / *
rank: 449
score: 99.42137192234848
patch: Line line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 449
score: 99.34719613882211
patch: String line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 449
score: 99.33599446614583
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( line $NUMBER$ ) ;
rank: 449
score: 99.288466796875
patch: this . include CaMeL End CaMeL Points = line 1 . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space (
rank: 449
score: 99.25478690011161
patch: if ( include CaMeL End CaMeL Points && line $NUMBER$ == null )
rank: 449
score: 98.99553366268383
patch: if ( line $NUMBER$ . index CaMeL Of ( $STRING$ ) <= - 1 ) {
rank: 449
score: 98.78789411272321
patch: if ( intersection == null / * / ) { / * /
rank: 449
score: 98.55245361328124
patch: / * * / * / int * /
rank: 449
score: 98.21157400948661
patch: / / in * * /
rank: 449
score: 97.91204833984375
patch: / / / / case / /
rank: 450
score: 99.34716118706598
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 450
score: 99.33585357666016
patch: line $NUMBER$ . intersection ( line 1 . intersection ( line $NUMBER$ ) ) ;
rank: 450
score: 99.28803846571181
patch: Expression line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 450
score: 99.25450942095588
patch: String line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 450
score: 98.994873046875
patch: if ( line $NUMBER$ . size ( ) > line 1 . size ( ) ) {
rank: 450
score: 98.7875732421875
patch: final char [ ] intersection = new char [ intersection . length ] ;
rank: 450
score: 98.55138549804687
patch: / * / int * / int * /
rank: 450
score: 98.21080017089844
patch: boolean / * * * / /
rank: 450
score: 97.91150665283203
patch: / / / try / / compute
rank: 451
score: 99.4213623046875
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) + sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 451
score: 99.34702962239584
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 451
score: 99.254150390625
patch: if ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) != $STRING$ ) {
rank: 451
score: 98.99346454326923
patch: if ( line 1 != null && line 1 != null )
rank: 451
score: 97.91015625
patch: / / / / System /
rank: 452
score: 99.42116783405173
patch: if ( line 1 . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ) {
rank: 452
score: 99.34684507308468
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , 0 ) ;
rank: 452
score: 99.28779432508681
patch: char line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 452
score: 99.25324563419117
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) != 0 ) {
rank: 452
score: 98.99264187282986
patch: if ( line 1 . get CaMeL Location ( ) . equals ( line 1 ) )
rank: 452
score: 98.78744741586539
patch: if ( line $NUMBER$ == null ) { return null ; }
rank: 452
score: 98.5500732421875
patch: / * / / * / / / *
rank: 452
score: 98.20928192138672
patch: / / / * * / /
rank: 452
score: 97.91004943847656
patch: / / / / / System /
rank: 453
score: 99.42095736799568
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . get CaMeL Hyperplane ( ) ) ;
rank: 453
score: 99.34673247466216
patch: = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 453
score: 99.3348388671875
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Line $NUMBER$ Region ( ) ;
rank: 453
score: 99.28745524088542
patch: Member line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 453
score: 99.25322723388672
patch: Line line $NUMBER$ = ( Line ) 0 . get CaMeL Hyperplane ( ) ;
rank: 453
score: 98.78741096047794
patch: if ( intersection . is CaMeL Empty ( ) ) { / * * / /
rank: 453
score: 98.5498779296875
patch: / * / / * / / / compute
rank: 453
score: 98.20918273925781
patch: / * * / * / }
rank: 453
score: 97.90800476074219
patch: / / / / int / compute
rank: 454
score: 99.42088939525463
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . intersection ( sub CaMeL Line ) ;
rank: 454
score: 99.34665934244792
patch: if ( include CaMeL End CaMeL Points ) { sub CaMeL Line = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 454
score: 99.28725179036458
patch: if ( include CaMeL End CaMeL Points ) { if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points )
rank: 454
score: 99.25294404871323
patch: Line line $NUMBER$ = ( Line 1 . intersection ( sub CaMeL Line ) ) ;
rank: 454
score: 98.99167767693015
patch: if ( line 1 . equals CaMeL Ignore CaMeL Case ( line 1 ) ) {
rank: 454
score: 98.78599717881944
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < line $NUMBER$ / /
rank: 454
score: 98.20832824707031
patch: else { / * * / /
rank: 454
score: 97.90777587890625
patch: / / / else /
rank: 455
score: 99.42076619466145
patch: final boolean include CaMeL End CaMeL Points = line 1 . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 455
score: 98.99057345920139
patch: Array CaMeL List intersection = new Array CaMeL List ( intersection . size ( ) ) ;
rank: 455
score: 98.7857157389323
patch: String [ ] intersection = new String [ 1 ] ;
rank: 455
score: 98.54841918945313
patch: / * * * / * / * /
rank: 455
score: 98.2080078125
patch: if ( intersection / || intersection )
rank: 455
score: 97.9072036743164
patch: / / / / / int line
rank: 456
score: 99.42061614990234
patch: if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Remaining CaMeL Region ( ) ) {
rank: 456
score: 99.33453369140625
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Length ( ) ;
rank: 456
score: 99.28698012408088
patch: if ( include CaMeL End CaMeL Points ) { return get CaMeL Hyperplane ( ) ;
rank: 456
score: 99.25281700721153
patch: if ( line $NUMBER$ . size ( ) > 0 ) {
rank: 456
score: 98.990234375
patch: if ( line 1 . is CaMeL Na CaMeL N ( ) ) {
rank: 456
score: 98.78533528645833
patch: if ( intersection . size ( ) == 0 / * / ) {
rank: 456
score: 98.54822998046875
patch: / * / / / int / / compute
rank: 456
score: 98.20773315429688
patch: if / * / } / /
rank: 456
score: 97.90708923339844
patch: / / / if / / /
rank: 457
score: 99.42047674005681
patch: Line line $NUMBER$ = ( Line ) get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 457
score: 99.34599345439189
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 457
score: 99.285341796875
patch: this . line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ;
rank: 457
score: 99.25187174479167
patch: Line line $NUMBER$ = line 1 . intersection ( sub CaMeL Line ) ;
rank: 457
score: 98.98990631103516
patch: if ( line 1 . get CaMeL Line ( ) == - 1 ) {
rank: 457
score: 98.7846210186298
patch: Array CaMeL List list = new Array CaMeL List ( ) ;
rank: 457
score: 98.54730902777777
patch: / * * / / / / /
rank: 457
score: 98.20689392089844
patch: } else { if / * /
rank: 457
score: 97.90657043457031
patch: / / { / / / *
rank: 458
score: 99.42035381610577
patch: final boolean include CaMeL End CaMeL Points = ( sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 458
score: 99.34548950195312
patch: Line line $NUMBER$ = line 1 . get CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 458
score: 99.33435736762152
patch: Data line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 458
score: 99.2852199388587
patch: if ( include CaMeL End CaMeL Points && line 1 . get CaMeL Remaining CaMeL Region ( ) == null ) {
rank: 458
score: 99.25177408854167
patch: int intersection 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 458
score: 98.98935953776042
patch: if ( line $NUMBER$ . length ( ) > line 1 . length ( ) ) {
rank: 458
score: 98.78450520833333
patch: if ( line $NUMBER$ . get CaMeL Length ( ) == 0 ) { / * /
rank: 458
score: 98.54724799262152
patch: / * / int / / * /
rank: 458
score: 97.90615844726562
patch: / / System / / / compute
rank: 459
score: 99.42029296875
patch: line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 459
score: 99.34542768429488
patch: Sub CaMeL Line sub CaMeL Line = ( Sub CaMeL Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 459
score: 99.33373305376838
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Line ( )
rank: 459
score: 99.28502478966347
patch: int line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 459
score: 99.25163717830883
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . contains ( line $NUMBER$ )
rank: 459
score: 98.98902994791666
patch: if ( line 1 . get CaMeL Length ( ) == 0 ) {
rank: 459
score: 98.546923828125
patch: / * / / / / System . /
rank: 459
score: 97.90574645996094
patch: / / List / / / /
rank: 460
score: 99.34530300564236
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line ) ) ;
rank: 460
score: 99.33308919270833
patch: Region line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line ( ) ;
rank: 460
score: 99.28498641304348
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) == $STRING$ )
rank: 460
score: 98.98890686035156
patch: if ( line $NUMBER$ . char CaMeL At ( 0 ) != $STRING$ ) {
rank: 460
score: 98.78432210286458
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 460
score: 98.54627336774554
patch: / * ] * / /
rank: 460
score: 98.20497639973958
patch: / * intersection * /
rank: 460
score: 97.90486145019531
patch: this / / / / / /
rank: 461
score: 99.42010904947917
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Hyperplane ( ) ) ;
rank: 461
score: 99.34529876708984
patch: int line $NUMBER$ = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 461
score: 99.33300063189338
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ; / *
rank: 461
score: 99.2512435913086
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) != 0 )
rank: 461
score: 98.98773552389706
patch: if ( line $NUMBER$ . get CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 461
score: 98.78420122931985
patch: if ( intersection . is CaMeL Empty ( line $NUMBER$ ) / * / ) {
rank: 461
score: 98.20301818847656
patch: if ( intersection ) { / }
rank: 461
score: 97.90400390625
patch: } / / /
rank: 462
score: 99.41986638849431
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( ) ;
rank: 462
score: 99.3450362042683
patch: final boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 462
score: 99.33256261488971
patch: Line start = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 462
score: 99.28414212740384
patch: this . sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( ) ;
rank: 462
score: 98.78416532628677
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) == null ) {
rank: 462
score: 98.5449951171875
patch: / * / / * / System . /
rank: 462
score: 98.20295545789931
patch: if / * * * / break /
rank: 462
score: 97.90354919433594
patch: / / / / / / set
rank: 463
score: 99.283974609375
patch: this . include CaMeL End CaMeL Points = line 1 . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 463
score: 98.98589409722223
patch: if ( line 1 . index CaMeL Of ( line 1 ) > - 1 ) {
rank: 463
score: 98.78413391113281
patch: Object [ ] intersection = new Object [ intersection . length ] / * /
rank: 463
score: 98.54413452148438
patch: / * / / / / int / /
rank: 463
score: 98.20268903459821
patch: if ( intersection != null )
rank: 463
score: 97.9026870727539
patch: intersection / * / / / compute
rank: 464
score: 99.41932779947916
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ) ;
rank: 464
score: 99.34499162946429
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 464
score: 99.33220757378473
patch: Line line $NUMBER$ = ( final ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 464
score: 99.283935546875
patch: proc = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 464
score: 98.78391335227273
patch: if ( intersection . size ( ) == 0 )
rank: 464
score: 98.20225524902344
patch: if / * * / / }
rank: 464
score: 97.90196990966797
patch: / / / / / break /
rank: 465
score: 99.41836547851562
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 465
score: 99.33169376148896
patch: String line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( )
rank: 465
score: 99.28389115767045
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space (
rank: 465
score: 98.983642578125
patch: if ( line 1 . compare CaMeL To ( line 1 ) < 0 )
rank: 465
score: 98.54368286132812
patch: / / System . / / / / {
rank: 465
score: 98.20191955566406
patch: if / / * * * /
rank: 465
score: 97.90180969238281
patch: long / / / / / /
rank: 466
score: 99.41806466238839
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 466
score: 99.24956868489583
patch: int line $NUMBER$ = sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 466
score: 98.78307291666667
patch: if ( line $NUMBER$ . get CaMeL Length ( ) == 0 ) {
rank: 466
score: 98.54226345486111
patch: / * / int * * / line
rank: 466
score: 98.20143432617188
patch: / * / }
rank: 466
score: 97.90177154541016
patch: / / / / / { compute
rank: 467
score: 99.33124138327206
patch: Line line $NUMBER$ 1 = get CaMeL Line 1 . intersection ( line $NUMBER$ ) ;
rank: 467
score: 99.283427734375
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . length == 0 )
rank: 467
score: 99.24954223632812
patch: if ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) != $STRING$ )
rank: 467
score: 98.98199103860294
patch: if ( line 1 . length ( ) > line 1 . length ( ) )
rank: 467
score: 98.78302680121527
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) < line $NUMBER$ / /
rank: 467
score: 98.54141845703126
patch: / / / int * / / / /
rank: 467
score: 98.20121547154018
patch: final List * * * /
rank: 467
score: 97.90158081054688
patch: / break / / / / /
rank: 468
score: 99.41750863882211
patch: sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 468
score: 99.249072265625
patch: if ( include CaMeL End CaMeL Points && line $NUMBER$ == null ) {
rank: 468
score: 98.98085530598958
patch: if ( line 1 . index CaMeL Of ( line $NUMBER$ ) > - 1 ) {
rank: 468
score: 98.7827880859375
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( / * intersection * / /
rank: 468
score: 98.54109700520833
patch: / * / / / System . /
rank: 468
score: 98.20118931361607
patch: if / / * * /
rank: 468
score: 97.90094757080078
patch: / / compute
rank: 469
score: 99.41731770833333
patch: loc 1 = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 469
score: 99.3442626953125
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 469
score: 99.28318481445312
patch: this . include CaMeL End CaMeL Points = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ;
rank: 469
score: 99.24819510323661
patch: if ( line $NUMBER$ != null && include CaMeL End CaMeL Points )
rank: 469
score: 98.97994559151786
patch: if ( line 1 . starts CaMeL With ( $STRING$ ) ) {
rank: 469
score: 98.78271484375
patch: if ( line $NUMBER$ != null ) { / * / /
rank: 469
score: 98.54079182942708
patch: / * / / * * / }
rank: 469
score: 98.20114474826389
patch: if ( intersection ( intersection ) / }
rank: 469
score: 97.90025983537946
patch: / / } / / compute
rank: 470
score: 99.41727447509766
patch: String line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 470
score: 99.34390419407895
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 470
score: 99.32846248851104
patch: Line line 1 = sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ;
rank: 470
score: 99.28288130326705
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) != null && include CaMeL End CaMeL Points ) {
rank: 470
score: 99.2481689453125
patch: if ( line $NUMBER$ . size ( ) > 0 )
rank: 470
score: 98.97987467447916
patch: / * / throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 470
score: 98.7817891438802
patch: if ( line 1 == null ) { / * /
rank: 470
score: 98.54059448242188
patch: / / int } / / / / /
rank: 470
score: 98.20040130615234
patch: if / * * / / /
rank: 470
score: 97.89984893798828
patch: / / finally / / / /
rank: 471
score: 99.41696166992188
patch: if ( sub CaMeL Line . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ) {
rank: 471
score: 99.32818603515625
patch: String line $NUMBER$ 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 471
score: 99.28275792738971
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) == this ) {
rank: 471
score: 99.24810384114583
patch: Object line $NUMBER$ = get CaMeL Remaining CaMeL Region ( line $NUMBER$ ) ;
rank: 471
score: 98.78154440487133
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) <= 0 )
rank: 471
score: 98.5396728515625
patch: / * * int * * / /
rank: 471
score: 98.20025634765625
patch: if ( intersection ( intersection ( intersection
rank: 471
score: 97.8989486694336
patch: / / / return / / /
rank: 472
score: 99.41691080729167
patch: Line line $NUMBER$ = ( Line ) get CaMeL Remaining CaMeL Region ( line 1 ) ;
rank: 472
score: 99.34346516927083
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . intersection ( get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 472
score: 99.28270263671875
patch: / * else line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 472
score: 99.2479019165039
patch: final Object line $NUMBER$ = sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 472
score: 98.97859700520833
patch: if ( line 1 . get CaMeL Location ( ) . equals ( intersection ) ) {
rank: 472
score: 98.78135329026442
patch: int size = line $NUMBER$ . get CaMeL Length ( ) ;
rank: 472
score: 98.53951263427734
patch: / * * / / / /
rank: 472
score: 98.20022243923611
patch: if / / final / / * /
rank: 472
score: 97.89884185791016
patch: / / / / / throw /
rank: 473
score: 99.41682703354779
patch: Line line $NUMBER$ = ( Line ) check CaMeL Point ( sub CaMeL Line ) ;
rank: 473
score: 99.32688993566177
patch: Line line 1 1 = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 473
score: 99.28260562294408
patch: this . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 473
score: 98.978515625
patch: if ( line 1 . get CaMeL Line ( ) . length ( ) > 0 )
rank: 473
score: 98.78125718060662
patch: if ( intersection ( line 1 , include CaMeL End CaMeL Points ) / * /
rank: 473
score: 98.539111328125
patch: / * / / / * * * /
rank: 473
score: 98.19927106584821
patch: / / / * * /
rank: 473
score: 97.89812469482422
patch: return / / / / / compute
rank: 474
score: 99.41669921875
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 474
score: 99.34296013327206
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( 0 ) ) ;
rank: 474
score: 99.32683563232422
patch: String line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 474
score: 99.28260294596355
patch: if ( include CaMeL End CaMeL Points || sub CaMeL Line . get CaMeL Hyperplane ( ) . length > 0 ) {
rank: 474
score: 99.24773406982422
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line $NUMBER$ != null )
rank: 474
score: 98.97726779513889
patch: if ( line 1 . get CaMeL Line ( ) . equals ( line 1 ) )
rank: 474
score: 98.78092193603516
patch: if ( intersection ( line 1 , include CaMeL End CaMeL Points ) ) {
rank: 474
score: 98.53889770507813
patch: / / * * * * * / /
rank: 474
score: 98.198974609375
patch: final Array CaMeL List / * * /
rank: 474
score: 97.89786202566964
patch: / if / / / /
rank: 475
score: 99.41662109375
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( this ) ;
rank: 475
score: 99.3428955078125
patch: Line sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 475
score: 99.3267822265625
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Location ( )
rank: 475
score: 99.28241930509868
patch: return ( ( Sub CaMeL Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 475
score: 99.24767194475446
patch: Object line $NUMBER$ = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 475
score: 98.97706604003906
patch: if ( line $NUMBER$ . char CaMeL At ( 0 ) == $STRING$ ) {
rank: 475
score: 98.78076171875
patch: if ( line 1 != null && line $NUMBER$ . is CaMeL Empty ( ) ) {
rank: 475
score: 98.19837951660156
patch: / / * * / * /
rank: 475
score: 97.89715576171875
patch: assert / / / / / /
rank: 476
score: 99.342529296875
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 476
score: 99.32605794270833
patch: int line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 476
score: 99.24704811789773
patch: if ( sub CaMeL Line $NUMBER$ == null ) {
rank: 476
score: 98.97673797607422
patch: if ( line 1 . compare CaMeL To ( line $NUMBER$ ) < 0 )
rank: 476
score: 98.78036499023438
patch: double [ ] intersection = new double [ intersection . length / $NUMBER$ ] ;
rank: 476
score: 98.53812662760417
patch: / / int / / * / /
rank: 476
score: 98.197998046875
patch: if ( intersection ) { / /
rank: 476
score: 97.89698791503906
patch: / / double / / / compute
rank: 477
score: 99.416259765625
patch: / * * / Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 477
score: 99.34241536458333
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , ) ;
rank: 477
score: 99.32561896829044
patch: Line line 1 = ( Line ) line 1 . get CaMeL Line ( ) ;
rank: 477
score: 99.28191583806819
patch: if ( include CaMeL End CaMeL Points && line 1 . get CaMeL Remaining CaMeL Region ( ) . get CaMeL
rank: 477
score: 98.97669982910156
patch: switch ( line 1 . get CaMeL Location ( ) ) { case 0 :
rank: 477
score: 98.78021647135417
patch: if ( intersection ( line $NUMBER$ , include CaMeL End CaMeL Points ) )
rank: 477
score: 98.19784545898438
patch: if ( intersection ( intersection ) {
rank: 477
score: 97.89665985107422
patch: public / * / / / /
rank: 478
score: 99.4162109375
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Hyperplane ( ) ;
rank: 478
score: 99.34218878495066
patch: Line get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 478
score: 99.32495880126953
patch: Line line $NUMBER$ 1 = line 1 . intersection ( sub CaMeL Line ) ;
rank: 478
score: 99.28171900699013
patch: if ( sub CaMeL Line . get CaMeL Name ( ) . equals ( $STRING$ ) ) {
rank: 478
score: 99.24573567708333
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . line 1 ;
rank: 478
score: 98.77936868106617
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( line 1 . / $NUMBER$ )
rank: 478
score: 98.53753662109375
patch: / * int / / / * / /
rank: 478
score: 98.1961669921875
patch: if ( intersection ) { break ; }
rank: 478
score: 97.89521026611328
patch: / { / / { / /
rank: 479
score: 99.34213169642857
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 479
score: 99.32450597426471
patch: Line line $NUMBER$ 1 $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 479
score: 99.28169519761029
patch: this . line 1 = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 479
score: 99.24485677083334
patch: Line line $NUMBER$ = ( Line 1 . get CaMeL Hyperplane ( ) )
rank: 479
score: 98.53480834960938
patch: / * / / / * / / *
rank: 479
score: 98.19403948102679
patch: / * * ? * /
rank: 479
score: 97.89511544363839
patch: / / / / { compute
rank: 480
score: 99.41611735026042
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 480
score: 99.28128814697266
patch: while ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 480
score: 99.24484252929688
patch: if ( include CaMeL End CaMeL Points && ! include CaMeL End CaMeL Points )
rank: 480
score: 98.77883911132812
patch: Object [ ] intersection = new Object [ intersection . intersection ( ) ] ;
rank: 480
score: 98.53175659179688
patch: / * / * * / int * /
rank: 480
score: 98.19371032714844
patch: / * / int / * /
rank: 480
score: 97.894775390625
patch: / / / -- / / /
rank: 481
score: 99.41600545247395
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point (
rank: 481
score: 99.34148297991071
patch: Line - 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 481
score: 99.32322064568015
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line . sub CaMeL Line ;
rank: 481
score: 99.2812732514881
patch: if ( line $NUMBER$ != null && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 481
score: 99.244580078125
patch: Line sub CaMeL Line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 481
score: 98.97522989908855
patch: / * / if ( line 1 != null ) {
rank: 481
score: 98.77874348958333
patch: if ( / * intersection . is CaMeL Empty ( ) * / )
rank: 481
score: 98.53105163574219
patch: / * / * / / /
rank: 481
score: 98.19336700439453
patch: if / * / * / }
rank: 481
score: 97.89472198486328
patch: / / / / -- / /
rank: 482
score: 99.4157958984375
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get ( line $NUMBER$ ) ;
rank: 482
score: 99.28118896484375
patch: for ( String line 1 : sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 482
score: 99.24413045247395
patch: try { if ( include CaMeL End CaMeL Points ) {
rank: 482
score: 98.97438677619485
patch: if ( line 1 . size ( ) > line $NUMBER$ . size ( ) )
rank: 482
score: 98.77873992919922
patch: if ( / * intersection . is CaMeL Empty ( ) * / / )
rank: 482
score: 98.19331190321181
patch: if / * / / * * /
rank: 482
score: 97.89405059814453
patch: final / / / / / /
rank: 483
score: 99.34112548828125
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . to CaMeL Sub CaMeL Space (
rank: 483
score: 99.32272135416666
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( line 1 ) ;
rank: 483
score: 99.28099365234375
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) . include CaMeL End CaMeL Points )
rank: 483
score: 98.97427368164062
patch: / * throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; * /
rank: 483
score: 98.77837775735294
patch: List < String > intersection = new Array CaMeL List < String > ( ) ;
rank: 483
score: 98.52927856445312
patch: / * / / * * * * /
rank: 483
score: 98.19179958767361
patch: if / * / * / * /
rank: 483
score: 97.89175851004464
patch: / / { / { /
rank: 484
score: 99.41561126708984
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 484
score: 99.34108664772727
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , ) ;
rank: 484
score: 99.3212890625
patch: Line line $NUMBER$ 1 = line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) ;
rank: 484
score: 99.28090122767857
patch: / * if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 484
score: 99.24361478365384
patch: get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 484
score: 98.97338104248047
patch: if ( intersection != null && intersection . is CaMeL Empty ( ) ) {
rank: 484
score: 98.77813313802083
patch: if ( line $NUMBER$ . intersection ( line $NUMBER$ ) / * / /
rank: 484
score: 98.19179861886161
patch: try { / * / /
rank: 484
score: 97.89019775390625
patch: / } / / / / /
rank: 485
score: 99.2808837890625
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) == $STRING$ ) {
rank: 485
score: 99.24281311035156
patch: try { Line line $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 485
score: 98.97266303168402
patch: if ( line 1 . size ( ) < line 1 . size ( ) ) {
rank: 485
score: 98.77802590762867
patch: String [ ] intersection = new String [ line $NUMBER$ . size ( ) ] ;
rank: 485
score: 98.52811889648437
patch: / * / / / / / / compute
rank: 485
score: 98.19158935546875
patch: try { intersection / * /
rank: 485
score: 97.88847351074219
patch: / / { / / / int
rank: 486
score: 99.41533045614919
patch: return ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 486
score: 99.3204345703125
patch: Line line $NUMBER$ = line 1 . get CaMeL Line ( ) ;
rank: 486
score: 99.28080078125
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) == line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) )
rank: 486
score: 99.24256896972656
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) == $STRING$ ) {
rank: 486
score: 98.97259521484375
patch: if ( line 1 . to CaMeL String ( ) . equals ( $STRING$ ) / /
rank: 486
score: 98.77785357306985
patch: if ( intersection . is CaMeL Empty ( ) ) { return / * / /
rank: 486
score: 98.52730102539063
patch: / * / / * int * / /
rank: 486
score: 98.19109235491071
patch: if ( intersection ) { }
rank: 486
score: 97.88540649414062
patch: / / / * / / compute
rank: 487
score: 99.41494315011161
patch: Line line $NUMBER$ = ( Line ) this . sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 ) ;
rank: 487
score: 99.34067170516305
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) : get CaMeL Remaining CaMeL Region ( ) ;
rank: 487
score: 99.3203125
patch: Line line $NUMBER$ = get CaMeL Line $NUMBER$ . intersection ( line 1 ) ;
rank: 487
score: 99.280205078125
patch: if ( this . include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) == null )
rank: 487
score: 99.24224446614583
patch: final Line line $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 487
score: 98.97212219238281
patch: if ( line 1 != null && line $NUMBER$ . length > 0 ) {
rank: 487
score: 98.77666558159723
patch: if ( intersection == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / /
rank: 487
score: 98.5259521484375
patch: / / / System . / / / /
rank: 487
score: 98.1902084350586
patch: / / if ( intersection ) {
rank: 487
score: 97.88511439732143
patch: / / { / * /
rank: 488
score: 99.41487367691532
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Space ( ) ) ;
rank: 488
score: 99.34031883445945
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( 0 ) ) ;
rank: 488
score: 99.31925201416016
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( )
rank: 488
score: 98.97159152560764
patch: if ( line 1 . size ( ) <= line 1 . size ( ) ) {
rank: 488
score: 98.77651798023896
patch: if ( intersection . is CaMeL Empty ( ) / * / / / * /
rank: 488
score: 98.5251220703125
patch: / * / int * * / / line
rank: 488
score: 98.19014485677083
patch: intersection / * * /
rank: 488
score: 97.88465118408203
patch: / / / final / / compute
rank: 489
score: 99.41460217927632
patch: else { line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 489
score: 99.340263671875
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . to CaMeL Sub CaMeL Space ( )
rank: 489
score: 99.24038899739584
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) == $STRING$ )
rank: 489
score: 98.97110748291016
patch: if ( line $NUMBER$ . index CaMeL Of ( $STRING$ ) > - 1 )
rank: 489
score: 98.77554524739584
patch: int [ ] intersection = new int [ line 1 . length ] ;
rank: 489
score: 98.52503051757813
patch: / * / / / System . * /
rank: 489
score: 98.18982805524554
patch: / * int intersection * /
rank: 489
score: 97.88445172991071
patch: / / boolean / / compute
rank: 490
score: 99.4142822265625
patch: else { line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; }
rank: 490
score: 99.31751924402573
patch: Line line $NUMBER$ 1 = line 1 . check CaMeL Point ( line 1 ) ;
rank: 490
score: 99.27959526909723
patch: Term line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 490
score: 99.24027506510417
patch: long line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 490
score: 98.97073567708334
patch: if ( line $NUMBER$ . get CaMeL Length ( ) > 0 ) {
rank: 490
score: 98.52340359157986
patch: / * * * / / * /
rank: 490
score: 98.18927001953125
patch: } if / * * * /
rank: 490
score: 97.88427734375
patch: / / / / / / double
rank: 491
score: 99.41421508789062
patch: String line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 491
score: 99.33994012129934
patch: private Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 491
score: 99.31594669117646
patch: Line line $NUMBER$ = ( Line ) get CaMeL Remaining CaMeL Region ( ) != null
rank: 491
score: 99.27928466796875
patch: this . sub CaMeL Line = line 1 . to CaMeL Sub CaMeL Space ( line $NUMBER$ ) ;
rank: 491
score: 99.24015590122768
patch: = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 491
score: 98.97071838378906
patch: if ( line 1 . get CaMeL Location ( ) == - 1 ) {
rank: 491
score: 98.77501678466797
patch: if ( intersection . is CaMeL Empty ( ) ) { / * * /
rank: 491
score: 98.5232177734375
patch: / * ] / / * * / /
rank: 491
score: 98.1878890991211
patch: / / * / / * /
rank: 491
score: 97.88298034667969
patch: / / - / / / /
rank: 492
score: 99.41409400201613
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Remaining CaMeL Region ( )
rank: 492
score: 99.27880045572917
patch: if ( line 1 == null || include CaMeL End CaMeL Points ) {
rank: 492
score: 99.23950958251953
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line $NUMBER$ == null )
rank: 492
score: 98.97063530815973
patch: if ( line 1 . get CaMeL Line ( ) . size ( ) > 0 )
rank: 492
score: 98.77457682291667
patch: intersection ( intersection ( line $NUMBER$ , include CaMeL End CaMeL Points ) / * / /
rank: 492
score: 98.52271185980902
patch: / * / / * * / *
rank: 492
score: 98.18687438964844
patch: if / / char * * /
rank: 492
score: 97.88224487304687
patch: / / / try
rank: 493
score: 99.41371556332237
patch: return intersection ( sub CaMeL Line , sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 493
score: 99.33946736653645
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 , line $NUMBER$ ) ;
rank: 493
score: 99.31553739659927
patch: Line line $NUMBER$ . intersection ( line $NUMBER$ . intersection ( line $NUMBER$ ) ) ;
rank: 493
score: 99.23861490885416
patch: if ( include CaMeL End CaMeL Points || line $NUMBER$ != null ) {
rank: 493
score: 98.97029113769531
patch: if ( line $NUMBER$ . get CaMeL Line ( ) != - 1 ) {
rank: 493
score: 98.77438790457589
patch: if ( line $NUMBER$ == null || line $NUMBER$ == null ) {
rank: 493
score: 98.52264404296875
patch: / / int * / / / /
rank: 493
score: 98.18646850585938
patch: / * / else
rank: 493
score: 97.88088989257812
patch: protected / / / / / /
rank: 494
score: 99.41371256510416
patch: Line line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 494
score: 99.3393322172619
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 494
score: 99.3153937844669
patch: Sub CaMeL Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 494
score: 99.27846457741477
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) == null ) {
rank: 494
score: 98.96986389160156
patch: if ( line 1 . get CaMeL Location ( ) != - 1 ) {
rank: 494
score: 98.77416120256696
patch: final int size = line $NUMBER$ . get CaMeL Size ( ) ;
rank: 494
score: 98.52200927734376
patch: / * / / * int * * /
rank: 494
score: 98.18609619140625
patch: / / * * * / }
rank: 494
score: 97.87992858886719
patch: / / int } / / /
rank: 495
score: 99.4136493389423
patch: final Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 495
score: 99.3393310546875
patch: final Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 495
score: 99.27843560112848
patch: if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) == null ) {
rank: 495
score: 99.23794991629464
patch: if ( line 1 . get CaMeL Hyperplane ( ) != null )
rank: 495
score: 98.9698486328125
patch: switch ( line 1 . get CaMeL Line ( ) ) { case 1 :
rank: 495
score: 98.77398681640625
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == line 1 / /
rank: 495
score: 98.52181396484374
patch: / / * / / * / / /
rank: 495
score: 98.18599446614583
patch: else { / * /
rank: 495
score: 97.87943812779018
patch: return / / / / /
rank: 496
score: 99.41363166360294
patch: Line line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) ; / * /
rank: 496
score: 99.33846885279605
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; Line
rank: 496
score: 99.31474752987133
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Name ( )
rank: 496
score: 99.27829461348684
patch: if ( include CaMeL End CaMeL Points ) { return get CaMeL Remaining CaMeL Region ( ) ;
rank: 496
score: 99.23770345052084
patch: = ( Line ) sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 496
score: 98.96830240885417
patch: if ( line 1 . get CaMeL Name ( ) . length ( ) > 0 )
rank: 496
score: 98.77393341064453
patch: if ( / * intersection . is CaMeL Empty ( ) * / ) /
rank: 496
score: 98.52159423828125
patch: / / * / * * / / /
rank: 496
score: 98.18577575683594
patch: final List / * * / /
rank: 496
score: 97.87926374162946
patch: / / if / / /
rank: 497
score: 99.33833644701087
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . intersection ( get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 497
score: 99.31336669921875
patch: line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 497
score: 99.2780697471217
patch: / * if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) != null )
rank: 497
score: 98.9674431295956
patch: / * throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + line 1 ) ;
rank: 497
score: 98.7738506610577
patch: if ( line $NUMBER$ == null ) { / * * /
rank: 497
score: 98.5199951171875
patch: / * * / * * * * /
rank: 497
score: 98.18535020616319
patch: String intersection = intersection / / * compute
rank: 497
score: 97.87457275390625
patch: / else / / /
rank: 498
score: 99.41321672712054
patch: line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 498
score: 99.33821217606707
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . get CaMeL Hyperplane ( ) ;
rank: 498
score: 99.31328268612133
patch: Line line $NUMBER$ = get CaMeL Line 1 . intersection ( sub CaMeL Line ) ;
rank: 498
score: 99.27783203125
patch: if ( include CaMeL End CaMeL Points && line 1 . get CaMeL Hyperplane ( ) != null )
rank: 498
score: 99.23674011230469
patch: Line line $NUMBER$ = ( Line 1 . intersection ( line $NUMBER$ ) ) ;
rank: 498
score: 98.96732584635417
patch: if ( line 1 . get CaMeL Location ( ) . length ( ) > 0 )
rank: 498
score: 98.7731574563419
patch: if ( intersection . is CaMeL Empty ( ) ) { return new / * /
rank: 498
score: 98.5195068359375
patch: / * * * / * / / /
rank: 498
score: 98.18475341796875
patch: / * * / } / /
rank: 498
score: 97.87430826822917
patch: / / / / check
rank: 499
score: 99.33820134943181
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 499
score: 99.31250939002403
patch: Location line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 499
score: 99.2776171875
patch: this . line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 499
score: 99.23661804199219
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 499
score: 98.96717180524554
patch: if ( line 1 == null || line 1 != null ) {
rank: 499
score: 98.772705078125
patch: if ( intersection == null / * intersection * / / )
rank: 499
score: 98.51825629340277
patch: / * / * / * / *
rank: 499
score: 98.18440755208333
patch: / * * * * * / }
rank: 499
score: 97.87379455566406
patch: / / / / / final /
rank: 500
score: 99.41302734375
patch: if ( line $NUMBER$ . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Line ( ) ) {
rank: 500
score: 99.31247127757354
patch: Line line $NUMBER$ 1 = get CaMeL Line 1 . get CaMeL Hyperplane ( ) ;
rank: 500
score: 99.27754350142045
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL
rank: 500
score: 99.2364730834961
patch: Line line $NUMBER$ = ( Line ) null . get CaMeL Hyperplane ( ) ;
rank: 500
score: 98.96614343979779
patch: if ( line 1 . is CaMeL Empty ( ) ) { return null ; }
rank: 500
score: 98.77223557692308
patch: if ( line $NUMBER$ == null / * intersection * / /
rank: 500
score: 98.51824340820312
patch: / * / int * * / } /
rank: 500
score: 98.18348039899554
patch: / * ? * * /
rank: 500
score: 97.87378692626953
patch: / boolean / / / / /
rank: 501
score: 99.41296807650862
patch: if ( line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ) {
rank: 501
score: 99.33769030448718
patch: Sub CaMeL Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 501
score: 99.31244973575367
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . equals ( line $NUMBER$ )
rank: 501
score: 99.2775370279948
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && line 1 . include CaMeL End CaMeL Points )
rank: 501
score: 99.23427124023438
patch: if ( sub CaMeL Line > 0 ) {
rank: 501
score: 98.77147674560547
patch: if ( line $NUMBER$ . is CaMeL Empty ( ) / * / ) {
rank: 501
score: 98.51791381835938
patch: / * / / * / * / *
rank: 501
score: 98.18342590332031
patch: try { / * * * /
rank: 501
score: 97.87361907958984
patch: return / { / / / /
rank: 502
score: 99.41295934606481
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 502
score: 99.33739494554925
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( 0 ) ) ;
rank: 502
score: 99.31202799479166
patch: Line line 1 1 = line 1 . intersection ( line $NUMBER$ ) ;
rank: 502
score: 99.2774658203125
patch: / * if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 502
score: 99.23396809895833
patch: Line line $NUMBER$ = ( Line $NUMBER$ ) get CaMeL Hyperplane ( ) ;
rank: 502
score: 98.96369764539931
patch: if ( line 1 == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$
rank: 502
score: 98.51731567382812
patch: / * / / * / } / /
rank: 502
score: 98.18263462611607
patch: if ( intersection ) { intersection
rank: 502
score: 97.8726806640625
patch: / / double / / /
rank: 503
score: 99.41274729082662
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Array ( ) ) ;
rank: 503
score: 99.31092026654412
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Chars ( )
rank: 503
score: 99.2334976196289
patch: int line $NUMBER$ = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ;
rank: 503
score: 98.96209309895833
patch: if ( line $NUMBER$ . get CaMeL Location ( ) != null ) {
rank: 503
score: 98.77099609375
patch: if ( line $NUMBER$ == null || line $NUMBER$ != null )
rank: 503
score: 98.51697998046875
patch: / / * / * / / / /
rank: 503
score: 98.18142361111111
patch: if ( intersection / * * / /
rank: 503
score: 97.87244415283203
patch: / / / char / / /
rank: 504
score: 99.41271578881049
patch: final boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 504
score: 99.33675130208333
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 504
score: 99.31067612591912
patch: Line - 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 504
score: 99.27730305989583
patch: if ( this . include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) != null ) {
rank: 504
score: 99.23273468017578
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) != $STRING$ )
rank: 504
score: 98.96170806884766
patch: if ( line 1 . length > line 1 . length / $NUMBER$ ) {
rank: 504
score: 98.77096896701389
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) > 0 ) {
rank: 504
score: 98.51697998046875
patch: / / int / / / * / /
rank: 504
score: 98.18114471435547
patch: / / / * * * /
rank: 504
score: 97.87179565429688
patch: / / / / this
rank: 505
score: 99.33648158482143
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 505
score: 99.3106689453125
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . intersection ( line $NUMBER$ )
rank: 505
score: 99.27604166666667
patch: Section line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 505
score: 98.96002604166667
patch: if ( line 1 . intersection ( line $NUMBER$ / $NUMBER$ ) ) {
rank: 505
score: 98.77060171274039
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( ) ;
rank: 505
score: 98.51693115234374
patch: / * / / int * / } /
rank: 505
score: 98.18098667689732
patch: if ( intersection ? intersection )
rank: 505
score: 97.8709945678711
patch: double / / / / / /
rank: 506
score: 99.33634660050676
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( $STRING$ ) ) ;
rank: 506
score: 99.276025390625
patch: if ( line $NUMBER$ != null || include CaMeL End CaMeL Points ) {
rank: 506
score: 99.23210906982422
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ; }
rank: 506
score: 98.95970865885417
patch: if ( line $NUMBER$ . get CaMeL Line ( ) != null ) {
rank: 506
score: 98.77047729492188
patch: String [ ] intersection = new String [ intersection . length ] / * /
rank: 506
score: 98.51630859375
patch: / * * / / int * * /
rank: 506
score: 98.18025207519531
patch: / * int * / } /
rank: 506
score: 97.86975969587054
patch: / / / int / /
rank: 507
score: 99.41232139185855
patch: Sub CaMeL Line line $NUMBER$ = ( Line ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 507
score: 99.3362325032552
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; sub CaMeL Line . add CaMeL
rank: 507
score: 99.3100814819336
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Line 1 ( ) ;
rank: 507
score: 99.27584838867188
patch: if ( include CaMeL End CaMeL Points ) { if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL
rank: 507
score: 99.23201751708984
patch: if ( line 1 . trim ( ) . length ( ) > 0 )
rank: 507
score: 98.9593146829044
patch: if ( line 1 . get CaMeL Line ( line 1 ) != null ) {
rank: 507
score: 98.77035861545139
patch: if ( line $NUMBER$ == null || line $NUMBER$ . is CaMeL Empty ( ) ) {
rank: 507
score: 98.51625366210938
patch: / int / / * / / / /
rank: 507
score: 98.17858123779297
patch: final / * * * / /
rank: 507
score: 97.8695068359375
patch: / / case / / / /
rank: 508
score: 99.4123004415761
patch: loc 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 508
score: 99.30928308823529
patch: Line line 1 = get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 508
score: 99.275830078125
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) ) {
rank: 508
score: 99.2315673828125
patch: Object line $NUMBER$ = sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 508
score: 98.95904900045956
patch: switch ( line 1 . get CaMeL Type ( ) ) { case line 1 :
rank: 508
score: 98.76995849609375
patch: final int [ ] intersection = new int [ line $NUMBER$ . size ( ) ] ;
rank: 508
score: 98.51588745117188
patch: / * / * * / * * /
rank: 508
score: 98.17856174045139
patch: / * / / { / * /
rank: 509
score: 99.4122314453125
patch: return line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 509
score: 99.27559988839286
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) { return sub CaMeL Line ;
rank: 509
score: 98.76861572265625
patch: if ( intersection == null ) throw new Illegal CaMeL Argument CaMeL Exception ( / * intersection
rank: 509
score: 98.51492309570312
patch: / * * / int * / * /
rank: 509
score: 98.17854817708333
patch: / / int * * / } /
rank: 509
score: 97.86846923828125
patch: / / / / double
rank: 510
score: 99.33599562872024
patch: Line get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 510
score: 99.30875396728516
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . check CaMeL Point (
rank: 510
score: 99.27552286783855
patch: Node line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 510
score: 99.229443359375
patch: Line line $NUMBER$ = ( Line ) get CaMeL Line 1 ( ) ;
rank: 510
score: 98.95887666590073
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) > - 1 )
rank: 510
score: 98.76826746323529
patch: if ( line $NUMBER$ . get CaMeL Length ( ) == 0 ) / * /
rank: 510
score: 98.51381138392857
patch: / * / System . /
rank: 510
score: 97.86796569824219
patch: / / / / / boolean /
rank: 511
score: 99.30766296386719
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) ;
rank: 511
score: 99.27504595588235
patch: / * if ( include CaMeL End CaMeL Points || include CaMeL End CaMeL Points )
rank: 511
score: 99.22872161865234
patch: if ( sub CaMeL Line [ 0 ] . intersection ( line $NUMBER$ ) )
rank: 511
score: 98.95887102399554
patch: final int intersection = line 1 . intersection ( line $NUMBER$ ) ;
rank: 511
score: 98.76820591517857
patch: final int size = line $NUMBER$ . get CaMeL Length ( ) ;
rank: 511
score: 98.51375122070313
patch: / * / / int * * * /
rank: 511
score: 98.17772081163194
patch: try { intersection ( intersection ( intersection )
rank: 511
score: 97.86776733398438
patch: / * / / compute
rank: 512
score: 99.33598188920455
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . sub CaMeL Line ;
rank: 512
score: 99.30742645263672
patch: line $NUMBER$ . intersection ( line $NUMBER$ . intersection ( line 1 ) ) ;
rank: 512
score: 99.22860107421874
patch: if ( sub CaMeL Line $NUMBER$ == null )
rank: 512
score: 98.95863970588235
patch: if ( line $NUMBER$ . trim ( ) . length ( ) == 0 ) {
rank: 512
score: 98.7676532451923
patch: final char [ ] intersection = new char [ $NUMBER$ ] ;
rank: 512
score: 98.51315646701389
patch: / * / / / * / compute
rank: 512
score: 98.17476654052734
patch: if / / * * / /
rank: 512
score: 97.86773071289062
patch: / / { compute
rank: 513
score: 99.41178755326705
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) . get CaMeL Remaining CaMeL Region ( ) ;
rank: 513
score: 99.33578330592105
patch: Line sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 513
score: 99.30715762867646
patch: Line line $NUMBER$ = ( Line ) line 1 . intersection ( line 1 ) ;
rank: 513
score: 99.274658203125
patch: if ( include CaMeL End CaMeL Points ) { return line 1 . intersection ( sub CaMeL Line ) ;
rank: 513
score: 99.22854817708334
patch: Line line $NUMBER$ = line $NUMBER$ . intersection ( sub CaMeL Line ) ;
rank: 513
score: 98.76670837402344
patch: if ( intersection . is CaMeL Empty ( line $NUMBER$ ) / * / )
rank: 513
score: 98.17449079241071
patch: if / / / * /
rank: 513
score: 97.86672973632812
patch: / / . / / / /
rank: 514
score: 99.33559163411458
patch: int line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 514
score: 99.30693817138672
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Line $NUMBER$ ( ) ;
rank: 514
score: 99.27444118923611
patch: Parameter line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 514
score: 99.22792271205357
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( )
rank: 514
score: 98.76659342447917
patch: Object [ ] intersection = new Object [ line 1 . length ] ;
rank: 514
score: 98.17252349853516
patch: System . / / * / /
rank: 514
score: 97.86618041992188
patch: / / / / / } compute
rank: 515
score: 99.41150665283203
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 515
score: 99.3355685763889
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 515
score: 99.30638212316177
patch: Line line $NUMBER$ = get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1
rank: 515
score: 99.27435913085938
patch: / * if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) != null ) {
rank: 515
score: 99.22786458333333
patch: if ( line 1 . intersection ( line $NUMBER$ ) )
rank: 515
score: 98.95823567708334
patch: if ( line 1 . equals ( line 1 / $NUMBER$ ) ) {
rank: 515
score: 98.7652816772461
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) >= 0 )
rank: 515
score: 98.50770399305556
patch: / / System . / / / /
rank: 515
score: 98.17250061035156
patch: int * * * / } /
rank: 515
score: 97.86438751220703
patch: / / log / / / compute
rank: 516
score: 99.4114239032452
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) . get CaMeL Hyperplane ( ) ;
rank: 516
score: 99.33552631578948
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL
rank: 516
score: 99.30628313337054
patch: Line line 1 = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 516
score: 99.27427368164062
patch: this . include CaMeL End CaMeL Points = line 1 . get CaMeL Remaining CaMeL Region ( ) ;
rank: 516
score: 99.22739083426339
patch: if ( include CaMeL End CaMeL Points || line $NUMBER$ != null )
rank: 516
score: 98.95821126302083
patch: if ( line 1 . get CaMeL Location ( ) == null ) {
rank: 516
score: 98.76472024356617
patch: if ( sub CaMeL Line . get CaMeL Line CaMeL Number ( ) < 0 )
rank: 516
score: 98.17225477430556
patch: if ( intersection != null / / compute
rank: 516
score: 97.86359514508929
patch: / / / throw / /
rank: 517
score: 99.41075134277344
patch: Line line 1 = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 517
score: 99.33539341517857
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space (
rank: 517
score: 99.30609537760417
patch: Line line $NUMBER$ 1 $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 517
score: 99.27420204564145
patch: / * if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) == null )
rank: 517
score: 99.22731236049107
patch: if ( line $NUMBER$ . get CaMeL Hyperplane ( ) == 0 )
rank: 517
score: 98.95781393612133
patch: if ( line 1 . size ( ) <= line 1 . size ( ) )
rank: 517
score: 98.76412200927734
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) < $NUMBER$ )
rank: 517
score: 98.17176164899554
patch: / * intersection * * /
rank: 517
score: 97.86353302001953
patch: / / / / - / /
rank: 518
score: 99.4105808423913
patch: line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 518
score: 99.33530495383523
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ; if ( include CaMeL End CaMeL Points ) {
rank: 518
score: 99.27419026692708
patch: this . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space (
rank: 518
score: 99.22725736177884
patch: if ( sub CaMeL Line [ 0 ] == null ) {
rank: 518
score: 98.95690155029297
patch: if ( line 1 . equals CaMeL Ignore CaMeL Case ( $STRING$ ) / /
rank: 518
score: 98.76390165441177
patch: if ( intersection ( intersection ( line $NUMBER$ , include CaMeL End CaMeL Points ) )
rank: 518
score: 98.50431993272569
patch: / * * / * / / *
rank: 518
score: 98.1715087890625
patch: if / * / / /
rank: 518
score: 97.8631591796875
patch: / / / ? / / /
rank: 519
score: 99.4100830078125
patch: final boolean include CaMeL End CaMeL Points = line 1 . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 519
score: 99.33513440583882
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 519
score: 99.30428059895833
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Line ( ) ;
rank: 519
score: 99.27412923177083
patch: Shape line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 519
score: 99.22637067522321
patch: if ( include CaMeL End CaMeL Points && line 1 != null )
rank: 519
score: 98.95607212611607
patch: if ( line 1 == null || line $NUMBER$ == null ) {
rank: 519
score: 98.76328938802084
patch: if ( intersection . contains ( line $NUMBER$ ) / * / ) {
rank: 519
score: 98.50425889756944
patch: / * / / / char * /
rank: 519
score: 98.17106628417969
patch: Iterator / * * * / /
rank: 519
score: 97.8629150390625
patch: / / / / / = /
rank: 520
score: 99.3348324424342
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL
rank: 520
score: 99.30393880208334
patch: Line line $NUMBER$ 1 = line $NUMBER$ . get CaMeL Hyperplane ( ) ;
rank: 520
score: 99.27411179315476
patch: return ( include CaMeL End CaMeL Points && line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 520
score: 99.22553253173828
patch: Line sub CaMeL Line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 520
score: 98.95598602294922
patch: if ( line 1 != null && line 1 . length > 0 ) {
rank: 520
score: 98.763134765625
patch: if ( intersection . is CaMeL Empty ( ) / * / ) /
rank: 520
score: 98.50248209635417
patch: / * * / } / / /
rank: 520
score: 97.86273193359375
patch: int / { / / / /
rank: 521
score: 99.33482776988636
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( 0 ) ) ;
rank: 521
score: 99.27392578125
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 521
score: 99.22552083333333
patch: final Object line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) ;
rank: 521
score: 98.17095947265625
patch: if ( intersection / / compute
rank: 521
score: 97.86077880859375
patch: / / else / /
rank: 522
score: 99.40982421875
patch: loc 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 522
score: 99.33474731445312
patch: long include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 522
score: 99.27357700892857
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) == 0 )
rank: 522
score: 99.22526041666667
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Length ( ) ;
rank: 522
score: 98.9551140280331
patch: if ( line 1 . get CaMeL Line CaMeL Number ( ) != null ) {
rank: 522
score: 98.17072296142578
patch: / * int * * / }
rank: 522
score: 97.86061314174107
patch: / / System / / /
rank: 523
score: 99.33471111918605
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . include CaMeL End CaMeL Points ) ;
rank: 523
score: 99.27357393152573
patch: super . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 523
score: 99.22472272600446
patch: line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 523
score: 98.9535271139706
patch: if ( line 1 . equals ( intersection . get CaMeL Line ( ) / /
rank: 523
score: 98.75931222098214
patch: if ( line $NUMBER$ == null / * intersection * / / )
rank: 523
score: 98.50124104817708
patch: / * * char * * / /
rank: 523
score: 98.17037200927734
patch: if / / / * * /
rank: 523
score: 97.8602523803711
patch: / / / / int / intersection
rank: 524
score: 99.40950520833333
patch: Line line $NUMBER$ = ( Line ) this . sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 524
score: 99.33462042557566
patch: Line line $NUMBER$ = line $NUMBER$ . intersection ( get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 524
score: 99.27350725446429
patch: for ( Sub CaMeL Line sub CaMeL Line : sub CaMeL Line . intersection ( line $NUMBER$ ) ) {
rank: 524
score: 99.22381184895833
patch: File line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 524
score: 98.75929768880208
patch: if ( intersection ( line $NUMBER$ ) / * / /
rank: 524
score: 98.50084092881944
patch: / * * * : * / /
rank: 524
score: 98.17027452256944
patch: if ( intersection == null / / compute
rank: 524
score: 97.85831451416016
patch: System / / / / / compute
rank: 525
score: 99.33440085018383
patch: Line line $NUMBER$ = sub CaMeL Line . check CaMeL Point ( line $NUMBER$ ) ;
rank: 525
score: 99.30116373697916
patch: Line line $NUMBER$ 1 = line 1 . get CaMeL Line ( ) ;
rank: 525
score: 99.27344468060662
patch: if ( ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 525
score: 98.95284271240234
patch: switch ( line 1 . get CaMeL Y ( ) ) { case 0 :
rank: 525
score: 98.75879669189453
patch: if ( intersection . is CaMeL Empty ( ) ) return new / * /
rank: 525
score: 98.50020345052083
patch: / * / / System . / /
rank: 525
score: 97.8582992553711
patch: / / out / / / /
rank: 526
score: 99.40919078480114
patch: / * / sub CaMeL Line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 526
score: 99.30038452148438
patch: line 1 . intersection ( line 1 . intersection ( line $NUMBER$ ) ) ;
rank: 526
score: 99.22341918945312
patch: if ( sub CaMeL Line $NUMBER$ != null )
rank: 526
score: 98.95255533854167
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + line 1 ) ;
rank: 526
score: 98.75872247869319
patch: if ( line $NUMBER$ == null ) return null ;
rank: 526
score: 98.4993896484375
patch: / * * : * * / /
rank: 526
score: 98.16667938232422
patch: if ( intersection / * / )
rank: 526
score: 97.857177734375
patch: / / / / boolean / compute
rank: 527
score: 99.4090576171875
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Size ( ) ;
rank: 527
score: 99.30023193359375
patch: Line - = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 527
score: 99.27297794117646
patch: / * if ( sub CaMeL Line . get CaMeL Hyperplane ( ) != null )
rank: 527
score: 98.95243566176471
patch: if ( line 1 . to CaMeL String ( ) . equals ( $STRING$ ) )
rank: 527
score: 98.75823567708333
patch: if ( intersection == null / * this . intersection * / / )
rank: 527
score: 98.49928114149306
patch: / * * / int * / /
rank: 527
score: 98.16646575927734
patch: } else { intersection / * /
rank: 527
score: 97.8562520345052
patch: / / / / final
rank: 528
score: 99.40890984786184
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( line 1 ) ;
rank: 528
score: 99.29971313476562
patch: Line line $NUMBER$ = get CaMeL Line 1 ( ) ;
rank: 528
score: 99.27226426866319
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points != null ) {
rank: 528
score: 99.22210083007812
patch: if ( sub CaMeL Line == null ) {
rank: 528
score: 98.95234898158482
patch: / * / throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 528
score: 98.75728665865384
patch: if ( line 1 == null / * intersection * / )
rank: 528
score: 98.16550118582589
patch: / / default * * /
rank: 528
score: 97.85517120361328
patch: / / { / / / System
rank: 529
score: 99.33382161458333
patch: Line get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 529
score: 99.2989971454327
patch: String line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 529
score: 99.27212524414062
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( this ) ;
rank: 529
score: 99.22166224888393
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( $STRING$ ) ;
rank: 529
score: 98.95193246694711
patch: if ( line 1 == null ) { return - 1 ;
rank: 529
score: 98.75521850585938
patch: byte [ ] intersection = new byte [ intersection . / / $NUMBER$ ] ;
rank: 529
score: 98.49577501085069
patch: / * / / * / / compute
rank: 529
score: 98.1654052734375
patch: Iterator * * * / * /
rank: 529
score: 97.85426330566406
patch: break / / / / / /
rank: 530
score: 99.408203125
patch: Line line 1 = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 530
score: 99.27199978298611
patch: Entity line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 530
score: 99.22145774147727
patch: = line 1 . intersection ( line $NUMBER$ ) ;
rank: 530
score: 98.94815767728366
patch: if ( line 1 . is CaMeL Empty ( ) ) {
rank: 530
score: 98.75462928185097
patch: if ( intersection == null / * intersection * / ) {
rank: 530
score: 98.1654052734375
patch: if ( intersection ) { / / compute
rank: 530
score: 97.85402425130208
patch: / / try / /
rank: 531
score: 99.40805158943965
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 531
score: 99.333544921875
patch: Line sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 531
score: 99.29744779146634
patch: Line line $NUMBER$ = line 1 . intersection ( line $NUMBER$ )
rank: 531
score: 99.220458984375
patch: if ( line $NUMBER$ . get CaMeL Hyperplane ( ) == 0 ) {
rank: 531
score: 98.7545635516827
patch: if ( line $NUMBER$ . is CaMeL Empty ( ) ) {
rank: 531
score: 98.49163140190973
patch: / * ] * * * / /
rank: 531
score: 98.16535186767578
patch: / * ? * * * /
rank: 531
score: 97.85399627685547
patch: if / { / / / /
rank: 532
score: 99.40792846679688
patch: / * / line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 532
score: 99.33343864889706
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , 0 ) ;
rank: 532
score: 99.29740905761719
patch: Line line 1 = sub CaMeL Line . get CaMeL Line 1 ( ) ;
rank: 532
score: 99.27142333984375
patch: Double line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 532
score: 98.94715881347656
patch: if ( line 1 . starts CaMeL With ( $STRING$ line 1 ) ) {
rank: 532
score: 98.75366973876953
patch: if ( intersection . size ( ) == 0 ) { / * / /
rank: 532
score: 98.49129231770833
patch: / / * / / int * /
rank: 532
score: 98.16480170355902
patch: if / * * * / intersection /
rank: 532
score: 97.85359191894531
patch: int / / { / / /
rank: 533
score: 99.40789473684211
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( line $NUMBER$ ) ;
rank: 533
score: 99.33308179450758
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , ) ;
rank: 533
score: 99.29684627757354
patch: sub CaMeL Line [ 0 ] = line 1 . intersection ( line $NUMBER$ ) ;
rank: 533
score: 99.2713671875
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . length > 1 )
rank: 533
score: 99.22012765066964
patch: Node line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 533
score: 98.94661712646484
patch: Collection intersection = new Array CaMeL List ( intersection . size ( ) ) ;
rank: 533
score: 98.75279822716347
patch: final String [ ] intersection = new String [ 1 ] ;
rank: 533
score: 98.49043104383681
patch: / * * int * * * /
rank: 533
score: 98.16459655761719
patch: final List * * * * /
rank: 533
score: 97.85325404575893
patch: / / return / / /
rank: 534
score: 99.4078838641827
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) . intersection ( line $NUMBER$ ) ;
rank: 534
score: 99.3326083096591
patch: final Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 534
score: 99.29637145996094
patch: Line = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 534
score: 99.2713623046875
patch: for ( String line $NUMBER$ : sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 534
score: 99.21997833251953
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) == line $NUMBER$ )
rank: 534
score: 98.94639587402344
patch: switch ( line 1 . get CaMeL X ( ) ) { case 0 :
rank: 534
score: 98.7522442157452
patch: final int [ ] intersection = new int [ 0 ] ;
rank: 534
score: 98.49029541015625
patch: / * / try { / / /
rank: 534
score: 98.16379123263889
patch: if / / final / / / compute
rank: 534
score: 97.85286712646484
patch: / / / List / / /
rank: 535
score: 99.40766143798828
patch: loc = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 535
score: 99.27094060724431
patch: / * if ( line 1 != null ) {
rank: 535
score: 99.21982421875
patch: final Object line $NUMBER$ = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 535
score: 98.9463882446289
patch: if ( line 1 . index CaMeL Of ( $STRING$ ) > - 1 )
rank: 535
score: 98.75176239013672
patch: if ( line $NUMBER$ . get CaMeL Line CaMeL Number ( ) == intersection )
rank: 535
score: 98.49019368489583
patch: / * * * ? * / /
rank: 535
score: 98.16339874267578
patch: if / / / * / /
rank: 535
score: 97.85262044270833
patch: infinite / { / /
rank: 536
score: 99.40762329101562
patch: Line line $NUMBER$ = ( Line ) get CaMeL Line ( ) . get CaMeL Hyperplane ( ) ;
rank: 536
score: 99.33199637276786
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 536
score: 99.2192611694336
patch: Line line $NUMBER$ = ( Line ) this . intersection ( line $NUMBER$ ) ;
rank: 536
score: 98.94507598876953
patch: if ( line 1 . is CaMeL Empty ( ) / * / ) {
rank: 536
score: 98.75050354003906
patch: if ( intersection . is CaMeL Empty ( line $NUMBER$ ) / * / /
rank: 536
score: 98.48885769314236
patch: / / int / * / / /
rank: 536
score: 98.16316053602431
patch: if ( intersection / / / * compute
rank: 536
score: 97.85138811383929
patch: / / / / / intersection
rank: 537
score: 99.33195694633152
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 537
score: 99.29520909926471
patch: line $NUMBER$ . intersection ( line $NUMBER$ . intersection ( sub CaMeL Line ) ) ;
rank: 537
score: 99.27088419596355
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) . length == 0 ) {
rank: 537
score: 99.21898735894098
patch: if ( sub CaMeL Line > 0 )
rank: 537
score: 98.94486999511719
patch: if ( intersection == null || intersection . is CaMeL Empty ( ) ) {
rank: 537
score: 98.75034877232143
patch: if ( intersection . is CaMeL Empty ( ) / * / )
rank: 537
score: 97.85084533691406
patch: / { / { / / /
rank: 538
score: 99.33187866210938
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ; if ( include CaMeL End CaMeL Points ) {
rank: 538
score: 99.2947285970052
patch: Line line 1 = ( Line ) sub CaMeL Line ;
rank: 538
score: 99.27087983630952
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) != null && include CaMeL End CaMeL Points )
rank: 538
score: 99.2188720703125
patch: if ( sub CaMeL Line [ 0 ] != null ) {
rank: 538
score: 98.94469105113636
patch: if ( line 1 . length > 0 ) {
rank: 538
score: 98.75033804086539
patch: final String [ ] intersection = new String [ 0 ] ;
rank: 538
score: 98.48540581597223
patch: / * * / / * / *
rank: 538
score: 98.15965270996094
patch: / / List / * / /
rank: 538
score: 97.85066986083984
patch: / / / int / / compute
rank: 539
score: 99.40723498114224
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 539
score: 99.33157509251645
patch: = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 539
score: 99.2708740234375
patch: return get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 539
score: 99.2187030498798
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line == null
rank: 539
score: 98.94328962053571
patch: if ( line 1 . ends CaMeL With ( $STRING$ ) ) {
rank: 539
score: 98.74961344401042
patch: if ( intersection == null / * intersection * / )
rank: 539
score: 98.48464626736111
patch: / * * list * * / /
rank: 539
score: 97.8499526977539
patch: / / / void / / /
rank: 540
score: 99.40719839242789
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ;
rank: 540
score: 99.2936782836914
patch: Line line $NUMBER$ = get CaMeL Line $NUMBER$ . get CaMeL Hyperplane ( ) ;
rank: 540
score: 99.27081008184524
patch: return ( include CaMeL End CaMeL Points ) && line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 540
score: 99.2163314819336
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line 1 != null )
rank: 540
score: 98.94289725167411
patch: final int intersection = line 1 . intersection ( line 1 ) ;
rank: 540
score: 98.74945537860577
patch: if ( intersection == null / * intersection . * / )
rank: 540
score: 98.48404693603516
patch: / * * / int * /
rank: 540
score: 98.15870666503906
patch: intersection / * * * * /
rank: 540
score: 97.84960174560547
patch: / / { / / { /
rank: 541
score: 99.40676443917411
patch: sub CaMeL Line = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 541
score: 99.33125135633681
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 541
score: 99.2936150045956
patch: Line line $NUMBER$ = get CaMeL Line $NUMBER$ . intersection ( sub CaMeL Line ) ;
rank: 541
score: 99.2707421875
patch: this . line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( ) ;
rank: 541
score: 99.21566772460938
patch: if ( sub CaMeL Line $NUMBER$ . get CaMeL Hyperplane ( ) == null )
rank: 541
score: 98.74870300292969
patch: if ( intersection . is CaMeL Empty ( ) ) return null ; else {
rank: 541
score: 97.84952545166016
patch: / / if / / / compute
rank: 542
score: 99.40644975142045
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . to CaMeL Sub CaMeL Space ( line $NUMBER$ ) ;
rank: 542
score: 99.29345703125
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Line $NUMBER$ 1 ( ) ;
rank: 542
score: 99.27056884765625
patch: return line 1 . intersection ( get CaMeL Hyperplane ( ) ) ;
rank: 542
score: 99.21522521972656
patch: if ( include CaMeL End CaMeL Points || sub CaMeL Line $NUMBER$ != null )
rank: 542
score: 98.94199782151442
patch: if ( line 1 . size ( ) > 1 ) {
rank: 542
score: 98.74866661658653
patch: if ( line 1 != null ) { / * / /
rank: 542
score: 98.48297797309027
patch: / * / int / * / line
rank: 542
score: 98.15745544433594
patch: if / * * / intersection /
rank: 542
score: 97.84947967529297
patch: / throw / / / / compute
rank: 543
score: 99.40631103515625
patch: include CaMeL End CaMeL Points = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 543
score: 99.33103086890245
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 543
score: 99.27054172092014
patch: / * if ( sub CaMeL Line . get CaMeL Hyperplane ( ) != null ) {
rank: 543
score: 99.21488189697266
patch: if ( line $NUMBER$ . get CaMeL Sub CaMeL Space ( ) == null )
rank: 543
score: 98.94168090820312
patch: if ( intersection . is CaMeL Empty ( ) ) { return intersection ; }
rank: 543
score: 98.74738420758929
patch: if ( line $NUMBER$ . get CaMeL Line ( ) == null )
rank: 543
score: 98.4822998046875
patch: / * / / * * / line
rank: 543
score: 98.15704345703125
patch: if ( intersection ) * /
rank: 543
score: 97.8492431640625
patch: / / / / int intersection ;
rank: 544
score: 99.4055684407552
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Offset ( ) ;
rank: 544
score: 99.29290412454044
patch: Line line $NUMBER$ = ( Line ) get CaMeL Remaining CaMeL Region ( ) == null
rank: 544
score: 99.270283203125
patch: if ( include CaMeL End CaMeL Points || sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . length > 0 )
rank: 544
score: 99.21458217075893
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) )
rank: 544
score: 98.9416034405048
patch: if ( line 1 . equals ( line 1 ) ) {
rank: 544
score: 98.74713134765625
patch: if ( intersection . size ( ) > 0 ) { / * / /
rank: 544
score: 98.47998046875
patch: / * ? / / /
rank: 544
score: 98.15478515625
patch: / * int * / * /
rank: 544
score: 97.84849548339844
patch: / / / / final / compute
rank: 545
score: 99.40545099431819
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ;
rank: 545
score: 99.33092912946428
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( 0 ) ) ;
rank: 545
score: 99.29275512695312
patch: Line line $NUMBER$ 1 = line $NUMBER$ . to CaMeL Sub CaMeL Space ( )
rank: 545
score: 99.21405029296875
patch: if ( include CaMeL End CaMeL Points && line 1 == null )
rank: 545
score: 98.941064453125
patch: if ( line 1 . get CaMeL Length ( ) != 0 ) {
rank: 545
score: 98.7469482421875
patch: if ( line $NUMBER$ . intersection ( line $NUMBER$ ) / * / )
rank: 545
score: 98.47895159040179
patch: / * * char * /
rank: 545
score: 98.15473937988281
patch: intersection / * * * / /
rank: 545
score: 97.84750366210938
patch: / / / / / / line
rank: 546
score: 99.405029296875
patch: final boolean include CaMeL End CaMeL Points = ( ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 546
score: 99.33084909539474
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 546
score: 99.29218292236328
patch: Line line $NUMBER$ 1 = line $NUMBER$ . intersection ( sub CaMeL Line ) ;
rank: 546
score: 99.21390787760417
patch: return sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 546
score: 98.94071451822917
patch: if ( line 1 . intersection ( line 1 / $NUMBER$ ) ) {
rank: 546
score: 98.74668666294643
patch: if ( intersection . intersection ( line $NUMBER$ ) / * / /
rank: 546
score: 98.47885470920139
patch: / / / int * / / /
rank: 546
score: 98.15311104910714
patch: try { / * * /
rank: 546
score: 97.8473129272461
patch: / / { / / * compute
rank: 547
score: 99.40475899832589
patch: loc $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 547
score: 99.33045450846355
patch: final Sub CaMeL Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 547
score: 99.29203527113971
patch: Line line $NUMBER$ 1 = line $NUMBER$ . get CaMeL Sub CaMeL Space ( ) ;
rank: 547
score: 99.26969770951705
patch: if ( include CaMeL End CaMeL Points ) { return sub CaMeL Line . intersection ( sub CaMeL Line ) ;
rank: 547
score: 99.21321868896484
patch: if ( line $NUMBER$ . trim ( ) . size ( ) > 0 )
rank: 547
score: 98.93860880533855
patch: if ( line 1 == null ) { break ; }
rank: 547
score: 98.74556790865384
patch: if ( line $NUMBER$ == / || line $NUMBER$ == null )
rank: 547
score: 98.1529769897461
patch: if / / * / * /
rank: 547
score: 97.84626988002232
patch: System / / / / /
rank: 548
score: 99.40464952256944
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Space ( ) ) ;
rank: 548
score: 99.3301902977196
patch: Line get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 548
score: 99.26884909237133
patch: / * if ( line 1 . to CaMeL Sub CaMeL Space ( ) ) {
rank: 548
score: 99.21316528320312
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line 1 == null )
rank: 548
score: 98.93765462239584
patch: if ( line 1 . get CaMeL Length ( ) < 0 ) {
rank: 548
score: 98.74549278846153
patch: if ( line 1 == null && line 1 == null )
rank: 548
score: 98.47872585720486
patch: / * / / int / / /
rank: 548
score: 98.15216064453125
patch: final List * * * / }
rank: 548
score: 97.84564208984375
patch: intersection / * / /
rank: 549
score: 99.40446333451705
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 549
score: 99.32967122395833
patch: String line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 549
score: 99.26871390964673
patch: if ( include CaMeL End CaMeL Points && line 1 . to CaMeL Sub CaMeL Space ( ) != null ) {
rank: 549
score: 99.2131591796875
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) > 0 )
rank: 549
score: 98.93697916666666
patch: if ( line 1 . equals ( line $NUMBER$ / $NUMBER$ ) ) {
rank: 549
score: 98.74442232572116
patch: if ( intersection . size ( line $NUMBER$ ) == 0 )
rank: 549
score: 98.476806640625
patch: / int / / / * / /
rank: 549
score: 98.15208435058594
patch: try { if ( intersection ) {
rank: 549
score: 97.84455108642578
patch: / / { / * / compute
rank: 550
score: 99.29100844439338
patch: Object line $NUMBER$ = get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 550
score: 99.26865931919643
patch: int line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 550
score: 98.93659319196429
patch: if ( line 1 . length > line 1 . length ) {
rank: 550
score: 98.743896484375
patch: intersection ( line $NUMBER$ , include CaMeL End CaMeL Points ) ;
rank: 550
score: 98.15140206473214
patch: / * / / / }
rank: 550
score: 97.842529296875
patch: / / * / compute
rank: 551
score: 99.4033836082176
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Space ( ) ) ;
rank: 551
score: 99.32913818359376
patch: if ( include CaMeL End CaMeL Points ) { return line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 551
score: 99.29046630859375
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( )
rank: 551
score: 99.21267903645834
patch: if ( include CaMeL End CaMeL Points && line 1 == null ) {
rank: 551
score: 98.93522426060268
patch: / * throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 551
score: 98.74326985677084
patch: if ( intersection . is CaMeL Empty ( ) / * / / )
rank: 551
score: 98.47142198350694
patch: / * / / / / } /
rank: 551
score: 98.15127127511161
patch: / * * * / try
rank: 551
score: 97.84212820870536
patch: / / / / else compute
rank: 552
score: 99.40309361049107
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get ( ) ;
rank: 552
score: 99.29046630859375
patch: final Line line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 552
score: 99.26797340029762
patch: Point line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 552
score: 99.21253255208333
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line [ 1 ] ;
rank: 552
score: 98.93494591346153
patch: if ( line 1 == null ) { return 0 ; }
rank: 552
score: 98.47117106119792
patch: / * ] * / * / /
rank: 552
score: 98.15058898925781
patch: / * * * / / /
rank: 552
score: 97.83952985491071
patch: / / / System / /
rank: 553
score: 99.40180896577381
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) : line $NUMBER$ ;
rank: 553
score: 99.2901611328125
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 553
score: 99.26791561351104
patch: this . intersection ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 553
score: 99.21133083767361
patch: if ( sub CaMeL Line == null )
rank: 553
score: 98.74186488560268
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( / * intersection * /
rank: 553
score: 98.470947265625
patch: / * ] * / / / /
rank: 553
score: 97.838134765625
patch: / / / { / compute
rank: 554
score: 99.32843191964285
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) )
rank: 554
score: 99.26773834228516
patch: if ( sub CaMeL Line == null && include CaMeL End CaMeL Points ) {
rank: 554
score: 99.2113037109375
patch: if ( sub CaMeL Line [ 0 ] . size ( ) > 0 )
rank: 554
score: 98.93283081054688
patch: if ( line 1 . get CaMeL Line ( intersection ) != null ) {
rank: 554
score: 98.7412841796875
patch: if ( line 1 == null / * intersection . * / ) /
rank: 554
score: 98.47085910373264
patch: / * / int / int * /
rank: 554
score: 98.15034484863281
patch: / * / else / * /
rank: 554
score: 97.83354840959821
patch: Iterator / / / / /
rank: 555
score: 99.4006103515625
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ) {
rank: 555
score: 99.32832150342988
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 555
score: 99.26747131347656
patch: while ( sub CaMeL Line . get CaMeL Hyperplane ( ) != null ) {
rank: 555
score: 99.21041107177734
patch: if ( include CaMeL End CaMeL Points || sub CaMeL Line $NUMBER$ == null )
rank: 555
score: 98.93213704427083
patch: if ( line 1 . get CaMeL Line ( ) == null ) {
rank: 555
score: 98.74012169471153
patch: if ( line $NUMBER$ == null && line 1 == null )
rank: 555
score: 98.47073025173611
patch: / int / / * / / /
rank: 555
score: 98.15032196044922
patch: / * / while / * /
rank: 555
score: 97.83350626627605
patch: { / / / /
rank: 556
score: 99.40056242766204
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( this ) ;
rank: 556
score: 99.32826634457237
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . ) ;
rank: 556
score: 99.28929946001838
patch: Line line $NUMBER$ = get CaMeL Line ( ) . intersection ( line $NUMBER$ ) ;
rank: 556
score: 99.20994466145834
patch: String line $NUMBER$ = get CaMeL Remaining CaMeL Region ( line $NUMBER$ ) ;
rank: 556
score: 98.93141276041666
patch: if ( line 1 . intersection ( line $NUMBER$ ) != null ) {
rank: 556
score: 98.73911539713542
patch: if ( line $NUMBER$ != null ) { / * /
rank: 556
score: 98.47068786621094
patch: / * ] * / * /
rank: 556
score: 98.15003797743056
patch: if / * / System . / /
rank: 556
score: 97.83101981026786
patch: / / / } / compute
rank: 557
score: 99.28917020909927
patch: Line name = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 557
score: 99.26719665527344
patch: return ( Sub CaMeL Line ) line 1 . intersection ( line $NUMBER$ ) ;
rank: 557
score: 98.931396484375
patch: if ( line $NUMBER$ == null ) { return - 1 ; }
rank: 557
score: 98.47001139322917
patch: / * int / / / / /
rank: 557
score: 98.14957101004464
patch: } if / * * /
rank: 557
score: 97.830810546875
patch: } / / / compute
rank: 558
score: 99.40042679398148
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 558
score: 99.3280128272804
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 558
score: 99.28903377757354
patch: Location line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 558
score: 99.20933024088542
patch: if ( sub CaMeL Line [ 0 ] == null )
rank: 558
score: 98.93050808376736
patch: if ( line 1 instanceof Line ) {
rank: 558
score: 98.7381591796875
patch: if ( line $NUMBER$ . is CaMeL Empty ( ) ) { / * /
rank: 558
score: 98.46922471788194
patch: / * ] / / * * /
rank: 558
score: 98.14943150111607
patch: / / int * * /
rank: 558
score: 97.82884870256696
patch: / throw / / / /
rank: 559
score: 99.40031995271382
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 559
score: 99.28866577148438
patch: Line line $NUMBER$ 1 1 = line 1 . intersection ( line $NUMBER$ ) ;
rank: 559
score: 99.26624755859375
patch: for ( Line line 1 : sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) {
rank: 559
score: 99.20921979631696
patch: if ( get CaMeL Remaining CaMeL Region ( ) == null ) {
rank: 559
score: 98.93004557291667
patch: if ( line $NUMBER$ . is CaMeL Na CaMeL N ( ) ) {
rank: 559
score: 98.73794555664062
patch: double [ ] intersection = new double [ 1 ] ;
rank: 559
score: 98.46898057725694
patch: / * ? / * / / /
rank: 559
score: 98.14889962332589
patch: else { intersection / * /
rank: 559
score: 97.82793317522321
patch: intersection / { / / compute
rank: 560
score: 99.327734375
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 560
score: 99.2884162454044
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point (
rank: 560
score: 99.2655362215909
patch: if ( sub CaMeL Line == null && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 560
score: 99.208447265625
patch: Line line $NUMBER$ = ( Line ) . get CaMeL Hyperplane ( ) ;
rank: 560
score: 98.92984771728516
patch: if ( line 1 . starts CaMeL With ( $STRING$ line $NUMBER$ ) ) {
rank: 560
score: 98.73782784598214
patch: if ( line $NUMBER$ . get CaMeL Length ( ) > 0 )
rank: 560
score: 98.46868896484375
patch: / * / } / / /
rank: 560
score: 98.14884948730469
patch: this . intersection ( intersection ) ;
rank: 560
score: 97.82716587611607
patch: * / / / / /
rank: 561
score: 99.32734375
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 561
score: 99.28821518841912
patch: line $NUMBER$ . equals ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) )
rank: 561
score: 99.265478515625
patch: this . intersection 1 = line 1 . intersection ( line $NUMBER$ ) ;
rank: 561
score: 99.20824381510417
patch: Sub CaMeL Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 561
score: 98.9284896850586
patch: if ( line $NUMBER$ . index CaMeL Of ( $STRING$ ) != - 1 )
rank: 561
score: 98.73776041666666
patch: if ( line $NUMBER$ . is CaMeL Empty ( ) ) / * /
rank: 561
score: 98.46830240885417
patch: / * * / int * * /
rank: 561
score: 98.14875030517578
patch: if / / / / * /
rank: 561
score: 97.82525634765625
patch: / / void / / /
rank: 562
score: 99.39972686767578
patch: loc = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 562
score: 99.26533203125
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) . size ( ) > 0 ) {
rank: 562
score: 99.20821940104166
patch: boolean line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 562
score: 98.92835235595703
patch: if ( line 1 . trim ( ) . equals ( $STRING$ ) ) {
rank: 562
score: 98.46809895833333
patch: / * * int * / * /
rank: 562
score: 98.14810616629464
patch: / * ? * / /
rank: 562
score: 97.82377115885417
patch: / / / int intersection
rank: 563
score: 99.39889962332589
patch: Line line $NUMBER$ = ( Line ) this . sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 563
score: 99.32716936383929
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( )
rank: 563
score: 99.28748276654412
patch: if ( line $NUMBER$ != null ) { if ( include CaMeL End CaMeL Points )
rank: 563
score: 99.2078857421875
patch: Line intersection 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 563
score: 98.92809244791667
patch: if ( line 1 . get CaMeL Line ( ) != 0 ) {
rank: 563
score: 98.73687337239583
patch: if ( intersection . intersection ( line $NUMBER$ ) / * / / /
rank: 563
score: 98.46771918402777
patch: / * ] / / / / /
rank: 563
score: 98.14774576822917
patch: else { / * / } / /
rank: 563
score: 97.8218282063802
patch: / int / / compute
rank: 564
score: 99.39842006138393
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) . get CaMeL Remaining CaMeL Region ( ) ;
rank: 564
score: 99.32708740234375
patch: = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 564
score: 99.26486206054688
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point (
rank: 564
score: 99.20787048339844
patch: if ( line $NUMBER$ . get CaMeL Sub CaMeL Space ( ) != null )
rank: 564
score: 98.92714280348558
patch: if ( line 1 == null || line 1 != null )
rank: 564
score: 98.736328125
patch: if ( intersection == null / * intersection . * / ) {
rank: 564
score: 98.46681043836806
patch: / / System . / / * /
rank: 564
score: 98.14671495225694
patch: / * / { / / * /
rank: 564
score: 97.81791178385417
patch: / / / / set
rank: 565
score: 99.3983090049342
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; ?
rank: 565
score: 99.32684326171875
patch: Sub CaMeL Line sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 565
score: 99.28642926897321
patch: Region line $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 565
score: 99.26458740234375
patch: if ( line $NUMBER$ != null && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 565
score: 99.20653424944196
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . null ;
rank: 565
score: 98.92664337158203
patch: if ( line 1 . compare CaMeL To ( intersection ) < 0 ) {
rank: 565
score: 98.73631702769886
patch: if ( intersection . size ( ) > 0 )
rank: 565
score: 98.46678924560547
patch: / * ] / / * /
rank: 565
score: 98.14627511160714
patch: / * * / } /
rank: 565
score: 97.81745256696429
patch: / / int / / compute
rank: 566
score: 99.39813523065476
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) : line 1 ;
rank: 566
score: 99.3267822265625
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 566
score: 99.28610229492188
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . sub CaMeL Line (
rank: 566
score: 99.26456705729167
patch: if ( include CaMeL End CaMeL Points && line 1 . include CaMeL End CaMeL Points )
rank: 566
score: 99.20516531808036
patch: Object line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) ;
rank: 566
score: 98.92617563100961
patch: if ( line $NUMBER$ == null ) { return this ; }
rank: 566
score: 98.73612213134766
patch: if ( line $NUMBER$ . is CaMeL Empty ( ) / * / / )
rank: 566
score: 98.46512858072917
patch: / * ? * * * / /
rank: 566
score: 98.14578247070312
patch: / / * / * / }
rank: 566
score: 97.81470598493304
patch: / / log / / /
rank: 567
score: 99.39808959960938
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ; / * /
rank: 567
score: 99.28606414794922
patch: Line line $NUMBER$ 1 = line $NUMBER$ . get CaMeL Line $NUMBER$ ( ) ;
rank: 567
score: 99.26419503348214
patch: if ( sub CaMeL Line == null && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 567
score: 99.20428873697917
patch: Line line $NUMBER$ = ( Line 1 . intersection ( line $NUMBER$ ) )
rank: 567
score: 98.92469787597656
patch: if ( line 1 != null && line $NUMBER$ . length == 0 ) {
rank: 567
score: 98.73558631310097
patch: if ( intersection / * line $NUMBER$ / / / * /
rank: 567
score: 98.4644775390625
patch: / * ] / / / * /
rank: 567
score: 98.14537048339844
patch: / / default * * * /
rank: 567
score: 97.81301443917411
patch: infinite / * / / /
rank: 568
score: 99.28510076349431
patch: Line line $NUMBER$ = get CaMeL Line ( ) ;
rank: 568
score: 99.26389447380515
patch: this . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 568
score: 99.20412772042411
patch: if ( include CaMeL End CaMeL Points || line $NUMBER$ == null )
rank: 568
score: 98.735546875
patch: if ( intersection ( line 1 , include CaMeL End CaMeL Points ) )
rank: 568
score: 98.46447075737848
patch: / * * char * * * /
rank: 568
score: 98.14524841308594
patch: final / * * * * /
rank: 568
score: 97.81132289341518
patch: / / int } / /
rank: 569
score: 99.39786430027173
patch: return ( ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ) ;
rank: 569
score: 99.28424072265625
patch: String line $NUMBER$ = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ;
rank: 569
score: 99.263720703125
patch: if ( include CaMeL End CaMeL Points ) { return line 1 . get CaMeL Hyperplane ( ) ;
rank: 569
score: 99.20355224609375
patch: Line line $NUMBER$ = Line 1 . intersection ( line $NUMBER$ ) ;
rank: 569
score: 98.92250279017857
patch: if ( line 1 . starts CaMeL With ( $STRING$ ) / /
rank: 569
score: 98.73481096540179
patch: if ( intersection != null / * / ) { / * /
rank: 569
score: 98.46372477213542
patch: / * / / / out * /
rank: 569
score: 98.14409528459821
patch: if / * * ? /
rank: 569
score: 97.80972726004464
patch: } / / / / compute
rank: 570
score: 99.39724731445312
patch: include CaMeL End CaMeL Points = line 1 . intersection ( line $NUMBER$ ) ;
rank: 570
score: 99.32578412224265
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , 0 ) ;
rank: 570
score: 99.28394272748162
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Line $NUMBER$ ++ ( ) ;
rank: 570
score: 99.26339111328124
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 570
score: 99.20284598214286
patch: Line sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) ;
rank: 570
score: 98.73470633370536
patch: if ( intersection . is CaMeL Empty ( ) ) return null ;
rank: 570
score: 98.46176486545139
patch: / * * list * * * /
rank: 570
score: 98.14371744791667
patch: / * * / }
rank: 570
score: 97.80960518973214
patch: / / / / int line
rank: 571
score: 99.39671741832386
patch: Line line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) . get CaMeL Remaining CaMeL Region ( ) ;
rank: 571
score: 99.32562255859375
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 571
score: 99.28240203857422
patch: Line line $NUMBER$ 1 1 = line 1 . get CaMeL Hyperplane ( ) ;
rank: 571
score: 99.2633056640625
patch: for ( Line sub CaMeL Line : sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 571
score: 98.73445129394531
patch: intersection ( intersection ( line $NUMBER$ , include CaMeL End CaMeL Points ) / *
rank: 571
score: 98.46174452039931
patch: / * int / / / * /
rank: 571
score: 98.14353942871094
patch: else { / * * / }
rank: 571
score: 97.80898030598958
patch: / / / / float
rank: 572
score: 99.3966064453125
patch: / * line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 572
score: 99.32546037946429
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( 0 ) ) ;
rank: 572
score: 99.28084564208984
patch: Object line $NUMBER$ 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 572
score: 99.26313920454545
patch: if ( line 1 != null && sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL
rank: 572
score: 99.20249720982143
patch: if ( sub CaMeL Line . size ( ) > 0 ) {
rank: 572
score: 98.91972351074219
patch: if ( line 1 . ends CaMeL With ( $STRING$ line $NUMBER$ ) ) {
rank: 572
score: 98.73336791992188
patch: double [ ] intersection = new double [ $NUMBER$ ] ;
rank: 572
score: 98.46173773871527
patch: / / * * * / / /
rank: 572
score: 98.14346313476562
patch: / * / / / / }
rank: 572
score: 97.80859375
patch: / / final /
rank: 573
score: 99.32535807291667
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . get CaMeL Hyperplane ( ) ;
rank: 573
score: 99.28068033854167
patch: String line $NUMBER$ = sub CaMeL Line . get CaMeL Line ( ) ;
rank: 573
score: 99.2630948153409
patch: return intersection ( line 1 . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 573
score: 99.20187174479166
patch: Line line $NUMBER$ += sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 573
score: 98.91920689174107
patch: if ( line $NUMBER$ . starts CaMeL With ( $STRING$ ) ) {
rank: 573
score: 98.73244803292411
patch: float [ ] intersection = new float [ intersection . length ] ;
rank: 573
score: 98.46162923177083
patch: / * ? / * * / /
rank: 573
score: 98.14335632324219
patch: else { / * * * /
rank: 573
score: 97.80697195870536
patch: / return / / / /
rank: 574
score: 99.39626242897727
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 574
score: 99.32476485402961
patch: Line line $NUMBER$ = = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 574
score: 99.28028869628906
patch: Line line 1 = ( Line ) sub CaMeL Line . sub CaMeL Line ;
rank: 574
score: 99.26302083333333
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL
rank: 574
score: 99.20171712239583
patch: get CaMeL Remaining CaMeL Region ( ) . intersection ( line 1 ) ;
rank: 574
score: 98.91888834635417
patch: if ( line $NUMBER$ . index CaMeL Of ( $STRING$ ) < 0 )
rank: 574
score: 98.7323710123698
patch: if ( line $NUMBER$ == null ) return / * /
rank: 574
score: 98.46065266927083
patch: / * * ? * * * /
rank: 574
score: 97.80546351841518
patch: intersection / int / / /
rank: 575
score: 99.32474190848214
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; / * *
rank: 575
score: 99.27973284040179
patch: Line line $NUMBER$ 1 = line 1 . intersection ( line $NUMBER$ )
rank: 575
score: 99.20171712239583
patch: final String line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 575
score: 98.91841947115384
patch: if ( line 1 . intersection ( line 1 ) ) {
rank: 575
score: 98.7312255859375
patch: if ( line 1 == null / * intersection . * / ) {
rank: 575
score: 98.46035427517361
patch: / * ] / * * / /
rank: 575
score: 98.14108276367188
patch: / / if * * * /
rank: 575
score: 97.80507114955357
patch: } / * / / /
rank: 576
score: 99.39569702148438
patch: Line line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 576
score: 99.32454207136824
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( $STRING$ ) ) ;
rank: 576
score: 99.27928059895834
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( sub CaMeL Line ,
rank: 576
score: 99.26258433948864
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) == 0 ) {
rank: 576
score: 99.20171247209821
patch: if ( get CaMeL Remaining CaMeL Region ( ) != null ) {
rank: 576
score: 98.91838836669922
patch: if ( line 1 . index CaMeL Of ( line 1 ) < 0 )
rank: 576
score: 98.73076171875
patch: if ( line $NUMBER$ . intersection ( intersection ) / * / / /
rank: 576
score: 98.45865885416667
patch: / * / * * / / *
rank: 576
score: 98.14094761439732
patch: / / } / * /
rank: 576
score: 97.80398995535714
patch: { / { / / /
rank: 577
score: 99.39558490953948
patch: / / line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 577
score: 99.32439030827703
patch: = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 577
score: 99.2625732421875
patch: this . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 577
score: 99.20093712439903
patch: if ( get CaMeL Remaining CaMeL Region ( ) == null )
rank: 577
score: 98.9179916381836
patch: switch ( line 1 . get CaMeL Type ( ) ) { case line 1
rank: 577
score: 98.72840881347656
patch: if ( intersection . is CaMeL Empty ( ) / * / ) / /
rank: 577
score: 98.45840115017361
patch: / * ? / / / / /
rank: 577
score: 98.14093780517578
patch: if ( intersection / break ) {
rank: 577
score: 97.80371704101563
patch: / / } /
rank: 578
score: 99.32405598958333
patch: Line line $NUMBER$ += get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 578
score: 99.26214044744319
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) . to CaMeL Sub CaMeL Space ( ) ) {
rank: 578
score: 99.20071614583334
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line [ $NUMBER$ ] ;
rank: 578
score: 98.72776285807292
patch: if ( intersection != null && line $NUMBER$ == null )
rank: 578
score: 98.45817735460069
patch: / * * * ] * / /
rank: 578
score: 98.14030456542969
patch: final / * / * / /
rank: 578
score: 97.80368477957589
patch: / / * / / compute
rank: 579
score: 99.27729034423828
patch: Line line $NUMBER$ 1 = line 1 . get CaMeL Line 1 ( ) ;
rank: 579
score: 99.26210123697916
patch: return sub CaMeL Line . intersection ( include CaMeL End CaMeL Points ) ;
rank: 579
score: 99.1988525390625
patch: Line line $NUMBER$ = ( Region ) sub CaMeL Line . ( ) ;
rank: 579
score: 98.91642761230469
patch: if ( line 1 . index CaMeL Of ( line $NUMBER$ ) < 0 )
rank: 579
score: 98.72760009765625
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( intersection ) ;
rank: 579
score: 98.45732964409723
patch: / * * char * / * /
rank: 579
score: 98.1400146484375
patch: else { / * / / }
rank: 579
score: 97.80355834960938
patch: / / / int
rank: 580
score: 99.32354910714285
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 580
score: 99.27694091796874
patch: line 1 . intersection ( line $NUMBER$ ) ;
rank: 580
score: 99.26203918457031
patch: / * if ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 580
score: 99.19801548549107
patch: if ( line 1 . get CaMeL Hyperplane ( ) == 0 )
rank: 580
score: 98.91626739501953
patch: if ( line 1 . ends CaMeL With ( $STRING$ line 1 ) ) {
rank: 580
score: 98.72691127232143
patch: char [ ] intersection = new char [ intersection . length ] ;
rank: 580
score: 98.45644802517361
patch: / * / * / / / *
rank: 580
score: 98.13927350725446
patch: / / * * / }
rank: 580
score: 97.80289713541667
patch: / / / int /
rank: 581
score: 99.39412649054276
patch: Line ) line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 581
score: 99.27680969238281
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . clone ( ) ;
rank: 581
score: 99.26200358072917
patch: Symbol line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 581
score: 99.1964111328125
patch: try { if ( include CaMeL End CaMeL Points )
rank: 581
score: 98.72603607177734
patch: final int [ ] intersection = new int [ line 1 . length ] ;
rank: 581
score: 98.13909149169922
patch: / / in * * * /
rank: 581
score: 97.80255998883929
patch: / / / / = /
rank: 582
score: 99.32331986860795
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 582
score: 98.9131851196289
patch: if ( line $NUMBER$ . index CaMeL Of ( $STRING$ ) == - 1 )
rank: 582
score: 98.72582194010417
patch: if ( intersection == null / * this . intersection * / / /
rank: 582
score: 98.45454915364583
patch: / * * int * / / /
rank: 582
score: 98.13899993896484
patch: try { intersection / * * /
rank: 583
score: 99.39370582217262
patch: if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ;
rank: 583
score: 99.32325439453125
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ) ;
rank: 583
score: 99.27496744791667
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) != null
rank: 583
score: 99.26191929408482
patch: int line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) ;
rank: 583
score: 99.19636753627232
patch: String line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 583
score: 98.91297149658203
patch: if ( line $NUMBER$ . index CaMeL Of ( $STRING$ ) < - 1 )
rank: 583
score: 98.72519356863839
patch: if ( intersection . contains ( line $NUMBER$ ) / * / /
rank: 583
score: 98.45445421006944
patch: / * / * * / } /
rank: 583
score: 98.1389872233073
patch: } if / * /
rank: 583
score: 97.80082484654018
patch: if / { / / /
rank: 584
score: 99.39349365234375
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 584
score: 99.27490234375
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( line $NUMBER$ )
rank: 584
score: 99.26190185546875
patch: / * if ( include CaMeL End CaMeL Points && line 1 . get CaMeL Remaining CaMeL Region ( ) . get CaMeL
rank: 584
score: 99.1954345703125
patch: if ( include CaMeL End CaMeL Points && intersection ( line $NUMBER$ ) )
rank: 584
score: 98.91182163783482
patch: / / throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 584
score: 98.7249004657452
patch: if ( intersection == null || line $NUMBER$ == null ) {
rank: 584
score: 98.45444742838542
patch: / * * char * * / line
rank: 584
score: 98.13888549804688
patch: if ( intersection ) { break ;
rank: 584
score: 97.80035400390625
patch: / / / break / /
rank: 585
score: 99.39334542410714
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) . intersection ( sub CaMeL Line ) ;
rank: 585
score: 99.32304077148437
patch: Line line $NUMBER$ = sub CaMeL Line . intersection ( get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 585
score: 99.274755859375
patch: Line line $NUMBER$ = line $NUMBER$ . to CaMeL Sub CaMeL Space ( )
rank: 585
score: 99.26178448016827
patch: this . sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 585
score: 99.19459635416666
patch: if ( include CaMeL End CaMeL Points || line $NUMBER$ == null ) {
rank: 585
score: 98.91162109375
patch: / * / if ( line 1 != - 1 ) {
rank: 585
score: 98.72479717548077
patch: if ( line $NUMBER$ / $NUMBER$ / * intersection * / )
rank: 585
score: 98.45391082763672
patch: / * ] * * / /
rank: 585
score: 98.13861083984375
patch: else { / * / } /
rank: 585
score: 97.7994384765625
patch: } / { / /
rank: 586
score: 99.39202325994319
patch: Line line $NUMBER$ = ( Line ) this . get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 586
score: 99.32259792751736
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) .
rank: 586
score: 99.26158854166667
patch: this . line 1 = line 1 . get CaMeL Hyperplane ( ) ;
rank: 586
score: 99.19449055989584
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) != $STRING$ )
rank: 586
score: 98.9115234375
patch: if ( line 1 . get CaMeL Length ( ) <= 0 ) {
rank: 586
score: 98.72479248046875
patch: if ( line $NUMBER$ . intersection ( intersection ) / * / /
rank: 586
score: 98.45338270399306
patch: / * int / / * / /
rank: 586
score: 98.1375732421875
patch: / / char * * /
rank: 586
score: 97.7991943359375
patch: / / / try /
rank: 587
score: 99.3919677734375
patch: return ( ( Sub CaMeL Line ) line 1 ) . intersection ( line $NUMBER$ ) ;
rank: 587
score: 99.32259114583333
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 587
score: 99.1942138671875
patch: final String line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 587
score: 98.91088053385417
patch: / * / if ( intersection . is CaMeL Empty ( ) ) {
rank: 587
score: 98.72357732599431
patch: final int size = intersection . size ( ) ;
rank: 587
score: 98.13733673095703
patch: / / int * * * /
rank: 587
score: 97.79396275111607
patch: int / { / / /
rank: 588
score: 99.27252197265625
patch: Line line $NUMBER$ 1 = get CaMeL Hyperplane ( ) ;
rank: 588
score: 99.26118396577381
patch: if ( line 1 != null && include CaMeL End CaMeL Points || include CaMeL End CaMeL Points ) {
rank: 588
score: 99.19361461292614
patch: if ( sub CaMeL Line 1 != null ) {
rank: 588
score: 98.90985514322917
patch: / * / List intersection = new Array CaMeL List ( intersection ) ;
rank: 588
score: 98.72242082868304
patch: if ( intersection . size ( ) == 0 / * / )
rank: 588
score: 98.44858805338542
patch: / / System . / * / /
rank: 588
score: 98.13719831194196
patch: if / * intersection * /
rank: 588
score: 97.79171316964286
patch: / / / List / /
rank: 589
score: 99.39053199404762
patch: / * * / line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 589
score: 99.32234700520833
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ) ;
rank: 589
score: 99.27236328125
patch: Line line 1 1 = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 589
score: 99.26116622121711
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 589
score: 99.19357096354166
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) {
rank: 589
score: 98.90935809795673
patch: if ( line 1 . equals ( line $NUMBER$ ) ) {
rank: 589
score: 98.72234637920673
patch: / * / / / / / / / / * /
rank: 589
score: 98.44755554199219
patch: / * / int * / }
rank: 589
score: 98.1351547241211
patch: / * / * * / }
rank: 589
score: 97.78677804129464
patch: / / break / / /
rank: 590
score: 99.32227222339527
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 590
score: 99.26116584329044
patch: } if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) {
rank: 590
score: 99.193310546875
patch: if ( line 1 . get CaMeL Hyperplane ( ) == 0 ) {
rank: 590
score: 98.72208077566964
patch: if ( intersection . is CaMeL Empty ( ) / * / /
rank: 590
score: 98.44725206163194
patch: / int * / / / / /
rank: 590
score: 98.13494001116071
patch: final / * ? * /
rank: 590
score: 97.78572300502232
patch: / / byte / / /
rank: 591
score: 99.27205657958984
patch: Line line 1 = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ;
rank: 591
score: 99.2611592610677
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && ( include CaMeL End CaMeL Points ) ) {
rank: 591
score: 99.19309488932292
patch: if ( line 1 . size ( ) > 0 )
rank: 591
score: 98.90769958496094
patch: if ( line 1 . index CaMeL Of ( $STRING$ ) != - 1 )
rank: 591
score: 98.7214864095052
patch: if ( intersection ( line 1 ) / * / /
rank: 591
score: 98.44725206163194
patch: / * * / * * / }
rank: 591
score: 98.13423374720982
patch: / / List * * /
rank: 591
score: 97.78451102120536
patch: / / { / / *
rank: 592
score: 99.38963623046875
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) == null ;
rank: 592
score: 99.32198660714286
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( )
rank: 592
score: 99.27141927083333
patch: int line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( )
rank: 592
score: 99.19208170572917
patch: Object line $NUMBER$ = sub CaMeL Line . get CaMeL Line ( ) ;
rank: 592
score: 98.90750325520834
patch: if ( line 1 . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 592
score: 98.72142615685097
patch: if ( line $NUMBER$ / $NUMBER$ / * intersection * / /
rank: 592
score: 98.44619411892361
patch: / * * / / / / compute
rank: 592
score: 98.1336669921875
patch: / / if * * /
rank: 592
score: 97.78220040457589
patch: / / try / / compute
rank: 593
score: 99.3895263671875
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) : line $NUMBER$ ;
rank: 593
score: 99.26040988498264
patch: return get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 593
score: 99.19131234975961
patch: if ( sub CaMeL Line . size ( ) > 0 )
rank: 593
score: 98.90721893310547
patch: / * / if ( line 1 . is CaMeL Empty ( ) ) {
rank: 593
score: 98.7209981282552
patch: if ( intersection == null ) { return null ; }
rank: 593
score: 98.44611358642578
patch: / * * list * * /
rank: 593
score: 98.13241141183036
patch: final / * * * /
rank: 593
score: 97.77971540178571
patch: / / else / / compute
rank: 594
score: 99.38932531020221
patch: return ( Line ) get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 594
score: 99.26012602306548
patch: this . include CaMeL End CaMeL Points = ( Line ) line 1 . intersection ( line $NUMBER$ ) ;
rank: 594
score: 99.19096069335937
patch: Line line $NUMBER$ = ( Line ) true ;
rank: 594
score: 98.90657806396484
patch: if ( line 1 != null && line $NUMBER$ . length != 0 ) {
rank: 594
score: 98.720703125
patch: if ( line 1 . is CaMeL Empty ( ) )
rank: 594
score: 98.4459228515625
patch: / * / int * * / intersection
rank: 594
score: 98.13104248046875
patch: if ( intersection != this ) {
rank: 594
score: 97.77927652994792
patch: / else / / compute
rank: 595
score: 99.32073296440973
patch: Content line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 595
score: 99.26937866210938
patch: line 1 . intersection ( line $NUMBER$ . intersection ( line 1 ) ) ;
rank: 595
score: 99.25975452769886
patch: return intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 595
score: 98.90540489783653
patch: if ( line 1 . size ( ) == 0 ) {
rank: 595
score: 98.71774291992188
patch: if ( line 1 == null / * / ) {
rank: 595
score: 98.4456787109375
patch: / * * * / int * /
rank: 595
score: 98.13044738769531
patch: / / final / * / /
rank: 595
score: 97.77498953683036
patch: / / continue / / /
rank: 596
score: 99.38899369673295
patch: Line line $NUMBER$ = ( Line ) this . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 596
score: 99.32038225446429
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( - $NUMBER$ ) ;
rank: 596
score: 99.26931762695312
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Sub CaMeL Space ( ) ;
rank: 596
score: 99.25961642795139
patch: URI line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 596
score: 99.19085286458333
patch: Line 1 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 596
score: 98.90476771763393
patch: / * throw new Runtime CaMeL Exception ( $STRING$ ) ; * /
rank: 596
score: 98.71771240234375
patch: if ( intersection . contains ( line $NUMBER$ ) / * / )
rank: 596
score: 98.44517008463542
patch: / * / * * * / }
rank: 596
score: 97.77491978236607
patch: / System / / / /
rank: 597
score: 99.388671875
patch: / / $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 597
score: 99.32031909839527
patch: String line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 597
score: 99.26783854166666
patch: Line line 1 1 = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 597
score: 99.25953258167614
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Line ( ) != null ) {
rank: 597
score: 99.190625
patch: if ( line $NUMBER$ . get CaMeL Hyperplane ( ) != 0 ) {
rank: 597
score: 98.90394944411058
patch: if ( line 1 . contains ( line 1 ) ) {
rank: 597
score: 98.7177022298177
patch: byte [ ] intersection = new byte [ 0 ] ;
rank: 597
score: 98.44497680664062
patch: / * ] / / / /
rank: 597
score: 98.12992095947266
patch: final / * * * / }
rank: 597
score: 97.77293904622395
patch: throw / / / /
rank: 598
score: 99.32007998511905
patch: = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 598
score: 99.25930946751645
patch: for ( Line line $NUMBER$ : sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) )
rank: 598
score: 99.1893310546875
patch: int intersection $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 598
score: 98.90360804966518
patch: if ( line 1 . length == line 1 . length ) {
rank: 598
score: 98.71726481119792
patch: if ( intersection . size ( ) == 0 ) {
rank: 598
score: 98.44453938802083
patch: / * / / int / * /
rank: 598
score: 98.129638671875
patch: if ( intersection ) { intersection }
rank: 598
score: 97.77208600725446
patch: LOG / / / / /
rank: 599
score: 99.31953357514881
patch: Line get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 599
score: 99.25911712646484
patch: if ( sub CaMeL Line != null || include CaMeL End CaMeL Points ) {
rank: 599
score: 99.18822224934895
patch: if ( sub CaMeL Line [ 0 ] != null )
rank: 599
score: 98.90326799665179
patch: if ( line 1 . length > line $NUMBER$ . length ) {
rank: 599
score: 98.7172100360577
patch: if ( intersection == null / * intersection * / ) /
rank: 599
score: 98.44386800130208
patch: / * * ? / * / /
rank: 599
score: 98.12948172433036
patch: if ( intersection ) { {
rank: 599
score: 97.77151053292411
patch: / / / / break /
rank: 600
score: 99.38770967371323
patch: boolean include CaMeL End CaMeL Points = line 1 . get CaMeL Hyperplane ( ) ;
rank: 600
score: 99.31928315033784
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( 0 ) ) ;
rank: 600
score: 99.26542154947917
patch: final Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 600
score: 99.25889485677084
patch: return ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 600
score: 99.18597412109375
patch: Line line $NUMBER$ = ( Line ) line 1 . ( ) ;
rank: 600
score: 98.90208217075893
patch: if ( line 1 != null || line 1 != null ) {
rank: 600
score: 98.71533203125
patch: / * / / / / / / / * / /
rank: 600
score: 98.44346400669643
patch: / * / try { /
rank: 600
score: 98.12855747767857
patch: final / * / * /
rank: 600
score: 97.77030726841518
patch: if / / / / compute
rank: 601
score: 99.38732328869048
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ; System . }
rank: 601
score: 99.26517486572266
patch: Line line 1 = get CaMeL Line 1 . intersection ( line $NUMBER$ ) ;
rank: 601
score: 99.25858764648437
patch: / * else line 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 601
score: 98.90196940104167
patch: if ( line 1 . size ( line $NUMBER$ ) > 0 ) {
rank: 601
score: 98.71502278645833
patch: if ( intersection . contains ( line $NUMBER$ ) / * / ) /
rank: 601
score: 98.44309488932292
patch: / * ] * /
rank: 601
score: 98.12850952148438
patch: / * / * / } /
rank: 601
score: 97.76756068638393
patch: logger / / / / compute
rank: 602
score: 99.31853569878473
patch: final boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line ) ) ;
rank: 602
score: 99.26397298177083
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ; / *
rank: 602
score: 99.25850132533482
patch: / * / return line 1 . intersection ( line $NUMBER$ ) ;
rank: 602
score: 99.18202427455357
patch: File line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 602
score: 98.90189034598214
patch: if ( line 1 == null || line $NUMBER$ != null ) {
rank: 602
score: 98.71421461838942
patch: if ( line $NUMBER$ == null ) return new / * /
rank: 602
score: 98.44154188368056
patch: / * * char * / / /
rank: 602
score: 98.12757873535156
patch: / * * ? * / /
rank: 602
score: 97.76656087239583
patch: / / / / add
rank: 603
score: 99.31846110026042
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . ) ;
rank: 603
score: 99.25840065696023
patch: if ( include CaMeL End CaMeL Points || sub CaMeL Line . get CaMeL Hyperplane ( ) != null ) {
rank: 603
score: 99.18132672991071
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line ) {
rank: 603
score: 98.90143377130681
patch: Iterator intersection = line 1 . iterator ( ) ;
rank: 603
score: 98.71378871372768
patch: Object [ ] intersection = new Object [ ] { intersection } ;
rank: 603
score: 98.44124348958333
patch: / * / / / * / }
rank: 603
score: 98.12628173828125
patch: if / * * * / else
rank: 603
score: 97.76625569661458
patch: / / List / /
rank: 604
score: 99.31819661458333
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 604
score: 99.25826223273026
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) return line 1 ;
rank: 604
score: 99.18117112379808
patch: / * = line 1 . intersection ( line $NUMBER$ ) ;
rank: 604
score: 98.90050397600446
patch: / * throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 604
score: 98.71365356445312
patch: assert line $NUMBER$ != null : $STRING$ + line 1 ;
rank: 604
score: 98.12594604492188
patch: / / Array CaMeL List / /
rank: 604
score: 97.763916015625
patch: / / / boolean /
rank: 605
score: 99.38675944010417
patch: End line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 605
score: 99.31804865056819
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 605
score: 99.26121520996094
patch: final Line line $NUMBER$ = sub CaMeL Line . get CaMeL Line ( ) ;
rank: 605
score: 99.25688032670455
patch: this . line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 605
score: 98.8998779296875
patch: if ( line 1 . get CaMeL Parent ( ) != null ) {
rank: 605
score: 98.713134765625
patch: / / / / / / / / / / * /
rank: 605
score: 98.43975830078125
patch: / / / System . / / /
rank: 605
score: 98.12451171875
patch: if / / char * / /
rank: 605
score: 97.7623291015625
patch: this / / / / /
rank: 606
score: 99.3866958618164
patch: Sub CaMeL Line line $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 606
score: 99.31745741102431
patch: Composite line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 606
score: 99.2606201171875
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) != null
rank: 606
score: 99.25670805431548
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) . ) {
rank: 606
score: 99.17876325334821
patch: if ( line $NUMBER$ . get CaMeL Hyperplane ( ) != 0 )
rank: 606
score: 98.89778645833333
patch: / * / if ( intersection . size ( ) > 0 ) {
rank: 606
score: 98.71246337890625
patch: if ( intersection == null ) { / * / / * /
rank: 606
score: 98.43952772352431
patch: / / * / / * * /
rank: 606
score: 97.76121303013393
patch: / / int intersection . /
rank: 607
score: 99.38650512695312
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) . get ( line $NUMBER$ ) ;
rank: 607
score: 99.3173768578506
patch: final boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 607
score: 99.26058756510416
patch: sub CaMeL Line = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 607
score: 99.25667724609374
patch: if ( sub CaMeL Line != null ) {
rank: 607
score: 99.17837088448661
patch: if ( line $NUMBER$ . get CaMeL Line ( ) != null )
rank: 607
score: 98.71100323016827
patch: if ( intersection ( line $NUMBER$ ) / * / / /
rank: 607
score: 98.43877495659723
patch: / * * / * * / line
rank: 607
score: 97.75968424479167
patch: infinite / * / /
rank: 608
score: 99.3852294921875
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Line ( line 1 ) ;
rank: 608
score: 99.26010131835938
patch: Location line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 608
score: 99.25662570529514
patch: this . line 1 = ( Line ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 608
score: 99.17702229817708
patch: final Object line $NUMBER$ = get CaMeL Hyperplane ( ) ;
rank: 608
score: 98.89661458333333
patch: if ( line 1 . index CaMeL Of ( $STRING$ ) < 0 )
rank: 608
score: 98.71016751802884
patch: if ( intersection == null ) { / * * / /
rank: 608
score: 98.43876817491319
patch: / * / / } / / /
rank: 608
score: 98.12094116210938
patch: String intersection = intersection / * /
rank: 608
score: 97.75851004464286
patch: / out / / / /
rank: 609
score: 99.38520364200367
patch: line $NUMBER$ = ( Line ) sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 609
score: 99.259765625
patch: int line $NUMBER$ = get CaMeL Line 1 . get CaMeL Hyperplane ( ) ;
rank: 609
score: 99.1766690340909
patch: Line line $NUMBER$ = ( Line 1 != null )
rank: 609
score: 98.89537760416667
patch: final int line 1 = line 1 . get CaMeL Line ( ) ;
rank: 609
score: 98.71001325334821
patch: if ( line $NUMBER$ == null / * intersection * / ) {
rank: 609
score: 98.43862575954861
patch: / * / int * / / line
rank: 609
score: 98.12090301513672
patch: final List / * * / }
rank: 609
score: 97.75845772879464
patch: / / ? / / /
rank: 610
score: 99.31711939761513
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ) ;
rank: 610
score: 99.25918782552084
patch: line $NUMBER$ . intersection ( get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 610
score: 99.25583321707589
patch: if ( include CaMeL End CaMeL Points ) { return line 1 ;
rank: 610
score: 99.17568137428977
patch: if ( sub CaMeL Line 1 == null ) {
rank: 610
score: 98.89474722055289
patch: if ( line 1 . intersection ( line $NUMBER$ ) / /
rank: 610
score: 98.70957728794643
patch: Object [ ] intersection line $NUMBER$ = new Object [ 1 ] ;
rank: 610
score: 98.43825954861111
patch: / * int / * * / /
rank: 610
score: 98.1201400756836
patch: / / int * * / }
rank: 610
score: 97.75750732421875
patch: / / / * compute
rank: 611
score: 99.25896453857422
patch: line $NUMBER$ . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 611
score: 99.25570068359374
patch: / ; Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 611
score: 99.17555454799107
patch: if ( line $NUMBER$ . get CaMeL Hyperplane ( ) == $STRING$ )
rank: 611
score: 98.8942159016927
patch: if ( line 1 != null ) { / * /
rank: 611
score: 98.70953776041667
patch: if ( line $NUMBER$ . get CaMeL Line ( ) == null ) {
rank: 611
score: 98.43795776367188
patch: / * * / * / line
rank: 611
score: 98.11955261230469
patch: / / / * / * /
rank: 611
score: 97.75643484933036
patch: / / { / / try
rank: 612
score: 99.31662469161184
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( line $NUMBER$ ) ;
rank: 612
score: 99.258203125
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) == null
rank: 612
score: 99.17322649274554
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( false ) ;
rank: 612
score: 98.89363606770833
patch: if ( line 1 != null && line $NUMBER$ . length > 0 )
rank: 612
score: 98.708984375
patch: if ( line $NUMBER$ == null / * / ) { / * /
rank: 612
score: 98.43766784667969
patch: / * * int * * /
rank: 612
score: 98.11799621582031
patch: / / * * / } /
rank: 612
score: 97.75581665039063
patch: logger / / /
rank: 613
score: 99.384033203125
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . clone ( ) ;
rank: 613
score: 99.25804036458334
patch: Line line $NUMBER$ = line 1 . get CaMeL Line 1 ( ) ;
rank: 613
score: 99.25482732599431
patch: if ( include CaMeL End CaMeL Points && line 1 . to CaMeL Sub CaMeL Space ( ) != null )
rank: 613
score: 98.7069091796875
patch: if ( line $NUMBER$ == / * intersection . * / )
rank: 613
score: 98.43702043805804
patch: / * ] * * /
rank: 613
score: 98.11776297433036
patch: / * / * / try
rank: 613
score: 97.7552490234375
patch: / / double / /
rank: 614
score: 99.31581517269737
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . get CaMeL Hyperplane ( ) ) ;
rank: 614
score: 99.25751139322917
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( sub CaMeL Line )
rank: 614
score: 99.25474717881944
patch: / * if ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) {
rank: 614
score: 99.171630859375
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( true ) ;
rank: 614
score: 98.89215087890625
patch: if ( line 1 != - 1 ) {
rank: 614
score: 98.70587565104167
patch: if ( line $NUMBER$ / $NUMBER$ / $NUMBER$ . 0 / * / )
rank: 614
score: 98.43675401475694
patch: / * / * / } / /
rank: 614
score: 98.1175765991211
patch: synchronized ( this / * / /
rank: 614
score: 97.7547607421875
patch: / / / { compute
rank: 615
score: 99.38296363467262
patch: Line line $NUMBER$ = ( Line 1 ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 615
score: 99.25621032714844
patch: Line line $NUMBER$ = line $NUMBER$ . check CaMeL Point ( line $NUMBER$ ) ;
rank: 615
score: 99.25469563802083
patch: this . line 1 = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 615
score: 99.17156982421875
patch: int line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 615
score: 98.891357421875
patch: if ( line $NUMBER$ . get CaMeL Location ( ) == null ) {
rank: 615
score: 98.70502178485577
patch: if ( intersection == null / * intersection * / / /
rank: 615
score: 98.43650987413194
patch: / / int / * * / /
rank: 615
score: 98.11683654785156
patch: / / * / } / /
rank: 615
score: 97.75422014508929
patch: } / / { / /
rank: 616
score: 99.3829116821289
patch: Line line $NUMBER$ = ( Line ) check CaMeL Point ( line 1 ) ;
rank: 616
score: 99.25426664806548
patch: if ( include CaMeL End CaMeL Points && line 1 . get CaMeL Length ( ) > 0 ) {
rank: 616
score: 98.89132254464286
patch: if ( line 1 . length < line 1 . length ) {
rank: 616
score: 98.70454915364583
patch: int [ ] intersection = new int [ 0 ] ;
rank: 616
score: 98.43604871961806
patch: / * * / * * / *
rank: 616
score: 98.11616734095982
patch: final List [ ] * /
rank: 616
score: 97.75254603794643
patch: / / finally / / /
rank: 617
score: 99.38283284505208
patch: Line line $NUMBER$ = new Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 617
score: 99.31402587890625
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 ) ;
rank: 617
score: 99.25564575195312
patch: Line line $NUMBER$ 1 1 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 617
score: 99.25416148792614
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 617
score: 99.17041015625
patch: int line $NUMBER$ = get CaMeL Hyperplane ( ) ;
rank: 617
score: 98.89020182291667
patch: if ( line $NUMBER$ . intersection ( line 1 / $NUMBER$ ) ) {
rank: 617
score: 98.7042987530048
patch: / / { / / / / / / / * /
rank: 617
score: 98.43564181857639
patch: / * / / / * else /
rank: 617
score: 98.11605834960938
patch: } else { / * / }
rank: 617
score: 97.75223214285714
patch: / / List / / /
rank: 618
score: 99.31372680664063
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ) ;
rank: 618
score: 99.25548553466797
patch: Line line $NUMBER$ = ( get CaMeL Remaining CaMeL Region ( ) != null )
rank: 618
score: 99.25388055098684
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 618
score: 99.17025320870536
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . sub CaMeL
rank: 618
score: 98.89012799944196
patch: if ( line 1 . ends CaMeL With ( $STRING$ ) / /
rank: 618
score: 98.7037823016827
patch: if ( line $NUMBER$ == null ) return null ; else {
rank: 618
score: 98.43511284722223
patch: / * / * / System . /
rank: 618
score: 98.11539132254464
patch: if / * ? * /
rank: 618
score: 97.74960763113839
patch: / } / / / /
rank: 619
score: 99.31333139780405
patch: Line line 1 = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 619
score: 99.25540364583334
patch: Line - 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 619
score: 99.1694805438702
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line )
rank: 619
score: 98.88977864583333
patch: if ( line $NUMBER$ . intersection ( line $NUMBER$ / $NUMBER$ ) ) {
rank: 619
score: 98.70344761439732
patch: if ( line $NUMBER$ / $NUMBER$ == null ) { / * /
rank: 619
score: 98.43431939019098
patch: / * * ? * / / /
rank: 619
score: 98.1138916015625
patch: / * int * * /
rank: 619
score: 97.74942626953126
patch: public / / /
rank: 620
score: 99.38223427220395
patch: Line line $NUMBER$ = ( Line ) - sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 620
score: 99.31312779017857
patch: Line get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 620
score: 99.2532599954044
patch: this . line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 620
score: 99.16849190848214
patch: line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 620
score: 98.8894794170673
patch: / / throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 620
score: 98.43363952636719
patch: / * / int * / intersection
rank: 620
score: 98.11371612548828
patch: / * int * * * /
rank: 620
score: 97.74741036551339
patch: / / int * / line
rank: 621
score: 99.38191528320313
patch: Line line $NUMBER$ = ( Line ) this . sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 621
score: 99.31309925426136
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 621
score: 99.2538350423177
patch: line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ;
rank: 621
score: 98.88878377278645
patch: / * / if ( line 1 == null ) {
rank: 621
score: 98.70231410435268
patch: Object [ ] intersection line $NUMBER$ = new Object [ 0 ] ;
rank: 621
score: 98.43362765842014
patch: / * / int * / int /
rank: 621
score: 98.1131083170573
patch: / / in * /
rank: 621
score: 97.74568394252232
patch: final / / / / /
rank: 622
score: 99.38121880425348
patch: / / include CaMeL End CaMeL Points = line 1 . intersection ( line $NUMBER$ ) ;
rank: 622
score: 99.3128662109375
patch: Sub CaMeL Line sub CaMeL Line = line 1 . intersection ( line $NUMBER$ ) ;
rank: 622
score: 99.25368826729911
patch: Object line 1 = line 1 . intersection ( line $NUMBER$ ) ;
rank: 622
score: 99.25271426930146
patch: if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) != null )
rank: 622
score: 99.16807204026442
patch: if ( line $NUMBER$ . equals ( line $NUMBER$ ) ) {
rank: 622
score: 98.88805213341347
patch: if ( line 1 . length ( ) == 0 ) {
rank: 622
score: 98.70155686598558
patch: if ( intersection == null ) { throw new / * /
rank: 622
score: 98.4334716796875
patch: / * * / System . /
rank: 622
score: 98.11265345982143
patch: if ( intersection / * compute
rank: 622
score: 97.74455043247768
patch: / / / if / /
rank: 623
score: 99.38104569284539
patch: Line line $NUMBER$ = ( Line ) to CaMeL Sub CaMeL Space ( sub CaMeL Line ) ;
rank: 623
score: 99.31248837425595
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 623
score: 99.25291224888393
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( line 1 )
rank: 623
score: 99.25267740885417
patch: super . intersection ( line $NUMBER$ , include CaMeL End CaMeL Points ) ;
rank: 623
score: 99.16651407877605
patch: if ( line $NUMBER$ . equals ( line $NUMBER$ ) )
rank: 623
score: 98.88799438476562
patch: Iterator intersection = intersection . iterator ( ) ;
rank: 623
score: 98.70138784555289
patch: if ( line $NUMBER$ / $NUMBER$ == null / * / )
rank: 623
score: 98.43234592013889
patch: / / / int * * / /
rank: 623
score: 98.11264038085938
patch: if ( / * intersection ) {
rank: 623
score: 97.74312918526786
patch: return / { / / /
rank: 624
score: 99.38074311755952
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ; / * * /
rank: 624
score: 99.31160481770833
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . ) ;
rank: 624
score: 99.25265502929688
patch: Line line $NUMBER$ $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 624
score: 99.25181477864584
patch: return intersection ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 624
score: 99.1663348858173
patch: if ( get CaMeL Remaining CaMeL Region ( ) != null )
rank: 624
score: 98.88707557091347
patch: if ( line $NUMBER$ . size ( ) > 1 ) {
rank: 624
score: 98.7011210123698
patch: if ( intersection != null && line $NUMBER$ != null )
rank: 624
score: 98.43115997314453
patch: / * ? / * / /
rank: 624
score: 98.11177280970982
patch: final / * * / /
rank: 624
score: 97.74044363839286
patch: long / / / / /
rank: 625
score: 99.31158603766026
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space (
rank: 625
score: 99.251220703125
patch: String line $NUMBER$ = sub CaMeL Line . get CaMeL Line $NUMBER$ ( ) ;
rank: 625
score: 99.16517857142857
patch: if ( line $NUMBER$ != null || include CaMeL End CaMeL Points )
rank: 625
score: 98.88671875
patch: if ( line 1 . intersection ( line 1 ) != null ) {
rank: 625
score: 98.69970703125
patch: / * / / / / / / / / / /
rank: 625
score: 98.11167907714844
patch: if / / char / / /
rank: 625
score: 97.74041748046875
patch: / / / final /
rank: 626
score: 99.25113677978516
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) == this ) {
rank: 626
score: 99.2510986328125
patch: Line line $NUMBER$ = sub CaMeL Line 1 . get CaMeL Hyperplane ( ) ;
rank: 626
score: 99.16462925502232
patch: = ( Line ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 626
score: 98.88662109375
patch: if ( line 1 . get CaMeL Line ( ) instanceof Line ) {
rank: 626
score: 98.69956461588542
patch: if ( intersection ( intersection ( line $NUMBER$ ) ) )
rank: 626
score: 98.43071831597223
patch: / / List / / / / /
rank: 626
score: 98.11153411865234
patch: if ( intersection / * intersection )
rank: 626
score: 97.7403564453125
patch: / / / / / float
rank: 627
score: 99.37780083550348
patch: return line 1 . intersection ( sub CaMeL Line , include CaMeL End CaMeL Points ) ;
rank: 627
score: 99.31096335018383
patch: int include CaMeL End CaMeL Points = line 1 . intersection ( line $NUMBER$ ) ;
rank: 627
score: 99.25094401041666
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Line $NUMBER$ ( ) ;
rank: 627
score: 99.24992540147569
patch: int line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Length ( ) ;
rank: 627
score: 99.16460309709821
patch: int line $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 627
score: 98.88639009915866
patch: switch ( line 1 / $NUMBER$ ) { case - 1 :
rank: 627
score: 98.69920131138393
patch: Object [ ] intersection = null ; if ( intersection != null )
rank: 627
score: 98.11083984375
patch: } else { / * / /
rank: 627
score: 97.74019368489583
patch: System / / / /
rank: 628
score: 99.25089518229167
patch: String line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( )
rank: 628
score: 99.24991183810764
patch: if ( include CaMeL End CaMeL Points && ( include CaMeL End CaMeL Points ) ) {
rank: 628
score: 98.885498046875
patch: if ( line 1 . intersection ( line $NUMBER$ / $NUMBER$ ) / /
rank: 628
score: 98.6989413174716
patch: if ( line $NUMBER$ / $NUMBER$ == null ) {
rank: 628
score: 98.42898898654514
patch: / * / * * * / *
rank: 628
score: 98.11067962646484
patch: if ( intersection / * / intersection
rank: 628
score: 97.73969377790179
patch: / public / / / /
rank: 629
score: 99.37713623046875
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) : line 1 ;
rank: 629
score: 99.3096824852196
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ; }
rank: 629
score: 99.2506103515625
patch: Line - = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 629
score: 99.24943237304687
patch: if ( line 1 != null && include CaMeL End CaMeL Points || include CaMeL End CaMeL Points )
rank: 629
score: 99.16365559895833
patch: if ( sub CaMeL Line < 0 )
rank: 629
score: 98.8843017578125
patch: if ( line 1 . ends CaMeL With ( $STRING$ ) / / {
rank: 629
score: 98.42860921223958
patch: / * int * / / / /
rank: 629
score: 98.11030578613281
patch: int / * * / } /
rank: 629
score: 97.73938860212054
patch: assert / / / / /
rank: 630
score: 99.30943467881944
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line ) ;
rank: 630
score: 99.25000871930804
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) == null
rank: 630
score: 99.24924723307292
patch: SVNURL line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 630
score: 99.16332135881696
patch: Line line $NUMBER$ = ( Line ) include CaMeL End CaMeL Points ;
rank: 630
score: 98.8841552734375
patch: if ( line 1 != null && line 1 instanceof Line ) {
rank: 630
score: 98.6968242938702
patch: if ( line 1 == null ) { / * * /
rank: 630
score: 98.42753383091518
patch: / * ] / / /
rank: 630
score: 98.10845184326172
patch: if ( intersection / * * /
rank: 630
score: 97.73919677734375
patch: / } / / /
rank: 631
score: 99.3767154091283
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 631
score: 99.30942254317434
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . get CaMeL Hyperplane ( ) ) ;
rank: 631
score: 99.24983723958333
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Location ( ) ;
rank: 631
score: 99.16276332310268
patch: if ( sub CaMeL Line $NUMBER$ . intersection ( line $NUMBER$ ) )
rank: 631
score: 98.88304036458334
patch: if ( line 1 . starts CaMeL With ( $STRING$ ) / / {
rank: 631
score: 98.69654259314903
patch: / * / / / / * / / / * /
rank: 631
score: 98.42616780598958
patch: / * / / / } * /
rank: 631
score: 98.10746765136719
patch: Iterator * * * * / /
rank: 631
score: 97.73857770647321
patch: / break / / / /
rank: 632
score: 99.37629137541118
patch: line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 632
score: 99.30926678631756
patch: int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 632
score: 99.24982452392578
patch: Object line 1 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 632
score: 99.24892578125
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) { return line 1 ;
rank: 632
score: 99.16254534040179
patch: if ( line $NUMBER$ == null && include CaMeL End CaMeL Points )
rank: 632
score: 98.8828125
patch: if ( line 1 . size ( ) > $NUMBER$ ) {
rank: 632
score: 98.69644869290866
patch: if ( intersection ( line 1 ) / * / / /
rank: 632
score: 98.42599487304688
patch: / * * char * * /
rank: 632
score: 98.10688018798828
patch: / / < * * * /
rank: 632
score: 97.7350565592448
patch: logger / / / compute
rank: 633
score: 99.30925641741071
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 633
score: 99.2490478515625
patch: else line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 633
score: 99.24879365808823
patch: sub CaMeL Line . get CaMeL Hyperplane ( ) . add ( line $NUMBER$ ) ;
rank: 633
score: 99.16230119977679
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 633
score: 98.69603553185097
patch: if ( line $NUMBER$ == null ) return / * / /
rank: 633
score: 98.42583550347223
patch: / * / / * / / int
rank: 633
score: 98.10628836495536
patch: / * / else * /
rank: 633
score: 97.73502197265626
patch: { / / /
rank: 634
score: 99.3092011242378
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 634
score: 99.2483154296875
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) . is CaMeL Empty ( ) )
rank: 634
score: 99.24817657470703
patch: Line line 1 = get CaMeL Line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 634
score: 99.16214425223214
patch: if ( line 1 == null && include CaMeL End CaMeL Points )
rank: 634
score: 98.88258713942308
patch: / * / if ( line 1 == - 1 ) {
rank: 634
score: 98.69601004464286
patch: int [ ] intersection line $NUMBER$ = new int [ 1 ] ;
rank: 634
score: 98.10628509521484
patch: else { intersection / * * /
rank: 634
score: 97.73373413085938
patch: intersection / { /
rank: 635
score: 99.30877364309211
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ ) ) ;
rank: 635
score: 99.24810791015625
patch: String line 1 = line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 635
score: 99.2476806640625
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( ) == )
rank: 635
score: 99.16057477678571
patch: int line $NUMBER$ = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 635
score: 98.88167898995536
patch: if ( line 1 != null || line $NUMBER$ != null ) {
rank: 635
score: 98.42553032769098
patch: / * / int } / / /
rank: 635
score: 98.10601806640625
patch: String intersection = intersection / / /
rank: 635
score: 97.73366001674107
patch: / else / / / compute
rank: 636
score: 99.37068684895833
patch: return intersection ( line $NUMBER$ , sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 636
score: 99.24749755859375
patch: list = line 1 . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 636
score: 99.24708557128906
patch: Line line $NUMBER$ = ( Line ) line 1 . get CaMeL Line ( )
rank: 636
score: 99.15957406850961
patch: Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( )
rank: 636
score: 98.87979561941964
patch: / * / if ( line 1 . length > 0 ) {
rank: 636
score: 98.69304950420673
patch: if ( intersection . size ( ) / * / ) {
rank: 636
score: 98.10585021972656
patch: / / char * * * /
rank: 636
score: 97.73273577008929
patch: { / / / / compute
rank: 637
score: 99.37067328559027
patch: Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( line $NUMBER$ ) ;
rank: 637
score: 99.3083746494391
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 637
score: 99.24622344970703
patch: Line line $NUMBER$ = ( Line ) line 1 . intersection ( line $NUMBER$ )
rank: 637
score: 99.1590576171875
patch: Line line $NUMBER$ = ( Line 1 ) sub CaMeL Line ;
rank: 637
score: 98.69277954101562
patch: if ( line $NUMBER$ / $NUMBER$ == - 1 ) {
rank: 637
score: 98.42459445529514
patch: / * * int / * / /
rank: 637
score: 98.10562133789062
patch: / * / break / * /
rank: 637
score: 97.73263985770089
patch: / / / / List /
rank: 638
score: 99.3080166903409
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 638
score: 99.24601236979167
patch: this . line $NUMBER$ = ( Line ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 638
score: 99.24564615885417
patch: Space line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 638
score: 98.69263634314903
patch: if ( intersection != null / * / / / * /
rank: 638
score: 98.42377387152777
patch: / * / / / int / compute
rank: 638
score: 98.10559953962054
patch: if ( this . intersection )
rank: 638
score: 97.73191324869792
patch: / / if / /
rank: 639
score: 99.30770482772436
patch: Sub CaMeL Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 639
score: 99.24548950195313
patch: if ( include CaMeL End CaMeL Points && line 1 . to CaMeL Sub CaMeL Space ( ) )
rank: 639
score: 99.15590122767857
patch: int intersection 1 = line 1 . intersection ( line $NUMBER$ ) ;
rank: 639
score: 98.87900390625
patch: if ( line 1 != null && line 1 . length > 0 )
rank: 639
score: 98.6925048828125
patch: if ( intersection == null ) { / * * /
rank: 639
score: 98.42348807198661
patch: / * / * / *
rank: 639
score: 98.10521697998047
patch: boolean / * / * / /
rank: 639
score: 97.7314208984375
patch: } / / compute
rank: 640
score: 99.24536743164063
patch: line $NUMBER$ . intersection ( line 1 ) ;
rank: 640
score: 99.24497584292763
patch: for ( final Line line 1 : sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 640
score: 99.15577915736607
patch: Object line $NUMBER$ = line 1 . intersection ( line 1 ) ;
rank: 640
score: 98.87789481026786
patch: if ( line 1 . get CaMeL Length ( ) > 0 )
rank: 640
score: 98.69223022460938
patch: if ( intersection == null || line 1 == null )
rank: 640
score: 98.42311096191406
patch: / * ] * * * /
rank: 640
score: 98.10477447509766
patch: / * * / / / }
rank: 640
score: 97.72755650111607
patch: double / / / / /
rank: 641
score: 99.2447998046875
patch: if ( include CaMeL End CaMeL Points && line 1 . get CaMeL Length ( ) > 0 )
rank: 641
score: 99.2440414428711
patch: String line $NUMBER$ = sub CaMeL Line . get CaMeL Line 1 ( ) ;
rank: 641
score: 99.15532575334821
patch: = ( Line ) line 1 . intersection ( line $NUMBER$ ) ;
rank: 641
score: 98.87711007254464
patch: / * throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 641
score: 98.42296685112848
patch: / * / / * System . /
rank: 641
score: 98.1035385131836
patch: if ( intersection this . intersection )
rank: 641
score: 97.72376360212054
patch: / / / try / compute
rank: 642
score: 99.30690630744485
patch: sub CaMeL Line . get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ ) ;
rank: 642
score: 99.2446044921875
patch: this . get CaMeL Hyperplane ( ) . add ( line $NUMBER$ ) ;
rank: 642
score: 99.2424087524414
patch: Line line $NUMBER$ 1 1 $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 642
score: 99.15463692801339
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( 0 ) ;
rank: 642
score: 98.87656656901042
patch: if ( line 1 == null ) return - 1 ;
rank: 642
score: 98.42234584263393
patch: / * ] intersection * /
rank: 642
score: 98.10176849365234
patch: else { if / * * /
rank: 642
score: 97.72326049804687
patch: if / / /
rank: 643
score: 99.30676553415698
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ;
rank: 643
score: 99.24378159466912
patch: check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 643
score: 99.2419677734375
patch: Line line 1 1 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 643
score: 99.15364583333333
patch: if ( line $NUMBER$ . length ( ) > 0 )
rank: 643
score: 98.42222595214844
patch: / * / / System . /
rank: 643
score: 98.10154506138393
patch: / / int / * /
rank: 643
score: 97.71821812220982
patch: / / int intersection ; /
rank: 644
score: 99.30665198037791
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . include CaMeL End CaMeL Points ) ;
rank: 644
score: 99.24298095703125
patch: if ( line 1 == null && include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 644
score: 99.24123709542411
patch: Line line 1 = line 1 . intersection ( line 1 ) ;
rank: 644
score: 99.1526348407452
patch: if ( line $NUMBER$ . contains ( line $NUMBER$ ) ) {
rank: 644
score: 98.8727276141827
patch: if ( line 1 != null || line 1 != null )
rank: 644
score: 98.68885149274554
patch: if ( line $NUMBER$ / $NUMBER$ == null / * / ) {
rank: 644
score: 98.42155626085069
patch: / * / / / / / *
rank: 644
score: 98.10132707868304
patch: / * int * / }
rank: 644
score: 97.71732003348214
patch: } / { / / compute
rank: 645
score: 99.3064930050872
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ) ;
rank: 645
score: 99.24280395507813
patch: if ( include CaMeL End CaMeL Points && get CaMeL Remaining CaMeL Region ( ) != null ) {
rank: 645
score: 99.15250069754464
patch: if ( line 1 . get CaMeL Hyperplane ( ) != 0 )
rank: 645
score: 98.87159946986607
patch: if ( line 1 != null && line 1 == null ) {
rank: 645
score: 98.68829815204327
patch: if ( intersection == null / * / / / * /
rank: 645
score: 98.4215087890625
patch: / * ? / / / /
rank: 645
score: 98.10111999511719
patch: / / in * * / /
rank: 645
score: 97.71683175223214
patch: / / / / / check
rank: 646
score: 99.36698644301471
patch: point $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 646
score: 99.30647566511824
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 646
score: 99.24213723575367
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ;
rank: 646
score: 99.23995267427884
patch: Line line $NUMBER$ = line $NUMBER$ . intersection ( line $NUMBER$ )
rank: 646
score: 98.87150355747768
patch: if ( line 1 . length < line $NUMBER$ . length ) {
rank: 646
score: 98.6866455078125
patch: / / { / / / / / / / / /
rank: 646
score: 98.42095947265625
patch: / * ] / * * /
rank: 646
score: 98.1009750366211
patch: final List * * * / /
rank: 646
score: 97.71488734654018
patch: public / / / / compute
rank: 647
score: 99.30635793585526
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL
rank: 647
score: 99.23872884114583
patch: Line line $NUMBER$ 1 = ( Line ) get CaMeL Line ( ) ;
rank: 647
score: 99.1502685546875
patch: if ( include CaMeL End CaMeL Points || line 1 != null )
rank: 647
score: 98.87123801491477
patch: switch ( line 1 ) { case - 1 :
rank: 647
score: 98.68477783203124
patch: if ( line $NUMBER$ / $NUMBER$ == null )
rank: 647
score: 98.42051866319444
patch: / * / ? / * / /
rank: 647
score: 98.09974670410156
patch: / / < * * / /
rank: 647
score: 97.71417236328125
patch: / / - / / /
rank: 648
score: 99.24142456054688
patch: / * if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) == null ) {
rank: 648
score: 99.23841857910156
patch: Line line $NUMBER$ = get CaMeL Hyperplane ( ) . intersection ( line $NUMBER$ )
rank: 648
score: 99.15006801060268
patch: try { return sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 648
score: 98.68457970252403
patch: if ( line $NUMBER$ != null line $NUMBER$ / * / /
rank: 648
score: 98.41999816894531
patch: / * * ? * * /
rank: 648
score: 98.09925188337054
patch: / * / intersection * /
rank: 648
score: 97.71406773158482
patch: / / / case / /
rank: 649
score: 99.30602349175348
patch: Property line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 649
score: 99.24134114583333
patch: return ( include CaMeL End CaMeL Points ) ? line $NUMBER$ : null ;
rank: 649
score: 99.23821614583333
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Line $NUMBER$ ( )
rank: 649
score: 99.14987417367789
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 649
score: 98.86864217122395
patch: List intersection = new Array CaMeL List ( intersection ) ;
rank: 649
score: 98.6842041015625
patch: char [ ] intersection = new char [ $NUMBER$ ] ;
rank: 649
score: 98.41998291015625
patch: / * / int intersection * / /
rank: 649
score: 98.09690348307292
patch: final / * * /
rank: 649
score: 97.71305338541667
patch: / / / } compute
rank: 650
score: 99.36290147569444
patch: final Line line $NUMBER$ = ( Line ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 650
score: 99.30539772727273
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 650
score: 99.241015625
patch: Point line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 650
score: 99.2373291015625
patch: Region line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 650
score: 99.14983661358173
patch: if ( line $NUMBER$ . intersection ( line 1 ) ) {
rank: 650
score: 98.86861746651786
patch: / * if ( intersection . is CaMeL Empty ( ) ) {
rank: 650
score: 98.6835186298077
patch: if ( intersection != null / * intersection . * / )
rank: 650
score: 98.41976589626736
patch: / / int * / int * /
rank: 650
score: 98.09673309326172
patch: String intersection = intersection / / compute
rank: 650
score: 97.71197509765625
patch: / / / / / this
rank: 651
score: 99.30511765252976
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL
rank: 651
score: 99.23684256417411
patch: Line line $NUMBER$ = get CaMeL Line ( sub CaMeL Line ) ;
rank: 651
score: 99.14895395132211
patch: Node line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 651
score: 98.41965060763889
patch: / * * List * * / /
rank: 651
score: 98.09391276041667
patch: final List / * /
rank: 652
score: 99.36255645751953
patch: line $NUMBER$ = ( Line ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 652
score: 99.30506859756098
patch: final Sub CaMeL Line sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 652
score: 99.23980158025569
patch: / * if ( include CaMeL End CaMeL Points )
rank: 652
score: 99.23602294921875
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Line $NUMBER$ Region ( )
rank: 652
score: 98.8680752840909
patch: if ( line 1 . length == 0 ) {
rank: 652
score: 98.68211780894886
patch: if ( line $NUMBER$ / $NUMBER$ == - 1 )
rank: 652
score: 98.41947174072266
patch: / / int / * / /
rank: 652
score: 98.0932846069336
patch: if ( intersection / * * compute
rank: 652
score: 97.71160888671875
patch: / / / return / /
rank: 653
score: 99.239306640625
patch: int line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL
rank: 653
score: 99.23539225260417
patch: Location line 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 653
score: 98.68181903545673
patch: if ( intersection . get CaMeL Line ( ) == null )
rank: 653
score: 98.4193115234375
patch: / * / / * / } /
rank: 653
score: 98.09319305419922
patch: } else { final / * /
rank: 653
score: 97.7107645670573
patch: / / / else compute
rank: 654
score: 99.30475348395271
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . get CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 654
score: 99.2388427734375
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points && line 1 . get CaMeL
rank: 654
score: 99.14871826171876
patch: if ( sub CaMeL Line < 0 ) {
rank: 654
score: 98.86710298978366
patch: if ( line 1 == null || line $NUMBER$ != null )
rank: 654
score: 98.68148099459134
patch: / / / / / / / / / * / /
rank: 654
score: 98.41843959263393
patch: / * * int * /
rank: 654
score: 98.09305572509766
patch: if ( intersection ) { / out
rank: 654
score: 97.71017020089286
patch: / / / else / compute
rank: 655
score: 99.36038208007812
patch: Line line $NUMBER$ = line $NUMBER$ . check CaMeL Point ( line 1 ) ;
rank: 655
score: 99.30464131123311
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( 0 ) ) ;
rank: 655
score: 99.23883463541667
patch: if ( include CaMeL End CaMeL Points ) { return line 1 ; }
rank: 655
score: 99.23250034877232
patch: Line line $NUMBER$ = line $NUMBER$ . get CaMeL Line ( ) ;
rank: 655
score: 99.1475321451823
patch: if ( line $NUMBER$ . contains ( line $NUMBER$ ) )
rank: 655
score: 98.86626325334821
patch: if ( line 1 . size ( ) > - 1 ) {
rank: 655
score: 98.68112417367789
patch: if ( line $NUMBER$ != null line $NUMBER$ / * / )
rank: 655
score: 98.09249877929688
patch: / * * * / / }
rank: 655
score: 97.70909772600446
patch: / / { / / int
rank: 656
score: 99.30459818025915
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ) ;
rank: 656
score: 99.23865559895833
patch: if ( line $NUMBER$ == null && include CaMeL End CaMeL Points ) {
rank: 656
score: 99.14715576171875
patch: if ( sub CaMeL Line 1 == null )
rank: 656
score: 98.86549729567308
patch: if ( line $NUMBER$ == null ) { return - 1 ;
rank: 656
score: 98.68064528245192
patch: if ( intersection . is CaMeL Empty ( line $NUMBER$ ) )
rank: 656
score: 98.41720241970486
patch: / * / / / * / int
rank: 656
score: 98.0917739868164
patch: / * * * / break /
rank: 656
score: 97.70907156808036
patch: / / / / return /
rank: 657
score: 99.3044921875
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 657
score: 99.2384541829427
patch: return line 1 . intersection ( line $NUMBER$ ) ; }
rank: 657
score: 99.14703838641827
patch: if ( line $NUMBER$ . get CaMeL Hyperplane ( ) ) {
rank: 657
score: 98.86545235770089
patch: String CaMeL Buffer intersection = new String CaMeL Buffer ( intersection ) ;
rank: 657
score: 98.68030657087054
patch: if ( line $NUMBER$ . intersection ( line $NUMBER$ ) / * /
rank: 657
score: 98.41693115234375
patch: / * / / / / / }
rank: 657
score: 98.09149932861328
patch: / / case * * * /
rank: 657
score: 97.70890590122768
patch: / / / / ? /
rank: 658
score: 99.30436954941861
patch: final boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 658
score: 99.23830997242646
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) == line $NUMBER$ ) {
rank: 658
score: 99.14603097098214
patch: if ( line 1 . get CaMeL Hyperplane ( ) == $STRING$ )
rank: 658
score: 98.86458914620536
patch: if ( line $NUMBER$ . ends CaMeL With ( $STRING$ ) ) {
rank: 658
score: 98.41640218098958
patch: / * * >> * * / /
rank: 658
score: 98.09117780412946
patch: / * / if / /
rank: 658
score: 97.70860072544643
patch: / / / / } compute
rank: 659
score: 99.35842895507812
patch: return ( ( Line ) line 1 ) . intersection ( line $NUMBER$ ) ;
rank: 659
score: 99.30370433910473
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ; sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) .
rank: 659
score: 99.23797286184211
patch: if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) == line $NUMBER$ ) {
rank: 659
score: 99.22989095052084
patch: / * int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 659
score: 99.14481026785714
patch: if ( include CaMeL End CaMeL Points && line $NUMBER$ , null )
rank: 659
score: 98.86379770132211
patch: final Line [ ] intersection = new Line [ $NUMBER$ ] ;
rank: 659
score: 98.67847696940105
patch: if ( intersection != null ) { / * * /
rank: 659
score: 98.41638861762152
patch: / * / / * / int /
rank: 659
score: 98.09029715401786
patch: Iterator / * * / /
rank: 659
score: 97.70699637276786
patch: / / / / / set
rank: 660
score: 99.35818481445312
patch: return ( ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 660
score: 99.23794320913461
patch: / * / if ( include CaMeL End CaMeL Points ) {
rank: 660
score: 99.14478648792614
patch: Line line $NUMBER$ = intersection ( line $NUMBER$ ) ;
rank: 660
score: 98.86369977678571
patch: if ( line 1 . intersection ( line $NUMBER$ ) / / /
rank: 660
score: 98.67724609375
patch: if ( line 1 == null / * intersection * / / )
rank: 660
score: 98.0899887084961
patch: / * / System / / /
rank: 660
score: 97.70681326729911
patch: boolean / / / / /
rank: 661
score: 99.30280323517628
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ) ;
rank: 661
score: 99.2374267578125
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . include CaMeL End CaMeL Points )
rank: 661
score: 99.22894287109375
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Line ( )
rank: 661
score: 99.1444803873698
patch: final int line $NUMBER$ = get CaMeL Hyperplane ( ) ;
rank: 661
score: 98.86349051339286
patch: if ( line $NUMBER$ . starts CaMeL With ( $STRING$ ) / /
rank: 661
score: 98.6765645345052
patch: if ( line $NUMBER$ == intersection / * / ) {
rank: 661
score: 98.40907287597656
patch: / * / / * / *
rank: 661
score: 98.08871895926339
patch: / / final / * /
rank: 661
score: 97.7067138671875
patch: / / / }
rank: 662
score: 99.35773383246527
patch: / * / = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 662
score: 99.30265727796052
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL
rank: 662
score: 99.23734777113971
patch: if ( line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) != null ) {
rank: 662
score: 99.14401681082589
patch: if ( line 1 != null || include CaMeL End CaMeL Points )
rank: 662
score: 98.8632061298077
patch: while ( line 1 . size ( ) > 0 ) {
rank: 662
score: 98.67567661830357
patch: / / / / / / / / / / / * /
rank: 662
score: 98.40756225585938
patch: / * * / / / compute
rank: 662
score: 98.0875473022461
patch: / * * * * / else
rank: 662
score: 97.70387486049107
patch: / / char / / /
rank: 663
score: 99.30263157894737
patch: Line sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 663
score: 99.23716430664062
patch: int line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 663
score: 99.22644856770833
patch: Line line $NUMBER$ 1 = line $NUMBER$ . get CaMeL Line ( ) ;
rank: 663
score: 99.1423809344952
patch: if ( line $NUMBER$ . add ( line $NUMBER$ ) ) {
rank: 663
score: 98.86315046037946
patch: if ( line 1 . length != line 1 . length ) {
rank: 663
score: 98.40738351004464
patch: / * / int / /
rank: 663
score: 98.08709716796875
patch: / * * * / intersection /
rank: 663
score: 97.70361328125
patch: protected / / / / /
rank: 664
score: 99.35719209558823
patch: return line $NUMBER$ . intersection ( line $NUMBER$ . intersection ( line $NUMBER$ ) ) ;
rank: 664
score: 99.30162464488636
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 664
score: 99.23677143297698
patch: if ( line 1 != null ) return sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 664
score: 99.22632649739583
patch: try { Line line 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 664
score: 99.14007098858173
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line ) ;
rank: 664
score: 98.86149291992187
patch: if ( line 1 == - 1 ) {
rank: 664
score: 98.67490641276042
patch: if ( intersection ( line 1 , line $NUMBER$ ) )
rank: 664
score: 98.40277862548828
patch: / * / try { / /
rank: 664
score: 98.08657836914062
patch: int * * / } / /
rank: 664
score: 97.70309012276786
patch: / / -- / / /
rank: 665
score: 99.30153937088816
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ) ;
rank: 665
score: 99.23676500822368
patch: if ( include CaMeL End CaMeL Points && line 1 . get CaMeL Hyperplane ( ) == )
rank: 665
score: 99.13795166015625
patch: if ( sub CaMeL Line 1 != null )
rank: 665
score: 98.86142202524039
patch: if ( line 1 . size ( ) < 1 ) {
rank: 665
score: 98.67411586216518
patch: / * / / / / / / / / * / /
rank: 665
score: 98.40132141113281
patch: / * / / } / /
rank: 665
score: 97.70305524553571
patch: / / / / if /
rank: 666
score: 99.30150204613095
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 666
score: 99.23666720920139
patch: / * / if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 666
score: 99.13546752929688
patch: final Line line $NUMBER$ = get CaMeL Hyperplane ( ) ;
rank: 666
score: 98.86060509314903
patch: Iterator intersection = line 1 . iterator ( line 1 ) ;
rank: 666
score: 98.67363630022321
patch: byte [ ] intersection = new byte [ $NUMBER$ / $NUMBER$ ] ;
rank: 666
score: 98.08586883544922
patch: / / * / / / }
rank: 666
score: 97.70269775390625
patch: / / try / compute
rank: 667
score: 99.23493508731617
patch: if ( include CaMeL End CaMeL Points && include CaMeL End CaMeL Points ) continue ;
rank: 667
score: 99.2254638671875
patch: Line line $NUMBER$ 1 = get CaMeL Line 1 ( ) ;
rank: 667
score: 99.1345966045673
patch: Line line $NUMBER$ = ( Line ) new Region ( ) ;
rank: 667
score: 98.8603046123798
patch: if ( line 1 . size ( ) < $NUMBER$ ) {
rank: 667
score: 98.67296346028645
patch: assert line $NUMBER$ != null : $STRING$ + line $NUMBER$ ;
rank: 667
score: 98.08539690290179
patch: System . / * / /
rank: 667
score: 97.70125325520833
patch: / / throw / /
rank: 668
score: 99.30134721235795
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ) ;
rank: 668
score: 99.23482937282986
patch: this . line 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 668
score: 99.22527204241071
patch: Line line $NUMBER$ $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 668
score: 99.1341552734375
patch: get CaMeL Hyperplane ( ) . intersection ( line 1 ) ;
rank: 668
score: 98.85996657151442
patch: if ( line 1 != null || line $NUMBER$ != null )
rank: 668
score: 98.39942932128906
patch: / * / int / / /
rank: 668
score: 98.08497111002605
patch: / / default * /
rank: 668
score: 97.70068359375
patch: / return / / /
rank: 669
score: 99.30126342773437
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 669
score: 99.23482572115384
patch: if ( line 1 . include CaMeL End CaMeL Points ) {
rank: 669
score: 99.22477504185268
patch: final Line line 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 669
score: 99.13233439127605
patch: if ( line 1 . length ( ) > 0 )
rank: 669
score: 98.6722745028409
patch: int size = line 1 . size ( ) ;
rank: 669
score: 98.39930725097656
patch: / * ] * / / /
rank: 669
score: 98.08480398995536
patch: / * / * / else
rank: 669
score: 97.70065743582589
patch: / boolean / / / /
rank: 670
score: 99.30119212080793
patch: final int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 670
score: 99.23431037454044
patch: if ( line 1 . get CaMeL Remaining CaMeL Region ( ) == null ) {
rank: 670
score: 99.22418212890625
patch: line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 670
score: 98.85912146935097
patch: if ( line 1 . size ( ) <= 0 ) {
rank: 670
score: 98.67154947916667
patch: if ( intersection == null / * intersection * / /
rank: 670
score: 98.39824676513672
patch: / * * char * / /
rank: 670
score: 97.69901733398437
patch: / / / boolean
rank: 671
score: 99.35281192555146
patch: loc 1 = ( Line ) sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 671
score: 99.30105251736111
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( sub CaMeL Line ) ;
rank: 671
score: 99.23417394301471
patch: return ( ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 671
score: 99.1317647298177
patch: if ( line $NUMBER$ . add ( line $NUMBER$ ) )
rank: 671
score: 98.85729041466347
patch: / * * / if ( line 1 != null ) {
rank: 671
score: 98.39775739397321
patch: / * / char * /
rank: 671
score: 98.08329010009766
patch: Iterator / * * / * /
rank: 671
score: 97.69866943359375
patch: / } / / compute
rank: 672
score: 99.30094798018293
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 672
score: 99.23414442274306
patch: if ( include CaMeL End CaMeL Points && line 1 . get CaMeL Hyperplane ( ) )
rank: 672
score: 99.22245570591518
patch: Line line $NUMBER$ 1 = line $NUMBER$ . intersection ( line $NUMBER$ )
rank: 672
score: 99.12877400716145
patch: if ( line $NUMBER$ . get CaMeL Hyperplane ( ) )
rank: 672
score: 98.8572528545673
patch: / * switch ( line 1 ) { case - 1 :
rank: 672
score: 98.66885375976562
patch: final int size = line 1 . size ( ) ;
rank: 672
score: 98.08271026611328
patch: if ( intersection ) { intersection {
rank: 672
score: 97.69863891601562
patch: int / / compute
rank: 673
score: 99.3008968955592
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ; }
rank: 673
score: 99.23300509982639
patch: for ( List line 1 : sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 673
score: 99.12816443810097
patch: = get CaMeL Remaining CaMeL Region ( sub CaMeL Line ) ;
rank: 673
score: 98.85614568536931
patch: if ( line 1 != null ) { / *
rank: 673
score: 98.66876220703125
patch: if ( intersection . size ( ) > 0 ) {
rank: 673
score: 98.39691925048828
patch: / * ] / * / /
rank: 673
score: 98.0823974609375
patch: / / list * * /
rank: 673
score: 97.69666399274554
patch: / / / / / double
rank: 674
score: 99.30057525634766
patch: Line get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ;
rank: 674
score: 99.23173014322917
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line . get CaMeL Hyperplane ( )
rank: 674
score: 99.22124837239583
patch: Element line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 674
score: 99.12757457386364
patch: Line line $NUMBER$ = ( Line ) line 1 ;
rank: 674
score: 98.66851806640625
patch: if ( line $NUMBER$ == null / * / ) /
rank: 674
score: 98.08113861083984
patch: if / * * / break /
rank: 674
score: 97.69578043619792
patch: / / / / intersection
rank: 675
score: 99.35146915211396
patch: / $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 675
score: 99.30054931640625
patch: long include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 675
score: 99.12586466471355
patch: if ( line 1 . equals ( line $NUMBER$ ) )
rank: 675
score: 98.85411658653847
patch: if ( line 1 != null && line 1 == null )
rank: 675
score: 98.66779119318181
patch: if ( intersection ( line $NUMBER$ ) / * /
rank: 675
score: 98.39160919189453
patch: / / int * / / /
rank: 675
score: 98.08057403564453
patch: if / * * * / try
rank: 675
score: 97.69507707868304
patch: / / boolean intersection = /
rank: 676
score: 99.30030517578125
patch: String line $NUMBER$ = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 676
score: 99.22093787560097
patch: Region line 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 676
score: 99.1231219951923
patch: for ( Line line $NUMBER$ : get CaMeL Hyperplane ( ) )
rank: 676
score: 98.66563720703125
patch: if ( line $NUMBER$ / $NUMBER$ != null )
rank: 676
score: 98.39019012451172
patch: / * * list * / /
rank: 676
score: 98.0803451538086
patch: else { / / * / /
rank: 676
score: 97.69271850585938
patch: if / / / compute
rank: 677
score: 99.35129123263889
patch: Line line $NUMBER$ = ( Line ) check CaMeL Point . get CaMeL Hyperplane ( ) ;
rank: 677
score: 99.30023193359375
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 677
score: 99.23097229003906
patch: if ( include CaMeL End CaMeL Points && sub CaMeL Line != null ) {
rank: 677
score: 99.22019740513393
patch: Line line 1 = line 1 . get CaMeL Hyperplane ( ) ;
rank: 677
score: 99.12296236478366
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line 1 ;
rank: 677
score: 98.85310581752232
patch: if ( line $NUMBER$ == null || line 1 == null ) {
rank: 677
score: 98.66389973958333
patch: if ( intersection != null / * intersection * / )
rank: 677
score: 98.08006068638393
patch: if / * break * /
rank: 677
score: 97.69214739118304
patch: for / / / / /
rank: 678
score: 99.29908447265625
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 678
score: 99.23045247395834
patch: this . line 1 = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 678
score: 99.12241774338942
patch: if ( line $NUMBER$ . size ( ) > - $NUMBER$ )
rank: 678
score: 98.85267052283653
patch: if ( line 1 . intersection ( line 1 ) / /
rank: 678
score: 98.6632080078125
patch: Iterator line $NUMBER$ = line $NUMBER$ . iterator ( ) ;
rank: 678
score: 98.38522338867188
patch: / * int / * * /
rank: 678
score: 98.07851736886161
patch: / / * ? * /
rank: 679
score: 99.29898874383224
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . ) ;
rank: 679
score: 99.2180926983173
patch: Space line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 679
score: 99.12208557128906
patch: if ( sub CaMeL Line ) {
rank: 679
score: 98.85105543870192
patch: if ( line $NUMBER$ . length ( ) == 0 ) {
rank: 679
score: 98.38337707519531
patch: / * / / / * compute
rank: 679
score: 98.077880859375
patch: final / * / /
rank: 679
score: 97.68810163225446
patch: / / { / int intersection
rank: 680
score: 99.3504638671875
patch: Line line $NUMBER$ = get CaMeL Hyperplane ( ) . get CaMeL Hyperplane ( ) ;
rank: 680
score: 99.29893454527243
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ) ;
rank: 680
score: 99.22877412683823
patch: if ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) == null )
rank: 680
score: 99.2177001953125
patch: int line $NUMBER$ = line $NUMBER$ . to CaMeL Sub CaMeL Space ( )
rank: 680
score: 99.12119704026442
patch: if ( line 1 . contains ( line $NUMBER$ ) ) {
rank: 680
score: 98.85089111328125
patch: if ( line 1 / $NUMBER$ != - 1 ) {
rank: 680
score: 98.66133256392045
patch: if ( line $NUMBER$ . intersection ( intersection ) )
rank: 680
score: 98.07695770263672
patch: if ( intersection ( intersection ( this
rank: 680
score: 97.68760172526042
patch: return / / / /
rank: 681
score: 99.35043674045139
patch: / * / Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 681
score: 99.2988340796494
patch: int include CaMeL End CaMeL Points $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 681
score: 99.22798665364583
patch: for ( Line line $NUMBER$ : sub CaMeL Line ) {
rank: 681
score: 99.216259765625
patch: line 1 . intersection ( get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 681
score: 99.1197509765625
patch: if ( line $NUMBER$ . intersection ( sub CaMeL Line ) )
rank: 681
score: 98.65931193033855
patch: Object intersection = null ; if ( intersection != null )
rank: 681
score: 98.38268171037946
patch: / * * list * /
rank: 681
score: 98.07679748535156
patch: if ( intersection ) { / false
rank: 681
score: 97.68590291341145
patch: / / / / if
rank: 682
score: 99.29844626402243
patch: Sub CaMeL Line line 1 = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 682
score: 99.118896484375
patch: if ( line $NUMBER$ . intersection ( line 1 ) )
rank: 682
score: 98.84849330357143
patch: / * if ( intersection . size ( ) > 0 ) {
rank: 682
score: 98.38069152832031
patch: / * int / * / /
rank: 682
score: 98.0767822265625
patch: / / List * /
rank: 682
score: 97.68475341796875
patch: / / { / try
rank: 683
score: 99.2972156613372
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ ) ;
rank: 683
score: 99.22648351332721
patch: int line $NUMBER$ = ( Line ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 683
score: 99.2153076171875
patch: Line line 1 = line 1 . to CaMeL Sub CaMeL Space ( )
rank: 683
score: 99.11681111653645
patch: final String line $NUMBER$ = get CaMeL Hyperplane ( ) ;
rank: 683
score: 98.84837757457386
patch: if ( line $NUMBER$ . length > 0 ) {
rank: 683
score: 98.37753295898438
patch: / * int / / / /
rank: 683
score: 98.07575225830078
patch: if ( list != null ) {
rank: 683
score: 97.68335571289063
patch: / else / /
rank: 684
score: 99.29718159520348
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ) ;
rank: 684
score: 99.22515869140625
patch: for ( final Line line $NUMBER$ : sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 684
score: 99.21460832868304
patch: Line line $NUMBER$ 1 = ( Line ) get CaMeL Hyperplane ( )
rank: 684
score: 99.1165771484375
patch: Object line $NUMBER$ = get CaMeL Hyperplane ( ) ;
rank: 684
score: 98.84798758370536
patch: if ( line 1 . length == line $NUMBER$ . length ) {
rank: 684
score: 98.07492501395089
patch: if / * while * /
rank: 684
score: 97.68280029296875
patch: / if / / /
rank: 685
score: 99.34959581163194
patch: Line line $NUMBER$ = ( Line ) this . check CaMeL Point ( line 1 ) ;
rank: 685
score: 99.29696994357639
patch: Character line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 685
score: 99.22506277901786
patch: return intersection ( line $NUMBER$ . intersection ( line $NUMBER$ ) ) ;
rank: 685
score: 99.21422526041667
patch: Sub CaMeL Line line 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 685
score: 99.11627875434027
patch: if ( sub CaMeL Line != null )
rank: 685
score: 98.84621756417411
patch: if ( line 1 . get CaMeL Location ( ) != null )
rank: 685
score: 98.37581089564732
patch: / * / } * /
rank: 685
score: 98.07428741455078
patch: if / / * / / /
rank: 685
score: 97.68216552734376
patch: / / / {
rank: 686
score: 99.34853786892361
patch: loc 1 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 686
score: 99.29674682617187
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 686
score: 99.21411946614583
patch: Line line 1 1 = line 1 . intersection ( line 1 ) ;
rank: 686
score: 99.11600435697116
patch: / * = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 686
score: 98.8452617938702
patch: if ( line $NUMBER$ == null ) { return 0 ; }
rank: 686
score: 98.65504964192708
patch: if ( line 1 == intersection / * / ) {
rank: 686
score: 98.3741226196289
patch: / * * int * / /
rank: 686
score: 98.07246616908482
patch: / * * * ? /
rank: 686
score: 97.67609514508929
patch: / / { / * compute
rank: 687
score: 99.34819030761719
patch: ( ( Line ) sub CaMeL Line ) . intersection ( line $NUMBER$ ) ;
rank: 687
score: 99.29667060319767
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( )
rank: 687
score: 99.22283935546875
patch: table = line 1 . intersection ( line $NUMBER$ ) ;
rank: 687
score: 99.21357945033482
patch: String line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 687
score: 99.113525390625
patch: = get CaMeL Remaining CaMeL Region ( line $NUMBER$ ) ;
rank: 687
score: 98.84467022235577
patch: int intersection = line 1 . intersection ( line $NUMBER$ ) ;
rank: 687
score: 98.65492942116477
patch: if ( line 1 == null ) return null ;
rank: 687
score: 98.37258475167411
patch: / * ] / * /
rank: 687
score: 98.06976318359375
patch: if / * * compute
rank: 687
score: 97.67486572265625
patch: { / / / compute
rank: 688
score: 99.21297781808036
patch: int line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 688
score: 99.11221078725961
patch: Line line $NUMBER$ = line 1 . intersection ( $STRING$ ) ;
rank: 688
score: 98.84291585286458
patch: / * throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 688
score: 98.65488503196023
patch: if ( intersection != intersection / * / ) {
rank: 688
score: 98.37176513671875
patch: / * / / * / }
rank: 688
score: 98.06974029541016
patch: / * / } / / }
rank: 688
score: 97.67415073939732
patch: / / . / / /
rank: 689
score: 99.34766303168402
patch: Line line $NUMBER$ += ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 689
score: 99.29616639672255
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 689
score: 99.22193400065105
patch: grid = line 1 . intersection ( line $NUMBER$ ) ;
rank: 689
score: 99.21284993489583
patch: ( ( Line ) line 1 ) . intersection ( line $NUMBER$ ) ;
rank: 689
score: 99.11170450846355
patch: if ( line 1 . contains ( line $NUMBER$ ) )
rank: 689
score: 98.8426044170673
patch: if ( line 1 == null ) { return intersection ; }
rank: 689
score: 98.6547139485677
patch: if ( intersection == null || line $NUMBER$ != null )
rank: 689
score: 98.06949288504464
patch: / / in / * /
rank: 690
score: 99.22138671875
patch: while ( line 1 != null && include CaMeL End CaMeL Points ) {
rank: 690
score: 99.21180943080357
patch: sub CaMeL Line = line 1 . intersection ( line $NUMBER$ ) ;
rank: 690
score: 99.11130934495192
patch: if ( sub CaMeL Line . intersection ( line 1 ) )
rank: 690
score: 98.84217325846355
patch: if ( line 1 / $NUMBER$ == - 1 ) {
rank: 690
score: 98.06910051618304
patch: boolean / * * / /
rank: 690
score: 97.67286900111607
patch: / / double / / compute
rank: 691
score: 99.22084263392857
patch: for ( Line line $NUMBER$ : get CaMeL Hyperplane ( ) ) {
rank: 691
score: 99.21066080729166
patch: Object line $NUMBER$ 1 = line 1 . intersection ( line $NUMBER$ ) ;
rank: 691
score: 98.8405049641927
patch: if ( line 1 . intersection ( line $NUMBER$ / /
rank: 691
score: 98.36952209472656
patch: / * * char * / line
rank: 691
score: 98.0687484741211
patch: int Array CaMeL List / * /
rank: 691
score: 97.67210170200893
patch: / / final / { /
rank: 692
score: 99.34726969401042
patch: Line line $NUMBER$ = ( int ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 692
score: 99.2187271118164
patch: / * if ( sub CaMeL Line . include CaMeL End CaMeL Points ) {
rank: 692
score: 99.21065848214286
patch: Line line 1 = line $NUMBER$ . intersection ( line 1 ) ;
rank: 692
score: 99.11023888221153
patch: Line line $NUMBER$ = ( Line , sub CaMeL Line ) ;
rank: 692
score: 98.84036690848214
patch: if ( line 1 != null && line $NUMBER$ == null ) {
rank: 692
score: 98.65165201822917
patch: if ( intersection ( line $NUMBER$ ) / * / )
rank: 692
score: 98.36949920654297
patch: / / System . / * /
rank: 692
score: 98.06819152832031
patch: if ( intersection ( intersection ) /
rank: 692
score: 97.67162214006696
patch: } / int / / /
rank: 693
score: 99.2956292568109
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) )
rank: 693
score: 99.21844482421875
patch: if ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) {
rank: 693
score: 99.21005045572916
patch: Line line 1 1 = line 1 . get CaMeL Hyperplane ( ) ;
rank: 693
score: 99.1083984375
patch: if ( line 1 . get CaMeL Hyperplane ( ) ) {
rank: 693
score: 98.84011404854911
patch: if ( line $NUMBER$ == null || line 1 != null ) {
rank: 693
score: 98.6514383951823
patch: if ( intersection . is CaMeL Empty ( intersection ) )
rank: 693
score: 98.36673409598214
patch: / * * ] * /
rank: 693
score: 98.06807708740234
patch: if / * / return / /
rank: 693
score: 97.67147827148438
patch: / / int / compute
rank: 694
score: 99.341064453125
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 694
score: 99.29521098889802
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( )
rank: 694
score: 99.21780215992646
patch: while ( sub CaMeL Line . get CaMeL Hyperplane ( ) == line $NUMBER$ ) {
rank: 694
score: 99.21001790364583
patch: Location line $NUMBER$ = sub CaMeL Line . get CaMeL Line ( ) ;
rank: 694
score: 99.10755504261364
patch: = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 694
score: 98.83946010044643
patch: if ( line 1 != null && line $NUMBER$ instanceof Line ) {
rank: 694
score: 98.64368896484375
patch: if ( line $NUMBER$ != null line $NUMBER$ )
rank: 694
score: 98.36415318080357
patch: / * / / / *
rank: 694
score: 98.06664167131696
patch: / / } * * /
rank: 694
score: 97.67116292317708
patch: / / / / char
rank: 695
score: 99.34005033052884
patch: return sub CaMeL Line 1 . intersection ( line $NUMBER$ ) ;
rank: 695
score: 99.29515349559294
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 695
score: 99.21747504340277
patch: for ( String sub CaMeL Line : sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 695
score: 99.20955984933036
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( line 1 ,
rank: 695
score: 99.10609019886364
patch: final if ( include CaMeL End CaMeL Points ) {
rank: 695
score: 98.83877563476562
patch: if ( line $NUMBER$ == null ) { break ; }
rank: 695
score: 98.64337158203125
patch: if ( line $NUMBER$ . size ( ) == 0 )
rank: 695
score: 98.06661551339286
patch: this . intersection / * /
rank: 695
score: 97.6700439453125
patch: / / void / /
rank: 696
score: 99.29502563476562
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 696
score: 99.21696254185268
patch: if ( include CaMeL End CaMeL Points ) { return null ; }
rank: 696
score: 99.10426682692308
patch: if ( line 1 . add ( line $NUMBER$ ) ) {
rank: 696
score: 98.83841646634616
patch: if ( line $NUMBER$ . size ( ) == 0 ) {
rank: 696
score: 98.64276123046875
patch: / * / / / / / / * * /
rank: 696
score: 98.36014556884766
patch: / * / / * / line
rank: 696
score: 98.06591796875
patch: else { / * / /
rank: 696
score: 97.66431681315105
patch: * / / / /
rank: 697
score: 99.2947742550872
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ) ;
rank: 697
score: 99.21634250217014
patch: if ( sub CaMeL Line . get CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 697
score: 99.103271484375
patch: if ( include CaMeL End CaMeL Points ) break ;
rank: 697
score: 98.83794696514423
patch: if ( line 1 != null && line $NUMBER$ == null )
rank: 697
score: 98.64223410866477
patch: while ( intersection . is CaMeL Empty ( ) )
rank: 697
score: 98.35996500651042
patch: / * ] / /
rank: 697
score: 98.06572614397321
patch: final Array CaMeL List * /
rank: 697
score: 97.65921020507812
patch: this / / / /
rank: 698
score: 99.29461059570312
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 698
score: 99.21617780412946
patch: for ( Sub CaMeL Line sub CaMeL Line : line 1 ) {
rank: 698
score: 98.8378194173177
patch: if ( line 1 == null ) { continue ; }
rank: 698
score: 98.64223225911458
patch: if ( intersection / * || line $NUMBER$ == null )
rank: 698
score: 98.3591079711914
patch: / * / / * / compute
rank: 698
score: 98.0655517578125
patch: if ( / * / intersection )
rank: 698
score: 97.6582743326823
patch: / / int intersection .
rank: 699
score: 99.29456459603658
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( )
rank: 699
score: 99.21607163373162
patch: int line $NUMBER$ = ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ;
rank: 699
score: 99.10067983774039
patch: final Line line $NUMBER$ = ( Line ) sub CaMeL Line ;
rank: 699
score: 98.64131673177083
patch: if ( intersection != null && line 1 != null )
rank: 699
score: 98.06289236886161
patch: if / / * / /
rank: 699
score: 97.65476481119792
patch: / / / / void
rank: 700
score: 99.33557846966912
patch: point 1 = ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 700
score: 99.29440104166666
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . include CaMeL End CaMeL Points ( ) ) ;
rank: 700
score: 99.21487247242646
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) == line 1 ) {
rank: 700
score: 99.20320951021634
patch: Object line 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 700
score: 99.09938401442308
patch: if ( include CaMeL End CaMeL Points || sub CaMeL Line )
rank: 700
score: 98.83487642728366
patch: if ( line $NUMBER$ . size ( ) > $NUMBER$ ) {
rank: 700
score: 98.6389493075284
patch: if ( line $NUMBER$ != null line $NUMBER$ ) {
rank: 700
score: 98.354736328125
patch: / / int * / /
rank: 700
score: 98.06181117466518
patch: if ( intersection ( intersection (
rank: 700
score: 97.65369669596355
patch: } / * / /
rank: 701
score: 99.29395666787791
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 701
score: 99.21461397058823
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) != this ) {
rank: 701
score: 99.20227922712054
patch: Line line $NUMBER$ 1 1 = ( Line ) sub CaMeL Line ;
rank: 701
score: 98.83469801682692
patch: / * throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 701
score: 98.6383056640625
patch: if ( intersection == intersection / * / ) {
rank: 701
score: 98.35465240478516
patch: / * / char * * /
rank: 701
score: 98.06141662597656
patch: / * / } / / else
rank: 701
score: 97.64689331054687
patch: / int / /
rank: 702
score: 99.33221076516544
patch: return ( Vector 1 D ) sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 702
score: 99.29350142045455
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 702
score: 99.2143798828125
patch: add ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 702
score: 99.20220075334821
patch: Region line $NUMBER$ = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 702
score: 99.09840698242188
patch: = get CaMeL Remaining CaMeL Region ( ) ;
rank: 702
score: 98.83426607572116
patch: while ( line 1 . length ( ) > 0 ) {
rank: 702
score: 98.63829549153645
patch: if ( line $NUMBER$ / $NUMBER$ / $NUMBER$ . 0 )
rank: 702
score: 98.06130981445312
patch: / / * / }
rank: 702
score: 97.64481608072917
patch: / / boolean / compute
rank: 703
score: 99.33214613970588
patch: include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 703
score: 99.29347059461806
patch: final Sub CaMeL Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 703
score: 99.20179332386364
patch: Line line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 703
score: 98.83417217548077
patch: if ( line 1 . size ( ) <= 1 ) {
rank: 703
score: 98.63587535511364
patch: int size = line $NUMBER$ . size ( ) ;
rank: 703
score: 98.06090087890625
patch: for / * /
rank: 703
score: 97.64473876953124
patch: / / else /
rank: 704
score: 99.2929751747533
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( )
rank: 704
score: 99.2130988625919
patch: for ( String line 1 : sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 704
score: 99.20160784040179
patch: Space line $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 704
score: 99.09700833834134
patch: File line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 704
score: 98.83373006184895
patch: / * / if ( line $NUMBER$ != null ) {
rank: 704
score: 98.35140228271484
patch: / int * / / / /
rank: 704
score: 98.06043352399554
patch: / / * char * /
rank: 704
score: 97.6424051920573
patch: / / int * /
rank: 705
score: 99.33152860753677
patch: Line line $NUMBER$ = line 1 . check CaMeL Point ( sub CaMeL Line ) ;
rank: 705
score: 99.2925961143092
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ) ;
rank: 705
score: 99.0965576171875
patch: if ( line $NUMBER$ != get CaMeL Hyperplane ( ) ) {
rank: 705
score: 98.82898966471355
patch: Iterator intersection = intersection . iterator ( line 1 ) ;
rank: 705
score: 98.63498942057292
patch: if ( line $NUMBER$ != null / * / ) {
rank: 705
score: 98.35099029541016
patch: / * * / * / *
rank: 705
score: 98.06006731305804
patch: / * ? * / }
rank: 705
score: 97.64044189453125
patch: LOG / / / /
rank: 706
score: 99.3311767578125
patch: return intersection ( line 1 , line $NUMBER$ , include CaMeL End CaMeL Points ) ;
rank: 706
score: 99.2115119485294
patch: / * if ( sub CaMeL Line . get CaMeL Hyperplane ( ) == null )
rank: 706
score: 99.0955810546875
patch: try { Line line $NUMBER$ = get CaMeL Hyperplane ( ) ;
rank: 706
score: 98.6341885653409
patch: if ( line 1 / $NUMBER$ == - 1 )
rank: 706
score: 98.3509750366211
patch: / * / / else * /
rank: 706
score: 98.05934361049107
patch: / * intersection * / /
rank: 706
score: 97.63913981119792
patch: intersection / int / /
rank: 707
score: 99.21143296185662
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) != $STRING$ ) {
rank: 707
score: 99.19634137834821
patch: Line line $NUMBER$ 1 = ( Line ) sub CaMeL Line != null
rank: 707
score: 99.09523703835227
patch: Line line $NUMBER$ = intersection ( line 1 ) ;
rank: 707
score: 98.8275615985577
patch: if ( line 1 . length ( ) <= 0 ) {
rank: 707
score: 98.63372802734375
patch: if ( line 1 == null ) return / * /
rank: 707
score: 98.05710856119792
patch: / * / else {
rank: 707
score: 97.63503011067708
patch: / / final / compute
rank: 708
score: 99.29194779829545
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) .
rank: 708
score: 99.21109771728516
patch: for ( Line line $NUMBER$ : sub CaMeL Line . sub CaMeL Line ) {
rank: 708
score: 99.0950458233173
patch: intersection ( line 1 . intersection ( line $NUMBER$ ) ) ;
rank: 708
score: 98.82571176382211
patch: int intersection = line 1 . intersection ( line 1 ) ;
rank: 708
score: 98.6327412923177
patch: assert line 1 != null : $STRING$ + line 1 ;
rank: 708
score: 98.34885951450893
patch: / * int / * /
rank: 708
score: 98.05514090401786
patch: / / * / / }
rank: 708
score: 97.63465372721355
patch: / / System / /
rank: 709
score: 99.29186727834302
patch: final boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 709
score: 99.19366455078125
patch: Line line 1 = ( Line ) get CaMeL Line ( ) ;
rank: 709
score: 99.09482046274039
patch: if ( sub CaMeL Line . length ( ) > 0 )
rank: 709
score: 98.6320088704427
patch: if ( line 1 / $NUMBER$ / $NUMBER$ . 0 )
rank: 709
score: 98.34770202636719
patch: / / int * * / /
rank: 709
score: 98.05507986886161
patch: if ( intersection / * intersection
rank: 709
score: 97.6314188639323
patch: Iterator / / / /
rank: 710
score: 99.2911376953125
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ) ;
rank: 710
score: 99.2103500366211
patch: if ( sub CaMeL Line . get CaMeL Length ( ) == 0 ) {
rank: 710
score: 99.19361223493304
patch: Location line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 710
score: 99.0940692608173
patch: int intersection = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 710
score: 98.82415771484375
patch: if ( line 1 . equals ( intersection ) ) {
rank: 710
score: 98.63194783528645
patch: final int size = line $NUMBER$ . size ( ) ;
rank: 710
score: 98.34516143798828
patch: / * ? / / * /
rank: 710
score: 98.05430385044643
patch: / / ? / * /
rank: 710
score: 97.62855224609375
patch: / / / System
rank: 711
score: 99.29108708079268
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ) ;
rank: 711
score: 99.19314139229911
patch: Region line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 711
score: 99.093994140625
patch: if ( ! include CaMeL End CaMeL Points ) {
rank: 711
score: 98.82294170673077
patch: / * / / if ( line 1 != null ) {
rank: 711
score: 98.63180541992188
patch: String intersection = null ; if ( intersection != null )
rank: 711
score: 98.34480285644531
patch: / * * ] * / /
rank: 711
score: 98.05230712890625
patch: / * * * / else
rank: 711
score: 97.62649536132812
patch: / / / / byte
rank: 712
score: 99.32787272135417
patch: final Line line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) ;
rank: 712
score: 99.19280395507812
patch: line 1 . intersection ( line 1 ) ;
rank: 712
score: 99.09368896484375
patch: Line line $NUMBER$ = ( Line ) new Line ) ;
rank: 712
score: 98.63104248046875
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ / *
rank: 712
score: 98.34178924560547
patch: / * ? * * / /
rank: 712
score: 98.05228097098214
patch: / / if ( intersection )
rank: 712
score: 97.62637329101562
patch: / / / / long
rank: 713
score: 99.3268051147461
patch: loc 1 = ( Line ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 713
score: 99.29053452435662
patch: int include CaMeL End CaMeL Points = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 713
score: 99.20814615885416
patch: if ( sub CaMeL Line != null && include CaMeL End CaMeL Points )
rank: 713
score: 99.19232177734375
patch: Location line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 713
score: 99.09017944335938
patch: Line 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 713
score: 98.82224684495192
patch: if ( line 1 != - 1 ) { / * /
rank: 713
score: 98.6304423014323
patch: if ( intersection != null / * intersection * / /
rank: 713
score: 98.3398666381836
patch: / * * / } * /
rank: 713
score: 97.6253662109375
patch: / boolean / / /
rank: 714
score: 99.28991117931548
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( )
rank: 714
score: 99.20810834099265
patch: if ( line 1 . to CaMeL Array ( ) . length > 0 ) {
rank: 714
score: 99.19189453125
patch: Region line $NUMBER$ = line 1 . intersection ( line 1 ) ;
rank: 714
score: 99.08847045898438
patch: if ( line 1 . add ( line $NUMBER$ ) )
rank: 714
score: 98.82212320963542
patch: / * / if ( line 1 instanceof Line ) {
rank: 714
score: 98.63035999644886
patch: if ( line $NUMBER$ == null / * / )
rank: 714
score: 98.3386459350586
patch: / / int / / * /
rank: 714
score: 98.05141194661458
patch: this / / * /
rank: 714
score: 97.62230224609375
patch: / / try /
rank: 715
score: 99.32526397705078
patch: include CaMeL End CaMeL Points = line 1 . get CaMeL Hyperplane ( ) ;
rank: 715
score: 99.28941127232143
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . get CaMeL Hyperplane ( ) ) ;
rank: 715
score: 99.20808919270833
patch: this . line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 715
score: 99.1917255108173
patch: sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ;
rank: 715
score: 99.08733661358173
patch: if ( intersection ( sub CaMeL Line , line $NUMBER$ ) )
rank: 715
score: 98.63008626302083
patch: if ( intersection ( line 1 ) / * / )
rank: 715
score: 98.33349609375
patch: / * ? / * /
rank: 715
score: 98.04963030133929
patch: if ( / * intersection )
rank: 715
score: 97.62130737304688
patch: / / return / /
rank: 716
score: 99.32479858398438
patch: Line line $NUMBER$ = ( Line ) check CaMeL Point ( line $NUMBER$ ) ;
rank: 716
score: 99.28939428084936
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( )
rank: 716
score: 99.19147600446429
patch: Line intersection 1 = line 1 . intersection ( line $NUMBER$ ) ;
rank: 716
score: 99.08592732747395
patch: if ( line 1 . get CaMeL Hyperplane ( ) )
rank: 716
score: 98.82072310014205
patch: List intersection = new Array CaMeL List ( ) ;
rank: 716
score: 98.62994939630681
patch: if ( intersection != null / * / ) /
rank: 716
score: 98.04830496651786
patch: if / * / / }
rank: 716
score: 97.6204121907552
patch: / / / / start
rank: 717
score: 99.2892822265625
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ) ;
rank: 717
score: 99.20732116699219
patch: for ( Line line $NUMBER$ : get CaMeL Remaining CaMeL Region ( ) ) {
rank: 717
score: 99.08560180664062
patch: if ( get CaMeL Hyperplane ( ) != null ) {
rank: 717
score: 98.81715745192308
patch: if ( line 1 . size ( ) == 1 ) {
rank: 717
score: 98.62969970703125
patch: Shape intersection = null ; if ( intersection != null )
rank: 717
score: 98.33149719238281
patch: / * int / / * /
rank: 717
score: 98.0469970703125
patch: if / * / } /
rank: 717
score: 97.61887613932292
patch: return / / / compute
rank: 718
score: 99.3218635110294
patch: String line $NUMBER$ = ( Line ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 718
score: 99.28926908052884
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 718
score: 99.20725384880515
patch: if ( this . include CaMeL End CaMeL Points && include CaMeL End CaMeL Points )
rank: 718
score: 99.08347574869792
patch: if ( line $NUMBER$ != get CaMeL Hyperplane ( ) )
rank: 718
score: 98.6294453938802
patch: if ( intersection . size ( ) / * / )
rank: 718
score: 97.61381225585937
patch: infinite / / compute
rank: 719
score: 99.3194580078125
patch: Region line $NUMBER$ = ( Line ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 719
score: 99.2892578125
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ) ;
rank: 719
score: 99.20691636029412
patch: for ( Line line $NUMBER$ : line 1 . get CaMeL Hyperplane ( ) ) {
rank: 719
score: 99.1881573016827
patch: String line 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 719
score: 99.08258056640625
patch: if ( include CaMeL End CaMeL Points == null ) {
rank: 719
score: 98.81653849283855
patch: / * throw new Unsupported CaMeL Operation CaMeL Exception ( )
rank: 719
score: 98.33100128173828
patch: int * * / int * /
rank: 719
score: 98.04412841796875
patch: / / else * * /
rank: 719
score: 97.60993041992188
patch: / } / /
rank: 720
score: 99.28884055397727
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ;
rank: 720
score: 99.07882690429688
patch: if ( get CaMeL Hyperplane ( ) == null ) {
rank: 720
score: 98.81494140625
patch: / / throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 720
score: 98.62920587713069
patch: if ( intersection != null / * / / /
rank: 720
score: 98.33095005580357
patch: / * ] * / }
rank: 720
score: 98.04312569754464
patch: else { if / * /
rank: 720
score: 97.60582478841145
patch: / / List / compute
rank: 721
score: 99.31889792049633
patch: final Line line $NUMBER$ = line 1 . get CaMeL Remaining CaMeL Region ( ) ;
rank: 721
score: 99.28849473110465
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) .
rank: 721
score: 99.20472819010416
patch: this . get CaMeL Hyperplane ( ) . add ( line 1 ) ;
rank: 721
score: 99.18714250837054
patch: Line line $NUMBER$ = ( Line ) sub CaMeL Line ( ) ;
rank: 721
score: 99.07869466145833
patch: Line line $NUMBER$ = ( Region ) sub CaMeL Line ;
rank: 721
score: 98.81435139973958
patch: if ( line 1 . intersection ( line 1 ) )
rank: 721
score: 98.62881033761161
patch: if ( intersection == null )
rank: 721
score: 98.04299926757812
patch: List * * * /
rank: 721
score: 97.60467529296875
patch: final / / / /
rank: 722
score: 99.2884265988372
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 722
score: 99.20215606689453
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) == this )
rank: 722
score: 99.186279296875
patch: Line - 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 722
score: 99.07774769176136
patch: Line line $NUMBER$ = ( line 1 != null )
rank: 722
score: 98.812744140625
patch: if ( line $NUMBER$ . size ( ) < $NUMBER$ ) {
rank: 722
score: 98.3306655883789
patch: / * int * * / /
rank: 722
score: 98.04282924107143
patch: else { / * * /
rank: 722
score: 97.60340372721355
patch: / / int intersection ;
rank: 723
score: 99.31742858886719
patch: return ( Vector 1 D ) line 1 . intersection ( line $NUMBER$ ) ;
rank: 723
score: 99.28833575581395
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 723
score: 99.2016372680664
patch: if ( include CaMeL End CaMeL Points ) { return sub CaMeL Line ; }
rank: 723
score: 98.81166428786058
patch: if ( line 1 != null && line 1 instanceof Line )
rank: 723
score: 98.62797037760417
patch: / / / / / / / / / * /
rank: 723
score: 98.32814243861607
patch: / * * / / *
rank: 723
score: 98.04281180245536
patch: / * in * * /
rank: 723
score: 97.602783203125
patch: } / { /
rank: 724
score: 99.31737409319196
patch: loc 1 = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 724
score: 99.28745993589743
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 724
score: 99.20138346354166
patch: if ( include CaMeL End CaMeL Points || line 1 != null ) {
rank: 724
score: 99.07437133789062
patch: Line line $NUMBER$ = intersection ( sub CaMeL Line ) ;
rank: 724
score: 98.811279296875
patch: / * / if ( line 1 <= - 1 ) {
rank: 724
score: 98.32742309570312
patch: / * * * ] * /
rank: 724
score: 97.6018778483073
patch: intersection / * / compute
rank: 725
score: 99.31719207763672
patch: Sub CaMeL Line line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 725
score: 99.28738839285714
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 725
score: 99.20087432861328
patch: return line 1 . intersection ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 725
score: 99.07375081380208
patch: if ( include CaMeL End CaMeL Points != null ) {
rank: 725
score: 98.32502964564732
patch: / int * / / /
rank: 725
score: 98.03768484933036
patch: / / if / * /
rank: 725
score: 97.6012674967448
patch: if / { / /
rank: 726
score: 99.2870361328125
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Remaining CaMeL
rank: 726
score: 99.20074462890625
patch: if ( sub CaMeL Line == null ) { return null ; }
rank: 726
score: 99.18221609933036
patch: Region line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 726
score: 99.07273356119792
patch: return sub CaMeL Line . intersection ( line 1 ) ;
rank: 726
score: 98.80978393554688
patch: if ( line 1 != null ) { break ; }
rank: 726
score: 98.6263427734375
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( / * /
rank: 726
score: 97.59932454427083
patch: / / { / *
rank: 727
score: 99.31529235839844
patch: return include CaMeL End CaMeL Points . check CaMeL Point ( line 1 ) ;
rank: 727
score: 99.28700219131098
patch: Line line $NUMBER$ = sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 727
score: 99.19999186197917
patch: / * if ( sub CaMeL Line . intersection ( line $NUMBER$ ) )
rank: 727
score: 99.1815897623698
patch: Line line $NUMBER$ 1 = get CaMeL Line ( ) ;
rank: 727
score: 98.62630208333333
patch: / / { / / / / / / * /
rank: 727
score: 98.03734334309895
patch: / / if * /
rank: 727
score: 97.59930419921875
patch: / throw / / /
rank: 728
score: 99.28697837271342
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 728
score: 99.18077674278847
patch: Line line $NUMBER$ = line 1 . intersection ( line 1 )
rank: 728
score: 99.06960227272727
patch: if ( include CaMeL End CaMeL Points == null )
rank: 728
score: 98.80800559303977
patch: Iterator iterator = line 1 . iterator ( ) ;
rank: 728
score: 98.6251220703125
patch: if ( intersection ( line 1 ) / * /
rank: 728
score: 98.31838989257812
patch: / * ? / /
rank: 728
score: 98.03651646205357
patch: / / < * * /
rank: 728
score: 97.5984395345052
patch: / / byte / /
rank: 729
score: 99.28690011160714
patch: int include CaMeL End CaMeL Points = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 729
score: 99.19879150390625
patch: synchronized ( sub CaMeL Line ) { if ( include CaMeL End CaMeL Points )
rank: 729
score: 98.80791015625
patch: if ( line 1 <= - 1 ) {
rank: 729
score: 98.6207275390625
patch: if ( line $NUMBER$ / $NUMBER$ != null ) {
rank: 729
score: 98.31715611049107
patch: / * int * / /
rank: 729
score: 98.03648885091145
patch: / / } * /
rank: 729
score: 97.59815470377605
patch: / public / / /
rank: 730
score: 99.28643508184524
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 730
score: 99.19879150390625
patch: this . line 1 = sub CaMeL Line . get CaMeL Line ( ) ;
rank: 730
score: 99.06193033854167
patch: if ( line $NUMBER$ == get CaMeL Hyperplane ( ) )
rank: 730
score: 98.62046305338542
patch: Element intersection = null ; if ( intersection != null )
rank: 730
score: 98.31614685058594
patch: / * * ? / * /
rank: 730
score: 98.03638916015625
patch: / / * compute
rank: 730
score: 97.59134521484376
patch: intersection / / compute
rank: 731
score: 99.28607855902777
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ) ;
rank: 731
score: 99.1978515625
patch: this . include CaMeL End CaMeL Points = intersection ( line $NUMBER$ ) ;
rank: 731
score: 99.17876325334821
patch: Line line $NUMBER$ 1 = line 1 . intersection ( line 1 )
rank: 731
score: 98.80610795454545
patch: / * if line $NUMBER$ != - 1 * /
rank: 731
score: 97.59114583333333
patch: / / { / int
rank: 732
score: 99.28607732599431
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 732
score: 99.17805698939732
patch: Object line 1 = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 732
score: 99.05589710582386
patch: if ( line $NUMBER$ instanceof Sub CaMeL Line ) {
rank: 732
score: 98.31523895263672
patch: / / int * / * /
rank: 732
score: 98.03608049665179
patch: if / * char * /
rank: 732
score: 97.58857421875
patch: / / boolean /
rank: 733
score: 99.30908203125
patch: loc 1 = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 733
score: 99.285888671875
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( )
rank: 733
score: 99.19544270833333
patch: for ( final Sub CaMeL Line sub CaMeL Line : line 1 ) {
rank: 733
score: 99.17689732142857
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( line $NUMBER$ ,
rank: 733
score: 99.05519797585227
patch: if ( get CaMeL Hyperplane ( ) == null )
rank: 733
score: 98.61451305042614
patch: assert line $NUMBER$ != null : $STRING$ / * /
rank: 733
score: 98.31481170654297
patch: / * / char * / line
rank: 733
score: 98.03517368861607
patch: / / / * / }
rank: 733
score: 97.58725992838542
patch: / / int } /
rank: 734
score: 99.28580729166667
patch: int include CaMeL End CaMeL Points = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 734
score: 99.1953369140625
patch: if ( sub CaMeL Line . get CaMeL Length ( ) > 0 )
rank: 734
score: 99.05441284179688
patch: if ( include CaMeL End CaMeL Points && true ) {
rank: 734
score: 98.80088112571023
patch: if ( line 1 == null line $NUMBER$ ) {
rank: 734
score: 98.60967462713069
patch: if ( intersection == null / * / ) /
rank: 734
score: 98.31461007254464
patch: / * ] intersection / /
rank: 734
score: 98.03473772321429
patch: / / char / * /
rank: 734
score: 97.58390502929687
patch: / * / compute
rank: 735
score: 99.30425262451172
patch: return ( ( Line ) line $NUMBER$ ) . intersection ( line $NUMBER$ ) ;
rank: 735
score: 99.19458946814903
patch: if ( line $NUMBER$ . include CaMeL End CaMeL Points ) {
rank: 735
score: 99.05421956380208
patch: if ( line 1 == get CaMeL Hyperplane ( ) )
rank: 735
score: 98.79966227213542
patch: if ( line $NUMBER$ == null ) return - 1 ;
rank: 735
score: 98.60603471235795
patch: if ( line 1 / $NUMBER$ == null ) {
rank: 735
score: 98.31327819824219
patch: / / / int * / /
rank: 735
score: 98.03424944196429
patch: } else { / * /
rank: 735
score: 97.5787353515625
patch: infinite / { /
rank: 736
score: 99.28578225160257
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 736
score: 99.17518833705357
patch: Line line 1 = line 1 . get CaMeL Line ( ) ;
rank: 736
score: 99.05360717773438
patch: if ( sub CaMeL Line >= 0 ) {
rank: 736
score: 98.79564412434895
patch: if ( line 1 . intersection ( line 1 / /
rank: 736
score: 98.60587935014205
patch: assert line $NUMBER$ == null ? null : $STRING$ ;
rank: 736
score: 98.31327819824219
patch: / * * : * / /
rank: 736
score: 98.03372628348214
patch: Iterator * * * / /
rank: 736
score: 97.57784016927083
patch: / / { / System
rank: 737
score: 99.28459983648256
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 737
score: 99.19370339133523
patch: for ( Line line 1 : line 1 ) {
rank: 737
score: 99.17450420673077
patch: Line line $NUMBER$ = get CaMeL Line ( line 1 ) ;
rank: 737
score: 99.0529073079427
patch: = sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 737
score: 98.79465553977273
patch: if ( line $NUMBER$ . length == 0 ) {
rank: 737
score: 98.31085205078125
patch: / / int / * * /
rank: 737
score: 97.5773213704427
patch: / out / / /
rank: 738
score: 99.1744384765625
patch: Location line 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 738
score: 99.05238850911458
patch: if ( line $NUMBER$ . size ( ) > 1 )
rank: 738
score: 98.03250558035714
patch: / * * / / }
rank: 738
score: 97.57589721679688
patch: return / / /
rank: 739
score: 99.29848225911458
patch: if ( line 1 . get CaMeL Hyperplane ( ) ;
rank: 739
score: 99.2845203488372
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ) ;
rank: 739
score: 99.19246419270833
patch: double line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 739
score: 99.05168013139205
patch: sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 739
score: 98.79232788085938
patch: if ( line 1 . equals ( this ) ) {
rank: 739
score: 98.6016845703125
patch: if ( line 1 != null line $NUMBER$ ) {
rank: 739
score: 98.03090122767857
patch: / / { * * /
rank: 739
score: 97.57410685221355
patch: / / / System /
rank: 740
score: 99.16933030348558
patch: Line line 1 1 = ( Line ) sub CaMeL Line ;
rank: 740
score: 99.0509033203125
patch: if ( intersection ( line $NUMBER$ ) ) {
rank: 740
score: 98.59792258522727
patch: if ( intersection != intersection / * / / /
rank: 740
score: 98.030517578125
patch: / / * intersection * /
rank: 740
score: 97.56825764973958
patch: / / / throw /
rank: 741
score: 99.29774475097656
patch: Line line $NUMBER$ = ( Line ) $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 741
score: 99.28386896306819
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 741
score: 99.18896484375
patch: / * if ( line 1 . to CaMeL Sub CaMeL Space ( ) )
rank: 741
score: 99.16901506696429
patch: final int line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 741
score: 99.049755859375
patch: if ( ! include CaMeL End CaMeL Points )
rank: 741
score: 98.5932284268466
patch: if ( intersection == null / * / / )
rank: 741
score: 98.30729457310268
patch: / / / int * /
rank: 741
score: 98.02739606584821
patch: / / case * * /
rank: 741
score: 97.5665995279948
patch: / / double / compute
rank: 742
score: 99.29660470145089
patch: return ( Line ) line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 742
score: 99.04555257161458
patch: if ( line 1 != get CaMeL Hyperplane ( ) )
rank: 742
score: 98.79014078776042
patch: List intersection = new Array CaMeL List ( 1 ) ;
rank: 742
score: 98.59154163707386
patch: if ( intersection != intersection / * / ) /
rank: 742
score: 98.30599212646484
patch: / * ] } / / /
rank: 742
score: 98.02660260881696
patch: infinite * * * * /
rank: 742
score: 97.56605021158855
patch: / break / / /
rank: 743
score: 99.29659329927884
patch: line $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 743
score: 99.28297601744185
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ;
rank: 743
score: 99.18856608072916
patch: while ( line $NUMBER$ != null && include CaMeL End CaMeL Points ) {
rank: 743
score: 99.16687883649554
patch: Region line 1 = line 1 . intersection ( line $NUMBER$ ) ;
rank: 743
score: 98.7873026529948
patch: if ( line 1 == null ) { return null ;
rank: 743
score: 98.30512237548828
patch: / * ? / * * /
rank: 743
score: 98.0258280436198
patch: / / list * /
rank: 743
score: 97.56434122721355
patch: / / { / {
rank: 744
score: 99.29559326171875
patch: Sub CaMeL Line line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) ;
rank: 744
score: 99.2828994378811
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( )
rank: 744
score: 99.18834339488636
patch: / * if ( line $NUMBER$ != null ) {
rank: 744
score: 99.1666729266827
patch: Line line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ;
rank: 744
score: 99.0437520345052
patch: if ( sub CaMeL Line [ 0 ] == 0 )
rank: 744
score: 98.78338623046875
patch: / * * if ( line 1 != null ) {
rank: 744
score: 98.59070933948864
patch: if ( line $NUMBER$ == null ) / * /
rank: 744
score: 98.30412946428571
patch: / * / / else /
rank: 744
score: 97.5607401529948
patch: / { / / try
rank: 745
score: 99.2828398913872
patch: Line line $NUMBER$ = sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 745
score: 99.18762969970703
patch: / * if ( sub CaMeL Line . intersection ( line $NUMBER$ ) ) {
rank: 745
score: 99.04339044744319
patch: sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 745
score: 98.7825927734375
patch: if ( line 1 != null ) / * /
rank: 745
score: 98.58643188476563
patch: if ( line 1 / $NUMBER$ == null )
rank: 745
score: 98.30360630580357
patch: / * / / } /
rank: 745
score: 98.02504185267857
patch: / / in * / /
rank: 745
score: 97.55973307291667
patch: / / log / /
rank: 746
score: 99.2824939546131
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ;
rank: 746
score: 99.04302423650569
patch: Line line $NUMBER$ = ( Line 1 ) null ;
rank: 746
score: 98.58574884588069
patch: byte [ ] intersection = intersection ( intersection ) ;
rank: 746
score: 98.3031234741211
patch: / * * int / * /
rank: 746
score: 98.02267892020089
patch: int * * / } /
rank: 746
score: 97.55970255533855
patch: / / / / =
rank: 747
score: 99.18703787667411
patch: if ( include CaMeL End CaMeL Points && line 1 . get CaMeL
rank: 747
score: 99.16312081473214
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( 1 ) ;
rank: 747
score: 98.58558238636364
patch: if ( line $NUMBER$ == null line $NUMBER$ ) {
rank: 747
score: 98.30268096923828
patch: / * / } * / /
rank: 747
score: 98.02250162760417
patch: if / * ? /
rank: 747
score: 97.55928548177083
patch: System / / / compute
rank: 748
score: 99.29324340820312
patch: Line line $NUMBER$ = ( Line ) line 1 . get CaMeL Hyperplane ( )
rank: 748
score: 99.28202892485119
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Sub CaMeL Space ( ) ) ;
rank: 748
score: 99.18655160757211
patch: return ( line 1 ) . intersection ( line $NUMBER$ ) ;
rank: 748
score: 99.0408602627841
patch: try { if ( line 1 != null ) {
rank: 748
score: 98.77573464133523
patch: / * / if ( line 1 != null )
rank: 748
score: 98.58492431640624
patch: if ( line $NUMBER$ / $NUMBER$ == 0 )
rank: 748
score: 98.3026351928711
patch: / * ] intersection * * /
rank: 748
score: 98.02248709542411
patch: / / default * / /
rank: 748
score: 97.55770874023438
patch: / / int intersection =
rank: 749
score: 99.29316711425781
patch: line 1 = ( Line ) line 1 . get CaMeL Hyperplane ( ) ;
rank: 749
score: 99.28166682545732
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 749
score: 99.18583679199219
patch: if ( ( Line ) sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 749
score: 99.040771484375
patch: if ( line 1 instanceof Sub CaMeL Line ) {
rank: 749
score: 98.58244185014205
patch: if ( line $NUMBER$ / $NUMBER$ == 0 ) {
rank: 749
score: 98.30174909319196
patch: / * int / / /
rank: 749
score: 98.0220947265625
patch: if ( intersection ) { do
rank: 749
score: 97.5574239095052
patch: / / int / *
rank: 750
score: 99.18575613839286
patch: while ( sub CaMeL Line . intersection ( line $NUMBER$ ) ) {
rank: 750
score: 99.15208851207386
patch: Line line $NUMBER$ . intersection ( line 1 ) ;
rank: 750
score: 98.0220438639323
patch: / * List * /
rank: 750
score: 97.5568339029948
patch: / / char / /
rank: 751
score: 99.28133336509147
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 751
score: 99.1854248046875
patch: if ( line 1 . get CaMeL Remaining CaMeL Region ( ) != null )
rank: 751
score: 98.77262739701705
patch: / * if line 1 != - 1 * /
rank: 751
score: 98.01939900716145
patch: intersection / / * /
rank: 751
score: 97.55600992838542
patch: / / } / compute
rank: 752
score: 99.28127271075581
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) )
rank: 752
score: 99.15101207386364
patch: Line line 1 = get CaMeL Hyperplane ( ) ;
rank: 752
score: 99.03956187855114
patch: try { if ( line $NUMBER$ != null ) {
rank: 752
score: 98.76948686079545
patch: / * / if ( intersection == null ) {
rank: 752
score: 98.577001953125
patch: if ( intersection / * intersection * / )
rank: 752
score: 98.01887730189732
patch: if ( intersection , intersection )
rank: 752
score: 97.5545654296875
patch: / / / / is
rank: 753
score: 99.28966471354167
patch: loc = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ;
rank: 753
score: 99.28122618140245
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . get CaMeL Hyperplane ( ) ) ;
rank: 753
score: 99.1846923828125
patch: if ( line 1 . get CaMeL Hyperplane ( ) == this ) {
rank: 753
score: 99.03792898995536
patch: if ( sub CaMeL Line )
rank: 753
score: 98.76917860243056
patch: if ( line $NUMBER$ instanceof Line ) {
rank: 753
score: 98.5765047940341
patch: if ( line $NUMBER$ / $NUMBER$ / $NUMBER$ ) {
rank: 753
score: 98.29849679129464
patch: / * * System . /
rank: 753
score: 97.5538330078125
patch: / / / / do
rank: 754
score: 99.2809999047256
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( )
rank: 754
score: 99.18435434194711
patch: if ( sub CaMeL Line == null ) { return null ;
rank: 754
score: 99.14916053185097
patch: int line 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 754
score: 99.03792317708333
patch: if ( line 1 . size ( ) == 0 )
rank: 754
score: 98.76622517903645
patch: / * / if ( line $NUMBER$ == null ) {
rank: 754
score: 98.57598876953125
patch: if ( line 1 != null line $NUMBER$ )
rank: 754
score: 98.29843139648438
patch: / / float / / / /
rank: 754
score: 98.01857212611607
patch: intersection ( intersection ( intersection )
rank: 754
score: 97.55106608072917
patch: / / / break /
rank: 755
score: 99.28071732954545
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 755
score: 99.18387044270834
patch: if ( include CaMeL End CaMeL Points ) { return sub CaMeL Line ;
rank: 755
score: 99.14747032752403
patch: sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) ;
rank: 755
score: 99.0346346768466
patch: if ( include CaMeL End CaMeL Points ) { {
rank: 755
score: 98.76535866477273
patch: if ( line 1 == null line 1 ) {
rank: 755
score: 98.57431030273438
patch: if ( intersection == null / * / /
rank: 755
score: 98.01747639973958
patch: / / char * /
rank: 755
score: 97.54728190104167
patch: / / else / compute
rank: 756
score: 99.28633939302884
patch: line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 756
score: 99.28058003270348
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( )
rank: 756
score: 99.183349609375
patch: buffer = line 1 . intersection ( line $NUMBER$ ) ;
rank: 756
score: 99.14738325639205
patch: line $NUMBER$ . intersection ( sub CaMeL Line ) ;
rank: 756
score: 99.03461248224431
patch: = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 756
score: 98.7641934481534
patch: if ( line 1 / $NUMBER$ < 0 ) {
rank: 756
score: 98.2966537475586
patch: / * * / / / *
rank: 756
score: 98.01595052083333
patch: infinite * * * /
rank: 756
score: 97.54728190104167
patch: { / { / /
rank: 757
score: 99.28540852864583
patch: / * * / return line 1 . intersection ( line $NUMBER$ ) ;
rank: 757
score: 99.2803925304878
patch: final boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 757
score: 99.18309783935547
patch: if ( line 1 . get CaMeL Remaining CaMeL Region ( ) == null )
rank: 757
score: 99.0343729654948
patch: if ( line $NUMBER$ . size ( ) > $NUMBER$ )
rank: 757
score: 98.5704345703125
patch: if ( line 1 / $NUMBER$ != null )
rank: 757
score: 98.29621124267578
patch: / / char * / / /
rank: 757
score: 98.01460484095982
patch: List * * * * /
rank: 757
score: 97.546630859375
patch: / / / / List
rank: 758
score: 99.28445434570312
patch: if ( line $NUMBER$ . get CaMeL Hyperplane ( ) ;
rank: 758
score: 99.28037806919643
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 758
score: 99.182373046875
patch: for ( final Sub CaMeL Line sub CaMeL Line : sub CaMeL Line ) {
rank: 758
score: 99.14566744290866
patch: else line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 758
score: 99.03336588541667
patch: return get CaMeL Remaining CaMeL Region ( line $NUMBER$ ) ;
rank: 758
score: 98.76348876953125
patch: if ( line 1 . equals ( line 1 ) )
rank: 758
score: 98.56916947798295
patch: if ( intersection != intersection / * / / )
rank: 758
score: 98.29316711425781
patch: / * / } * * /
rank: 758
score: 98.01427350725446
patch: System . / * { /
rank: 758
score: 97.5438232421875
patch: / / continue / /
rank: 759
score: 99.2801483898628
patch: int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ) ;
rank: 759
score: 99.18208821614583
patch: listeners = line 1 . intersection ( line $NUMBER$ ) ;
rank: 759
score: 99.14551720252403
patch: Line line $NUMBER$ = get CaMeL Sub CaMeL Space ( ) ;
rank: 759
score: 99.03134987571023
patch: if ( get CaMeL Hyperplane ( ) != null )
rank: 759
score: 98.763427734375
patch: / * / if ( intersection != null ) {
rank: 759
score: 98.56885875355114
patch: if ( line 1 / $NUMBER$ / $NUMBER$ ) {
rank: 759
score: 98.29275512695312
patch: / * / / * else /
rank: 759
score: 98.01273018973214
patch: if ( intersection ) { )
rank: 759
score: 97.54140625
patch: / / / else
rank: 760
score: 99.1818378155048
patch: get CaMeL Hyperplane ( ) . add ( line $NUMBER$ ) ;
rank: 760
score: 99.03062608506944
patch: if ( sub CaMeL Line >= 0 )
rank: 760
score: 98.76230875651042
patch: if ( line 1 != null ) { continue ; }
rank: 760
score: 98.56758256392045
patch: if ( line $NUMBER$ != null / * / /
rank: 760
score: 98.0105489095052
patch: Iterator / * * /
rank: 760
score: 97.5370585123698
patch: / System / / /
rank: 761
score: 99.27940063476562
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ) ;
rank: 761
score: 99.1425030048077
patch: Line line $NUMBER$ = line $NUMBER$ . intersection ( line 1 )
rank: 761
score: 99.02930704752605
patch: if ( include CaMeL End CaMeL Points && false ) {
rank: 761
score: 98.76149495442708
patch: / * if ( line 1 != - 1 ) {
rank: 761
score: 98.28959655761719
patch: / * / / / int intersection
rank: 761
score: 98.00986153738839
patch: intersection / * * / /
rank: 761
score: 97.53672485351562
patch: throw / / /
rank: 762
score: 99.28026580810547
patch: line $NUMBER$ = ( Line ) line 1 . intersection ( line $NUMBER$ ) ;
rank: 762
score: 99.27916587271342
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 762
score: 99.18041178385417
patch: return ( line 1 . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 762
score: 99.0270108309659
patch: if ( intersection ( sub CaMeL Line ) ) {
rank: 762
score: 98.7608309659091
patch: switch ( line $NUMBER$ ) { case - 1 :
rank: 762
score: 98.56450861150569
patch: if ( intersection == null ) / * / /
rank: 762
score: 98.28855895996094
patch: / * / / * / int
rank: 762
score: 98.0096435546875
patch: / * / * { /
rank: 762
score: 97.53485107421875
patch: / / / / copy
rank: 763
score: 99.27980259486607
patch: Line line $NUMBER$ = line 1 . check CaMeL Point ( ) ;
rank: 763
score: 99.27907655297255
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . get CaMeL Hyperplane ( ) ) ;
rank: 763
score: 99.17997741699219
patch: if ( line 1 != null && this . include CaMeL End CaMeL Points )
rank: 763
score: 99.14047475961539
patch: Line line $NUMBER$ 1 1 = get CaMeL Hyperplane ( ) ;
rank: 763
score: 99.0242919921875
patch: if ( include CaMeL End CaMeL Points ) continue ;
rank: 763
score: 98.76010131835938
patch: final List intersection = new Array CaMeL List ( ) ;
rank: 763
score: 98.56340997869319
patch: if ( intersection . size ( ) != 0 )
rank: 763
score: 98.2885513305664
patch: / / list / / / /
rank: 763
score: 98.00929478236607
patch: / * / else / /
rank: 763
score: 97.53472900390625
patch: / / / int compute
rank: 764
score: 99.27897505326705
patch: return intersection ( line 1 , line $NUMBER$ ) ;
rank: 764
score: 99.13831505408653
patch: Line line $NUMBER$ 1 = get CaMeL Remaining CaMeL Region ( )
rank: 764
score: 99.02261352539062
patch: Line line $NUMBER$ = sub CaMeL Line . ( ) ;
rank: 764
score: 98.56325461647727
patch: if ( intersection == intersection ) { / * /
rank: 764
score: 98.28816986083984
patch: / * / / / } /
rank: 764
score: 98.00887625558036
patch: Iterator / / * / /
rank: 764
score: 97.5332539876302
patch: break / / / /
rank: 765
score: 99.27877197265624
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 765
score: 99.17894744873047
patch: synchronized ( line 1 ) { if ( include CaMeL End CaMeL Points ) {
rank: 765
score: 99.1339580829327
patch: Line line 1 = ( Line ) sub CaMeL Line != null
rank: 765
score: 99.0220947265625
patch: Line line $NUMBER$ = ( Line ) intersection ( ) ;
rank: 765
score: 98.75634765625
patch: if ( line 1 . contains ( line 1 ) )
rank: 765
score: 98.56279296875
patch: if ( intersection == null ) / * /
rank: 765
score: 98.28707885742188
patch: / int * / } / /
rank: 765
score: 98.00860595703125
patch: if ( intersection ) { /
rank: 765
score: 97.53226318359376
patch: / / / *
rank: 766
score: 99.27850896661931
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Hyperplane ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 766
score: 99.27814190204327
patch: loc 1 = line 1 . intersection ( line $NUMBER$ ) ;
rank: 766
score: 99.17891148158482
patch: for ( Line line $NUMBER$ : include CaMeL End CaMeL Points ) {
rank: 766
score: 99.13380784254808
patch: Element line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 766
score: 99.01919555664062
patch: while ( include CaMeL End CaMeL Points ) {
rank: 766
score: 98.75616455078125
patch: if ( line 1 == null ) { return this ;
rank: 766
score: 98.56270751953124
patch: if ( line $NUMBER$ == null line $NUMBER$ )
rank: 766
score: 98.28689575195312
patch: / / System . / / /
rank: 766
score: 98.00753348214286
patch: final List / / * /
rank: 766
score: 97.53176879882812
patch: int / { / /
rank: 767
score: 99.27846322408537
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) ) ;
rank: 767
score: 99.17792154947917
patch: for ( Sub CaMeL Line sub CaMeL Line : sub CaMeL Line ) {
rank: 767
score: 99.01878773082386
patch: = line 1 . get CaMeL Hyperplane ( ) ;
rank: 767
score: 98.56259494357639
patch: assert line $NUMBER$ != null : $STRING$ ;
rank: 767
score: 98.28668212890625
patch: / int / / * / /
rank: 767
score: 98.00745500837054
patch: / / ! * * /
rank: 767
score: 97.53016153971355
patch: public / / / compute
rank: 768
score: 99.27843656994048
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 768
score: 99.1317608173077
patch: Line line $NUMBER$ = get CaMeL Line ( line $NUMBER$ ) ;
rank: 768
score: 99.0130615234375
patch: final Line line $NUMBER$ = ( Line ) null ;
rank: 768
score: 98.7552490234375
patch: if ( line 1 / $NUMBER$ < - 1 ) {
rank: 768
score: 98.56166770241477
patch: if ( intersection . size ( ) <= 0 )
rank: 768
score: 98.28667449951172
patch: / * int * / / /
rank: 768
score: 98.00685628255208
patch: / / else * /
rank: 768
score: 97.5291748046875
patch: / / / / log
rank: 769
score: 99.27823893229167
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 ) ) ;
rank: 769
score: 99.273193359375
patch: return intersection ( line $NUMBER$ , include CaMeL End CaMeL Points ) ;
rank: 769
score: 99.13071695963542
patch: sub CaMeL Line 1 . intersection ( line $NUMBER$ ) ;
rank: 769
score: 99.0126620205966
patch: String line $NUMBER$ = get CaMeL Hyperplane ( ) ;
rank: 769
score: 98.74871271306819
patch: if ( line 1 . length > 1 ) {
rank: 769
score: 98.56158447265625
patch: if ( intersection == null / * / )
rank: 769
score: 98.2863998413086
patch: / * List / * / /
rank: 769
score: 98.00578090122768
patch: final List 1 / * /
rank: 769
score: 97.52707926432292
patch: / { / / int
rank: 770
score: 99.2781613372093
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) )
rank: 770
score: 99.27198204627403
patch: return sub CaMeL Line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 770
score: 99.176806640625
patch: if ( line $NUMBER$ == null || include CaMeL End CaMeL Points ) {
rank: 770
score: 99.01256214488636
patch: if ( include CaMeL End CaMeL Points != null )
rank: 770
score: 98.7434969815341
patch: if ( line 1 == null ) return this ;
rank: 770
score: 98.28626251220703
patch: / * ] intersection * / /
rank: 770
score: 98.00501505533855
patch: List / * * /
rank: 770
score: 97.526611328125
patch: int / / / try
rank: 771
score: 99.27799479166667
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) )
rank: 771
score: 99.27163696289062
patch: Line line $NUMBER$ = ( Line ) this . intersection ( line 1 ) ;
rank: 771
score: 99.17624337332589
patch: while ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 771
score: 99.1267598470052
patch: Line line $NUMBER$ = get CaMeL Line $NUMBER$ ( ) ;
rank: 771
score: 98.74168812144886
patch: Iterator intersection = line $NUMBER$ . iterator ( ) ;
rank: 771
score: 98.55974786931819
patch: Iterator iterator = line $NUMBER$ . iterator ( ) ;
rank: 771
score: 98.00151715959821
patch: / * / int / }
rank: 771
score: 97.52660115559895
patch: } / / { /
rank: 772
score: 99.27795991443452
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ) ; }
rank: 772
score: 99.27079010009766
patch: Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ; / * /
rank: 772
score: 99.1759033203125
patch: for ( Line line $NUMBER$ : line $NUMBER$ ) {
rank: 772
score: 99.12457744891827
patch: Line line 1 = line 1 . intersection ( line $NUMBER$ )
rank: 772
score: 99.00908868963069
patch: = line 1 . intersection ( line 1 ) ;
rank: 772
score: 98.73908025568181
patch: if ( line 1 != null ) { try {
rank: 772
score: 98.558056640625
patch: if ( intersection != intersection / * / /
rank: 772
score: 98.00084577287946
patch: if / / for * /
rank: 772
score: 97.52537027994792
patch: / return / / compute
rank: 773
score: 99.27793326028963
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( )
rank: 773
score: 99.1215108235677
patch: Line line 1 = get CaMeL Line 1 ( ) ;
rank: 773
score: 99.00724283854167
patch: if ( line $NUMBER$ != 0 ) {
rank: 773
score: 98.73405317826705
patch: if ( line 1 != null ) { intersection ;
rank: 773
score: 98.55759499289773
patch: if ( intersection != null ) / * / /
rank: 773
score: 98.2856674194336
patch: / * / / * * compute
rank: 773
score: 98.00053187779018
patch: this / / * * /
rank: 773
score: 97.52107747395833
patch: / / finally / /
rank: 774
score: 99.1195576985677
patch: Line - = get CaMeL Remaining CaMeL Region ( ) ;
rank: 774
score: 99.00575949928977
patch: if ( include CaMeL End CaMeL Points && true )
rank: 774
score: 98.73244406960227
patch: if ( line 1 . length != 0 ) {
rank: 774
score: 98.28539276123047
patch: / * ] } / * /
rank: 774
score: 97.99986775716145
patch: / int intersection * /
rank: 774
score: 97.52053833007812
patch: / / break / /
rank: 775
score: 99.27752976190476
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . get CaMeL Hyperplane ( ) ) ;
rank: 775
score: 99.26355794270833
patch: final boolean include CaMeL End CaMeL Points = get CaMeL Hyperplane ( ) ;
rank: 775
score: 99.0054043856534
patch: Line line $NUMBER$ = ( line $NUMBER$ != null )
rank: 775
score: 98.73102361505681
patch: if ( line 1 == null ) { / *
rank: 775
score: 98.55719549005681
patch: if ( intersection != intersection ) { / * /
rank: 775
score: 98.28504180908203
patch: / * ] intersection / / /
rank: 775
score: 97.99898856026786
patch: final List / * / /
rank: 775
score: 97.5196044921875
patch: / / int intersection
rank: 776
score: 99.27708257630815
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 776
score: 99.2600341796875
patch: Line line $NUMBER$ = ( Line ) line 1 . intersection ( ) ;
rank: 776
score: 99.17363947088069
patch: for ( String line $NUMBER$ : line 1 ) {
rank: 776
score: 99.11895282451923
patch: Line intersection 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 776
score: 98.72732204861111
patch: / * / if ( intersection ) {
rank: 776
score: 98.28408377511161
patch: / * list * / /
rank: 776
score: 97.99859619140625
patch: / * break * * /
rank: 776
score: 97.5188496907552
patch: / / boolean * /
rank: 777
score: 99.2770663174716
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) .
rank: 777
score: 99.25909423828125
patch: return intersection ( line 1 , include CaMeL End CaMeL Points ) ;
rank: 777
score: 99.17360432942708
patch: this = line 1 . intersection ( line $NUMBER$ ) ;
rank: 777
score: 99.00487670898437
patch: synchronized ( include CaMeL End CaMeL Points ) {
rank: 777
score: 98.55525346235795
patch: if ( line $NUMBER$ == intersection / * / )
rank: 777
score: 98.28325653076172
patch: / int * / int * /
rank: 777
score: 97.5147705078125
patch: final / / / compute
rank: 778
score: 99.27579554115853
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space (
rank: 778
score: 99.25844504616477
patch: return line $NUMBER$ . intersection ( line 1 ) ;
rank: 778
score: 99.17330169677734
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) == false ) {
rank: 778
score: 99.11376953125
patch: Space line 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 778
score: 98.72330322265626
patch: / * if line $NUMBER$ != null * /
rank: 778
score: 98.55412153764205
patch: if ( intersection / * / line $NUMBER$ / /
rank: 778
score: 98.282470703125
patch: / * / int intersection *
rank: 778
score: 97.99793352399554
patch: int / * * / /
rank: 778
score: 97.51309204101562
patch: / / float / /
rank: 779
score: 99.27546803544207
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . intersection ( line $NUMBER$ ) ;
rank: 779
score: 99.0034512606534
patch: Line line $NUMBER$ = ( Line $NUMBER$ != null )
rank: 779
score: 98.72243430397727
patch: if ( line 1 . length < $NUMBER$ ) {
rank: 779
score: 98.55370483398437
patch: intersection ( line 1 , line $NUMBER$ ) ;
rank: 779
score: 98.28007507324219
patch: / * / } / / compute
rank: 779
score: 97.99705287388393
patch: boolean / * * * /
rank: 779
score: 97.5130106608073
patch: protected / / / /
rank: 780
score: 99.2751697358631
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( sub CaMeL Line ) ) ;
rank: 780
score: 98.72230360243056
patch: while ( line 1 != null ) {
rank: 780
score: 98.55310668945313
patch: if ( intersection . contains ( intersection ) )
rank: 780
score: 98.2800521850586
patch: / * / / / / *
rank: 780
score: 97.99659946986607
patch: if ( intersection ( intersection )
rank: 780
score: 97.51282755533855
patch: Iterator / / / compute
rank: 781
score: 99.27470930232558
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 781
score: 99.2534930889423
patch: v $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 781
score: 99.10160006009616
patch: Line line $NUMBER$ 1 = get CaMeL Line $NUMBER$ ( ) ;
rank: 781
score: 99.00103204900569
patch: final synchronized ( include CaMeL End CaMeL Points ) {
rank: 781
score: 98.55145818536931
patch: if ( line $NUMBER$ == null / * / /
rank: 781
score: 97.99527413504464
patch: synchronized / * * / /
rank: 781
score: 97.51207478841145
patch: boolean / / / /
rank: 782
score: 99.27428306021342
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ) ;
rank: 782
score: 99.17093912760417
patch: data = line 1 . intersection ( line $NUMBER$ ) ;
rank: 782
score: 98.9991455078125
patch: final synchronized ( get CaMeL Hyperplane ( ) ) {
rank: 782
score: 98.72015935724431
patch: if ( line 1 . length < 1 ) {
rank: 782
score: 98.27901785714286
patch: / * / / * compute
rank: 782
score: 97.5106201171875
patch: / / - / /
rank: 783
score: 99.25081089564732
patch: Region line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) ;
rank: 783
score: 99.170654296875
patch: synchronized ( sub CaMeL Line . get CaMeL Hyperplane ( ) ) {
rank: 783
score: 98.99895629882812
patch: final if ( include CaMeL End CaMeL Points )
rank: 783
score: 98.55031516335227
patch: if ( line 1 . intersection ( intersection ) )
rank: 783
score: 97.99156842912946
patch: else { / / * /
rank: 784
score: 99.27310112847222
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Sub CaMeL Space ( ) ) ;
rank: 784
score: 99.25059407552084
patch: return get CaMeL Remaining CaMeL Region ( line 1 , line $NUMBER$ ) ;
rank: 784
score: 99.16997528076172
patch: if ( sub CaMeL Line . get CaMeL Size ( ) == 0 ) {
rank: 784
score: 99.0986328125
patch: line 1 . intersection ( sub CaMeL Line ) ;
rank: 784
score: 98.99835205078125
patch: Line line $NUMBER$ = ( Region ) null ;
rank: 784
score: 98.71901633522727
patch: if ( line 1 != null && intersection ) {
rank: 784
score: 98.27622767857143
patch: / * list / / /
rank: 784
score: 97.99082728794643
patch: / / ? * * /
rank: 784
score: 97.50663248697917
patch: / / ? / /
rank: 785
score: 99.27302689985795
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( sub CaMeL Line ) ) ;
rank: 785
score: 99.25057547433036
patch: return include CaMeL End CaMeL Points . intersection ( line 1 ) ;
rank: 785
score: 99.16965738932292
patch: instance = line 1 . intersection ( line $NUMBER$ ) ;
rank: 785
score: 99.09473673502605
patch: line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 785
score: 98.99822443181819
patch: try { if ( line 1 == null ) {
rank: 785
score: 98.71864624023438
patch: if ( line $NUMBER$ == - 1 ) {
rank: 785
score: 98.55028187144886
patch: if ( intersection != null / * / / )
rank: 785
score: 98.27594866071429
patch: / * / * / line
rank: 785
score: 97.98987688337054
patch: if ( intersection ) line 1
rank: 785
score: 97.5060323079427
patch: / / if / compute
rank: 786
score: 99.27279439786585
patch: final Sub CaMeL Line sub CaMeL Line = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 786
score: 99.16949055989583
patch: / * if ( sub CaMeL Line . get CaMeL Hyperplane ( ) )
rank: 786
score: 98.99580891927083
patch: if ( sub CaMeL Line < 1 )
rank: 786
score: 98.71795099431819
patch: / * if ( line 1 == null ) {
rank: 786
score: 98.54827880859375
patch: int size = intersection . size ( ) ;
rank: 786
score: 98.27239118303571
patch: / ? * / / /
rank: 786
score: 97.9898681640625
patch: intersection / / * * /
rank: 786
score: 97.50149536132812
patch: try / / / /
rank: 787
score: 99.2709073153409
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 787
score: 99.1689208984375
patch: if ( sub CaMeL Line == null && include CaMeL End CaMeL Points )
rank: 787
score: 99.0889004794034
patch: Line line 1 = get CaMeL Line ( ) ;
rank: 787
score: 98.71754039417614
patch: if ( line 1 != null ) { / /
rank: 787
score: 98.54758522727273
patch: throw new Runtime CaMeL Exception ( $STRING$ / * /
rank: 787
score: 98.27232142857143
patch: / * List / / /
rank: 787
score: 97.98905029296876
patch: synchronized / * /
rank: 787
score: 97.5005594889323
patch: / / / / String
rank: 788
score: 99.27088891006098
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . get CaMeL Line ( ) ;
rank: 788
score: 99.2473876953125
patch: / / if ( sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 788
score: 99.08700561523438
patch: Region line $NUMBER$ = get CaMeL Remaining CaMeL Region ( )
rank: 788
score: 98.99075317382812
patch: if ( intersection ( line 1 ) ) {
rank: 788
score: 98.71750710227273
patch: / * / if ( line 1 == null )
rank: 788
score: 98.27214704241071
patch: / * ] intersection intersection compute
rank: 788
score: 97.98792521158855
patch: if / * / }
rank: 788
score: 97.49891153971355
patch: / /
rank: 789
score: 99.27063272165698
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 789
score: 99.16824776785714
patch: if ( line 1 == null || include CaMeL End CaMeL Points )
rank: 789
score: 98.9902099609375
patch: Line line $NUMBER$ = ( Line ) $STRING$ ;
rank: 789
score: 98.71659545898437
patch: if ( line 1 != line 1 ) {
rank: 789
score: 98.54499955610795
patch: if ( line $NUMBER$ != null line $NUMBER$ / /
rank: 789
score: 98.26994977678571
patch: / * ] * / line
rank: 789
score: 97.98641531808036
patch: if ( intersection / / this
rank: 789
score: 97.49812825520833
patch: / / / / return
rank: 790
score: 99.27058522294207
patch: final int include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 790
score: 99.24483235677083
patch: if ( include CaMeL End CaMeL Points ) { return line $NUMBER$ ; }
rank: 790
score: 99.16797814002403
patch: for ( Sub CaMeL Line line $NUMBER$ : line 1 ) {
rank: 790
score: 98.98792860243056
patch: if ( line 1 != 0 ) {
rank: 790
score: 98.71319025213069
patch: if ( line 1 == null || intersection ) {
rank: 790
score: 98.54437866210938
patch: if ( line $NUMBER$ == null ) continue ;
rank: 790
score: 97.98638044084821
patch: / * * / intersection /
rank: 790
score: 97.49800618489583
patch: assert / / / /
rank: 791
score: 98.98567504882813
patch: synchronized ( get CaMeL Hyperplane ( ) ) {
rank: 791
score: 98.71274636008523
patch: if ( line $NUMBER$ . length < $NUMBER$ ) {
rank: 791
score: 98.54407958984375
patch: if ( intersection != intersection / * / )
rank: 791
score: 98.26905168805804
patch: / * / try { line
rank: 791
score: 97.98508707682292
patch: / * / intersection /
rank: 791
score: 97.49733479817708
patch: / / do / /
rank: 792
score: 99.26972888764881
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 792
score: 99.16745229867789
patch: while ( line 1 . intersection ( line $NUMBER$ ) ) {
rank: 792
score: 99.07555135091145
patch: sub CaMeL Line 1 . intersection ( line 1 ) ;
rank: 792
score: 98.9837646484375
patch: Line line $NUMBER$ = ( Line ) line $NUMBER$ ;
rank: 792
score: 98.71125932173295
patch: if ( line 1 / $NUMBER$ < intersection ) {
rank: 792
score: 98.54356689453125
patch: if ( intersection != null / * / )
rank: 792
score: 98.2677001953125
patch: / * ] } / /
rank: 792
score: 97.98488943917411
patch: / * / intersection / /
rank: 792
score: 97.49617513020833
patch: for / / / /
rank: 793
score: 99.26967075892857
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ; }
rank: 793
score: 99.07486979166667
patch: line 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 793
score: 98.9828369140625
patch: if ( sub CaMeL Line <= 0 ) {
rank: 793
score: 98.71046031605114
patch: if ( line 1 . length < 0 ) {
rank: 793
score: 98.54295765269886
patch: if ( line 1 == intersection / * / )
rank: 793
score: 98.26700439453126
patch: int * * /
rank: 793
score: 97.4948018391927
patch: / / / / out
rank: 794
score: 99.26918658088235
patch: int include CaMeL End CaMeL Points = line $NUMBER$ . get CaMeL Hyperplane ( ) ;
rank: 794
score: 99.16666085379464
patch: return intersection ( line 1 . get CaMeL Hyperplane ( ) ) ;
rank: 794
score: 98.9826904296875
patch: if ( sub CaMeL Line < 1 ) {
rank: 794
score: 98.7074307528409
patch: if ( line $NUMBER$ != null ) { / *
rank: 794
score: 98.54293387276786
patch: assert line $NUMBER$ != null ;
rank: 794
score: 98.26511056082589
patch: / * / / / int
rank: 794
score: 97.98243931361607
patch: List / * * * /
rank: 794
score: 97.49449666341145
patch: this / / / compute
rank: 795
score: 99.26913824314025
patch: int include CaMeL End CaMeL Points $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) ) ;
rank: 795
score: 99.16657257080078
patch: if ( sub CaMeL Line . get CaMeL Length ( ) > 1 ) {
rank: 795
score: 99.06924438476562
patch: Line line $NUMBER$ . intersection ( sub CaMeL Line ) ;
rank: 795
score: 98.7070556640625
patch: if ( line 1 . length > 0 )
rank: 795
score: 98.5406494140625
patch: if ( intersection ( line 1 , intersection ) )
rank: 795
score: 98.26361083984375
patch: / ? / int * /
rank: 795
score: 97.98192487444196
patch: try { if / * /
rank: 795
score: 97.49448649088542
patch: / final / / /
rank: 796
score: 99.26892671130952
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ,
rank: 796
score: 99.16584777832031
patch: if ( line 1 . to CaMeL Sub CaMeL Space ( ) == ) {
rank: 796
score: 98.9801358309659
patch: if ( include CaMeL End CaMeL Points && false )
rank: 796
score: 98.7057217684659
patch: while ( line 1 . length > 0 ) {
rank: 796
score: 98.26250348772321
patch: / * * ? / /
rank: 796
score: 97.9817606608073
patch: final List * * /
rank: 796
score: 97.48822021484375
patch: / int / * compute
rank: 797
score: 99.26888020833333
patch: boolean include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space (
rank: 797
score: 99.1650390625
patch: return sub CaMeL Line . intersection ( sub CaMeL Line ) ;
rank: 797
score: 98.97867838541667
patch: if ( sub CaMeL Line <= 0 )
rank: 797
score: 98.7030029296875
patch: if ( line 1 / $NUMBER$ != 0 ) {
rank: 797
score: 98.53965065696023
patch: / / / / / / / / * /
rank: 797
score: 98.26082938058036
patch: / * list * * /
rank: 797
score: 97.9813232421875
patch: this / / * / /
rank: 797
score: 97.48724365234375
patch: int / * / /
rank: 798
score: 99.26859809027778
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . include CaMeL End CaMeL Points ( ) ) ;
rank: 798
score: 98.97825792100694
patch: if ( intersection ( line $NUMBER$ ) )
rank: 798
score: 98.6986971768466
patch: if ( line 1 . length <= 0 ) {
rank: 798
score: 98.53959517045455
patch: if ( line 1 == null / * / )
rank: 798
score: 98.2578837076823
patch: / ? * / /
rank: 798
score: 97.98061116536458
patch: Iterator * / * /
rank: 798
score: 97.4868672688802
patch: / / / double /
rank: 799
score: 99.16372445913461
patch: return ( line 1 . intersection ( line 1 ) ) ;
rank: 799
score: 98.9781005859375
patch: super . intersection ( sub CaMeL Line ) ;
rank: 799
score: 98.69868607954545
patch: Enumeration intersection = line 1 . iterator ( ) ;
rank: 799
score: 98.5393399325284
patch: intersection ( intersection ( line $NUMBER$ ) / * /
rank: 799
score: 98.25108119419643
patch: / / char * / /
rank: 799
score: 97.98041643415179
patch: Iterator * * * / }
rank: 799
score: 97.48612467447917
patch: / / int intersection *
rank: 800
score: 99.26832217261905
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) ;
rank: 800
score: 99.22902268629808
patch: return intersection ( sub CaMeL Line , sub CaMeL Line ) ;
rank: 800
score: 99.16342163085938
patch: if ( this . include CaMeL End CaMeL Points ) { return line 1 ;
rank: 800
score: 99.06224568684895
patch: Location line $NUMBER$ = get CaMeL Line 1 ( ) ;
rank: 800
score: 98.97353515625
patch: Line line $NUMBER$ = ( Line ) 0 ;
rank: 800
score: 98.6964111328125
patch: if ( line 1 == null ) / * /
rank: 800
score: 98.53880726207386
patch: if ( intersection . length / $NUMBER$ == 0 )
rank: 800
score: 98.24611118861607
patch: / * ] char * /
rank: 800
score: 97.98025948660714
patch: / * * / { /
rank: 800
score: 97.4846700032552
patch: / / / int line
rank: 801
score: 99.26786665482955
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 ) ;
rank: 801
score: 99.228759765625
patch: Line line $NUMBER$ = ( Line ) check CaMeL Point ( ) ;
rank: 801
score: 99.16273600260416
patch: if ( include CaMeL End CaMeL Points || line 1 == null ) {
rank: 801
score: 98.97141335227273
patch: Line line $NUMBER$ = ( line 1 == null )
rank: 801
score: 98.53827459161931
patch: if ( intersection == intersection / * / ) /
rank: 801
score: 98.24558512369792
patch: / * / } /
rank: 801
score: 97.97849818638393
patch: / * / int intersection }
rank: 801
score: 97.4839375813802
patch: intersection / / / try
rank: 802
score: 99.26756649925595
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) )
rank: 802
score: 99.2264873798077
patch: loc = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 802
score: 99.162353515625
patch: for ( Sub CaMeL Line line 1 : line 1 ) {
rank: 802
score: 98.96946022727273
patch: int line $NUMBER$ = intersection ( line $NUMBER$ ) ;
rank: 802
score: 98.53574440696023
patch: Set < String > intersection = new / * /
rank: 802
score: 98.2449951171875
patch: / / list / / /
rank: 802
score: 97.97794015066964
patch: final / * * / }
rank: 802
score: 97.48388671875
patch: final / / /
rank: 803
score: 99.26755541424419
patch: int include CaMeL End CaMeL Points = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 803
score: 99.22569861778847
patch: loc 1 = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 803
score: 99.160888671875
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( ) == this )
rank: 803
score: 98.96669311523438
patch: if ( line $NUMBER$ instanceof Sub CaMeL Line )
rank: 803
score: 98.6933260830966
patch: if ( line 1 . intersection ( line $NUMBER$ )
rank: 803
score: 98.242431640625
patch: / * / int intersection ;
rank: 803
score: 97.9759521484375
patch: / / int * / }
rank: 803
score: 97.47784423828125
patch: / / / / reset
rank: 804
score: 99.26568177688954
patch: int include CaMeL End CaMeL Points = line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 804
score: 99.2226092998798
patch: loc 1 = line 1 . get CaMeL Hyperplane ( ) ;
rank: 804
score: 99.16057477678571
patch: for ( Sub CaMeL Line line 1 : sub CaMeL Line ) {
rank: 804
score: 98.9647549715909
patch: if ( include CaMeL End CaMeL Points ) { ;
rank: 804
score: 98.69293212890625
patch: / * / int intersection = - 1 ;
rank: 804
score: 98.53397216796876
patch: if ( intersection line $NUMBER$ == null ) {
rank: 804
score: 98.24051339285714
patch: / * * / / compute
rank: 804
score: 97.97574869791667
patch: / * * ? /
rank: 804
score: 97.47589111328125
patch: / / / List /
rank: 805
score: 99.26492096656976
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ,
rank: 805
score: 99.16008649553571
patch: for ( Sub CaMeL Line line $NUMBER$ : sub CaMeL Line ) {
rank: 805
score: 99.0501708984375
patch: Line line 1 1 = get CaMeL Hyperplane ( ) ;
rank: 805
score: 98.96382279829545
patch: try { if ( line $NUMBER$ == null ) {
rank: 805
score: 98.68923117897727
patch: if ( line $NUMBER$ . length < 1 ) {
rank: 805
score: 98.5270263671875
patch: if ( line $NUMBER$ == null ) break ;
rank: 805
score: 98.2391357421875
patch: / * char * / /
rank: 805
score: 97.4752909342448
patch: infinite / / / try
rank: 806
score: 99.26412527901786
patch: boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 806
score: 99.15972900390625
patch: if ( line 1 . intersection ( sub CaMeL Line ) ) {
rank: 806
score: 99.05015055338542
patch: Line line 1 = get CaMeL Remaining CaMeL Region ( )
rank: 806
score: 98.9595614346591
patch: final while ( include CaMeL End CaMeL Points ) {
rank: 806
score: 98.68695623224431
patch: if ( line 1 instanceof Line line 1 ) {
rank: 806
score: 98.52344970703125
patch: if ( intersection == null ) return null ;
rank: 806
score: 97.9741923014323
patch: / / { * /
rank: 806
score: 97.47402954101562
patch: / / / double
rank: 807
score: 99.26398259943181
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . get CaMeL Sub CaMeL Space ( ) ) ;
rank: 807
score: 99.2203369140625
patch: String line $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 807
score: 99.15941162109375
patch: return line 1 . intersection ( this ) ;
rank: 807
score: 98.9579190340909
patch: if ( sub CaMeL Line - $NUMBER$ == null )
rank: 807
score: 98.68568004261364
patch: if ( line 1 instanceof Line line $NUMBER$ ) {
rank: 807
score: 98.23313685825893
patch: / * while / / /
rank: 807
score: 97.97410365513393
patch: Iterator / * * * /
rank: 807
score: 97.47317504882812
patch: double / / / /
rank: 808
score: 99.26390491832386
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 808
score: 99.21800818810097
patch: line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) ;
rank: 808
score: 99.15911865234375
patch: return line 1 != null ? line 1 : null ;
rank: 808
score: 99.04645330255681
patch: Line line $NUMBER$ 1 = ( Line ) null ;
rank: 808
score: 98.95709228515625
patch: try { if ( line 1 != null )
rank: 808
score: 98.67767333984375
patch: final int intersection = - 1 ;
rank: 808
score: 98.51644897460938
patch: if ( line 1 / $NUMBER$ == 0 )
rank: 808
score: 98.23237827845982
patch: / * * out * /
rank: 808
score: 97.9730712890625
patch: } / * /
rank: 808
score: 97.4710693359375
patch: infinite / * /
rank: 809
score: 99.21743774414062
patch: return intersection ( sub CaMeL Line , line $NUMBER$ ) ;
rank: 809
score: 98.95369720458984
patch: if ( line $NUMBER$ != 0 )
rank: 809
score: 98.66046820746527
patch: if ( line 1 != intersection ) {
rank: 809
score: 98.22779192243304
patch: int * / int * /
rank: 809
score: 97.97283063616071
patch: / * / while / /
rank: 809
score: 97.47092692057292
patch: / / / / throw
rank: 810
score: 99.26190740411931
patch: final boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ) ;
rank: 810
score: 99.21738106863839
patch: Line line $NUMBER$ = ( Line ) this . sub CaMeL Line ;
rank: 810
score: 99.04276529947917
patch: Line line $NUMBER$ 1 = ( Line ) line 1 ;
rank: 810
score: 98.95344848632813
patch: if ( intersection ( sub CaMeL Line ) )
rank: 810
score: 98.6600341796875
patch: if ( line $NUMBER$ != - 1 ) {
rank: 810
score: 98.50983344184027
patch: assert line $NUMBER$ == null : $STRING$ ;
rank: 810
score: 98.22775704520089
patch: / * / ? / /
rank: 810
score: 97.96977887834821
patch: / * * in * /
rank: 810
score: 97.470703125
patch: long / / / /
rank: 811
score: 99.21695963541667
patch: return intersection ( sub CaMeL Line , line 1 ) ;
rank: 811
score: 99.04273478190105
patch: Region line $NUMBER$ = get CaMeL Line 1 ( ) ;
rank: 811
score: 98.95201958550348
patch: if ( sub CaMeL Line < $NUMBER$ )
rank: 811
score: 98.65875854492188
patch: / * if ( intersection != null ) {
rank: 811
score: 98.50816650390625
patch: if ( intersection != null ) / * /
rank: 811
score: 98.2275390625
patch: / * / * / int
rank: 811
score: 97.96764264787946
patch: if ( intersection / break )
rank: 811
score: 97.46652221679688
patch: / / int intersection /
rank: 812
score: 99.2610714934593
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( ) ) ;
rank: 812
score: 99.21684047154018
patch: return ( Line ) line 1 . intersection ( line 1 ) ;
rank: 812
score: 99.15559605189732
patch: / * if ( this . include CaMeL End CaMeL Points ) {
rank: 812
score: 98.95111083984375
patch: if ( line $NUMBER$ != new Line ) {
rank: 812
score: 98.65853271484374
patch: if ( line 1 . length == 0 )
rank: 812
score: 97.96754964192708
patch: / * break * /
rank: 812
score: 97.4646708170573
patch: throw / / / compute
rank: 813
score: 99.26054831112133
patch: String line $NUMBER$ = ( ) sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 813
score: 98.950439453125
patch: try { if ( line $NUMBER$ != null )
rank: 813
score: 98.6470947265625
patch: if ( line 1 == null intersection ) {
rank: 813
score: 98.22710309709821
patch: / * / int / compute
rank: 813
score: 97.9637451171875
patch: synchronized / * * /
rank: 813
score: 97.46133422851562
patch: Iterator / * / /
rank: 814
score: 99.0377909342448
patch: Line line $NUMBER$ 1 . intersection ( line $NUMBER$ ) ;
rank: 814
score: 98.9475830078125
patch: if ( line 1 instanceof Sub CaMeL Line )
rank: 814
score: 98.64696044921875
patch: if ( line 1 == null ) continue ;
rank: 814
score: 98.50176391601562
patch: if ( line $NUMBER$ / $NUMBER$ / $NUMBER$ )
rank: 814
score: 98.222412109375
patch: / * / int intersection /
rank: 814
score: 97.96224539620536
patch: synchronized / * * * /
rank: 814
score: 97.45939127604167
patch: / / out / /
rank: 815
score: 98.94661865234374
patch: Line line 1 = ( Line ) null ;
rank: 815
score: 98.64682006835938
patch: switch ( line 1 ) { case 1 :
rank: 815
score: 98.49747924804687
patch: if ( line $NUMBER$ / $NUMBER$ != 0 )
rank: 815
score: 98.22041538783482
patch: / * out * / /
rank: 815
score: 97.96095784505208
patch: / * out * /
rank: 815
score: 97.45782470703125
patch: / int / * /
rank: 816
score: 99.20830426897321
patch: Line line $NUMBER$ = line 1 . intersection ( new Line ) ;
rank: 816
score: 99.03531901041667
patch: Region line $NUMBER$ = ( Line ) sub CaMeL Line ;
rank: 816
score: 98.94614479758523
patch: if ( sub CaMeL Line $NUMBER$ != 0 ) {
rank: 816
score: 98.64365844726562
patch: / * if ( intersection == null ) {
rank: 816
score: 98.21815708705357
patch: / / list * / /
rank: 816
score: 97.96085030691964
patch: for / * / * /
rank: 816
score: 97.45616658528645
patch: / / int * compute
rank: 817
score: 99.25933159722223
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Remaining CaMeL Region ( ) ) ;
rank: 817
score: 99.20793805803571
patch: String line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) ;
rank: 817
score: 98.9446688565341
patch: } if ( include CaMeL End CaMeL Points ) {
rank: 817
score: 98.64346313476562
patch: if ( line $NUMBER$ <= - 1 ) {
rank: 817
score: 98.49332275390626
patch: intersection ( intersection ( line $NUMBER$ ) ) ;
rank: 817
score: 98.21779087611607
patch: / * finally / / /
rank: 817
score: 97.96049281529018
patch: if ( list != null )
rank: 817
score: 97.45606486002605
patch: * / / / compute
rank: 818
score: 99.25904038373162
patch: Line line $NUMBER$ = sub CaMeL Line . check CaMeL Point ( line 1 ) ;
rank: 818
score: 99.01690118963069
patch: / * while ( include CaMeL End CaMeL Points )
rank: 818
score: 98.94395862926136
patch: if ( sub CaMeL Line > - $NUMBER$ ) {
rank: 818
score: 98.6427490234375
patch: switch ( line 1 ) { case 0 :
rank: 818
score: 98.49069213867188
patch: if ( line $NUMBER$ / $NUMBER$ . 0 )
rank: 818
score: 98.21306501116071
patch: / * char * * /
rank: 818
score: 97.95833042689732
patch: int * * * / }
rank: 818
score: 97.45399169921875
patch: System / / /
rank: 819
score: 99.25890261627907
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Length ( ) ) ;
rank: 819
score: 99.150634765625
patch: / * return line 1 . intersection ( line 1 ) ;
rank: 819
score: 98.4891845703125
patch: if ( line 1 / $NUMBER$ / $NUMBER$ )
rank: 819
score: 98.20891462053571
patch: int * * int * /
rank: 819
score: 97.95749337332589
patch: / / * in * /
rank: 819
score: 97.4530537923177
patch: / / / / Math
rank: 820
score: 99.0113192471591
patch: Object line 1 = get CaMeL Hyperplane ( ) ;
rank: 820
score: 98.9416015625
patch: if ( sub CaMeL Line < $NUMBER$ ) {
rank: 820
score: 98.64016723632812
patch: if ( line 1 == null line $NUMBER$ )
rank: 820
score: 98.2076416015625
patch: / / float / / /
rank: 820
score: 97.95706612723214
patch: / * * int intersection /
rank: 820
score: 97.45204671223958
patch: int / * / line
rank: 821
score: 99.25764604048295
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) ;
rank: 821
score: 99.14981515066964
patch: for ( Line line 1 : get CaMeL Hyperplane ( ) ) {
rank: 821
score: 99.00634765625
patch: Line line $NUMBER$ 1 = ( Line ) false ;
rank: 821
score: 98.94047241210937
patch: if ( line $NUMBER$ != null ) break ;
rank: 821
score: 98.63445434570312
patch: while ( line 1 == - 1 ) {
rank: 821
score: 98.20523507254464
patch: / * / / * *
rank: 821
score: 97.95488630022321
patch: for / * * * /
rank: 821
score: 97.45054117838542
patch: else / / / /
rank: 822
score: 99.2034912109375
patch: Line line $NUMBER$ = get CaMeL Hyperplane ( ) ; / * /
rank: 822
score: 99.14889761117789
patch: / * / line 1 . intersection ( line $NUMBER$ ) ;
rank: 822
score: 98.93032836914062
patch: try { if ( line 1 == null )
rank: 822
score: 98.6294921875
patch: Enumeration intersection = intersection . iterator ( ) ;
rank: 822
score: 98.20421346028645
patch: / * int * /
rank: 822
score: 97.9542236328125
patch: if / * * { /
rank: 822
score: 97.44859822591145
patch: / boolean / / compute
rank: 823
score: 99.14654541015625
patch: if ( sub CaMeL Line . intersection ( line 1 ) ) {
rank: 823
score: 99.00163130326705
patch: sub CaMeL Line . intersection ( line 1 ) ;
rank: 823
score: 98.92997436523437
patch: line $NUMBER$ . get CaMeL Hyperplane ( ) ;
rank: 823
score: 98.48208279079861
patch: assert line $NUMBER$ != null / * /
rank: 823
score: 98.20400565011161
patch: / * * List * /
rank: 823
score: 97.9532470703125
patch: / / if * / /
rank: 823
score: 97.44678751627605
patch: / / / / max
rank: 824
score: 99.2564952761628
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Hyperplane ( ) ) ;
rank: 824
score: 99.20229270241477
patch: return intersection ( line 1 , line 1 ) ;
rank: 824
score: 99.14529184194711
patch: if ( line 1 == null ) return sub CaMeL Line ;
rank: 824
score: 98.9972811612216
patch: line $NUMBER$ 1 . intersection ( line $NUMBER$ ) ;
rank: 824
score: 98.92881774902344
patch: if ( line 1 != 0 )
rank: 824
score: 98.62765842013889
patch: final int intersection = intersection - 1 ;
rank: 824
score: 98.4806396484375
patch: if ( intersection / * intersection * / /
rank: 824
score: 98.20209612165179
patch: / / intersection / / /
rank: 824
score: 97.4460957845052
patch: / / / / public
rank: 825
score: 99.25588208575581
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Size ( ) ) ;
rank: 825
score: 99.14510091145833
patch: res = line 1 . intersection ( line $NUMBER$ ) ;
rank: 825
score: 98.62538655598958
patch: if ( line 1 == intersection ) {
rank: 825
score: 98.47769775390626
patch: / * / if ( intersection == null )
rank: 825
score: 97.95271519252232
patch: this . / * * /
rank: 825
score: 97.44376627604167
patch: / / / case /
rank: 826
score: 99.19771321614583
patch: return intersection ( line 1 , sub CaMeL Line ) ;
rank: 826
score: 99.14499136117789
patch: if ( include CaMeL End CaMeL Points ) return line 1 ;
rank: 826
score: 98.9275146484375
patch: if ( sub CaMeL Line < - $NUMBER$ )
rank: 826
score: 98.62315673828125
patch: if ( line 1 != null intersection ) {
rank: 826
score: 98.19943673270089
patch: / int * / } /
rank: 826
score: 97.95139857700893
patch: if ( intersection ) { this
rank: 826
score: 97.44101969401042
patch: / final / / compute
rank: 827
score: 99.2547607421875
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ; / ?
rank: 827
score: 99.192626953125
patch: return intersection ( line $NUMBER$ , line $NUMBER$ ) ;
rank: 827
score: 98.98747114701705
patch: int line $NUMBER$ = get CaMeL Line ( ) ;
rank: 827
score: 98.92494710286458
patch: if ( line 1 == 0 ) {
rank: 827
score: 98.62041473388672
patch: if ( line 1 instanceof Line )
rank: 827
score: 98.19937569754464
patch: / * ? int * /
rank: 827
score: 97.95113699776786
patch: if / * * * compute
rank: 827
score: 97.440673828125
patch: { / / compute
rank: 828
score: 99.19239220252403
patch: line 1 = line 1 . intersection ( line $NUMBER$ ) ;
rank: 828
score: 99.14455159505208
patch: queue = line 1 . intersection ( line $NUMBER$ ) ;
rank: 828
score: 98.92357177734375
patch: Line line $NUMBER$ = ( Region ) false ;
rank: 828
score: 98.61844889322917
patch: if ( line 1 == - 1 )
rank: 828
score: 98.19803292410714
patch: int * * / / /
rank: 828
score: 97.43999633789062
patch: Iterator / / /
rank: 829
score: 99.25359552556819
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , ) ;
rank: 829
score: 99.19132173978366
patch: / * * * * * * * * * * /
rank: 829
score: 99.14305768694196
patch: / * if ( line 1 . intersection ( line $NUMBER$ ) )
rank: 829
score: 98.92332153320312
patch: if ( line 1 != new Line ) {
rank: 829
score: 98.61728515625
patch: if ( line 1 instanceof line 1 ) {
rank: 829
score: 98.47532958984375
patch: if ( intersection && line $NUMBER$ == null )
rank: 829
score: 98.19628034319196
patch: / int * / * /
rank: 829
score: 97.94841657366071
patch: } / * * * /
rank: 829
score: 97.43731689453125
patch: infinite / * / compute
rank: 830
score: 99.25320095486111
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , ) ;
rank: 830
score: 99.18971604567308
patch: line 1 = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 830
score: 99.14276123046875
patch: / * else return line 1 . intersection ( line $NUMBER$ ) ;
rank: 830
score: 98.97988059303977
patch: Line line $NUMBER$ = get CaMeL Line 1 ( )
rank: 830
score: 98.92127075195313
patch: if ( get CaMeL Hyperplane ( ) ) {
rank: 830
score: 98.61651611328125
patch: if ( line 1 instanceof line $NUMBER$ ) {
rank: 830
score: 98.47211303710938
patch: / * / if ( intersection != null )
rank: 830
score: 98.19619315011161
patch: / / * int * /
rank: 830
score: 97.43637084960938
patch: / / / void /
rank: 831
score: 99.25252821180555
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( 0 ) ;
rank: 831
score: 99.14197794596355
patch: for ( Line line 1 : sub CaMeL Line ) {
rank: 831
score: 98.9784268465909
patch: Object line $NUMBER$ = get CaMeL Line ( ) ;
rank: 831
score: 98.91881103515625
patch: if ( line 1 == null ) break ;
rank: 831
score: 98.605517578125
patch: Iterator iterator = list . iterator ( ) ;
rank: 831
score: 98.47086791992187
patch: if ( intersection ( line $NUMBER$ ) / *
rank: 831
score: 97.94518025716145
patch: / * / else /
rank: 831
score: 97.43410237630208
patch: / / / / count
rank: 832
score: 99.25200861150569
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( line $NUMBER$ . get CaMeL Hyperplane ( ) ) ;
rank: 832
score: 98.97740589488636
patch: Location line $NUMBER$ = get CaMeL Line ( ) ;
rank: 832
score: 98.91731770833333
patch: while ( include CaMeL End CaMeL Points )
rank: 832
score: 98.46611938476562
patch: if ( line $NUMBER$ / $NUMBER$ <= 0 )
rank: 832
score: 98.19478149414063
patch: / int * /
rank: 832
score: 97.94505092075893
patch: if / * int * /
rank: 832
score: 97.43345133463542
patch: } / int / /
rank: 833
score: 99.25174696180555
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( line $NUMBER$ ) ;
rank: 833
score: 99.14087853064903
patch: for ( final Line line $NUMBER$ : sub CaMeL Line ) {
rank: 833
score: 98.91547987196181
patch: if ( line $NUMBER$ == 0 ) {
rank: 833
score: 98.60261840820313
patch: if ( line 1 < - 1 ) {
rank: 833
score: 98.19374302455357
patch: int * * / * /
rank: 833
score: 97.94464111328125
patch: if / * * ?
rank: 833
score: 97.43174235026042
patch: / / case / /
rank: 834
score: 99.25058815696023
patch: Line line $NUMBER$ = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( sub CaMeL Line . to CaMeL Sub CaMeL Space ( ) ) ) ;
rank: 834
score: 99.14036051432292
patch: graphics = line 1 . intersection ( line $NUMBER$ ) ;
rank: 834
score: 98.97620239257813
patch: if ( line $NUMBER$ != sub CaMeL Line )
rank: 834
score: 98.60174560546875
patch: if ( line 1 >= - 1 ) {
rank: 834
score: 98.46212158203124
patch: if ( intersection == intersection / * / /
rank: 834
score: 98.19260951450893
patch: * * * / / /
rank: 834
score: 97.94328962053571
patch: * * * * * /
rank: 834
score: 97.43075561523438
patch: / / / / for
rank: 835
score: 99.18375651041667
patch: if ( sub CaMeL Line . get CaMeL Hyperplane ( )
rank: 835
score: 99.13600667317708
patch: buf = line 1 . intersection ( line $NUMBER$ ) ;
rank: 835
score: 98.97548828125
patch: if ( sub CaMeL Line > null ) {
rank: 835
score: 98.91409912109376
patch: if ( line 1 != null ) break ;
rank: 835
score: 98.60023803710938
patch: / * if line 1 != null * /
rank: 835
score: 98.46130981445313
patch: if ( intersection line $NUMBER$ != null ) {
rank: 835
score: 98.19210379464286
patch: / * * list / /
rank: 835
score: 97.9414774576823
patch: boolean / * * /
rank: 835
score: 97.43039957682292
patch: public / * / /
rank: 836
score: 99.24992231889205
patch: final boolean include CaMeL End CaMeL Points = get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) ) ) ;
rank: 836
score: 99.180419921875
patch: loc 1 = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 836
score: 99.1353047688802
patch: sash = line 1 . intersection ( line $NUMBER$ ) ;
rank: 836
score: 98.90986633300781
patch: Line line $NUMBER$ = ( Line )
rank: 836
score: 98.6001708984375
patch: / * / final int intersection = intersection ;
rank: 836
score: 98.460595703125
patch: if ( intersection == intersection / * / )
rank: 836
score: 98.19065348307292
patch: / int * / /
rank: 836
score: 97.94110107421875
patch: int * * * * /
rank: 836
score: 97.42691040039062
patch: int / / / System
rank: 837
score: 98.97284545898438
patch: if ( sub CaMeL Line < null ) {
rank: 837
score: 98.90943145751953
patch: if ( line 1 == 0 )
rank: 837
score: 98.59963989257812
patch: while ( line 1 != - 1 ) {
rank: 837
score: 97.94057791573661
patch: if ( intersection / / /
rank: 837
score: 97.42601521809895
patch: / / / char /
rank: 838
score: 99.13528006417411
patch: else line $NUMBER$ = ( Line ) get CaMeL Hyperplane ( ) ;
rank: 838
score: 98.97249145507813
patch: Line line $NUMBER$ 1 = sub CaMeL Line ;
rank: 838
score: 98.90906524658203
patch: synchronized ( sub CaMeL Line ) {
rank: 838
score: 98.18980189732143
patch: / * * / / int
rank: 838
score: 97.93919881184895
patch: / / intersection * /
rank: 838
score: 97.4241434733073
patch: int / / / int
rank: 839
score: 99.24932725694444
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , 0 ) ;
rank: 839
score: 99.17489858774039
patch: line $NUMBER$ = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 839
score: 99.13521634615384
patch: else { return line 1 . intersection ( line $NUMBER$ ) ;
rank: 839
score: 98.96986694335938
patch: Line line $NUMBER$ = new Line ( ) ;
rank: 839
score: 98.59768337673611
patch: if ( line 1 != - 1 )
rank: 839
score: 98.45707397460937
patch: if ( intersection / * intersection < 0 )
rank: 839
score: 98.18862915039062
patch: int * * / /
rank: 839
score: 97.42140706380208
patch: / log / / /
rank: 840
score: 99.17307692307692
patch: loc $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 840
score: 99.13371138139205
patch: return line 1 . get CaMeL Hyperplane ( ) ;
rank: 840
score: 98.96971546519886
patch: Line line 1 . intersection ( line $NUMBER$ ) ;
rank: 840
score: 98.90714111328126
patch: if ( sub CaMeL Line > - $NUMBER$ )
rank: 840
score: 97.93848673502605
patch: / * / / }
rank: 840
score: 97.41921997070312
patch: / / / / Vector
rank: 841
score: 99.16871056189903
patch: return ( line $NUMBER$ . intersection ( line $NUMBER$ ) ) ;
rank: 841
score: 99.13347516741071
patch: if ( include CaMeL End CaMeL Points ) { return line $NUMBER$ ;
rank: 841
score: 98.9670743075284
patch: if ( line $NUMBER$ != sub CaMeL Line ) {
rank: 841
score: 98.90559217664931
patch: if ( intersection ( line 1 ) )
rank: 841
score: 98.59420166015624
patch: if ( line $NUMBER$ . length > 0 )
rank: 841
score: 98.45459662543402
patch: if ( intersection . length == 0 )
rank: 841
score: 97.93833414713542
patch: int * * * /
rank: 841
score: 97.41879272460938
patch: / / System / compute
rank: 842
score: 99.24739213423295
patch: int include CaMeL End CaMeL Points = line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( 0 ) ;
rank: 842
score: 98.90196990966797
patch: if ( line $NUMBER$ == 0 )
rank: 842
score: 98.59002007378473
patch: if ( line 1 instanceof intersection ) {
rank: 842
score: 98.18559919084821
patch: / * / else { /
rank: 842
score: 97.93619791666667
patch: / / out * /
rank: 842
score: 97.4161376953125
patch: / / / / to
rank: 843
score: 99.24702690972222
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ) ;
rank: 843
score: 99.16597493489583
patch: check CaMeL Point ( line 1 , line $NUMBER$ ) ;
rank: 843
score: 99.13202776227679
patch: return line 1 . intersection ( intersection ( line $NUMBER$ ) ) ;
rank: 843
score: 98.58936903211806
patch: while ( line 1 instanceof Line ) {
rank: 843
score: 98.45404730902777
patch: if ( intersection line $NUMBER$ == null )
rank: 843
score: 98.18501499720982
patch: / * List / * /
rank: 843
score: 97.93552943638393
patch: if ( intersection / * *
rank: 843
score: 97.41578979492188
patch: / / int /
rank: 844
score: 99.24640842013889
patch: int include CaMeL End CaMeL Points = sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , ) ;
rank: 844
score: 99.16170560396634
patch: if ( include CaMeL End CaMeL Points ) { / * /
rank: 844
score: 99.13182576497395
patch: stmt = line 1 . intersection ( line $NUMBER$ ) ;
rank: 844
score: 98.96491033380681
patch: line 1 1 . intersection ( line $NUMBER$ ) ;
rank: 844
score: 98.89571533203124
patch: if ( line 1 == new Line ) {
rank: 844
score: 98.45248074001736
patch: if ( intersection == null intersection ) {
rank: 844
score: 97.93423025948661
patch: if / * / intersection /
rank: 844
score: 97.41543579101562
patch: / / / / case
rank: 845
score: 99.2458984375
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line $NUMBER$ . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . get CaMeL Sub CaMeL Space ( ) ) ;
rank: 845
score: 99.13063401442308
patch: get CaMeL Hyperplane ( ) . add ( line 1 ) ;
rank: 845
score: 98.895166015625
patch: try { if ( line $NUMBER$ == null )
rank: 845
score: 98.58778686523438
patch: if ( line 1 == null line 1 )
rank: 845
score: 98.45113118489583
patch: if ( intersection / * / ) /
rank: 845
score: 97.41536458333333
patch: / try / / /
rank: 846
score: 99.15448467548077
patch: Line line $NUMBER$ = new Line ( sub CaMeL Line ) ;
rank: 846
score: 99.13062201605902
patch: super . intersection ( line $NUMBER$ ) ;
rank: 846
score: 98.89024353027344
patch: Line line $NUMBER$ = ( Line 1
rank: 846
score: 98.58565266927083
patch: while ( line 1 == null ) {
rank: 846
score: 98.44835205078125
patch: if ( intersection / * line $NUMBER$ / )
rank: 846
score: 98.18294852120536
patch: / * / int / *
rank: 846
score: 97.93341064453125
patch: infinite * * /
rank: 847
score: 99.24516157670455
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) , sub CaMeL Line . get CaMeL Remaining CaMeL Region ( ) . to CaMeL Sub CaMeL Space ( ) ,
rank: 847
score: 99.13039926382211
patch: / * if ( ! include CaMeL End CaMeL Points ) {
rank: 847
score: 98.88955349392361
patch: return intersection ( sub CaMeL Line ) ;
rank: 847
score: 98.58504638671874
patch: / * / intersection = new line 1 ;
rank: 847
score: 98.44810180664062
patch: if ( intersection . intersection ( intersection ) )
rank: 847
score: 98.17863246372768
patch: / * / int / line
rank: 847
score: 97.93308512369792
patch: Iterator * * * /
rank: 847
score: 97.41001383463542
patch: return / { / /
rank: 848
score: 99.24510609019886
patch: get CaMeL Remaining CaMeL Region ( ) . check CaMeL Point ( line 1 . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . to CaMeL Sub CaMeL Space ( ) . get CaMeL Remaining CaMeL
rank: 848
score: 98.88887939453124
patch: if ( line $NUMBER$ == new Line ) {
rank: 848
score: 98.58284912109374
patch: if ( line 1 != line $NUMBER$ ) {
rank: 848
score: 98.17758614676339
patch: / * / else { line
rank: 848
score: 97.93142700195312
patch: / * in * /
rank: 848
score: 97.40997314453125
patch: intersection / / } /
rank: 849
score: 99.24475860595703
patch: Line line 1 = line 1 . check CaMeL Point ( line $NUMBER$ ) ;
rank: 849
score: 99.1509501139323
patch: Line line $NUMBER$ = line 1 . intersection ( ) ;
rank: 849
score: 99.12686157226562
patch: client = line 1 . intersection ( line $NUMBER$ ) ;
rank: 849
score: 98.95416814630681
patch: String line $NUMBER$ = get CaMeL Line ( ) ;
rank: 849
score: 98.88839111328124
patch: Line line $NUMBER$ = ( Line ) 1 ;
rank: 849
score: 98.17745535714286
patch: / * / / / else
rank: 849
score: 97.9305419921875
patch: if ( intersection ) { false
rank: 849
score: 97.4063232421875
patch: this / / /
rank: 850
score: 99.14986165364583
patch: loc 1 = get CaMeL Remaining CaMeL Region ( ) ;
rank: 850
score: 99.12603759765625
patch: this . line 1 . intersection ( line $NUMBER$ ) ;
rank: 850
score: 98.95210404829545
patch: String line 1 = get CaMeL Hyperplane ( ) ;
rank: 850
score: 98.44351196289062
patch: if ( intersection / * line $NUMBER$ / /
rank: 850
score: 98.17495291573661
patch: / * System . / /
rank: 850
score: 97.9293924967448
patch: / / ? * /
rank: 851
score: 99.14823091947116
patch: return sub CaMeL Line 1 . intersection ( line 1 ) ;
rank: 851
score: 99.12513146033653
patch: if ( sub CaMeL Line == null ) { break ; }
rank: 851
score: 98.95171564275569
patch: Line line $NUMBER$ 1 = ( Line ) true ;
rank: 851
score: 98.56362575954861
patch: / * / int intersection = intersection ;
rank: 851
score: 98.43992106119792
patch: if ( intersection != null line $NUMBER$ )
rank: 851
score: 98.17490931919643
patch: / * out / / /
rank: 851
score: 97.92714436848958
patch: * * * * /
rank: 851
score: 97.3837158203125
patch: * / / /
rank: 852
score: 99.1480712890625
patch: check CaMeL Point ( sub CaMeL Line , line $NUMBER$ ) ;
rank: 852
score: 98.9497403231534
patch: Line line $NUMBER$ = new Line $NUMBER$ ( ) ;
rank: 852
score: 98.88063354492188
patch: Line line $NUMBER$ = ( Line != null )
rank: 852
score: 98.56237114800348
patch: / * / line $NUMBER$ / * /
rank: 852
score: 98.17444719587054
patch: / int * * / /
rank: 852
score: 97.92573765345982
patch: if / * final / /
rank: 853
score: 99.123779296875
patch: iterator = line 1 . intersection ( line $NUMBER$ ) ;
rank: 853
score: 98.87741088867188
patch: if ( sub CaMeL Line $NUMBER$ != 0 )
rank: 853
score: 98.55284966362848
patch: if ( line 1 <= - 1 )
rank: 853
score: 98.43736436631944
patch: intersection ( line $NUMBER$ , intersection ) ;
rank: 853
score: 98.17142740885417
patch: / * ] intersection /
rank: 853
score: 97.92379324776786
patch: / / * * / try
rank: 853
score: 97.35828857421875
patch: / return / /
rank: 854
score: 99.23955891927083
patch: Line sub CaMeL Line = line 1 . intersection ( line $NUMBER$ ) ;
rank: 854
score: 99.12225811298077
patch: if ( line 1 != null ) return sub CaMeL Line ;
rank: 854
score: 98.94443359375
patch: if ( line 1 != sub CaMeL Line )
rank: 854
score: 98.87736206054687
patch: Line 1 . intersection ( line $NUMBER$ ) ;
rank: 854
score: 98.55199517144098
patch: if ( line 1 <= 0 ) {
rank: 854
score: 98.43608262803819
patch: if ( intersection line $NUMBER$ != null )
rank: 854
score: 98.17102922712054
patch: / int / * / /
rank: 854
score: 97.91843668619792
patch: / * / try {
rank: 854
score: 97.34013061523437
patch: / if / /
rank: 855
score: 99.14647420247395
patch: / / if ( include CaMeL End CaMeL Points ) {
rank: 855
score: 99.12150065104167
patch: collection = line 1 . intersection ( line $NUMBER$ ) ;
rank: 855
score: 98.94432983398437
patch: / * if ( line 1 != null )
rank: 855
score: 98.87660725911458
patch: final synchronized ( sub CaMeL Line ) {
rank: 855
score: 98.55126953125
patch: / * * ? / / * /
rank: 855
score: 98.43502468532986
patch: if ( line $NUMBER$ / $NUMBER$ ) {
rank: 855
score: 97.91665649414062
patch: for / * * /
rank: 855
score: 97.330712890625
patch: / / / final
rank: 856
score: 99.14536696213942
patch: return get CaMeL Remaining CaMeL Region ( sub CaMeL Line ) ;
rank: 856
score: 99.12019486860795
patch: assert line 1 . intersection ( line $NUMBER$ ) ;
rank: 856
score: 98.876123046875
patch: Line line 1 = ( Line ) false ;
rank: 856
score: 98.54989284939236
patch: / * / int intersection = 0 ;
rank: 856
score: 97.9161376953125
patch: / / ! * /
rank: 856
score: 97.3270263671875
patch: boolean / / /
rank: 857
score: 99.14536354758523
patch: return intersection ( line $NUMBER$ , line 1 ) ;
rank: 857
score: 98.94093153211806
patch: Line line $NUMBER$ = sub CaMeL Line ;
rank: 857
score: 98.87517700195312
patch: if ( sub CaMeL Line $NUMBER$ < 0 )
rank: 857
score: 98.54961480034723
patch: if ( line 1 < 0 ) {
rank: 857
score: 98.43330891927083
patch: assert line 1 != null : $STRING$ ;
rank: 857
score: 98.16884068080357
patch: / * ] list * /
rank: 857
score: 97.916015625
patch: int / * /
rank: 857
score: 97.32672729492188
patch: LOG / / /
rank: 858
score: 99.11783272879464
patch: return new ( line 1 . intersection ( line $NUMBER$ ) ) ;
rank: 858
score: 98.92775472005208
patch: if ( sub CaMeL Line > null )
rank: 858
score: 98.54694475446429
patch: final int intersection = 0 ;
rank: 858
score: 98.43226453993056
patch: if ( intersection ) / * / /
rank: 858
score: 98.16774204799107
patch: / * list / * /
rank: 858
score: 97.9144287109375
patch: / * / try
rank: 858
score: 97.313720703125
patch: final / / compute
rank: 859
score: 99.13972611860795
patch: return intersection ( intersection ( line $NUMBER$ ) ) ;
rank: 859
score: 99.1161600748698
patch: if ( sub CaMeL Line instanceof Sub CaMeL Line ) {
rank: 859
score: 98.8717041015625
patch: if ( get CaMeL Hyperplane ( ) )
rank: 859
score: 98.54682074652777
patch: / * long intersection = - 1 ;
rank: 859
score: 98.16695731026786
patch: / * / } / *
rank: 859
score: 97.91354370117188
patch: / * else * /
rank: 859
score: 97.31193237304687
patch: break / / /
rank: 860
score: 99.13960774739583
patch: return get CaMeL Remaining CaMeL Region ( line 1 ) ;
rank: 860
score: 98.87081298828124
patch: if ( sub CaMeL Line > 1 ) {
rank: 860
score: 98.53597005208333
patch: / * / line 1 / * /
rank: 860
score: 98.43064880371094
patch: if ( intersection == intersection ) {
rank: 860
score: 98.16549246651786
patch: / * / byte * /
rank: 860
score: 97.91207885742188
patch: final / / * /
rank: 860
score: 97.30115966796875
patch: / / / check
rank: 861
score: 99.13551839192708
patch: return intersection ( line $NUMBER$ , sub CaMeL Line ) ;
rank: 861
score: 98.87069091796874
patch: if ( line $NUMBER$ != line $NUMBER$ ) {
rank: 861
score: 98.53336588541667
patch: System . arraycopy ( intersection , 0 ,
rank: 861
score: 98.42739868164062
patch: if ( intersection != intersection ) {
rank: 861
score: 98.16487339564732
patch: / * / * ? /
rank: 861
score: 97.90848795572917
patch: / / int intersection }
rank: 861
score: 97.29945678710938
patch: / boolean / /
rank: 862
score: 98.90872802734376
patch: / * if ( line $NUMBER$ != null )
rank: 862
score: 98.8678955078125
patch: if ( line $NUMBER$ != null - $NUMBER$ )
rank: 862
score: 98.16310337611607
patch: / * / int } /
rank: 862
score: 97.90809122721355
patch: } / * * /
rank: 862
score: 97.29924926757812
patch: / / / set
rank: 863
score: 99.12587483723958
patch: loc = line 1 . intersection ( line $NUMBER$ ) ;
rank: 863
score: 99.11391194661458
patch: if ( sub CaMeL Line == null ) return null ;
rank: 863
score: 98.90127224392361
patch: if ( sub CaMeL Line < null )
rank: 863
score: 98.86561279296875
patch: if ( line $NUMBER$ == sub CaMeL Line )
rank: 863
score: 98.53041585286458
patch: / * int intersection = - 1 ;
rank: 863
score: 98.40925428602431
patch: if ( line $NUMBER$ == - 1 )
rank: 863
score: 98.16282435825893
patch: / * ] * / *
rank: 863
score: 97.90701293945312
patch: if / / * compute
rank: 863
score: 97.29913940429688
patch: logger / / compute
rank: 864
score: 99.11244710286458
patch: for ( if ( include CaMeL End CaMeL Points ) {
rank: 864
score: 98.85989040798611
patch: if ( line $NUMBER$ != new Line )
rank: 864
score: 97.90665690104167
patch: if intersection / * /
rank: 864
score: 97.29752807617187
patch: / / int *
rank: 865
score: 99.220458984375
patch: Line line 1 = sub CaMeL Line . intersection ( line $NUMBER$ ) ;
rank: 865
score: 99.12379455566406
patch: return intersection ( line $NUMBER$ ) ;
rank: 865
score: 98.89750366210937
patch: if ( line 1 == sub CaMeL Line )
rank: 865
score: 98.52587018694196
patch: final int intersection = intersection ;
rank: 865
score: 98.16185651506696
patch: / / list / * /
rank: 865
score: 97.906640625
patch: final List * /
rank: 865
score: 97.29707641601563
patch: / / throw /
rank: 866
score: 99.11032104492188
patch: retval = line 1 . intersection ( line $NUMBER$ ) ;
rank: 866
score: 98.8573486328125
patch: Line line $NUMBER$ = ( Line ) $NUMBER$ ;
rank: 866
score: 98.15757533482143
patch: / * / / else {
rank: 866
score: 97.90584309895833
patch: finally { / * /
rank: 866
score: 97.29074096679688
patch: { / { /
rank: 867
score: 98.8921630859375
patch: loc 1 . intersection ( line $NUMBER$ ) ;
rank: 867
score: 98.85543484157986
patch: super . intersection ( line 1 ) ;
rank: 867
score: 98.38816324869792
patch: if ( line 1 / $NUMBER$ ) {
rank: 867
score: 97.90397135416667
patch: / * } * /
rank: 867
score: 97.2887939453125
patch: / / / intersection
rank: 868
score: 99.21924591064453
patch: if ( sub CaMeL Line == null ) { return sub CaMeL Line ; }
rank: 868
score: 99.10883123224431
patch: if ( line 1 . get CaMeL Hyperplane ( )
rank: 868
score: 98.89205322265624
patch: line $NUMBER$ . add ( line 1 ) ;
rank: 868
score: 98.85478973388672
patch: return intersection ( line 1 ) ;
rank: 868
score: 98.51212855747768
patch: int intersection = - 1 ;
rank: 868
score: 98.15686907087054
patch: / * * / else /
rank: 868
score: 97.90371704101562
patch: / * * / else
rank: 868
score: 97.28504028320313
patch: / / / float
rank: 869
score: 98.89080810546875
patch: line $NUMBER$ . intersection ( line $NUMBER$ )
rank: 869
score: 98.85423583984375
patch: if ( sub CaMeL Line $NUMBER$ == 0 )
rank: 869
score: 98.38359069824219
patch: if ( line $NUMBER$ / / {
rank: 869
score: 97.9030253092448
patch: / / case * /
rank: 869
score: 97.28251953125
patch: int / { /
rank: 870
score: 99.10707600911458
patch: children = line 1 . intersection ( line $NUMBER$ ) ;
rank: 870
score: 98.50334167480469
patch: / * if ( intersection ) {
rank: 870
score: 98.383544921875
patch: intersection ( line 1 , intersection ) ;
rank: 870
score: 98.1549072265625
patch: / * ] } * /
rank: 870
score: 97.9026387532552
patch: / List / * /
rank: 870
score: 97.27635192871094
patch: / / {
rank: 871
score: 99.10683969350961
patch: while ( line $NUMBER$ . intersection ( line $NUMBER$ ) ) {
rank: 871
score: 99.1007588704427
patch: Line line $NUMBER$ = new Line ( line 1 ) ;
rank: 871
score: 98.88685302734375
patch: Line line $NUMBER$ 1 ( line 1 ) ;
rank: 871
score: 98.84564887152777
patch: synchronized ( get CaMeL Hyperplane ( ) )
rank: 871
score: 98.49923366970486
patch: final intersection = intersection ( intersection ) ;
rank: 871
score: 98.14649309430804
patch: / * / int * *
rank: 871
score: 97.90252685546875
patch: List / * /
rank: 871
score: 97.27489013671875
patch: if / { /
rank: 872
score: 99.106201171875
patch: container = line 1 . intersection ( line $NUMBER$ ) ;
rank: 872
score: 98.8830322265625
patch: line $NUMBER$ . add ( line $NUMBER$ ) ;
rank: 872
score: 98.84067789713542
patch: synchronized ( sub CaMeL Line 1 ) {
rank: 872
score: 98.49445258246527
patch: while ( line $NUMBER$ != null ) {
rank: 872
score: 98.37812042236328
patch: intersection ( intersection , intersection ) ;
rank: 872
score: 98.14507184709821
patch: / * char * / }
rank: 872
score: 97.900244140625
patch: * * * /
rank: 872
score: 97.27389526367188
patch: try / / /
rank: 873
score: 99.21334838867188
patch: Line line 1 = line $NUMBER$ . check CaMeL Point ( line $NUMBER$ ) ;
rank: 873
score: 99.10591947115384
patch: if ( include CaMeL End CaMeL Points ) return line $NUMBER$ ;
rank: 873
score: 99.0969950358073
patch: return line $NUMBER$ . intersection ( sub CaMeL Line ) ;
rank: 873
score: 98.82961018880208
patch: if ( line 1 != new Line )
rank: 873
score: 98.49402618408203
patch: int intersection = intersection - 1 ;
rank: 873
score: 98.37802463107639
patch: if ( intersection . length > 0 )
rank: 873
score: 97.89882405598958
patch: / * { * /
rank: 874
score: 99.1000467936198
patch: else return line 1 . intersection ( line $NUMBER$ ) ;
rank: 874
score: 98.87973022460938
patch: Line line $NUMBER$ = sub CaMeL Line != null
rank: 874
score: 98.49292670355902
patch: final int line 1 = line 1 ;
rank: 874
score: 98.37329973493304
patch: if ( intersection != intersection )
rank: 874
score: 98.1435546875
patch: / * * float * /
rank: 874
score: 97.89767456054688
patch: / ? / * /
rank: 874
score: 97.27024536132812
patch: / break / /
rank: 875
score: 99.09982299804688
patch: / * / if ( include CaMeL End CaMeL Points )
rank: 875
score: 98.82125418526786
patch: Line line $NUMBER$ = null ;
rank: 875
score: 98.37091064453125
patch: System . out . / * / /
rank: 875
score: 98.14222063337054
patch: / * ] int * /
rank: 875
score: 97.26864624023438
patch: infinite / /
rank: 876
score: 99.0985819498698
patch: } return line 1 . intersection ( line $NUMBER$ ) ;
rank: 876
score: 98.82057698567708
patch: if ( sub CaMeL Line > 1 )
rank: 876
score: 98.48347981770833
patch: if ( line $NUMBER$ == intersection ) {
rank: 876
score: 98.14132690429688
patch: / * ] } /
rank: 876
score: 97.26864624023438
patch: / / int
rank: 877
score: 99.20933532714844
patch: get CaMeL Remaining CaMeL Region ( ) . intersection ( sub CaMeL Line ) ;
rank: 877
score: 99.09829711914062
patch: graph = line 1 . intersection ( line $NUMBER$ ) ;
rank: 877
score: 98.13929094587054
patch: / * List * / /
rank: 877
score: 97.88456420898437
patch: / * ? /
rank: 877
score: 97.2668701171875
patch: if / / compute
rank: 878
score: 99.20693969726562
patch: String line $NUMBER$ = get CaMeL Remaining CaMeL Region ( sub CaMeL Line ) ;
rank: 878
score: 99.09750600961539
patch: if ( include CaMeL End CaMeL Points ) { return null ;
rank: 878
score: 99.0846280184659
patch: if ( line $NUMBER$ . get CaMeL Hyperplane ( )
rank: 878
score: 98.81845431857639
patch: if ( include CaMeL End CaMeL Points &&
rank: 878
score: 98.47646077473958
patch: double intersection = - 1 . 0 ;
rank: 878
score: 98.35687255859375
patch: if ( intersection != null line 1 )
rank: 878
score: 98.13829694475446
patch: / * / final * /
rank: 878
score: 97.88130696614583
patch: Iterator / / * /
rank: 878
score: 97.26654663085938
patch: / { / compute
rank: 879
score: 99.20652669270834
patch: if ( line 1 == null ) { return sub CaMeL Line ; }
rank: 879
score: 99.09685724431819
patch: for ( Line line 1 : line $NUMBER$ ) {
rank: 879
score: 98.86783447265626
patch: line 1 . get CaMeL Hyperplane ( ) ;
rank: 879
score: 98.81745741102431
patch: if ( line $NUMBER$ != line $NUMBER$ )
rank: 879
score: 98.13727678571429
patch: / * ] intersection intersection /
rank: 879
score: 97.88009033203124
patch: if / * ?
rank: 879
score: 97.26514892578125
patch: Iterator / / compute
rank: 880
score: 99.20577799479166
patch: Line sub CaMeL Line = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 880
score: 99.09481811523438
patch: r = line 1 . intersection ( line $NUMBER$ ) ;
rank: 880
score: 98.86660766601562
patch: Line line $NUMBER$ = sub CaMeL Line ) ;
rank: 880
score: 98.81374104817708
patch: if ( sub CaMeL Line == 0 )
rank: 880
score: 98.47079806857639
patch: / * * if ( intersection ) {
rank: 880
score: 98.35184733072917
patch: if ( intersection . length != 0 )
rank: 880
score: 98.13607352120536
patch: / * / for / /
rank: 880
score: 97.26427001953125
patch: else / / /
rank: 881
score: 99.07670084635417
patch: sub CaMeL Line ) . intersection ( line $NUMBER$ ) ;
rank: 881
score: 98.8655029296875
patch: Line line 1 = ( Line ) true ;
rank: 881
score: 98.81208631727431
patch: if ( line 1 == new Line )
rank: 881
score: 98.46651204427083
patch: if ( ! intersection ( line 1 ,
rank: 881
score: 98.13380940755208
patch: intersection ( intersection ) ;
rank: 881
score: 97.87717692057292
patch: / * int intersection }
rank: 881
score: 97.2615234375
patch: / / else compute
rank: 882
score: 99.09395345052083
patch: area = line 1 . intersection ( line $NUMBER$ ) ;
rank: 882
score: 99.07485961914062
patch: Line line $NUMBER$ = ( Line == null )
rank: 882
score: 98.86524047851563
patch: return line 1 . intersection ( line $NUMBER$ )
rank: 882
score: 98.34547254774306
patch: if ( intersection != null intersection ) {
rank: 882
score: 98.13378034319196
patch: / * ++ / / /
rank: 882
score: 97.261181640625
patch: / / / add
rank: 883
score: 99.20443522135416
patch: if ( sub CaMeL Line == null ) { return line 1 ; }
rank: 883
score: 99.09256998697917
patch: peer = line 1 . intersection ( line $NUMBER$ ) ;
rank: 883
score: 98.86516723632812
patch: Line line $NUMBER$ 1 ( line $NUMBER$ ) ;
rank: 883
score: 98.80356174045139
patch: if ( line $NUMBER$ == new Line )
rank: 883
score: 98.13359723772321
patch: / / / char * /
rank: 883
score: 97.87445068359375
patch: / * * compute
rank: 883
score: 97.26029052734376
patch: / / int line
rank: 884
score: 99.09202067057292
patch: list = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 884
score: 98.79798889160156
patch: if ( line $NUMBER$ instanceof Line )
rank: 884
score: 98.34318712022569
patch: synchronized ( intersection ) { / * /
rank: 884
score: 98.13350132533482
patch: / * * start * /
rank: 884
score: 97.87338256835938
patch: int / * * /
rank: 884
score: 97.25910186767578
patch: /
rank: 885
score: 98.79376220703125
patch: synchronized ( line 1 ) {
rank: 885
score: 97.87062581380208
patch: / * * / try
rank: 885
score: 97.2550048828125
patch: / / System /
rank: 886
score: 98.79364013671875
patch: if ( line 1 == line $NUMBER$ )
rank: 886
score: 98.34282090928819
patch: if ( intersection == null ) continue ;
rank: 886
score: 97.8692118326823
patch: for / * / /
rank: 886
score: 97.24736328125
patch: / / / void
rank: 887
score: 99.08974202473958
patch: for ( Line sub CaMeL Line : line 1 ) {
rank: 887
score: 98.86011352539063
patch: if ( line 1 < sub CaMeL Line )
rank: 887
score: 98.79035101996527
patch: if ( line $NUMBER$ != $STRING$ ) {
rank: 887
score: 98.33737618582589
patch: intersection ( line $NUMBER$ ) ;
rank: 887
score: 98.13213239397321
patch: / * else * / /
rank: 887
score: 97.86818440755208
patch: / / this * /
rank: 887
score: 97.23948974609375
patch: assert / / /
rank: 888
score: 99.1955810546875
patch: Line - $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 888
score: 99.08896891276042
patch: super = line 1 . intersection ( line $NUMBER$ ) ;
rank: 888
score: 98.78767903645833
patch: if ( intersection 1 != null ) {
rank: 888
score: 98.4300537109375
patch: / * synchronized ( this ) {
rank: 888
score: 97.86771647135417
patch: Set / * * /
rank: 888
score: 97.23285522460938
patch: / / void /
rank: 889
score: 99.19502258300781
patch: get CaMeL Remaining CaMeL Region ( ) . intersection ( line $NUMBER$ ) ; }
rank: 889
score: 99.0884540264423
patch: return line 1 . intersection ( sub CaMeL Line ) ; }
rank: 889
score: 98.8580322265625
patch: if ( line 1 != null && line $NUMBER$
rank: 889
score: 98.7872314453125
patch: if ( line $NUMBER$ < null ) {
rank: 889
score: 98.33565266927083
patch: if ( / * intersection != null )
rank: 889
score: 98.13096400669643
patch: / * char * / line
rank: 889
score: 97.86605834960938
patch: if / * while /
rank: 889
score: 97.22706298828125
patch: double / / /
rank: 890
score: 99.04651988636364
patch: / * check CaMeL Point ( line 1 ) ;
rank: 890
score: 98.78629557291667
patch: synchronized ( include CaMeL End CaMeL Points )
rank: 890
score: 98.42181396484375
patch: / * / intersection = intersection ;
rank: 890
score: 98.33111572265625
patch: if ( line $NUMBER$ / $NUMBER$ )
rank: 890
score: 97.865478515625
patch: / / continue * /
rank: 890
score: 97.20646362304687
patch: long / / /
rank: 891
score: 99.19022369384766
patch: final Sub CaMeL Line line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 891
score: 99.08811442057292
patch: list = line 1 . intersection ( line 1 ) ;
rank: 891
score: 98.85714111328124
patch: if ( line $NUMBER$ != null && line $NUMBER$
rank: 891
score: 98.13018798828125
patch: / * / * else /
rank: 891
score: 97.20095825195312
patch: return / / compute
rank: 892
score: 99.08807842548077
patch: / * * if ( include CaMeL End CaMeL Points ) {
rank: 892
score: 98.78266059027777
patch: if ( line 1 != line $NUMBER$ )
rank: 892
score: 98.41930389404297
patch: if ( line 1 != intersection )
rank: 892
score: 97.85886637369792
patch: / else / * /
rank: 892
score: 97.19937744140626
patch: / / double /
rank: 893
score: 99.08751424153645
patch: values = line 1 . intersection ( line $NUMBER$ ) ;
rank: 893
score: 98.8531494140625
patch: / * if ( line 1 == null )
rank: 893
score: 98.77869330512152
patch: if ( line $NUMBER$ > null ) {
rank: 893
score: 98.12906319754464
patch: / * * ] / /
rank: 893
score: 97.85782877604167
patch: boolean / * / /
rank: 893
score: 97.19910888671875
patch: / out / /
rank: 894
score: 99.03349165482955
patch: / * check CaMeL Point ( line $NUMBER$ ) ;
rank: 894
score: 98.7779541015625
patch: if ( line $NUMBER$ == line $NUMBER$ )
rank: 894
score: 98.1287841796875
patch: / * / long * /
rank: 894
score: 97.85764567057292
patch: / / sort * /
rank: 894
score: 97.19588012695313
patch: for / / /
rank: 895
score: 99.18681989397321
patch: Line line 1 = line $NUMBER$ . get CaMeL Hyperplane ( ) ;
rank: 895
score: 98.77315945095486
patch: if ( sub CaMeL Line , 0 )
rank: 895
score: 98.12682233537946
patch: / / ] * / /
rank: 895
score: 97.85652669270833
patch: Object / * * /
rank: 895
score: 97.19456787109375
patch: / try / /
rank: 896
score: 99.08624737079327
patch: if ( include CaMeL End CaMeL Points && line 1 ) {
rank: 896
score: 98.76930745442708
patch: Line line $NUMBER$ = ( Line 1 ;
rank: 896
score: 98.37738037109375
patch: double intersection = 0 . 0 ;
rank: 896
score: 98.30225372314453
patch: if ( line 1 / $NUMBER$ )
rank: 896
score: 98.12542724609375
patch: / * / double * /
rank: 896
score: 97.85512288411458
patch: final / * / }
rank: 896
score: 97.1918701171875
patch: / / finally /
rank: 897
score: 99.18361002604166
patch: final Line line $NUMBER$ = line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 897
score: 98.76704915364583
patch: if ( line 1 > null ) {
rank: 897
score: 98.37615203857422
patch: if ( line 1 == intersection )
rank: 897
score: 98.29749407087054
patch: if ( intersection == intersection )
rank: 897
score: 98.12328229631696
patch: / * char / * /
rank: 897
score: 97.19104614257813
patch: } / / try
rank: 898
score: 99.07789024939903
patch: / * else if ( include CaMeL End CaMeL Points ) {
rank: 898
score: 98.76435682508681
patch: if ( line 1 != $STRING$ ) {
rank: 898
score: 98.36964634486607
patch: / * * / try {
rank: 898
score: 98.12254115513393
patch: / * * else * /
rank: 898
score: 97.85070190429687
patch: while / * /
rank: 898
score: 97.190087890625
patch: / / continue /
rank: 899
score: 99.07716721754808
patch: Point line $NUMBER$ = get CaMeL Remaining CaMeL Region ( ) ;
rank: 899
score: 98.76091172960069
patch: if ( line $NUMBER$ , line $NUMBER$ )
rank: 899
score: 98.36723327636719
patch: / * if line $NUMBER$ != null
rank: 899
score: 98.28910827636719
patch: if ( intersection == null intersection )
rank: 899
score: 97.8491923014323
patch: if / * final /
rank: 899
score: 97.18905639648438
patch: / / } compute
rank: 900
score: 99.178125
patch: short line $NUMBER$ = sub CaMeL Line . get CaMeL Hyperplane ( ) ;
rank: 900
score: 98.75674777560764
patch: if ( sub CaMeL Line > $NUMBER$ )
rank: 900
score: 98.26949310302734
patch: if ( line $NUMBER$ == intersection )
rank: 900
score: 98.11835588727679
patch: / / intersection / * /
rank: 900
score: 97.84823608398438
patch: / * default * /
rank: 900
score: 97.18802490234376
patch: / final / /
rank: 901
score: 99.0740458170573
patch: / * while ( include CaMeL End CaMeL Points ) {
rank: 901
score: 99.00993347167969
patch: Line line $NUMBER$ = line 1 ;
rank: 901
score: 98.75653754340277
patch: if ( line 1 < null ) {
rank: 901
score: 98.35926055908203
patch: intersection [ 0 ] = intersection ;
rank: 901
score: 98.26553344726562
patch: byte [ ] intersection = null ;
rank: 901
score: 98.11793009440105
patch: / * char * /
rank: 901
score: 97.8479715983073
patch: / * * while /
rank: 901
score: 97.18433837890625
patch: / / / this
rank: 902
score: 99.071533203125
patch: for ( String line 1 : line 1 ) {
rank: 902
score: 99.0076571377841
patch: loc = get CaMeL Remaining CaMeL Region ( ) ;
rank: 902
score: 98.26502990722656
patch: if ( line 1 / / {
rank: 902
score: 98.11705671037946
patch: / * for / / /
rank: 902
score: 97.84181722005208
patch: infinite / * * /
rank: 902
score: 97.18314208984376
patch: / throw / /
rank: 903
score: 98.75334821428571
patch: intersection ( line 1 ) ;
rank: 903
score: 98.26172746930804
patch: assert line 1 != null ;
rank: 903
score: 98.10581461588542
patch: * * * / /
rank: 903
score: 97.84168497721355
patch: String intersection / * /
rank: 903
score: 97.18308715820312
patch: * / / compute
rank: 904
score: 99.0696512858073
patch: for ( final Line line $NUMBER$ : line 1 ) {
rank: 904
score: 98.82623969184027
patch: line $NUMBER$ . intersection ( line 1 )
rank: 904
score: 98.35057067871094
patch: if line $NUMBER$ != null ) {
rank: 904
score: 97.8408711751302
patch: System / / * /
rank: 904
score: 97.1694107055664
patch: / { /
rank: 905
score: 99.06939697265625
patch: / * if ( sub CaMeL Line != null ) {
rank: 905
score: 98.9970703125
patch: return ( Line ) intersection ( line $NUMBER$ ) ;
rank: 905
score: 98.74515206473214
patch: if ( line $NUMBER$ ) {
rank: 905
score: 98.24915313720703
patch: Object [ ] intersection = null ;
rank: 905
score: 98.09715779622395
patch: / * list * /
rank: 905
score: 97.84085083007812
patch: / / start * /
rank: 905
score: 97.16866302490234
patch: int / /
rank: 906
score: 99.14267403738839
patch: Element line $NUMBER$ = line 1 . get CaMeL Hyperplane ( ) ;
rank: 906
score: 98.99395073784723
patch: check CaMeL Point ( line 1 ) ;
rank: 906
score: 98.7432632446289
patch: if ( line $NUMBER$ < null )
rank: 906
score: 98.08994547526042
patch: / * / / *
rank: 906
score: 97.84060668945312
patch: / / * ? /
rank: 906
score: 97.1639404296875
patch: } / /
rank: 907
score: 99.14186314174107
patch: Line intersection $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 907
score: 99.06483968098958
patch: for ( String sub CaMeL Line : line 1 ) {
rank: 907
score: 98.81949869791667
patch: line 1 . intersection ( line $NUMBER$ )
rank: 907
score: 98.34542083740234
patch: / * boolean intersection = false ;
rank: 907
score: 98.23873138427734
patch: while ( line $NUMBER$ != null )
rank: 907
score: 97.83362833658855
patch: if / * intersection /
rank: 907
score: 97.15723419189453
patch: intersection / /
rank: 908
score: 99.0643643465909
patch: if ( include CaMeL End CaMeL Points && line 1
rank: 908
score: 98.99085828993056
patch: check CaMeL Point ( line $NUMBER$ ) ;
rank: 908
score: 98.72415161132812
patch: final synchronized ( line 1 ) {
rank: 908
score: 98.34159851074219
patch: / * int intersection = 0 ;
rank: 908
score: 98.2364730834961
patch: while ( line $NUMBER$ == null )
rank: 908
score: 97.83125813802083
patch: if / * break /
rank: 908
score: 97.1539794921875
patch: protected / / /
rank: 909
score: 99.13962227957589
patch: Line line $NUMBER$ = ( Line . include CaMeL End CaMeL Points )
rank: 909
score: 98.81498209635417
patch: if ( line $NUMBER$ != line 1 )
rank: 909
score: 98.70732116699219
patch: Line line $NUMBER$ = ( Line $NUMBER$
rank: 909
score: 98.33944702148438
patch: if ( intersection ( line 1 ,
rank: 909
score: 97.83115641276042
patch: int intersection / * /
rank: 909
score: 97.15396728515626
patch: } / / {
rank: 910
score: 99.13957868303571
patch: Element line $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 910
score: 98.96427001953126
patch: intersection ( line $NUMBER$ , line $NUMBER$ ) ;
rank: 910
score: 98.80792914496527
patch: Line line $NUMBER$ 1 = line 1 ;
rank: 910
score: 98.7027816772461
patch: if ( line 1 < null )
rank: 910
score: 98.22964477539062
patch: if ( intersection != null intersection )
rank: 910
score: 97.82899169921875
patch: Object / * /
rank: 910
score: 97.15115356445312
patch: / / / if
rank: 911
score: 99.13797433035714
patch: int include CaMeL End CaMeL Points = get CaMeL Hyperplane ( ) ;
rank: 911
score: 98.94782104492188
patch: loc 1 . intersection ( line 1 ) ;
rank: 911
score: 98.69905090332031
patch: if ( line $NUMBER$ != $STRING$ )
rank: 911
score: 98.3332290649414
patch: intersection . add ( intersection ) ;
rank: 911
score: 98.0562032063802
patch: / * list / /
rank: 911
score: 97.82827758789062
patch: boolean / * /
rank: 911
score: 97.14754028320313
patch: / / break /
rank: 912
score: 99.0604580965909
patch: for ( String line $NUMBER$ : line $NUMBER$ ) {
rank: 912
score: 98.69843292236328
patch: Line line $NUMBER$ = ( Line ;
rank: 912
score: 98.32872772216797
patch: / * / if ( intersection )
rank: 912
score: 98.04958089192708
patch: / int * / line
rank: 912
score: 97.82661946614583
patch: / / * / else
rank: 912
score: 97.14320373535156
patch: / / try
rank: 913
score: 99.05805053710938
patch: for ( Line line $NUMBER$ : line 1 )
rank: 913
score: 98.93815307617187
patch: loc 1 = get CaMeL Hyperplane ( ) ;
rank: 913
score: 98.79293060302734
patch: Line line $NUMBER$ 1 = null ;
rank: 913
score: 98.31165568033855
patch: int intersection = 0 ;
rank: 913
score: 98.04720052083333
patch: / * / / else
rank: 913
score: 97.82321166992188
patch: / / try * /
rank: 913
score: 97.13990478515625
patch: / / / long
rank: 914
score: 99.13282121930804
patch: Object intersection $NUMBER$ = line 1 . intersection ( line $NUMBER$ ) ;
rank: 914
score: 98.68517303466797
patch: = get CaMeL Hyperplane ( ) ;
rank: 914
score: 97.82273356119792
patch: intersection / * * compute
rank: 914
score: 97.13028564453126
patch: / / / char
rank: 915
score: 98.93323364257813
patch: line $NUMBER$ = get CaMeL Hyperplane ( ) ;
rank: 915
score: 98.78837754991319
patch: line $NUMBER$ . equals ( line $NUMBER$ )
rank: 915
score: 98.68297576904297
patch: if ( line $NUMBER$ < 0 )
rank: 915
score: 98.31005859375
patch: / * * intersection * /
rank: 915
score: 98.21647644042969
patch: if ( intersection < 0 ) {
rank: 915
score: 98.041015625
patch: / int * / }
rank: 915
score: 97.81920166015625
patch: Iterator / * /
rank: 915
score: 97.1293212890625
patch: final / { /
rank: 916
score: 99.12423940805289
patch: boolean include CaMeL End CaMeL Points = include CaMeL End CaMeL Points
rank: 916
score: 99.05430094401042
patch: for ( String line $NUMBER$ : sub CaMeL Line ) {
rank: 916
score: 98.93281385633681
patch: final boolean include CaMeL End CaMeL Points {
rank: 916
score: 98.78793674045139
patch: if ( line $NUMBER$ != - $NUMBER$ )
rank: 916
score: 98.68244280133929
patch: synchronized ( line $NUMBER$ ) {
rank: 916
score: 98.30265299479167
patch: synchronized ( this ) {
rank: 916
score: 98.21034240722656
patch: while ( line 1 != null )
rank: 916
score: 97.12298583984375
patch: / / final compute
rank: 917
score: 99.05192057291667
patch: return line 1 != null ? line $NUMBER$ : null ;
rank: 917
score: 98.77996148003473
patch: if ( line 1 != line 1 )
rank: 917
score: 98.20942687988281
patch: get CaMeL Line ( intersection ) ;
rank: 917
score: 98.03248087565105
patch: / * * else /
rank: 917
score: 97.81392415364583
patch: final / * ? /
rank: 917
score: 97.1219482421875
patch: log / / /
rank: 918
score: 98.91897583007812
patch: Line line $NUMBER$ = ( Line ) this ;
rank: 918
score: 98.67864227294922
patch: if ( line $NUMBER$ > null )
rank: 918
score: 98.0298095703125
patch: * * / /
rank: 918
score: 97.81280517578125
patch: } else { * /
rank: 918
score: 97.11304931640625
patch: / / log /
rank: 919
score: 99.04461669921875
patch: if ( include CaMeL End CaMeL Points ) { else {
rank: 919
score: 98.67523956298828
patch: if ( intersection > 0 ) {
rank: 919
score: 98.20476531982422
patch: while ( intersection != null ) {
rank: 919
score: 97.10886840820312
patch: / / / is
rank: 920
score: 99.09921499399039
patch: if ( line 1 == 0 ) { return null ; }
rank: 920
score: 98.90877075195313
patch: intersection ( line 1 , line 1 ) ;
rank: 920
score: 98.66983032226562
patch: if ( ! sub CaMeL Line )
rank: 920
score: 98.20464215959821
patch: if ( intersection < 0 )
rank: 920
score: 98.01988728841145
patch: / * * / *
rank: 920
score: 97.81100463867188
patch: if * * * /
rank: 920
score: 97.10843505859376
patch: / System / /
rank: 921
score: 99.0429178873698
patch: if ( include CaMeL End CaMeL Points && line 1 .
rank: 921
score: 98.9077392578125
patch: return check CaMeL Point ( line 1 ) ;
rank: 921
score: 98.76624891493056
patch: if ( line 1 != - $NUMBER$ )
rank: 921
score: 98.66914367675781
patch: intersection ( sub CaMeL Line ) ;
rank: 921
score: 98.25304158528645
patch: int intersection = intersection ;
rank: 921
score: 98.20094517299107
patch: logger . / * / /
rank: 921
score: 98.01359049479167
patch: int * * / }
rank: 921
score: 97.809130859375
patch: this / * /
rank: 921
score: 97.10069580078125
patch: / / int }
rank: 922
score: 98.89718288845486
patch: if ( get CaMeL Hyperplane ( ) ;
rank: 922
score: 98.6660385131836
patch: if ( line 1 != $STRING$ )
rank: 922
score: 98.19190216064453
patch: if ( line $NUMBER$ / $NUMBER$ /
rank: 922
score: 98.01339111328124
patch: / * else /
rank: 922
score: 97.80820719401042
patch: / * int intersection ;
rank: 922
score: 97.10042724609374
patch: List / / /
rank: 923
score: 98.756591796875
patch: line 1 . equals ( line $NUMBER$ )
rank: 923
score: 98.66573333740234
patch: if ( line 1 > null )
rank: 923
score: 98.01315307617188
patch: * / * / /
rank: 923
score: 97.80389404296875
patch: / / clear * /
rank: 923
score: 97.089404296875
patch: } / / int
rank: 924
score: 99.04153442382812
patch: if ( sub CaMeL Line instanceof Line ) {
rank: 924
score: 98.66268920898438
patch: if ( line $NUMBER$ , null )
rank: 924
score: 98.17835235595703
patch: while ( line 1 == null )
rank: 924
score: 98.0080057779948
patch: / int * * /
rank: 924
score: 97.80387369791667
patch: this / * * /
rank: 924
score: 97.089013671875
patch: / try { /
rank: 925
score: 98.75388590494792
patch: line $NUMBER$ . contains ( line $NUMBER$ )
rank: 925
score: 98.65548270089286
patch: if ( line 1 ) {
rank: 925
score: 98.1749038696289
patch: if ( intersection / * / {
rank: 925
score: 97.79832967122395
patch: / / for * /
rank: 925
score: 97.0882568359375
patch: / / do /
rank: 926
score: 98.75088161892361
patch: / * synchronized ( sub CaMeL Line )
rank: 926
score: 98.6499252319336
patch: if ( line $NUMBER$ . get CaMeL
rank: 926
score: 98.16804504394531
patch: logger . / * / / /
rank: 926
score: 97.99159749348958
patch: / * ] intersection compute
rank: 926
score: 97.79782104492188
patch: intersection / * compute
rank: 926
score: 97.08601684570313
patch: int / * compute
rank: 927
score: 98.74698893229167
patch: line 1 . intersection ( line 1 )
rank: 927
score: 97.9915771484375
patch: int * / line
rank: 927
score: 97.79742431640625
patch: if / * compute
rank: 927
score: 97.08150634765624
patch: / / / List
rank: 928
score: 98.64114379882812
patch: if ( line 1 == $STRING$ )
rank: 928
score: 97.98666381835938
patch: / * List / /
rank: 928
score: 97.79739379882812
patch: boolean / / * /
rank: 928
score: 97.07853393554687
patch: return / { /
rank: 929
score: 99.0343017578125
patch: / * while ( line 1 != null ) {
rank: 929
score: 98.80670166015625
patch: / / get CaMeL Hyperplane ( ) ;
rank: 929
score: 98.74136788504464
patch: synchronized ( sub CaMeL Line )
rank: 929
score: 98.63467407226562
patch: if ( line $NUMBER$ == $STRING$ )
rank: 929
score: 97.79635009765624
patch: else / * /
rank: 929
score: 97.07802124023438
patch: } / { compute
rank: 930
score: 98.7313232421875
patch: if ( line $NUMBER$ != - 1 )
rank: 930
score: 98.63463592529297
patch: if ( line $NUMBER$ != $NUMBER$ )
rank: 930
score: 97.79498291015625
patch: List * * /
rank: 930
score: 97.07446899414063
patch: / / - /
rank: 931
score: 99.03305886008523
patch: / * if ( line $NUMBER$ == null ) {
rank: 931
score: 98.6318588256836
patch: if ( line 1 , null )
rank: 931
score: 97.794921875
patch: while / * * /
rank: 931
score: 97.06678466796875
patch: int / / try
rank: 932
score: 98.6311264038086
patch: if ( line 1 < 0 )
rank: 932
score: 98.21269880022321
patch: long intersection = - 1 ;
rank: 932
score: 97.96560668945312
patch: * * / / /
rank: 932
score: 97.79270426432292
patch: final / * / else
rank: 932
score: 97.0645263671875
patch: infinite / int line
rank: 933
score: 99.02345969460227
patch: assert line $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 933
score: 98.62977600097656
patch: if ( intersection 1 != null )
rank: 933
score: 98.12641252790179
patch: if ( intersection > 0 )
rank: 933
score: 97.79251098632812
patch: / * continue * /
rank: 933
score: 97.0643798828125
patch: / int / *
rank: 934
score: 99.01850043402777
patch: this . intersection ( line $NUMBER$ ) ;
rank: 934
score: 98.62925720214844
patch: if ( line 1 . get CaMeL
rank: 934
score: 98.11931501116071
patch: if ( line $NUMBER$ / /
rank: 934
score: 97.79092407226562
patch: / * int intersection /
rank: 934
score: 97.0630859375
patch: / / ? /
rank: 935
score: 98.62920379638672
patch: if ( line $NUMBER$ == $NUMBER$ )
rank: 935
score: 98.11742292131696
patch: assert line $NUMBER$ == null ;
rank: 935
score: 97.9536641438802
patch: / * * / line
rank: 935
score: 97.7900899251302
patch: if / * * }
rank: 935
score: 97.06219482421875
patch: int / / *
rank: 936
score: 98.62089538574219
patch: if ( line $NUMBER$ <= null )
rank: 936
score: 98.11730085100446
patch: if ( intersection >= 0 )
rank: 936
score: 97.95330810546875
patch: / ++ * / /
rank: 936
score: 97.78978474934895
patch: Collection / * * /
rank: 936
score: 97.0614013671875
patch: / / double intersection
rank: 937
score: 99.0092440518466
patch: if ( line 1 == null ) { else {
rank: 937
score: 98.95433460582386
patch: Line ( ) . intersection ( line $NUMBER$ ) ;
rank: 937
score: 98.61952209472656
patch: if ( line $NUMBER$ <= 0 )
rank: 937
score: 98.174560546875
patch: / * if line $NUMBER$ /
rank: 937
score: 98.11313302176339
patch: / * / List $NUMBER$ /
rank: 937
score: 97.953076171875
patch: int * / /
rank: 937
score: 97.78438313802083
patch: int / / * /
rank: 937
score: 97.0602783203125
patch: int / / int
rank: 938
score: 98.74605560302734
patch: Line line $NUMBER$ = line $NUMBER$ ;
rank: 938
score: 98.67881774902344
patch: line $NUMBER$ . trim ( ) ;
rank: 938
score: 98.617919921875
patch: Line line $NUMBER$ ;
rank: 938
score: 98.10723876953125
patch: if ( intersection <= 0 )
rank: 938
score: 97.9530537923177
patch: / * int / /
rank: 938
score: 97.78108723958333
patch: / * if * /
rank: 939
score: 98.99879039417614
patch: if ( include CaMeL End CaMeL Points && ) {
rank: 939
score: 98.93663330078125
patch: boolean ( include CaMeL End CaMeL Points ) {
rank: 939
score: 98.61761474609375
patch: if ( line 1 <= null )
rank: 939
score: 97.9527587890625
patch: / * else / /
rank: 939
score: 97.779052734375
patch: intersection / / * compute
rank: 939
score: 96.96318817138672
patch: / / boolean
rank: 940
score: 98.99693714488636
patch: for ( if ( line 1 != null ) {
rank: 940
score: 98.61434936523438
patch: if ( line 1 == $NUMBER$ )
rank: 940
score: 98.09234619140625
patch: while ( intersection != null )
rank: 940
score: 97.9523417154948
patch: / * ++ / /
rank: 940
score: 97.77852376302083
patch: } / / * /
rank: 940
score: 96.86576843261719
patch: / / double
rank: 941
score: 98.08279854910714
patch: synchronized ( intersection line $NUMBER$ )
rank: 941
score: 97.94917805989583
patch: / * * } /
rank: 941
score: 96.85245513916016
patch: / / final
rank: 942
score: 98.99408513849431
patch: if ( line 1 == null ) { break ;
rank: 942
score: 98.6069564819336
patch: final synchronized ( sub CaMeL Line )
rank: 942
score: 97.94793701171875
patch: / else * / /
rank: 942
score: 97.77750651041667
patch: else / / * /
rank: 942
score: 96.83492279052734
patch: if / /
rank: 943
score: 98.62631225585938
patch: synchronized ( sub CaMeL Line 1 )
rank: 943
score: 98.60686492919922
patch: final synchronized ( line $NUMBER$ ) {
rank: 943
score: 98.15189034598214
patch: if ( line 1 / /
rank: 943
score: 98.05689348493304
patch: throw new / * / /
rank: 943
score: 97.94142659505208
patch: / ] * / /
rank: 943
score: 97.77248128255208
patch: Collection * * * /
rank: 943
score: 96.76750183105469
patch: { / /
rank: 944
score: 98.96931762695313
patch: column 1 . intersection ( line $NUMBER$ ) ;
rank: 944
score: 98.86318969726562
patch: boolean ( include CaMeL End CaMeL Points ) ;
rank: 944
score: 98.62420654296875
patch: line 1 . trim ( ) ;
rank: 944
score: 98.56836954752605
patch: if ( line $NUMBER$ )
rank: 944
score: 97.9355977376302
patch: int * / } /
rank: 944
score: 97.7688496907552
patch: int intersection * * /
rank: 944
score: 96.73190307617188
patch: / else /
rank: 945
score: 98.9680908203125
patch: i $NUMBER$ . intersection ( line $NUMBER$ ) ;
rank: 945
score: 98.49372209821429
patch: if ( sub CaMeL Line ;
rank: 945
score: 97.93309529622395
patch: int * * / line
rank: 945
score: 97.7635498046875
patch: int intersection * /
rank: 945
score: 96.72061157226562
patch: / } /
rank: 946
score: 98.96651611328124
patch: for ( Line line $NUMBER$ : intersection ) {
rank: 946
score: 98.86004638671875
patch: if ( line 1 == null ) { return
rank: 946
score: 98.64463588169643
patch: return sub CaMeL Line 1 ;
rank: 946
score: 98.61498260498047
patch: if ( line $NUMBER$ != ) {
rank: 946
score: 98.46662248883929
patch: int line $NUMBER$ = null ;
rank: 946
score: 98.14182826450893
patch: / * / intersection = /
rank: 946
score: 97.93106079101562
patch: / * out / /
rank: 946
score: 97.76126098632812
patch: / / < * /
rank: 946
score: 96.64573669433594
patch: infinite / int
rank: 947
score: 98.96612548828125
patch: i 1 . intersection ( line $NUMBER$ ) ;
rank: 947
score: 98.61004638671875
patch: line $NUMBER$ . close ( ) ;
rank: 947
score: 97.92449951171875
patch: int * / / /
rank: 947
score: 97.75982666015625
patch: try { / * compute
rank: 947
score: 96.63017272949219
patch: logger / /
rank: 948
score: 97.9230448404948
patch: } * * / /
rank: 948
score: 97.75944010416667
patch: if ( int ) {
rank: 948
score: 96.60462951660156
patch: public / /
rank: 949
score: 98.96036376953126
patch: for ( if ( line 1 != null )
rank: 949
score: 98.45878092447917
patch: if ( line 1 )
rank: 949
score: 98.02688598632812
patch: for ( / * /
rank: 949
score: 96.59998321533203
patch: / / *
rank: 950
score: 98.60383605957031
patch: Line line $NUMBER$ 1 ( ) ;
rank: 950
score: 98.4481201171875
patch: if ( sub CaMeL Line $NUMBER$
rank: 950
score: 98.12995256696429
patch: / * / / try {
rank: 950
score: 97.9117940266927
patch: / / float * /
rank: 950
score: 97.75242106119792
patch: boolean * * * /
rank: 950
score: 96.59782409667969
patch: infinite / {
rank: 951
score: 98.95841674804687
patch: } if ( line 1 != null ) {
rank: 951
score: 98.439697265625
patch: Object line $NUMBER$ = null ;
rank: 951
score: 97.91159057617188
patch: final * * / /
rank: 951
score: 97.75099690755208
patch: if ( intersection / /
rank: 951
score: 96.58736419677734
patch: / int /
rank: 952
score: 98.60025024414062
patch: if ( line 1 != ) {
rank: 952
score: 98.1017354329427
patch: double intersection = intersection ;
rank: 952
score: 98.00210135323661
patch: System . out / * /
rank: 952
score: 97.9111836751302
patch: / * finally / /
rank: 952
score: 97.7508544921875
patch: if / * *
rank: 952
score: 96.5859603881836
patch: return / /
rank: 953
score: 98.95667724609375
patch: if ( line 1 != null ) continue ;
rank: 953
score: 98.59143829345703
patch: if ( line $NUMBER$ >= null )
rank: 953
score: 97.99931117466518
patch: if ( intersection < intersection )
rank: 953
score: 97.91117350260417
patch: / * ] / line
rank: 953
score: 97.7504374186198
patch: synchronized / * / /
rank: 953
score: 96.57681274414062
patch: Iterator / /
rank: 954
score: 98.40212576729911
patch: if ( size > 0 )
rank: 954
score: 97.99287632533482
patch: try { / / * /
rank: 954
score: 97.90629069010417
patch: / * } / /
rank: 954
score: 97.74715576171874
patch: Set / * /
rank: 954
score: 96.5631103515625
patch: final / /
rank: 955
score: 98.953076171875
patch: / * if ( line $NUMBER$ == null )
rank: 955
score: 98.589111328125
patch: line $NUMBER$ . clone ( ) ;
rank: 955
score: 98.53633335658482
patch: return sub CaMeL Line $NUMBER$ ;
rank: 955
score: 98.40007672991071
patch: if ( new Line ) {
rank: 955
score: 97.98107038225446
patch: if ( intersection / $NUMBER$ )
rank: 955
score: 97.73671264648438
patch: Iterator * * /
rank: 955
score: 96.54397583007812
patch: / / }
rank: 956
score: 98.9525390625
patch: return line 1 . intersection ( $STRING$ ) ;
rank: 956
score: 98.39089965820312
patch: if ( true ) {
rank: 956
score: 97.7062744140625
patch: String intersection * /
rank: 956
score: 96.52799987792969
patch: intersection / {
rank: 957
score: 98.94973754882812
patch: return line 1 . intersection ( false ) ;
rank: 957
score: 98.52523367745536
patch: Line line 1 = null ;
rank: 957
score: 98.5122802734375
patch: return line 1 ;
rank: 957
score: 98.35153198242188
patch: if ( false ) {
rank: 957
score: 98.05747477213542
patch: / * do * /
rank: 957
score: 97.970703125
patch: lock ( intersection ) ;
rank: 957
score: 97.89447021484375
patch: / / list / /
rank: 957
score: 97.68967895507812
patch: Collection / * /
rank: 957
score: 96.51878356933594
patch: / / float
rank: 958
score: 98.94832763671874
patch: for ( Line line 1 : line 1 )
rank: 958
score: 98.71910942925348
patch: boolean include CaMeL End CaMeL Points = )
rank: 958
score: 97.96999686104911
patch: final boolean intersection = false ;
rank: 958
score: 97.68604736328125
patch: final int line 1
rank: 958
score: 96.49449157714844
patch: intersection / int
rank: 959
score: 98.94081420898438
patch: position 1 . intersection ( line $NUMBER$ ) ;
rank: 959
score: 98.46769496372768
patch: Line ( line $NUMBER$ ) ;
rank: 959
score: 98.0206298828125
patch: long intersection = 0 ;
rank: 959
score: 97.96834019252232
patch: while ( intersection == null )
rank: 959
score: 97.89023844401042
patch: / * % / /
rank: 959
score: 97.68507690429688
patch: else { * /
rank: 959
score: 96.48231506347656
patch: / / set
rank: 960
score: 98.4646504720052
patch: Line line $NUMBER$ != null
rank: 960
score: 98.27135213216145
patch: Line line $NUMBER$ ++ ;
rank: 960
score: 98.01902262369792
patch: / * / intersection ;
rank: 960
score: 97.66494750976562
patch: if * * /
rank: 960
score: 96.4649887084961
patch: * / /
rank: 961
score: 98.92406005859375
patch: for ( Line line $NUMBER$ : line $NUMBER$ )
rank: 961
score: 98.46137346540179
patch: get CaMeL Hyperplane ( ) ;
rank: 961
score: 98.46046665736607
patch: if ( line $NUMBER$ != )
rank: 961
score: 98.25445556640625
patch: for ( Line line $NUMBER$
rank: 961
score: 97.9622294108073
patch: throw new / * /
rank: 961
score: 97.64058227539063
patch: break / * /
rank: 961
score: 96.46226501464844
patch: / / System
rank: 962
score: 98.92180786132812
patch: for ( String line $NUMBER$ : line 1 )
rank: 962
score: 98.43932233537946
patch: if ( line 1 != )
rank: 962
score: 98.22325439453125
patch: if ( line $NUMBER$
rank: 962
score: 98.01051839192708
patch: / / remove * /
rank: 962
score: 97.87565104166667
patch: int * int * /
rank: 962
score: 97.6323974609375
patch: / * } /
rank: 962
score: 96.45732116699219
patch: boolean / /
rank: 963
score: 98.92154541015626
patch: return line 1 . intersection ( 0 ) ;
rank: 963
score: 98.42787679036458
patch: synchronized ( line 1 )
rank: 963
score: 98.2227071126302
patch: if ( new Line )
rank: 963
score: 97.993896484375
patch: float intersection = intersection ;
rank: 963
score: 97.9263407389323
patch: List $NUMBER$ / * /
rank: 963
score: 97.851904296875
patch: / ? * /
rank: 963
score: 97.6208984375
patch: / * break /
rank: 963
score: 96.45374298095703
patch: / / long
rank: 964
score: 98.92008056640626
patch: int line $NUMBER$ = ( Line ) null ;
rank: 964
score: 98.41513061523438
patch: Line line $NUMBER$ 1 ;
rank: 964
score: 98.2168477376302
patch: int line $NUMBER$ = (
rank: 964
score: 97.99348958333333
patch: / * * try {
rank: 964
score: 97.61589965820312
patch: Iterator * / /
rank: 964
score: 96.4417724609375
patch: } / {
rank: 965
score: 98.44882638113839
patch: check CaMeL Point ( ) ;
rank: 965
score: 98.40931047712054
patch: sub CaMeL Line ( ) ;
rank: 965
score: 98.3766377766927
patch: if ( line 1 !=
rank: 965
score: 98.20726521809895
patch: final Line line $NUMBER$ ;
rank: 965
score: 97.99180094401042
patch: final intersection = intersection ;
rank: 965
score: 97.91832478841145
patch: boolean intersection = false ;
rank: 965
score: 97.81851806640626
patch: / * / line
rank: 965
score: 97.61336669921874
patch: int size * /
rank: 965
score: 96.4286880493164
patch: / / else
rank: 966
score: 98.91080932617187
patch: proc 1 . intersection ( line $NUMBER$ ) ;
rank: 966
score: 98.43565150669643
patch: return sub CaMeL Line ) ;
rank: 966
score: 98.36245291573661
patch: Location line $NUMBER$ = null ;
rank: 966
score: 98.33592732747395
patch: if ( line 1 ==
rank: 966
score: 98.19423421223958
patch: Line line $NUMBER$ -- ;
rank: 966
score: 97.88277587890624
patch: synchronized ( intersection )
rank: 966
score: 97.59325561523437
patch: } * * /
rank: 966
score: 96.40494791666667
patch: } /
rank: 967
score: 98.91015625
patch: while ( sub CaMeL Line != null ) {
rank: 967
score: 98.36198207310268
patch: Line line $NUMBER$ ( ) ;
rank: 967
score: 98.33587646484375
patch: Line line $NUMBER$ ; / *
rank: 967
score: 97.9526875813802
patch: / / add * /
rank: 967
score: 97.84595743815105
patch: Object intersection = null ;
rank: 967
score: 97.80175170898437
patch: / * ] /
rank: 967
score: 97.59046630859375
patch: Object * * /
rank: 967
score: 96.38760375976562
patch: / { compute
rank: 968
score: 98.91004638671875
patch: if ( line $NUMBER$ ) return line 1 ;
rank: 968
score: 98.4140625
patch: return ( line 1 ) ;
rank: 968
score: 98.361572265625
patch: synchronized ( line $NUMBER$ )
rank: 968
score: 97.8160400390625
patch: Element intersection = null ;
rank: 968
score: 97.79970703125
patch: int * / }
rank: 968
score: 96.3560791015625
patch: / / void
rank: 969
score: 98.90542263454861
patch: if ( ( line 1 != null )
rank: 969
score: 98.31355794270833
patch: / / break * /
rank: 969
score: 98.15138753255208
patch: synchronized ( null ) {
rank: 969
score: 97.95121256510417
patch: / * List $NUMBER$ /
rank: 969
score: 97.782177734375
patch: i * / /
rank: 969
score: 97.5687255859375
patch: if / * }
rank: 969
score: 95.89459228515625
patch: intersection /
rank: 970
score: 98.30784301757812
patch: return line $NUMBER$ ;
rank: 970
score: 98.24534098307292
patch: if ( line $NUMBER$ !=
rank: 970
score: 97.94957275390625
patch: final int intersection ;
rank: 970
score: 97.77984619140625
patch: List < / * /
rank: 970
score: 97.74063720703126
patch: / ] * /
rank: 970
score: 97.5680908203125
patch: final int * /
rank: 970
score: 95.87847900390625
patch: infinite /
rank: 971
score: 98.8812255859375
patch: return ( line 1 != null )
rank: 971
score: 98.1832275390625
patch: Line line $NUMBER$ == null
rank: 971
score: 98.13167317708333
patch: if ( line $NUMBER$ ==
rank: 971
score: 98.09125366210938
patch: if ( ) {
rank: 971
score: 97.94807942708333
patch: / * add * /
rank: 971
score: 97.7752176920573
patch: synchronized ( intersection ) {
rank: 971
score: 97.72939453125
patch: * / * /
rank: 971
score: 97.55985107421876
patch: / * * ?
rank: 971
score: 95.86580403645833
patch: { /
rank: 972
score: 98.87805853949652
patch: this . intersection ( line 1 ) ;
rank: 972
score: 98.23044840494792
patch: return intersection ( ) ;
rank: 972
score: 98.05305786132813
patch: if ( line 1
rank: 972
score: 97.94209798177083
patch: / / do * /
rank: 972
score: 97.77353922526042
patch: String intersection = null ;
rank: 972
score: 97.5576416015625
patch: / * intersection /
rank: 972
score: 95.6763916015625
patch: / {
rank: 973
score: 98.21649169921875
patch: if ( line $NUMBER$ ;
rank: 973
score: 97.99147338867188
patch: int line $NUMBER$ ;
rank: 973
score: 97.7645772298177
patch: Shape intersection = null ;
rank: 973
score: 97.71513061523437
patch: i * * /
rank: 973
score: 97.55707397460938
patch: Map / * /
rank: 973
score: 95.55893961588542
patch: public /
rank: 974
score: 98.18834431966145
patch: / * * * *
rank: 974
score: 98.0156962076823
patch: assert line 1 != null
rank: 974
score: 97.98773193359375
patch: if ( true )
rank: 974
score: 97.92796834309895
patch: switch ( line 1 )
rank: 974
score: 97.7630106608073
patch: assert line $NUMBER$ / /
rank: 974
score: 97.70745239257812
patch: / finally { line
rank: 974
score: 97.55535278320312
patch: / * { /
rank: 974
score: 95.52626546223958
patch: int /
rank: 975
score: 98.81803385416667
patch: return line 1 . intersection ( ) ;
rank: 975
score: 98.16640218098958
patch: if ( line 1 ;
rank: 975
score: 98.00961303710938
patch: if ( line 1 .
rank: 975
score: 97.94324340820313
patch: if ( false )
rank: 975
score: 95.49413045247395
patch: / try
rank: 976
score: 98.80971272786458
patch: if ( sub CaMeL Line instanceof Line )
rank: 976
score: 98.00677490234375
patch: Line line $NUMBER$ = line
rank: 976
score: 97.73372395833333
patch: byte [ ] intersection ;
rank: 976
score: 97.54791259765625
patch: for / * compute
rank: 976
score: 95.472900390625
patch: logger /
rank: 977
score: 98.75651332310268
patch: add ( line 1 ) ;
rank: 977
score: 97.92809448242187
patch: Line line $NUMBER$ :
rank: 977
score: 97.92069498697917
patch: long intersection = intersection ;
rank: 977
score: 97.6950439453125
patch: / * / *
rank: 977
score: 97.54252319335937
patch: return / * /
rank: 977
score: 95.38147989908855
patch: final /
rank: 978
score: 97.69462280273437
patch: * * / }
rank: 978
score: 97.69453938802083
patch: return new / * /
rank: 978
score: 97.53994140625
patch: final * * /
rank: 978
score: 95.32462565104167
patch: return /
rank: 979
score: 98.0819091796875
patch: Line line $NUMBER$ 1
rank: 979
score: 97.89546508789063
patch: Line line 1 ;
rank: 979
score: 97.89412434895833
patch: / * * * compute
rank: 979
score: 97.83046264648438
patch: revalidate ( ) ;
rank: 979
score: 97.69163818359375
patch: / * / int
rank: 979
score: 97.68836466471355
patch: try / * / /
rank: 979
score: 97.53968505859375
patch: Collection * * /
rank: 979
score: 95.19000244140625
patch: / int
rank: 980
score: 97.98499145507813
patch: / * else {
rank: 980
score: 97.89351196289063
patch: try { / *
rank: 980
score: 97.88446655273438
patch: try { try {
rank: 980
score: 97.70945434570312
patch: while ( ) {
rank: 980
score: 97.69152221679687
patch: / * ++ /
rank: 980
score: 97.59072265625
patch: synchronized ( this )
rank: 980
score: 97.5362548828125
patch: / else * /
rank: 980
score: 95.07290649414062
patch: else /
rank: 981
score: 97.94813842773438
patch: / * try {
rank: 981
score: 97.8886210123698
patch: String intersection = intersection ;
rank: 981
score: 97.8747802734375
patch: Line throw null ;
rank: 981
score: 97.68644409179687
patch: long * * /
rank: 981
score: 97.57852172851562
patch: List * / /
rank: 981
score: 94.38595581054688
patch: compute
rank: 982
score: 97.69290771484376
patch: close ( ) ;
rank: 982
score: 97.6806884765625
patch: / * list /
rank: 982
score: 97.52900390625
patch: final int line $NUMBER$
rank: 982
score: 94.2043685913086
patch: try
rank: 983
score: 97.82821655273438
patch: String line $NUMBER$ ;
rank: 983
score: 97.5152587890625
patch: if / * else
rank: 983
score: 97.492041015625
patch: try { / /
rank: 983
score: 94.03553771972656
patch: }
rank: 984
score: 98.62813895089286
patch: add ( line $NUMBER$ ) ;
rank: 984
score: 98.0322021484375
patch: / * * *
rank: 984
score: 97.881787109375
patch: repaint ( ) ;
rank: 984
score: 93.97956085205078
patch: infinite
rank: 985
score: 98.56559535435268
patch: / * if ( line 1
rank: 985
score: 98.00184326171875
patch: / / for (
rank: 985
score: 97.51148071289063
patch: int * / else
rank: 985
score: 93.90672302246094
patch: int
rank: 986
score: 98.51704624720982
patch: for ( ; ; ) {
rank: 986
score: 97.81242065429687
patch: Object line $NUMBER$ ;
rank: 986
score: 97.74534912109375
patch: intersection = intersection ;
rank: 986
score: 97.67573852539063
patch: disconnect ( ) ;
rank: 986
score: 97.61397705078124
patch: char * * /
rank: 986
score: 97.51043701171875
patch: / * List /
rank: 986
score: 97.42642211914062
patch: / * do /
rank: 986
score: 93.41436767578125
patch: logger
rank: 987
score: 98.49332972935268
patch: clone ( line 1 ) ;
rank: 987
score: 97.7576416015625
patch: synchronized ( ) {
rank: 987
score: 97.65433349609376
patch: redo ( ) ;
rank: 987
score: 97.50676879882812
patch: / * / {
rank: 987
score: 97.41806640625
patch: logger / * /
rank: 987
score: 93.27452087402344
patch: intersection
rank: 988
score: 97.75352172851562
patch: Line ( ) ;
rank: 988
score: 97.50562133789063
patch: infinite / * compute
rank: 988
score: 93.26953125
patch: {
rank: 989
score: 97.82598876953125
patch: / * finally {
rank: 989
score: 97.74392700195312
patch: initialize ( ) ;
rank: 989
score: 97.7384033203125
patch: dispose ( ) ;
rank: 989
score: 97.50362548828124
patch: boolean / * compute
rank: 989
score: 97.39093627929688
patch: / * throws /
rank: 989
score: 92.90277099609375
patch: final
rank: 990
score: 98.44664655412946
patch: assert line 1 == null ;
rank: 990
score: 97.78480834960938
patch: / : * /
rank: 990
score: 97.623095703125
patch: try { / ?
rank: 990
score: 97.59124145507812
patch: } * / /
rank: 990
score: 92.78475952148438
patch: System
rank: 991
score: 97.77285766601562
patch: / / $NUMBER$ ;
rank: 991
score: 97.73026733398437
patch: / * / ;
rank: 991
score: 97.70739135742187
patch: line $NUMBER$ != null
rank: 991
score: 97.61517333984375
patch: flush ( ) ;
rank: 991
score: 97.57899169921875
patch: / * else }
rank: 991
score: 97.48890991210938
patch: if intersection ) {
rank: 991
score: 92.67498779296875
patch: line
rank: 992
score: 97.5762451171875
patch: / ++ * /
rank: 992
score: 97.477001953125
patch: / < * /
rank: 992
score: 97.35614013671875
patch: final / * compute
rank: 992
score: 92.67240905761719
patch: *
rank: 993
score: 97.73671875
patch: / * for (
rank: 993
score: 97.68944091796875
patch: try { else {
rank: 993
score: 97.60806274414062
patch: / / * *
rank: 993
score: 97.35371704101563
patch: throw / * /
rank: 993
score: 97.16665649414062
patch: / * compute
rank: 993
score: 92.59776306152344
patch: boolean
rank: 994
score: 97.53592529296876
patch: / * * {
rank: 994
score: 97.35274047851563
patch: lock ( ) ;
rank: 994
score: 97.3242416381836
patch: int * /
rank: 994
score: 97.0838394165039
patch: * * /
rank: 994
score: 92.5775146484375
patch: public
rank: 995
score: 97.832568359375
patch: for ( ) {
rank: 995
score: 97.68297729492187
patch: / > * /
rank: 995
score: 97.67086181640624
patch: / * * ;
rank: 995
score: 97.60660400390626
patch: reset ( ) ;
rank: 995
score: 97.35139770507813
patch: Line / * /
rank: 995
score: 97.07254791259766
patch: } else {
rank: 995
score: 96.71292114257812
patch: else {
rank: 995
score: 92.49850463867188
patch: Iterator
rank: 996
score: 97.67080078125
patch: Hyperplane ( ) ;
rank: 996
score: 97.60193481445313
patch: wait ( ) ;
rank: 996
score: 97.03028869628906
patch: infinite * /
rank: 996
score: 96.23789469401042
patch: * /
rank: 996
score: 92.46443176269531
patch: this
rank: 997
score: 97.64815063476563
patch: Remaining ( ) ;
rank: 997
score: 97.59523315429688
patch: Line -- 1 ;
rank: 997
score: 97.31256103515625
patch: result / * /
rank: 997
score: 97.12236022949219
patch: / * *
rank: 997
score: 97.08619689941406
patch: if ( line
rank: 997
score: 96.43520100911458
patch: / *
rank: 997
score: 96.17307535807292
patch: else line
rank: 997
score: 92.25483703613281
patch: @
rank: 998
score: 96.84190877278645
patch: try {
rank: 998
score: 92.22479248046875
patch: LOG
rank: 999
score: 94.78703308105469
patch: else
rank: 1000
score: 96.46354166666667
patch: / ;
rank: 1000
score: 96.19364420572917
patch: / ?
rank: 1000
score: 92.14419555664062
patch: My@@
