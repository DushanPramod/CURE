rank: 1
score: 99.88685438368056
patch: for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 1
score: 99.87046305338542
patch: for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 1
score: 99.86009216308594
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 2
score: 99.85871124267578
patch: for ( int i = k ; i <= n ; i ++ ) {
rank: 2
score: 99.83125
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ )
rank: 2
score: 99.82786560058594
patch: for ( int i = 0 ; i < n ; i ++ ) {
rank: 2
score: 99.8060302734375
patch: for ( int i = k + 1 ; i <= n - k ; i ++ ) {
rank: 3
score: 99.83504486083984
patch: for ( int i = k ; i < n ; i ++ ) {
rank: 3
score: 99.82122802734375
patch: for ( int i = 0 ; i <= n ; i ++ ) {
rank: 4
score: 99.80656602647569
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 4
score: 99.80549621582031
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) {
rank: 4
score: 99.79357192095588
patch: for ( int i = k + 1 ; i <= n ; i ++ )
rank: 5
score: 99.80245971679688
patch: for ( int i = k ; i <= k ; i ++ ) {
rank: 5
score: 99.79769558376736
patch: for ( int i = k + 1 ; i <= k ; i ++ ) {
rank: 5
score: 99.77857123480902
patch: for ( int i = k + 1 ; i < n ; i -- ) {
rank: 5
score: 99.7712158203125
patch: for ( int i = k + 1 ; i < n + 1 ; i ++ ) {
rank: 5
score: 99.76906127929688
patch: for ( int i = k + 1 ; i <= n - 1 ; i ++ ) {
rank: 5
score: 99.76774597167969
patch: for ( int i = 0 ; i < k ; i ++ ) {
rank: 6
score: 99.79035101996527
patch: for ( int i = k + 1 ; i >= n ; i -- ) {
rank: 6
score: 99.7852554321289
patch: for ( int i = k ; i < k ; i ++ ) {
rank: 6
score: 99.76730685763889
patch: for ( int i = k - 1 ; i <= n ; i ++ ) {
rank: 6
score: 99.74943712022569
patch: for ( int i = k + 1 ; i >= n ; i ++ ) {
rank: 6
score: 99.73650512695312
patch: for ( int i = k + 1 ; i < n - k ; i ++ ) {
rank: 7
score: 99.76374647352431
patch: for ( int i = k + 1 ; i <= 0 ; i ++ ) {
rank: 7
score: 99.75817192925348
patch: for ( int i = k + k ; i <= n ; i ++ ) {
rank: 7
score: 99.75141737196181
patch: for ( int i = k + 1 ; i < k ; i ++ ) {
rank: 8
score: 99.75644938151042
patch: for ( int i = $NUMBER$ ; i <= n - 1 ; i ++ ) {
rank: 8
score: 99.74446614583333
patch: for ( int i = 0 ; i <= n ; i ++ )
rank: 8
score: 99.73814086914062
patch: for ( int i = k + 1 ; i <= n + 1 ; i ++ ) {
rank: 8
score: 99.72822651110198
patch: for ( int i = k + 1 ; i <= n - k ; i ++ )
rank: 9
score: 99.74468994140625
patch: for ( int i = 0 ; i < n + 1 ; i ++ ) {
rank: 9
score: 99.73971218532986
patch: for ( int i = 0 + 1 ; i <= n ; i ++ ) {
rank: 9
score: 99.73184543185764
patch: for ( int i = k ; i <= n - k ; i ++ ) {
rank: 10
score: 99.75126647949219
patch: for ( int i = 1 ; i <= n ; i ++ ) {
rank: 10
score: 99.73784722222223
patch: for ( int i = k + 1 ; i >= 0 ; i ++ ) {
rank: 11
score: 99.73944091796875
patch: for ( int i = k - 1 ; i >= n ; i -- ) {
rank: 11
score: 99.73778618706598
patch: for ( int i = k - 1 ; i < n ; i ++ ) {
rank: 11
score: 99.73401557074652
patch: for ( int i = k + 1 ; i <= n ; i -- ) {
rank: 11
score: 99.72206744025735
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { {
rank: 11
score: 99.71965874565973
patch: for ( int i = k ; i < n + 1 ; i ++ ) {
rank: 11
score: 99.70030381944444
patch: for ( int i = 0 ; i <= n - k ; i ++ ) {
rank: 12
score: 99.73605007595486
patch: for ( int i = k + 1 ; i >= k ; i -- ) {
rank: 12
score: 99.73136901855469
patch: for ( int i = 0 ; i <= k ; i ++ ) {
rank: 12
score: 99.72172546386719
patch: for ( int i = 1 ; i < n ; i ++ ) {
rank: 12
score: 99.72027180989583
patch: for ( int i = $NUMBER$ ; i < n ; i ++ )
rank: 12
score: 99.71542019314236
patch: for ( int i = $NUMBER$ + 1 ; i <= n ; i ++ ) {
rank: 13
score: 99.71968587239583
patch: for ( int i = n + 1 ; i <= n ; i ++ ) {
rank: 13
score: 99.71613226996527
patch: for ( int i = k + $NUMBER$ ; i < n ; i ++ ) {
rank: 13
score: 99.71153564453125
patch: for ( int i = k + k ; i <= n - k ; i ++ ) {
rank: 14
score: 99.72014024522569
patch: for ( int i = k - 1 ; i >= 0 ; i -- ) {
rank: 14
score: 99.7168960571289
patch: for ( int i = $NUMBER$ ; i <= $NUMBER$ ; i ++ ) {
rank: 14
score: 99.71540662977431
patch: for ( int i = 0 ; i <= n + 1 ; i ++ ) {
rank: 14
score: 99.68837483723958
patch: for ( int i = 1 ; i <= n - k ; i ++ ) {
rank: 15
score: 99.71276137408088
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ )
rank: 15
score: 99.70941521139706
patch: for ( int i = k + 1 ; i < n ; i ++ )
rank: 15
score: 99.68219604492188
patch: for ( int i = k + 1 ; i < n - 1 ; i ++ ) {
rank: 16
score: 99.70897759331598
patch: for ( int i = $NUMBER$ ; i <= n + 1 ; i ++ ) {
rank: 16
score: 99.7077572471217
patch: for ( int i = k + 1 ; i < n ; i ++ ) { {
rank: 16
score: 99.70614420572916
patch: for ( int i = k ; i <= n ; i ++ )
rank: 16
score: 99.70391167534723
patch: for ( int i = 0 ; i <= n - 1 ; i ++ ) {
rank: 16
score: 99.69595336914062
patch: for ( int i = 1 ; i <= k ; i ++ ) {
rank: 17
score: 99.71162923177083
patch: for ( int i = 0 + 1 ; i < n ; i ++ ) {
rank: 17
score: 99.69520970394737
patch: for ( int i = k + 1 ; i ++ <= n ; i ++ ) {
rank: 17
score: 99.68856201171874
patch: for ( int i = k - 1 ; i <= n - k ; i ++ ) {
rank: 17
score: 99.67752878289474
patch: for ( int i = k + 1 ; i <= n - 1 ; i ++ )
rank: 18
score: 99.70822482638889
patch: for ( int i = k + 1 ; i < 0 ; i ++ ) {
rank: 18
score: 99.70428466796875
patch: for ( int i = $NUMBER$ ; i <= k ; i ++ ) {
rank: 18
score: 99.70395236545139
patch: for ( int i = $NUMBER$ ; i < n - k ; i ++ ) {
rank: 18
score: 99.70309787326389
patch: for ( int i = k - 1 ; i <= k ; i ++ ) {
rank: 18
score: 99.69630262586806
patch: for ( int i = k + 1 ; i >= 0 ; i -- ) {
rank: 18
score: 99.68735080295139
patch: for ( int i = k + 1 ; i == n ; i ++ ) {
rank: 18
score: 99.66100463867187
patch: for ( int i = $NUMBER$ ; i <= n - k - 1 ; i ++ ) {
rank: 19
score: 99.68728798314145
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { {
rank: 19
score: 99.68010864257812
patch: for ( int i = k + k - 1 ; i <= n ; i ++ ) {
rank: 20
score: 99.69514295789931
patch: for ( int i = k + $NUMBER$ ; i <= n ; i ++ ) {
rank: 20
score: 99.68577745225694
patch: for ( int i = k - 1 ; i >= k ; i -- ) {
rank: 21
score: 99.69905853271484
patch: for ( int i = 0 ; i <= 0 ; i ++ ) {
rank: 21
score: 99.68053521050348
patch: for ( int i = k + 1 ; i >= k ; i ++ ) {
rank: 21
score: 99.6795654296875
patch: for ( int i = k + 0 ; i <= n ; i ++ ) {
rank: 21
score: 99.67502170138889
patch: for ( int i = k ; i <= n - 1 ; i ++ ) {
rank: 22
score: 99.69796413845486
patch: for ( int i = k + 1 ; i <= 1 ; i ++ ) {
rank: 22
score: 99.69369167751736
patch: for ( int i = $NUMBER$ ; i < n - 1 ; i ++ ) {
rank: 22
score: 99.69236246744792
patch: for ( int i = k + 1 ; i >= 1 ; i -- ) {
rank: 22
score: 99.68082004123264
patch: for ( int i = k + 1 ; i <= n ; ++ i ) {
rank: 22
score: 99.6749755859375
patch: k ! for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 22
score: 99.67375183105469
patch: for ( int i = 1 ; i < k ; i ++ ) {
rank: 22
score: 99.65132863898026
patch: for ( int i = k + 1 ; i < n - k ; i ++ )
rank: 23
score: 99.69747924804688
patch: for ( int i = 0 ; i < 0 ; i ++ ) {
rank: 23
score: 99.69053649902344
patch: for ( int i = 0 ; i < n ; i -- ) {
rank: 23
score: 99.68234432444854
patch: for ( int i = k - 1 ; i <= n ; i ++ )
rank: 23
score: 99.67130903764205
patch: for ( int i = k + 1 ; i <= n - k - k ; i ++ ) {
rank: 23
score: 99.64393310546875
patch: for ( int i = k + 1 ; i >= n - k ; i ++ ) {
rank: 24
score: 99.68973795572917
patch: for ( int i = k + 1 ; i >= 1 ; i ++ ) {
rank: 24
score: 99.68011881510417
patch: for ( int i = $NUMBER$ ; i <= $NUMBER$ ; i ++ )
rank: 24
score: 99.66644897460938
patch: for ( int i = k + 1 ; i >= n + 1 ; i ++ ) {
rank: 24
score: 99.66050211588542
patch: for ( int i = k + 1 ; i > n ; i ++ ) {
rank: 25
score: 99.67769368489583
patch: for ( int i = $NUMBER$ ; i < n + 1 ; i ++ ) {
rank: 25
score: 99.66678466796876
patch: for ( int i = $NUMBER$ ; i <= n - k - k ; i ++ ) {
rank: 25
score: 99.66187133789063
patch: for ( int i = k + 1 ; i < n ; i ++ ) { ) {
rank: 25
score: 99.65955946180556
patch: for ( int i = n + 1 ; i < n ; i ++ ) {
rank: 25
score: 99.65752495659723
patch: for ( double i = k + 1 ; i <= n ; i ++ ) {
rank: 26
score: 99.66649576822917
patch: for ( int i = $NUMBER$ ; i <= k ; i ++ )
rank: 26
score: 99.65711059570313
patch: for ( int i = k + 1 + 1 ; i <= n ; i ++ ) {
rank: 26
score: 99.65497504340277
patch: for ( int i = k ; i <= n + 1 ; i ++ ) {
rank: 27
score: 99.67694769965277
patch: for ( int i = $NUMBER$ + 1 ; i < n ; i ++ ) {
rank: 27
score: 99.66628689236111
patch: for ( int i = $NUMBER$ ; i <= n + k ; i ++ ) {
rank: 27
score: 99.66611735026042
patch: for ( int i = k + 1 ; i != n ; i ++ ) {
rank: 27
score: 99.65623643663194
patch: for ( int i = k + 1 ; i <= $NUMBER$ ; i ++ ) {
rank: 27
score: 99.65384928385417
patch: for ( int i = i + 1 ; i < n ; i ++ ) {
rank: 28
score: 99.67597791883681
patch: for ( int i = k - 1 ; i <= 0 ; i ++ ) {
rank: 28
score: 99.67176649305556
patch: for ( int i = k + 1 ; i < 1 ; i ++ ) {
rank: 28
score: 99.66448974609375
patch: for ( int i = $NUMBER$ ; i >= $NUMBER$ ; i ++ ) {
rank: 28
score: 99.65608520507813
patch: for ( int i = k + 1 ; i <= n + k ; i ++ ) {
rank: 28
score: 99.6517578125
patch: for ( int i = k + 1 ; i < k + 1 ; i ++ ) {
rank: 28
score: 99.6264981356534
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= i ;
rank: 29
score: 99.65958658854167
patch: for ( int i = 1 ; i <= n ; i ++ )
rank: 29
score: 99.65601695667614
patch: for ( int i = k + 1 ; i <= n - k - 1 ; i ++ ) {
rank: 29
score: 99.65064697265625
patch: for ( int i = k + 1 ; i >= n + 1 ; i -- ) {
rank: 29
score: 99.64956665039062
patch: for ( int i = k ; i <= 1 ; i ++ ) {
rank: 29
score: 99.62476942274306
patch: for ( int i = 1 ; i <= n - 1 ; i ++ ) {
rank: 30
score: 99.67050509982639
patch: for ( int i = k + 1 ; i <= i ; i ++ ) {
rank: 30
score: 99.65956115722656
patch: for ( int i = $NUMBER$ ; i <= 1 ; i ++ ) {
rank: 30
score: 99.652099609375
patch: for ( int i = k + k + 1 ; i <= n ; i ++ ) {
rank: 30
score: 99.64959395559211
patch: for ( int i = k + 1 ; i < n + 1 ; i ++ )
rank: 31
score: 99.67100694444444
patch: for ( int i = k + k ; i < n ; i ++ ) {
rank: 31
score: 99.66349962022569
patch: for ( int i = k - 1 ; i >= 0 ; i ++ ) {
rank: 31
score: 99.66244506835938
patch: for ( int i = 0 ; i <= n ; i -- ) {
rank: 31
score: 99.65864832261029
patch: for ( int i = - 1 ; i <= n ; i ++ ) {
rank: 31
score: 99.65364583333333
patch: for ( int i = 0 ; i < n ; i ++ )
rank: 31
score: 99.6475830078125
patch: for ( int i = k - 1 ; i >= n ; i ++ ) {
rank: 31
score: 99.61912841796875
patch: for ( int i = k + 1 ; i >= n - 1 ; i ++ ) {
rank: 32
score: 99.66046752929688
patch: for ( int i = k - 1 ; i <= n - 1 ; i ++ ) {
rank: 32
score: 99.65135282628677
patch: for ( int i = k + k ; i <= n ; i ++ )
rank: 32
score: 99.647998046875
patch: for ( int i = k + k - k ; i <= n ; i ++ ) {
rank: 32
score: 99.64725952148437
patch: for ( int i = n + 1 ; i < n + 1 ; i ++ ) {
rank: 32
score: 99.61235961914062
patch: for ( int i = k + 1 ; i == n - k ; i ++ ) {
rank: 33
score: 99.64139404296876
patch: for ( int i = k - 1 ; i < n + 1 ; i ++ ) {
rank: 33
score: 99.61176091974431
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += i ;
rank: 34
score: 99.65792507595486
patch: for ( int i = 0 ; i < k + 1 ; i ++ ) {
rank: 34
score: 99.65643988715277
patch: for ( int i = k * 1 ; i <= n ; i ++ ) {
rank: 34
score: 99.64992388556985
patch: for ( int i = $NUMBER$ + 1 ; i <= n ; i ++ )
rank: 34
score: 99.64421251085069
patch: for ( int i = k + 1 ; i >= i ; i -- ) {
rank: 34
score: 99.64343939887152
patch: for ( int i = k + n ; i <= n ; i ++ ) {
rank: 34
score: 99.63951416015625
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { ) {
rank: 34
score: 99.609423828125
patch: for ( int i = n + 1 ; i <= n - k ; i ++ ) {
rank: 35
score: 99.65842895507812
patch: for ( int i = $NUMBER$ + 1 ; i <= n - k ; i ++ ) {
rank: 35
score: 99.65738254123264
patch: for ( int i = k + 1 ; i < k ; i -- ) {
rank: 35
score: 99.64952177159927
patch: for ( int i = 0 ; i <= n ; i ++ ) { {
rank: 35
score: 99.645751953125
patch: k ! for ( int i = k + 1 ; i <= n - k ; i ++ ) {
rank: 35
score: 99.63418240017361
patch: for ( int i = k + 1 ; i < n ; ++ i ) {
rank: 35
score: 99.60708438648896
patch: for ( int i = 0 ; i <= n - k ; i ++ )
rank: 36
score: 99.65039740668402
patch: for ( int i = k + 1 ; i <= max ; i ++ ) {
rank: 36
score: 99.63809204101562
patch: for ( int i = k + 1 ; i < n + n ; i ++ ) {
rank: 36
score: 99.6319580078125
patch: for ( int i = k ; i <= 0 ; i ++ ) {
rank: 37
score: 99.65965576171875
patch: for ( int i = k + 1 ; i < n + k ; i ++ ) {
rank: 37
score: 99.65130615234375
patch: for ( int i = 0 ; i < 1 ; i ++ ) {
rank: 37
score: 99.63340250651042
patch: for ( int i = k + 1 ; i >= n ; ++ i ) {
rank: 37
score: 99.62976752387152
patch: for ( int i = k ; i <= k - 1 ; i ++ ) {
rank: 38
score: 99.64261881510417
patch: k ! for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 38
score: 99.6366455078125
patch: for ( int i = k + 1 ; i < n + $NUMBER$ ; i ++ ) {
rank: 38
score: 99.63233857996323
patch: for ( int i = k + 1 ; i <= k ; i ++ )
rank: 38
score: 99.62947591145833
patch: for ( int i = k ; i < n - 1 ; i ++ ) {
rank: 38
score: 99.59924926757813
patch: for ( int i = k + 1 ; i == n - 1 ; i ++ ) {
rank: 39
score: 99.6490478515625
patch: for ( int i = k - k ; i <= n ; i ++ ) {
rank: 39
score: 99.64742702907986
patch: for ( int i = 0 + 1 ; i <= 0 ; i ++ ) {
rank: 39
score: 99.64609662224265
patch: for ( int i = $NUMBER$ ; i <= n - 1 ; i ++ )
rank: 39
score: 99.6419344815341
patch: for ( int i = k + k - 1 ; i <= n - k ; i ++ ) {
rank: 39
score: 99.62769911024306
patch: for ( int i = k ; i < k - 1 ; i ++ ) {
rank: 40
score: 99.63787841796875
patch: for ( int i = k + k ; i <= n - 1 ; i ++ ) {
rank: 41
score: 99.64669460720486
patch: for ( int i = k + 1 ; i >= $NUMBER$ ; i ++ ) {
rank: 41
score: 99.63693237304688
patch: for ( int i = k ; i < n ; i -- ) {
rank: 41
score: 99.63132052951389
patch: for ( int i = 1 ; i < n + 1 ; i ++ ) {
rank: 41
score: 99.62331028988487
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { )
rank: 42
score: 99.64731174045139
patch: for ( int i = 0 ; i < n - k ; i ++ ) {
rank: 42
score: 99.63680691189236
patch: for ( int i = k + 0 ; i < n ; i ++ ) {
rank: 42
score: 99.63064395680146
patch: for ( int i = 0 ; i < n ; i ++ ) { {
rank: 42
score: 99.59673461914062
patch: for ( int i = k + 1 ; i > n - k ; i ++ ) {
rank: 43
score: 99.64027709960938
patch: for ( int i = k - 1 ; i <= n + 1 ; i ++ ) {
rank: 43
score: 99.63720024956598
patch: for ( int i = $NUMBER$ + k ; i <= n ; i ++ ) {
rank: 43
score: 99.59644775390625
patch: for ( int i = i + 1 ; i <= n - k ; i ++ ) {
rank: 44
score: 99.64407348632812
patch: for ( int i = 0 ; i <= n - k - k ; i ++ ) {
rank: 44
score: 99.63566080729167
patch: for ( int i = k + 1 ; i <= n - k ; i ++ ) { {
rank: 44
score: 99.63132731119792
patch: for ( int i = 0 ; i < n + 1 ; i -- ) {
rank: 44
score: 99.62837727864583
patch: for ( int i = k - 1 ; i >= 1 ; i -- ) {
rank: 44
score: 99.59477403428819
patch: for ( int i = i + 1 ; i <= n ; i ++ ) {
rank: 45
score: 99.62717692057292
patch: for ( int i = k + $NUMBER$ ; i < n ; i -- ) {
rank: 45
score: 99.62095811631944
patch: for ( int i = k ; i <= k + 1 ; i ++ ) {
rank: 45
score: 99.61346435546875
patch: for ( int i = n ; i <= n ; i ++ ) {
rank: 46
score: 99.63660278320313
patch: for ( int i = k - 1 ; i < n - 1 ; i ++ ) {
rank: 46
score: 99.63347778320312
patch: for ( double i = k + 1 ; i <= n - k ; i ++ ) {
rank: 46
score: 99.62532123766448
patch: for ( int i = k + 1 ; i < - 1 ; i ++ ) {
rank: 46
score: 99.61727566189236
patch: for ( int i = k + 1 ; i > n ; i -- ) {
rank: 46
score: 99.61309814453125
patch: for ( int i = k ; i < k + 1 ; i ++ ) {
rank: 46
score: 99.59351303998162
patch: for ( int i = 1 ; i <= n - k ; i ++ )
rank: 47
score: 99.63950602213542
patch: for ( int i = k + 1 ; i > 0 ; i ++ ) {
rank: 47
score: 99.6361572265625
patch: for ( int i = 0 + 1 ; i <= n - 1 ; i ++ ) {
rank: 47
score: 99.63048598345588
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { {
rank: 47
score: 99.6261345358456
patch: for ( int i = k ; i < n ; i ++ ) { {
rank: 47
score: 99.61197662353516
patch: for ( int i = k ; i < 1 ; i ++ ) {
rank: 47
score: 99.59285888671874
patch: for ( int i = 1 ; i <= n - k - 1 ; i ++ ) {
rank: 48
score: 99.63197157118056
patch: for ( int i = 0 ; i < n - 1 ; i ++ ) {
rank: 48
score: 99.63109130859375
patch: for ( int i = k + k + k ; i <= n ; i ++ ) {
rank: 48
score: 99.62394883897569
patch: for ( int i = 0 ; i <= k + 1 ; i ++ ) {
rank: 48
score: 99.61420754825367
patch: for ( int i = k + 1 ; i >= n ; i -- )
rank: 49
score: 99.62843232996323
patch: for ( int i = $NUMBER$ ; i <= n + k ; i ++ )
rank: 49
score: 99.62742106119792
patch: for ( int i = k - 1 ; i < 0 ; i ++ ) {
rank: 49
score: 99.62371215820312
patch: for ( int i = n + 1 ; i <= n + 1 ; i ++ ) {
rank: 49
score: 99.62134552001953
patch: for ( int i = 0 ; i < k ; i -- ) {
rank: 49
score: 99.59125366210938
patch: for ( int i = 0 ; i <= n - k - 1 ; i ++ ) {
rank: 50
score: 99.640869140625
patch: for ( int i = $NUMBER$ ; i < n + k ; i ++ ) {
rank: 50
score: 99.6269287109375
patch: for ( int i = k + 1 ; i <= n - $NUMBER$ ; i ++ ) {
rank: 50
score: 99.62350260416666
patch: for ( int i = k ; i < n ; i ++ )
rank: 50
score: 99.61895751953125
patch: for ( int i = k + 1 ; i < 0 ; i -- ) {
rank: 50
score: 99.6040267944336
patch: for ( int i = k ; i < 0 ; i ++ ) {
rank: 51
score: 99.618408203125
patch: for ( int i = 0 ; i <= 1 ; i ++ ) {
rank: 52
score: 99.62548065185547
patch: for ( int i = $NUMBER$ ; i >= 0 ; i ++ ) {
rank: 52
score: 99.62381591796876
patch: for ( int i = 0 + 1 ; i <= n + 1 ; i ++ ) {
rank: 52
score: 99.61494526110198
patch: for ( int i = k + 1 ; i <= n + 1 ; i ++ )
rank: 52
score: 99.6068179481908
patch: for ( int i = k + 1 ; i >= n ; i -- ) { {
rank: 52
score: 99.60005187988281
patch: for ( int i = n ; i < n ; i ++ ) {
rank: 54
score: 99.63765258789063
patch: for ( int i = k - 1 ; i < n - k ; i ++ ) {
rank: 54
score: 99.62265014648438
patch: for ( int i = 0 ; i <= $NUMBER$ ; i ++ ) {
rank: 54
score: 99.62061767578125
patch: for ( int i = k + 1 + 1 ; i < n ; i ++ ) {
rank: 54
score: 99.61231079101563
patch: for ( int i = k + 1 ; i <= k + 1 ; i ++ ) {
rank: 54
score: 99.58951608758224
patch: for ( int i = k + 1 ; i < n - 1 ; i ++ )
rank: 55
score: 99.61223754882812
patch: for ( Iterator i = n + 1 ; i . has CaMeL Next ( ) ; ) {
rank: 55
score: 99.6025454872533
patch: for ( int i = k + 1 ; i <= k ; i ++ ) { {
rank: 55
score: 99.59526909722223
patch: for ( int i = n + 1 ; i >= n ; i ++ ) {
rank: 55
score: 99.58754272460938
patch: for ( int i = k + 1 ; i >= k - 1 ; i ++ ) {
rank: 56
score: 99.62609185112848
patch: for ( int i = 1 + 1 ; i <= n ; i ++ ) {
rank: 56
score: 99.61838107638889
patch: for ( int i = k - $NUMBER$ ; i <= n ; i ++ ) {
rank: 56
score: 99.60222710503473
patch: for ( int i = k - 1 ; i >= i ; i -- ) {
rank: 56
score: 99.59516906738281
patch: for ( int i = k ; i <= i ; i ++ ) {
rank: 56
score: 99.58414306640626
patch: for ( int i = k + 1 ; i > n - 1 ; i ++ ) {
rank: 57
score: 99.62594265407986
patch: for ( int i = k + 1 ; i > $NUMBER$ ; i ++ ) {
rank: 57
score: 99.62066650390625
patch: for ( int i = $NUMBER$ ; i >= k ; i ++ ) {
rank: 57
score: 99.59441174958882
patch: for ( int i = k + 1 ; i -- <= n ; i ++ ) {
rank: 57
score: 99.58240966796875
patch: for ( int i = k + $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 58
score: 99.61598899147727
patch: for ( int i = k + 1 + 1 ; i <= n - k ; i ++ ) {
rank: 58
score: 99.5822041829427
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log (
rank: 59
score: 99.625048828125
patch: for ( int i = $NUMBER$ + 1 ; i <= n - 1 ; i ++ ) {
rank: 59
score: 99.61811065673828
patch: for ( int i = - 1 ; i <= n ; i ++ )
rank: 59
score: 99.58601888020833
patch: for ( int i = k + 1 ; i > k ; i ++ ) {
rank: 59
score: 99.5808349609375
patch: for ( int i = k + 0 ; i <= n - k ; i ++ ) {
rank: 60
score: 99.63116455078125
patch: for ( int i = $NUMBER$ ; i < k ; i ++ ) {
rank: 60
score: 99.61708170572916
patch: for ( int i = $NUMBER$ ; i >= $NUMBER$ ; i ++ )
rank: 60
score: 99.61211603338069
patch: for ( int i = k + k + 1 ; i <= n - k ; i ++ ) {
rank: 60
score: 99.60563151041667
patch: for ( int i = k ; i < n + n ; i ++ ) {
rank: 60
score: 99.58589895148026
patch: for ( int i = k + 1 ; i <= n ; i 1 ++ ) {
rank: 61
score: 99.6170295266544
patch: for ( int i = k ; i <= n ; i ++ ) { {
rank: 61
score: 99.61112837357955
patch: for ( int i = k + k - k ; i <= n - k ; i ++ ) {
rank: 61
score: 99.60930718315973
patch: for ( int i = k + 1 ; i <= k ; i -- ) {
rank: 61
score: 99.58530787417763
patch: for ( int i = k - 1 ; i <= n ; i ++ ) { {
rank: 61
score: 99.58456759982639
patch: for ( int i = n + 1 ; i <= k ; i ++ ) {
rank: 62
score: 99.61656087239584
patch: for ( int i = $NUMBER$ ; i <= 1 ; i ++ )
rank: 62
score: 99.61600748697917
patch: for ( int i = 0 + 1 ; i >= 0 ; i ++ ) {
rank: 62
score: 99.60838623046875
patch: k ! for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 62
score: 99.60393965871711
patch: for ( int i = k + 1 ; i < n ; i ++ ) { )
rank: 62
score: 99.58525254991319
patch: for ( int i = k + 1 ; i <= k ; ++ i ) {
rank: 63
score: 99.58384704589844
patch: for ( int i = 0 ; i < n ; ++ i ) {
rank: 64
score: 99.61464436848958
patch: for ( int i = k - 1 ; i <= 1 ; i ++ ) {
rank: 64
score: 99.61044491038604
patch: for ( int i = k + 1 ; i <= $NUMBER$ ; i ++ )
rank: 64
score: 99.60581665039062
patch: for ( int i = k + 1 + k ; i <= n ; i ++ ) {
rank: 64
score: 99.60453287760417
patch: for ( int i = k + $NUMBER$ ; i < k ; i ++ ) {
rank: 64
score: 99.60296630859375
patch: for ( int i = k + 1 ; i >= n - 1 ; i -- ) {
rank: 64
score: 99.58079020182292
patch: for ( int i = k ; i <= n ; i ++ ) { ) {
rank: 64
score: 99.57625325520833
patch: for ( int i = k + 1 ; i <= n - k - 1 ; i ++ )
rank: 65
score: 99.62223052978516
patch: for ( int i = $NUMBER$ ; i == n ; i ++ ) {
rank: 65
score: 99.61209445529514
patch: for ( int i = k + 1 ; i <= length ; i ++ ) {
rank: 65
score: 99.60281192555146
patch: for ( int i = 0 ; i < n + 1 ; i ++ )
rank: 65
score: 99.60281032986111
patch: for ( int i = 0 ; i <= n + 1 ; i -- ) {
rank: 66
score: 99.60250244140624
patch: for ( int i = k + 1 ; i <= n + n ; i ++ ) {
rank: 66
score: 99.58047146267361
patch: for ( int i = n + 1 ; i >= n ; i -- ) {
rank: 66
score: 99.57986789279514
patch: for ( int i = k + n ; i < n ; i ++ ) {
rank: 67
score: 99.61024169921875
patch: for ( int i = k + 1 ; i <= k - 1 ; i ++ ) {
rank: 67
score: 99.60038248697917
patch: for ( int i = k ; i < n + 1 ; i -- ) {
rank: 67
score: 99.59988064236111
patch: for ( int i = 0 ; i < n + n ; i ++ ) {
rank: 67
score: 99.57399388363487
patch: for ( int i = $NUMBER$ ; i <= n - k - 1 ; i ++ )
rank: 68
score: 99.61903686523438
patch: for ( int i = k ; i <= n - k - k ; i ++ ) {
rank: 68
score: 99.60999213324652
patch: for ( int i = k / 1 ; i <= n ; i ++ ) {
rank: 69
score: 99.619580078125
patch: for ( int i = k + 1 : n ; i <= n ; i ++ ) {
rank: 69
score: 99.60976833767361
patch: for ( int i = k - 1 ; i < k ; i ++ ) {
rank: 69
score: 99.60610064338235
patch: for ( int i = $NUMBER$ ; i <= n + 1 ; i ++ )
rank: 69
score: 99.60111236572266
patch: for ( int i = $NUMBER$ ; i <= i ; i ++ ) {
rank: 69
score: 99.59654541015625
patch: * / for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 69
score: 99.57867072610294
patch: for ( int i = k - 1 ; i >= n ; i -- )
rank: 70
score: 99.60497368706598
patch: for ( int i = $NUMBER$ - 1 ; i <= n ; i ++ ) {
rank: 70
score: 99.59724731445313
patch: for ( int i = $NUMBER$ + k ; i <= n - k ; i ++ ) {
rank: 70
score: 99.59646606445312
patch: for ( int i = k - 1 ; i >= n + 1 ; i -- ) {
rank: 70
score: 99.57603624131944
patch: for ( double i = k + 1 ; i < n ; i ++ ) {
rank: 71
score: 99.59893120659723
patch: for ( int i = k + 1 ; i >= $NUMBER$ ; i -- ) {
rank: 71
score: 99.5959716796875
patch: for ( int i = k + 1 ; i <= k - k ; i ++ ) {
rank: 71
score: 99.57595486111111
patch: for ( int i = k - 1 ; i <= n ; ++ i ) {
rank: 71
score: 99.57476806640625
patch: for ( int i = k ; i <= n ; i -- ) {
rank: 72
score: 99.61874389648438
patch: for ( int i = k + k - 1 ; i < n ; i ++ ) {
rank: 72
score: 99.60431985294117
patch: for ( int i = k - 1 ; i < n ; i ++ )
rank: 72
score: 99.59590454101563
patch: for ( int i = k - k ; i <= n - k ; i ++ ) {
rank: 72
score: 99.57036798650569
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum -= i ;
rank: 73
score: 99.6034797219669
patch: for ( int i = 0 + 1 ; i <= n ; i ++ )
rank: 73
score: 99.59829372829861
patch: for ( int i = k + 1 ; i < $NUMBER$ ; i ++ ) {
rank: 73
score: 99.5954230813419
patch: for ( int i = k + 1 ; i >= n ; i ++ )
rank: 74
score: 99.60884602864583
patch: for ( int i = 0 + 1 ; i < 0 ; i ++ ) {
rank: 74
score: 99.57250258501838
patch: for ( int i = k - 1 ; i >= 0 ; i -- )
rank: 74
score: 99.57123766447368
patch: for ( int i = k + 1 ; i ++ <= k ; i ++ ) {
rank: 75
score: 99.61451416015625
patch: for ( int i = k + 1 - 1 ; i <= n ; i ++ ) {
rank: 75
score: 99.60751953125
patch: for ( int i = 0 + 1 ; i < n - 1 ; i ++ ) {
rank: 75
score: 99.5949951171875
patch: for ( Iterator i = k + 1 ; i . has CaMeL Next ( ) ; ) {
rank: 75
score: 99.56912231445312
patch: for ( int i = n + 1 ; i <= n - 1 ; i ++ ) {
rank: 76
score: 99.60607231987848
patch: for ( int i = k - 1 ; i >= 1 ; i ++ ) {
rank: 76
score: 99.59316837086396
patch: for ( int i = k ; i < n + 1 ; i ++ )
rank: 76
score: 99.57143825954861
patch: for ( Iterator i = n ; i . has CaMeL Next ( ) ; ) {
rank: 76
score: 99.56763305664063
patch: for ( int i = k + 1 ; i != n - k ; i ++ ) {
rank: 77
score: 99.61389770507813
patch: for ( int i = 0 + 1 ; i <= n - k ; i ++ ) {
rank: 77
score: 99.60517713758681
patch: for ( int i = k * 1 ; i < n ; i ++ ) {
rank: 77
score: 99.59438747829861
patch: for ( int i = k + $NUMBER$ ; i <= n ; i -- ) {
rank: 77
score: 99.56450737847223
patch: for ( int i = 1 ; i <= n + 1 ; i ++ ) {
rank: 78
score: 99.60326538085937
patch: for ( int i = k + 1 ; i <= n + $NUMBER$ ; i ++ ) {
rank: 78
score: 99.59899139404297
patch: for ( int i = $NUMBER$ ; i <= 0 ; i ++ ) {
rank: 78
score: 99.59371787623355
patch: for ( int i = k + 1 ; i <= - 1 ; i ++ ) {
rank: 78
score: 99.56458875868056
patch: for ( int i = 1 ; i < n - k ; i ++ ) {
rank: 78
score: 99.56416829427083
patch: for ( int i = 0 ; i <= k - 1 ; i ++ ) {
rank: 79
score: 99.6101303100586
patch: for ( int i = $NUMBER$ ; i != n ; i ++ ) {
rank: 79
score: 99.59841021369485
patch: for ( int i = $NUMBER$ ; i < n - k ; i ++ )
rank: 79
score: 99.59332953559027
patch: for ( int i = k + 1 ; i < 1 ; i -- ) {
rank: 79
score: 99.58966619318181
patch: for ( int i = k + k + k ; i <= n - k ; i ++ ) {
rank: 79
score: 99.56698269314236
patch: for ( Iterator i = k ; i . has CaMeL Next ( ) ; ) {
rank: 80
score: 99.59807990579044
patch: for ( int i = k ; i <= n - k ; i ++ )
rank: 80
score: 99.5918212890625
patch: for ( int i = k + 1 ; i >= k + 1 ; i ++ ) {
rank: 80
score: 99.58980305989583
patch: for ( int i = k + 1 ; i < i ; i ++ ) {
rank: 80
score: 99.56478542751736
patch: for ( int i = k + 1 ; i > k ; i -- ) {
rank: 80
score: 99.56349012586806
patch: for ( int i = k ; i < n ; i ++ ) { ) {
rank: 81
score: 99.60814073350694
patch: for ( int i = k - k ; i < n ; i ++ ) {
rank: 81
score: 99.59785970052083
patch: for ( int i = 0 ; i <= n + k ; i ++ ) {
rank: 81
score: 99.58372497558594
patch: for ( int i = 0 ; i <= k ; i -- ) {
rank: 81
score: 99.56358506944444
patch: for ( int i = k + 1 ; i != k ; i ++ ) {
rank: 82
score: 99.60666232638889
patch: for ( int i = k + 1 ; i > 1 ; i ++ ) {
rank: 82
score: 99.59992811414931
patch: for ( int i = k + $NUMBER$ ; i <= 0 ; i ++ ) {
rank: 82
score: 99.589111328125
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i ) ;
rank: 82
score: 99.58232879638672
patch: for ( int i = 0 ; i < $NUMBER$ ; i ++ ) {
rank: 82
score: 99.56109619140625
patch: for ( int i = k + 1 ; i >= i ; i ++ ) {
rank: 83
score: 99.60725233289931
patch: for ( int i = k ; i < n - k ; i ++ ) {
rank: 83
score: 99.58936225043402
patch: for ( int i = 0 - 1 ; i <= n ; i ++ ) {
rank: 83
score: 99.58808135986328
patch: for ( double i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 83
score: 99.57884385850694
patch: for ( int i = k + $NUMBER$ ; i <= k ; i ++ ) {
rank: 83
score: 99.56193462171052
patch: for ( int i = k + 1 ; i <= n ; ++ ++ i ) {
rank: 83
score: 99.55958658854166
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 84
score: 99.58895534939236
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { { {
rank: 84
score: 99.58807694284539
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) { {
rank: 84
score: 99.5856201171875
patch: for ( int i = k + k + 1 ; i < n ; i ++ ) {
rank: 84
score: 99.56148488898026
patch: for ( int i = k - 1 ; i >= n ; i -- ) { {
rank: 84
score: 99.55885009765625
patch: for ( int i = k ; i <= n - k - 1 ; i ++ ) {
rank: 85
score: 99.60673217773437
patch: for ( int i = k + 1 - 1 ; i < n ; i ++ ) {
rank: 85
score: 99.59822998046874
patch: for ( int i = 0 + 1 ; i < n + 1 ; i ++ ) {
rank: 85
score: 99.58450317382812
patch: for ( int i = k + 1 ; i >= k + 1 ; i -- ) {
rank: 85
score: 99.57725016276042
patch: for ( int i = k + 1 ; i <= 0 ; i -- ) {
rank: 85
score: 99.55656294389205
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += i ;
rank: 86
score: 99.60285780164931
patch: for ( int i = k - 1 ; i == n ; i ++ ) {
rank: 86
score: 99.58844353170956
patch: for ( int i = k + $NUMBER$ ; i <= n ; i ++ )
rank: 86
score: 99.5875244140625
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log (
rank: 86
score: 99.58421566611842
patch: for ( int i = k + 1 ; i >= n ; i ++ ) { {
rank: 86
score: 99.57716200086806
patch: for ( int i = k + 1 ; i < $STRING$ ; i ++ ) {
rank: 86
score: 99.55836995442708
patch: for ( int i = k - 1 ; i >= n ; ++ i ) {
rank: 86
score: 99.55617453835227
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum -= i ;
rank: 87
score: 99.6036376953125
patch: for ( int i = - 1 ; i < n ; i ++ ) {
rank: 87
score: 99.60269325657895
patch: for ( int i = k + - 1 ; i <= n ; i ++ ) {
rank: 87
score: 99.59698486328125
patch: for ( int i = 0 ; i < k - 1 ; i ++ ) {
rank: 87
score: 99.58744542738971
patch: for ( int i = k + 1 ; i >= $NUMBER$ ; i ++ )
rank: 87
score: 99.583544921875
patch: for ( int i = k - 1 ; i >= n + 1 ; i ++ ) {
rank: 87
score: 99.55799102783203
patch: for ( int i = k ; i >= n ; i -- ) {
rank: 87
score: 99.55539422286184
patch: for ( int i = k + 1 ; i <= n 1 ; i ++ ) {
rank: 88
score: 99.59689670138889
patch: for ( int i = 0 + 1 ; i >= n ; i ++ ) {
rank: 88
score: 99.58612615411931
patch: k ! for ( int i = k + 1 ; i <= n - 1 ; i ++ ) {
rank: 88
score: 99.58584415211396
patch: for ( int i = k - k ; i <= n ; i ++ )
rank: 88
score: 99.58323838975694
patch: for ( int i = 0 ; i < n ; i ++ ) { ) {
rank: 88
score: 99.57561934621711
patch: for ( int i = k + 1 ; i >= - 1 ; i ++ ) {
rank: 88
score: 99.55755615234375
patch: for ( int i = n - 1 ; i <= n ; i ++ ) {
rank: 88
score: 99.5554263466283
patch: for ( int i = k + 1 ; i >= n - k ; i ++ )
rank: 89
score: 99.596142578125
patch: for ( int i = k + $NUMBER$ ; i <= n - 1 ; i ++ ) {
rank: 89
score: 99.58485322840073
patch: for ( int i = k + 1 ; i == n ; i ++ )
rank: 89
score: 99.58421947337963
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( i ) ;
rank: 89
score: 99.55458577473958
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += log CaMeL Sum ;
rank: 90
score: 99.60173034667969
patch: for ( int i = $NUMBER$ ; i < 1 ; i ++ ) {
rank: 90
score: 99.59612358940973
patch: for ( int i = k + 1 ; i <= start ; i ++ ) {
rank: 90
score: 99.58369276258681
patch: for ( double i = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 90
score: 99.55435180664062
patch: for ( int i = k + 1 ; i <= n - 0 ; i ++ ) {
rank: 90
score: 99.55134851792279
patch: for ( int i = k ; i <= n ; i ++ ) { )
rank: 91
score: 99.59465874565973
patch: for ( int i = 0 + 1 ; i <= k ; i ++ ) {
rank: 91
score: 99.5563103170956
patch: for ( int i = k + 1 ; i >= k ; i -- )
rank: 91
score: 99.5528564453125
patch: for ( int i = k + 1 ; i < k - 1 ; i ++ ) {
rank: 91
score: 99.55105590820312
patch: for ( int i = n ; i <= k ; i ++ ) {
rank: 92
score: 99.5793392783717
patch: * for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 92
score: 99.55253295898437
patch: for ( int i = k + 1 ; i <= n - k ; i -- ) {
rank: 93
score: 99.57984834558823
patch: for ( int i = k + 0 ; i <= n ; i ++ )
rank: 93
score: 99.57918701171874
patch: for ( int i = k + 1 ; i < n - n ; i ++ ) {
rank: 93
score: 99.56586371527777
patch: for ( int i = n + 1 ; i < n ; i -- ) {
rank: 93
score: 99.5554134971217
patch: for ( int i = k + 1 ; i >= k ; i -- ) { {
rank: 93
score: 99.5525146484375
patch: for ( int i = k + 1 ; i <= i - 1 ; i ++ ) {
rank: 94
score: 99.5996337890625
patch: for ( int i = $NUMBER$ + 1 ; i < n - k ; i ++ ) {
rank: 94
score: 99.58138333834134
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log (
rank: 94
score: 99.56559244791667
patch: for ( int i = 0 ; i < n + $NUMBER$ ; i ++ ) {
rank: 94
score: 99.55188598632813
patch: for ( int i = k + 1 ; i != n - 1 ; i ++ ) {
rank: 95
score: 99.59591064453124
patch: for ( int i = 1 ; i <= n - k - k ; i ++ ) {
rank: 95
score: 99.59302978515625
patch: for ( int i = k + 1 ; i <= length - 1 ; i ++ ) {
rank: 95
score: 99.58134321732955
patch: for ( int i = k + k - 1 ; i <= n - 1 ; i ++ ) {
rank: 95
score: 99.57891845703125
patch: for ( int i = k + n + 1 ; i < n ; i ++ ) {
rank: 95
score: 99.54679361979167
patch: for ( int i = 1 ; i <= k - 1 ; i ++ ) {
rank: 96
score: 99.59347873263889
patch: for ( int i = $NUMBER$ ; i <= k - 1 ; i ++ ) {
rank: 96
score: 99.57793782552083
patch: for ( int i = 0 ; i <= $NUMBER$ ; i ++ )
rank: 96
score: 99.55478922526042
patch: for ( int i = k - 1 ; i >= k ; i ++ ) {
rank: 96
score: 99.55162963867187
patch: for ( int i = $NUMBER$ ; i < n - k - 1 ; i ++ ) {
rank: 96
score: 99.54486083984375
patch: for ( int i = n ; i < k ; i ++ ) {
rank: 97
score: 99.59124145507812
patch: for ( int i = k + 1 ; i <= max - 1 ; i ++ ) {
rank: 97
score: 99.577392578125
patch: for ( int i = k + 1 ; i <= 1 ; i ++ )
rank: 97
score: 99.56435675370066
patch: } for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 97
score: 99.55299287683823
patch: for ( int i = k + 1 ; i <= n ; ++ i )
rank: 97
score: 99.55037434895833
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log (
rank: 98
score: 99.59064398871527
patch: for ( int i = k + 1 ; i <= size ; i ++ ) {
rank: 98
score: 99.57833862304688
patch: for ( int i = i + 1 ; i < n + 1 ; i ++ ) {
rank: 98
score: 99.57671760110294
patch: for ( int i = 0 ; i <= n - 1 ; i ++ )
rank: 98
score: 99.55251736111111
patch: for ( float i = k + 1 ; i <= n ; i ++ ) {
rank: 98
score: 99.54314422607422
patch: for ( int i = k ; i < i ; i ++ ) {
rank: 99
score: 99.59157986111111
patch: for ( int i = k - 0 ; i <= n ; i ++ ) {
rank: 99
score: 99.58846435546874
patch: for ( int i = k + 1 ; i < n - $NUMBER$ ; i ++ ) {
rank: 99
score: 99.57620059742646
patch: for ( int i = $NUMBER$ ; i <= $NUMBER$ ; i ++ ) { {
rank: 99
score: 99.55195886948529
patch: for ( int i = k - 1 ; i <= k ; i ++ )
rank: 100
score: 99.576171875
patch: for ( int i = k ; i <= $NUMBER$ ; i ++ ) {
rank: 100
score: 99.56118435329861
patch: for ( int i = k + 1 ; i < size ; i ++ ) {
rank: 100
score: 99.55103217230902
patch: for ( int i = k - 1 ; i > n ; i -- ) {
rank: 100
score: 99.54045952690973
patch: for ( int i = 1 ; i < k - 1 ; i ++ ) {
rank: 101
score: 99.58909912109375
patch: for ( int i = k + 1 ; i > k - 1 ; i ++ ) {
rank: 101
score: 99.58620198567708
patch: for ( int i = 0 + 1 ; i < k ; i ++ ) {
rank: 101
score: 99.56056614925987
patch: for ( int i = k + 1 ; i < n ; i 1 ++ ) {
rank: 102
score: 99.59097290039062
patch: for ( int i = $NUMBER$ : n - 1 ; i <= n ; i ++ ) {
rank: 102
score: 99.5859146118164
patch: for ( int i = 0 ; i <= i ; i ++ ) {
rank: 102
score: 99.57704380580357
patch: for ( int i = k + 1 ; i <= n - 1 ; i ++ ) { {
rank: 102
score: 99.57692260742188
patch: * / for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 102
score: 99.57579130284927
patch: for ( int i = $NUMBER$ ; i <= k ; i ++ ) { {
rank: 102
score: 99.55915069580078
patch: for ( int i = k ; i < k ; i -- ) {
rank: 102
score: 99.54854329427083
patch: for ( int i = k + 1 ; i >= k ; ++ i ) {
rank: 103
score: 99.5879150390625
patch: for ( int i = k + 1 ; i >= k - k ; i ++ ) {
rank: 103
score: 99.57699924045139
patch: for ( int i = $NUMBER$ ; i <= i - k ; i ++ ) {
rank: 103
score: 99.57526397705078
patch: for ( int i = $NUMBER$ ; i >= n ; i ++ ) {
rank: 103
score: 99.55888536241319
patch: for ( int i = k ; i <= n + 1 ; i -- ) {
rank: 104
score: 99.5879135131836
patch: for ( int i = $NUMBER$ ; i > $NUMBER$ ; i ++ ) {
rank: 104
score: 99.57674831814236
patch: if ( ( k == 1 ) || ( k == n - 1 ) ) {
rank: 104
score: 99.57524871826172
patch: for ( int i = $NUMBER$ ; i >= 1 ; i ++ ) {
rank: 104
score: 99.55845731847427
patch: for ( int i = 0 ; i < - 1 ; i ++ ) {
rank: 104
score: 99.54594116210937
patch: for ( int i = i + 1 ; i <= n - 1 ; i ++ ) {
rank: 104
score: 99.54578399658203
patch: for ( int i = k ; i >= k ; i -- ) {
rank: 104
score: 99.53827582465277
patch: for ( int i = 1 ; i < n - 1 ; i ++ ) {
rank: 105
score: 99.58408203125
patch: for ( int i = k + 1 ; i <= start - 1 ; i ++ ) {
rank: 105
score: 99.57440544577206
patch: for ( int i = 1 ; i <= n ; i ++ ) { {
rank: 105
score: 99.54571533203125
patch: for ( int i = n + 1 ; i < n - k ; i ++ ) {
rank: 106
score: 99.58338080512152
patch: for ( int i = k - $NUMBER$ ; i < n ; i ++ ) {
rank: 106
score: 99.54537760416666
patch: for ( int i = k ; i <= k ; i ++ )
rank: 106
score: 99.53799099392361
patch: for ( int i = k + 1 && i <= n ; i ++ ) {
rank: 107
score: 99.58575439453125
patch: for ( int i = k + k ; i < n - k ; i ++ ) {
rank: 107
score: 99.57418212890624
patch: for ( double i = k + 1 ; i <= n - 1 ; i ++ ) {
rank: 107
score: 99.57303873697917
patch: for ( int i = $NUMBER$ ; i >= 0 ; i ++ )
rank: 107
score: 99.55518256293402
patch: for ( int i = k + 1 ; i <= 1 ; i -- ) {
rank: 107
score: 99.54234730113636
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum -= i ;
rank: 107
score: 99.53788677014802
patch: for ( int i = k + + 1 ; i <= n ; i ++ ) {
rank: 108
score: 99.58468627929688
patch: for ( int i = k + 1 ; i <= n : n ; i ++ ) {
rank: 108
score: 99.57383897569444
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( k ) ;
rank: 108
score: 99.57201430376838
patch: for ( int i = k + k ; i < n ; i ++ )
rank: 108
score: 99.55356174045139
patch: for ( int i = k + $NUMBER$ ; i >= 0 ; i -- ) {
rank: 108
score: 99.53771294487848
patch: for ( int i = start + 1 ; i <= n ; i ++ ) {
rank: 109
score: 99.58184136284723
patch: for ( int i = 0 + 1 ; i <= 1 ; i ++ ) {
rank: 109
score: 99.54311009457237
patch: for ( int i = k - 1 ; i >= 0 ; i -- ) { {
rank: 109
score: 99.53746880425348
patch: for ( int i = k + 0 ; i <= k ; i ++ ) {
rank: 110
score: 99.5855712890625
patch: for ( int i = k + 1 ; i + 1 <= n ; i ++ ) {
rank: 110
score: 99.57322387695312
patch: k ! for ( int i = k + k ; i <= n ; i ++ ) {
rank: 110
score: 99.57011583116319
patch: for ( int i = $NUMBER$ ; i <= k - k ; i ++ ) {
rank: 110
score: 99.55194769965277
patch: for ( int i = 0 ; i < k + 1 ; i -- ) {
rank: 110
score: 99.54291130514706
patch: for ( i = k + 1 ; i <= n ; i ++ ) {
rank: 110
score: 99.5411376953125
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += i ;
rank: 110
score: 99.53643120659723
patch: for ( int i = n + 1 ; i < k ; i ++ ) {
rank: 111
score: 99.58151584201389
patch: for ( int i = 0 + $NUMBER$ ; i <= n ; i ++ ) {
rank: 111
score: 99.56943359375
patch: for ( int i = $NUMBER$ ; i >= k ; i ++ )
rank: 111
score: 99.55131450452302
patch: for ( int i = k + 1 ; i < - 1 ; i -- ) {
rank: 111
score: 99.54287237870066
patch: for ( int i = k + 1 ; i <= k + 1 ; i ++ )
rank: 111
score: 99.54052734375
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum -= i ;
rank: 112
score: 99.58407432154605
patch: for ( int i = - 1 ; i <= n - k ; i ++ ) {
rank: 112
score: 99.58092583550348
patch: for ( int i = 1 + 1 ; i < n ; i ++ ) {
rank: 112
score: 99.56957397460937
patch: for ( int i = k - 1 ; i >= n - 1 ; i -- ) {
rank: 112
score: 99.56788545496323
patch: for ( int i = $NUMBER$ + 1 ; i < n ; i ++ )
rank: 112
score: 99.55096435546875
patch: for ( int i = k + $NUMBER$ ; i >= 1 ; i -- ) {
rank: 113
score: 99.54993438720703
patch: for ( int i = 0 ; i < $STRING$ ; i ++ ) {
rank: 113
score: 99.5423355102539
patch: for ( int i = 0 ; i <= n ; ++ i ) {
rank: 113
score: 99.5392578125
patch: for ( int i = 1 + 1 ; i <= n - k ; i ++ ) {
rank: 114
score: 99.57832336425781
patch: for ( int i = 0 ; i < i ; i ++ ) {
rank: 114
score: 99.56857299804688
patch: / * for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 114
score: 99.54873318142361
patch: for ( int i = k + 1 ; i <= $STRING$ ; i ++ ) {
rank: 114
score: 99.54140111019737
patch: * for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 114
score: 99.53892450747283
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { return log CaMeL Sum ;
rank: 114
score: 99.53361430921052
patch: for ( int i = n + 1 ; i ++ <= n ; i ++ ) {
rank: 115
score: 99.58226860894098
patch: for ( int i = k - 1 ; i != n ; i ++ ) {
rank: 115
score: 99.5709228515625
patch: for ( int i = k + k ; i <= n - k - k ; i ++ ) {
rank: 115
score: 99.56856960720486
patch: for ( int k = k + 1 ; i < n ; i ++ ) {
rank: 115
score: 99.5671142578125
patch: for ( int i = $NUMBER$ ; i == n ; i ++ )
rank: 115
score: 99.54842800564236
patch: for ( int i = k + $NUMBER$ ; i >= 0 ; i ++ ) {
rank: 115
score: 99.538818359375
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { return log CaMeL Sum ;
rank: 116
score: 99.57562255859375
patch: for ( int i = 0 + n ; i <= n ; i ++ ) {
rank: 116
score: 99.5645392922794
patch: for ( int i = $NUMBER$ - 1 ; i <= n ; i ++ )
rank: 116
score: 99.53278664981617
patch: for ( int i = k ; i < n ; i ++ ) { )
rank: 117
score: 99.57786158511513
patch: for ( int i = k + 1 ; i < n 1 ; i ++ ) {
rank: 117
score: 99.57557508680556
patch: for ( int i = 0 + 0 ; i <= n ; i ++ ) {
rank: 117
score: 99.56974283854167
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( k ) ;
rank: 117
score: 99.54741753472223
patch: for ( int i = k + 0 ; i < n ; i -- ) {
rank: 117
score: 99.54006958007812
patch: for ( int i = k ; i <= n ; ++ i ) {
rank: 117
score: 99.53605346679687
patch: for ( int i = $NUMBER$ ; i <= n - k + 1 ; i ++ ) {
rank: 117
score: 99.53211127387152
patch: for ( Iterator i = k + 1 ; i < n ; i ++ ) {
rank: 118
score: 99.5816162109375
patch: for ( int i = k + 0 ; i <= n - 1 ; i ++ ) {
rank: 118
score: 99.57772488064236
patch: for ( int i = 0 ; i < n + k ; i ++ ) {
rank: 118
score: 99.54699028862848
patch: for ( int i = 0 ; i <= n + $NUMBER$ ; i ++ ) {
rank: 118
score: 99.53887939453125
patch: for ( int i = k - 1 ; i > 0 ; i -- ) {
rank: 118
score: 99.53119217722039
patch: for ( int i = k + 1 ; i <= n ; i ] ++ ) {
rank: 119
score: 99.57760620117188
patch: for ( int i = k - 1 ; i <= n + k ; i ++ ) {
rank: 119
score: 99.57506103515625
patch: for ( int i = k , n = k ; i < n ; i ++ ) {
rank: 119
score: 99.56302083333334
patch: for ( int i = 0 ; i <= k ; i ++ )
rank: 119
score: 99.54665798611111
patch: for ( int i = k + $NUMBER$ ; i < 0 ; i ++ ) {
rank: 119
score: 99.53847249348958
patch: for ( int n = k + 1 ; n <= n ; n ++ ) {
rank: 119
score: 99.53541324013158
patch: for ( int i = k + 1 + 1 ; i <= n ; i ++ )
rank: 119
score: 99.53080669202302
patch: for ( int i = k + 1 ; i >> <= n ; i ++ ) {
rank: 120
score: 99.5801513671875
patch: for ( int i = $NUMBER$ ; i < n - k - k ; i ++ ) {
rank: 120
score: 99.56757146661931
patch: for ( int i = k + 1 ; i <= n - 1 - k ; i ++ ) {
rank: 120
score: 99.56270599365234
patch: for ( int i = $NUMBER$ ; i < $NUMBER$ ; i ++ ) {
rank: 120
score: 99.54660373263889
patch: for ( int i = k + $NUMBER$ ; i >= 1 ; i ++ ) {
rank: 120
score: 99.53512369791666
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 121
score: 99.5770263671875
patch: for ( int i = 0 ; i == n ; i ++ ) {
rank: 121
score: 99.56743829900569
patch: for ( int i = k + 1 + k ; i <= n - k ; i ++ ) {
rank: 121
score: 99.56329666940789
patch: for ( int i = k - 1 ; i < n ; i ++ ) { {
rank: 121
score: 99.54584418402777
patch: for ( int i = k ; i < n + $NUMBER$ ; i ++ ) {
rank: 121
score: 99.52944946289062
patch: for ( int i = 1 ; i <= 1 ; i ++ ) {
rank: 122
score: 99.56644897460937
patch: for ( int i = $NUMBER$ + k - 1 ; i <= n ; i ++ ) {
rank: 122
score: 99.56290283203126
patch: for ( int i = n + 1 ; i < n - 1 ; i ++ ) {
rank: 122
score: 99.52921549479167
patch: for ( int i = k + 0 ; i >= n ; i ++ ) {
rank: 123
score: 99.57630004882813
patch: for ( int i = $NUMBER$ + 1 ; i < n - 1 ; i ++ ) {
rank: 123
score: 99.55860811121323
patch: for ( int i = k + 1 ; i >= 0 ; i ++ )
rank: 123
score: 99.53624131944444
patch: for ( int i = n - 1 ; i >= n ; i -- ) {
rank: 124
score: 99.568798828125
patch: for ( int i = k + 1 ; i <= n / 1 ; i ++ ) {
rank: 124
score: 99.56138851768092
patch: for ( int i = 0 ; i < n + 1 ; i ++ ) { {
rank: 124
score: 99.54410593133224
patch: for ( int i = k + 1 ; i >= - 1 ; i -- ) {
rank: 124
score: 99.53494601779514
patch: for ( long i = k + 1 ; i <= n ; i ++ ) {
rank: 124
score: 99.53319251019022
patch: for ( int i = k ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 124
score: 99.52688259548611
patch: for ( int i = k ; i <= k ; i ++ ) { ) {
rank: 125
score: 99.56853569878473
patch: for ( int i = k + 1 ; i < max ; i ++ ) {
rank: 125
score: 99.5598388671875
patch: for ( int i = k + n + 1 ; i <= n ; i ++ ) {
rank: 125
score: 99.55483111213235
patch: for ( int i = k + 1 ; i >= k ; i ++ )
rank: 125
score: 99.54379754317434
patch: } for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 125
score: 99.53466118706598
patch: for ( int i = 0 + n ; i < n ; i ++ ) {
rank: 125
score: 99.53302001953125
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log (
rank: 125
score: 99.52662489149306
patch: for ( int i = k + n ; i >= n ; i ++ ) {
rank: 126
score: 99.56314890008224
patch: / for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 126
score: 99.54327392578125
patch: for ( int i = k + 1 ; i < length ; i ++ ) {
rank: 127
score: 99.568310546875
patch: for ( int i = k + $NUMBER$ ; i <= n + 1 ; i ++ ) {
rank: 127
score: 99.56204833984376
patch: k ! for ( int i = $NUMBER$ ; i <= n - 1 ; i ++ ) {
rank: 127
score: 99.54263644748264
patch: for ( int i = 0 ; i <= n / 1 ; i ++ ) {
rank: 128
score: 99.56814575195312
patch: for ( int i = k + 1 ; i <= 0 + 1 ; i ++ ) {
rank: 128
score: 99.56190321180556
patch: for ( int i = k ; i <= n + k ; i ++ ) {
rank: 128
score: 99.55412023207721
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { }
rank: 129
score: 99.57664659288194
patch: for ( int i = $NUMBER$ ; i == n - 1 ; i ++ ) {
rank: 129
score: 99.56663818359375
patch: for ( int i = k + 1 ; i <= i + 1 ; i ++ ) {
rank: 129
score: 99.56174926757812
patch: for ( int i = k + 1 ; i <= i - k ; i ++ ) {
rank: 129
score: 99.54061550564236
patch: for ( int i = 0 + 1 ; i < n ; i -- ) {
rank: 130
score: 99.56642659505208
patch: for ( int i = k - 1 ; i <= i ; i ++ ) {
rank: 130
score: 99.55750732421875
patch: for ( int i = k + 1 ; i >= n + n ; i ++ ) {
rank: 130
score: 99.55357450597427
patch: for ( int i = 0 ; i <= n + k ; i ++ )
rank: 130
score: 99.53109741210938
patch: for ( int i = k + 1 ; i <= n - k ; ++ i ) {
rank: 130
score: 99.52265930175781
patch: for ( int i = 1 ; i <= 0 ; i ++ ) {
rank: 131
score: 99.56076388888889
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( n ) ;
rank: 131
score: 99.55745849609374
patch: for ( int i = k + 1 ; i <= n - n ; i ++ ) {
rank: 131
score: 99.54012044270833
patch: for ( int i = k + 1 ; 1 <= n ; i ++ ) {
rank: 131
score: 99.52986225328948
patch: for ( final int i = k + 1 ; i <= n ; i ++ ) {
rank: 131
score: 99.52078586154514
patch: for ( int i = 1 ; i <= k + 1 ; i ++ ) {
rank: 132
score: 99.56416829427083
patch: for ( int i = k * 1 ; i <= 0 ; i ++ ) {
rank: 132
score: 99.55901489257812
patch: n ! for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 133
score: 99.5634765625
patch: / * for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 133
score: 99.55886358963816
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { }
rank: 133
score: 99.55523360402961
patch: for ( int i = k + 1 ; i >= n + 1 ; i ++ )
rank: 133
score: 99.55161539713542
patch: for ( int i = k - 1 ; i <= $NUMBER$ ; i ++ ) {
rank: 134
score: 99.57499389648437
patch: for ( int i = k + 0 + 1 ; i <= n ; i ++ ) {
rank: 134
score: 99.5723015280331
patch: for ( int i = $NUMBER$ ; i <= n 1 ; i ++ ) {
rank: 134
score: 99.55837180397727
patch: for ( int i = k + 1 + 1 ; i <= n - 1 ; i ++ ) {
rank: 134
score: 99.55509948730469
patch: for ( int i = i ; i < n ; i ++ ) {
rank: 134
score: 99.55154418945312
patch: for ( int i = 0 ; i >= $NUMBER$ ; i ++ ) {
rank: 134
score: 99.53789206112133
patch: for ( int i = k + 1 ; i < n ; i -- )
rank: 134
score: 99.52641858552632
patch: for ( int i = k + 1 ; i >= n - 1 ; i ++ )
rank: 134
score: 99.51894962086396
patch: for ( int i = k + ; i <= n ; i ++ ) {
rank: 135
score: 99.55794270833333
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { k ++ ;
rank: 135
score: 99.55509225945724
patch: for ( int i = k ; i < n + 1 ; i ++ ) { {
rank: 135
score: 99.55013834635416
patch: for ( int i = $NUMBER$ ; i <= 0 ; i ++ )
rank: 135
score: 99.53770616319444
patch: for ( int i = k - 1 ; i < n ; i -- ) {
rank: 135
score: 99.52638872931985
patch: for ( int i = k - 1 ; i >= k ; i -- )
rank: 135
score: 99.51888275146484
patch: for ( int i = k ; i <= k ; i -- ) {
rank: 136
score: 99.57062445746527
patch: for ( int i = $NUMBER$ ; i <= i - 1 ; i ++ ) {
rank: 136
score: 99.55662231445312
patch: for ( int i = k + 1 - k ; i <= n ; i ++ ) {
rank: 136
score: 99.54988367417279
patch: for ( int i = - k ; i <= n ; i ++ ) {
rank: 136
score: 99.53708224826389
patch: for ( String i = k + 1 ; i <= n ; i ++ ) {
rank: 136
score: 99.52576968544408
patch: for ( int i = k + 1 ; i == n - k ; i ++ )
rank: 136
score: 99.52571614583333
patch: for ( float i = k + 1 ; i < n ; i ++ ) {
rank: 136
score: 99.51864284939236
patch: for ( int i = 1 ; i < k + 1 ; i ++ ) {
rank: 137
score: 99.56112331814236
patch: for ( int i = k - 1 ; i < 1 ; i ++ ) {
rank: 137
score: 99.55523003472223
patch: for ( int i = $NUMBER$ + $NUMBER$ ; i <= n ; i ++ ) {
rank: 137
score: 99.53453233506944
patch: for ( int i = k ; i <= n / 1 ; i ++ ) {
rank: 137
score: 99.52456485523896
patch: for ( int i = k ; i <= k ; i ++ ) { {
rank: 137
score: 99.51777729235198
patch: for ( int i = k [ 1 ] ; i <= n ; i ++ ) {
rank: 138
score: 99.55523003472223
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( n ) ;
rank: 138
score: 99.55482177734375
patch: for ( int i = k - 1 ; i >= n - 1 ; i ++ ) {
rank: 138
score: 99.52400346235795
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += i ;
rank: 138
score: 99.5174201516544
patch: for ( int i = k + 1 ; i -- <= n ; ) {
rank: 139
score: 99.5533114346591
patch: k ! for ( int i = k + k ; i <= n - k ; i ++ ) {
rank: 139
score: 99.55322265625
patch: for ( int i = k ; i >= n ; i ++ ) {
rank: 139
score: 99.5483169555664
patch: for ( int i = 1 ; i <= $NUMBER$ ; i ++ ) {
rank: 139
score: 99.53410339355469
patch: for ( int i = 0 ; i < 1 ; i -- ) {
rank: 139
score: 99.52339477539063
patch: for ( int i = i + 1 ; i < n - k ; i ++ ) {
rank: 139
score: 99.52315027573529
patch: for ( int i = 0 + 1 ; i < n ; i ++ )
rank: 139
score: 99.51711138556985
patch: for ( int i = k ; i < n ; i 1 ++ ) {
rank: 140
score: 99.55919189453125
patch: for ( int i = k - 1 + 1 ; i < n ; i ++ ) {
rank: 140
score: 99.53409616570724
patch: for ( int i = k + 1 ; i < n ; i += 1 ) {
rank: 140
score: 99.5233154296875
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum -= i ;
rank: 140
score: 99.51707699424342
patch: for ( int i = k - 1 ; i ++ <= n ; i ++ ) {
rank: 141
score: 99.56876220703126
patch: for ( int i = $NUMBER$ + 1 ; i <= n + 1 ; i ++ ) {
rank: 141
score: 99.558349609375
patch: for ( int i = k - 1 ; i <= max ; i ++ ) {
rank: 141
score: 99.552880859375
patch: for ( int i = k - 1 ; i >= k - 1 ; i -- ) {
rank: 141
score: 99.55209189967105
patch: for ( int i = k + k ; i <= n ; i ++ ) { {
rank: 141
score: 99.54617130055146
patch: for ( int i = 0 - 1 ; i <= n ; i ++ )
rank: 141
score: 99.51652018229167
patch: for ( int i = n + 1 ; i <= n ; i -- ) {
rank: 142
score: 99.56833224826389
patch: for ( int i = $NUMBER$ - 1 ; i < n ; i ++ ) {
rank: 142
score: 99.55185768821023
patch: for ( int i = k + 1 - 1 ; i <= n - k ; i ++ ) {
rank: 142
score: 99.52243221507354
patch: for ( int i = 1 ; i <= n - 1 ; i ++ )
rank: 142
score: 99.51647271050348
patch: for ( int i = k + n ; i <= k ; i ++ ) {
rank: 143
score: 99.57328287760417
patch: for ( int i = $NUMBER$ ; i == n - k ; i ++ ) {
rank: 143
score: 99.55719672309027
patch: for ( int i = n + 1 ; i <= 0 ; i ++ ) {
rank: 143
score: 99.54217170266544
patch: for ( int i = k + 1 ; i != n ; i ++ )
rank: 143
score: 99.53386094835069
patch: for ( int i = k ; i < n / 1 ; i ++ ) {
rank: 143
score: 99.5222676595052
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum += i ;
rank: 143
score: 99.52197265625
patch: for ( i = k + 1 ; i < n ; i ++ ) {
rank: 144
score: 99.572998046875
patch: for ( int i = $NUMBER$ ; i > k ; i ++ ) {
rank: 144
score: 99.5670654296875
patch: for ( int i = k - 1 ; i < n + k ; i ++ ) {
rank: 144
score: 99.55697021484374
patch: for ( int i = k + $NUMBER$ ; i < n - 1 ; i ++ ) {
rank: 144
score: 99.5518863075658
patch: for ( final int i = k + 1 ; i < n ; i ++ ) {
rank: 144
score: 99.52210582386364
patch: for ( int i = k + 1 ; i < n - k - 1 ; i ++ ) {
rank: 144
score: 99.52179718017578
patch: for ( double i = 0 ; i < n ; i ++ ) {
rank: 144
score: 99.51569567228618
patch: for ( int i = k + 1 ; i ] <= n ; i ++ ) {
rank: 145
score: 99.54144694010417
patch: for ( int i = 1 ; i < n ; i ++ )
rank: 145
score: 99.53187320106908
patch: for ( int i = k + 1 ; i < n ; i i ++ ) {
rank: 145
score: 99.5220883018092
patch: for ( int i = n + 1 ; i <= n - k ; i ++ )
rank: 145
score: 99.51531623391544
patch: for ( int i = k ; i <= n ; i 1 ++ ) {
rank: 146
score: 99.55516221788194
patch: for ( int i = k / 1 ; i < n ; i ++ ) {
rank: 146
score: 99.55138549804687
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { System .
rank: 146
score: 99.53179253472223
patch: for ( int i = k + 1 ; i < false ; i ++ ) {
rank: 146
score: 99.52150268554688
patch: for ( int i = k + 1 + n ; i <= n ; i ++ ) {
rank: 146
score: 99.51489935980902
patch: for ( int k = k + 1 ; i <= n ; i ++ ) {
rank: 147
score: 99.55119018554687
patch: for ( int i = k + k ; i <= n + k ; i ++ ) {
rank: 147
score: 99.521240234375
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 147
score: 99.52061703330592
patch: for ( int i = k + 1 ; i >= n ; ++ ++ i ) {
rank: 148
score: 99.54979248046875
patch: for ( int i = k + 1 ; i < n ; i ++ ) { { {
rank: 148
score: 99.53965928819444
patch: for ( int i = k - 1 ; i >= $NUMBER$ ; i ++ ) {
rank: 148
score: 99.52041625976562
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log (
rank: 149
score: 99.56417846679688
patch: for ( int i = k + 1 ; i < n : n ; i ++ ) {
rank: 149
score: 99.53905571831598
patch: for ( int i = - 1 ; i <= n ; i ++ ) { {
rank: 149
score: 99.5140380859375
patch: for ( int i = k ; i < k ; i ++ ) { ) {
rank: 150
score: 99.56777954101562
patch: for ( int i = k + 1 ; i > k - k ; i ++ ) {
rank: 150
score: 99.56396484375
patch: for ( int i = 0 ; i != n ; i ++ ) {
rank: 150
score: 99.55308837890625
patch: for ( int i = k + 1 + 1 ; i <= 0 ; i ++ ) {
rank: 150
score: 99.54869384765625
patch: for ( int i = k + 1 ; i < n / $NUMBER$ ; i ++ ) {
rank: 150
score: 99.53764343261719
patch: for ( int i = $NUMBER$ ; i == $NUMBER$ ; i ++ ) {
rank: 150
score: 99.5311050415039
patch: for ( int i = 0 ; i < 0 ; i -- ) {
rank: 151
score: 99.56726837158203
patch: for ( int i = $NUMBER$ ; i > 0 ; i ++ ) {
rank: 151
score: 99.54966517857143
patch: / k ! for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 151
score: 99.51938348067434
patch: for ( int i = k - 1 ; i <= n - k ; i ++ )
rank: 151
score: 99.51882934570312
patch: for ( int i = k ; i != n ; i ++ ) {
rank: 151
score: 99.51340060763889
patch: for ( Object i = k + 1 ; i <= n ; i ++ ) {
rank: 152
score: 99.55277709960937
patch: for ( int i = k + 1 ; i >= 0 + 1 ; i ++ ) {
rank: 152
score: 99.54899379185268
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( double ) i ;
rank: 152
score: 99.54750366210938
patch: for ( int i = k + 1 ; i >= n ; i ++ ) { ) {
rank: 152
score: 99.51927490234375
patch: for ( int i = $NUMBER$ + n ; i <= n - k ; i ++ ) {
rank: 152
score: 99.51871744791667
patch: for ( int k = k + 1 ; i < n ; k ++ ) {
rank: 153
score: 99.56353759765625
patch: for ( int i = $NUMBER$ ; i <= i + 1 ; i ++ ) {
rank: 153
score: 99.54661865234375
patch: for ( int i = 0 ; i < ( n + 1 ) ; i ++ ) {
rank: 153
score: 99.53727452895221
patch: for ( int i = n + 1 ; i <= n ; i ++ )
rank: 153
score: 99.51890497622283
patch: for ( int i = k ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 153
score: 99.51740858289931
patch: for ( int i = k + 1 ; i >= n ; -- i ) {
rank: 153
score: 99.5125732421875
patch: / * for ( int i = k ; i <= n ; i ++ ) {
rank: 154
score: 99.56593081825658
patch: for ( int i = k + 1 ; i . < n ; i ++ ) {
rank: 154
score: 99.52742513020833
patch: for ( int i = k + $NUMBER$ ; i >= n ; i ++ ) {
rank: 154
score: 99.51671685112848
patch: for ( int k = k + 1 ; n <= n ; k ++ ) {
rank: 154
score: 99.51204427083333
patch: for ( int i = n + 1 ; i >= k ; i ++ ) {
rank: 155
score: 99.53440228630515
patch: for ( int i = k + 1 ; i <= 0 ; i ++ )
rank: 155
score: 99.5273501747533
patch: for ( int i = k + 1 ; int i < n ; i ++ ) {
rank: 155
score: 99.51773681640626
patch: for ( Iterator i = k + 1 ; i <= n - k ; i ++ ) {
rank: 155
score: 99.51654373972039
patch: for ( int i = k - 1 ; i >= - 1 ; i -- ) {
rank: 156
score: 99.56228976779514
patch: for ( int i = $NUMBER$ ; i <= n : n ; i ++ ) {
rank: 156
score: 99.5466076078869
patch: / for ( int i = k + 1 ; i <= n - k ; i ++ ) {
rank: 156
score: 99.54471435546876
patch: for ( int i = n + 1 ; i >= n + 1 ; i ++ ) {
rank: 156
score: 99.53401014539931
patch: for ( int i = $NUMBER$ ; i + 1 <= n ; i ++ ) {
rank: 156
score: 99.5272216796875
patch: for ( int i = 0 ; i <= - 1 ; i ++ ) {
rank: 156
score: 99.51480102539062
patch: for ( int i = k + $NUMBER$ ; i < n - k ; i ++ ) {
rank: 157
score: 99.5464754971591
patch: for ( int i = k + 1 ; i <= n - 1 - 1 ; i ++ ) {
rank: 157
score: 99.52683619449013
patch: for ( int i = k + 1 ; i < n + ; i ++ ) {
rank: 157
score: 99.51478978207237
patch: for ( Iterator i = n + 1 ; i . has CaMeL Next ( ) ; )
rank: 157
score: 99.51467895507812
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += 0 . 0 ;
rank: 157
score: 99.50973992598684
patch: for ( int i = k + 1 ; i >= n ; i 1 ++ ) {
rank: 158
score: 99.56145629882812
patch: for ( int i = k + 1 : n ; i < n ; i ++ ) {
rank: 158
score: 99.54615542763158
patch: for ( int int i = k + 1 ; i <= n ; i ++ ) {
rank: 158
score: 99.53338264016544
patch: for ( int i = $NUMBER$ ; i >= $NUMBER$ ; i ++ ) { {
rank: 158
score: 99.52528211805556
patch: for ( int i = k + $NUMBER$ ; i >= n ; i -- ) {
rank: 158
score: 99.51471268503289
patch: for ( int i = 0 + 1 ; i < n ; i ++ ) { {
rank: 158
score: 99.51436157226563
patch: for ( int i = k + 1 ; i <= n - 1 ; i -- ) {
rank: 159
score: 99.5647216796875
patch: for ( int i = $NUMBER$ - 1 ; i <= n - k ; i ++ ) {
rank: 159
score: 99.56143798828126
patch: for ( int i = k + k - k ; i < n ; i ++ ) {
rank: 159
score: 99.5515380859375
patch: for ( int i = k + 1 + 1 ; i >= 0 ; i ++ ) {
rank: 159
score: 99.54376220703125
patch: for ( int i = n + 1 ; i >= n + 1 ; i -- ) {
rank: 159
score: 99.52519395616319
patch: for ( int i = k + 1 ; i < k ; ++ i ) {
rank: 159
score: 99.51441714638158
patch: for ( int i = k - 1 ; i <= k ; i ++ ) { {
rank: 159
score: 99.51427641369048
patch: for ( int i = k + 1 ; i . < n - k ; i ++ ) {
rank: 160
score: 99.5640869140625
patch: for ( int i = $NUMBER$ ; i >= k - 1 ; i ++ ) {
rank: 160
score: 99.54557291666667
patch: for ( int i = $NUMBER$ + n ; i <= n ; i ++ ) {
rank: 160
score: 99.54359741210938
patch: for ( int i = k + 1 ; i >= n ; i -- ) { ) {
rank: 160
score: 99.52424059416118
patch: for ( int i = k + 1 ; int i <= n ; i ++ ) {
rank: 161
score: 99.54533555772569
patch: k ! for ( int i = k ; i <= n ; i ++ ) {
rank: 161
score: 99.54290771484375
patch: for ( int i = i + 1 ; i <= n + 1 ; i ++ ) {
rank: 161
score: 99.53055572509766
patch: for ( int i = - 1 ; i < n ; i ++ )
rank: 161
score: 99.51405164930556
patch: for ( int k = k + 1 ; i <= n ; k ++ ) {
rank: 161
score: 99.50792778862848
patch: for ( int i = k - 1 ; i <= n ; i -- ) {
rank: 162
score: 99.56295437282986
patch: for ( int i = $NUMBER$ ; i <= n - 0 ; i ++ ) {
rank: 162
score: 99.54472212357955
patch: for ( int i = k - 1 ; i <= n - k - k ; i ++ ) {
rank: 162
score: 99.5302734375
patch: for ( int i = 0 ; i <= n + 1 ; i ++ )
rank: 162
score: 99.52392578125
patch: for ( int i = k + $NUMBER$ ; i >= k ; i ++ ) {
rank: 162
score: 99.51336115056819
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { return log CaMeL Sum ; }
rank: 163
score: 99.56208881578948
patch: for ( int i = - 1 ; i <= n - 1 ; i ++ ) {
rank: 163
score: 99.56009521484376
patch: for ( int i = k + 1 ; i < k - k ; i ++ ) {
rank: 163
score: 99.55003662109375
patch: for ( int i = k , n = k ; i <= n ; i ++ ) {
rank: 163
score: 99.54451293945313
patch: for ( int i = n + k ; i <= n - k ; i ++ ) {
rank: 163
score: 99.52384440104167
patch: for ( int i = k + 1 ; i < n ) {
rank: 163
score: 99.51347520616319
patch: for ( int i = k + 1 ; i == k ; i ++ ) {
rank: 163
score: 99.51287841796875
patch: for ( int i = $NUMBER$ ; i <= n - $NUMBER$ ; i ++ ) {
rank: 164
score: 99.560791015625
patch: for ( int i = $NUMBER$ ; i <= n - k + k ; i ++ ) {
rank: 164
score: 99.55987870065789
patch: for ( int i = k + - 1 ; i < n ; i ++ ) {
rank: 164
score: 99.54998779296875
patch: for ( int i = k - 1 ; i <= n - $NUMBER$ ; i ++ ) {
rank: 164
score: 99.54449932391827
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 164
score: 99.51263427734375
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= log CaMeL Sum ;
rank: 165
score: 99.52988009982639
patch: for ( int i = $NUMBER$ + 1 ; i <= k ; i ++ ) {
rank: 165
score: 99.52349853515625
patch: for ( int i = k + $NUMBER$ ; i >= k ; i -- ) {
rank: 165
score: 99.51298692491319
patch: for ( int i = 0 + k ; i < n ; i ++ ) {
rank: 166
score: 99.55991821289062
patch: for ( int i = k - 1 + 1 ; i <= n ; i ++ ) {
rank: 166
score: 99.54977077907986
patch: for ( int i = 0 + $NUMBER$ ; i < n ; i ++ ) {
rank: 166
score: 99.54421164772727
patch: for ( int i = k + k + 1 ; i <= n - 1 ; i ++ ) {
rank: 166
score: 99.52967071533203
patch: for ( int i = k ; i >= $NUMBER$ ; i ++ ) {
rank: 166
score: 99.52264404296875
patch: for ( int i = k + $NUMBER$ ; i < 1 ; i ++ ) {
rank: 166
score: 99.51264105902777
patch: for ( double i = k - 1 ; i <= n ; i ++ ) {
rank: 167
score: 99.55843505859374
patch: for ( int i = k + 0 ; i < n - k ; i ++ ) {
rank: 167
score: 99.54961480034723
patch: for ( int i = 0 + 1 ; i >= 1 ; i ++ ) {
rank: 167
score: 99.54413396661931
patch: k ! k ! for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 167
score: 99.52940458409927
patch: for ( int i = $NUMBER$ ; i < n - 1 ; i ++ )
rank: 167
score: 99.52226426866319
patch: for ( int i = k + 0 ; i < k ; i ++ ) {
rank: 167
score: 99.50290256076389
patch: for ( int i = n + 1 ; i > n ; i ++ ) {
rank: 168
score: 99.54875352647569
patch: for ( int i = 0 + 0 ; i < n ; i ++ ) {
rank: 168
score: 99.52902221679688
patch: for ( int i = $NUMBER$ ; i == k ; i ++ ) {
rank: 168
score: 99.51199001736111
patch: for ( int k = k + 1 ; n <= n ; i ++ ) {
rank: 168
score: 99.50228078741776
patch: for ( int i = k + 1 ; i ++ <= 1 ; i ++ ) {
rank: 169
score: 99.55806884765624
patch: for ( int i = k - 1 ; i == n - k ; i ++ ) {
rank: 169
score: 99.55717163085937
patch: for ( int i = k + 1 ; i == n + 1 ; i ++ ) {
rank: 169
score: 99.52145724826389
patch: for ( int i = 0 ; i < n / 1 ; i ++ ) {
rank: 170
score: 99.54841444227431
patch: for ( int i = k + 0 ; i <= 0 ; i ++ ) {
rank: 171
score: 99.55794949001736
patch: for ( int i = max + 1 ; i <= n ; i ++ ) {
rank: 171
score: 99.54817030164931
patch: for ( int i = 0 + 1 ; i <= i ; i ++ ) {
rank: 171
score: 99.54303850446429
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( double ) i ;
rank: 171
score: 99.528271484375
patch: for ( int i = k ; i <= $NUMBER$ ; i ++ )
rank: 171
score: 99.5107177734375
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 171
score: 99.50050982306985
patch: for ( int i = k 1 ; i <= n ; i ++ ) {
rank: 172
score: 99.54756469726563
patch: for ( int i = k + 1 ; i >= length - 1 ; i ++ ) {
rank: 172
score: 99.54299094460227
patch: for ( int i = k + k + k - 1 ; i <= n ; i ++ ) {
rank: 172
score: 99.534033203125
patch: for ( int i = k + 1 ; i >= k - 1 ; i -- ) {
rank: 172
score: 99.52811925551471
patch: for ( int i = $NUMBER$ ; i < n + k ; i ++ )
rank: 172
score: 99.51982036389802
patch: for ( int i = k + 1 ; i < n ; 1 ++ i ) {
rank: 172
score: 99.50998406661184
patch: for ( int i = k - 1 ; i >= k ; i -- ) { {
rank: 172
score: 99.49989149305556
patch: for ( int i = 0 ; i <= n ; i ++ ) { ) {
rank: 173
score: 99.54241943359375
patch: for ( int i = n + k ; i <= n ; i ++ ) {
rank: 173
score: 99.52782485064338
patch: for ( int i = $NUMBER$ ; i <= 1 ; i ++ ) { {
rank: 173
score: 99.50995194284539
patch: for ( int i = k + 1 ; i == n - 1 ; i ++ )
rank: 173
score: 99.49978798314145
patch: for ( int i = k + 1 ; i <= n ; i i ++ ) {
rank: 174
score: 99.541259765625
patch: for ( int i = k + 1 + k - 1 ; i <= n ; i ++ ) {
rank: 174
score: 99.52781048943015
patch: for ( int i = $NUMBER$ ; i <= k - k ; i ++ )
rank: 174
score: 99.51971435546875
patch: for ( int i = 0 ; i <= $STRING$ ; i ++ ) {
rank: 174
score: 99.50894325657895
patch: for ( int i = k + 1 ; i < n ; ++ ++ i ) {
rank: 174
score: 99.49942355685764
patch: for ( int i = k + 1 ; i <= n ; -- i ) {
rank: 175
score: 99.54691772460937
patch: for ( int i = k - 1 ; i <= k - 1 ; i ++ ) {
rank: 175
score: 99.5411865234375
patch: k ! for ( int i = k - 1 ; i <= n ; i ++ ) {
rank: 175
score: 99.50945081208882
patch: for ( int i = i + 1 ; i <= n - k ; i ++ )
rank: 175
score: 99.507080078125
patch: for ( int n = k + 1 ; n < n ; n ++ ) {
rank: 175
score: 99.49870300292969
patch: for ( int i = start ; i <= n ; i ++ ) {
rank: 176
score: 99.5561279296875
patch: for ( int i = $NUMBER$ ; i <= n + k - k ; i ++ ) {
rank: 176
score: 99.54089936755952
patch: for ( int i = k + 1 ; i <= n - - k ; i ++ ) {
rank: 176
score: 99.53209838867187
patch: for ( int i = k + 1 ; i < k + n ; i ++ ) {
rank: 176
score: 99.527490234375
patch: for ( int i = $NUMBER$ ; i != n ; i ++ )
rank: 176
score: 99.51803927951389
patch: for ( int i = 0 ; i < n + 0 ; i ++ ) {
rank: 176
score: 99.50925903320312
patch: for ( int i = k + 1 ; i < i - 1 ; i ++ ) {
rank: 176
score: 99.49859260110294
patch: for ( int i = k ; i <= k ; i ++ ) { )
rank: 177
score: 99.53184814453125
patch: for ( int i = k + 1 ; i < n . length ; i ++ ) {
rank: 177
score: 99.49823319284539
patch: for ( int i = k + 1 ; i <= k ; i ++ ) { )
rank: 178
score: 99.55511474609375
patch: for ( int i = k - k - 1 ; i <= n ; i ++ ) {
rank: 178
score: 99.54572143554688
patch: for ( int i = k + 1 + 1 ; i < 0 ; i ++ ) {
rank: 178
score: 99.5402499112216
patch: for ( int i = k + k ; i <= n - k - 1 ; i ++ ) {
rank: 178
score: 99.5318359375
patch: for ( int i = k + 1 ; i < n / n ; i ++ ) {
rank: 178
score: 99.52667236328125
patch: for ( int i = $NUMBER$ + 1 ; i <= $NUMBER$ ; i ++ ) {
rank: 178
score: 99.51741536458333
patch: for ( int i = 0 ; i <= k + 1 ; i -- ) {
rank: 179
score: 99.55474853515625
patch: for ( int i = k - 1 ; i > 0 ; i ++ ) {
rank: 179
score: 99.531103515625
patch: for ( int i = 0 ; i < n + 1 ; i ++ ) { ) {
rank: 179
score: 99.51715087890625
patch: for ( int i = k + k ; i < n ; i -- ) {
rank: 179
score: 99.50787353515625
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) { log CaMeL Sum -= i ;
rank: 179
score: 99.49744937294408
patch: for ( int i = k + 1 ; i >= n ; i ++ ) { )
rank: 180
score: 99.55472564697266
patch: for ( int i = $NUMBER$ ; i > n ; i ++ ) {
rank: 180
score: 99.54559326171875
patch: for ( int i = 0 , n = k ; i < n ; i ++ ) {
rank: 180
score: 99.53942289806548
patch: for ( int i = k + 1 ; i <= n - k ; i ++ ) { }
rank: 180
score: 99.53056640625
patch: for ( int i = k ; i < ( n + 1 ) ; i ++ ) {
rank: 180
score: 99.52571614583333
patch: for ( int i = 0 ; i <= k - k ; i ++ ) {
rank: 180
score: 99.51711856617646
patch: for ( int i = k ; i < - 1 ; i ++ ) {
rank: 180
score: 99.50758763363487
patch: for ( int i = k + 1 ; i > n - k ; i ++ )
rank: 180
score: 99.49716025904605
patch: for ( int i = k + 1 ; i ++ <= n ; ++ i ) {
rank: 181
score: 99.55471462673611
patch: for ( int i = length + 1 ; i <= n ; i ++ ) {
rank: 181
score: 99.55259874131944
patch: for ( int i = k - 0 ; i < n ; i ++ ) {
rank: 181
score: 99.53862561677632
patch: for ( int i = $NUMBER$ ; i <= n - 1 ; i ++ ) { {
rank: 181
score: 99.53007202148437
patch: for ( int i = 0 ; i < n + n + 1 ; i ++ ) {
rank: 181
score: 99.50741577148438
patch: for ( int i = start + 1 ; i <= n - k ; i ++ ) {
rank: 181
score: 99.50596788194444
patch: for ( int k = k + 1 ; k <= n ; k ++ ) {
rank: 181
score: 99.49684143066406
patch: for ( int i = 1 ; i < 0 ; i ++ ) {
rank: 182
score: 99.53744988692434
patch: for ( i = k + 1 ; i <= n - k ; i ++ ) {
rank: 182
score: 99.5300228721217
patch: for ( int i = k + 1 ; i >= n + 1 ; i -- )
rank: 182
score: 99.52410210503473
patch: for ( int i = k + k ; i <= $NUMBER$ ; i ++ ) {
rank: 182
score: 99.51654052734375
patch: for ( long i = k + 1 ; i < n ; i ++ ) {
rank: 182
score: 99.50720796130952
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -- ;
rank: 183
score: 99.53697374131944
patch: for ( double i = $NUMBER$ ; i <= n - 1 ; i ++ ) {
rank: 183
score: 99.52938842773438
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { { {
rank: 183
score: 99.52397325303819
patch: for ( int i = 1 ; i <= n + k ; i ++ ) {
rank: 183
score: 99.51620822482639
patch: for ( int i = k + 1 ; i >= $STRING$ ; i -- ) {
rank: 183
score: 99.49652777777777
patch: for ( int i = k ; i <= n + n ; i ++ ) {
rank: 184
score: 99.53680710565476
patch: for ( int i = k + - 1 ; i <= n - k ; i ++ ) {
rank: 184
score: 99.52839929917279
patch: for ( int i = 1 ; i < n ; i ++ ) { {
rank: 184
score: 99.51610649956598
patch: for ( String i = k + 1 ; i < n ; i ++ ) {
rank: 184
score: 99.50696818033855
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += log CaMeL Sum ;
rank: 184
score: 99.50363641036184
patch: for ( int i = k + 1 ; i <= n ; ++ i ) { {
rank: 184
score: 99.49620145909927
patch: for ( int i = k ; i < k ; i ++ ) { {
rank: 185
score: 99.55369166324013
patch: for ( int i = k + 1 ; i <= - k ; i ++ ) {
rank: 185
score: 99.53663219105114
patch: n ! for ( int i = k + 1 ; i <= n - k ; i ++ ) {
rank: 185
score: 99.50352376302084
patch: for ( int i = 0 ; i < k ; i ++ )
rank: 186
score: 99.54115125868056
patch: for ( int i = 0 + k ; i <= n ; i ++ ) {
rank: 186
score: 99.51590728759766
patch: for ( int i = k ; i < $NUMBER$ ; i ++ ) {
rank: 186
score: 99.50339762369792
patch: for ( Iterator i = n + 1 ; i <= n ; i ++ ) {
rank: 187
score: 99.55353546142578
patch: for ( int i = 0 ; i >= 0 ; i ++ ) {
rank: 187
score: 99.53615112304688
patch: for ( int i = $NUMBER$ + k ; i <= n - 1 ; i ++ ) {
rank: 187
score: 99.52799479166667
patch: for ( int i = n ; i < n + 1 ; i ++ ) {
rank: 187
score: 99.52092827690973
patch: for ( int i = 0 ; i <= n ; i ++ ) { { {
rank: 187
score: 99.51484510633681
patch: for ( int i = k + 1 ; i < n ; k ++ ) {
rank: 187
score: 99.50498268821023
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum += i ;
rank: 188
score: 99.54781494140624
patch: for ( int i = $NUMBER$ + 1 ; i < n + 1 ; i ++ ) {
rank: 188
score: 99.52745361328125
patch: for ( int i = k - 1 ; i < n ; i ++ ) { ) {
rank: 188
score: 99.52081705729167
patch: for ( int i = $NUMBER$ ; i >= n ; i ++ )
rank: 188
score: 99.50332159745066
patch: for ( int i = 1 ; i <= n - k - 1 ; i ++ )
rank: 188
score: 99.5029296875
patch: for ( int i = k ; i < n ; ++ i ) {
rank: 189
score: 99.53558904474431
patch: for ( int i = k + 1 ; i <= n - k ; i ++ ) { System .
rank: 189
score: 99.52069450827206
patch: for ( int i = k ; i <= n - 1 ; i ++ )
rank: 189
score: 99.49382188585069
patch: for ( int n = k + 1 ; i <= n ; i ++ ) {
rank: 190
score: 99.54692077636719
patch: for ( int i = $NUMBER$ ; i < i ; i ++ ) {
rank: 190
score: 99.53982883029514
patch: for ( int i = 0 + 1 ; i < 1 ; i ++ ) {
rank: 190
score: 99.53530883789062
patch: for ( int i = $NUMBER$ ; i <= n - 1 - k ; i ++ ) {
rank: 190
score: 99.52644653320313
patch: for ( int i = k + $NUMBER$ ; i < n + 1 ; i ++ ) {
rank: 190
score: 99.52049153645834
patch: for ( int i = $NUMBER$ ; i >= 1 ; i ++ )
rank: 190
score: 99.51408555772569
patch: for ( int i = k ; i <= n + $NUMBER$ ; i ++ ) {
rank: 190
score: 99.50275268554688
patch: for ( int i = n - 1 ; i <= n - k ; i ++ ) {
rank: 190
score: 99.4937744140625
patch: for ( int i = k + 1 ; i <= n ; k ++ ) {
rank: 191
score: 99.5349365234375
patch: k ! for ( int i = k ; i <= n - k ; i ++ ) {
rank: 191
score: 99.52642822265625
patch: for ( int i = k - 1 ; i >= k - 1 ; i ++ ) {
rank: 191
score: 99.51979573567708
patch: for ( int i = $NUMBER$ ; i >= k - k ; i ++ ) {
rank: 191
score: 99.51399739583333
patch: for ( int i = k + 1 ; i > 0 ; i -- ) {
rank: 191
score: 99.50261487458882
patch: for ( int i = $NUMBER$ ; i <= n - k - k ; i ++ )
rank: 191
score: 99.49260796440973
patch: for ( int i = k + k ; i <= k ; i ++ ) {
rank: 192
score: 99.53493088942308
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) { log CaMeL Sum += Math . log (
rank: 192
score: 99.52581176757812
patch: for ( int i = k + 1 ; i < i + 1 ; i ++ ) {
rank: 192
score: 99.50254755434783
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum -- ;
rank: 192
score: 99.49773491753473
patch: for ( int n = k + 1 ; i < n ; i ++ ) {
rank: 193
score: 99.53772583007813
patch: for ( int i = k + 1 ; i < n / 1 ; i ++ ) {
rank: 193
score: 99.52543334960937
patch: for ( int i = k + 1 ; i >= n + $NUMBER$ ; i ++ ) {
rank: 193
score: 99.50230712890625
patch: for ( int i = k + 1 ; i >= i - 1 ; i ++ ) {
rank: 193
score: 99.49249267578125
patch: for ( int i = 1 ; i < 1 ; i ++ ) {
rank: 194
score: 99.52529425370066
patch: for ( int i = k + 1 ; i < k + 1 ; i ++ )
rank: 194
score: 99.51871744791667
patch: for ( int i = $NUMBER$ : n ; i <= n ; i ++ ) {
rank: 194
score: 99.51314290364583
patch: for ( int i = k + 1 ; i < $NUMBER$ ; i -- ) {
rank: 194
score: 99.50230006167763
patch: for ( int i = 0 ; i <= n - k - 1 ; i ++ )
rank: 194
score: 99.49245876736111
patch: for ( Iterator i = k + 1 ; i <= n ; i ++ ) {
rank: 195
score: 99.49211968315973
patch: for ( int i = k , 1 ; i <= n ; i ++ ) {
rank: 196
score: 99.53269264914773
patch: for ( int i = k + 1 ; i <= n + k - k ; i ++ ) {
rank: 196
score: 99.52450561523438
patch: for ( int i = k - 1 ; i <= n ; i ++ ) { ) {
rank: 196
score: 99.51105057565789
patch: for ( int i = k + 1 ; i <= - 1 ; i -- ) {
rank: 196
score: 99.50190873579545
patch: for ( int i = k + 1 ; i <= n ; i ++ ) return log CaMeL Sum ;
rank: 196
score: 99.49164496527777
patch: for ( int i = n + 0 ; i <= n ; i ++ ) {
rank: 197
score: 99.5455322265625
patch: for ( int i = $NUMBER$ + 1 ; i <= n + k ; i ++ ) {
rank: 197
score: 99.53585815429688
patch: for ( int i = k - 1 ; i < k - 1 ; i ++ ) {
rank: 197
score: 99.52447150735294
patch: for ( int i = 0 ; i < n ; i ++ ) { )
rank: 197
score: 99.51739501953125
patch: for ( int i = $STRING$ ; i <= n ; i ++ ) {
rank: 197
score: 99.51092850534539
patch: for ( int i = k + 1 ; i < n ; i -= 1 ) {
rank: 197
score: 99.49140930175781
patch: for ( int i = start ; i < n ; i ++ ) {
rank: 198
score: 99.5447265625
patch: for ( int i = $NUMBER$ : n - 1 ; i < n ; i ++ ) {
rank: 198
score: 99.53254838423295
patch: for ( int i = k - 1 ; i <= n - k - 1 ; i ++ ) {
rank: 198
score: 99.51706112132354
patch: for ( int i = 1 + 1 ; i <= n ; i ++ )
rank: 198
score: 99.50128173828125
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log (
rank: 198
score: 99.49514288651316
patch: for ( Iterator i = k + 1 ; i . has CaMeL Next ( ) ; )
rank: 199
score: 99.54928927951389
patch: for ( int i = size + 1 ; i <= n ; i ++ ) {
rank: 199
score: 99.5323153409091
patch: for ( int i = $NUMBER$ + k - 1 ; i <= n - k ; i ++ ) {
rank: 199
score: 99.52415771484375
patch: for ( int i = k ; i < n + 1 ; i ++ ) { ) {
rank: 199
score: 99.51004367404514
patch: for ( int i = 0 + 1 ; i <= n ; i -- ) {
rank: 199
score: 99.49512396918402
patch: for ( int k = k + 1 ; k <= n ; i ++ ) {
rank: 199
score: 99.4913330078125
patch: for ( int i = k + 1 ; i -- <= n ; ++ i ) {
rank: 200
score: 99.53500027126736
patch: for ( int i = 0 + 1 ; i <= $NUMBER$ ; i ++ ) {
rank: 200
score: 99.52357788085938
patch: for ( int i = k + 1 ; i + 1 < n ; i ++ ) {
rank: 200
score: 99.51686197916666
patch: for ( int i = 0 ; i <= 1 ; i ++ )
rank: 200
score: 99.50005782277961
patch: for ( int i = $NUMBER$ + 1 ; i <= n - k ; i ++ )
rank: 200
score: 99.49123663651316
patch: for for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 201
score: 99.54392700195312
patch: for ( int i = k + k ; i < n - 1 ; i ++ ) {
rank: 201
score: 99.53183815696023
patch: k ! for ( int i = k - 1 ; i <= n - k ; i ++ ) {
rank: 201
score: 99.5234619140625
patch: for ( int i = k - 1 ; i < n + n ; i ++ ) {
rank: 201
score: 99.50978716681985
patch: for ( int i = k + 1 ; i < k ; i ++ )
rank: 201
score: 99.499755859375
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += n ;
rank: 201
score: 99.4942626953125
patch: for ( int i = k ; i >= 0 ; i -- ) {
rank: 201
score: 99.49080657958984
patch: for ( int i = 1 ; i < n ; i -- ) {
rank: 202
score: 99.54386596679687
patch: for ( int i = k - 1 : n ; i <= n ; i ++ ) {
rank: 202
score: 99.53041585286458
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum -= $NUMBER$ ;
rank: 202
score: 99.50877549913194
patch: for ( int i = k + $NUMBER$ ; i < k ; i -- ) {
rank: 202
score: 99.4992167154948
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log (
rank: 202
score: 99.49046566611842
patch: final for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 203
score: 99.54871826171875
patch: for ( int i = $NUMBER$ + 1 + 1 ; i <= n ; i ++ ) {
rank: 203
score: 99.53014026988636
patch: for ( int i = k + 1 - k ; i <= n - k ; i ++ ) {
rank: 203
score: 99.52291870117188
patch: for ( int i = k ; i < n + n + 1 ; i ++ ) {
rank: 203
score: 99.51427408854167
patch: for ( int i = $NUMBER$ ; i < $NUMBER$ ; i ++ )
rank: 203
score: 99.49032931857639
patch: for ( int i = n + 1 ; i <= 1 ; i ++ ) {
rank: 204
score: 99.54852294921875
patch: for ( int i = k - 1 ; i > n ; i ++ ) {
rank: 204
score: 99.53387451171875
patch: for ( int i = k + 1 ; i < length - 1 ; i ++ ) {
rank: 204
score: 99.52245483398437
patch: for ( int i = k + 1 ; i < n * $NUMBER$ ; i ++ ) {
rank: 204
score: 99.5086669921875
patch: for ( int i = k + 1 ; i > 1 ; i -- ) {
rank: 205
score: 99.53337944878473
patch: for ( int i = k + 1 ; i >= 0 ; ++ i ) {
rank: 205
score: 99.52980638586956
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { double log CaMeL Sum = 0 ;
rank: 205
score: 99.52236328125
patch: this . for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 205
score: 99.51352945963542
patch: for ( int i = $NUMBER$ ; i <= i + k ; i ++ ) {
rank: 205
score: 99.49839477539062
patch: for ( Iterator i = n + 1 ; i <= n - k ; i ++ ) {
rank: 205
score: 99.4932861328125
patch: for ( double i = k + 1 ; i <= k ; i ++ ) {
rank: 205
score: 99.4883041381836
patch: for ( int i = 1 ; i <= n ; i -- ) {
rank: 206
score: 99.53294677734375
patch: for ( int i = k + 1 ; i >= 0 - 1 ; i ++ ) {
rank: 206
score: 99.52926635742188
patch: for ( for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 206
score: 99.50802951388889
patch: for ( int i = k + 0 ; i <= n ; i -- ) {
rank: 206
score: 99.49310661764706
patch: for ( int i = k + 1 ; i >= n ; ++ i )
rank: 207
score: 99.54768371582031
patch: for ( int i = k ; i == n ; i ++ ) {
rank: 207
score: 99.53228759765625
patch: for ( int i = k * 1 ; i >= 0 ; i ++ ) {
rank: 207
score: 99.50754801432292
patch: for ( int i = 0 ; i <= n - 1 ; i -- ) {
rank: 207
score: 99.49645182291667
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 207
score: 99.49286566840277
patch: for ( int i = n - 1 ; i >= 0 ; i -- ) {
rank: 208
score: 99.54235161675348
patch: for ( int i = k ; i < n + k ; i ++ ) {
rank: 208
score: 99.531982421875
patch: for ( int i = k - $NUMBER$ ; i <= n - 1 ; i ++ ) {
rank: 208
score: 99.52920134171195
patch: binomial CaMeL Coefficient CaMeL Double for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 208
score: 99.5203857421875
patch: for ( int i = k + 1 ; i < n + 1 ; ++ i ) {
rank: 208
score: 99.51256510416667
patch: for ( int i = $NUMBER$ ; i < k ; i ++ )
rank: 208
score: 99.50729031032986
patch: for ( int i = k ; i < k + 1 ; i -- ) {
rank: 208
score: 99.49281939338235
patch: for ( int i = 0 ; i < k ; i ++ ) { {
rank: 208
score: 99.48729596819196
patch: for ( int i = k + 1 ; i ++ ) {
rank: 209
score: 99.531591796875
patch: for ( int i = k * 1 ; i <= n - 1 ; i ++ ) {
rank: 209
score: 99.52913765285327
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { if ( i == k ) {
rank: 209
score: 99.51935135690789
patch: for ( int i = k + 1 ; i < k ; i ++ ) { {
rank: 209
score: 99.49263509114583
patch: for ( int n = k + 1 ; n <= n ; i ++ ) {
rank: 209
score: 99.48710801866319
patch: for ( int i = k + k ; i >= n ; i ++ ) {
rank: 210
score: 99.54684448242188
patch: for ( int i = k - k + 1 ; i <= n ; i ++ ) {
rank: 210
score: 99.5290194424716
patch: for ( int i = $NUMBER$ + n - k ; i <= n - k ; i ++ ) {
rank: 210
score: 99.51224772135417
patch: for ( int i = k + k ; i >= $NUMBER$ ; i ++ ) {
rank: 210
score: 99.49257405598958
patch: / * for ( int i = 0 ; i < n ; i ++ ) {
rank: 210
score: 99.48699629934211
patch: for ( int i = k + 1 ; i ++ < n ; i ++ ) {
rank: 211
score: 99.53127034505208
patch: for ( int i = k - $NUMBER$ ; i <= 0 ; i ++ ) {
rank: 211
score: 99.5115966796875
patch: for ( int i = $NUMBER$ ; i != n - k ; i ++ ) {
rank: 211
score: 99.50689697265625
patch: for ( int i = k + 1 ; i < i ; i -- ) {
rank: 211
score: 99.49603826349431
patch: for ( int i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 212
score: 99.54500122070313
patch: for ( int i = 0 ; i <= n - k + 1 ; i ++ ) {
rank: 212
score: 99.52884615384616
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) { log CaMeL Sum -= Math . log (
rank: 212
score: 99.518994140625
patch: for ( int i = k + 1 ; i >= i - 1 ; i -- ) {
rank: 212
score: 99.51064046223958
patch: for ( int i = - 1 ; i <= n - k ; i ++ )
rank: 212
score: 99.50684271918402
patch: for ( int i = k + 1 ; i < $STRING$ ; i -- ) {
rank: 212
score: 99.49207899305556
patch: for ( Number i = k + 1 ; i <= n ; i ++ ) {
rank: 212
score: 99.4863217002467
patch: for ( int i = k ; i + 1 ++ <= n ; i ++ ) {
rank: 213
score: 99.54141998291016
patch: for ( int i = 0 ; i >= k ; i ++ ) {
rank: 213
score: 99.49198644301471
patch: for ( int i = k + 1 ; i < n ; ++ i )
rank: 213
score: 99.48614501953125
patch: for ( int i = 1 ; i <= n ; i ++ ) { ) {
rank: 214
score: 99.54378933376736
patch: for ( int i = k - 1 ; i > $NUMBER$ ; i ++ ) {
rank: 214
score: 99.52838134765625
patch: for ( int i = $NUMBER$ + k - k ; i <= n ; i ++ ) {
rank: 214
score: 99.5184814453125
patch: for ( int i = k + 1 ; i < n > n ; i ++ ) {
rank: 214
score: 99.50624593098958
patch: for ( int i = k + $NUMBER$ ; i <= 1 ; i ++ ) {
rank: 214
score: 99.49193050986842
patch: for ( int i = k + 1 ; i >= n ; i -= n ) {
rank: 214
score: 99.48601616753473
patch: for ( int i = n + n ; i <= n ; i ++ ) {
rank: 215
score: 99.54368896484375
patch: for ( int i = 1 + 1 ; i <= n - 1 ; i ++ ) {
rank: 215
score: 99.54045274522569
patch: for ( int i = $NUMBER$ ; i == n + 1 ; i ++ ) {
rank: 215
score: 99.5181884765625
patch: for ( int i = n + 1 ; i < n + 1 ; i ++ )
rank: 215
score: 99.50938415527344
patch: for ( int i = $NUMBER$ ; i != k ; i ++ ) {
rank: 215
score: 99.49539184570312
patch: for ( int i = 0 + k + 1 ; i <= n ; i ++ ) {
rank: 216
score: 99.54368760850694
patch: for ( int i = $NUMBER$ ; i > k - 1 ; i ++ ) {
rank: 216
score: 99.54031372070312
patch: for ( int i = 0 ; i >= n ; i ++ ) {
rank: 216
score: 99.5282570167824
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i ) ;
rank: 216
score: 99.50932042738971
patch: for ( int i = k + 1 ; i >= 1 ; i ++ )
rank: 216
score: 99.49513753255208
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += 0 . 1 ;
rank: 216
score: 99.4908806295956
patch: * for ( int i = 0 ; i < n ; i ++ ) {
rank: 216
score: 99.48569623161765
patch: for ( int i = k ; i < k ; i ++ ) { )
rank: 217
score: 99.54353841145833
patch: for ( int i = $NUMBER$ + 1 ; i == n ; i ++ ) {
rank: 217
score: 99.53990478515625
patch: for ( int i = $NUMBER$ : n + 1 ; i <= n ; i ++ ) {
rank: 217
score: 99.52818714488636
patch: for ( int i = $NUMBER$ + n - 1 ; i <= n - k ; i ++ ) {
rank: 217
score: 99.51759097450658
patch: for ( int i = k - 1 ; i < n + 1 ; i ++ )
rank: 217
score: 99.50931803385417
patch: for ( int i = $NUMBER$ ; i <= k + k ; i ++ ) {
rank: 217
score: 99.4949618252841
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += $NUMBER$ ;
rank: 218
score: 99.54324340820312
patch: for ( int i = $NUMBER$ ; i > 1 ; i ++ ) {
rank: 218
score: 99.53983154296876
patch: for ( int i = k + k + k ; i < n ; i ++ ) {
rank: 218
score: 99.52866617838542
patch: for ( int i = n + 1 ; i >= 0 ; i ++ ) {
rank: 218
score: 99.49073621961806
patch: for ( int i = 0 + 1 ; i >= n ; i -- ) {
rank: 218
score: 99.48183722245066
patch: for ( int i = k + 1 ; i 1 <= n ; i ++ ) {
rank: 219
score: 99.54303588867188
patch: for ( int i = 0 ; i <= n - k + k ; i ++ ) {
rank: 219
score: 99.53900824652777
patch: for ( int i = 0 ; i <= i - 1 ; i ++ ) {
rank: 219
score: 99.52848510742187
patch: for ( int i = 0 + 1 ; i <= n - $NUMBER$ ; i ++ ) {
rank: 219
score: 99.50881778492646
patch: for ( int i = k - k ; i < n ; i ++ )
rank: 219
score: 99.49444258840461
patch: for ( int i = k + 1 ; i >= k - 1 ; i ++ )
rank: 219
score: 99.48150634765625
patch: for ( int i = k ; i <= n / n ; i ++ ) {
rank: 220
score: 99.5389892578125
patch: for ( int i = 0 + 1 ; i < n - k ; i ++ ) {
rank: 220
score: 99.52837524414062
patch: for ( int i = k + 1 ; i <= n + 0 ; i ++ ) {
rank: 220
score: 99.52777654474431
patch: for ( int i = k + 1 ; i <= n - k + 1 ; i ++ ) {
rank: 220
score: 99.5162289268092
patch: for ( int i = 0 ; i < n ; i ++ ) { i ++ ;
rank: 220
score: 99.50383843315973
patch: for ( int i = k + 1 ; i >= $STRING$ ; i ++ ) {
rank: 220
score: 99.48114013671875
patch: for ( int i = k ; i < n - n ; i ++ ) {
rank: 221
score: 99.5420166015625
patch: for ( int i = k - 1 ; i == n - 1 ; i ++ ) {
rank: 221
score: 99.5281982421875
patch: for ( int i = k + 1 ; i < start ; i ++ ) {
rank: 221
score: 99.52765447443181
patch: for ( int i = k + 1 ; i <= n - k + k ; i ++ ) {
rank: 221
score: 99.51593338815789
patch: for ( int i = k ; i < n ; i ++ ) { i ++ ;
rank: 221
score: 99.50870768229167
patch: for ( int i = k + 1 ; i == $NUMBER$ ; i ++ ) {
rank: 221
score: 99.50379774305556
patch: for ( int i = k + 1 ; 1 < n ; i ++ ) {
rank: 222
score: 99.52788696289062
patch: for ( int i = k + 1 ; i < max - 1 ; i ++ ) {
rank: 222
score: 99.48080283717105
patch: for ( int i = k + 1 ; i i <= n ; i ++ ) {
rank: 223
score: 99.52647569444444
patch: for ( int i = k + 0 ; i >= 0 ; i ++ ) {
rank: 223
score: 99.515234375
patch: for ( int i = k + 1 ; i <= n / $NUMBER$ ; i ++ ) {
rank: 223
score: 99.50718060661765
patch: for ( int i = $NUMBER$ ; i < n + 1 ; i ++ )
rank: 223
score: 99.50265842013889
patch: for ( int i = 0 ; i < n - 1 ; i -- ) {
rank: 223
score: 99.4927978515625
patch: for ( int i = i + 1 ; i <= n ; i ++ )
rank: 223
score: 99.48040093315973
patch: for ( int i = k ; i < k - n ; i ++ ) {
rank: 224
score: 99.50694364659927
patch: for ( int i = k - 1 ; i <= $NUMBER$ ; i ++ )
rank: 224
score: 99.50200737847223
patch: for ( int i = k ; i < n - 1 ; i -- ) {
rank: 224
score: 99.49266293174342
patch: for ( int i = k + 0 ; i <= n - k ; i ++ )
rank: 224
score: 99.48019891036184
patch: for ( int i = k + 1 ; i <= k 1 ; i ++ ) {
rank: 225
score: 99.52660023082386
patch: for ( int i = k + 1 ; i < n - k - k ; i ++ ) {
rank: 225
score: 99.50670708550348
patch: for ( int i = $NUMBER$ + 1 ; i >= $NUMBER$ ; i ++ ) {
rank: 225
score: 99.49264393682066
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) { return log CaMeL Sum ;
rank: 225
score: 99.48904079861111
patch: for ( int i = k - 1 ; i < n ; ++ i ) {
rank: 225
score: 99.48012823807566
patch: for ( int i = k + 1 ; i < n ; i ] ++ ) {
rank: 226
score: 99.53878784179688
patch: for ( int i = 0 ; i < n - k - k ; i ++ ) {
rank: 226
score: 99.5374755859375
patch: for ( int i = k + k ; i <= n + 1 ; i ++ ) {
rank: 226
score: 99.52564832899306
patch: for ( int i = k / 1 ; i <= 0 ; i ++ ) {
rank: 226
score: 99.50649844898896
patch: for ( int i = k ; i <= n + k ; i ++ )
rank: 226
score: 99.49212325246711
patch: for ( int i = k + 1 ; i > n - 1 ; i ++ )
rank: 226
score: 99.47998725043402
patch: for ( int i = k ; i <= n - n ; i ++ ) {
rank: 227
score: 99.53700657894737
patch: / k ! for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 227
score: 99.52629141971983
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( log CaMeL Sum ) ;
rank: 227
score: 99.50113932291667
patch: for ( int i = 0 ; i <= k / 1 ; i ++ ) {
rank: 227
score: 99.49189838610198
patch: for ( int i = k + $NUMBER$ ; i <= n - k ; i ++ )
rank: 227
score: 99.4888980263158
patch: for ( int i = 0 + 1 ; i <= n ; i ++ ) { {
rank: 228
score: 99.53675537109375
patch: for ( int i = k + 1 ; i < i - k ; i ++ ) {
rank: 228
score: 99.4914883700284
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= n ;
rank: 228
score: 99.4874203330592
patch: for ( int i = k + 1 ; i >= k + 1 ; i -- )
rank: 229
score: 99.53773328993056
patch: for ( int i = 0 ; i >= k - 1 ; i ++ ) {
rank: 229
score: 99.53604465060764
patch: for ( int i = $NUMBER$ + 0 ; i <= n ; i ++ ) {
rank: 229
score: 99.5060676125919
patch: for ( int i = $NUMBER$ ; i <= i - k ; i ++ )
rank: 229
score: 99.50077739514802
patch: for ( int i = k + 1 ; i < - $NUMBER$ ; i ++ ) {
rank: 229
score: 99.49144345238095
patch: for ( int i = k + 1 ; i < n - k - 1 ; i ++ )
rank: 229
score: 99.47813415527344
patch: for ( int i = 1 ; i <= i ; i ++ ) {
rank: 230
score: 99.53768117804276
patch: for ( int i = k + 1 ; i > - 1 ; i ++ ) {
rank: 230
score: 99.52581787109375
patch: for ( int i = $NUMBER$ + k + 1 ; i <= n ; i ++ ) {
rank: 230
score: 99.52405395507813
patch: for ( int i = k - 1 ; i <= k + 1 ; i ++ ) {
rank: 230
score: 99.51285400390626
patch: for ( int i = k + 1 ; i <= n + 1 ; ++ i ) {
rank: 230
score: 99.48699273003473
patch: for ( int i = k - 1 ; i <= k ; ++ i ) {
rank: 231
score: 99.52389526367188
patch: for ( int i = 0 + 1 + 1 ; i < n ; i ++ ) {
rank: 231
score: 99.51268310546875
patch: for ( int i = k + 1 ; i < k + $NUMBER$ ; i ++ ) {
rank: 231
score: 99.50032552083333
patch: for ( int i = k + k ; i < k ; i ++ ) {
rank: 231
score: 99.48693084716797
patch: for ( double i = 0 ; i <= n ; i ++ ) {
rank: 232
score: 99.51253662109374
patch: for ( int i = k + 1 ; i > i - 1 ; i -- ) {
rank: 232
score: 99.49907769097223
patch: for ( Integer i = k + 1 ; i < n ; i ++ ) {
rank: 232
score: 99.49083862304687
patch: for ( int i = k + 1 ; i < n - k ; i -- ) {
rank: 233
score: 99.53406372070313
patch: for ( int i = k - k ; i < n - k ; i ++ ) {
rank: 233
score: 99.52347412109376
patch: for ( int i = 0 , n = k ; i <= n ; i ++ ) {
rank: 233
score: 99.50515567555146
patch: for ( int i = - 1 ; i <= $NUMBER$ ; i ++ ) {
rank: 233
score: 99.49884033203125
patch: for ( int i = n + $NUMBER$ ; i < n ; i ++ ) {
rank: 233
score: 99.4858462685033
patch: for ( int i = k + 1 ; i <= k ; ++ ++ i ) {
rank: 233
score: 99.47672765395221
patch: for ( int i = k ; i <= n 1 ; i ++ ) {
rank: 234
score: 99.533935546875
patch: for ( int i = null ; i <= n ; i ++ ) {
rank: 234
score: 99.52506880326705
patch: k ! for ( int i = k + k - 1 ; i <= n ; i ++ ) {
rank: 234
score: 99.5234130859375
patch: for ( int i = k - 1 ; i < n - $NUMBER$ ; i ++ ) {
rank: 234
score: 99.50478786892361
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { { {
rank: 234
score: 99.47576904296875
patch: for ( int i = start + 1 ; i < n ; i ++ ) {
rank: 235
score: 99.53661499023437
patch: for ( int i = $NUMBER$ - 1 ; i <= n - 1 ; i ++ ) {
rank: 235
score: 99.52503051757813
patch: for ( int i = $NUMBER$ + n - 1 ; i <= n ; i ++ ) {
rank: 235
score: 99.51135864257813
patch: for ( Iterator i = n - 1 ; i . has CaMeL Next ( ) ; ) {
rank: 235
score: 99.50414321001838
patch: for ( int i = k + $NUMBER$ ; i < n ; i ++ )
rank: 235
score: 99.49868935032895
patch: for ( int i = k + 1 ; i >> < n ; i ++ ) {
rank: 235
score: 99.48486328125
patch: for ( int i = k + 1 ; i >= 0 ; i -- )
rank: 235
score: 99.47565018503289
patch: for ( int i = k + 0 ; i ++ <= n ; i ++ ) {
rank: 236
score: 99.52496892755681
patch: for ( int i = k + k + k - k ; i <= n ; i ++ ) {
rank: 236
score: 99.50407579210069
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { ) {
rank: 236
score: 99.49821472167969
patch: for ( int i = 0 ; i <= 1 ; i -- ) {
rank: 236
score: 99.48993241159539
patch: for ( int i = k - 1 ; i <= n - 1 ; i ++ )
rank: 236
score: 99.48472086588542
patch: for ( int i = 0 + 1 ; i < n ; ++ i ) {
rank: 237
score: 99.5318359375
patch: for ( int i = k + 1 ; i < n - 0 ; i ++ ) {
rank: 237
score: 99.52496892755681
patch: for ( int i = k + k - k ; i <= n - 1 ; i ++ ) {
rank: 237
score: 99.51112124794408
patch: for ( int i = n + 1 ; i < n ; i ++ ) { {
rank: 238
score: 99.52491396949405
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { i ++ ;
rank: 238
score: 99.51075575086806
patch: for ( int i = i + 1 ; i >= n ; i ++ ) {
rank: 238
score: 99.49738226996527
patch: for ( int i = k + 1 ; i >= 1 ; ++ i ) {
rank: 239
score: 99.53429565429687
patch: for ( int i = k - 0 ; i <= n - k ; i ++ ) {
rank: 239
score: 99.5314208984375
patch: for ( int i = k + 0 ; i < n - 1 ; i ++ ) {
rank: 239
score: 99.5243252840909
patch: for ( int i = k + 1 ; i <= ( n - k ) ; i ++ ) {
rank: 239
score: 99.52205403645833
patch: for ( int i = k - 1 ; i < $NUMBER$ ; i ++ ) {
rank: 239
score: 99.51073540581598
patch: * / for ( int i = 0 ; i < n ; i ++ ) {
rank: 239
score: 99.50336770450367
patch: for ( int i = $NUMBER$ - 1 ; i < n ; i ++ )
rank: 239
score: 99.48951822916666
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 239
score: 99.48423258463542
patch: for ( double i = k + 1 ; i >= n ; i -- ) {
rank: 239
score: 99.47470574629934
patch: for ( int i = k + 1 ; i <= n ; 1 ++ i ) {
rank: 240
score: 99.5311279296875
patch: for ( int i = k - k ; i <= n - 1 ; i ++ ) {
rank: 240
score: 99.52174072265625
patch: for ( int i = 0 + 1 + 1 ; i <= n ; i ++ ) {
rank: 240
score: 99.50308990478516
patch: for ( int i = k ; i >= 0 ; i ++ ) {
rank: 240
score: 99.49708387586806
patch: for ( int i = k + 1 ; i == n ; i -- ) {
rank: 240
score: 99.489501953125
patch: for ( int i = k + n ; i <= n - k ; i ++ ) {
rank: 240
score: 99.47432026110198
patch: for ( int i = k + 1 ; i -- <= k ; i ++ ) {
rank: 241
score: 99.53096923828124
patch: for ( int i = $NUMBER$ + 1 ; i < n + k ; i ++ ) {
rank: 241
score: 99.52415829613095
patch: for ( int i = k + k ; i <= n - k ; i ++ ) { {
rank: 241
score: 99.52171020507812
patch: for ( int i = k + 1 + 1 ; i >= n ; i ++ ) {
rank: 241
score: 99.5101318359375
patch: for ( int i = k - 1 ; i <= n + n ; i ++ ) {
rank: 241
score: 99.49512396918402
patch: for ( int i = 0 ; i <= n + 0 ; i ++ ) {
rank: 241
score: 99.4894510904948
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) { log CaMeL Sum += i ;
rank: 242
score: 99.52366041100544
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum ++ ;
rank: 242
score: 99.52169799804688
patch: for ( int i = k * 1 ; i <= n + 1 ; i ++ ) {
rank: 242
score: 99.50238037109375
patch: for ( int i = $NUMBER$ ; i != $NUMBER$ ; i ++ ) {
rank: 242
score: 99.48930921052632
patch: for ( int i = k + k ; i <= n - k ; i ++ )
rank: 243
score: 99.53294067382812
patch: for ( int i = 0 ; i <= n + k - k ; i ++ ) {
rank: 243
score: 99.52968343098958
patch: for ( int i = 0 ; i <= i + 1 ; i ++ ) {
rank: 243
score: 99.52351888020833
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( i ) ;
rank: 243
score: 99.50994194878473
patch: for ( int i = k / $NUMBER$ ; i <= n ; i ++ ) {
rank: 243
score: 99.49470350477431
patch: for ( int i = k + $NUMBER$ ; i < n ; ++ i ) {
rank: 243
score: 99.48889741443452
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum ++ ;
rank: 243
score: 99.48345269097223
patch: for ( int k = k + 1 ; k < n ; k ++ ) {
rank: 243
score: 99.47367778577302
patch: for ( int i = k + 1 ; i <= n - ; i ++ ) {
rank: 244
score: 99.5292236328125
patch: for ( int i = k + 1 ; i == n + k ; i ++ ) {
rank: 244
score: 99.52343139648437
patch: for ( int i = $NUMBER$ + n - k ; i <= n ; i ++ ) {
rank: 244
score: 99.50991821289062
patch: for ( int i = k * 1 ; i < n + 1 ; i ++ ) {
rank: 244
score: 99.50224473741319
patch: for ( int i = $NUMBER$ ; i >= n - k ; i ++ ) {
rank: 244
score: 99.48865763346355
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log (
rank: 244
score: 99.48334099264706
patch: for ( int i = k ; i <= n + 1 ; i ++ )
rank: 245
score: 99.53214518229167
patch: for ( int i = 0 ; i <= n - 0 ; i ++ ) {
rank: 245
score: 99.52853393554688
patch: for ( int i = k + 1 ; i <= i + k ; i ++ ) {
rank: 245
score: 99.50941772460938
patch: for ( int i = k + 1 ; i <= n > n ; i ++ ) {
rank: 245
score: 99.502197265625
patch: for ( int i = - k ; i <= n ; i ++ )
rank: 245
score: 99.48307291666667
patch: for ( int i = k - 1 ; i >= 0 ; ++ i ) {
rank: 245
score: 99.47328694661458
patch: for ( int i = Math + 1 ; i <= n ; i ++ ) {
rank: 246
score: 99.5224100748698
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum = 0 ;
rank: 246
score: 99.519921875
patch: for ( int i = k + 1 ; i < start - 1 ; i ++ ) {
rank: 246
score: 99.50170220269098
patch: for ( int i = 0 ; i <= i - k ; i ++ ) {
rank: 246
score: 99.49370659722223
patch: for ( int i = k + 1 ; i <= false ; i ++ ) {
rank: 246
score: 99.48817952473958
patch: for ( int i = $NUMBER$ ; i <= n - k ; i -- ) {
rank: 246
score: 99.48291733685662
patch: for ( int i = 0 1 ; i < n ; i ++ ) {
rank: 246
score: 99.47309426700367
patch: for ( int i = k ; i < k ; i 1 ++ ) {
rank: 247
score: 99.52237955729167
patch: for ( int i = Math . log ( ( double ) i ) ; i <= n ; i ++ ) {
rank: 247
score: 99.50162082248264
patch: for ( int i = $NUMBER$ + 1 ; i <= 1 ; i ++ ) {
rank: 247
score: 99.49320475260417
patch: for ( int i = k + k ; i <= n ; i -- ) {
rank: 247
score: 99.48255679481908
patch: for ( int i = k + 1 ; i >= k ; i ++ ) { {
rank: 248
score: 99.53144666883681
patch: for ( int i = $NUMBER$ ; i != n - 1 ; i ++ ) {
rank: 248
score: 99.52222521551724
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( log CaMeL Sum ) ;
rank: 248
score: 99.4925896139706
patch: for ( int i = k + 1 ; i <= n ; i -- )
rank: 249
score: 99.53144274259868
patch: for ( int i = k + 1 ; i >= - k ; i ++ ) {
rank: 249
score: 99.52723524305556
patch: for ( int i = $NUMBER$ ; i <= k + 1 ; i ++ ) {
rank: 249
score: 99.5221637228261
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { if ( i == 1 ) {
rank: 249
score: 99.51912841796874
patch: for ( int i = k + 1 ; i <= 0 - 1 ; i ++ ) {
rank: 249
score: 99.50149197048611
patch: for ( int i = $NUMBER$ ; i >= 0 - k ; i ++ ) {
rank: 249
score: 99.49212646484375
patch: for ( int i = 0 ; i <= 0 ; i -- ) {
rank: 249
score: 99.48705150462963
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i ) ;
rank: 249
score: 99.48177761501736
patch: for ( int i = k - 1 ; i >= k ; ++ i ) {
rank: 249
score: 99.4718017578125
patch: for ( int i = k ; i < k + n ; i ++ ) {
rank: 250
score: 99.521728515625
patch: for ( int i = k + n - k ; i <= n - k ; i ++ ) {
rank: 250
score: 99.50834147135417
patch: for ( int i = 1 ; i < n + n ; i ++ ) {
rank: 250
score: 99.4870096842448
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum += Math . log (
rank: 251
score: 99.526611328125
patch: for ( int i = k + 1 ; i == 1 ; i ++ ) {
rank: 251
score: 99.51862928602431
patch: for ( int i = 0 + 1 ; i <= max ; i ++ ) {
rank: 251
score: 99.507763671875
patch: for ( int i = k + 1 ; i >= n - n ; i ++ ) {
rank: 251
score: 99.50091193704044
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { )
rank: 251
score: 99.49052991365132
patch: for ( int i = k + 1 ; i < n ; i -- ) { {
rank: 251
score: 99.48662971047794
patch: for ( int i = k + 1 ; i > n ; i ++ )
rank: 251
score: 99.48152240953948
patch: for ( int i = k - 1 ; i <= n + 1 ; i ++ )
rank: 252
score: 99.53055826822917
patch: for ( int i = $NUMBER$ + 1 ; i >= n ; i ++ ) {
rank: 252
score: 99.51845703125
patch: for ( int i = k - 1 ; i <= n + $NUMBER$ ; i ++ ) {
rank: 252
score: 99.50759887695312
patch: for ( int i = k - 1 ; i >= k + 1 ; i -- ) {
rank: 252
score: 99.48958333333333
patch: for ( int i = k + 1 ; k < n ; i ++ ) {
rank: 252
score: 99.48648734714673
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += i ) ;
rank: 252
score: 99.48008219401042
patch: for ( Iterator i = ) ; i . has CaMeL Next ( ) ; ) {
rank: 253
score: 99.53037719726562
patch: for ( int i = $NUMBER$ ; i <= n + k - 1 ; i ++ ) {
rank: 253
score: 99.52109596946023
patch: for ( int i = k + k - k - 1 ; i <= n ; i ++ ) {
rank: 253
score: 99.51775444878473
patch: for ( int i = 1 + 1 ; i <= 0 ; i ++ ) {
rank: 253
score: 99.507470703125
patch: for ( int i = k - 1 ; i < n + $NUMBER$ ; i ++ ) {
rank: 253
score: 99.50034466911765
patch: for ( int i = $NUMBER$ ; i >= - k ; i ++ ) {
rank: 253
score: 99.48955620659723
patch: for ( Integer i = k + 1 ; i <= n ; i ++ ) {
rank: 253
score: 99.48624674479167
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 253
score: 99.47990587022569
patch: for ( int i = k - 1 ; i > k ; i -- ) {
rank: 254
score: 99.53034973144531
patch: for ( int i = 1 ; i == n ; i ++ ) {
rank: 254
score: 99.52619764539931
patch: for ( int i = 0 - 1 ; i < n ; i ++ ) {
rank: 254
score: 99.4891357421875
patch: for ( int i = k + 1 ; i < n ; -- i ) {
rank: 254
score: 99.48617699032738
patch: for ( int i = k + 1 ; i <= n - k - k ; i ++ )
rank: 254
score: 99.47982449001736
patch: for ( int i = k + 1 ; i != n ; ++ i ) {
rank: 255
score: 99.52100670855978
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { ( ( double ) i ) .
rank: 255
score: 99.517333984375
patch: for ( int i = 0 + n + 1 ; i < n ; i ++ ) {
rank: 255
score: 99.49982048483456
patch: for ( int i = $NUMBER$ ; i >= k ; i ++ ) { {
rank: 255
score: 99.4796078330592
patch: for ( int i = k + 1 ; i >= 0 ; i -- ) { {
rank: 256
score: 99.50733642578125
patch: for ( int i = k + k + 1 ; i >= n ; i -- ) {
rank: 256
score: 99.49969075520833
patch: for ( int i = $NUMBER$ ; i == $NUMBER$ ; i ++ )
rank: 256
score: 99.48579545454545
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= $NUMBER$ ;
rank: 256
score: 99.47934977213542
patch: for ( Number i = k + 1 ; i < n ; i ++ ) {
rank: 257
score: 99.52076099537037
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( $NUMBER$ ) ;
rank: 257
score: 99.49961344401042
patch: for ( int i = k + - 1 ; i <= n ; i ++ )
rank: 257
score: 99.48856608072917
patch: for ( int i = 0 ; i < k + $NUMBER$ ; i ++ ) {
rank: 257
score: 99.48575632195724
patch: for ( int i = k + 1 ; i <= n - $NUMBER$ ; i ++ )
rank: 257
score: 99.47934139476104
patch: for ( int i = 0 1 ; i <= n ; i ++ ) {
rank: 257
score: 99.46918801700367
patch: for ( int i = k ; i <= k ; i 1 ++ ) {
rank: 258
score: 99.52025010850694
patch: if ( ( k == 1 ) || ( k == n - k ) ) {
rank: 258
score: 99.51650390625
patch: for ( int i = k + 1 ; i < 0 + 1 ; i ++ ) {
rank: 258
score: 99.49945427389706
patch: for ( int i = $NUMBER$ ; i >= 0 ; i ++ ) { {
rank: 258
score: 99.47891055836396
patch: for ( int i = + 1 ; i <= n ; i ++ ) {
rank: 258
score: 99.46885172526042
patch: for ( int i = n + 1 ; i <= n ; ++ i ) {
rank: 259
score: 99.5294921875
patch: for ( int i = k ; i < n - k - k ; i ++ ) {
rank: 259
score: 99.52506713867187
patch: for ( int i = k + 0 ; i <= n + 1 ; i ++ ) {
rank: 259
score: 99.52010995370371
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( k ) ;
rank: 259
score: 99.49932454427083
patch: for ( int i = $NUMBER$ ; i <= i ; i ++ )
rank: 259
score: 99.48821343315973
patch: for ( int i = k ; i <= n - 1 ; i -- ) {
rank: 259
score: 99.48560732886905
patch: for ( int i = k + 1 + 1 ; i <= n - k ; i ++ )
rank: 259
score: 99.47861842105263
patch: for ( int i = k + 1 ; i <= n $NUMBER$ ; i ++ ) {
rank: 259
score: 99.46785481770833
patch: for ( int i = k + 1 || i <= n ; i ++ ) {
rank: 260
score: 99.52500915527344
patch: for ( int i = $NUMBER$ ; i < 0 ; i ++ ) {
rank: 260
score: 99.52003173828125
patch: for ( int i = $NUMBER$ ; i <= n - 1 - 1 ; i ++ ) {
rank: 260
score: 99.51597900390625
patch: for ( int i = k + 1 ; i <= 1 + 1 ; i ++ ) {
rank: 260
score: 99.49927475873162
patch: for ( int i = - 1 ; i <= k ; i ++ ) {
rank: 260
score: 99.48784044053819
patch: for ( int i = 0 ; i <= n - $NUMBER$ ; i ++ ) {
rank: 260
score: 99.48475230823864
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += false ;
rank: 260
score: 99.47857344777961
patch: for ( int i = k + 1 ; i >= n ; i -= $NUMBER$ ) {
rank: 260
score: 99.4676513671875
patch: / * for ( int i = k ; i < n ; i ++ ) {
rank: 261
score: 99.52490234375
patch: for ( int i = - 1 ; i < n - k ; i ++ ) {
rank: 261
score: 99.51982189360119
patch: for ( Iterator i = k + 1 ; i . < n - k ; i ++ ) {
rank: 261
score: 99.49925321691177
patch: for ( int int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 261
score: 99.48760308159723
patch: for ( int i = k + 1 ; i < n ; i ++ ) )
rank: 261
score: 99.46729951746323
patch: for ( int i = k ; i <= - 1 ; i ++ ) {
rank: 262
score: 99.52902560763889
patch: for ( int i = 1 - 1 ; i <= n ; i ++ ) {
rank: 262
score: 99.50623236762152
patch: for ( int i = i + 1 ; i >= n ; i -- ) {
rank: 262
score: 99.47814263237848
patch: for ( int i = k - 1 ; i >= $NUMBER$ ; i -- ) {
rank: 262
score: 99.46729233685662
patch: for ( int i = 0 ; i <= n ; i ++ ) { )
rank: 263
score: 99.51922286184211
patch: for ( Iterator i = k + 1 ; i . < n ; i ++ ) {
rank: 263
score: 99.49921875
patch: for ( int i = 1 ; i <= $NUMBER$ ; i ++ )
rank: 263
score: 99.48390706380208
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= 0 . 0 ;
rank: 264
score: 99.51920572916667
patch: / n ! for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 264
score: 99.51483764648438
patch: for ( int i = 0 + n + 1 ; i <= n ; i ++ ) {
rank: 264
score: 99.5059814453125
patch: for ( int i = k ; i >= n + 1 ; i ++ ) {
rank: 264
score: 99.48685031467014
patch: for ( int i = k ; i < n + 0 ; i ++ ) {
rank: 264
score: 99.4761962890625
patch: for ( int i = i - 1 ; i <= n ; i ++ ) {
rank: 265
score: 99.51883370535714
patch: for ( int int i = k + 1 ; i <= n - k ; i ++ ) {
rank: 265
score: 99.51464165581598
patch: for ( int i = k | 1 ; i <= n ; i ++ ) {
rank: 265
score: 99.5053955078125
patch: for ( Iterator i = k - 1 ; i . has CaMeL Next ( ) ; ) {
rank: 266
score: 99.51861893503289
patch: for ( int i = k ; i <= n - k ; i ++ ) { {
rank: 266
score: 99.5052490234375
patch: for ( int i = i + 1 ; i < n - 1 ; i ++ ) {
rank: 266
score: 99.46567789713542
patch: for ( int i = k + 1 ; i <= n ; n ++ ) {
rank: 267
score: 99.5185791015625
patch: k ! for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 267
score: 99.51409912109375
patch: for ( int i = k + 1 ; i >= length ; i ++ ) {
rank: 267
score: 99.50497275904605
patch: for ( int i = k + 1 ; i < n + $NUMBER$ ; i ++ )
rank: 267
score: 99.48654513888889
patch: for ( int i = 0 ; i < this . n ; i ++ ) {
rank: 267
score: 99.47586862664474
patch: for ( int i = k + 1 1 ; i <= n ; i ++ ) {
rank: 267
score: 99.46550835503473
patch: for ( int i = k + 1 && i < n ; i ++ ) {
rank: 268
score: 99.52351648667279
patch: for ( int i = $NUMBER$ ; i < n 1 ; i ++ ) {
rank: 268
score: 99.518310546875
patch: for ( int i = k + 1 ; i <= n + k - 1 ; i ++ ) {
rank: 268
score: 99.50496826171874
patch: * * for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 268
score: 99.49666595458984
patch: for ( int i = 1 ; i >= $NUMBER$ ; i ++ ) {
rank: 268
score: 99.48347981770833
patch: for ( int i = 0 ; i <= n ; i ++ ) { return log CaMeL Sum ;
rank: 268
score: 99.47572085731908
patch: for ( int i = k + 1 ; i < n $NUMBER$ ; i ++ ) {
rank: 268
score: 99.46540662977431
patch: for ( int i = n + 1 ; i <= i ; i ++ ) {
rank: 269
score: 99.52752075195312
patch: for ( int i = $NUMBER$ ; i + 1 <= n - k ; i ++ ) {
rank: 269
score: 99.51774992766204
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( $NUMBER$ ) ;
rank: 269
score: 99.51346842447917
patch: for ( int i = k - $NUMBER$ ; i >= 0 ; i ++ ) {
rank: 269
score: 99.50491333007812
patch: for ( int i = k + 1 ; i > n + 1 ; i -- ) {
rank: 269
score: 99.49620863970588
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { ;
rank: 269
score: 99.48555755615234
patch: for ( int i = k ; i < $STRING$ ; i ++ ) {
rank: 269
score: 99.46483018663194
patch: for ( int i = k ; i < n ; i ; i ++ ) {
rank: 270
score: 99.52718505859374
patch: for ( int i = 0 - 1 ; i <= n - k ; i ++ ) {
rank: 270
score: 99.51774379185268
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( - i ) ;
rank: 270
score: 99.50376586914062
patch: for ( int i = k / 1 ; i <= n + 1 ; i ++ ) {
rank: 270
score: 99.48553466796875
patch: for ( int i = n + 1 ; i < 0 ; i ++ ) {
rank: 270
score: 99.47503340871711
patch: double for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 270
score: 99.46482447574013
patch: for ( int i = n + 1 ; i <= n ; i ++ ) { )
rank: 271
score: 99.52310180664062
patch: for ( int i = $NUMBER$ ; i <= n - 1 : n ; i ++ ) {
rank: 271
score: 99.51747866030092
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( $STRING$ ) ;
rank: 271
score: 99.49540201822917
patch: for ( int i = 0 ; i >= $NUMBER$ ; i ++ )
rank: 271
score: 99.483056640625
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += ( double ) i ;
rank: 271
score: 99.47478926809211
patch: for ( int i = k ] + 1 ; i <= n ; i ++ ) {
rank: 271
score: 99.46471489800348
patch: for ( int i = k ; i < n / n ; i ++ ) {
rank: 272
score: 99.52606964111328
patch: for ( int i = 0 ; i > 0 ; i ++ ) {
rank: 272
score: 99.52283935546875
patch: for ( int i = k - k - 1 ; i < n ; i ++ ) {
rank: 272
score: 99.51198120117188
patch: for ( int i = k - $NUMBER$ ; i <= n + 1 ; i ++ ) {
rank: 272
score: 99.50290256076389
patch: for ( int i = i - 1 ; i < n ; i ++ ) {
rank: 272
score: 99.49484049479166
patch: for ( int i = $NUMBER$ ; i > $NUMBER$ ; i ++ )
rank: 272
score: 99.48304443359375
patch: for ( int i = k + 1 ; i <= n - 1 ; ++ i ) {
rank: 272
score: 99.47381913034539
patch: / for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 273
score: 99.52592468261719
patch: for ( int i = 0 ; i > $NUMBER$ ; i ++ ) {
rank: 273
score: 99.51610423900463
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( k ) ;
rank: 273
score: 99.48264674136513
patch: for ( int i = k + k + 1 ; i <= n ; i ++ )
rank: 273
score: 99.47373453776042
patch: for ( int i = n - 1 ; i >= k ; i -- ) {
rank: 273
score: 99.46461888363487
patch: for ( int i = k + 1 ; i -- < n ; i ++ ) {
rank: 274
score: 99.52582397460938
patch: for ( int i = k ; i <= n - k + k ; i ++ ) {
rank: 274
score: 99.52255249023438
patch: for ( int i = 0 : n - 1 ; i <= n ; i ++ ) {
rank: 274
score: 99.5115478515625
patch: for ( int i = 0 + 1 ; i >= n - 1 ; i ++ ) {
rank: 274
score: 99.50240749782986
patch: for ( int i = 0 ; i <= n + n ; i ++ ) {
rank: 274
score: 99.49383544921875
patch: for ( int i = k ; i >= k ; i ++ ) {
rank: 274
score: 99.48496500651042
patch: for ( int i = k + $NUMBER$ ; i <= n ; ++ i ) {
rank: 274
score: 99.48203938802084
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 274
score: 99.46449788411458
patch: for ( int i = n - 1 ; i < n ; i ++ ) {
rank: 275
score: 99.52199300130208
patch: for ( int i = $NUMBER$ ; i <= n + 0 ; i ++ ) {
rank: 275
score: 99.48450991981908
patch: for ( int i = k + $NUMBER$ ; i < - 1 ; i ++ ) {
rank: 275
score: 99.48170107886905
patch: for ( int i = k + 1 ; i . < n - 1 ; i ++ ) {
rank: 275
score: 99.47339545355902
patch: for ( int i = 0 + 1 ; i <= n ; ++ i ) {
rank: 276
score: 99.52086046006944
patch: for ( int i = $NUMBER$ + 1 ; i < k ; i ++ ) {
rank: 276
score: 99.51379815463362
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 276
score: 99.51127319335937
patch: for ( int i = k - 1 ; i <= length - 1 ; i ++ ) {
rank: 276
score: 99.49330647786458
patch: for ( int i = k + k ; i == n ; i ++ ) {
rank: 276
score: 99.48428505345395
patch: for ( int i = k + 1 ; i <= n ; i += 1 ) {
rank: 276
score: 99.47304280598958
patch: for ( int i = k - 1 ; i >= n ; -- i ) {
rank: 277
score: 99.52554481907895
patch: for ( int i = k - - 1 ; i <= n ; i ++ ) {
rank: 277
score: 99.51370675223214
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( - i ) ;
rank: 277
score: 99.50212016858552
patch: for ( int i = i + 1 ; i < n ; i ++ ) { {
rank: 277
score: 99.49302164713542
patch: for ( int i = k ; i <= n ; i ++ ) { { {
rank: 277
score: 99.48100842927632
patch: for ( int i = k ] ; i <= n - k ; i ++ ) {
rank: 277
score: 99.47282140395221
patch: for ( int i = k ; i <= k + 1 ; i ++ )
rank: 277
score: 99.46396891276042
patch: for ( int i = k ; i < k / n ; i ++ ) {
rank: 278
score: 99.51364968039773
patch: for ( int i = k + k - 1 ; i < n - k ; i ++ ) {
rank: 278
score: 99.51109483506944
patch: for ( int i = 0 + 1 ; i < $NUMBER$ ; i ++ ) {
rank: 278
score: 99.50200805664062
patch: for ( int i = k + 1 ; i > n + 1 ; i ++ ) {
rank: 278
score: 99.49235704210069
patch: for ( int i = k + k ; i >= 0 ; i ++ ) {
rank: 278
score: 99.48299153645833
patch: for ( int i = 0 ; i < i + 1 ; i ++ ) {
rank: 278
score: 99.48041326349431
patch: this . for ( int i = k + 1 ; i <= n - k ; i ++ ) {
rank: 278
score: 99.47256808810764
patch: for ( int k = k + 1 ; k < n ; i ++ ) {
rank: 278
score: 99.46386040581598
patch: for ( int i = 1 ; i < n ; i ++ ) { ) {
rank: 279
score: 99.5250244140625
patch: for ( int i = k ; i <= n - k + 1 ; i ++ ) {
rank: 279
score: 99.51362748579545
patch: for ( int i = k + n - 1 ; i <= n - k ; i ++ ) {
rank: 279
score: 99.49200798483456
patch: for ( int i = $NUMBER$ ; i == n - k ; i ++ )
rank: 279
score: 99.47243780838816
patch: for ( int i = k - 1 ; i <= k - 1 ; i ++ )
rank: 279
score: 99.46369934082031
patch: for ( Object i = k ; i <= n ; i ++ ) {
rank: 280
score: 99.5198974609375
patch: for ( int i = k + k ; i < n + k ; i ++ ) {
rank: 280
score: 99.51048583984375
patch: for ( int i = k - 1 ; i < k + 1 ; i ++ ) {
rank: 280
score: 99.49164177389706
patch: for ( int i = k + 1 ; i > $NUMBER$ ; i ++ )
rank: 280
score: 99.48276774088542
patch: for ( int i = 0 ; i < k / 1 ; i ++ ) {
rank: 280
score: 99.47227567784927
patch: for ( int i = k - 1 ; i >= 1 ; i -- )
rank: 280
score: 99.46364232113487
patch: for ( int i = k + 1 ; i ++ <= 0 ; i ++ ) {
rank: 281
score: 99.5015869140625
patch: for ( int i = i ; i < n + 1 ; i ++ ) {
rank: 281
score: 99.49087727864584
patch: for ( int i = $NUMBER$ ; i == k ; i ++ )
rank: 282
score: 99.51890733506944
patch: for ( int i = size + 1 ; i < n ; i ++ ) {
rank: 282
score: 99.51321072048611
patch: n ! for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 282
score: 99.5101318359375
patch: for ( int i = 0 + 1 ; i <= n + $NUMBER$ ; i ++ ) {
rank: 282
score: 99.50152587890625
patch: for ( int i = k + 1 ; i <= n / n ; i ++ ) {
rank: 282
score: 99.47944946289063
patch: for ( int i = n - 1 ; i <= n - 1 ; i ++ ) {
rank: 282
score: 99.4620425575658
patch: for ( int i = n + 1 ; i <= n ; i ++ ) { {
rank: 283
score: 99.51849975585938
patch: for ( int i = $NUMBER$ : k - 1 ; i <= n ; i ++ ) {
rank: 283
score: 99.51309317129629
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( $STRING$ ) ;
rank: 283
score: 99.51010131835938
patch: for ( int i = k + 1 ; i >= 1 + 1 ; i ++ ) {
rank: 283
score: 99.47120425575658
patch: for ( int i = k - 1 ; i <= n ; ++ ++ i ) {
rank: 283
score: 99.46192084418402
patch: for ( int i = k ; i <= 1 + 1 ; i ++ ) {
rank: 284
score: 99.52383761935764
patch: for ( int i = k - 1 ; i > 1 ; i ++ ) {
rank: 284
score: 99.518408203125
patch: for ( int i = k + k : n ; i <= n ; i ++ ) {
rank: 284
score: 99.51270640980114
patch: for ( int i = k + 1 + k - k ; i <= n ; i ++ ) {
rank: 284
score: 99.51002197265625
patch: for ( int i = k + 1 ; i >= start - 1 ; i ++ ) {
rank: 284
score: 99.48985380284927
patch: for ( int i = 0 ; i < n - k ; i ++ )
rank: 284
score: 99.4810726768092
patch: for ( int i = k + 1 ; i <= n + ; i ++ ) {
rank: 284
score: 99.47118377685547
patch: for ( int i = k ; i != k ; i ++ ) {
rank: 285
score: 99.51807250976563
patch: for ( int i = k - 1 - 1 ; i <= n ; i ++ ) {
rank: 285
score: 99.50955539279514
patch: for ( int i = k - 1 ; i < i ; i ++ ) {
rank: 285
score: 99.4896240234375
patch: for ( Object i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 285
score: 99.47079128689236
patch: for ( int i = k - 1 ; i >= i ; i ++ ) {
rank: 285
score: 99.46152215254934
patch: for ( int i = k + 1 ; i <= k ; i 1 ++ ) {
rank: 286
score: 99.50884331597223
patch: for ( int i = k * 1 ; i <= k ; i ++ ) {
rank: 286
score: 99.49915771484375
patch: for ( int i = k + 1 + 1 ; i >= n ; i -- ) {
rank: 286
score: 99.47895869502315
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i ) ;
rank: 286
score: 99.46116807725694
patch: for ( int i = k ; i <= k / n ; i ++ ) {
rank: 287
score: 99.50866021050348
patch: for ( int i = k + 1 ; i >= max ; i ++ ) {
rank: 287
score: 99.49882202148437
patch: for ( int i = k + 1 ; i < n * 1 ; i ++ ) {
rank: 287
score: 99.47989230685764
patch: for ( int i = k + 1 ; i < size ; i -- ) {
rank: 287
score: 99.47052764892578
patch: for ( double i = k ; i <= n ; i ++ ) {
rank: 288
score: 99.52197875976563
patch: for ( int i = k + 1 + 1 ; i == n ; i ++ ) {
rank: 288
score: 99.51778564453124
patch: / / k ! for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 288
score: 99.50863486842105
patch: for ( int i = k - 1 ; i <= - 1 ; i ++ ) {
rank: 288
score: 99.48902803308823
patch: for ( int i = $NUMBER$ ; i + 1 <= n ; i ++ )
rank: 288
score: 99.4703369140625
patch: for ( int i = k + 1 ; i > i ; i -- ) {
rank: 289
score: 99.51216264204545
patch: for ( int i = k + k + k ; i <= n - 1 ; i ++ ) {
rank: 289
score: 99.49861653645833
patch: * / for ( int i = k ; i < n ; i ++ ) {
rank: 289
score: 99.48875517003677
patch: for ( int i = k - 1 ; i >= $NUMBER$ ; i ++ )
rank: 289
score: 99.46066463694854
patch: for ( int i = k ; i <= n ; i i ++ ) {
rank: 290
score: 99.48848470052083
patch: for ( int i = k + k ; i <= 1 ; i ++ ) {
rank: 290
score: 99.47795758928571
patch: for ( final int i = k + 1 ; i <= n - k ; i ++ ) {
rank: 290
score: 99.46030680338542
patch: for ( int i = k ; i <= k - n ; i ++ ) {
rank: 291
score: 99.51168823242188
patch: k ! k ! for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 291
score: 99.49854125976563
patch: for ( int i = k + 1 ; i < n * n ; i ++ ) {
rank: 291
score: 99.48764935661765
patch: for ( int i = 0 ; i <= k ; i ++ ) { {
rank: 291
score: 99.47876654730902
patch: for ( int i = k ; i < n - $NUMBER$ ; i ++ ) {
rank: 291
score: 99.46976511101974
patch: * for ( int i = k + 1 ; i <= k ; i ++ ) {
rank: 292
score: 99.52188720703126
patch: for ( Iterator i = n - 1 ; i <= n - k ; i ++ ) {
rank: 292
score: 99.51099742542614
patch: for ( int i = k + k - k - k ; i <= n ; i ++ ) {
rank: 292
score: 99.48732622931985
patch: for ( int i = 0 ; i <= $NUMBER$ ; i ++ ) { {
rank: 292
score: 99.47874691611842
patch: } for ( int i = k + 1 ; i < n ; i -- ) {
rank: 292
score: 99.46959771050348
patch: for ( int i = k * n ; i <= n ; i ++ ) {
rank: 292
score: 99.45958116319444
patch: for ( int i = 1 + n ; i <= n ; i ++ ) {
rank: 293
score: 99.5216064453125
patch: for ( int i = $NUMBER$ + 1 ; i != n ; i ++ ) {
rank: 293
score: 99.51094970703124
patch: for ( int i = $NUMBER$ + $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 293
score: 99.49828491210937
patch: for ( int i = k + 1 ; i < n == n ; i ++ ) {
rank: 293
score: 99.47834608289931
patch: for ( Object i = k + 1 ; i < n ; i ++ ) {
rank: 293
score: 99.47758178710937
patch: for ( int i = $NUMBER$ ; i <= ( n - k ) ; i ++ ) {
rank: 293
score: 99.46891276041667
patch: for ( int i = n + 1 ; i >= k ; i -- ) {
rank: 293
score: 99.45928955078125
patch: for ( int i = k + n ; i >= k ; i ++ ) {
rank: 294
score: 99.51083034939236
patch: for ( int i = 1 + k ; i <= n ; i ++ ) {
rank: 294
score: 99.47742984169408
patch: for ( int i = k + 1 ; i != n - k ; i ++ )
rank: 295
score: 99.52153930664062
patch: for ( int i = $NUMBER$ + i + 1 ; i <= n ; i ++ ) {
rank: 295
score: 99.50756157769098
patch: for ( int i = k - 1 ; i <= length ; i ++ ) {
rank: 295
score: 99.49805908203125
patch: for ( int i = k + n + 1 ; i >= n ; i -- ) {
rank: 295
score: 99.48606962316177
patch: for ( int i = $NUMBER$ ; i <= - k ; i ++ ) {
rank: 295
score: 99.45914713541667
patch: for ( int i = k + n ; i < k ; i ++ ) {
rank: 296
score: 99.52140502929687
patch: for ( int i = k + 1 ; i + 1 == n ; i ++ ) {
rank: 296
score: 99.49785766601562
patch: for ( int i = n + 1 ; i < n + $NUMBER$ ; i ++ ) {
rank: 296
score: 99.485107421875
patch: for ( int i = k + k ; i >= k ; i ++ ) {
rank: 296
score: 99.477001953125
patch: for ( int i = 1 ; i < n - k - 1 ; i ++ ) {
rank: 296
score: 99.47635048314145
patch: for ( int i = 0 ; i <= n + 1 ; i ++ ) { {
rank: 296
score: 99.4675228721217
patch: for ( int i = k + 1 ; i <= k - 1 ; i ++ )
rank: 297
score: 99.48506673177083
patch: for ( int i = 1 ; i <= k ; i ++ )
rank: 297
score: 99.476904296875
patch: for ( int i = $NUMBER$ ; i < ( n - k ) ; i ++ ) {
rank: 297
score: 99.47622841282895
patch: for ( int i = k + 1 ; i < n + 1 ; i -- )
rank: 297
score: 99.46748621323529
patch: for ( int i = k 0 ; i < n ; i ++ ) {
rank: 298
score: 99.49732055664063
patch: for ( int i = k + 1 ; i >= n + $NUMBER$ ; i -- ) {
rank: 298
score: 99.46700246710526
patch: for ( int i = k + + 1 ; i < n ; i ++ ) {
rank: 298
score: 99.45844377790179
patch: for ( int i ; i <= n ; i ++ ) {
rank: 299
score: 99.52102661132812
patch: for ( int i = $NUMBER$ + n + 1 ; i <= n ; i ++ ) {
rank: 299
score: 99.50653076171875
patch: for ( int i = k / 1 ; i <= n - 1 ; i ++ ) {
rank: 299
score: 99.49655633223684
patch: for ( int i = k + 1 ; i < n + n ; i ++ )
rank: 299
score: 99.48457605698529
patch: for ( int i = k - 1 ; i == n ; i ++ )
rank: 299
score: 99.47674239309211
patch: for ( int i = n + 1 ; i <= n - 1 ; i ++ )
rank: 299
score: 99.47494167751736
patch: for ( int i = k + 1 ; i < value ; i ++ ) {
rank: 299
score: 99.45832655164931
patch: / * for ( int i = k ; i <= k ; i ++ ) {
rank: 300
score: 99.52031114366319
patch: for ( int i = k - 1 ; i > k ; i ++ ) {
rank: 300
score: 99.50972254136029
patch: for ( k = k + 1 ; i <= n ; i ++ ) {
rank: 300
score: 99.50628662109375
patch: for ( int i = 0 ; i < n - $NUMBER$ ; i ++ ) {
rank: 300
score: 99.49649047851562
patch: for ( int i = k - 1 ; i >= i - 1 ; i -- ) {
rank: 301
score: 99.51939086914062
patch: for ( int i = max + 1 ; i <= n - k ; i ++ ) {
rank: 301
score: 99.51494750976562
patch: for ( int i = k + k ; i < n + 1 ; i ++ ) {
rank: 301
score: 99.50967068142361
patch: k ! for ( int i = 0 ; i <= n ; i ++ ) {
rank: 301
score: 99.4964599609375
patch: for ( int i = k + k + 1 ; i >= n ; i ++ ) {
rank: 301
score: 99.474609375
patch: for ( byte i = k + 1 ; i < n ; i ++ ) {
rank: 301
score: 99.46577533922698
patch: for ( int i = k + 1 ; i >= i ; i -- ) { {
rank: 301
score: 99.45789930555556
patch: for ( int i = k . 1 ; i <= n ; i ++ ) {
rank: 302
score: 99.51934455422794
patch: for ( int i = $NUMBER$ ; i <= - 1 ; i ++ ) {
rank: 302
score: 99.50961190682871
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 302
score: 99.48260857077206
patch: for ( int i = $NUMBER$ + 1 ; i <= k ; i ++ )
rank: 302
score: 99.46549265008224
patch: for ( int i = k + 1 ; i >= k + 1 ; i ++ )
rank: 302
score: 99.45770941840277
patch: for ( int i = k ; i + 1 > n ; i ++ ) {
rank: 303
score: 99.5148681640625
patch: for ( int i = k + 1 ; i <= k + k ; i ++ ) {
rank: 303
score: 99.50922185724431
patch: k ! for ( int i = k + 1 ; i < n - k ; i ++ ) {
rank: 303
score: 99.50488891601563
patch: for ( int i = k - $NUMBER$ ; i < n - 1 ; i ++ ) {
rank: 303
score: 99.47545855978261
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= i ) ;
rank: 303
score: 99.47437201605902
patch: for ( int i = k ; i <= k / 1 ; i ++ ) {
rank: 303
score: 99.46503649259868
patch: for ( int i = k + 1 ; i >= n ; ++ i ) { {
rank: 304
score: 99.50921875
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { double log CaMeL Sum = 0 ;
rank: 304
score: 99.49578857421875
patch: * / for ( int i = k + 1 ; i >= n ; i ++ ) {
rank: 304
score: 99.47538034539474
patch: for ( final int i = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 304
score: 99.47435167100694
patch: for ( int i = n + $NUMBER$ ; i <= n ; i ++ ) {
rank: 304
score: 99.45756022135417
patch: for ( int i = k + 0 ; i >= k ; i ++ ) {
rank: 305
score: 99.50913422683189
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 305
score: 99.50439453125
patch: for ( int i = 0 + 1 ; i >= k ; i ++ ) {
rank: 305
score: 99.49578247070312
patch: * / for ( int i = 0 ; i < n + 1 ; i ++ ) {
rank: 305
score: 99.48212028952206
patch: for ( int i = $NUMBER$ ; i >= - 1 ; i ++ ) {
rank: 305
score: 99.47533162434895
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= 0 . 1 ;
rank: 305
score: 99.47423031455592
patch: for ( int i = k + 1 ; i <= - $NUMBER$ ; i ++ ) {
rank: 305
score: 99.46462673611111
patch: for ( int n = k + 1 ; i <= n ; ++ n ) {
rank: 306
score: 99.51874743009868
patch: for k ! for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 306
score: 99.50894504123264
patch: for ( int i = $NUMBER$ + i ; i <= n ; i ++ ) {
rank: 306
score: 99.50394897460937
patch: for ( int i = k - 1 ; i <= i - 1 ; i ++ ) {
rank: 306
score: 99.49518432617188
patch: for ( int i = 0 ; i < ( n - 1 ) ; i ++ ) {
rank: 306
score: 99.48180474175348
patch: for ( int i = $NUMBER$ + 1 ; i >= k ; i ++ ) {
rank: 306
score: 99.47521362304687
patch: for ( int i = k + 1 ; i >= n - k ; i -- ) {
rank: 306
score: 99.47410583496094
patch: for ( int i = k ; i < 0 ; i -- ) {
rank: 306
score: 99.46462530838816
patch: n * / for ( int i = 0 ; i < n ; i ++ ) {
rank: 306
score: 99.45677354600694
patch: for ( int i = k ; i <= n ; i ; i ++ ) {
rank: 307
score: 99.51849975585938
patch: for ( int i = k - 1 ; i >= n - k ; i ++ ) {
rank: 307
score: 99.49503173828126
patch: for ( int i = k ; i < ( n - 1 ) ; i ++ ) {
rank: 307
score: 99.48136632582721
patch: for ( int i = k + 1 ; i < $NUMBER$ ; i ++ )
rank: 307
score: 99.47507195723684
patch: for ( int i = 0 + 1 ; i <= n - k ; i ++ )
rank: 307
score: 99.46455463610198
patch: for ( int i = k + 1 ; i >= n ; i -= 1 ) {
rank: 308
score: 99.5087158203125
patch: k ; for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 308
score: 99.50315348307292
patch: for ( int i = k + 1 ; i != 0 ; i ++ ) {
rank: 308
score: 99.49498901367187
patch: this . for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 308
score: 99.473974609375
patch: for ( int i = k + 1 ; i <= n ) {
rank: 309
score: 99.51448567708333
patch: for ( int i = max + 1 ; i < n ; i ++ ) {
rank: 309
score: 99.50859917534723
patch: if ( ( n == 1 ) || ( k == n - 1 ) ) {
rank: 309
score: 99.49490517064145
patch: for ( int i = n + 1 ; i <= n + 1 ; i ++ )
rank: 309
score: 99.47484130859375
patch: for ( int i = 1 ; i <= n - k + 1 ; i ++ ) {
rank: 309
score: 99.473876953125
patch: for ( int i = k + 1 ; i < null ; i ++ ) {
rank: 309
score: 99.46392059326172
patch: for ( int i = k ; i <= k ; ++ i ) {
rank: 309
score: 99.45558794806985
patch: for ( int i = k ; i <= k 1 ; i ++ ) {
rank: 310
score: 99.51738823784723
patch: for ( int i = 0 ; i == n - 1 ; i ++ ) {
rank: 310
score: 99.50836181640625
patch: for ( double i = k ; i <= n - k ; i ++ ) {
rank: 310
score: 99.5025634765625
patch: for ( int i = k - 1 ; i <= start ; i ++ ) {
rank: 310
score: 99.48081461588542
patch: for ( int i = $NUMBER$ ; i == n + k ; i ++ ) {
rank: 310
score: 99.47416178385417
patch: for ( int i = k + 1 ; i < n ; i ++ ) { log CaMeL Sum -= i ;
rank: 310
score: 99.47368706597223
patch: for ( int i = k ; i < k / 1 ; i ++ ) {
rank: 311
score: 99.51439751519098
patch: for ( int i = $NUMBER$ ; i < n : n ; i ++ ) {
rank: 311
score: 99.50812322443181
patch: for ( for ( int i = k + 1 ; i <= n - k ; i ++ ) {
rank: 311
score: 99.50239868164063
patch: for ( int i = 0 + 1 ; i <= k - 1 ; i ++ ) {
rank: 311
score: 99.47366672092014
patch: for ( int i = k + $NUMBER$ ; i <= k ; i -- ) {
rank: 311
score: 99.46310763888889
patch: for ( int i = k + k ; i >= n ; i -- ) {
rank: 311
score: 99.45433213975694
patch: for ( int i = k ; i <= 1 - 1 ; i ++ ) {
rank: 312
score: 99.50218505859375
patch: for ( int i = k + 1 ; i >= max - 1 ; i ++ ) {
rank: 312
score: 99.49380493164062
patch: n * for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 312
score: 99.46240912543402
patch: for ( int k = k + 1 ; n < n ; k ++ ) {
rank: 312
score: 99.45386460248162
patch: for ( int i = k + 1 ; i - 1 : n ) {
rank: 313
score: 99.49363080193015
patch: for ( int i = 1 ; i < n + 1 ; i ++ )
rank: 313
score: 99.4800537109375
patch: for ( n = $NUMBER$ ; i <= n ; i ++ ) {
rank: 313
score: 99.4730224609375
patch: for ( int i = 0 ; i < size ; i ++ ) {
rank: 313
score: 99.46219032689145
patch: for ( int i = k + 1 1 ; i < n ; i ++ ) {
rank: 313
score: 99.45325469970703
patch: for ( int i = k ; i <= max ; i ++ ) {
rank: 314
score: 99.50184326171875
patch: for ( int i = k + 1 ; i >= 1 - 1 ; i ++ ) {
rank: 314
score: 99.49349365234374
patch: for ( int i = k + n + 1 ; i >= n ; i ++ ) {
rank: 314
score: 99.47962782118056
patch: for ( int i = $NUMBER$ ; i <= $NUMBER$ - 1 ; i ++ ) {
rank: 314
score: 99.47294108072917
patch: for ( int i = n + 1 ; i >= 0 ; i -- ) {
rank: 314
score: 99.46184539794922
patch: for ( float i = 0 ; i < n ; i ++ ) {
rank: 314
score: 99.45303005642361
patch: for ( int i = k ; i <= i - 1 ; i ++ ) {
rank: 315
score: 99.51384534333882
patch: for ( int i = - 1 ; i < n - 1 ; i ++ ) {
rank: 315
score: 99.47960707720588
patch: for ( int i = 0 ; i <= n ; i ++ ) { }
rank: 315
score: 99.47277153862848
patch: for ( int i = k + 1 ; i < n ; i ++ ) ;
rank: 315
score: 99.4615478515625
patch: for ( float i = k - 1 ; i <= n ; i ++ ) {
rank: 315
score: 99.45276596966912
patch: for ( int i = 1 ; i <= n ; i ++ ) { )
rank: 316
score: 99.515966796875
patch: for ( int i = k + 1 ; i == k - 1 ; i ++ ) {
rank: 316
score: 99.50137329101562
patch: for ( int i = 1 + 1 ; i <= n + 1 ; i ++ ) {
rank: 316
score: 99.4931281594669
patch: for ( int i = k - 1 ; i >= n ; i ++ )
rank: 316
score: 99.47955322265625
patch: for ( int i = $NUMBER$ ; i >= 0 - 1 ; i ++ ) {
rank: 316
score: 99.47257232666016
patch: for ( int i = k ; i < 1 ; i -- ) {
rank: 316
score: 99.4615119485294
patch: for ( int i = 0 ; i < n 1 ; i ++ ) {
rank: 316
score: 99.45238579644098
patch: for ( int i = k + 1 ; k <= n ; i ++ ) {
rank: 317
score: 99.51368543836806
patch: for ( int i = $NUMBER$ ; i < k - 1 ; i ++ ) {
rank: 317
score: 99.50661892361111
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( i ) ;
rank: 317
score: 99.47905417049633
patch: for ( int i = k + 1 ; i <= i ; i ++ )
rank: 317
score: 99.47252133018092
patch: for ( int i = - 1 ; i < n + 1 ; i ++ ) {
rank: 318
score: 99.51592407226562
patch: for ( int i = k - 1 ; i != n - k ; i ++ ) {
rank: 318
score: 99.50642342403017
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( double ) i ) ;
rank: 318
score: 99.49262084960938
patch: for ( int i = k + 1 ; i != n + 1 ; i ++ ) {
rank: 318
score: 99.47896082261029
patch: for ( int i = $NUMBER$ + 1 ; i <= $NUMBER$ ; i ++ )
rank: 318
score: 99.47239056755515
patch: for ( int i = 0 ; i < - 1 ; i -- ) {
rank: 318
score: 99.472119140625
patch: for ( int i = $NUMBER$ ; i <= n - k - $NUMBER$ ; i ++ ) {
rank: 318
score: 99.46059056332237
patch: * for ( int i = k + 1 ; i >= n ; i -- ) {
rank: 318
score: 99.4516537314967
patch: for ( int i = k - 1 ; i -- <= n ; i ++ ) {
rank: 319
score: 99.51580200195312
patch: for ( int i = k + 1 ; i - 1 <= n ; i ++ ) {
rank: 319
score: 99.51305474175348
patch: for ( int i = 0 ; i <= n : n ; i ++ ) {
rank: 319
score: 99.50098876953125
patch: for ( int i = k + 1 ; i <= max + 1 ; i ++ ) {
rank: 319
score: 99.49221801757812
patch: for ( int i = k + n ; i < n + 1 ; i ++ ) {
rank: 319
score: 99.47877332899306
patch: for ( int i = $NUMBER$ + 1 ; i >= 0 ; i ++ ) {
rank: 319
score: 99.4603335731908
patch: for ( int i = k + 1 ; ; i <= n ; i ++ ) {
rank: 319
score: 99.45094129774306
patch: for ( int i = k + 1 ; i > i ; i ++ ) {
rank: 320
score: 99.50526258680556
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( 0 ) ;
rank: 320
score: 99.49196166992188
patch: for ( int i = k + 1 ; i >= i + 1 ; i ++ ) {
rank: 320
score: 99.4786376953125
patch: for ( int i = $NUMBER$ ; i < 1 ; i ++ )
rank: 320
score: 99.47207302517361
patch: for ( int i = k ; i <= n - $NUMBER$ ; i ++ ) {
rank: 320
score: 99.44993681066177
patch: for ( int i = k ; i < n 1 ; i ++ ) {
rank: 321
score: 99.50064086914062
patch: for ( int i = k + 1 ; i >= n - $NUMBER$ ; i ++ ) {
rank: 321
score: 99.47856588924633
patch: for ( int i = k + n ; i <= n ; i ++ )
rank: 321
score: 99.47117309570312
patch: for ( int i = k + 1 ; i > i - 1 ; i ++ ) {
rank: 322
score: 99.51279296875
patch: for ( int i = k + 1 ; i <= n == n ; i ++ ) {
rank: 322
score: 99.50006713867188
patch: for ( int i = k - 1 ; i <= max - 1 ; i ++ ) {
rank: 322
score: 99.49091932508681
patch: for ( int i = k * n ; i < n ; i ++ ) {
rank: 322
score: 99.45993381076389
patch: for ( int n = k + 1 ; i < n ; ++ n ) {
rank: 323
score: 99.504345703125
patch: for ( int i = k + n - k ; i <= n ; i ++ ) {
rank: 323
score: 99.47842746310764
patch: for ( int int i = k + 1 ; i <= n ; i ++ )
rank: 323
score: 99.44915771484375
patch: for ( int i = 0 ; i <= k ; i ++ ) { ) {
rank: 324
score: 99.51267700195312
patch: for ( int i = $NUMBER$ + 1 - 1 ; i <= n ; i ++ ) {
rank: 324
score: 99.50424985532408
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( n ) ;
rank: 324
score: 99.47085571289062
patch: for ( int i = $STRING$ ; i < n ; i ++ ) {
rank: 324
score: 99.46902901785714
patch: for ( int i = 1 ; i <= n ; i ++ ) { return log CaMeL Sum ;
rank: 324
score: 99.45978746916118
patch: double for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 324
score: 99.44879471628289
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { ;
rank: 325
score: 99.51491970486111
patch: for ( int i = $NUMBER$ ; i >= n - 1 ; i ++ ) {
rank: 325
score: 99.50424194335938
patch: for ( int i = $NUMBER$ + i - 1 ; i <= n ; i ++ ) {
rank: 325
score: 99.4781853170956
patch: for ( int i = 0 ; i <= k - k ; i ++ )
rank: 325
score: 99.46897259880515
patch: for ( final int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 326
score: 99.49903564453125
patch: for ( int i = 0 + $NUMBER$ ; i <= n - 1 ; i ++ ) {
rank: 326
score: 99.47761804917279
patch: for ( int i = k + 1 ; i > 0 ; i ++ )
rank: 326
score: 99.47007533482143
patch: for ( int i = k + 1 ; i < n {
rank: 326
score: 99.45948550575658
patch: for ( int i = k + 1 ; i >= k ; ++ ++ i ) {
rank: 326
score: 99.44812689887152
patch: for ( int i = k ; i + k <= n ; i ++ ) {
rank: 327
score: 99.51469590928819
patch: for ( int i = 0 ; i == n - k ; i ++ ) {
rank: 327
score: 99.51228841145833
patch: for ( int i = $NUMBER$ ; i < k - k ; i ++ ) {
rank: 327
score: 99.49899291992188
patch: for ( int i = k , 1 = k ; i < n ; i ++ ) {
rank: 327
score: 99.46959092881944
patch: for ( int i = k + 1 ; i <= $STRING$ ; i -- ) {
rank: 327
score: 99.46864624023438
patch: for ( Iterator i = k + 1 ; i <= n - 1 ; i ++ ) {
rank: 327
score: 99.45947265625
patch: for ( double i = k - 1 ; i < n ; i ++ ) {
rank: 327
score: 99.44769965277777
patch: for ( int i = k - n ; i <= n ; i ++ ) {
rank: 328
score: 99.51214599609375
patch: for ( int i = $NUMBER$ ; i < i + 1 ; i ++ ) {
rank: 328
score: 99.5035733309659
patch: for ( int i = k - k - 1 ; i <= n - k ; i ++ ) {
rank: 328
score: 99.468505859375
patch: if ( ( k == 1 ) || ( k == 0 ) ) {
rank: 328
score: 99.45946587456598
patch: for ( int i = k - 1 ; i != k ; i ++ ) {
rank: 328
score: 99.44741641773896
patch: for ( int i = k ; i < k 1 ; i ++ ) {
rank: 329
score: 99.51467556423611
patch: for ( int i = 0 ; i > k - 1 ; i ++ ) {
rank: 329
score: 99.49884033203125
patch: for ( int i = k + $NUMBER$ ; i <= i ; i ++ ) {
rank: 329
score: 99.49027099609376
patch: for ( int i = k + 1 ; i > n - 1 ; i -- ) {
rank: 329
score: 99.46900770399306
patch: for ( int i = k + 1 ; i < n ; = i ) {
rank: 330
score: 99.51166449652777
patch: for ( int i = $NUMBER$ ; i < i - 1 ; i ++ ) {
rank: 330
score: 99.50272993607955
patch: for ( int i = k - 1 + 1 ; i <= n - k ; i ++ ) {
rank: 330
score: 99.49855346679688
patch: for ( int i = k - 1 - 1 ; i < n ; i ++ ) {
rank: 330
score: 99.47692153033088
patch: for ( int i = k + 1 ; i < 1 ; i ++ )
rank: 330
score: 99.46842193603516
patch: for ( int i = 0 ; i < false ; i ++ ) {
rank: 330
score: 99.45888264973958
patch: do { for ( int i = 0 ; i < n ; i ++ ) {
rank: 330
score: 99.44724408318015
patch: for ( int i = 0 ; i <= n ; i 1 ++ ) {
rank: 331
score: 99.51155395507813
patch: for ( int i = $NUMBER$ ; i <= n : n - k ; i ++ ) {
rank: 331
score: 99.50259060329861
patch: for ( double i = k + k ; i <= n ; i ++ ) {
rank: 331
score: 99.49847412109375
patch: for ( int i = 0 + 1 ; i < n - $NUMBER$ ; i ++ ) {
rank: 331
score: 99.49020867598684
patch: for ( int i = k + 1 ; i >= n ; i -- ) { )
rank: 331
score: 99.47670084635416
patch: for ( int i = k ; i <= 1 ; i ++ )
rank: 331
score: 99.46830919053819
patch: for ( int i = k + $NUMBER$ ; i < 0 ; i -- ) {
rank: 332
score: 99.5023993130388
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( double ) i ) ;
rank: 332
score: 99.49017333984375
patch: for ( int i = k + 1 ; i <= n * $NUMBER$ ; i ++ ) {
rank: 332
score: 99.4766845703125
patch: for ( int i = k + 0 ; i < n ; i ++ )
rank: 332
score: 99.46793405633224
patch: for ( int i = k + 1 ; i < n ; i i -- ) {
rank: 332
score: 99.46791478207237
patch: for ( int i = k ; i <= n - k - 1 ; i ++ )
rank: 332
score: 99.44698079427083
patch: for ( int i = k ; i + 1 <= n ; i ++ ) {
rank: 333
score: 99.51436157226563
patch: for ( int i = k - $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 333
score: 99.48960571289062
patch: for ( int i = k - 1 ; i >= n + n ; i ++ ) {
rank: 333
score: 99.46780556126645
patch: for ( int i = 0 ; i < n + 1 ; i i ++ ) {
rank: 333
score: 99.45835248161765
patch: for ( i = k + 1 ; i <= k ; i ++ ) {
rank: 333
score: 99.44683837890625
patch: for ( int i = k ; i <= i + 1 ; i ++ ) {
rank: 334
score: 99.50199167351974
patch: for ( k = k + 1 ; i <= n - k ; i ++ ) {
rank: 334
score: 99.48923627068015
patch: for ( int i = k 1 ; i < n ; i ++ ) {
rank: 334
score: 99.4677734375
patch: for ( int i = n + 1 ; i >= 1 ; i ++ ) {
rank: 334
score: 99.46761474609374
patch: for ( int i = 1 + k + 1 ; i <= n ; i ++ ) {
rank: 334
score: 99.45780864514802
patch: for ( int i = k + 1 ; i < n ; ++ i ) { {
rank: 334
score: 99.44648180509868
patch: for ( int i = k + 1 ; i < k ; i ++ ) { )
rank: 335
score: 99.50197120949075
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( i ) ;
rank: 335
score: 99.49778442382812
patch: for ( int i = k + 1 ; i <= 1 - 1 ; i ++ ) {
rank: 335
score: 99.48916015625
patch: for ( int i = n - 1 ; i < n - 1 ; i ++ ) {
rank: 335
score: 99.47594496783088
patch: for ( int i = 1 ; i <= n + k ; i ++ )
rank: 335
score: 99.46775987413194
patch: for ( int i = n + 1 ; i >= 1 ; i -- ) {
rank: 335
score: 99.467578125
patch: for ( int i = k + 1 + $NUMBER$ ; i <= n ; i ++ ) {
rank: 335
score: 99.45780436197917
patch: for ( int k = k + 1 ; n < n ; i ++ ) {
rank: 336
score: 99.51316528320312
patch: for ( int i = k - 1 ; i >= k - k ; i ++ ) {
rank: 336
score: 99.50194091796875
patch: for ( int i = n - k ; i <= n - k ; i ++ ) {
rank: 336
score: 99.497509765625
patch: for ( int i = 0 + 1 ; i >= n + 1 ; i ++ ) {
rank: 336
score: 99.489111328125
patch: for ( int i = n + 1 ; i < n + n ; i ++ ) {
rank: 336
score: 99.47560029871323
patch: for ( int i = k + k ; i <= $NUMBER$ ; i ++ )
rank: 336
score: 99.46747589111328
patch: for ( int i = 0 ; i < max ; i ++ ) {
rank: 336
score: 99.45728257123162
patch: for ( int i = k + 1 ; i <= ; i ++ ) {
rank: 337
score: 99.51295776367188
patch: for ( int i = k + 1 ; i + n <= n ; i ++ ) {
rank: 337
score: 99.50190791377315
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( 0 ) ;
rank: 337
score: 99.456787109375
patch: for ( int i = k ; i >= k + 1 ; i -- ) {
rank: 337
score: 99.44564480251736
patch: for ( int i = k / n ; i <= n ; i ++ ) {
rank: 338
score: 99.50189568014706
patch: / for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 338
score: 99.4885318153783
patch: for ( int i = k - 1 ; i >= n ; i ++ ) { {
rank: 338
score: 99.47491814108456
patch: for ( double i = k + 1 ; i <= n ; i ++ )
rank: 338
score: 99.46734619140625
patch: for ( int i = k + k ; i >= 1 ; i ++ ) {
rank: 338
score: 99.467041015625
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log (
rank: 338
score: 99.45624100534539
patch: for ( final int i = k + 1 ; i <= k ; i ++ ) {
rank: 339
score: 99.50180199032738
patch: for ( int i = k - 1 ; i <= n - k ; i ++ ) { {
rank: 339
score: 99.48805067274306
patch: for ( int i = k * $NUMBER$ ; i < n ; i ++ ) {
rank: 339
score: 99.46695285373264
patch: for ( int i = 0 ; i <= k - 1 ; i -- ) {
rank: 339
score: 99.45556640625
patch: for ( int i = k + 1 ; i != n ; i ++ ) { {
rank: 339
score: 99.44546847873264
patch: / * for ( int i = 1 ; i <= n ; i ++ ) {
rank: 340
score: 99.51254272460938
patch: for ( int i = n + 1 ; i == n - k ; i ++ ) {
rank: 340
score: 99.5097412109375
patch: for ( int i = k + 1 : 1 ; i <= n ; i ++ ) {
rank: 340
score: 99.501708984375
patch: / / for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 340
score: 99.49699571397569
patch: for ( int i = k + 0 ; i < 0 ; i ++ ) {
rank: 340
score: 99.46686112253289
patch: for ( int i = k + 1 ; i <= n ; i -= 1 ) {
rank: 340
score: 99.46685469777961
patch: for ( int i = k ++ ; i <= n - k ; i ++ ) {
rank: 341
score: 99.5124755859375
patch: for ( int i = k ; i <= n + k - k ; i ++ ) {
rank: 341
score: 99.50910101996527
patch: for ( int i = $NUMBER$ + 1 ; i < 1 ; i ++ ) {
rank: 341
score: 99.50147705078125
patch: for ( double i = k - 1 ; i <= n - k ; i ++ ) {
rank: 341
score: 99.47421444163604
patch: for ( int i = $NUMBER$ ; i == n ; i ++ ) { {
rank: 341
score: 99.46679077148437
patch: for ( int i = k + 1 ; i <= n - i ; i ++ ) {
rank: 341
score: 99.46669407894737
patch: final for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 341
score: 99.4547119140625
patch: for ( int i = k - 1 ; i >= 1 ; i -- ) { {
rank: 342
score: 99.50111790707237
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { k ++ ;
rank: 342
score: 99.4873779296875
patch: for ( int k = k + 1 ; i < n + 1 ; i ++ ) {
rank: 342
score: 99.46643744574652
patch: for ( int i = 0 ; i < k - 1 ; i -- ) {
rank: 342
score: 99.45449989720395
patch: * for ( int i = k - 1 ; i <= n ; i ++ ) {
rank: 343
score: 99.50103469122024
patch: binomial CaMeL Coefficient CaMeL Double for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 343
score: 99.49599202473958
patch: for ( int i = 0 + 1 ; i < i ; i ++ ) {
rank: 343
score: 99.48734130859376
patch: for ( int i = k * n + 1 ; i < n ; i ++ ) {
rank: 343
score: 99.45435855263158
patch: for ( int i = k + 1 ; i <= n 0 ; i ++ ) {
rank: 343
score: 99.44487169053819
patch: for ( int i = 1 + 1 ; i <= k ; i ++ ) {
rank: 344
score: 99.50872443704044
patch: for ( int i = 0 ; i <= n 1 ; i ++ ) {
rank: 344
score: 99.49598388671875
patch: / * for ( int i = k - 1 ; i <= n ; i ++ ) {
rank: 344
score: 99.48694565716912
patch: for ( int i = n + 1 ; i < n ; i ++ )
rank: 345
score: 99.50086558948864
patch: for ( double i = k + 1 ; i <= n - k - k ; i ++ ) {
rank: 345
score: 99.47356818704044
patch: for ( int i = - $NUMBER$ ; i <= n ; i ++ ) {
rank: 345
score: 99.46590383429276
patch: for ( int i = k + $NUMBER$ ; i <= - 1 ; i ++ ) {
rank: 345
score: 99.45404730902777
patch: z ; for ( int i = 0 ; i < n ; i ++ ) {
rank: 345
score: 99.44466145833333
patch: for ( int i = k ; i <= k + n ; i ++ ) {
rank: 346
score: 99.51195678710937
patch: for ( int i = k - 1 ; i > k - 1 ; i ++ ) {
rank: 346
score: 99.50082284432871
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( k ) ;
rank: 346
score: 99.4957763671875
patch: for ( int i = 0 + 1 ; i < k - 1 ; i ++ ) {
rank: 346
score: 99.46556260850694
patch: for ( int i = k + k ; i >= 1 ; i -- ) {
rank: 346
score: 99.45392204733456
patch: for ( int i = k - 1 ; i <= n ; ++ i )
rank: 346
score: 99.44449869791667
patch: for ( int i = k + $STRING$ ; i <= n ; i ++ ) {
rank: 347
score: 99.50814819335938
patch: for ( int i = k + 1 - k ; i < n ; i ++ ) {
rank: 347
score: 99.49561157226563
patch: for ( int i = k + 1 ; i <= k - $NUMBER$ ; i ++ ) {
rank: 347
score: 99.48582763671875
patch: * * for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 347
score: 99.47312418619792
patch: for ( int i = $NUMBER$ ; i <= this . n ; i ++ ) {
rank: 347
score: 99.46513061523437
patch: for ( int i = k + 1 ; i <= n - length ; i ++ ) {
rank: 347
score: 99.44434311810662
patch: for ( int i = k ; i < n ; i i ++ ) {
rank: 348
score: 99.51146850585937
patch: for ( int i = n + 1 ; i <= n + k ; i ++ ) {
rank: 348
score: 99.50770399305556
patch: for ( int i = 1 ; i < n + k ; i ++ ) {
rank: 348
score: 99.50067693536931
patch: k ! k ! for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 348
score: 99.48563232421876
patch: for ( int i = k + 1 ; i < n ; i ++ ) { try {
rank: 348
score: 99.47151014539931
patch: for ( int i = $NUMBER$ ; i <= n + n ; i ++ ) {
rank: 348
score: 99.46530490451389
patch: for ( int i = $STRING$ ; i < n + 1 ; i ++ ) {
rank: 348
score: 99.46497802734375
patch: for ( int i = $NUMBER$ ; i <= n - 1 + 1 ; i ++ ) {
rank: 348
score: 99.453369140625
patch: for ( int i = k + 1 ; i <= <= n ; i ++ ) {
rank: 349
score: 99.50726996527777
patch: for ( int i = $NUMBER$ + 0 ; i < n ; i ++ ) {
rank: 349
score: 99.50052315848214
patch: for ( Iterator i = n + 1 ; i . < n - k ; i ++ ) {
rank: 349
score: 99.49486694335937
patch: for ( int i = k + 1 ; i <= start + 1 ; i ++ ) {
rank: 349
score: 99.46497395833333
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 349
score: 99.45332166883681
patch: for ( int i = i + 1 ; i <= k ; i ++ ) {
rank: 349
score: 99.44381374782986
patch: for ( int i = k ; i <= 0 + 1 ; i ++ ) {
rank: 350
score: 99.50710577713816
patch: for ( int i = k - 1 ; i <= n 1 ; i ++ ) {
rank: 350
score: 99.50046608664773
patch: for ( int i = k + 1 + k ; i <= n - 1 ; i ++ ) {
rank: 350
score: 99.4714111328125
patch: for ( int i = k ; i >= $NUMBER$ ; i ++ )
rank: 350
score: 99.46507432725694
patch: for ( int i = k + 1 ; 0 <= n ; i ++ ) {
rank: 350
score: 99.46461181640625
patch: for ( int i = n + 1 ; i >= n - k ; i ++ ) {
rank: 351
score: 99.5003329190341
patch: for ( int i = k + 1 + k + 1 ; i <= n ; i ++ ) {
rank: 351
score: 99.49456108940973
patch: for ( int i = k + 1 ; i <= 0 ; ++ i ) {
rank: 351
score: 99.48543090820313
patch: for ( int i = k * n + 1 ; i <= n ; i ++ ) {
rank: 351
score: 99.47137092141544
patch: for ( int i = - 1 ; i >= $NUMBER$ ; i ++ ) {
rank: 351
score: 99.46476236979167
patch: for ( int i = k + 1 ; i >= length ; i -- ) {
rank: 351
score: 99.46442260742188
patch: for ( int i = k + 1 , 1 ; i <= n ; i ++ ) {
rank: 351
score: 99.4527228860294
patch: for ( int i = k + 1 ; i >= i ; i -- )
rank: 351
score: 99.44316948784723
patch: try { for ( int i = k ; i <= n ; i ++ ) {
rank: 352
score: 99.51088995682566
patch: for ( int i = k + 1 ; i > - k ; i ++ ) {
rank: 352
score: 99.50684356689453
patch: for ( int i = 0 ; i >= 1 ; i ++ ) {
rank: 352
score: 99.5002108487216
patch: for ( int i = $NUMBER$ + k - k ; i <= n - k ; i ++ ) {
rank: 352
score: 99.48516235351562
patch: for ( int i = k + 1 ; i >= n + 1 ; ++ i ) {
rank: 352
score: 99.47118462456598
patch: for ( int i = k + k ; i != n ; i ++ ) {
rank: 352
score: 99.46428087022569
patch: for ( int i = k + 1 ; i < length ; i -- ) {
rank: 352
score: 99.45257247121711
patch: z * / for ( int i = 0 ; i < n ; i ++ ) {
rank: 352
score: 99.4429931640625
patch: for ( int i = 1 ; i < k ; i -- ) {
rank: 353
score: 99.50010463169643
patch: for ( int i = k + k - 1 ; i <= n ; i ++ ) { {
rank: 353
score: 99.48511962890625
patch: for ( int i = k - 1 ; i >= k + 1 ; i ++ ) {
rank: 353
score: 99.46425374348958
patch: for ( int i = k + 1 ; i <= $NUMBER$ ; i -- ) {
rank: 353
score: 99.45247395833333
patch: for ( int i = k >> 1 ; i <= n ; i ++ ) {
rank: 353
score: 99.44272332442434
patch: for ( int i = n + 1 ; i -- <= n ; i ++ ) {
rank: 354
score: 99.50001162574405
patch: / k ! for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 354
score: 99.49434814453124
patch: for ( int i = k - 1 + 1 ; i >= 0 ; i ++ ) {
rank: 354
score: 99.4701286764706
patch: for ( int i = $NUMBER$ ; i <= i + 1 ; i ++ )
rank: 354
score: 99.4638141134511
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= i ; }
rank: 354
score: 99.45237821691177
patch: for ( final int i = 0 ; i < n ; i ++ ) {
rank: 355
score: 99.51054077148437
patch: for ( int i = k + 1 ; i + k <= n ; i ++ ) {
rank: 355
score: 99.50464545355902
patch: for ( int i = $NUMBER$ ; i < n - 0 ; i ++ ) {
rank: 355
score: 99.494140625
patch: for ( int i = k * 1 ; i < 0 ; i ++ ) {
rank: 355
score: 99.47004968979779
patch: for ( int i = $NUMBER$ ; i >= k - k ; i ++ )
rank: 355
score: 99.46392822265625
patch: for ( int i = 0 ; i <= n * 1 ; i ++ ) {
rank: 355
score: 99.46321186266448
patch: for ( int i = k + 1 ; i <= n - k ; i -- )
rank: 355
score: 99.4523064108456
patch: for ( int i = k + 1 ; i >= i ; ++ ) {
rank: 355
score: 99.44247275904605
patch: for ( int i = k + 1 ; i ++ >= n ; i ++ ) {
rank: 356
score: 99.51028442382812
patch: for ( int i = k - 1 ; i + 1 <= n ; i ++ ) {
rank: 356
score: 99.49954659598214
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { n ++ ;
rank: 356
score: 99.49412706163194
patch: for ( int i = k * $NUMBER$ ; i <= n ; i ++ ) {
rank: 356
score: 99.46999942555146
patch: for ( int i = k ; i < n - k ; i ++ )
rank: 356
score: 99.46389431423611
patch: for ( int i = 0 ; i <= k + $NUMBER$ ; i ++ ) {
rank: 356
score: 99.46307373046875
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { return log CaMeL Sum ; }
rank: 356
score: 99.45204564144737
patch: for ( int i = k - 1 ; i >= n ; i -= n ) {
rank: 356
score: 99.44235068873355
patch: for ( int i = k + 1 ; i >= k ; i 1 ++ ) {
rank: 357
score: 99.51019287109375
patch: for ( int i = k + 1 ; i <= this . n ; i ++ ) {
rank: 357
score: 99.49364556206598
patch: for ( int i = k + 1 ; i <= min ; i ++ ) {
rank: 357
score: 99.46987017463235
patch: for ( int i = $NUMBER$ ; i <= 0 ; i ++ ) { {
rank: 357
score: 99.46377224392361
patch: for ( int i = k ; i <= k + 1 ; i -- ) {
rank: 357
score: 99.45197496916118
patch: for ( int i = k - 1 ; i <= k + 1 ; i ++ )
rank: 357
score: 99.44220329733456
patch: for for ( int i = k ; i <= n ; i ++ ) {
rank: 358
score: 99.49900987413194
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { System .
rank: 358
score: 99.493603515625
patch: for ( int i = k - 1 + 1 ; i <= 0 ; i ++ ) {
rank: 358
score: 99.484423828125
patch: * / for ( int i = k + 1 ; i >= n ; i -- ) {
rank: 358
score: 99.45186360677083
patch: for ( int n = k - 1 ; n <= n ; n ++ ) {
rank: 359
score: 99.4932861328125
patch: for ( int i = k * 1 ; i >= n ; i ++ ) {
rank: 359
score: 99.46867540147569
patch: for ( int i = k ; i <= k - k ; i ++ ) {
rank: 359
score: 99.46070274939903
patch: for ( int i = $NUMBER$ ; ++ i ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 360
score: 99.49872504340277
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( n ) ;
rank: 360
score: 99.4931869506836
patch: for ( int i = 0 ; i <= start ; i ++ ) {
rank: 360
score: 99.46329752604167
patch: for ( int i = k + 0 ; i >= 1 ; i ++ ) {
rank: 360
score: 99.45159590871711
patch: for ( Iterator i = n - 1 ; i . has CaMeL Next ( ) ; )
rank: 360
score: 99.44146407277961
patch: for ( int i = k + 1 ; i <= n ; i 0 ++ ) {
rank: 361
score: 99.50079345703125
patch: for ( int i = $NUMBER$ ; i <= n + $NUMBER$ ; i ++ ) {
rank: 361
score: 99.49863891601562
patch: for ( int i = k - k - k ; i <= n ; i ++ ) {
rank: 361
score: 99.49281141493056
patch: for ( int i = k * 1 ; i <= 1 ; i ++ ) {
rank: 361
score: 99.48309326171875
patch: for ( int i = k + 1 ; i >= i + 1 ; i -- ) {
rank: 361
score: 99.46821863511029
patch: for ( int i = k + k ; i <= k ; i ++ )
rank: 361
score: 99.46306409333882
patch: for ( int i = k + 1 ; i < ( ) ; i ++ ) {
rank: 361
score: 99.4412906044408
patch: for ( int i = k [ 1 ] ; i < n ; i ++ ) {
rank: 362
score: 99.509716796875
patch: binomial CaMeL Coefficient CaMeL Double for ( i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 362
score: 99.49266357421875
patch: for ( int i = k - 1 ; i <= 0 + 1 ; i ++ ) {
rank: 362
score: 99.48307291666667
patch: for ( int n = k + 1 ; n < n ; i ++ ) {
rank: 362
score: 99.46813151041667
patch: for ( int i = $STRING$ ; i <= n ; i ++ )
rank: 362
score: 99.46052352241848
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) { log CaMeL Sum -- ;
rank: 362
score: 99.45094129774306
patch: for ( int i + 1 = 0 ; i < n ; i ++ ) {
rank: 362
score: 99.441162109375
patch: for ( int i = k ; i + n <= n ; i ++ ) {
rank: 363
score: 99.49998072574013
patch: for ( int i = - 1 ; i <= n + 1 ; i ++ ) {
rank: 363
score: 99.49830211292614
patch: for ( int i = k + 1 ; i - 1 ; i <= n ; i ++ ) {
rank: 363
score: 99.46803911994485
patch: for ( int i = $NUMBER$ ; i != n ; i ++ ) { {
rank: 363
score: 99.46043860394022
patch: for ( int i = k + 1 ; i < n ; i ++ ) { return log CaMeL Sum ;
rank: 363
score: 99.45078412224265
patch: for ( int i = k + 1 ; i <= k ; ++ i )
rank: 364
score: 99.49949137369792
patch: for ( int i = $NUMBER$ ; i < k + 1 ; i ++ ) {
rank: 364
score: 99.49807739257812
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum += $NUMBER$ ;
rank: 364
score: 99.48248901367188
patch: for ( int i = 0 , n = n ; i < n ; i ++ ) {
rank: 364
score: 99.46030144942434
patch: for ( int i = k + 1 ; i <= n - 0 ; i ++ )
rank: 365
score: 99.4978360262784
patch: k ! for ( int i = k + k - k ; i <= n ; i ++ ) {
rank: 365
score: 99.49178059895833
patch: for ( int i = 0 + $NUMBER$ ; i <= 0 ; i ++ ) {
rank: 365
score: 99.482421875
patch: for ( int i = i + 1 ; i < n ; i ++ )
rank: 365
score: 99.46790268841912
patch: for ( int i = $NUMBER$ : n ; i <= n ; i ++ )
rank: 365
score: 99.46021943933823
patch: for ( int i = k ] ; i <= n ; i ++ ) {
rank: 365
score: 99.44087049696181
patch: for ( int i = k ; i <= 0 - 1 ; i ++ ) {
rank: 366
score: 99.50941467285156
patch: for ( int i = 1 ; i >= 0 ; i ++ ) {
rank: 366
score: 99.48213276110198
patch: for ( int i = k ; i <= n + 1 ; i ++ ) { {
rank: 366
score: 99.46775189568015
patch: for ( int i = - k ; i < n ; i ++ ) {
rank: 366
score: 99.46221564797794
patch: for ( int i = k + 1 ; i < 0 ; i ++ )
rank: 366
score: 99.45035593133224
patch: for ( int i = k + 1 ; i >= + 1 ; i -- ) {
rank: 366
score: 99.44056460731908
patch: for ( int i = k + 1 ; i >= n 1 ; i ++ ) {
rank: 367
score: 99.5093994140625
patch: for ( int i = 0 ; i > k ; i ++ ) {
rank: 367
score: 99.49716796875
patch: k ! for ( int i = $NUMBER$ + 1 ; i <= n ; i ++ ) {
rank: 367
score: 99.49169311523437
patch: for ( int i = 0 ; i < n + 1 + 1 ; i ++ ) {
rank: 367
score: 99.48201293945313
patch: for ( int i = k + 1 ; i >= n + n ; i -- ) {
rank: 367
score: 99.4677375344669
patch: for ( int i = $NUMBER$ ; i <= i - 1 ; i ++ )
rank: 367
score: 99.46220567491319
patch: for ( int i = n + 1 ; i < 1 ; i ++ ) {
rank: 367
score: 99.45951573988971
patch: for ( int i = 1 ; i < n - k ; i ++ )
rank: 367
score: 99.44997687088816
patch: for ( int i = k + 1 ; i >= <= n ; i ++ ) {
rank: 368
score: 99.49151611328125
patch: for ( int i = 0 ; i <= ( n + 1 ) ; i ++ ) {
rank: 368
score: 99.4818115234375
patch: for ( int i = i ; i <= n ; i ++ ) {
rank: 368
score: 99.46762424045139
patch: for ( int i = k - k ; i <= $NUMBER$ ; i ++ ) {
rank: 368
score: 99.45938913445724
patch: for ( int i = k + 1 ; i <= i - 1 ; i ++ )
rank: 368
score: 99.44936009457237
patch: for ( int i = k k + 1 ; i <= n ; i ++ ) {
rank: 369
score: 99.49650435014205
patch: for ( int i = k + 1 - 1 ; i <= n - 1 ; i ++ ) {
rank: 369
score: 99.48168334960937
patch: for ( int i = n - 1 ; i < n + 1 ; i ++ ) {
rank: 369
score: 99.46754964192708
patch: for ( int i = 0 - k ; i <= n ; i ++ ) {
rank: 369
score: 99.4398193359375
patch: for ( int i = max ; i <= n ; i ++ ) {
rank: 370
score: 99.49640856291118
patch: for ( int i = k + - k ; i <= n ; i ++ ) {
rank: 370
score: 99.45872738486842
patch: for ( int i = k + 1 ; i != n - 1 ; i ++ )
rank: 371
score: 99.50806274414063
patch: for ( int i = 1 ; i < n - k - k ; i ++ ) {
rank: 371
score: 99.49627007378473
patch: if ( ( n == k ) || ( k == n - 1 ) ) {
rank: 371
score: 99.46112060546875
patch: for ( int i = k + k ; i >= 0 ; i -- ) {
rank: 371
score: 99.45830335115132
patch: for ( int i = k + k - 1 ; i <= n ; i ++ )
rank: 371
score: 99.43903551603618
patch: for ( int i = k + 1 ; i <= n ; i $NUMBER$ ++ ) {
rank: 372
score: 99.50797526041667
patch: for ( int i = k ; i >= k - 1 ; i ++ ) {
rank: 372
score: 99.49624746817129
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( k ) ;
rank: 372
score: 99.48012084960938
patch: try { for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 372
score: 99.4674072265625
patch: for ( int i = k - 1 ; i <= 1 ; i ++ )
rank: 372
score: 99.46053314208984
patch: for ( int i = 0 ; i < $NUMBER$ ; i -- ) {
rank: 372
score: 99.4579326923077
patch: for ( int i = k + 1 ; ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 372
score: 99.43900553385417
patch: for ( int i = k / k ; i <= n ; i ++ ) {
rank: 373
score: 99.47998046875
patch: for ( int i = k , n = n ; i < n ; i ++ ) {
rank: 373
score: 99.46733542049633
patch: for ( int i = k + 1 ; i == k ; i ++ )
rank: 373
score: 99.46029324001736
patch: this . for ( int i = k ; i < n ; i ++ ) {
rank: 373
score: 99.44708573190789
patch: for ( int int i = k + 1 ; i < n ; i ++ ) {
rank: 373
score: 99.4388427734375
patch: for ( int i = k - 1 ; i <= n ; i ++ ) { )
rank: 374
score: 99.49596296037946
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( double ) i ;
rank: 374
score: 99.49049072265625
patch: for ( int i = k * 1 ; i < n - 1 ; i ++ ) {
rank: 375
score: 99.49042711759868
patch: for ( int i = 0 + 1 ; i <= - 1 ; i ++ ) {
rank: 375
score: 99.47990587022569
patch: for ( int i = k ; i >= n + 1 ; i -- ) {
rank: 375
score: 99.46730669806985
patch: k ! for ( int i = $NUMBER$ ; i <= n ; i ++ )
rank: 375
score: 99.46000591077302
patch: for ( int i = k + 1 ; i >= - $NUMBER$ ; i ++ ) {
rank: 375
score: 99.44636366102431
patch: for ( int i = k + 1 ; n <= n ; i ++ ) {
rank: 376
score: 99.507568359375
patch: for ( int i = 0 ; i < n - k - 1 ; i ++ ) {
rank: 376
score: 99.495849609375
patch: k ! for ( int i = k + k + 1 ; i <= n ; i ++ ) {
rank: 376
score: 99.45976819490132
patch: for ( int i = k + 1 ; i < n ; i += $NUMBER$ ) {
rank: 376
score: 99.45760091145833
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 376
score: 99.43814086914062
patch: for ( int i = Math ; i <= n ; i ++ ) {
rank: 377
score: 99.50749206542969
patch: for ( int i = 1 ; i != n ; i ++ ) {
rank: 377
score: 99.49552055027173
patch: binomial CaMeL Coefficient CaMeL Double for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 377
score: 99.489990234375
patch: for ( int i = 1 + 1 ; i >= 0 ; i ++ ) {
rank: 377
score: 99.46695285373264
patch: for ( int i = k + 1 ; i != $NUMBER$ ; i ++ ) {
rank: 377
score: 99.45924207899306
patch: for ( int i = k + 1 ; i <= i ; i -- ) {
rank: 377
score: 99.44605170355902
patch: for ( int i = k + 1 ; i <= n ; ++ ++ i )
rank: 377
score: 99.43812391493056
patch: for ( int i = ) + 1 ; i <= n ; i ++ ) {
rank: 378
score: 99.507470703125
patch: for ( int i = k - k + 1 ; i < n ; i ++ ) {
rank: 378
score: 99.49549449573864
patch: / / for ( int i = k + 1 ; i <= n - k ; i ++ ) {
rank: 378
score: 99.48918321397569
patch: for ( int i = 0 + 1 ; i <= length ; i ++ ) {
rank: 378
score: 99.4793701171875
patch: for ( int i = 0 ; i < n && i < n ; i ++ ) {
rank: 378
score: 99.45911322699652
patch: for ( int i = k + 0 ; i >= 0 ; i -- ) {
rank: 378
score: 99.4459292763158
patch: for ( int i = k - 1 ; i >= n ; ++ ++ i ) {
rank: 379
score: 99.50722045898438
patch: for ( int i = k + 1 ; i >= 0 - k ; i ++ ) {
rank: 379
score: 99.49444580078125
patch: for ( int i = $NUMBER$ ; i != n + 1 ; i ++ ) {
rank: 379
score: 99.47930297851562
patch: for ( int i = k + 1 ; i >= n > n ; i ++ ) {
rank: 379
score: 99.45583624588816
patch: for ( int i = k - 1 ; i < n - k ; i ++ )
rank: 379
score: 99.4459164268092
patch: for ( int i = k - 1 ; i >= 0 ; i -= n ) {
rank: 380
score: 99.50712585449219
patch: for ( int i = 1 ; i >= k ; i ++ ) {
rank: 380
score: 99.49406433105469
patch: for ( int i = false ; i <= n ; i ++ ) {
rank: 380
score: 99.4891293174342
patch: for ( int i = k + 1 ; i < n ; i ++ ) { }
rank: 380
score: 99.46650247012867
patch: for ( int i = k + 1 ; i == $NUMBER$ ; i ++ )
rank: 380
score: 99.45866563585069
patch: for ( int i = k + 1 ; i <= value ; i ++ ) {
rank: 380
score: 99.45578931725544
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += i ; }
rank: 380
score: 99.44583129882812
patch: for ( int n = 0 ; n < n ; n ++ ) {
rank: 381
score: 99.49397786458333
patch: for ( int i = $NUMBER$ ; i < i - k ; i ++ ) {
rank: 381
score: 99.47867160373264
patch: for ( int i = 1 ; i < n + $NUMBER$ ; i ++ ) {
rank: 381
score: 99.45832262541118
patch: } for ( int i = k + 1 ; i < k ; i ++ ) {
rank: 381
score: 99.45578342013889
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( i ) ;
rank: 381
score: 99.43726264105902
patch: for ( int i = k ; i + 1 : n ; i ++ ) {
rank: 382
score: 99.50596923828125
patch: for ( int i = k + 1 ; i > 0 - 1 ; i ++ ) {
rank: 382
score: 99.49378797743056
patch: for ( int i = length + 1 ; i < n ; i ++ ) {
rank: 382
score: 99.48882378472223
patch: for ( int i = k - 1 ; i < max ; i ++ ) {
rank: 382
score: 99.47817511307566
patch: for ( int i = k - 1 ; i >= n + 1 ; i -- )
rank: 382
score: 99.458251953125
patch: for ( int i = 0 ; i <= this . n ; i ++ ) {
rank: 382
score: 99.45523071289062
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum -= Math . log (
rank: 382
score: 99.445556640625
patch: for ( int i = k + 1 ; i > n ; ++ i ) {
rank: 383
score: 99.4949151400862
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( this . i ) ;
rank: 383
score: 99.47804565429688
patch: for ( int i = k + 1 ; i <= n . length ; i ++ ) {
rank: 383
score: 99.46615939670139
patch: for ( int i = - 1 ; i < n ; i ++ ) { {
rank: 383
score: 99.45772298177083
patch: for ( int i = k + 0 ; i >= 1 ; i -- ) {
rank: 383
score: 99.44551355698529
patch: for ( int i = k + 1 ; i < ; i ++ ) {
rank: 383
score: 99.43705240885417
patch: for ( int i = k + 0 ; i > n ; i ++ ) {
rank: 384
score: 99.494873046875
patch: for ( int i = $NUMBER$ + k + 1 ; i <= n - k ; i ++ ) {
rank: 384
score: 99.49365234375
patch: for ( int i = $NUMBER$ ; i < n + 0 ; i ++ ) {
rank: 384
score: 99.47787957442434
patch: for ( int i = i + 1 ; i <= n ; i ++ ) { {
rank: 384
score: 99.46603054470486
patch: for ( int i = k + - k ; i <= n ; i ++ )
rank: 384
score: 99.45463481702302
patch: for ( int i = k + 1 ; i < k - 1 ; i ++ )
rank: 385
score: 99.50562201605902
patch: for ( int i = $NUMBER$ ; i > n - 1 ; i ++ ) {
rank: 385
score: 99.48818630642361
patch: for ( int i = 0 + 1 ; i <= start ; i ++ ) {
rank: 385
score: 99.47779541015625
patch: for ( int i = k + 1 ; i >= n / $NUMBER$ ; i ++ ) {
rank: 385
score: 99.46566951976104
patch: for ( int i = k + 1 ; i > k ; i ++ )
rank: 385
score: 99.44514016544117
patch: for ( int i = k 0 ; i <= n ; i ++ ) {
rank: 385
score: 99.436279296875
patch: for ( int i = k + 1 ++ ; i <= n ; i ++ ) {
rank: 386
score: 99.4943514737216
patch: binomial CaMeL Coefficient CaMeL Double for ( i = k + 1 ; i <= n ; i ++ ) {
rank: 386
score: 99.47774658203124
patch: for ( int i = k - 1 ; i >= n ; i -- ) { ) {
rank: 386
score: 99.45448704769737
patch: for ( int i = k ] ; i <= n - 1 ; i ++ ) {
rank: 386
score: 99.43588738692434
patch: for ( int i = k ; i <= n ; i ++ ) { i ++ {
rank: 387
score: 99.50457763671875
patch: for ( int i = $NUMBER$ + 1 ; i == n - k ; i ++ ) {
rank: 387
score: 99.49433826264881
patch: k ! for ( int i = k + 1 ; i <= n ; i ++ ) { {
rank: 387
score: 99.48738098144531
patch: for ( int i = 0 ; i <= size ; i ++ ) {
rank: 387
score: 99.45713975694444
patch: for ( int i = k ; i <= n * 1 ; i ++ ) {
rank: 387
score: 99.45417865953948
patch: for ( int i = $NUMBER$ ; i < n - k - 1 ; i ++ )
rank: 387
score: 99.44495307074652
patch: for ( short i = k + 1 ; i <= n ; i ++ ) {
rank: 387
score: 99.43578423394098
patch: for ( int i = 1 + 1 ; i >= n ; i ++ ) {
rank: 388
score: 99.50395372178819
patch: for ( int i = k + 0 ; i == n ; i ++ ) {
rank: 388
score: 99.49427861752717
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { if ( n == k ) {
rank: 388
score: 99.48729112413194
patch: for ( int i = k / 1 ; i >= 0 ; i ++ ) {
rank: 388
score: 99.46533203125
patch: for ( int i = $NUMBER$ + $NUMBER$ ; i <= n ; i ++ )
rank: 388
score: 99.4569027549342
patch: for ( int i = k + 1 ; i < n ; i 0 ++ ) {
rank: 388
score: 99.45369680304276
patch: for ( int ++ i = k + 1 ; i <= n ; i ++ ) {
rank: 388
score: 99.4448177939967
patch: for ( int i = k - 1 ; i >= + 1 ; i -- ) {
rank: 389
score: 99.49146792763158
patch: / k ! for ( int i = 0 ; i <= n ; i ++ ) {
rank: 389
score: 99.46444363064236
patch: for ( int i = 0 ; i <= k + k ; i ++ ) {
rank: 389
score: 99.45661926269531
patch: for ( int i = 0 ; i < length ; i ++ ) {
rank: 389
score: 99.43553402549342
patch: for ( int i = k + 1 ; i <= n ; i -- ) { )
rank: 390
score: 99.49413220635776
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( this . i ) ;
rank: 390
score: 99.45356188322368
patch: for ( int i = i + 1 ; i <= n - 1 ; i ++ )
rank: 390
score: 99.44460042317708
patch: for ( int i = 0 ; i < n ; i ++ ) { { {
rank: 390
score: 99.43521921258224
patch: for ( int i = k + n ; i ++ <= n ; i ++ ) {
rank: 391
score: 99.50381130642361
patch: for ( int i = k + 1 ; i == 0 ; i ++ ) {
rank: 391
score: 99.49405067845395
patch: for ( int i = $NUMBER$ ; i <= n - - k ; i ++ ) {
rank: 391
score: 99.48689270019531
patch: for ( int i = 0 ; i <= length ; i ++ ) {
rank: 391
score: 99.47704467773437
patch: for ( int i = k + 1 ; i < k ; i ++ ) { ) {
rank: 391
score: 99.46437581380208
patch: for ( int i = k + $NUMBER$ ; i <= $NUMBER$ ; i ++ ) {
rank: 391
score: 99.45338948567708
patch: for ( int i = 0 ; i <= n - k ; i ++ ) { log CaMeL Sum -= i ;
rank: 392
score: 99.5037109375
patch: for ( int i = k + 1 ; i == k - k ; i ++ ) {
rank: 392
score: 99.49403211805556
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( 1 ) ;
rank: 392
score: 99.48581949869792
patch: for ( int i = k << 1 ; i <= n ; i ++ ) {
rank: 392
score: 99.47692260742187
patch: for ( int i = n + 1 ; i < n ; i ++ ) { ) {
rank: 392
score: 99.46428087022569
patch: for ( int i = $NUMBER$ ; i . i <= n ; i ++ ) {
rank: 392
score: 99.45646158854167
patch: for ( int i = k ; i < n * 1 ; i ++ ) {
rank: 392
score: 99.44427490234375
patch: for ( int i = i - 1 ; i >= 0 ; i -- ) {
rank: 392
score: 99.43492367393092
patch: for ( int i = k + 1 ; i >= n ; i ] ++ ) {
rank: 393
score: 99.50343017578125
patch: for ( int i = k + 1 + 0 ; i <= n ; i ++ ) {
rank: 393
score: 99.4939597800926
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( k ) ;
rank: 393
score: 99.47688802083333
patch: for ( int i = i + 1 ; i < k ; i ++ ) {
rank: 393
score: 99.46396213107639
patch: for ( int i = 0 ; i >= k - k ; i ++ ) {
rank: 393
score: 99.45213826497395
patch: for ( int i = k + 1 ; i < n ; i ++ ) { log CaMeL Sum += i ;
rank: 393
score: 99.44399685329861
patch: for ( int i = k - 1 ; i > 1 ; i -- ) {
rank: 394
score: 99.50333862304687
patch: for ( int i = k + 0 + 1 ; i < n ; i ++ ) {
rank: 394
score: 99.49358575994319
patch: k ! n ! for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 394
score: 99.48419189453125
patch: for ( int i = k - 1 ; i <= size ; i ++ ) {
rank: 394
score: 99.45184004934211
patch: for ( int i = n + 1 ; i < n - k ; i ++ )
rank: 394
score: 99.4433234719669
patch: for ( int i = k + 1 ; i >= ; i -- ) {
rank: 394
score: 99.43409559461806
patch: for ( int i = k ; i <= n - 0 ; i ++ ) {
rank: 395
score: 99.4766845703125
patch: for ( int i = k + 1 ; i <= n * n ; i ++ ) {
rank: 395
score: 99.44322445518092
patch: for ( int i = k + 1 ; i >= k ; i -= 1 ) {
rank: 395
score: 99.43395278033088
patch: for ( int i = 0 ; i < n ; i 1 ++ ) {
rank: 396
score: 99.50300903320313
patch: for ( int i = length + 1 ; i <= n - k ; i ++ ) {
rank: 396
score: 99.48348659939236
patch: for ( int i = 0 + n ; i <= 0 ; i ++ ) {
rank: 396
score: 99.47665066189236
patch: for ( int i = 0 ; i < k + n ; i ++ ) {
rank: 396
score: 99.45138389185855
patch: for ( int i = k + 1 + 1 ; i < n ; i ++ )
rank: 396
score: 99.44321017795139
patch: for ( long i = k - 1 ; i <= n ; i ++ ) {
rank: 396
score: 99.43374294704861
patch: for ( int i = k + 1 ; i - n ; i ++ ) {
rank: 397
score: 99.48313903808594
patch: for ( int i = 0 ; k <= n ; i ++ ) {
rank: 397
score: 99.46240234375
patch: for ( int i = $NUMBER$ ; i <= i + k ; i ++ )
rank: 397
score: 99.45134420955883
patch: for ( int i = k ++ ; i <= n ; i ++ ) {
rank: 397
score: 99.43364122178819
patch: for ( int i = k + n ; i > n ; i ++ ) {
rank: 398
score: 99.50240749782986
patch: for ( int i = 0 ; i + 1 <= n ; i ++ ) {
rank: 398
score: 99.48766411675348
patch: for ( int i = max - 1 ; i <= n ; i ++ ) {
rank: 398
score: 99.45538330078125
patch: for ( int i = k + 1 ; i <= n ; i ++ ) )
rank: 398
score: 99.45128038194444
patch: for ( int i = $NUMBER$ ; i <= n - k ; ++ i ) {
rank: 398
score: 99.4430793313419
patch: for ( int i = 0 ; i < k + 1 ; i ++ )
rank: 399
score: 99.50193158318015
patch: for ( int i = - 1 ; i == n ; i ++ ) {
rank: 399
score: 99.48269314236111
patch: for ( int i = 0 + 1 ; i >= $NUMBER$ ; i ++ ) {
rank: 399
score: 99.4616340188419
patch: for ( int i = $NUMBER$ ; i <= k - 1 ; i ++ )
rank: 399
score: 99.45525444878473
patch: for ( int i = k + $NUMBER$ ; i >= $NUMBER$ ; i -- ) {
rank: 399
score: 99.44294569227431
patch: for ( int i = k + 1 ; i >= k ; -- i ) {
rank: 399
score: 99.43308512369792
patch: for ( int i = k ; i ; i <= n ; i ++ ) {
rank: 400
score: 99.49256633890086
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( k ) ;
rank: 400
score: 99.46145450367646
patch: for ( int i = $NUMBER$ ; i <= k + k ; i ++ )
rank: 400
score: 99.44291606702302
patch: for ( int i = 0 ; i < n ; i ++ , i ++ ) {
rank: 400
score: 99.4330825805664
patch: for ( int i = 1 ; i <= k ; i -- ) {
rank: 401
score: 99.4924737338362
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i ) ;
rank: 401
score: 99.48679606119792
patch: for ( int i = $NUMBER$ ; i <= 1 + 1 ; i ++ ) {
rank: 401
score: 99.46114773220486
patch: for ( int i = k + 1 ; i >= - k ; i ++ )
rank: 401
score: 99.45472547743056
patch: for ( byte i = k + 1 ; i <= n ; i ++ ) {
rank: 401
score: 99.44291178385417
patch: for ( int i = i + 1 ; i >= i ; i -- ) {
rank: 401
score: 99.43300494025735
patch: final for ( int i = k ; i <= n ; i ++ ) {
rank: 402
score: 99.50146484375
patch: for ( int i = k ; i > 0 ; i ++ ) {
rank: 402
score: 99.49242553710937
patch: for ( Object i = k + 1 ; i <= n - k ; i ++ ) {
rank: 402
score: 99.46076516544117
patch: for ( int i = - 1 ; i <= 1 ; i ++ ) {
rank: 402
score: 99.45428466796875
patch: for ( int i = 0 ; i <= n / n ; i ++ ) {
rank: 403
score: 99.50137329101562
patch: for ( int i = k ; i > $NUMBER$ ; i ++ ) {
rank: 403
score: 99.49239501953124
patch: for ( int i = k + n - 1 ; i <= n ; i ++ ) {
rank: 403
score: 99.48634739925987
patch: for ( Iterator ! for ( int i = $NUMBER$ ; i <= n ; i ++ )
rank: 403
score: 99.46076117621527
patch: for ( int i = k - k ; i <= k ; i ++ ) {
rank: 403
score: 99.44727847450658
patch: for ( int i = 1 + 1 ; i <= n - k ; i ++ )
rank: 403
score: 99.43291877297794
patch: for ( int i = 1 ; i <= n ; i 1 ++ ) {
rank: 404
score: 99.48623817845395
patch: for ( int i = k + 1 ; i . <= n ; i ++ ) {
rank: 404
score: 99.47516479492188
patch: for ( int i = k + 1 ; i <= k + n ; i ++ ) {
rank: 404
score: 99.45927598741319
patch: for ( int i = k ; i <= i - k ; i ++ ) {
rank: 404
score: 99.44239637586806
patch: for ( double i = k + 1 ; i >= n ; i ++ ) {
rank: 404
score: 99.4328254250919
patch: for ( int i = 1 ; i < n ; i 1 ++ ) {
rank: 405
score: 99.49232788085938
patch: for ( int i = $NUMBER$ + k + k ; i <= n ; i ++ ) {
rank: 405
score: 99.4815673828125
patch: for ( int i = 0 + 0 ; i <= 0 ; i ++ ) {
rank: 405
score: 99.47511596679688
patch: for ( int i = n - 1 ; i <= n + 1 ; i ++ ) {
rank: 405
score: 99.45902745863971
patch: for ( int i = k - $NUMBER$ ; i <= n ; i ++ )
rank: 405
score: 99.44594997829861
patch: for ( int i = i ; i <= n - k ; i ++ ) {
rank: 405
score: 99.44233783922698
patch: for ( int i = k - 1 ; i >= k - 1 ; i -- )
rank: 405
score: 99.4326171875
patch: for ( int i = 1 ; i <= k ; i ++ ) { ) {
rank: 406
score: 99.49961344401042
patch: for ( Iterator i = n - 1 ; i <= n ; i ++ ) {
rank: 406
score: 99.49212646484375
patch: k ! for ( int i = 0 ; i <= n - k ; i ++ ) {
rank: 406
score: 99.47492065429688
patch: * / for ( int i = k ; i < n + 1 ; i ++ ) {
rank: 406
score: 99.45865207248264
patch: for ( int i = k + 1 ; i ! n ; i ++ ) {
rank: 406
score: 99.44584147135417
patch: for ( int i = n ; i <= n - k ; i ++ ) {
rank: 406
score: 99.43246639476104
patch: for ( final int i = k ; i <= n ; i ++ ) {
rank: 407
score: 99.49871148003473
patch: for ( int i = $NUMBER$ ; i > n - k ; i ++ ) {
rank: 407
score: 99.49197265625
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { binomial CaMeL Coefficient CaMeL Double * /
rank: 407
score: 99.48110961914062
patch: for ( int i = 0 ; k < n ; i ++ ) {
rank: 407
score: 99.45814424402573
patch: for ( int i = k - 1 ; i >= 0 ; i ++ )
rank: 407
score: 99.45351833767361
patch: for ( int i = k ; i < k + $NUMBER$ ; i ++ ) {
rank: 407
score: 99.44578043619792
patch: for ( int i = $NUMBER$ ; i <= n - 1 ; i ++ ) { log CaMeL Sum -= i ;
rank: 407
score: 99.43221028645833
patch: for ( int i = k ; i + 1 : n ) {
rank: 408
score: 99.45741182215073
patch: for ( int i = k + k ; i >= $NUMBER$ ; i ++ )
rank: 408
score: 99.45303005642361
patch: for ( int i = k ; i < i + 1 ; i ++ ) {
rank: 408
score: 99.44559733072917
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += 0 . $NUMBER$ ;
rank: 408
score: 99.43196828741776
patch: for ( int i = k + 1 ; i -- <= 1 ; i ++ ) {
rank: 409
score: 99.49790326286765
patch: for ( int i = - 0 ; i <= n ; i ++ ) {
rank: 409
score: 99.49190673828124
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) { System .
rank: 409
score: 99.45733642578125
patch: for ( int i = - 1 ; i <= $NUMBER$ ; i ++ )
rank: 409
score: 99.45301649305556
patch: for ( int i = k + 1 ; i < 0 ; ++ i ) {
rank: 409
score: 99.44163754111842
patch: for ( int i = k + 1 ; i > n ; i -- ) { {
rank: 409
score: 99.43142218338816
patch: for for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 410
score: 99.49188523065476
patch: for ( int i = k + 1 ; i < n - k ; i ++ ) { {
rank: 410
score: 99.48468695746527
patch: for ( int i = $NUMBER$ ; i < n - $NUMBER$ ; i ++ ) {
rank: 410
score: 99.45265706380208
patch: for ( int i = k + 1 ; i < false ; i -- ) {
rank: 410
score: 99.44503219039352
patch: for ( int i = $NUMBER$ ; i <= n ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 411
score: 99.49782843338816
patch: for ( int i = $NUMBER$ + 1 ; i <= n ; i ++ ) { {
rank: 411
score: 99.48468017578125
patch: for ( int i = $NUMBER$ + $NUMBER$ ; i < n ; i ++ ) {
rank: 411
score: 99.47446899414062
patch: for ( int i = k + 1 ; i <= n * 1 ; i ++ ) {
rank: 411
score: 99.4569091796875
patch: for ( int i = k + 1 ; i <= - k ; i ++ )
rank: 411
score: 99.45252143012152
patch: for ( int i = k + $NUMBER$ ; i >= $NUMBER$ ; i ++ ) {
rank: 411
score: 99.43995496961806
patch: for ( int i = 0 + 1 ; i >= k ; i -- ) {
rank: 411
score: 99.43133866159539
patch: for ( int i = k + 1 ; i <= n ; i -- ) { {
rank: 412
score: 99.47999403211806
patch: for ( int i = k + 0 ; i <= 1 ; i ++ ) {
rank: 412
score: 99.45686848958333
patch: for ( int i = $NUMBER$ ; i <= 1 - 1 ; i ++ ) {
rank: 412
score: 99.45243326822917
patch: for ( int i = k ; i <= n + 0 ; i ++ ) {
rank: 412
score: 99.43124229029605
patch: for ( int i = k + 1 ; i < k 1 ; i ++ ) {
rank: 413
score: 99.49685329861111
patch: for ( int i = 0 + 1 ; i == n ; i ++ ) {
rank: 413
score: 99.49128861860795
patch: k ; for ( int i = k + 1 ; i <= n - k ; i ++ ) {
rank: 413
score: 99.47965494791667
patch: for ( int i = 0 + 1 ; i >= 0 ; i -- ) {
rank: 413
score: 99.47440592447917
patch: for ( int i = k / 1 ; i >= n ; i ++ ) {
rank: 413
score: 99.45242470189145
patch: for ( int i = 0 ; i < n + 1 ; i 1 ++ ) {
rank: 413
score: 99.43976593017578
patch: for ( int i = 1 ; i <= n ; ++ i ) {
rank: 414
score: 99.49122902199075
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( 1 ) ;
rank: 414
score: 99.4788754111842
patch: for ( int i = k + 1 ; i <= 0 ; i ++ ) { {
rank: 414
score: 99.47397974917763
patch: for ( int i = 0 ; i < n + 1 ; i ++ ) { )
rank: 414
score: 99.45676556755515
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { }
rank: 414
score: 99.45216878255208
patch: for ( int i = k + 1 ; i < true ; i ++ ) {
rank: 414
score: 99.4443359375
patch: for ( int i = start ; i <= n - k ; i ++ ) {
rank: 414
score: 99.4307861328125
patch: for ( int i = n ; i <= n + 1 ; i ++ ) {
rank: 415
score: 99.49114435369319
patch: for ( int i = k + k + k + 1 ; i <= n ; i ++ ) {
rank: 415
score: 99.48347553453948
patch: for ( int i = k - 1 ; i < n 1 ; i ++ ) {
rank: 415
score: 99.47885470920139
patch: for ( int i = k | 1 ; i < n ; i ++ ) {
rank: 415
score: 99.4441448709239
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) { log CaMeL Sum ++ ;
rank: 415
score: 99.43968441611842
patch: for ( final int i = k - 1 ; i <= n ; i ++ ) {
rank: 416
score: 99.49111328125
patch: for ( double i = k + k ; i <= n - k ; i ++ ) {
rank: 416
score: 99.47879188939145
patch: boolean for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 416
score: 99.45647834329044
patch: for ( int i = $NUMBER$ ; i != n - k ; i ++ )
rank: 416
score: 99.4517463235294
patch: for ( int i = 0 ; i < n ; 1 ++ i ) {
rank: 416
score: 99.43966335720486
patch: for ( int i = k ; i >= k + 1 ; i ++ ) {
rank: 417
score: 99.49089249320652
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { if ( k == 1 ) {
rank: 417
score: 99.47369384765625
patch: for ( int i = k + 1 ; i < n > i ; i ++ ) {
rank: 417
score: 99.4564568014706
patch: for ( int i = $NUMBER$ ; i >= n ; i ++ ) { {
rank: 418
score: 99.49068777901786
patch: for ( int i = k + 1 ; i <= n - - 1 ; i ++ ) {
rank: 418
score: 99.47365851151316
patch: for ( int i = k - 1 ; i >= n + 1 ; i ++ )
rank: 418
score: 99.45635579427083
patch: for ( double i = $NUMBER$ ; i <= n ; i ++ )
rank: 418
score: 99.43894958496094
patch: for ( long i = 0 ; i < n ; i ++ ) {
rank: 419
score: 99.4906005859375
patch: for ( int i = 1 + k ; i <= n - k ; i ++ ) {
rank: 419
score: 99.47232858758224
patch: for ( int i = 1 ; i < n + 1 ; i ++ ) { {
rank: 419
score: 99.44211832682292
patch: for ( int i = 1 ; i <= n - k ; i ++ ) { log CaMeL Sum -= i ;
rank: 419
score: 99.42971462673611
patch: for ( int i = k + n ; i <= n ; i -- ) {
rank: 420
score: 99.47145385742188
patch: for ( int i = k + k + n ; i < n ; i ++ ) {
rank: 420
score: 99.44199732730263
patch: for ( int i = $NUMBER$ ; i <= n - k + 1 ; i ++ )
rank: 420
score: 99.43855794270833
patch: for ( double i = k - 1 ; i >= n ; i -- ) {
rank: 421
score: 99.49582248263889
patch: for ( int i = $NUMBER$ + 1 ; i > n ; i ++ ) {
rank: 421
score: 99.48217095269098
patch: for ( int i = k ; i <= n : n ; i ++ ) {
rank: 421
score: 99.4774169921875
patch: for ( int i = 1 + 1 ; i < 0 ; i ++ ) {
rank: 421
score: 99.4714419716283
patch: for ( int i = k + 1 ; i >= n - 1 ; i -- )
rank: 421
score: 99.45580240885417
patch: for ( int i = 0 ; i == n ; i ++ )
rank: 421
score: 99.43806966145833
patch: for ( int i = 0 + i ; i < n ; i ++ ) {
rank: 421
score: 99.42940266927083
patch: for ( int i = k + 1 ; i >= start ; i ++ ) {
rank: 422
score: 99.48965567129629
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( k ) ;
rank: 422
score: 99.4769287109375
patch: for ( int i = k - $NUMBER$ ; i < 0 ; i ++ ) {
rank: 422
score: 99.47144165039063
patch: for ( int i = k + 1 ; i >= k + n ; i ++ ) {
rank: 422
score: 99.45537651909723
patch: for ( int i = k + k ; i <= 0 ; i ++ ) {
rank: 422
score: 99.44991726345486
patch: for ( int i = k + 1 ; i >= size ; i ++ ) {
rank: 422
score: 99.44165880926724
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( n - i ) ;
rank: 422
score: 99.43781873914931
patch: for ( int k = k + 1 ; i >= n ; i -- ) {
rank: 422
score: 99.42898898654514
patch: for ( int i = n + 0 ; i < n ; i ++ ) {
rank: 423
score: 99.48964146205357
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( double ) i ;
rank: 423
score: 99.47692192925348
patch: for ( int i = 0 + 1 ; i <= size ; i ++ ) {
rank: 423
score: 99.437744140625
patch: for ( int i = k + 1 ; i <= n + $NUMBER$ ; i ++ )
rank: 424
score: 99.49444580078125
patch: for ( int i = $NUMBER$ + i <= n ; i ++ ) {
rank: 424
score: 99.47692108154297
patch: for ( int i = 0 ; i < start ; i ++ ) {
rank: 424
score: 99.44944932725694
patch: for ( int i = 0 + 1 ; i >= 1 ; i -- ) {
rank: 424
score: 99.4410464638158
patch: for ( int i = k + 1 ; i <= n + k ; i ++ )
rank: 424
score: 99.42850534539474
patch: for ( int i = k + 1 ; i >= k ; i ++ ) { )
rank: 425
score: 99.48944646661931
patch: for ( int i = k + 1 ; i <= n - n - k ; i ++ ) {
rank: 425
score: 99.48177939967105
patch: / k ! for ( int i = $NUMBER$ ; i < n ; i ++ ) {
rank: 425
score: 99.47030639648438
patch: for ( int i = n - 1 ; i >= n - 1 ; i -- ) {
rank: 425
score: 99.45466444227431
patch: for ( int i = $STRING$ ; i <= n - k ; i ++ ) {
rank: 425
score: 99.44903243215461
patch: } for ( int i = k + 1 ; i <= n ; i -- ) {
rank: 425
score: 99.42828010110294
patch: for ( int i = 1 ; i < n ; i ++ ) { )
rank: 426
score: 99.47013549804687
patch: / * for ( int i = k + 1 ; i >= n ; i ++ ) {
rank: 426
score: 99.4543098000919
patch: for ( int i = $NUMBER$ ; i >= 1 ; i ++ ) { {
rank: 426
score: 99.44881184895833
patch: for ( int i = k + 1 ; i >= size ; i -- ) {
rank: 426
score: 99.44049393503289
patch: for ( int i = k 1 ; i <= n - k ; i ++ ) {
rank: 426
score: 99.43692819695724
patch: for ( final int i = k + 1 ; i >= n ; i -- ) {
rank: 426
score: 99.42825478001645
patch: for ( int i = k + 1 ; i >= + 1 ; i ++ ) {
rank: 427
score: 99.4766616821289
patch: for ( int i = 0 ; i <= max ; i ++ ) {
rank: 427
score: 99.44875759548611
patch: for ( int i = 1 ; i < n + 1 ; i -- ) {
rank: 427
score: 99.44010844983552
patch: for ( int i = k + 0 ; i <= n - 1 ; i ++ )
rank: 428
score: 99.48848293138587
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { if ( i == n ) {
rank: 428
score: 99.45374253216912
patch: for ( int i = $NUMBER$ + k ; i <= n ; i ++ )
rank: 428
score: 99.43622185202206
patch: for ( int i = 0 ; i < n - 1 ; i ++ )
rank: 429
score: 99.49407958984375
patch: for ( int i = $NUMBER$ + 1 ; i <= 0 ; i ++ ) {
rank: 429
score: 99.476318359375
patch: for ( int i = k * 1 ; i < k ; i ++ ) {
rank: 429
score: 99.469482421875
patch: for ( int i = k + 1 ; i <= n + 1 ; i -- ) {
rank: 429
score: 99.45338948567708
patch: for ( int i = k - k ; i >= $NUMBER$ ; i ++ ) {
rank: 429
score: 99.4391452955163
patch: for ( int i = 0 ; i <= n - k ; i ++ ) { return log CaMeL Sum ;
rank: 430
score: 99.48784845525569
patch: for ( int i = k + 1 ; i <= n - k ; i ++ ) { ) {
rank: 430
score: 99.48015679253473
patch: for ( int i = k + k ; i < 1 ; i ++ ) {
rank: 430
score: 99.47567409939236
patch: for ( int i = 0 ; i < 0 + 1 ; i ++ ) {
rank: 430
score: 99.46937255859375
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { try {
rank: 431
score: 99.46931762695313
patch: n * for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 431
score: 99.45293830422794
patch: for ( n = k + 1 ; i <= n ; i ++ ) {
rank: 431
score: 99.44828033447266
patch: for ( int i = k ; i <= $STRING$ ; i ++ ) {
rank: 431
score: 99.42754448784723
patch: for ( int i = n ; i <= n - 1 ; i ++ ) {
rank: 432
score: 99.48779296875
patch: n ! for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 432
score: 99.4796142578125
patch: for ( int i = $NUMBER$ + 1 ; i <= i ; i ++ ) {
rank: 432
score: 99.4691162109375
patch: for ( int i = n + 1 ; i >= n - 1 ; i -- ) {
rank: 432
score: 99.43733978271484
patch: for ( int i = $NUMBER$ ; i <= n ; i -- ) {
rank: 432
score: 99.43563039679276
patch: for ( int i = k - 1 ; i >= k + 1 ; i -- )
rank: 433
score: 99.45269775390625
patch: for ( int i = $NUMBER$ ; i + 1 == n ; i ++ ) {
rank: 433
score: 99.43533325195312
patch: for ( float i = 0 ; i <= n ; i ++ ) {
rank: 433
score: 99.42738850911458
patch: for ( int i = n + 1 ; i == n ; i ++ ) {
rank: 434
score: 99.48759128736413
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { if ( i < n ) {
rank: 434
score: 99.45258645450367
patch: for ( int i = k - 1 ; i >= k ; i ++ )
rank: 434
score: 99.43653628700658
patch: for ( int i = $NUMBER$ + 1 ; i <= n - 1 ; i ++ )
rank: 434
score: 99.4352294921875
patch: for ( i = 0 ; i < n ; i ++ ) {
rank: 435
score: 99.49333360460069
patch: for ( int i = $NUMBER$ ; i <= n - n ; i ++ ) {
rank: 435
score: 99.48746464170259
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( k ) ;
rank: 435
score: 99.47434596011513
patch: for ( int i = 0 ; i < n [ 1 ] ; i ++ ) {
rank: 435
score: 99.4686767578125
patch: for ( int i = 1 + 1 ; i < n + 1 ; i ++ ) {
rank: 435
score: 99.45257209329044
patch: for ( int i = $NUMBER$ + 1 ; i >= $NUMBER$ ; i ++ )
rank: 435
score: 99.42666286892361
patch: for ( int i = k + 1 ; i ++ <= n ; i ++ )
rank: 436
score: 99.4520263671875
patch: for ( int i = $NUMBER$ + 1 ; i == n ; i ++ )
rank: 436
score: 99.44719495271382
patch: for ( int i = 0 ; i < n + - 1 ; i ++ ) {
rank: 436
score: 99.43586168791118
patch: for ( int i = k + 1 ; i <= n - k ; ++ i )
rank: 436
score: 99.42660183376736
patch: for ( String k = k + 1 ; i <= n ; i ++ ) {
rank: 437
score: 99.49197048611111
patch: for ( int i = k ; i == n - k ; i ++ ) {
rank: 437
score: 99.4873046875
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( i ) ;
rank: 437
score: 99.47332763671875
patch: / * for ( int i = 0 ; i <= n ; i ++ ) {
rank: 437
score: 99.46826171875
patch: for ( int i = k + 1 ; i >= n / n ; i ++ ) {
rank: 437
score: 99.45181613498264
patch: for ( int i = $NUMBER$ ; i <= k ; i ++ ) { { {
rank: 437
score: 99.44709329044117
patch: for ( int i = 0 ; i < - $NUMBER$ ; i ++ ) {
rank: 437
score: 99.43461100260417
patch: for ( int i = 0 ; i < n / n ; i ++ ) {
rank: 438
score: 99.49186197916667
patch: for ( int i = $NUMBER$ ; i > k - k ; i ++ ) {
rank: 438
score: 99.48715691817434
patch: for ( Iterator i = k + 1 ; i . <= n ; i ++ ) {
rank: 438
score: 99.46787719726562
patch: for ( int i = k / n + 1 ; i <= n ; i ++ ) {
rank: 438
score: 99.4468994140625
patch: for ( int i = k + 1 ; i < k ; i 1 ++ ) {
rank: 438
score: 99.43458387586806
patch: this . for ( int i = 0 ; i < n ; i ++ ) {
rank: 439
score: 99.49165852864583
patch: for ( int i = 1 ; i == n - 1 ; i ++ ) {
rank: 439
score: 99.46726684570312
patch: for ( int i = k - 1 ; i >= i - 1 ; i ++ ) {
rank: 439
score: 99.45177408854167
patch: for ( int i = 0 ; i <= 0 ; i ++ )
rank: 439
score: 99.44679768880208
patch: for ( Class i = k + 1 ; i <= n ; i ++ ) {
rank: 439
score: 99.43555972450658
patch: for ( int i = k ++ ; i <= n - 1 ; i ++ ) {
rank: 439
score: 99.42612818667763
patch: for ( int i = k + 1 ; i >> >= n ; i ++ ) {
rank: 440
score: 99.49164895450367
patch: for ( int i = $NUMBER$ ; i >> <= n ; i ++ ) {
rank: 440
score: 99.47269015842014
patch: for ( int i = k - $NUMBER$ ; i <= k ; i ++ ) {
rank: 440
score: 99.44662655101104
patch: for ( int i = 0 ; i < n + ; i ++ ) {
rank: 440
score: 99.43540954589844
patch: for ( int i = k + 1 ; i <= n - k ;
rank: 440
score: 99.42598724365234
patch: for ( int i = 1 ; i < i ; i ++ ) {
rank: 441
score: 99.49142456054688
patch: for ( int i = 1 ; i > $NUMBER$ ; i ++ ) {
rank: 441
score: 99.47216118706598
patch: for ( int i = k + $NUMBER$ ; i <= max ; i ++ ) {
rank: 441
score: 99.46709594726562
patch: for ( int i = i + 1 ; i < n ; i ++ ) { ) {
rank: 441
score: 99.45148064108456
patch: for ( int i = $NUMBER$ ; i >= n - k ; i ++ )
rank: 441
score: 99.43370863970588
patch: / for ( int i = 0 ; i < n ; i ++ ) {
rank: 441
score: 99.42591050091912
patch: for ( int i = k + ; i <= k ; i ++ ) {
rank: 442
score: 99.47212049696181
patch: for ( int i = k * 1 ; i <= i ; i ++ ) {
rank: 442
score: 99.45132107204861
patch: for ( int i = 0 ; i <= i + k ; i ++ ) {
rank: 442
score: 99.43525776110198
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { return i ;
rank: 442
score: 99.43358696831598
patch: for ( int i = k + 1 ; i >= n ; i -= $NUMBER$ )
rank: 442
score: 99.42585584852431
patch: for ( int i = k == 1 ; i <= n ; i ++ ) {
rank: 443
score: 99.49051242404514
patch: for ( int i = k ; i == n - 1 ; i ++ ) {
rank: 443
score: 99.47088623046875
patch: for ( int i = 0 ; i <= 0 + 1 ; i ++ ) {
rank: 443
score: 99.46708374023437
patch: for ( int i = k - 1 ; i > n - 1 ; i -- ) {
rank: 443
score: 99.44630262586806
patch: for ( int i = 0 ; i < n + $NUMBER$ ; i -- ) {
rank: 443
score: 99.43510606553819
patch: for ( int i = 1 ; i <= n - $NUMBER$ ; i ++ ) {
rank: 443
score: 99.43332248263889
patch: z : for ( int i = 0 ; i < n ; i ++ ) {
rank: 443
score: 99.42580837673611
patch: for ( int i = k ; i < i - 1 ; i ++ ) {
rank: 444
score: 99.47718641493056
patch: for ( int i = $NUMBER$ ; i <= 1 : n ; i ++ ) {
rank: 444
score: 99.45123291015625
patch: for ( int i = $NUMBER$ - 1 ; i <= k ; i ++ ) {
rank: 444
score: 99.44622802734375
patch: for ( int i = k + $NUMBER$ ; i < $NUMBER$ ; i ++ ) {
rank: 444
score: 99.43304443359375
patch: for ( int i + 1 = k ; i <= n ; i ++ ) {
rank: 444
score: 99.42567952473958
patch: for ( int i = 0 ; i < k ; i ++ ) { ) {
rank: 445
score: 99.47642686631944
patch: for ( int i = k - k ; i == n ; i ++ ) {
rank: 445
score: 99.45117865668402
patch: for ( int i = 1 ; i <= n ; i ++ ) { { {
rank: 445
score: 99.4459164268092
patch: for ( int i = 0 ; i < n + 1 ; i += 1 ) {
rank: 445
score: 99.43428119860198
patch: for ( int i = k + k ; i <= n - 1 ; i ++ )
rank: 445
score: 99.4330193014706
patch: for ( int i = k 1 ; i <= k ; i ++ ) {
rank: 446
score: 99.48582175925925
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( n ) ;
rank: 446
score: 99.47023411800987
patch: for ( int i = k - 1 ; i < - 1 ; i ++ ) {
rank: 446
score: 99.42554389105902
patch: for ( int i = n + 1 ; i > k ; i ++ ) {
rank: 447
score: 99.48931563527961
patch: for ( int i = 0 ; i <= n - k ; i ++ ) { {
rank: 447
score: 99.48577008928571
patch: / for ( int i = k + 1 ; i <= n - 1 ; i ++ ) {
rank: 447
score: 99.46603054470486
patch: for ( short i = k + 1 ; i < n ; i ++ ) {
rank: 447
score: 99.43271213107639
patch: for ( int i = 0 ; i < n / $NUMBER$ ; i ++ ) {
rank: 448
score: 99.48931206597223
patch: for ( int i = k ; i > k - 1 ; i ++ ) {
rank: 448
score: 99.45037482766544
patch: for ( int i = $NUMBER$ + 1 ; i <= 1 ; i ++ )
rank: 448
score: 99.43411458333334
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum . log CaMeL Sum . log CaMeL Sum .
rank: 448
score: 99.43259684244792
patch: for ( int i = k + i ; i <= n ; i ++ ) {
rank: 448
score: 99.42533151726974
patch: for ( int i = n + 1 ; i <= n 1 ; i ++ ) {
rank: 449
score: 99.48929850260417
patch: for ( int i = $NUMBER$ + 1 ; i > 0 ; i ++ ) {
rank: 449
score: 99.45032501220703
patch: for ( int i = - 1 ; i <= k ; i ++ )
rank: 449
score: 99.43390856291118
patch: for ( Iterator i = k + 1 ; i <= n - k ; i ++ )
rank: 449
score: 99.43238589638158
patch: for ( int i = k + 1 ; i < n 0 ; i ++ ) {
rank: 449
score: 99.42531224300987
patch: for ( int i = k ; i + 1 ++ <= k ; i ++ ) {
rank: 450
score: 99.45030212402344
patch: for ( int int i = $NUMBER$ ; i <= n ; i ++ )
rank: 450
score: 99.44514973958333
patch: for ( int i = i + 1 ; i < n ; i -- ) {
rank: 450
score: 99.43370225694444
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum -= Math . log ( i ) ;
rank: 450
score: 99.43233235677083
patch: for ( double i = 0 + 1 ; i < n ; i ++ ) {
rank: 450
score: 99.42529296875
patch: for ( int i = k ; i > k ; i ++ ) {
rank: 451
score: 99.48537375710227
patch: for ( int i = k + k + k + k ; i <= n ; i ++ ) {
rank: 451
score: 99.47450657894737
patch: for ( int i = $NUMBER$ ; i <= n - - 1 ; i ++ ) {
rank: 451
score: 99.45011138916016
patch: for ( int i = $NUMBER$ ; i >= - k ; i ++ )
rank: 451
score: 99.43267578125
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += ( double ) i ;
rank: 452
score: 99.48504317434211
patch: / for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 452
score: 99.47437879774306
patch: for ( int i = $NUMBER$ : 1 ; i <= n ; i ++ ) {
rank: 452
score: 99.4643310546875
patch: for ( int i = n + 1 ; i <= n + n ; i ++ ) {
rank: 452
score: 99.4501091452206
patch: for ( int i = k - 0 ; i <= n ; i ++ )
rank: 452
score: 99.44454520089286
patch: for ( int i = k + 1 ; i <= n {
rank: 453
score: 99.48774549696181
patch: for ( int i = $NUMBER$ + 1 ; i > $NUMBER$ ; i ++ ) {
rank: 453
score: 99.48482019761029
patch: for ( i = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 453
score: 99.46414794921876
patch: for ( int i = n + 1 ; i >= n - 1 ; i ++ ) {
rank: 453
score: 99.45000143612133
patch: for ( int i = k + k ; i == n ; i ++ )
rank: 453
score: 99.44425695082721
patch: for ( int i = 0 ; i < n ; i i ++ ) {
rank: 453
score: 99.43082004123264
patch: for ( float i = k + 1 ; i <= k ; i ++ ) {
rank: 454
score: 99.47382948133681
patch: for ( int i = 0 : n ; i <= n ; i ++ ) {
rank: 454
score: 99.46809895833333
patch: for ( int i = 0 + 1 ; i >= i ; i ++ ) {
rank: 454
score: 99.44985782398896
patch: for ( int i = 1 ; i <= n + 1 ; i ++ )
rank: 454
score: 99.44419860839844
patch: for ( int i = 0 ; i < $STRING$ ; i -- ) {
rank: 455
score: 99.4846824363426
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( value ) ;
rank: 455
score: 99.46775987413194
patch: for ( int i = k - 0 ; i <= 0 ; i ++ ) {
rank: 455
score: 99.46396213107639
patch: for ( int i = k / 1 ; i >= n ; i -- ) {
rank: 455
score: 99.44960123697916
patch: for ( int i = 0 ; i >= 0 ; i ++ )
rank: 455
score: 99.43041314019098
patch: for ( int i = 0 + 1 ; i != n ; i ++ ) {
rank: 455
score: 99.42443169487848
patch: for ( int i = k + 1 || i < n ; i ++ ) {
rank: 456
score: 99.48462890625
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= ( double ) i ;
rank: 456
score: 99.44955240885416
patch: for ( int i = $NUMBER$ ; i > 0 ; i ++ )
rank: 456
score: 99.44401719835069
patch: for ( int i = k + 1 ; i < max ; i -- ) {
rank: 456
score: 99.43037683823529
patch: for ( int i = 0 ; i < n ; ++ ++ i ) {
rank: 457
score: 99.48634168836806
patch: for ( int i = 1 ; i >= k - 1 ; i ++ ) {
rank: 457
score: 99.48453979492187
patch: for ( double i = k + 1 ; i < n - k ; i ++ ) {
rank: 458
score: 99.48622131347656
patch: for ( int i = k ; i >= 1 ; i ++ ) {
rank: 458
score: 99.47315809461806
patch: for ( int i = 0 ; i < i - 1 ; i ++ ) {
rank: 458
score: 99.44941262637867
patch: for ( int i = 0 - 1 ; i < n ; i ++ )
rank: 458
score: 99.43017578125
patch: for ( int i = k ] + 1 ; i < n ; i ++ ) {
rank: 459
score: 99.48439427425987
patch: for ( int i = 1 ; i <= n - k ; i ++ ) { {
rank: 459
score: 99.47293893914474
patch: for ( int i = k + k 1 ; i <= n ; i ++ ) {
rank: 459
score: 99.46348170230263
patch: for ( int i = k - 1 ; i < n - 1 ; i ++ )
rank: 459
score: 99.44924747242646
patch: for ( int i = 0 ; i <= i - k ; i ++ )
rank: 459
score: 99.44355604383681
patch: for ( int i = k + 1 ; i != n ; i -- ) {
rank: 459
score: 99.42977744654605
patch: for ( int i = k + 1 ; i >= k ; i -= n ) {
rank: 460
score: 99.48428683810764
patch: k ! for ( int i = 1 ; i <= n ; i ++ ) {
rank: 460
score: 99.47239854600694
patch: for ( int i = $NUMBER$ ; i < n + $NUMBER$ ; i ++ ) {
rank: 460
score: 99.4632568359375
patch: / * for ( int i = 0 ; i < n + 1 ; i ++ ) {
rank: 460
score: 99.44895306755515
patch: for ( int i = $NUMBER$ ; i <= k + 1 ; i ++ )
rank: 460
score: 99.44353569878473
patch: for ( int i = k + 0 ; i >= n ; i -- ) {
rank: 460
score: 99.42960851332721
patch: for ( int i = k - 1 ; i >= ; i -- ) {
rank: 460
score: 99.42387309827302
patch: for ( int i = k + k ; i ++ <= n ; i ++ ) {
rank: 461
score: 99.484228515625
patch: try { for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 461
score: 99.47165934244792
patch: for ( int i = 0 ; i < k - k ; i ++ ) {
rank: 461
score: 99.46655951605902
patch: for ( int i = k - $NUMBER$ ; i <= 1 ; i ++ ) {
rank: 461
score: 99.44831399356617
patch: for ( int i = $NUMBER$ ; i >= 0 - k ; i ++ )
rank: 461
score: 99.42955106847427
patch: for ( int i = k + 1 ; i > n ; i -- )
rank: 461
score: 99.42894665948276
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( n - k ) ;
rank: 461
score: 99.42362895764802
patch: for ( int i = k ; i <= n ; i ++ ) { i ++ ;
rank: 462
score: 99.48558213975694
patch: for ( int i = 1 ; i == n - k ; i ++ ) {
rank: 462
score: 99.4841064453125
patch: k ! for ( int i = k ; i <= n - 1 ; i ++ ) {
rank: 462
score: 99.46637284128289
patch: for ( int i = k [ 1 ] ; i <= 0 ; i ++ ) {
rank: 462
score: 99.46314086914063
patch: for ( int i = i + 1 ; i >= n + 1 ; i ++ ) {
rank: 462
score: 99.44825575086806
patch: for ( int i = $NUMBER$ ; i <= $NUMBER$ + 1 ; i ++ ) {
rank: 462
score: 99.44257948133681
patch: for ( int i = k ; i < k - 1 ; i -- ) {
rank: 463
score: 99.47064208984375
patch: for ( int i = 0 ; i > n ; i ++ ) {
rank: 463
score: 99.44823540581598
patch: for ( int i = $NUMBER$ - 1 ; i <= $NUMBER$ ; i ++ ) {
rank: 463
score: 99.44243706597223
patch: for ( int i = k + $NUMBER$ ; i < 1 ; i -- ) {
rank: 463
score: 99.42923990885417
patch: for ( long i = k + 1 ; i <= k ; i ++ ) {
rank: 463
score: 99.42811414930556
patch: for ( int i = k + 1 ; i << n ; i ++ ) {
rank: 464
score: 99.47046576605902
patch: for ( int i = 0 ; i == n + 1 ; i ++ ) {
rank: 464
score: 99.46622043185764
patch: for ( int i = k + 1 ; i <= true ; i ++ ) {
rank: 464
score: 99.44820149739583
patch: for ( int i = $NUMBER$ ; i > k ; i ++ )
rank: 464
score: 99.42810872395833
patch: for ( int i = $NUMBER$ ; i >= $NUMBER$ ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 464
score: 99.42330129523026
patch: for ( int i = k ; i < n ; i ++ ) { i ++ {
rank: 465
score: 99.42329915364583
patch: for ( int i = k ; i < k ; i ; i ++ ) {
rank: 466
score: 99.48500462582237
patch: for k ! for ( int i = 0 ; i <= n ; i ++ ) {
rank: 466
score: 99.4835205078125
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { int
rank: 466
score: 99.46990966796875
patch: for ( int i = $NUMBER$ + 1 ; i >= 1 ; i ++ ) {
rank: 466
score: 99.46270392922794
patch: * for ( int i = k ; i < n ; i ++ ) {
rank: 466
score: 99.4476318359375
patch: for ( int i = $NUMBER$ ; i >= k + k ; i ++ ) {
rank: 466
score: 99.42894222861842
patch: for ( int i = k - 1 ; i >= i ; i -- ) { {
rank: 466
score: 99.42808430989584
patch: for ( int i = 1 ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 466
score: 99.42329487047698
patch: for ( int i = k + 1 ; i <= n ; 0 ++ i ) {
rank: 467
score: 99.46486409505208
patch: for ( int i = k / 1 ; i <= k ; i ++ ) {
rank: 467
score: 99.46253051757813
patch: for ( int i = k + 1 ; i < n - 1 ; ++ i ) {
rank: 467
score: 99.42867024739583
patch: for ( int n = k + 1 ; n <= k ; n ++ ) {
rank: 467
score: 99.42731843171296
patch: for ( int i = 0 ; i <= n ; i ++ ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 467
score: 99.42323133680556
patch: for ( int i = k + n ; i <= 1 ; i ++ ) {
rank: 468
score: 99.48466661241319
patch: for ( int i = $NUMBER$ ; i >= k + 1 ; i ++ ) {
rank: 468
score: 99.4831875887784
patch: for ( int i = k + 1 ; i <= n - 1 ; i ++ ) { System .
rank: 468
score: 99.4625244140625
patch: * / for ( int i = k - 1 ; i < n ; i ++ ) {
rank: 468
score: 99.44722493489583
patch: for ( int i = $NUMBER$ ; i <= $NUMBER$ ; i ++ ) { { {
rank: 468
score: 99.44190979003906
patch: for ( int i = k ; i < size ; i ++ ) {
rank: 468
score: 99.42701822916666
patch: for ( int i = $NUMBER$ ; i <= k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 468
score: 99.42319742838542
patch: for ( Iterator i = k + 1 ; i >= n ; i ++ ) {
rank: 469
score: 99.48298783735795
patch: k ! for ( int i = k + 1 + 1 ; i <= n ; i ++ ) {
rank: 469
score: 99.46916118421052
patch: for ( int i = - 1 ; i <= n + k ; i ++ ) {
rank: 469
score: 99.46234741210938
patch: for ( int i = k + n - 1 ; i < n ; i ++ ) {
rank: 469
score: 99.44700792100694
patch: for ( int i = k + 0 ; i <= $NUMBER$ ; i ++ ) {
rank: 469
score: 99.44184027777777
patch: for ( int i = n + 1 ; i < k ; i -- ) {
rank: 469
score: 99.42849731445312
patch: for ( double i = k ; i < n ; i ++ ) {
rank: 469
score: 99.42317922491776
patch: for ( int i = k ; i <= n + 1 ; i ++ ) { )
rank: 470
score: 99.48457166883681
patch: for ( int i = k + $NUMBER$ ; i == n ; i ++ ) {
rank: 470
score: 99.46436903211806
patch: for ( int i = k * 1 ; i >= 1 ; i ++ ) {
rank: 470
score: 99.44669835707721
patch: for ( int i = $NUMBER$ + 0 ; i <= n ; i ++ )
rank: 471
score: 99.48271251860119
patch: for ( Iterator i = n + 1 ; i . <= n - k ; i ++ ) {
rank: 471
score: 99.46202256944444
patch: for ( int i = k - n ; i < n ; i ++ ) {
rank: 471
score: 99.44649011948529
patch: for ( int i = k ; i <= $NUMBER$ ; i ++ ) { {
rank: 471
score: 99.42838781020221
patch: * for ( int i = 0 ; i <= n ; i ++ ) {
rank: 472
score: 99.48257785373264
patch: for ( int i = $NUMBER$ - k ; i <= n ; i ++ ) {
rank: 472
score: 99.44647894965277
patch: for ( int i = $NUMBER$ ; i >= $NUMBER$ - 1 ; i ++ ) {
rank: 472
score: 99.4412841796875
patch: for ( int i = 0 ; i < n * 1 ; i ++ ) {
rank: 472
score: 99.42837042557566
patch: for ( int i = 0 ; i < ( n + 1 ) ; i ++ )
rank: 472
score: 99.42552869073276
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i - i ) ;
rank: 472
score: 99.4227294921875
patch: for ( int i = max ; i < n ; i ++ ) {
rank: 473
score: 99.48253131734914
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( n ) ;
rank: 473
score: 99.46190185546875
patch: for ( int i = k + 1 ; i < n + 1 ; i -- ) {
rank: 473
score: 99.44125027126736
patch: for ( int i = 0 ; i <= k - $NUMBER$ ; i ++ ) {
rank: 473
score: 99.42271592881944
patch: for ( int i = n + n ; i < n ; i ++ ) {
rank: 474
score: 99.48419510690789
patch: for ( int i = 0 ; i <= n - 1 ; i ++ ) { {
rank: 474
score: 99.48248291015625
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { this .
rank: 474
score: 99.46812679893092
patch: for ( int i = k - - 1 ; i < n ; i ++ ) {
rank: 474
score: 99.46173095703125
patch: for ( int i = k + 1 ; i + 1 >= n ; i ++ ) {
rank: 474
score: 99.44636086856617
patch: for ( int i = $NUMBER$ ; i < k ; i ++ ) { {
rank: 474
score: 99.42809295654297
patch: for ( int k = 0 ; k < n ; k ++ ) {
rank: 474
score: 99.42239718967014
patch: for ( int i = k . 0 ; i <= n ; i ++ ) {
rank: 475
score: 99.48394012451172
patch: for ( int i = 0 ; i > 1 ; i ++ ) {
rank: 475
score: 99.46811252170139
patch: for ( int i = min + 1 ; i <= n ; i ++ ) {
rank: 475
score: 99.46331787109375
patch: for ( int i = k % 1 ; i <= n ; i ++ ) {
rank: 475
score: 99.42471426504629
patch: for ( int i = $NUMBER$ ; i <= n ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 476
score: 99.48215203536184
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) { }
rank: 476
score: 99.46146432976974
patch: for ( int i = k + 1 ; i <= n + n ; i ++ )
rank: 476
score: 99.44114774816177
patch: } for ( int i = 0 ; i <= n ; i ++ ) {
rank: 476
score: 99.42222595214844
patch: for ( int i = k ; i > n ; i ++ ) {
rank: 477
score: 99.48206097146739
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { int log CaMeL Sum = 0 ;
rank: 477
score: 99.46146240234376
patch: for ( int i = 1 + n + 1 ; i < n ; i ++ ) {
rank: 477
score: 99.42752878289474
patch: * / * for ( int i = 0 ; i < n ; i ++ ) {
rank: 477
score: 99.42208701685855
patch: for ( int i = n + 1 ; i <= n ; i 1 ++ ) {
rank: 478
score: 99.46107241981908
patch: for ( int i = k ; i < n + 1 ; i ++ ) { )
rank: 478
score: 99.44535997178819
patch: if ( ( k == $NUMBER$ ) || ( k == n - 1 ) ) {
rank: 478
score: 99.44069417317708
patch: for ( int i = k + $NUMBER$ ; i <= 0 ; i -- ) {
rank: 478
score: 99.42167833116319
patch: for ( int i = n + 1 ; i != n ; i ++ ) {
rank: 479
score: 99.48163163034539
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { String
rank: 479
score: 99.46743435329861
patch: for ( int i = k + 0 ; i != n ; i ++ ) {
rank: 479
score: 99.46219889322917
patch: for ( int i = 0 ; i < k - $NUMBER$ ; i ++ ) {
rank: 479
score: 99.44526941636029
patch: if ( ( k == 1 ) || ( k == n - 1 ) )
rank: 479
score: 99.4399478310033
patch: for ( int i = k + - 1 ; i < n ; i -- ) {
rank: 479
score: 99.42371544471153
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum . log CaMeL Sum .
rank: 480
score: 99.48159950657895
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { i ++ ;
rank: 480
score: 99.46078330592105
patch: * for ( int i = 0 ; i < n + 1 ; i ++ ) {
rank: 480
score: 99.43987358940973
patch: for ( int i = k + $NUMBER$ ; i < i ; i ++ ) {
rank: 481
score: 99.48228695518092
patch: for ( int i = k + 1 ; i << <= n ; i ++ ) {
rank: 481
score: 99.48148970170455
patch: / / k ! for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 481
score: 99.4450927734375
patch: for ( int i = $NUMBER$ ; i != k ; i ++ )
rank: 481
score: 99.43979220920139
patch: for ( int i = k + 0 ; i < 1 ; i ++ ) {
rank: 481
score: 99.421142578125
patch: / * for ( int i = k ; i < k ; i ++ ) {
rank: 482
score: 99.48215738932292
patch: for ( int i = 1 ; i <= n - 0 ; i ++ ) {
rank: 482
score: 99.46718236019737
patch: for ( int i = k + 1 ; i == n 1 ; i ++ ) {
rank: 482
score: 99.46067504882812
patch: for ( int i = k + k - 1 ; i >= n ; i -- ) {
rank: 482
score: 99.4450454711914
patch: for ( int i = $NUMBER$ ; i <= n 1 ; i ++ )
rank: 482
score: 99.42662138097427
patch: for ( int i = k - 1 ; i >= i ; i -- )
rank: 483
score: 99.48138982599431
patch: k ! for ( int i = k + k + k ; i <= n ; i ++ ) {
rank: 483
score: 99.46716986762152
patch: for ( int i = $NUMBER$ ; i != n + k ; i ++ ) {
rank: 483
score: 99.4450324563419
patch: for ( int i = k ; i <= n ; i ++ ) { }
rank: 483
score: 99.43916829427083
patch: for ( int i = k + 1 ; i <= n ; i ++ ) ;
rank: 483
score: 99.42255995008681
patch: for ( int i = $NUMBER$ ; i <= n - 1 ; i -- ) {
rank: 484
score: 99.48138427734375
patch: for ( int i = k + 1 ; i <= $NUMBER$ - k ; i ++ ) {
rank: 484
score: 99.46145968967014
patch: for ( int i = start + 1 ; i <= 0 ; i ++ ) {
rank: 484
score: 99.43901231553819
patch: for ( int i = n + 1 ; i < n ; ++ i ) {
rank: 484
score: 99.42023064108456
patch: } for ( int i = k ; i <= n ; i ++ ) {
rank: 485
score: 99.48128836495536
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( new double ) ;
rank: 485
score: 99.46117485894098
patch: for ( int i = k - 0 ; i >= 0 ; i ++ ) {
rank: 485
score: 99.46053059895833
patch: for ( int i = k / $NUMBER$ ; i < n ; i ++ ) {
rank: 485
score: 99.43893093532986
patch: for ( int i = 0 ; i < k + 0 ; i ++ ) {
rank: 485
score: 99.41922157689145
patch: for ( int i = k ; i <= n - 1 ; i ++ ) { )
rank: 486
score: 99.46669514973958
patch: for ( int i = 0 ; i < n : n ; i ++ ) {
rank: 486
score: 99.46114951685855
patch: for ( int i = k + 1 ; i <= n 1 ; ++ i ) {
rank: 486
score: 99.46048312717014
patch: for ( int i = k ; i < n ; i ++ ) { { {
rank: 486
score: 99.44468180338542
patch: for ( int i = k + 1 ; i <= n 1 ; i ++ )
rank: 486
score: 99.41919623480902
patch: for ( String n = k + 1 ; i <= n ; i ++ ) {
rank: 487
score: 99.48087768554687
patch: / ! for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 487
score: 99.42582872178819
patch: for ( int n = k + 1 ; n >= n ; n -- ) {
rank: 488
score: 99.4804458618164
patch: for ( int i = 1 ; i > 0 ; i ++ ) {
rank: 488
score: 99.46627468532986
patch: for ( int i = 0 ; i != n - k ; i ++ ) {
rank: 488
score: 99.460400390625
patch: / * for ( int i = k + 1 ; i >= n ; i -- ) {
rank: 488
score: 99.43877814797794
patch: for ( int i = k + 1 ; i >= 1 ; i -- )
rank: 488
score: 99.42555638363487
patch: for ( int i = k + 1 ; i >= k ; i -= $NUMBER$ ) {
rank: 489
score: 99.48077101934524
patch: for ( int i = k + 1 ; i <= n - 1 ; i ++ ) { }
rank: 489
score: 99.48041130514706
patch: for ( int i = - 1 ; i != n ; i ++ ) {
rank: 489
score: 99.46038208007812
patch: for ( int i = k + 1 ; i >= n * $NUMBER$ ; i ++ ) {
rank: 489
score: 99.42542940027573
patch: for ( int i = 0 ) ; i < n ; i ++ ) {
rank: 489
score: 99.4185726768092
patch: for ( int i = k + 1 ; i >= k 1 ; i ++ ) {
rank: 490
score: 99.47990616508152
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { if ( i == $NUMBER$ ) {
rank: 490
score: 99.46039496527777
patch: for ( int i = n - 1 ; i <= 0 ; i ++ ) {
rank: 490
score: 99.4600765830592
patch: for ( int i = k - 1 ; i < n ; i ++ ) { )
rank: 490
score: 99.44424777560764
patch: for ( int i = $NUMBER$ ; i + k <= n ; i ++ ) {
rank: 490
score: 99.42528483072917
patch: for ( int i = k ; i < k ; i ++ )
rank: 490
score: 99.41999053955078
patch: if ( ( n == k ) || ( k == 0 ) ) {
rank: 490
score: 99.41823323567708
patch: for ( int i = n + 1 ; i >= i ; i ++ ) {
rank: 491
score: 99.48031277126736
patch: for ( int i = $NUMBER$ ; i == k - 1 ; i ++ ) {
rank: 491
score: 99.46038497121711
patch: for ( int i = k + 1 ; i <= max 1 ; i ++ ) {
rank: 491
score: 99.46004028320313
patch: * / for ( int i = k - 1 ; i <= n ; i ++ ) {
rank: 491
score: 99.43838019120066
patch: for ( int i = k + $NUMBER$ ; i >= - 1 ; i ++ ) {
rank: 491
score: 99.42476654052734
patch: for ( int k = 0 ; i < n ; i ++ ) {
rank: 491
score: 99.419931640625
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += ( double ) i ;
rank: 491
score: 99.41787380642361
patch: for ( Iterator i = n + 1 ; i < n ; i ++ ) {
rank: 492
score: 99.42461799172794
patch: for ( int i = k - 1 ; i >= n ; ++ i )
rank: 493
score: 99.45964965820312
patch: for ( int i = 1 ; i < n + n + 1 ; i ++ ) {
rank: 493
score: 99.44399685329861
patch: for ( int i = $NUMBER$ ; i >= 0 + 1 ; i ++ ) {
rank: 493
score: 99.43814890008224
patch: for ( int i = k + 1 ; i < n ; i += 0 ) {
rank: 493
score: 99.42451477050781
patch: for ( int k = 0 ; i < n ; k ++ ) {
rank: 493
score: 99.41974609375
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum -= i ) ;
rank: 494
score: 99.46016438802083
patch: for ( int i = 0 + 1 ; i < max ; i ++ ) {
rank: 494
score: 99.45945980674342
patch: boolean for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 494
score: 99.4381167763158
patch: for ( int i = k + 1 ; i >= 0 ; i ++ ) { {
rank: 494
score: 99.42432318793402
patch: for ( int k = k - 1 ; i <= n ; k ++ ) {
rank: 494
score: 99.41724350873162
patch: for ( int i = 0 ; i <= k ; i ++ ) { )
rank: 495
score: 99.47938755580357
patch: for ( int i = k + 1 + 1 ; i <= n ; i ++ ) { {
rank: 495
score: 99.46497866981908
patch: for ( int i = $NUMBER$ + 1 ; i <= n 1 ; i ++ ) {
rank: 495
score: 99.459228515625
patch: for ( long i = k + 1 ; i < n + 1 ; i ++ ) {
rank: 495
score: 99.44375271267361
patch: for ( int i = $NUMBER$ ; i <= 0 - k ; i ++ ) {
rank: 495
score: 99.42429606119792
patch: for ( char i = k + 1 ; i <= n ; i ++ ) {
rank: 495
score: 99.418876953125
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum += i ) ;
rank: 495
score: 99.41649712456598
patch: for ( int i = start + 1 ; i >= n ; i ++ ) {
rank: 496
score: 99.47936401367187
patch: for ( int i = $NUMBER$ + i ; i <= n - k ; i ++ ) {
rank: 496
score: 99.45981174045139
patch: for ( int i = k - $NUMBER$ ; i >= n ; i ++ ) {
rank: 496
score: 99.45913696289062
patch: * { for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 496
score: 99.43757898667279
patch: for ( int i = - 1 ; i < k ; i ++ ) {
rank: 496
score: 99.42404014185855
patch: for ( int i = k ; i <= k + 1 ; i ++ ) { {
rank: 497
score: 99.46460723876953
patch: for ( int i = true ; i <= n ; i ++ ) {
rank: 497
score: 99.45965576171875
patch: for ( int i = k * k ; i <= n ; i ++ ) {
rank: 497
score: 99.44366861979167
patch: for ( int i = 0 ; i >= k ; i ++ )
rank: 497
score: 99.42401123046875
patch: for ( int k = 0 ; k < n ; i ++ ) {
rank: 498
score: 99.4589907997533
patch: { for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 498
score: 99.43729654947917
patch: for ( int i = k ; i < this . n ; i ++ ) {
rank: 498
score: 99.41593424479167
patch: for ( int i = k ; i <= 1 + n ; i ++ ) {
rank: 499
score: 99.47889404296875
patch: for ( int i = 1 + k - 1 ; i <= n ; i ++ ) {
rank: 499
score: 99.45876593338816
patch: for ( int i = 0 ; i < k [ 1 ] ; i ++ ) {
rank: 499
score: 99.4432732077206
patch: for ( int i = $NUMBER$ + 1 ; i >= n ; i ++ )
rank: 499
score: 99.4237922219669
patch: for ( i = k + 1 ; i >= n ; i -- ) {
rank: 499
score: 99.4176025390625
patch: for ( int i = k ++ 1 ; i <= n ; i ++ ) {
rank: 500
score: 99.47878196022727
patch: for ( int i = k + k - 1 + 1 ; i <= n ; i ++ ) {
rank: 500
score: 99.44313557942708
patch: for ( int i = $NUMBER$ - 1 ; i >= $NUMBER$ ; i ++ ) {
rank: 500
score: 99.42348904079861
patch: for ( int k = k + 1 ; i <= k ; k ++ ) {
rank: 500
score: 99.41744656032986
patch: for ( int i = $NUMBER$ + n ; i < n ; i ++ ) {
rank: 500
score: 99.41550699869792
patch: for ( int i = k + 0 ; i <= n ; ++ i ) {
rank: 501
score: 99.45863743832237
patch: for ( int i = 0 + 1 ; i < - 1 ; i ++ ) {
rank: 501
score: 99.45841899671052
patch: * for ( int i = k + 1 ; i >= n ; i ++ ) {
rank: 501
score: 99.4422607421875
patch: for ( int i = $NUMBER$ ; i == 1 ; i ++ ) {
rank: 501
score: 99.43699017693015
patch: for ( int i = 0 ; i <= - 1 ; i -- ) {
rank: 501
score: 99.42338731553819
patch: * / for ( int i = 0 ; i <= n ; i ++ ) {
rank: 502
score: 99.45841064453126
patch: for ( int i = k + 1 . 0 ; i < n ; i ++ ) {
rank: 502
score: 99.45840793185764
patch: for ( int i = 0 + $NUMBER$ ; i >= 0 ; i ++ ) {
rank: 502
score: 99.42333221435547
patch: for ( int i = 1 ; i < n ; ++ i ) {
rank: 502
score: 99.41609981142241
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( n - i ) ;
rank: 502
score: 99.41535186767578
patch: for ( int i = k ; i <= start ; i ++ ) {
rank: 503
score: 99.4582763671875
patch: for ( int i = k - 1 ; i > i - 1 ; i -- ) {
rank: 503
score: 99.44189453125
patch: for ( int i = 0 ; i <= 1 ; i ++ ) { {
rank: 503
score: 99.43640814887152
patch: for ( int i = $STRING$ ; i <= n + 1 ; i ++ ) {
rank: 503
score: 99.4152767783717
patch: for ( int i = k + 0 ; i <= n ; i ++ ) { )
rank: 504
score: 99.42236328125
patch: for ( int i = k ; i <= n ; ++ ++ i ) {
rank: 504
score: 99.41571916852679
patch: for ( int i = k + 1 ; ++ i ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 504
score: 99.41522894965277
patch: for ( int i = 1 ; i < k ; i ++ ) { ) {
rank: 505
score: 99.47640652126736
patch: for ( int i = $NUMBER$ + 1 ; i > k ; i ++ ) {
rank: 505
score: 99.43618935032895
patch: for ( int i = k + 1 ; i < n ; i - 1 ) {
rank: 505
score: 99.42235043174342
patch: default * / for ( int i = 0 ; i < n ; i ++ ) {
rank: 505
score: 99.41552734375
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ; }
rank: 506
score: 99.45753238075658
patch: for ( int i = 0 + 1 ; i <= n 1 ; i ++ ) {
rank: 506
score: 99.43617007606908
patch: for ( int i = k + 1 ; i >= 1 ; i ++ ) { {
rank: 506
score: 99.42204846833882
patch: for ( int i = k + 1 ; i <= k ] ; i ++ ) {
rank: 506
score: 99.41550118582589
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( double ) i ;
rank: 507
score: 99.45745171440973
patch: for ( int i = 0 + n ; i >= 0 ; i ++ ) {
rank: 508
score: 99.47708740234376
patch: for ( int i = k + 1 ; i <= n - max ; i ++ ) {
rank: 508
score: 99.45751953125
patch: for ( int i = k / 1 ; i < n + 1 ; i ++ ) {
rank: 508
score: 99.43602159288194
patch: for ( Double i = k + 1 ; i <= n ; i ++ ) {
rank: 508
score: 99.42193962545956
patch: for ( int i = + 1 ; i < n ; i ++ ) {
rank: 508
score: 99.4153464988426
patch: for ( int i = 1 ; i <= n ; i ++ ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 508
score: 99.41358857996323
patch: for ( int i = k ; i <= k ; i i ++ ) {
rank: 509
score: 99.47705950055804
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( new double ) ;
rank: 509
score: 99.47520616319444
patch: for ( int i = 0 ; i != n - 1 ; i ++ ) {
rank: 509
score: 99.45732421875
patch: for ( int i = k - 1 ; i >= n ; i ++ ) { ) {
rank: 509
score: 99.45705159505208
patch: for ( int i = k / 1 ; i <= 1 ; i ++ ) {
rank: 509
score: 99.43598090277777
patch: for ( int i = k + k ; i < 0 ; i ++ ) {
rank: 509
score: 99.42188784950658
patch: for ( int i = k ] + 1 ; i <= k ; i ++ ) {
rank: 510
score: 99.45730590820312
patch: for ( int i = n + 1 ; i <= n ; i ++ ) { ) {
rank: 510
score: 99.43597733347039
patch: for ( int i = k + 1 ; i >= 1 ; i -- ) { {
rank: 510
score: 99.42161158511513
patch: for ( int i = k + 1 ; i < <= n ; i ++ ) {
rank: 511
score: 99.44046223958334
patch: for ( int i = k ; i >= 0 ; i ++ )
rank: 511
score: 99.43590590533088
patch: for ( int i = 0 ; i < n ; i += 1 ) {
rank: 511
score: 99.42139956825658
patch: for ( int i = k + 1 ; i <= n ] ; i ++ ) {
rank: 511
score: 99.41393280029297
patch: for ( int i = $NUMBER$ ; i <= n ; ++ i ) {
rank: 512
score: 99.47686767578125
patch: for ( for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 512
score: 99.47508329503677
patch: for ( int i = - 1 ; i >= k ; i ++ ) {
rank: 512
score: 99.43587453741776
patch: for ( int i = 0 ; i <= n + 1 ; i i ++ ) {
rank: 512
score: 99.42133246527777
patch: for ( int k = k - 1 ; n <= n ; k ++ ) {
rank: 512
score: 99.41385904947917
patch: for ( int i = k ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 513
score: 99.47507731119792
patch: for ( int i = $NUMBER$ ; i - 1 <= n ; i ++ ) {
rank: 513
score: 99.4568359375
patch: for ( int i = 0 + k + 1 ; i < n ; i ++ ) {
rank: 513
score: 99.45620388454861
patch: for ( int i = k - $NUMBER$ ; i >= 1 ; i ++ ) {
rank: 513
score: 99.43572235107422
patch: for ( int i = k ; i <= 1 ; i -- ) {
rank: 513
score: 99.41333770751953
patch: for ( int i = k + 1 ; i [ i ++ ) {
rank: 513
score: 99.413232421875
patch: for ( i = 1 ; i <= n ; i ++ ) {
rank: 514
score: 99.44024299172794
patch: for ( int i = k - 1 ; i != n ; i ++ )
rank: 514
score: 99.43562825520833
patch: for ( String i = k + 1 ; i <= k ; i ++ ) {
rank: 514
score: 99.4130615234375
patch: for ( int i = $NUMBER$ ; i <= i ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 514
score: 99.41304738898026
patch: for ( int i = k + 0 ; i <= n ; i ++ ) { {
rank: 515
score: 99.47560277478448
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( n ) ;
rank: 515
score: 99.45577663845486
patch: for ( int i = k + 0 ; i <= i ; i ++ ) {
rank: 516
score: 99.47465515136719
patch: for ( int i = 1 ; i >= n ; i ++ ) {
rank: 516
score: 99.46043565538194
patch: for ( int i = $NUMBER$ : 0 ; i <= n ; i ++ ) {
rank: 516
score: 99.43537733289931
patch: for ( int i = k + 1 ; i < n ; i ++ ) throws
rank: 516
score: 99.42121717664931
patch: for ( int i = k - k ; i >= n ; i -- ) {
rank: 516
score: 99.41269938151042
patch: for ( int i = k ; i < 0 - 1 ; i ++ ) {
rank: 516
score: 99.412646484375
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) n ) ;
rank: 517
score: 99.45635986328125
patch: for ( int i = k + 1 ; i <= n > i ; i ++ ) {
rank: 517
score: 99.42118326822917
patch: for ( int n = k + 1 ; i >= n ; i -- ) {
rank: 517
score: 99.41252585018383
patch: for ( int i = k + ; i < n ; i ++ ) {
rank: 518
score: 99.47492065429688
patch: k ! for ( int i = 1 ; i <= n - k ; i ++ ) {
rank: 518
score: 99.46002875434027
patch: for ( int i = $NUMBER$ ; i <= n == n ; i ++ ) {
rank: 518
score: 99.45607299804688
patch: for ( int i = k + 1 ; i >= n * n ; i ++ ) {
rank: 518
score: 99.439697265625
patch: for ( int i = - 1 ; i <= n - 1 ; i ++ )
rank: 518
score: 99.42107190583882
patch: for ( int i = k - 1 ; i >= n - 1 ; i -- )
rank: 519
score: 99.47476196289062
patch: for ( int i = k + k - $NUMBER$ ; i <= n ; i ++ ) {
rank: 519
score: 99.45533511513158
patch: for ( int i = 0 ; i <= n [ 1 ] ; i ++ ) {
rank: 519
score: 99.4394890280331
patch: for ( int i = $NUMBER$ ; i == n + k ; i ++ )
rank: 519
score: 99.43482730263158
patch: for ( int i = k + $NUMBER$ ; i < n ; i ++ ) { {
rank: 519
score: 99.42087809244792
patch: for ( int k = k + 1 ; i >= n ; k -- ) {
rank: 519
score: 99.41174994574652
patch: for ( int i = k ; i < 1 + 1 ; i ++ ) {
rank: 520
score: 99.4747250205592
patch: / n ! for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 520
score: 99.45567626953125
patch: for ( int i = k + n ; i <= n + 1 ; i ++ ) {
rank: 520
score: 99.4549560546875
patch: for ( int i = k + n ; i <= 0 ; i ++ ) {
rank: 520
score: 99.434326171875
patch: for ( int i = k + 0 ; i >= k ; i -- ) {
rank: 520
score: 99.42084418402777
patch: for ( int i = n + 1 ; i >= i ; i -- ) {
rank: 520
score: 99.41158040364583
patch: for ( int i = k ; i < 0 + 1 ; i ++ ) {
rank: 521
score: 99.45929633246527
patch: for ( int i = k + 1 ; i != 1 ; i ++ ) {
rank: 521
score: 99.45563422309027
patch: for ( int i = k * 1 ; i >= n ; i -- ) {
rank: 521
score: 99.45474582248264
patch: for ( int i = k - 1 ; i < length ; i ++ ) {
rank: 521
score: 99.43924713134766
patch: for ( int i = $NUMBER$ ; i <= - k ; i ++ )
rank: 521
score: 99.43431181066177
patch: for ( int i = k ; i < - 1 ; i -- ) {
rank: 521
score: 99.41146737557871
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . abs ( i ) ;
rank: 521
score: 99.41119384765625
patch: for ( int i = k ; i < k ; ++ i ) {
rank: 522
score: 99.47464599609376
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { * /
rank: 522
score: 99.47325375205592
patch: for ( ! for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 522
score: 99.45926706414474
patch: for ( int i = $NUMBER$ + - 1 ; i <= n ; i ++ ) {
rank: 522
score: 99.43913269042969
patch: for ( int i = - ; i <= n ; i ++ ) {
rank: 522
score: 99.43429226345486
patch: for ( int i = 0 ; i < n + 1 ; ++ i ) {
rank: 522
score: 99.42064751519098
patch: for ( double i = 0 + 1 ; i <= n ; i ++ ) {
rank: 522
score: 99.41085476345486
patch: for ( int i = k + n ; i >= 1 ; i ++ ) {
rank: 523
score: 99.47321520353618
patch: for ( int i = k - 1 ; i >= - 1 ; i ++ ) {
rank: 523
score: 99.45499877929687
patch: for ( int i = k - 1 ; i <= n - n ; i ++ ) {
rank: 523
score: 99.45421685112848
patch: for ( int i = k - $NUMBER$ ; i < k ; i ++ ) {
rank: 523
score: 99.43902994791667
patch: for ( int i = k ; i == n ; i ++ )
rank: 523
score: 99.43423122829861
patch: for ( int i += k + 1 ; i < n ; i ++ ) {
rank: 523
score: 99.42051866319444
patch: for ( int i = n + 1 ; i >= n ; ++ i ) {
rank: 523
score: 99.41078694661458
patch: for ( int i = k ; i <= k ; i ; i ++ ) {
rank: 523
score: 99.41021728515625
patch: for ( int i = 0 ; i <= n - k ; i -- ) {
rank: 524
score: 99.4744140625
patch: for ( int i = k - 1 + k ; i <= n ; i ++ ) {
rank: 524
score: 99.47309875488281
patch: for ( int i = 1 ; i >= 1 ; i ++ ) {
rank: 524
score: 99.45497041590073
patch: for ( int i = k ; i < n + n ; i ++ )
rank: 524
score: 99.43421088324652
patch: for ( int i = k + 1 ; 0 < n ; i ++ ) {
rank: 524
score: 99.40961565290179
patch: for ( int i = k + 1 ; i -- ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 525
score: 99.47422388980263
patch: for ( int i = int i + 1 ; i <= n ; i ++ ) {
rank: 525
score: 99.45841257195724
patch: for ( int i = - 1 + 1 ; i <= n ; i ++ ) {
rank: 525
score: 99.43868001302083
patch: for ( int i = - + 1 ; i <= n ; i ++ ) {
rank: 526
score: 99.47420528017241
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( log CaMeL Sum ) ;
rank: 526
score: 99.45833547491776
patch: for ( int i = - 1 ; i < n + k ; i ++ ) {
rank: 526
score: 99.45469970703125
patch: for ( int i = k ; i < n && i < n ; i ++ ) {
rank: 526
score: 99.43860581341912
patch: for ( int i = - 1 ; i >= n ; i ++ ) {
rank: 526
score: 99.43407485064338
patch: } for ( int i = 0 ; i < n ; i ++ ) {
rank: 526
score: 99.41943359375
patch: for ( int i = k - 1 ; i <= k ; i -- ) {
rank: 527
score: 99.45820697985198
patch: for ( int i = k + - k ; i < n ; i ++ ) {
rank: 527
score: 99.45464728860294
patch: for ( int i = k ; i < n - 1 ; i ++ )
rank: 527
score: 99.45304147820724
patch: for ( int i = k + 1 ; int i <= 0 ; i ++ ) {
rank: 527
score: 99.43401778371711
patch: } for ( int i = k + 1 ; i <= k ; i ++ ) {
rank: 527
score: 99.41876898871527
patch: for ( int i = k + 1 ; i == n ; ++ i ) {
rank: 527
score: 99.41038004557292
patch: for ( int i = k + 1 ; i <= n ; start ++ ) {
rank: 528
score: 99.47406296502976
patch: for ( int i = k + k + 1 ; i <= n ; i ++ ) { {
rank: 528
score: 99.45464477539062
patch: for ( int i = i + 1 ; i < n + n ; i ++ ) {
rank: 528
score: 99.41864013671875
patch: for ( int i = k ; i > n ; i -- ) {
rank: 528
score: 99.4100406044408
patch: for ( int i = n + 1 ; i < n ; i ++ ) { )
rank: 529
score: 99.47405395507812
patch: for ( int k = k + 1 ; i <= n - k ; i ++ ) {
rank: 529
score: 99.43368530273438
patch: for ( int i = 0 ; i <= false ; i ++ ) {
rank: 529
score: 99.41863692434211
patch: for ( int i = k ; i <= n ; i ++ , i ++ ) {
rank: 529
score: 99.4100341796875
patch: for ( int i = k ; i <= n ; i ++ ) { n ++ ;
rank: 530
score: 99.47245788574219
patch: for ( int i = 1 ; i > k ; i ++ ) {
rank: 530
score: 99.45785183376736
patch: for ( int i = $NUMBER$ + 1 ; i < i ; i ++ ) {
rank: 530
score: 99.4544921875
patch: for ( int i = k + 1 + n ; i < n ; i ++ ) {
rank: 530
score: 99.43785942925348
patch: for ( int i = $NUMBER$ ; i <= 0 - 1 ; i ++ ) {
rank: 530
score: 99.43362765842014
patch: for ( int i = 0 ; i < k + k ; i ++ ) {
rank: 530
score: 99.4185855263158
patch: for ( int i = k + 1 1 ; i <= k ; i ++ ) {
rank: 530
score: 99.40978325737848
patch: for ( int i = k ; i < n - 0 ; i ++ ) {
rank: 530
score: 99.40720040457589
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( double ) i ;
rank: 531
score: 99.45784076891448
patch: for ( int i = $NUMBER$ ; i <= n + 1 ; i ++ ) { {
rank: 531
score: 99.45435791015625
patch: for ( int i = k - 1 ; i > n + 1 ; i -- ) {
rank: 531
score: 99.43362587376645
patch: for ( int i = k + $NUMBER$ ; i < n + 1 ; i ++ )
rank: 531
score: 99.4096450805664
patch: for ( int k = k ; i < n ; i ++ ) {
rank: 531
score: 99.40673110064338
patch: for ( int i -- ; i <= n - k ; i ++ ) {
rank: 532
score: 99.47372436523438
patch: for ( int i = k ; i <= n - 1 - k ; i ++ ) {
rank: 532
score: 99.45783827039931
patch: for ( int i = $NUMBER$ ; i < i + k ; i ++ ) {
rank: 532
score: 99.452392578125
patch: for ( int i = 1 + 1 ; i <= 1 ; i ++ ) {
rank: 532
score: 99.43772786458334
patch: for ( int i = 1 ; i >= $NUMBER$ ; i ++ )
rank: 532
score: 99.40952435661765
patch: for ( int i = 1 ; i <= k ; i ++ ) { {
rank: 532
score: 99.40669759114583
patch: for ( int i = 0 ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 533
score: 99.43749186197917
patch: for ( int i = $NUMBER$ ; i != $NUMBER$ ; i ++ )
rank: 533
score: 99.4093017578125
patch: for ( int i = k { i ; i <= n ; i ++ ) {
rank: 534
score: 99.47078022203948
patch: for ( int i = k + 1 ; i < - k ; i ++ ) {
rank: 534
score: 99.45751953125
patch: for ( int i = $NUMBER$ ; i < 1 + 1 ; i ++ ) {
rank: 534
score: 99.43720559512867
patch: for ( int i = $NUMBER$ ; i < $NUMBER$ ; i ++ ) { {
rank: 534
score: 99.43321317784927
patch: for ( int i = 0 ; i <= n ; 1 ++ i ) {
rank: 534
score: 99.40615609975961
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += ( double ) i ) ;
rank: 535
score: 99.47323753720238
patch: for ( int i = k + 1 ; i <= n - k ; ; i ++ ) {
rank: 535
score: 99.45397338867187
patch: for ( int i = k + $NUMBER$ ; i < n + $NUMBER$ ; i ++ ) {
rank: 535
score: 99.43308512369792
patch: for ( int i = 0 ; i <= n / k ; i ++ ) {
rank: 535
score: 99.4060479525862
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( n - k ) ;
rank: 536
score: 99.4730808423913
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { if ( n == 1 ) {
rank: 536
score: 99.45154486762152
patch: for ( int i = k << 1 ; i < n ; i ++ ) {
rank: 537
score: 99.47287469161184
patch: ! for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 537
score: 99.43301052517361
patch: for ( int i = k + 1 ; i <= size ; i -- ) {
rank: 537
score: 99.41809760199652
patch: z * for ( int i = 0 ; i < n ; i ++ ) {
rank: 537
score: 99.40887451171875
patch: for ( int i = Math ; i < n ; i ++ ) {
rank: 537
score: 99.40404401506696
patch: for ( int i = k == 1 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 538
score: 99.47283063616071
patch: for ( int i = k + - 1 ; i <= n - 1 ; i ++ ) {
rank: 538
score: 99.47052680121527
patch: for ( int i = n + 1 ; i > 0 ; i ++ ) {
rank: 538
score: 99.45622173108552
patch: for ( int i = k + - 1 ; i == n ; i ++ ) {
rank: 538
score: 99.45392523871527
patch: for ( int i = k + 1 ; i < min ; i ++ ) {
rank: 538
score: 99.43625775505515
patch: for ( int i = - 1 ; i >= 0 ; i ++ ) {
rank: 538
score: 99.4180843955592
patch: for ( double i = k + 1 ; i <= n ; i ++ ) { {
rank: 538
score: 99.40879313151042
patch: for ( int i = n ; i < n - 1 ; i ++ ) {
rank: 539
score: 99.47272692228618
patch: for ( i = k + 1 ; i <= n - 1 ; i ++ ) {
rank: 539
score: 99.4537841796875
patch: for ( int i = k - 1 ; i < n - n ; i ++ ) {
rank: 539
score: 99.43608542049633
patch: for ( int i = k + k ; i <= 1 ; i ++ )
rank: 539
score: 99.417724609375
patch: for ( int i = k ; i <= k + $NUMBER$ ; i ++ ) {
rank: 539
score: 99.403662109375
patch: for ( int i = 1 ; i < n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 540
score: 99.43599207261029
patch: for ( int i = $NUMBER$ ; i <= i ; i ++ ) { {
rank: 540
score: 99.43250868055556
patch: for ( int i = 0 ; i < this . k ; i ++ ) {
rank: 540
score: 99.41770426432292
patch: for ( int i = 0 + i ; i <= n ; i ++ ) {
rank: 540
score: 99.40306803385417
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum . log CaMeL Sum . log CaMeL Sum ;
rank: 541
score: 99.47227741109914
patch: for ( i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 541
score: 99.46974583675987
patch: for ( int i = k - 1 ; i >> <= n ; i ++ ) {
rank: 541
score: 99.45572662353516
patch: for ( int k = $NUMBER$ ; i <= n ; i ++ ) {
rank: 541
score: 99.45347900390625
patch: for ( int i = i - 1 ; i < n + 1 ; i ++ ) {
rank: 541
score: 99.43572319878473
patch: for ( int i = - k ; i <= n ; i ++ ) { {
rank: 541
score: 99.43246799045139
patch: for ( int i = k + k ; i >= k ; i -- ) {
rank: 541
score: 99.41760932074652
patch: for ( int i = k - 1 ; i >= 1 ; ++ i ) {
rank: 541
score: 99.40283203125
patch: for ( int i = $NUMBER$ ; i <= k ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 542
score: 99.47215634300595
patch: for ( int i = k + 1 ; i <= n + k ; i ++ ) { {
rank: 542
score: 99.45336303710937
patch: for ( int i = k + n - 1 ; i >= n ; i -- ) {
rank: 542
score: 99.43562825520833
patch: for ( int i = 1 ; i <= k - k ; i ++ ) {
rank: 542
score: 99.4175666360294
patch: for ( i = k - 1 ; i <= n ; i ++ ) {
rank: 543
score: 99.46890597873264
patch: for ( int i = n + 1 ; i >= $NUMBER$ ; i ++ ) {
rank: 543
score: 99.45529513888889
patch: for ( int i = k - k ; i <= 1 ; i ++ ) {
rank: 543
score: 99.4533203125
patch: for ( int i = k + n + n ; i < n ; i ++ ) {
rank: 543
score: 99.45039876302083
patch: for ( int i = 1 + 1 ; i < k ; i ++ ) {
rank: 543
score: 99.40799967447917
patch: for ( int i = 0 ; i <= n - n ; i ++ ) {
rank: 544
score: 99.43547227647569
patch: for ( int i = $NUMBER$ ; i >= $NUMBER$ - k ; i ++ ) {
rank: 544
score: 99.4319076538086
patch: for ( int i = 0 ; i < k ; ++ i ) {
rank: 544
score: 99.41718885633681
patch: for ( int i = k + 1 ; i >= n ; i -= n )
rank: 544
score: 99.40209147135417
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum = Math . log ( ( double ) i ) ;
rank: 545
score: 99.455078125
patch: if ( ( k == 1 ) || ( k == 1 ) ) {
rank: 545
score: 99.45307006835938
patch: for ( int i = n + 1 ; i <= n + $NUMBER$ ; i ++ ) {
rank: 545
score: 99.41715280633224
patch: n * / for ( int i = k ; i <= n ; i ++ ) {
rank: 545
score: 99.40776824951172
patch: for ( Object i = k ; i <= k ; i ++ ) {
rank: 545
score: 99.40177408854167
patch: for ( int i = $NUMBER$ ; i >= $NUMBER$ ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 546
score: 99.47173781622024
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) { i ++ ;
rank: 546
score: 99.45008680555556
patch: for ( int i = 0 + 0 ; i >= 0 ; i ++ ) {
rank: 546
score: 99.40174153645833
patch: for ( int i = $NUMBER$ ; i >= 1 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 547
score: 99.47173781622024
patch: for ( int i = k + - k ; i <= n - k ; i ++ ) {
rank: 547
score: 99.46843126085069
patch: if ( ( k == k ) || ( k == n - 1 ) ) {
rank: 547
score: 99.45475938585069
patch: for ( int i = $NUMBER$ : $NUMBER$ ; i <= n ; i ++ ) {
rank: 547
score: 99.43144226074219
patch: for ( int i = k ; i <= 0 ; i -- ) {
rank: 547
score: 99.41689453125
patch: for ( int i = 0 ; i < n ; ++ i )
rank: 547
score: 99.40755886501736
patch: for ( int i = k + 1 ; i - 1 ; i ++ ) {
rank: 548
score: 99.45458984375
patch: for ( int i = $NUMBER$ ; i < - 1 ; i ++ ) {
rank: 548
score: 99.45260959201389
patch: for ( int i = k + n ; i >= n ; i -- ) {
rank: 548
score: 99.43486192491319
patch: for ( int i = this . n ; i <= n ; i ++ ) {
rank: 548
score: 99.41683959960938
patch: for ( int i = k ; i == k ; i ++ ) {
rank: 548
score: 99.40712376644737
patch: for ( int i = k + 1 ; i <= 1 ; i ++ ) { )
rank: 549
score: 99.47162475585938
patch: for ( int i = k + k + $NUMBER$ ; i <= n ; i ++ ) {
rank: 549
score: 99.4346923828125
patch: for ( int i = $NUMBER$ ; i ! n ; i ++ ) {
rank: 549
score: 99.40115176930146
patch: for ( int i = $NUMBER$ ; i <= n - $NUMBER$ ; i ++ )
rank: 550
score: 99.46787516276042
patch: for ( int i = 1 ; i <= i - 1 ; i ++ ) {
rank: 550
score: 99.45209099264706
patch: for ( int i = 0 ; i < n + n ; i ++ )
rank: 550
score: 99.40113740808823
patch: for ( int i = $NUMBER$ + n ; i <= n ; i ++ )
rank: 551
score: 99.45379997702206
patch: for ( int i = $NUMBER$ ; i >> < n ; i ++ ) {
rank: 551
score: 99.44947574013158
patch: for ( int i = k - 1 ; i <= n ; i ++ ) { }
rank: 551
score: 99.43077256944444
patch: for ( int i = k + 1 ; i <= n ; = i ) {
rank: 551
score: 99.41635613692434
patch: * for ( int i = k - 1 ; i >= n ; i -- ) {
rank: 552
score: 99.45362006293402
patch: for ( int i = $NUMBER$ + 1 ; i < $NUMBER$ ; i ++ ) {
rank: 552
score: 99.44929334852431
patch: for ( int i = 1 + $NUMBER$ ; i <= n ; i ++ ) {
rank: 552
score: 99.41614447699652
patch: for ( float i = k - 1 ; i < n ; i ++ ) {
rank: 553
score: 99.47104027157738
patch: for ( int i = k + k - k ; i <= n ; i ++ ) { {
rank: 553
score: 99.4676513671875
patch: for ( int i = k + 1 ; i == n ; i ++ ) { {
rank: 553
score: 99.45360043174342
patch: for ( int i = $NUMBER$ ; i < n - k ; i ++ ) { {
rank: 553
score: 99.44928299753289
patch: { for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 553
score: 99.43434244791666
patch: for ( k = $NUMBER$ ; i <= n ; i ++ ) {
rank: 553
score: 99.41604774876645
patch: for ( int i = k + 1 ; i >= n ; -- ++ i ) {
rank: 553
score: 99.40645599365234
patch: for ( int i = n ; i <= 1 ; i ++ ) {
rank: 553
score: 99.39956559806035
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( n - i ) ;
rank: 554
score: 99.44923231336806
patch: for ( int i = i + 1 ; i <= 0 ; i ++ ) {
rank: 554
score: 99.43056769120066
patch: for ( int i = k + 1 ; i < n ; int i ++ ) {
rank: 554
score: 99.41594495271382
patch: / for ( int i = k + 1 ; i <= k ; i ++ ) {
rank: 554
score: 99.40633392333984
patch: for ( Iterator i = k ; i < n ; i ++ ) {
rank: 554
score: 99.39950997488839
patch: for ( int i = k + 1 ; ++ i ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 555
score: 99.47078450520833
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) { k ++ ;
rank: 555
score: 99.45347086588542
patch: for ( int i = 0 ; i < n - 0 ; i ++ ) {
rank: 555
score: 99.44907633463542
patch: for ( int i = 0 + $NUMBER$ ; i < 0 ; i ++ ) {
rank: 555
score: 99.43418974034927
patch: for ( int i = $NUMBER$ ; i == n - 1 ; i ++ )
rank: 555
score: 99.4303042763158
patch: for ( int i = k ; i < n + - 1 ; i ++ ) {
rank: 555
score: 99.41588677300348
patch: for ( int i + 1 = k ; i < n ; i ++ ) {
rank: 555
score: 99.40630139802632
patch: for ( int i = k ; i <= n ; i ++ ) { n ++ {
rank: 555
score: 99.39923095703125
patch: if ( ( k == k ) || ( k == 0 ) ) {
rank: 556
score: 99.470703125
patch: for ( Iterator i = k + 1 ; i . <= n - k ; i ++ ) {
rank: 556
score: 99.46721055772569
patch: for ( int i = size - 1 ; i <= n ; i ++ ) {
rank: 556
score: 99.43395317925348
patch: for ( int i = $NUMBER$ ; i <= $NUMBER$ - k ; i ++ ) {
rank: 556
score: 99.43027215254934
patch: for ( int i = k + 1 ; i < * 1 ; i ++ ) {
rank: 556
score: 99.406005859375
patch: for ( int i = k + 1 ; i < n ; n ++ ) {
rank: 557
score: 99.47068189538044
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ && i <= n ; i ++ ) {
rank: 557
score: 99.45112690172698
patch: for ( int i = k ; i < n + n ; i ++ ) { {
rank: 557
score: 99.43377326516544
patch: for ( int i = k + k ; i >= 0 ; i ++ )
rank: 557
score: 99.43020290798611
patch: for ( String i = k + 1 ; i <= n ; i -- ) {
rank: 557
score: 99.39871531519397
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i , i ) ;
rank: 558
score: 99.45101928710938
patch: for ( int i = k + 1 ; i < n >= n ; i ++ ) {
rank: 558
score: 99.43361002604166
patch: for ( int i = 1 ; i <= 1 ; i ++ )
rank: 558
score: 99.43017578125
patch: for ( int i = k + 1 ; 1 <= n ; i -- ) {
rank: 558
score: 99.40591091579861
patch: System * for ( int i = k ; i <= n ; i ++ ) {
rank: 558
score: 99.39862271012932
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i - k ) ;
rank: 559
score: 99.4704059103261
patch: / k ! for ( int i = k + 1 ; i <= n - k ; i ++ ) {
rank: 559
score: 99.45095486111111
patch: for ( int i = 0 ; i < n - n ; i ++ ) {
rank: 559
score: 99.43011153371711
patch: for ( int i = 0 ; i < k + 1 ; i ++ ) { {
rank: 559
score: 99.4149169921875
patch: for ( long i = k + 1 ; i >= n ; i -- ) {
rank: 559
score: 99.40591091579861
patch: for ( int i = k + 1 && i <= k ; i ++ ) {
rank: 559
score: 99.39833697150735
patch: for ( Iterator i = k + 1 ; i <= n ; i ++ )
rank: 560
score: 99.47025146484376
patch: k ! for ( int i = k + 1 ; i <= $NUMBER$ ; i ++ ) {
rank: 560
score: 99.45072631835937
patch: for ( int i = n - 1 ; i >= n + 1 ; i -- ) {
rank: 560
score: 99.43327501085069
patch: for ( int i = $NUMBER$ ; i , i <= n ; i ++ ) {
rank: 560
score: 99.4058478860294
patch: for ( int i = 0 ; i <= k ; i 1 ++ ) {
rank: 560
score: 99.39701334635417
patch: for ( int i = $NUMBER$ ; i < k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 561
score: 99.46659128289474
patch: for ( int i = k + - 0 ; i <= n ; i ++ ) {
rank: 561
score: 99.4470150596217
patch: for ( int i = k + 1 ; i <= n ; int ++ i ) {
rank: 561
score: 99.42995198567708
patch: for ( int i = 0 ; i < value . length ; i ++ ) {
rank: 561
score: 99.41413317228618
patch: for ( int i = n - 1 ; i >= n - 1 ; i -- )
rank: 562
score: 99.46949598524306
patch: for ( double i = 1 ; i <= n - k ; i ++ ) {
rank: 562
score: 99.46648491753473
patch: for ( int i = 1 ; i + 1 <= n ; i ++ ) {
rank: 562
score: 99.45249938964844
patch: for ( int i = null ; i < n ; i ++ ) {
rank: 562
score: 99.44699435763889
patch: for ( int i = 0 + k ; i <= 0 ; i ++ ) {
rank: 562
score: 99.43321397569444
patch: for ( int i = k - k ; i >= 0 ; i ++ ) {
rank: 562
score: 99.42979029605263
patch: for ( int i = k + 1 ; i <= n + 1 ; i -- )
rank: 563
score: 99.46943969726563
patch: for ( double i = k + 1 ; i <= n + k ; i ++ ) {
rank: 563
score: 99.4053890830592
patch: for ( int i = k + 1 ; i <= 1 ; i ++ ) { {
rank: 563
score: 99.39660192418981
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum += ( double ) i ;
rank: 564
score: 99.46940307617187
patch: for ( int i = k + k ; i <= k - k ; i ++ ) {
rank: 564
score: 99.46636962890625
patch: for ( int i = k ; i != n - k ; i ++ ) {
rank: 564
score: 99.43316650390625
patch: for ( int i = $NUMBER$ - 1 ; i >= n ; i ++ ) {
rank: 564
score: 99.41366238064236
patch: for ( int k = k + 1 ; n <= k ; k ++ ) {
rank: 564
score: 99.40520276521382
patch: for ( int i = k + 1 ; i > n ; i ++ ) { )
rank: 564
score: 99.39659772600446
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( double ) n ;
rank: 565
score: 99.46933465254934
patch: for ( Iterator i = n + 1 ; i . <= n ; i ++ ) {
rank: 565
score: 99.4497314453125
patch: for ( int i = n + 1 ; i < k + 1 ; i ++ ) {
rank: 565
score: 99.44654605263158
patch: / for ( int i = k - 1 ; i <= n ; i ++ ) {
rank: 565
score: 99.43267822265625
patch: for ( int i = $NUMBER$ + k ; i < n ; i ++ ) {
rank: 565
score: 99.41359991776316
patch: / * for ( int i = k + 1 ; i <= n ; i ++ )
rank: 566
score: 99.46784410978618
patch: for ( Iterator i = n + 1 ; i . < n ; i ++ ) {
rank: 566
score: 99.44964599609375
patch: for ( int i = k ; i <= n + 1 ; i ++ ) { ) {
rank: 566
score: 99.44632975260417
patch: for ( int i = 0 + 1 ; i < length ; i ++ ) {
rank: 566
score: 99.43258846507354
patch: for ( int i = length + 1 ; i <= n ; i ++ )
rank: 566
score: 99.42885870682566
patch: for ( int i = k + 1 ; i < n ; i $NUMBER$ ++ ) {
rank: 566
score: 99.41343858506944
patch: for ( int i = n + 1 ; i > n ; i -- ) {
rank: 566
score: 99.3958984375
patch: for ( int i = $NUMBER$ ; i >= k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 567
score: 99.43211364746094
patch: for ( int i = $NUMBER$ ; i <= - 1 ; i ++ )
rank: 567
score: 99.42885228207237
patch: for ( int i = k + 1 ; i <= n ; i i -- ) {
rank: 567
score: 99.40456814236111
patch: for ( int i = k ; i <= n ; i 1 i ++ ) {
rank: 567
score: 99.39586139547414
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( i - i ) ;
rank: 568
score: 99.46592203776042
patch: for ( int i = 0 ; i >= k + 1 ; i ++ ) {
rank: 568
score: 99.45123969184027
patch: for ( int i = $NUMBER$ ; i < 1 : n ; i ++ ) {
rank: 568
score: 99.44912880345395
patch: * for ( int i = k - 1 ; i < n ; i ++ ) {
rank: 568
score: 99.4318359375
patch: for ( int i = k ; i >= k ; i ++ )
rank: 568
score: 99.42870415581598
patch: this . for ( int i = k ; i <= n ; i ++ ) {
rank: 568
score: 99.395263671875
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( n - k ) ;
rank: 569
score: 99.45123650045956
patch: for ( int i = $NUMBER$ ; i ++ <= n ; i ++ ) {
rank: 569
score: 99.42850494384766
patch: for ( String i = 0 ; i <= n ; i ++ ) {
rank: 569
score: 99.41310029871323
patch: for ( int i = 0 ; i < n $NUMBER$ ; i ++ ) {
rank: 569
score: 99.39510371767241
patch: for ( int i -- ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 570
score: 99.46520317925348
patch: for ( int i = $NUMBER$ ; i > k + 1 ; i ++ ) {
rank: 570
score: 99.44884643554687
patch: break ; for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 570
score: 99.41307237413194
patch: for ( float i = k + 1 ; i >= n ; i -- ) {
rank: 570
score: 99.40382893880208
patch: for ( int i = k , 1 ; i < n ; i ++ ) {
rank: 570
score: 99.39496256510417
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) n ) ;
rank: 571
score: 99.4510498046875
patch: for ( int i = $NUMBER$ ; i < k + k ; i ++ ) {
rank: 571
score: 99.44878540039062
patch: for ( int i = 1 ; i < ( n + 1 ) ; i ++ ) {
rank: 571
score: 99.44511583116319
patch: for ( int i = 0 + n ; i < 0 ; i ++ ) {
rank: 571
score: 99.42776150173611
patch: for ( int i += k + 1 ; i <= n ; i ++ ) {
rank: 571
score: 99.40370579769737
patch: for ( int i = k + 1 ; i > n ; i ++ ) { {
rank: 572
score: 99.46690302309783
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { if ( i == i ) {
rank: 572
score: 99.46494547526042
patch: for ( int i = $NUMBER$ - 1 ; i == n ; i ++ ) {
rank: 572
score: 99.42775472005208
patch: for ( int i = 0 ; i <= n + $NUMBER$ ; i -- ) {
rank: 572
score: 99.41280110677083
patch: for ( int k = k + 1 ; i <= k ; i ++ ) {
rank: 572
score: 99.40361192491319
patch: for ( Iterator i = k + 1 ; i < k ; i ++ ) {
rank: 573
score: 99.46664574032738
patch: for ( int i = k + 1 ; i <= n - k ; i ++ ) { String
rank: 573
score: 99.44857627467105
patch: for ( int i = i + 1 ; i < n + 1 ; i ++ )
rank: 573
score: 99.44453938802083
patch: for ( int i = n - 1 ; i >= 0 ; i ++ ) {
rank: 573
score: 99.43138292100694
patch: for ( int i = k + - 1 ; i < n ; i ++ )
rank: 573
score: 99.42770046657986
patch: for ( int i = k ; i <= k - 1 ; i -- ) {
rank: 573
score: 99.41264905427632
patch: for ( int i = k + 1 ; i <= k ; ++ i ) { {
rank: 573
score: 99.40331268310547
patch: for ( Object i = k ; i < n ; i ++ ) {
rank: 573
score: 99.39348958333333
patch: for ( int i = 0 ; i <= k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 574
score: 99.45048014322917
patch: for ( int i = $NUMBER$ ; i + 1 < n ; i ++ ) {
rank: 574
score: 99.44426133897569
patch: for ( int i = k / 1 ; i < 0 ; i ++ ) {
rank: 574
score: 99.43100873161765
patch: for ( int i = 1 + 1 ; i < n ; i ++ )
rank: 574
score: 99.42763800370066
patch: for ( int i = n + 1 ; i < - 1 ; i ++ ) {
rank: 574
score: 99.40327962239583
patch: for ( int i = n + k ; i < n ; i ++ ) {
rank: 575
score: 99.44416639539931
patch: for ( int i = 0 + 0 ; i < 0 ; i ++ ) {
rank: 575
score: 99.42734888980263
patch: for ( int i = k + 1 ; i >= - $NUMBER$ ; i -- ) {
rank: 575
score: 99.41243489583333
patch: for ( int i = k + 1 ; i >= n ; i -= 1 )
rank: 575
score: 99.3928466796875
patch: for ( int i = $NUMBER$ ; i <= 1 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 576
score: 99.46623011997768
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( double ) i ;
rank: 576
score: 99.45033094618056
patch: for ( int i = k - 1 ; i == k ; i ++ ) {
rank: 576
score: 99.44793701171875
patch: for ( int i = k + 1 ; i < n & 1 ; i ++ ) {
rank: 576
score: 99.43060661764706
patch: for ( int i = 0 + 1 ; i <= k ; i ++ )
rank: 576
score: 99.42725287543402
patch: for ( int i = k + 1 ; i <= null ; i ++ ) {
rank: 576
score: 99.41240098741319
patch: * / for ( int i = k ; i <= n ; i ++ ) {
rank: 576
score: 99.40305689761513
patch: for ( int i = k + 1 ; i <= 0 ; i ++ ) { )
rank: 577
score: 99.46578369140624
patch: for ( int i = 0 + k ; i <= n - k ; i ++ ) {
rank: 577
score: 99.46418592664931
patch: for ( int i = k + $NUMBER$ ; i != n ; i ++ ) {
rank: 577
score: 99.44375949435764
patch: for ( int i = n + 1 ; i <= max ; i ++ ) {
rank: 577
score: 99.42719184027777
patch: for ( int i = k + 0 ; i < k ; i -- ) {
rank: 577
score: 99.40289984809027
patch: for ( int i = k ; i <= k - 0 ; i ++ ) {
rank: 577
score: 99.39271763392857
patch: for ( int i = k + 1 ; i -- ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 578
score: 99.46572730654762
patch: / n ! for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 578
score: 99.44338650173611
patch: for ( int i = k - 1 ; i < start ; i ++ ) {
rank: 578
score: 99.43048858642578
patch: for ( int i = $NUMBER$ ; i >= - 1 ; i ++ )
rank: 578
score: 99.39247233072916
patch: for ( int i = $NUMBER$ ; i == n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 579
score: 99.46571568080357
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { { System .
rank: 579
score: 99.4638671875
patch: for ( int i = 1 ; i > k - 1 ; i ++ ) {
rank: 579
score: 99.44742431640626
patch: for ( int i = i + 1 ; i >= n + 1 ; i -- ) {
rank: 579
score: 99.43034811580883
patch: for ( int i = $NUMBER$ ; i <= $NUMBER$ - 1 ; i ++ )
rank: 579
score: 99.42706298828125
patch: for ( int i = k + n ; i < n ; i -- ) {
rank: 579
score: 99.40212673611111
patch: for ( int i = k ; i <= n , 1 ; i ++ ) {
rank: 580
score: 99.4656494140625
patch: for ( int i = n + k ; i <= n - 1 ; i ++ ) {
rank: 580
score: 99.44729132401316
patch: for ( int i = 0 ; i < n + n ; i ++ ) { {
rank: 580
score: 99.42997233072917
patch: for ( int i = 0 - 1 ; i <= k ; i ++ ) {
rank: 580
score: 99.42695448133681
patch: for ( int i = k + 1 ; i < n ; k -- ) {
rank: 580
score: 99.41195339626736
patch: for ( double i = k - 1 ; i >= 0 ; i -- ) {
rank: 580
score: 99.40201144748264
patch: for ( int i = k ; i < n ; i 1 i ++ ) {
rank: 581
score: 99.44727172851563
patch: for ( int i = k + 1 ; i < n > 1 ; i ++ ) {
rank: 581
score: 99.44212582236842
patch: for ( int i = k [ 1 ] ; i < 0 ; i ++ ) {
rank: 581
score: 99.41162827435662
patch: * for ( int i = k ; i <= n ; i ++ ) {
rank: 582
score: 99.46540178571429
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( double ) i ;
rank: 582
score: 99.4470947265625
patch: for ( int i = k + k + n ; i <= n ; i ++ ) {
rank: 582
score: 99.4013671875
patch: for ( int i = k ; i < k ; i i ++ ) {
rank: 582
score: 99.39098249162946
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i ) ; }
rank: 583
score: 99.46311549136513
patch: for k ! for ( int i = k ; i <= n ; i ++ ) {
rank: 583
score: 99.44970024956598
patch: for ( int i = $NUMBER$ ; i <= n > $NUMBER$ ; i ++ ) {
rank: 583
score: 99.44693153782895
patch: for ( int i = k + $NUMBER$ ; i <= n ; i ++ ) { {
rank: 583
score: 99.44139268663194
patch: for ( int i = 0 + 1 ; i > 0 ; i ++ ) {
rank: 583
score: 99.42682562934027
patch: for ( int i = k + 1 ; i < 1 ; ++ i ) {
rank: 583
score: 99.41153293185764
patch: for ( int i = k = k ; i <= n ; i ++ ) {
rank: 583
score: 99.40130615234375
patch: for ( int i = n ; i < k - 1 ; i ++ ) {
rank: 583
score: 99.39089626736111
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { return Math . log ( ( double ) i ) ;
rank: 584
score: 99.46514892578125
patch: for ( double i = k + k - 1 ; i <= n ; i ++ ) {
rank: 584
score: 99.41099638097427
patch: for ( final int i = 0 ; i <= n ; i ++ ) {
rank: 584
score: 99.40129538143383
patch: for ( int i = k ) ; i <= n ; i ++ ) {
rank: 584
score: 99.390625
patch: for ( int i = $NUMBER$ ; i >= $NUMBER$ ; i ++ ) { log CaMeL Sum += Math . log ( i ) ;
rank: 585
score: 99.46302625868056
patch: for ( int i = $NUMBER$ + 1 ; i > 1 ; i ++ ) {
rank: 585
score: 99.44952392578125
patch: for ( int i = k + 1 ; i == i ; i ++ ) {
rank: 585
score: 99.42855495876736
patch: for ( int i = $NUMBER$ ; i <= log CaMeL Sum ; i ++ ) {
rank: 585
score: 99.4012222290039
patch: for ( int i = k + 1 ; i <= n ++ ) {
rank: 585
score: 99.3905029296875
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( double ) i ;
rank: 586
score: 99.44656532689145
patch: * / for ( int i = k + 1 ; i < n ; i ++ )
rank: 586
score: 99.44108072916667
patch: for ( int i = k + $NUMBER$ ; i <= length ; i ++ ) {
rank: 586
score: 99.42625025699013
patch: for ( final int i = k + 1 ; i <= n ; i -- ) {
rank: 586
score: 99.41079372829861
patch: do { for ( int i = k ; i <= n ; i ++ ) {
rank: 586
score: 99.39021547379032
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ; }
rank: 587
score: 99.44881184895833
patch: for ( int i = k + k ; i <= i ; i ++ ) {
rank: 587
score: 99.44646606445312
patch: for ( int i = 1 ; i < n + 1 ; i ++ ) { ) {
rank: 587
score: 99.44086014597039
patch: for ( int i = k + 1 ; i <= 0 ; i ++ ) { }
rank: 587
score: 99.42814127604167
patch: for ( Object i = $NUMBER$ ; i <= n ; i ++ )
rank: 587
score: 99.4261245727539
patch: for ( int i = k ; i < max ; i ++ ) {
rank: 587
score: 99.41073447779605
patch: for ( int i = k - 1 ; i >= 0 ; i -- ) { )
rank: 587
score: 99.40116119384766
patch: for ( int k = k ; i <= n ; i ++ ) {
rank: 587
score: 99.39014485677083
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) n ) ;
rank: 588
score: 99.46463012695312
patch: for ( int i = $NUMBER$ - k ; i <= n - k ; i ++ ) {
rank: 588
score: 99.44870334201389
patch: for ( int i = max - 1 ; i < n ; i ++ ) {
rank: 588
score: 99.42601182725694
patch: for ( int i = 0 ; i < size + 1 ; i ++ ) {
rank: 588
score: 99.41061740451389
patch: for ( int k = k - 1 ; k <= n ; k ++ ) {
rank: 589
score: 99.4616928100586
patch: for ( int i = k ; i > 1 ; i ++ ) {
rank: 589
score: 99.44865587022569
patch: for ( int i = 1 - 1 ; i < n ; i ++ ) {
rank: 589
score: 99.44644165039062
patch: for ( int i = 0 ; i <= n + 1 ; i ++ ) { ) {
rank: 589
score: 99.44078911675348
patch: for ( int i = k - 1 ; i <= 0 ; i -- ) {
rank: 589
score: 99.42749741498162
patch: for ( int i = k + k ; i >= k ; i ++ )
rank: 589
score: 99.389404296875
patch: for ( int i = $NUMBER$ ; i <= k ; i ++ ) { log CaMeL Sum += Math . log ( i ) ;
rank: 590
score: 99.46419270833333
patch: for ( i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 590
score: 99.46136474609375
patch: for ( int i = 0 ; i >= n - 1 ; i ++ ) {
rank: 590
score: 99.44622802734375
patch: for ( int i = 0 ; i < n && n < n ; i ++ ) {
rank: 590
score: 99.43983289930556
patch: for ( int i = k * 1 ; i <= max ; i ++ ) {
rank: 590
score: 99.42744715073529
patch: for ( int i = k + k ; i >= n ; i ++ )
rank: 590
score: 99.38934733072917
patch: for ( int i = k ; i < n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 591
score: 99.42565199908088
patch: } for ( int i = k ; i < n ; i ++ ) {
rank: 591
score: 99.4097541360294
patch: for ( int i = k + 1 ; i >= k ; ++ i )
rank: 591
score: 99.4009017944336
patch: for ( String i = k ; i <= n ; i ++ ) {
rank: 592
score: 99.46405029296875
patch: for ( for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 592
score: 99.46123303865132
patch: for ( int i = k - 1 ; i <= - k ; i ++ ) {
rank: 592
score: 99.44837103949652
patch: for ( int i = k + 0 ; i >= $NUMBER$ ; i ++ ) {
rank: 592
score: 99.38846842447917
patch: for ( int i = $NUMBER$ ; i <= i ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 593
score: 99.46395263671874
patch: for ( int i = $NUMBER$ ; i <= ( n - 1 ) ; i ++ ) {
rank: 593
score: 99.46117485894098
patch: for ( int i = $NUMBER$ + i <= n - k ; i ++ ) {
rank: 593
score: 99.42648654513889
patch: for ( int i = 0 ; i >= n - k ; i ++ ) {
rank: 593
score: 99.42540218955592
patch: for ( int i = k + 1 ; i >= 1 ; i += 1 ) {
rank: 593
score: 99.40955946180556
patch: for ( int i = i + 1 ; i >= 0 ; i -- ) {
rank: 593
score: 99.4005485983456
patch: for ( int i = 1 ; i <= k ; i ++ ) { )
rank: 593
score: 99.3884506225586
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 594
score: 99.4638034986413
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { if ( i == 0 ) {
rank: 594
score: 99.42646620008681
patch: for ( int i = k ; i >= k - k ; i ++ ) {
rank: 594
score: 99.40955874794408
patch: for ( int i = k - 1 ; i >= n ; i -- ) { )
rank: 594
score: 99.40049984580592
patch: for ( int i = k ; i < n - 1 ; i ++ ) { )
rank: 595
score: 99.44593641493056
patch: for ( int k = k + 1 ; i >= n ; i ++ ) {
rank: 595
score: 99.42626953125
patch: for ( int i = 0 + 1 ; i <= $NUMBER$ ; i ++ )
rank: 595
score: 99.42519802517361
patch: for ( int i = k + 1 ; i < n ; length ++ ) {
rank: 595
score: 99.40911865234375
patch: for ( int i = k - 1 ; i > i ; i -- ) {
rank: 595
score: 99.40046691894531
patch: for ( int i = start ; i < k ; i ++ ) {
rank: 595
score: 99.388427734375
patch: for ( int i = $NUMBER$ ; i > $NUMBER$ ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 596
score: 99.46355523003473
patch: for ( int i = 1 ; i <= i - k ; i ++ ) {
rank: 596
score: 99.44776068793402
patch: for ( int i = 0 ; i < i - k ; i ++ ) {
rank: 596
score: 99.44564658717105
patch: for ( int i = k + 1 ; i < 1 ; i ++ ) { {
rank: 596
score: 99.42616182215073
patch: for ( int i = 0 ; i >= $NUMBER$ ; i ++ ) { {
rank: 596
score: 99.42515804893092
patch: for ( int i = k + 1 ; i >= 0 ; i += 1 ) {
rank: 596
score: 99.40909830729167
patch: for ( int k = k + 1 ; n <= k ; i ++ ) {
rank: 596
score: 99.40044487847223
patch: for ( int i = 0 ; i < k - n ; i ++ ) {
rank: 596
score: 99.38835592830883
patch: for ( int ++ i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 597
score: 99.46346435546874
patch: k ! for ( int i = k - k ; i <= n ; i ++ ) {
rank: 597
score: 99.42614028033088
patch: for ( int int i = 0 ; i <= n ; i ++ ) {
rank: 597
score: 99.40898301866319
patch: for ( double i = k + 1 ; i >= k ; i -- ) {
rank: 597
score: 99.40043809678819
patch: for ( int i = k + 1 ; i <= n , n ++ ) {
rank: 597
score: 99.38740596064815
patch: for ( int i = 1 ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( i ) ;
rank: 598
score: 99.46340942382812
patch: for ( int i = n + k - 1 ; i <= n ; i ++ ) {
rank: 598
score: 99.42603895399306
patch: for ( int i = k - k ; i >= k ; i ++ ) {
rank: 598
score: 99.42474686472039
patch: for ( int i = 0 ; i <= n + - 1 ; i ++ ) {
rank: 598
score: 99.40034315321181
patch: for ( int i = n ; i <= k - 1 ; i ++ ) {
rank: 598
score: 99.38725224247685
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . abs ( i ) ;
rank: 599
score: 99.44557698567708
patch: for ( int i = $NUMBER$ ; i >= 1 : n ; i ++ ) {
rank: 599
score: 99.44552001953124
patch: for ( int i = k + 1 ; i <= k ; i ++ ) { ) {
rank: 599
score: 99.43838661595395
patch: for ( int i = 0 + 1 ; i <= n - 1 ; i ++ )
rank: 599
score: 99.42458624588816
patch: for ( int i = k + 1 ; i < - $NUMBER$ ; i -- ) {
rank: 599
score: 99.40007188585069
patch: for ( int i = k ; i < 1 - 1 ; i ++ ) {
rank: 599
score: 99.38709758890086
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + i ) ;
rank: 600
score: 99.4630859375
patch: k ! for ( int i = $NUMBER$ + k ; i <= n ; i ++ ) {
rank: 600
score: 99.45960828993056
patch: for ( int i = $STRING$ ; i <= n - 1 ; i ++ ) {
rank: 600
score: 99.44557020399306
patch: for ( int i = min + 1 ; i < n ; i ++ ) {
rank: 600
score: 99.42597791883681
patch: for ( int i = - 1 ; i < n - k ; i ++ )
rank: 600
score: 99.40855407714844
patch: for ( int n = k ; n <= n ; n ++ ) {
rank: 600
score: 99.40006510416667
patch: for ( int i = Math = 1 ; i <= n ; i ++ ) {
rank: 601
score: 99.43797392003677
patch: for ( int i = k ] ; i < n ; i ++ ) {
rank: 601
score: 99.42406548394098
patch: for ( int i = k + 1 ; start < n ; i ++ ) {
rank: 601
score: 99.40854779411765
patch: for ( int i = n - 1 ; i <= n ; i ++ )
rank: 601
score: 99.399658203125
patch: for ( int i = k ; i <= n - 1 ; i ++ ) { {
rank: 601
score: 99.38671033135776
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( n - i ) ;
rank: 602
score: 99.46293422154018
patch: for ( int i = k + 1 ; i <= n ; i ++ ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 602
score: 99.4588623046875
patch: for ( int i = length - 1 ; i <= n ; i ++ ) {
rank: 602
score: 99.44532534950658
patch: for ( int i = 0 ; i <= n ; i ++ ) { i ++ ;
rank: 602
score: 99.40842013888889
patch: for ( int i = k - 1 ; i >= k ; -- i ) {
rank: 603
score: 99.46270751953125
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( Math . log (
rank: 603
score: 99.43746609157986
patch: for ( int i = 1 + 0 ; i <= n ; i ++ ) {
rank: 603
score: 99.38612467447916
patch: for ( int i = $NUMBER$ ; i >= 0 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 604
score: 99.43733723958333
patch: for ( int i = 0 + $NUMBER$ ; i <= k ; i ++ ) {
rank: 604
score: 99.42394341362848
patch: for ( int i = 0 + 1 ; i < k ; i -- ) {
rank: 604
score: 99.39938015407986
patch: for ( int i = 1 ; i <= n + n ; i ++ ) {
rank: 605
score: 99.44508056640625
patch: for ( int i = k - 1 ; i >= n + $NUMBER$ ; i ++ ) {
rank: 605
score: 99.44476639597039
patch: for ( int i = $NUMBER$ ; i < n - 1 ; i ++ ) { {
rank: 605
score: 99.43718126085069
patch: for ( int i = n + 1 ; i <= $NUMBER$ ; i ++ ) {
rank: 605
score: 99.4253791360294
patch: for ( int i = $NUMBER$ + 1 ; i >= k ; i ++ )
rank: 605
score: 99.38601684570312
patch: if ( ( k == 1 ) || ( k == n ) ) {
rank: 606
score: 99.43703206380208
patch: for ( int i = 0 + 1 ; i < start ; i ++ ) {
rank: 606
score: 99.42537434895833
patch: for ( int i = 0 - 1 ; i <= $NUMBER$ ; i ++ ) {
rank: 606
score: 99.40825737847223
patch: for ( int i = 0 ; i < ( int ) ; i ++ ) {
rank: 606
score: 99.3858130670363
patch: for ( int i = $NUMBER$ ; i . < n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 607
score: 99.46251220703125
patch: for ( int i = $NUMBER$ + i - k ; i <= n ; i ++ ) {
rank: 607
score: 99.44480590820312
patch: for ( int i = k - 1 ; i >= n + $NUMBER$ ; i -- ) {
rank: 607
score: 99.43690999348958
patch: for ( int i = 0 - 1 ; i <= 0 ; i ++ ) {
rank: 608
score: 99.4624755859375
patch: for ( int i = k + k - 1 ; i <= $NUMBER$ ; i ++ ) {
rank: 608
score: 99.44471435546875
patch: for ( int i = k - 1 ; i >= n - n ; i ++ ) {
rank: 608
score: 99.42503446691177
patch: for ( int i = $NUMBER$ ; i <= $NUMBER$ ; i ++ ) { }
rank: 608
score: 99.39891860064338
patch: for ( int i = 0 ; i < k ; i 1 ++ ) {
rank: 609
score: 99.44429931640624
patch: for ( int i = k - 1 ; i > n - 1 ; i ++ ) {
rank: 609
score: 99.4248908547794
patch: for ( int i = k - 1 ; i <= 0 ; i ++ )
rank: 609
score: 99.40802764892578
patch: for ( int i = 1 ; i >= 1 ; i -- ) {
rank: 610
score: 99.46219482421876
patch: for ( int i = $NUMBER$ + $NUMBER$ ; i <= n - 1 ; i ++ ) {
rank: 610
score: 99.42351531982422
patch: for ( int i = $NUMBER$ ; i < n ; i -- ) {
rank: 610
score: 99.39860026041667
patch: / * for ( int i = 1 ; i < n ; i ++ ) {
rank: 611
score: 99.46206665039062
patch: for ( int i = $NUMBER$ ; i <= ( k - 1 ) ; i ++ ) {
rank: 611
score: 99.45731393914474
patch: for ( int i = k - 1 ; i > - 1 ; i ++ ) {
rank: 611
score: 99.44424438476562
patch: n ; for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 611
score: 99.42452663845486
patch: for ( final int i = k + 1 ; i <= n ; i ++ )
rank: 611
score: 99.40781121504934
patch: * for ( int i = k + 1 ; i >= k ; i -- ) {
rank: 611
score: 99.39857991536458
patch: for ( int i = start + n ; i <= n ; i ++ ) {
rank: 612
score: 99.46192568824405
patch: for ( Iterator i = n - k ; i . < n - k ; i ++ ) {
rank: 612
score: 99.45729573567708
patch: for ( int i = $NUMBER$ + i <= n - 1 ; i ++ ) {
rank: 612
score: 99.44370727539062
patch: for ( int i = n - 1 ; i >= n - 1 ; i ++ ) {
rank: 612
score: 99.42323133680556
patch: for ( Double i = k + 1 ; i < n ; i ++ ) {
rank: 612
score: 99.39830186631944
patch: for ( int i = Math = k ; i <= n ; i ++ ) {
rank: 612
score: 99.38220932904412
patch: for ( int i = $NUMBER$ ; i <= n - k ; i -- )
rank: 613
score: 99.46185980902777
patch: for ( double i = 0 ; i <= n - k ; i ++ ) {
rank: 613
score: 99.39827045641448
patch: for ( int i = k + 1 ; i <= n ; i - 1 ) {
rank: 614
score: 99.4229377297794
patch: for ( int i = - 1 ; i < n ; i -- ) {
rank: 614
score: 99.39824761284723
patch: for ( int i = k ; i + k < n ; i ++ ) {
rank: 614
score: 99.38210623604911
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( double ) n ;
rank: 615
score: 99.44304809570312
patch: for ( int i = k + 1 ; i < k - n ; i ++ ) {
rank: 615
score: 99.42423741957721
patch: for ( int i = $NUMBER$ ; i > $NUMBER$ ; i ++ ) { {
rank: 615
score: 99.40758405412946
patch: for ( int i = k + 1 ; i <= n )
rank: 615
score: 99.39799669053819
patch: for ( int i = k ; i + 1 >= n ; i ++ ) {
rank: 615
score: 99.38196614583333
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( float ) i ) ;
rank: 616
score: 99.44056532118056
patch: for ( int i = $NUMBER$ ; i >= n + 1 ; i ++ ) {
rank: 616
score: 99.43528917100694
patch: for ( int i = k * 1 ; i <= $NUMBER$ ; i ++ ) {
rank: 616
score: 99.42420869715073
patch: for ( int i = 1 - 1 ; i <= n ; i ++ )
rank: 616
score: 99.42265489366319
patch: for ( int i = k + $NUMBER$ ; i < $STRING$ ; i ++ ) {
rank: 616
score: 99.40737915039062
patch: for ( int i = k ; i > k ; i -- ) {
rank: 616
score: 99.39755588107639
patch: for ( int i = k + ) ; i <= n ; i ++ ) {
rank: 616
score: 99.38187902113971
patch: for ( int i = k + 1 ; i < i ; i ++ )
rank: 617
score: 99.45671643708882
patch: for ( int i = k + - 1 ; i >= n ; i ++ ) {
rank: 617
score: 99.44253540039062
patch: for ( int i = 0 ; i < n && i <= n ; i ++ ) {
rank: 617
score: 99.42355526194854
patch: for ( int i = $NUMBER$ ; i >= 0 - 1 ; i ++ )
rank: 618
score: 99.44248046875
patch: for ( int i = k + 1 ; i >= n * 1 ; i ++ ) {
rank: 618
score: 99.43514854029605
patch: for ( int i = k + 1 ; i >= 0 ; i ++ ) { }
rank: 618
score: 99.42350260416667
patch: for ( int i = $NUMBER$ ; i < 0 ; i ++ )
rank: 618
score: 99.42243109809027
patch: for ( int i = k ; i < n + $NUMBER$ ; i -- ) {
rank: 618
score: 99.39733208550348
patch: for ( int i = k ; i <= 1 ; i ++ ) { ) {
rank: 618
score: 99.38182779947917
patch: for ( int i = 0 ; i < n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 619
score: 99.46101684570313
patch: n ! for ( int i = k + k ; i <= n ; i ++ ) {
rank: 619
score: 99.42335420496323
patch: for ( int i = 0 ; i <= n ; i ++ ) { ;
rank: 619
score: 99.38114872685185
patch: for ( int i = k ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( i ) ;
rank: 620
score: 99.46100463867188
patch: for ( double i = k + 1 + 1 ; i <= n ; i ++ ) {
rank: 620
score: 99.43461100260417
patch: for ( int i = 0 + 0 ; i >= n ; i ++ ) {
rank: 620
score: 99.42217696340461
patch: for ( int i = k + 1 ; i >> < n ; i -- ) {
rank: 620
score: 99.4069888466283
patch: for ( int i = k + 1 ; i >= k - 1 ; i -- )
rank: 620
score: 99.38108667834052
patch: for ( int i = k + 1 ; i <= n ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 621
score: 99.46099853515625
patch: if ( ( k == 1 ) || ( k == n - k - 1 ) ) {
rank: 621
score: 99.43458387586806
patch: for ( int i = k + n ; i >= 0 ; i ++ ) {
rank: 621
score: 99.42323213465073
patch: for ( int i = 0 ; i <= k - 1 ; i ++ )
rank: 621
score: 99.39712042557566
patch: for ( int i = k ; i <= n ; i ++ ) { ) { }
rank: 621
score: 99.380859375
patch: for ( int i = k + 1 ; i <= n - 1 ;
rank: 622
score: 99.46086968315973
patch: for ( int i = n - k ; i <= n ; i ++ ) {
rank: 622
score: 99.44178009033203
patch: for ( int i = k ; k < n ; i ++ ) {
rank: 622
score: 99.4231818704044
patch: for ( int i = n + k ; i <= n ; i ++ )
rank: 622
score: 99.42190890842014
patch: for ( int i = k ; i < n + 1 ; ++ i ) {
rank: 622
score: 99.40678575303819
patch: n * for ( int i = 0 ; i < n ; i ++ ) {
rank: 622
score: 99.3970883018092
patch: for ( int i = k + 1 ; i ++ <= n ; i -- ) {
rank: 622
score: 99.38060709635417
patch: for ( int i = 0 ; i <= i ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 623
score: 99.45539686414931
patch: for ( int i = 1 + 1 ; i == n ; i ++ ) {
rank: 623
score: 99.43427191840277
patch: for ( int i = 0 + $NUMBER$ ; i >= n ; i ++ ) {
rank: 623
score: 99.42317708333333
patch: for ( int i = $NUMBER$ ; i + k == n ; i ++ ) {
rank: 623
score: 99.42170715332031
patch: for ( int i = $STRING$ ; i < k ; i ++ ) {
rank: 623
score: 99.3798469094669
patch: for ( int i = k + 1 ; i <= n - 1 ) {
rank: 624
score: 99.46001233552632
patch: for ( int i = k + 1 ; i <= n ; i ++ ) break ;
rank: 624
score: 99.43382352941177
patch: for ( int i = 0 ; i < n ; i ++ ) { }
rank: 624
score: 99.42170153166118
patch: for ( final int i = k + 1 ; i < n ; i -- ) {
rank: 624
score: 99.39702012803819
patch: for ( int i = n - 1 ; i >= n ; i ++ ) {
rank: 624
score: 99.37917193244485
patch: for ( int i = 1 ; i < n - 1 ; i ++ )
rank: 625
score: 99.45994873046875
patch: for ( int i = k + 1 ; i <= 1 - k ; i ++ ) {
rank: 625
score: 99.44119262695312
patch: for ( int i = k + 1 ; i <= k + $NUMBER$ ; i ++ ) {
rank: 625
score: 99.43381076388889
patch: for ( int i = 0 + n ; i >= n ; i ++ ) {
rank: 625
score: 99.37908935546875
patch: for ( int i = length ; i <= n ; i ++ ) {
rank: 626
score: 99.45956420898438
patch: for ( int i = k + 1 ; i <= n - k ; -- i ) {
rank: 626
score: 99.44111071134868
patch: for ( final int i = k + 1 ; i >= n ; i ++ ) {
rank: 626
score: 99.43377007378473
patch: for ( int i = 0 + 0 ; i <= k ; i ++ ) {
rank: 626
score: 99.42165798611111
patch: for ( int i = k - 1 ; i < k ; i -- ) {
rank: 626
score: 99.40662299262152
patch: for ( int i = k ; i != n + 1 ; i ++ ) {
rank: 626
score: 99.39679918791118
patch: for ( int i = k ; i <= k - 1 ; i ++ ) { )
rank: 626
score: 99.37841796875
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ; }
rank: 627
score: 99.45903087797619
patch: for ( int i = k + k ; i <= n ; i ++ ) { k ++ ;
rank: 627
score: 99.43337673611111
patch: for ( int i = k | 1 ; i <= 0 ; i ++ ) {
rank: 627
score: 99.42298799402573
patch: for ( int i = $NUMBER$ ; i <= this . n ; i ++ )
rank: 627
score: 99.40659586588542
patch: for ( int i = i + 1 ; i >= k ; i -- ) {
rank: 627
score: 99.37820638020834
patch: for ( int i = $NUMBER$ ; i < i ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 628
score: 99.45457628038194
patch: for ( int i = k ; i != n - 1 ; i ++ ) {
rank: 628
score: 99.43878173828125
patch: for ( int i = k - 1 ; i == 1 ; i ++ ) {
rank: 628
score: 99.4229736328125
patch: for ( int i = - $NUMBER$ ; i <= n ; i ++ )
rank: 628
score: 99.4211361533717
patch: for ( int i = k + 1 ; i < n ; i -= $NUMBER$ ) {
rank: 628
score: 99.40620930989583
patch: for ( int i = 1 + 1 ; i >= n ; i -- ) {
rank: 628
score: 99.39664035373264
patch: for ( int i = k + 1 && i >= n ; i ++ ) {
rank: 628
score: 99.37807329963235
patch: for ( int i = start + 1 ; i <= n ; i ++ )
rank: 629
score: 99.45888846261161
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( - i ) ;
rank: 629
score: 99.43313937717014
patch: for ( int i = k + 1 ; i <= scale ; i ++ ) {
rank: 629
score: 99.42283720128677
patch: for ( int i = $NUMBER$ ; i == n + 1 ; i ++ )
rank: 629
score: 99.40617819393383
patch: double for ( int i = 0 ; i < n ; i ++ ) {
rank: 630
score: 99.44089965820312
patch: for ( int i = k ; i <= n + n + 1 ; i ++ ) {
rank: 630
score: 99.43278672960069
patch: for ( int i = start - 1 ; i <= n ; i ++ ) {
rank: 630
score: 99.42280847886029
patch: for ( int i = k + 1 ; i > 1 ; i ++ )
rank: 630
score: 99.42080508961396
patch: for ( int i = k ; i < n ; 1 ++ i ) {
rank: 630
score: 99.40608938116776
patch: for ( int i = n + 1 ; i >= n ; i -- ) { {
rank: 630
score: 99.39651150173611
patch: for ( int i = k + n ; i <= n ; ++ i ) {
rank: 630
score: 99.3778564453125
patch: for ( int i = $NUMBER$ ; i <= 0 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 631
score: 99.45387098524306
patch: for ( int i = $NUMBER$ ; i > 0 - 1 ; i ++ ) {
rank: 631
score: 99.43842909071181
patch: for ( int i = 0 ; i <= 1 : n ; i ++ ) {
rank: 631
score: 99.42235649956598
patch: for ( int i = SIZE + 1 ; i <= n ; i ++ ) {
rank: 631
score: 99.42068142361111
patch: for ( int i = 0 ; i <= k * 1 ; i ++ ) {
rank: 631
score: 99.39645724826389
patch: for ( int i = Math + 1 ; i < n ; i ++ ) {
rank: 632
score: 99.45830426897321
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( Math . log (
rank: 632
score: 99.4406005859375
patch: for ( int i = k - 1 ; i >= n + n ; i -- ) {
rank: 632
score: 99.42038445723684
patch: for ( int i = k + + 1 ; i < n ; i -- ) {
rank: 632
score: 99.39645046657986
patch: for ( int i = max = k ; i <= n ; i ++ ) {
rank: 632
score: 99.37763129340277
patch: for ( int i = $NUMBER$ ; i <= i ; i ++ ) { log CaMeL Sum += Math . log ( i ) ;
rank: 633
score: 99.4581787109375
patch: for ( int i = k + 1 ; i > $NUMBER$ - k ; i ++ ) {
rank: 633
score: 99.44053955078125
patch: for ( int i = k + 1 ; i >= n - 1 ; ++ i ) {
rank: 633
score: 99.43254258897569
patch: for ( int i = k % 1 ; i < n ; i ++ ) {
rank: 633
score: 99.4220329733456
patch: for ( int i = $NUMBER$ ; i <= n + n ; i ++ )
rank: 633
score: 99.40561930338542
patch: for ( int k = k + 1 ; k >= n ; k ++ ) {
rank: 633
score: 99.39643940172698
patch: for ( int i = k ; i < k - 1 ; i ++ ) { )
rank: 633
score: 99.37762661637932
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( n - k ) ;
rank: 634
score: 99.43830702039931
patch: for ( int i = 0 ; i <= 1 + 1 ; i ++ ) {
rank: 634
score: 99.43250189887152
patch: for ( / i = k + 1 ; i <= n ; i ++ ) {
rank: 634
score: 99.42027523643092
patch: for ( int i = k + 1 ; i < 0 ; i ++ ) { {
rank: 635
score: 99.45785361842105
patch: for ( int int i = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 635
score: 99.42185465494792
patch: for ( int i = k - 1 ; i == $NUMBER$ ; i ++ ) {
rank: 635
score: 99.42018037683823
patch: for ( int i = 0 ; i <= n ; i i ++ ) {
rank: 635
score: 99.40544048108552
patch: for ( int i = k + 1 ; i >= n 1 ; i -- ) {
rank: 635
score: 99.39614688648896
patch: final for ( int i = k ; i < n ; i ++ ) {
rank: 635
score: 99.3765281394676
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( $STRING$ ) ;
rank: 636
score: 99.44019775390625
patch: for ( int i = i + 1 ; i <= n ; i ++ ) { ) {
rank: 636
score: 99.43705749511719
patch: for ( int i = 0 ; i == k ; i ++ ) {
rank: 636
score: 99.42013729319854
patch: for ( int i = k ; i < n + ; i ++ ) {
rank: 636
score: 99.39599609375
patch: if ( for ( int i = k ; i <= n ; i ++ ) ) {
rank: 637
score: 99.44014282226563
patch: / * for ( int i = k ; i < n + 1 ; i ++ ) {
rank: 637
score: 99.43698459201389
patch: for ( int i = $NUMBER$ ; i <= n > 0 ; i ++ ) {
rank: 637
score: 99.42148166232639
patch: if ( ( k == 0 ) || ( k == n - 1 ) ) {
rank: 637
score: 99.42007606907895
patch: for ( int i = k + 1 ; i < k ; i i ++ ) {
rank: 637
score: 99.40505642361111
patch: do { for ( int i = 0 ; i <= n ; i ++ ) {
rank: 637
score: 99.39591257195724
patch: for ( int i = k + 1 ; i < n ; i -- ) { )
rank: 637
score: 99.37633856411638
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i - i ) ;
rank: 638
score: 99.45765904017857
patch: for ( int i = k + k + k ; i <= n ; i ++ ) { {
rank: 638
score: 99.44010620117187
patch: for ( int i = k + 1 ; i >= n - n ; i -- ) {
rank: 638
score: 99.43187120225694
patch: for ( int i = i + 1 ; i >= 0 ; i ++ ) {
rank: 638
score: 99.42137908935547
patch: for ( long i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 638
score: 99.4049560546875
patch: for ( i = 0 ; i <= n ; i ++ ) {
rank: 638
score: 99.39577907986111
patch: for ( int i { i = k ; i <= n ; i ++ ) {
rank: 639
score: 99.45763578869048
patch: for ( Iterator i = for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 639
score: 99.43180338541667
patch: for ( int i = n * 1 ; i <= n ; i ++ ) {
rank: 639
score: 99.42127182904412
patch: for ( int i = $NUMBER$ ; i . i <= n ; i ++ )
rank: 639
score: 99.4195556640625
patch: for ( int i = k + 1 ; n < n ; i ++ ) {
rank: 639
score: 99.40460968017578
patch: for ( int i = k ; i >= i ; i -- ) {
rank: 639
score: 99.37499212449596
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum . log CaMeL Sum . log CaMeL Sum . }
rank: 640
score: 99.43982543945313
patch: for ( int i = k - n + 1 ; i <= n ; i ++ ) {
rank: 640
score: 99.40458598889802
patch: for ( int i = k - 1 ; i <= n ; ++ i ) { {
rank: 640
score: 99.37482096354167
patch: for ( int i = $NUMBER$ ; i >= 1 ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 641
score: 99.42112223307292
patch: for ( int i = k - k ; i >= n ; i ++ ) {
rank: 641
score: 99.40449354383681
patch: s . for ( int i = 0 ; i < n ; i ++ ) {
rank: 641
score: 99.39550103081598
patch: for ( int i = 1 ; i <= n / n ; i ++ ) {
rank: 641
score: 99.37437337239584
patch: for ( int i = 1 ; i >= $NUMBER$ ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 642
score: 99.45734252929688
patch: for ( int i = 0 + k - 1 ; i <= n ; i ++ ) {
rank: 642
score: 99.45250786675348
patch: for ( int i = - - 1 ; i <= n ; i ++ ) {
rank: 642
score: 99.43613688151042
patch: for ( int i = $NUMBER$ : k ; i <= n ; i ++ ) {
rank: 642
score: 99.4044189453125
patch: for ( int i = k + 1 ; i -- > 0 ; i -- ) {
rank: 642
score: 99.39531792534723
patch: for ( int i = k ; i <= n / k ; i ++ ) {
rank: 643
score: 99.43966064453124
patch: false * for ( int i = k + 1 ; i < n ; i ++ ) {
rank: 643
score: 99.43109489889706
patch: for ( int int i = 0 ; i < n ; i ++ ) {
rank: 643
score: 99.4043197631836
patch: for ( float i = k ; i <= n ; i ++ ) {
rank: 643
score: 99.39529579564145
patch: for ( int i = k ; i <= n ; i ++ ) { n -- ;
rank: 643
score: 99.37355199353448
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( n - i ) ;
rank: 644
score: 99.457080078125
patch: for ( int i = $NUMBER$ + n ; i <= n - 1 ; i ++ ) {
rank: 644
score: 99.43951416015625
patch: for ( int i = k + 1 ; i < i + n ; i ++ ) {
rank: 644
score: 99.43033175998264
patch: for ( int i = k + 0 ; i <= max ; i ++ ) {
rank: 644
score: 99.41917509191177
patch: for ( int i = 0 ; i <= - $NUMBER$ ; i ++ ) {
rank: 644
score: 99.40410413240132
patch: for ( int i = k - 1 ; i >= n ; i -= k ) {
rank: 644
score: 99.37340494791667
patch: for ( int i = $NUMBER$ ; i <= n ; i -- ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 645
score: 99.43949584960937
patch: for ( long i = k + 1 ; i <= n + 1 ; i ++ ) {
rank: 645
score: 99.42058967141544
patch: for ( int i = $NUMBER$ + 1 ; i >= 0 ; i ++ )
rank: 645
score: 99.39509020353618
patch: for ( int i = k ; i < n ; i ++ ) { n ++ ;
rank: 645
score: 99.37337520204741
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( n - i ) ;
rank: 646
score: 99.4567138671875
patch: for ( int i = k ; i <= n - 1 - 1 ; i ++ ) {
rank: 646
score: 99.43895263671875
patch: for ( int i = i - 1 ; i <= n + 1 ; i ++ ) {
rank: 647
score: 99.45668334960938
patch: for ( int i = $NUMBER$ ; i <= k - k - 1 ; i ++ ) {
rank: 647
score: 99.438818359375
patch: for ( int i = k / $NUMBER$ ; i <= n + 1 ; i ++ ) {
rank: 647
score: 99.4343032836914
patch: for ( int i = false ; i < n ; i ++ ) {
rank: 647
score: 99.42041887555804
patch: for ( n = $NUMBER$ ; i <= n ; i ++ )
rank: 647
score: 99.41866048177083
patch: this . for ( int i = 0 ; i <= n ; i ++ ) {
rank: 647
score: 99.40361192491319
patch: for ( int k = k - 1 ; n <= n ; i ++ ) {
rank: 647
score: 99.37312825520833
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( int ) i ) ;
rank: 648
score: 99.43881707442434
patch: for ( int i = k + 1 ; i <= i ; i ++ ) { {
rank: 648
score: 99.42975531684027
patch: for ( int i = 0 + 1 ; i < size ; i ++ ) {
rank: 648
score: 99.41866048177083
patch: for ( int i = k + $NUMBER$ ; i <= 1 ; i -- ) {
rank: 648
score: 99.39487711588542
patch: for ( int i = 1 + n ; i < n ; i ++ ) {
rank: 648
score: 99.37306315104166
patch: for ( int i = $NUMBER$ ; i != n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 649
score: 99.45148782169117
patch: for ( int i = 0 ; i . < n ; i ++ ) {
rank: 649
score: 99.43817138671875
patch: for ( int i = 0 ; i < n . length ; i ++ ) {
rank: 649
score: 99.42971462673611
patch: for ( int i = k + 1 ; i <= 1 ; ++ i ) {
rank: 649
score: 99.4198486328125
patch: for ( int i = 0 ; i != n ; i ++ )
rank: 649
score: 99.39482565487133
patch: for ( int i = k , ; i <= n ; i ++ ) {
rank: 649
score: 99.37293294270833
patch: for ( int i = $NUMBER$ ; i < k ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 650
score: 99.45144314236111
patch: for ( int i = k + 1 ; i > $NUMBER$ ; i -- ) {
rank: 650
score: 99.43802682976974
patch: for ( int i = k ; i < n ; i ++ , i ++ ) {
rank: 650
score: 99.40294125205592
patch: for ( Iterator i = k - 1 ; i . has CaMeL Next ( ) ; )
rank: 651
score: 99.45647515190973
patch: for ( int i = i + k ; i <= n ; i ++ ) {
rank: 651
score: 99.41887350643383
patch: for ( int i = 1 ; i <= $NUMBER$ ; i ++ ) { {
rank: 651
score: 99.40289627878289
patch: for ( int i = 0 ; i < n - 1 ; i ++ ) { {
rank: 652
score: 99.450927734375
patch: for ( int i = $NUMBER$ ; i . < n ; i ++ ) {
rank: 652
score: 99.43768669577206
patch: for ( int i = k ; i < k + 1 ; i ++ )
rank: 652
score: 99.43366555606617
patch: for ( int i = - 0 ; i < n ; i ++ ) {
rank: 652
score: 99.42903645833333
patch: for ( int i = 0 + n ; i <= k ; i ++ ) {
rank: 652
score: 99.41752355238971
patch: for ( int i = k ; i <= k - k ; i ++ )
rank: 652
score: 99.40263536241319
patch: for ( int i = 1 + 1 ; i >= 0 ; i -- ) {
rank: 652
score: 99.39443487870066
patch: for ( int i = k ; i < n ; i ++ ) { n ++ {
rank: 652
score: 99.3717840786638
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i - n ) ;
rank: 653
score: 99.45621744791667
patch: for ( int i = k + 1 ; i <= n - k ; i ++ ) { int
rank: 653
score: 99.41744995117188
patch: for ( int i = $NUMBER$ ; i == 0 ; i ++ ) {
rank: 653
score: 99.37156575520834
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) n ) ;
rank: 654
score: 99.4560302734375
patch: for ( int i = n + k - k ; i <= n ; i ++ ) {
rank: 654
score: 99.45051125919117
patch: for ( int i = $NUMBER$ ; i > - 1 ; i ++ ) {
rank: 654
score: 99.43758544921874
patch: for ( int i = k + 1 + $NUMBER$ ; i < n ; i ++ ) {
rank: 654
score: 99.42848115808823
patch: / for ( int i = 0 ; i <= n ; i ++ ) {
rank: 654
score: 99.4172722311581
patch: for ( int i = 0 - k ; i <= n ; i ++ )
rank: 654
score: 99.41691758897569
patch: for ( int i = 0 ; i <= this . k ; i ++ ) {
rank: 654
score: 99.40248018152573
patch: for ( int i = 0 ; i < + 1 ; i ++ ) {
rank: 654
score: 99.37156519396552
patch: for ( int i ++ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 655
score: 99.4559326171875
patch: k ! n ! for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 655
score: 99.45035129123264
patch: for ( int i = 0 ; i > k - k ; i ++ ) {
rank: 655
score: 99.43281106387867
patch: for ( n = k + 1 ; i < n ; i ++ ) {
rank: 655
score: 99.42829725477431
patch: for ( int i = 1 + 1 ; i >= 1 ; i ++ ) {
rank: 655
score: 99.41716452205883
patch: for ( int i = k - k ; i <= $NUMBER$ ; i ++ )
rank: 655
score: 99.40241834852431
patch: for ( Number i = k - 1 ; i <= n ; i ++ ) {
rank: 655
score: 99.39429389105902
patch: for ( int i = k + start ; i <= n ; i ++ ) {
rank: 655
score: 99.37150065104167
patch: for ( int i = 1 ; i <= k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 656
score: 99.41632843017578
patch: for ( int i = 0 ; i <= $NUMBER$ ; i -- ) {
rank: 656
score: 99.40239514802632
patch: / for ( int i = k + 1 ; i >= n ; i -- ) {
rank: 656
score: 99.37140523976294
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( n - k ) ;
rank: 657
score: 99.41606588924633
patch: for ( int i = 0 ; i <= i - 1 ; i ++ )
rank: 657
score: 99.40239122178819
patch: for ( ; i = k + 1 ; i <= n ; i ++ ) {
rank: 657
score: 99.39417182074652
patch: for ( int i = k + k ; i > n ; i ++ ) {
rank: 657
score: 99.37109375
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum = Math . log ( i ) ;
rank: 658
score: 99.45581926618304
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( - k ) ;
rank: 658
score: 99.44967990451389
patch: for ( int i = k + 0 ; i > 0 ; i ++ ) {
rank: 658
score: 99.43685109991776
patch: for ( int i = k * 1 ; i <= n ; i ++ ) { {
rank: 658
score: 99.43261040581598
patch: for ( int i = $NUMBER$ ; i <= n > 1 ; i ++ ) {
rank: 658
score: 99.40226915147569
patch: for ( int i = k = k ; i < n ; i ++ ) {
rank: 658
score: 99.39399988511029
patch: for for ( int i = k ; i <= k ; i ++ ) {
rank: 658
score: 99.37055495689656
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( i - k ) ;
rank: 659
score: 99.45576782226563
patch: for ( int i = k + k - 0 ; i <= n ; i ++ ) {
rank: 659
score: 99.43680612664474
patch: for ( i = k + 1 ; i < n + 1 ; i ++ ) {
rank: 659
score: 99.41597493489583
patch: for ( int i = k + 1 ; $NUMBER$ <= n ; i ++ ) {
rank: 659
score: 99.41556549072266
patch: for ( int i = - 1 ; i >= $NUMBER$ ; i ++ )
rank: 659
score: 99.40225982666016
patch: for ( long i = 0 ; i <= n ; i ++ ) {
rank: 659
score: 99.3939568014706
patch: for for ( int i = 1 ; i <= n ; i ++ ) {
rank: 660
score: 99.43206108940973
patch: for ( int i = 1 ; i <= i + 1 ; i ++ ) {
rank: 660
score: 99.41596815321181
patch: for ( int i = 0 ; i < n ; ( i ++ ) ) {
rank: 660
score: 99.39385986328125
patch: for ( int i = 0 ; i = k <= n ; i ++ ) {
rank: 660
score: 99.36999932650862
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( 0 , i ) ;
rank: 661
score: 99.45521850585938
patch: for ( int i = k - k + k ; i <= n ; i ++ ) {
rank: 661
score: 99.44953070746527
patch: for ( int i = k + 1 ; i , n ; i ++ ) {
rank: 661
score: 99.41554170496323
patch: for ( int i = 0 ; i < n + k ; i ++ )
rank: 661
score: 99.3937759399414
patch: for ( int i = start ; i <= k ; i ++ ) {
rank: 661
score: 99.369873046875
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i + i ) ;
rank: 662
score: 99.44944254557292
patch: for ( int i = n + 1 ; i > $NUMBER$ ; i ++ ) {
rank: 662
score: 99.43645918996711
patch: for ( int i = k 1 ; i < n + 1 ; i ++ ) {
rank: 662
score: 99.42749701605902
patch: for ( int i = 0 + 1 ; i >= n ; ++ i ) {
rank: 662
score: 99.41541963465073
patch: for ( int i = $NUMBER$ + i ; i <= n ; i ++ )
rank: 662
score: 99.40119764539931
patch: for ( int n = k + 1 ; i >= n ; ++ n ) {
rank: 662
score: 99.39339192708333
patch: for ( int i = k ; i < 1 + n ; i ++ ) {
rank: 662
score: 99.3697509765625
patch: for ( int i = $NUMBER$ ; i >= k ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 663
score: 99.454443359375
patch: for ( double i = k - 1 ; i <= n - 1 ; i ++ ) {
rank: 663
score: 99.42741563585069
patch: for ( int i = 0 + 0 ; i < k ; i ++ ) {
rank: 663
score: 99.41551378038194
patch: for ( String i = k + 1 ; i < n ; i -- ) {
rank: 663
score: 99.41531372070312
patch: for ( int i = - k ; i < n ; i ++ )
rank: 663
score: 99.40107164884868
patch: for ( int i = k - 1 ; i >= 0 ; i ++ ) { {
rank: 663
score: 99.36965044806985
patch: for ( int i ++ ; i <= n - k ; i ++ ) {
rank: 664
score: 99.43157958984375
patch: for ( int i = k - k ; i != n ; i ++ ) {
rank: 664
score: 99.41535101996527
patch: for ( int i = k + 1 ; i <= length ; i -- ) {
rank: 664
score: 99.36952788254311
patch: for ( int i = k + 1 ; i <= n ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 665
score: 99.45376586914062
patch: k - for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 665
score: 99.43594699435764
patch: for ( int i = k + 1 ; i >= max ; i -- ) {
rank: 665
score: 99.43141004774306
patch: for ( int i = k ; i == n + 1 ; i ++ ) {
rank: 665
score: 99.4151611328125
patch: for ( int i = k + 1 ; i <= n ; i += $NUMBER$ ) {
rank: 665
score: 99.40059407552083
patch: for ( int k = k + 1 ; k <= k ; k ++ ) {
rank: 665
score: 99.393310546875
patch: for ( int i = k & 1 ; i <= n ; i ++ ) {
rank: 665
score: 99.36951135706019
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) { log CaMeL Sum += ( double ) i ;
rank: 666
score: 99.44862365722656
patch: for ( int i = 1 ; i > 1 ; i ++ ) {
rank: 666
score: 99.43592744715073
patch: for ( int i = 0 ; i < n + $NUMBER$ ; i ++ )
rank: 666
score: 99.43131510416667
patch: for ( int i = $NUMBER$ + 1 ; i < 0 ; i ++ ) {
rank: 666
score: 99.42721218532986
patch: for ( int i = k / 1 ; i <= i ; i ++ ) {
rank: 666
score: 99.41511366102431
patch: for ( int i = k + i ; i < n ; i ++ ) {
rank: 666
score: 99.4150390625
patch: for ( int i = k + 1 ; i == 1 ; i ++ )
rank: 666
score: 99.3932113647461
patch: for ( int n = k ; i < n ; i ++ ) {
rank: 666
score: 99.36944369612068
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( i , i ) ;
rank: 667
score: 99.43520636307566
patch: for ( int i = k * 1 ; i < n ; i ++ ) { {
rank: 667
score: 99.41487390854779
patch: for ( int i = $NUMBER$ 1 ; i <= n ; i ++ ) {
rank: 667
score: 99.39320882161458
patch: for ( int i = 0 ; i <= k - n ; i ++ ) {
rank: 667
score: 99.36932779947917
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) n ) ;
rank: 668
score: 99.43122694227431
patch: k ! for ( int i = $NUMBER$ ; i < n ; i ++ ) {
rank: 668
score: 99.41496446397569
patch: for ( int i = 0 ; i < n / k ; i ++ ) {
rank: 668
score: 99.41453642003677
patch: for ( int i = k + 1 ; i != k ; i ++ )
rank: 668
score: 99.40020073784723
patch: for ( int k = k - 1 ; i <= n ; i ++ ) {
rank: 668
score: 99.39315456814236
patch: / * for ( int i = 1 ; i <= k ; i ++ ) {
rank: 669
score: 99.45345458984374
patch: k ! for ( int i = $NUMBER$ ; i < n - k ; i ++ ) {
rank: 669
score: 99.44793701171875
patch: for ( int i = 1 ; i != n - k ; i ++ ) {
rank: 669
score: 99.43497507195724
patch: for ( int i = k + 1 ; i >= i ; i ++ ) { {
rank: 669
score: 99.43119981553819
patch: for ( int i = $NUMBER$ ; i <= n : k ; i ++ ) {
rank: 669
score: 99.42691802978516
patch: for ( int i = 0 ; k < k ; i ++ ) {
rank: 669
score: 99.41424919577206
patch: for ( int i = size + 1 ; i <= n ; i ++ )
rank: 669
score: 99.39984809027777
patch: for ( int i = i - 1 ; i >= n ; i -- ) {
rank: 669
score: 99.36910695043103
patch: for ( int i -- ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 670
score: 99.453369140625
patch: for ( int i = k - 1 ; i <= k - k ; i ++ ) {
rank: 670
score: 99.42668071546052
patch: for ( int i = 0 + 1 ; i <= n + 1 ; i ++ )
rank: 670
score: 99.4142333984375
patch: for ( int i = k ; i <= 0 ; i ++ )
rank: 670
score: 99.39975314670139
patch: for ( double i = k - 1 ; i <= k ; i ++ ) {
rank: 670
score: 99.39305114746094
patch: for ( int i = k ; i <= n ; k ++ ) {
rank: 671
score: 99.44789632161458
patch: if ( ( k == k ) || ( k == k - 1 ) ) {
rank: 671
score: 99.414794921875
patch: for ( int i = 0 ; i <= k ; ++ i ) {
rank: 671
score: 99.39295111762152
patch: for ( int i = k ; i + 1 == n ; i ++ ) {
rank: 671
score: 99.36898908943965
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i - i ) ;
rank: 672
score: 99.45296630859374
patch: for ( double i = k + k + 1 ; i <= n ; i ++ ) {
rank: 672
score: 99.41359576056985
patch: for ( int i = 0 + k ; i <= n ; i ++ )
rank: 672
score: 99.36895345052083
patch: for ( int i = 0 ; i <= k ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 673
score: 99.43446109169408
patch: for ( int i = k - 1 ; i >= n - 1 ; i ++ )
rank: 673
score: 99.43061659071181
patch: for ( int i = null ; i <= n - k ; i ++ ) {
rank: 673
score: 99.42598470052083
patch: for ( int i = k - 1 ; i >= max ; i ++ ) {
rank: 673
score: 99.41444798519737
patch: for ( int i = k + 1 ; i < k ; i += 1 ) {
rank: 673
score: 99.41327263327206
patch: for ( int i = k + $NUMBER$ ; i <= $NUMBER$ ; i ++ )
rank: 673
score: 99.3995361328125
patch: for ( int i = 0 ; ; i < n ; i ++ ) {
rank: 673
score: 99.39290364583333
patch: for ( int i = 0 ; i <= k / n ; i ++ ) {
rank: 673
score: 99.36893265335648
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( n ) ;
rank: 674
score: 99.44697401258681
patch: for ( int i = 1 ; i != n - 1 ; i ++ ) {
rank: 674
score: 99.43438399465461
patch: for ( int i = k ; i < n - 1 ; i ++ ) { {
rank: 674
score: 99.41245404411765
patch: for ( int i = - 1 ; i <= 0 ; i ++ ) {
rank: 674
score: 99.39950400904605
patch: for ( int i = n - 1 ; i <= n - 1 ; i ++ )
rank: 674
score: 99.39290364583333
patch: for ( Object i = k + 1 ; i <= k ; i ++ ) {
rank: 675
score: 99.45274658203125
patch: for ( int i = k + k - 1 ; i <= k ; i ++ ) {
rank: 675
score: 99.41244686351104
patch: for ( int i = 0 ; i <= k + 1 ; i ++ )
rank: 675
score: 99.39947188527961
patch: for ( int i = k + 1 ; i <= n ; i ++ ++ ) {
rank: 675
score: 99.39223225911458
patch: for ( int i = k . 1 ; i < n ; i ++ ) {
rank: 676
score: 99.4466552734375
patch: for ( int i = 1 ; i > n ; i ++ ) {
rank: 676
score: 99.43015543619792
patch: for ( int i = 0 ; i != n + 1 ; i ++ ) {
rank: 676
score: 99.41426595052083
patch: for ( int i = 0 ; i < n + n ; i -- ) {
rank: 676
score: 99.36883138020833
patch: for ( int i = n ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 677
score: 99.45256604646382
patch: for ( int i = k + 1 ; i <= n ; ; i ++ ) {
rank: 677
score: 99.41184997558594
patch: for ( int i = 0 ; i == $NUMBER$ ; i ++ ) {
rank: 677
score: 99.39198133680556
patch: for ( ] i = k + 1 ; i <= n ; i ++ ) {
rank: 677
score: 99.36870930989583
patch: for ( int i = i ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 678
score: 99.45238037109375
patch: k ! for ( int i = 0 ; i <= n - 1 ; i ++ ) {
rank: 678
score: 99.43373509457237
patch: for ( int i = k + 1 ; i < n ; i ++ ) ) {
rank: 678
score: 99.41386583116319
patch: for ( int i = k + $NUMBER$ ; i < size ; i ++ ) {
rank: 678
score: 99.4117790670956
patch: for ( int i = 0 ; i <= k + k ; i ++ )
rank: 678
score: 99.39922417534723
patch: do { for ( int i = k ; i < n ; i ++ ) {
rank: 679
score: 99.45197889539931
patch: for ( double i = k ; i <= n - 1 ; i ++ ) {
rank: 679
score: 99.44578043619792
patch: if ( ( k == 1 ) || ( k == k - 1 ) ) {
rank: 679
score: 99.42561848958333
patch: for ( int i = k - 0 ; i < 0 ; i ++ ) {
rank: 679
score: 99.411572265625
patch: for ( int i = 0 ; i >= n ; i ++ )
rank: 679
score: 99.39913601345486
patch: for ( int i = k ; i == k + 1 ; i ++ ) {
rank: 679
score: 99.39160874310662
patch: for ( int i = 0 ; i < k ; i ++ ) { )
rank: 679
score: 99.36837565104166
patch: for ( int i = $NUMBER$ ; i == n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 680
score: 99.4517822265625
patch: synchronized ( for ( int i = k + 1 ; i <= n ; i ++ ) {
rank: 680
score: 99.43314401726974
patch: for ( int i = k + 1 ; i >= n + n ; i ++ )
rank: 680
score: 99.41152774586396
patch: for ( int i = $NUMBER$ ; i < 1 ; i ++ ) { {
rank: 680
score: 99.39896647135417
patch: for ( int k = k + 1 ; i >= n ; k ++ ) {
rank: 680
score: 99.39146592881944
patch: for ( int i = k ; i < k - 0 ; i ++ ) {
rank: 681
score: 99.45176937705592
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { n ++ ;
rank: 681
score: 99.42940266927083
patch: for ( int i = $NUMBER$ ; i < 1 - 1 ; i ++ ) {
rank: 681
score: 99.41152774586396
patch: for ( int i = k + $NUMBER$ ; i <= k ; i ++ )
rank: 681
score: 99.39891899956598
patch: for ( int k = k + 1 ; k >= n ; i ++ ) {
rank: 681
score: 99.36774553571429
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum -= Math . log ( double ) i ;
rank: 682
score: 99.45176866319444
patch: if ( ( n == 1 ) || ( k == n - k ) ) {
rank: 682
score: 99.44423421223958
patch: for ( int i = $NUMBER$ - 1 ; i != n ; i ++ ) {
rank: 682
score: 99.42496744791667
patch: for ( int k = k + 1 ; i <= 0 ; i ++ ) {
rank: 682
score: 99.41300241570724
patch: for ( int i = k + 1 ; int i < n ; i -- ) {
rank: 682
score: 99.41073787913604
patch: for ( int i = 0 ; i <= i + 1 ; i ++ )
rank: 682
score: 99.39877158717105
patch: for ( int i = k + 1 ; i >= n ; i -= k ) {
rank: 682
score: 99.36774088541667
patch: for ( int i = $NUMBER$ ; i <= 1 ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 683
score: 99.45176391601562
patch: for ( int i = k + 1 ; i >= $NUMBER$ - k ; i ++ ) {
rank: 683
score: 99.43205430772569
patch: for ( int i = k - n ; i >= n ; i -- ) {
rank: 683
score: 99.42472330729167
patch: for ( int i = k / 1 ; i >= 1 ; i ++ ) {
rank: 683
score: 99.41051528033088
patch: for ( int i = k + n ; i < n ; i ++ )
rank: 683
score: 99.39862419577206
patch: for ( int i = 0 ; i <= n ; ++ ++ i ) {
rank: 683
score: 99.39112764246323
patch: for ( int i = 1 ; i < k ; i ++ ) { {
rank: 683
score: 99.36763640372983
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ; }
rank: 684
score: 99.44367532169117
patch: for ( int i = 0 ; i >> <= n ; i ++ ) {
rank: 684
score: 99.41288248697917
patch: for ( int i = k ; i < n / k ; i ++ ) {
rank: 684
score: 99.41042193244485
patch: for ( int i = k - 1 ; i >= 1 ; i ++ )
rank: 684
score: 99.39851209852431
patch: for ( Iterator i = n + 1 ; i <= k ; i ++ ) {
rank: 685
score: 99.44325166590073
patch: for ( int i = - 1 ; i > k ; i ++ ) {
rank: 685
score: 99.42917887369792
patch: for ( int i = null ; i <= n - 1 ; i ++ ) {
rank: 685
score: 99.40952435661765
patch: for ( int i = k - k ; i <= k ; i ++ )
rank: 685
score: 99.39812554253473
patch: for ( int i = n - 1 ; i >= i ; i -- ) {
rank: 685
score: 99.36709158761161
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( i ) ; }
rank: 686
score: 99.40943818933823
patch: for ( int i = $NUMBER$ ; i <= k ; i ++ ) { }
rank: 686
score: 99.36689453125
patch: for ( int i = $NUMBER$ ; i > 1 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 687
score: 99.42892795138889
patch: for ( int i = k + k ; i < $NUMBER$ ; i ++ ) {
rank: 687
score: 99.41259087456598
patch: for ( String i = k + 1 ; i < k ; i ++ ) {
rank: 687
score: 99.40880629595588
patch: for ( int i = 0 ; i >= k - k ; i ++ )
rank: 687
score: 99.39764404296875
patch: for ( int i = k + 1 ; i >= k ; i -= 1 )
rank: 687
score: 99.38938502261513
patch: for ( int i = k + n ; i <= n ; i ++ ) { )
rank: 687
score: 99.3666755922379
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum . log CaMeL Sum . log CaMeL Sum . {
rank: 688
score: 99.44285673253677
patch: for ( int i = - 1 ; i > $NUMBER$ ; i ++ ) {
rank: 688
score: 99.40866986443015
patch: for ( int i = k ; i >= $NUMBER$ ; i ++ ) { {
rank: 688
score: 99.39741516113281
patch: for ( int i = k ; i >= 1 ; i -- ) {
rank: 689
score: 99.45079956054687
patch: k ! for ( int i = k + 1 ; i <= k ; i ++ ) {
rank: 689
score: 99.44285181949013
patch: for ( int i = 1 ; i <= n - 1 ; i ++ ) { {
rank: 689
score: 99.42840576171875
patch: for ( int i = $NUMBER$ ; i <= n > k ; i ++ ) {
rank: 689
score: 99.41236787683823
patch: for ( int i = 0 ; i < n + 1 ; i -- )
rank: 689
score: 99.4083610983456
patch: for ( int i = $NUMBER$ ; i >= k - 1 ; i ++ )
rank: 689
score: 99.39722397748162
patch: for ( int i = k ; ; i <= n ; i ++ ) {
rank: 689
score: 99.38905736019737
patch: for ( int i = k + n ; i <= n ; i ++ ) { {
rank: 690
score: 99.41219075520833
patch: for ( Class i = k + 1 ; i < n ; i ++ ) {
rank: 690
score: 99.408203125
patch: for ( int i = - 1 ; i <= 1 ; i ++ )
rank: 690
score: 99.39690840871711
patch: for ( Iterator i = n ; i . has CaMeL Next ( ) ; ) { {
rank: 690
score: 99.38894473805146
patch: for ( int i = k + 1 ; i -- <= k ; ) {
rank: 690
score: 99.36514485677084
patch: for ( int i = $NUMBER$ ; i <= $NUMBER$ ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 691
score: 99.45034308182566
patch: for ( int i = k + 1 ; i <= $NUMBER$ ; i ++ ) { {
rank: 691
score: 99.36492288523706
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( n - i ) ;
rank: 692
score: 99.40781537224265
patch: for ( int i = k ; i <= 1 ; i ++ ) { {
rank: 692
score: 99.3968276977539
patch: for ( long i = k ; i <= n ; i ++ ) {
rank: 692
score: 99.36410958426339
patch: for ( int i = $NUMBER$ ; i . < n ; i ++ ) { log CaMeL Sum += Math . log ( i ) ;
rank: 693
score: 99.43110487196181
patch: for ( int i = k ; i < n / $NUMBER$ ; i ++ ) {
rank: 693
score: 99.42329237196181
patch: for ( int i = 0 + $NUMBER$ ; i < k ; i ++ ) {
rank: 693
score: 99.41201300370066
patch: for ( int i = k + 1 ; i < n ; i = i ) {
rank: 693
score: 99.4073974609375
patch: for ( int i = $NUMBER$ ; i > 1 ; i ++ )
rank: 694
score: 99.44959106445313
patch: for ( int i = k + 1 + k ; i < n ; i ++ ) {
rank: 694
score: 99.44261977251838
patch: for ( int i = $NUMBER$ ; i ] <= n ; i ++ ) {
rank: 694
score: 99.43060623972039
patch: * / for ( int i = k + 1 ; i <= n ; i ++ )
rank: 694
score: 99.42757375616776
patch: for ( int i = $NUMBER$ ; i < n + 1 ; i ++ ) { {
rank: 694
score: 99.42308213975694
patch: for ( int i = 1 + 1 ; i <= i ; i ++ ) {
rank: 694
score: 99.40729836856617
patch: for ( int i = k + k ; i != n ; i ++ )
rank: 694
score: 99.39651828342014
patch: for ( double i = k + 1 ; i <= n ; ++ i ) {
rank: 694
score: 99.38843536376953
patch: for ( int i = k ; n < n ; i ++ ) {
rank: 694
score: 99.36382846174568
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( n - k ) ;
rank: 695
score: 99.44956665039062
patch: for ( int i = k + 1 + 1 ; i <= $NUMBER$ ; i ++ ) {
rank: 695
score: 99.41193305121527
patch: for ( int i = k ; i < k - $NUMBER$ ; i ++ ) {
rank: 695
score: 99.40725528492646
patch: for ( int i = $NUMBER$ ; i + 1 == n ; i ++ )
rank: 695
score: 99.39646402994792
patch: for ( double i = n + 1 ; i <= n ; i ++ ) {
rank: 695
score: 99.36358642578125
patch: if ( ( n == 1 ) || ( k == 0 ) ) {
rank: 696
score: 99.449560546875
patch: for ( int i = k + k - 1 ; i >= n ; i ++ ) {
rank: 696
score: 99.43037494860198
patch: for ( int i = n + 1 ; i >= n + 1 ; i ++ )
rank: 696
score: 99.42276340060764
patch: for ( int i = 0 + n ; i < k ; i ++ ) {
rank: 696
score: 99.411865234375
patch: for ( int i = k + 1 ; i < n + ) {
rank: 696
score: 99.39643297697368
patch: for ( int i = k + 1 ; i >= k ; i -- ) { )
rank: 696
score: 99.38772403492646
patch: for ( int i = k + 1 ; i + 1 : n ) {
rank: 696
score: 99.36276041666666
patch: for ( int i = start ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 697
score: 99.43029106987848
patch: for ( int i = k / n ; i < n ; i ++ ) {
rank: 697
score: 99.41178385416667
patch: for ( int i = k + $STRING$ ; i < n ; i ++ ) {
rank: 697
score: 99.40670572916666
patch: for ( int i = null ; i <= n ; i ++ )
rank: 697
score: 99.3963558799342
patch: for ( int i = 0 ; i < n ; i ++ ) { ) { {
rank: 697
score: 99.38759894120066
patch: for ( int i = k + 1 ; i < n ; i ++ ) { ;
rank: 697
score: 99.36276041666666
patch: for ( int i = $NUMBER$ ; i > $NUMBER$ ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 698
score: 99.44203016493056
patch: for ( int i = k + $NUMBER$ ; i > 0 ; i ++ ) {
rank: 698
score: 99.43011795847039
patch: for ( int i = k + n ; i < n ; i ++ ) { {
rank: 698
score: 99.42706976996527
patch: for ( int i = size - 1 ; i < n ; i ++ ) {
rank: 698
score: 99.42251925998264
patch: for ( int i = k - 1 ; i >= length ; i ++ ) {
rank: 698
score: 99.40662339154412
patch: for ( int i = $STRING$ ; i <= n - k ; i ++ )
rank: 698
score: 99.38753509521484
patch: for ( int i = k ; i < start ; i ++ ) {
rank: 698
score: 99.3627197265625
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum = Math . log ( ( double ) i ) ;
rank: 699
score: 99.42243109809027
patch: for ( int i = k + 1 ; i <= max ; i -- ) {
rank: 699
score: 99.41156364889706
patch: for ( int i = 0 ; i <= n + ; i ++ ) {
rank: 699
score: 99.40645105698529
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { )
rank: 699
score: 99.3956298828125
patch: for ( int i = k - 1 ; i >= n ; ++ i ) { {
rank: 699
score: 99.36235981602823
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { double log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 700
score: 99.42690700954861
patch: for ( int i = $NUMBER$ ; i >= $NUMBER$ + 1 ; i ++ ) {
rank: 700
score: 99.42214626736111
patch: for ( int i = 0 - 1 ; i >= 0 ; i ++ ) {
rank: 700
score: 99.40630026424633
patch: for ( int i = $NUMBER$ ; i == k ; i ++ ) { {
rank: 700
score: 99.39555358886719
patch: for ( int k = k ; n <= n ; i ++ ) {
rank: 700
score: 99.38705444335938
patch: for ( int i = n ; i <= 0 ; i ++ ) {
rank: 701
score: 99.44923909505208
patch: k ; for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 701
score: 99.42183430989583
patch: for ( int i = k - 1 ; i < size ; i ++ ) {
rank: 701
score: 99.41146087646484
patch: for ( int i = k ; i < false ; i ++ ) {
rank: 701
score: 99.40589096966912
patch: for ( int i = 0 + $NUMBER$ ; i <= n ; i ++ )
rank: 701
score: 99.39535183376736
patch: try { for ( int i = 0 ; i < n ; i ++ ) {
rank: 701
score: 99.386962890625
patch: for ( int i = 1 ; i < k ; i 1 ++ ) {
rank: 702
score: 99.44080946180556
patch: for ( int i = $NUMBER$ ; i == k - k ; i ++ ) {
rank: 702
score: 99.4294497841283
patch: for ( int i = k / 1 ; i <= n ; i ++ ) { {
rank: 702
score: 99.41141764322917
patch: for ( int i = k + 1 ; 1 <= n ; ++ i ) {
rank: 702
score: 99.39497375488281
patch: for ( int k = k ; k <= n ; i ++ ) {
rank: 702
score: 99.38646175986842
patch: for ( int i = k ; i <= k ; i ++ ) { i ++ {
rank: 702
score: 99.36125235721983
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( n - i ) ;
rank: 703
score: 99.42165798611111
patch: for ( int i = 0 + $NUMBER$ ; i <= 1 ; i ++ ) {
rank: 703
score: 99.40521599264706
patch: if ( ( k == $NUMBER$ ) || ( k == n - 1 ) )
rank: 703
score: 99.39483642578125
patch: for ( int k = k - 1 ; i >= n ; k -- ) {
rank: 703
score: 99.36121026400862
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ;
rank: 704
score: 99.44048394097223
patch: for ( int i = 0 ; i > k + 1 ; i ++ ) {
rank: 704
score: 99.42569986979167
patch: for ( int i = k + k ; i > $NUMBER$ ; i ++ ) {
rank: 704
score: 99.40502211626838
patch: for ( int i = - k ; i <= $NUMBER$ ; i ++ ) {
rank: 704
score: 99.38584989659927
patch: for ( int i = 1 ; i <= n 1 ; i ++ ) {
rank: 705
score: 99.44893798828124
patch: for ( int i = $NUMBER$ ; i <= n - 1 ; i ++ ) { System .
rank: 705
score: 99.42542182074652
patch: for ( int i = $NUMBER$ ; i >= 1 + 1 ; i ++ ) {
rank: 705
score: 99.41094292534723
patch: for ( int i = 0 ; i <= n + 1 ; ++ i ) {
rank: 705
score: 99.40460611979167
patch: for ( int i = n ; i <= n ; i ++ )
rank: 705
score: 99.38571648848684
patch: for ( int i = k ; i <= n ; i ++ ) { n -- {
rank: 705
score: 99.3605712890625
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( String ) i ) ;
rank: 706
score: 99.44879150390625
patch: k ! for ( int i = k + $NUMBER$ ; i <= n ; i ++ ) {
rank: 706
score: 99.44004193474265
patch: for ( int i = 0 ; i <= - k ; i ++ ) {
rank: 706
score: 99.42904842601104
patch: for ( int i = k + 1 ; i >= i ; i ++ )
rank: 706
score: 99.42091878255208
patch: for ( int i = k / 1 ; i < k ; i ++ ) {
rank: 706
score: 99.41058349609375
patch: for ( int i = 0 ; i < true ; i ++ ) {
rank: 706
score: 99.40428969439338
patch: for ( int i = $NUMBER$ ; i <= 1 - 1 ; i ++ )
rank: 706
score: 99.39466010199652
patch: for ( int k = k + 1 ; n >= n ; k ++ ) {
rank: 706
score: 99.36040207435344
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i - i ) ;
rank: 707
score: 99.40428059895834
patch: for ( int i = 0 ; i <= i ; i ++ )
rank: 707
score: 99.38330078125
patch: for ( int i = k + 1 < n ; i ++ ) {
rank: 707
score: 99.35987955729166
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( float ) i ) ;
rank: 708
score: 99.40426815257354
patch: for ( int i = k + 1 ; i != $NUMBER$ ; i ++ )
rank: 708
score: 99.39458550347223
patch: for ( double i = k + 1 ; i < k ; i ++ ) {
rank: 708
score: 99.38316434972427
patch: for ( int i = 0 ; i <= k 1 ; i ++ ) {
rank: 708
score: 99.35972016433189
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i )
rank: 709
score: 99.42062717013889
patch: for ( int i = k + $NUMBER$ ; i <= size ; i ++ ) {
rank: 709
score: 99.41034613715277
patch: for ( int i = k + 1 ; i < start ; i -- ) {
rank: 709
score: 99.40383731617646
patch: for ( int i = 1 ; i <= n ; i ++ ) { }
rank: 709
score: 99.39454561121323
patch: for ( int i = k + 1 ; i >= ; i ++ ) {
rank: 709
score: 99.38283177425987
patch: for ( int i = k ; i < k + 1 ; i ++ ) { )
rank: 709
score: 99.35966796875
patch: for ( int i = k ; i <= k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 710
score: 99.44779663085937
patch: for ( int i = k + n + k ; i <= n ; i ++ ) {
rank: 710
score: 99.4036865234375
patch: for ( int i = k ; i <= i - k ; i ++ )
rank: 710
score: 99.39453803168402
patch: for ( int i = k - 1 ; i >= 0 ; -- i ) {
rank: 710
score: 99.35891927083334
patch: for ( int i = $NUMBER$ ; i >= 0 ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 711
score: 99.44778262867646
patch: for ( k = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 711
score: 99.41028510199652
patch: for ( int i = 0 ; i <= n ; ( i ++ ) ) {
rank: 711
score: 99.4029900045956
patch: for ( int i = $NUMBER$ ; i == $NUMBER$ ; i ++ ) { {
rank: 712
score: 99.4476806640625
patch: for ( int i = k + k ; i <= n - 0 ; i ++ ) {
rank: 712
score: 99.4228579872533
patch: for ( int i = $NUMBER$ + 1 ; i < n ; i ++ ) { {
rank: 712
score: 99.41985762746711
patch: for ( int i = k + 1 ; i >= n ; i ++ ) { }
rank: 712
score: 99.4101921530331
patch: for ( int i = k + 1 ; ++ i <= n ; ) {
rank: 712
score: 99.40254720052083
patch: for ( int i = k ; i != n ; i ++ )
rank: 712
score: 99.39435492621527
patch: for ( double i = k + 1 ; i >= 0 ; i -- ) {
rank: 712
score: 99.38220932904412
patch: for ( int i = 1 ; i < k ; i ++ ) { )
rank: 712
score: 99.35865099676724
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i - 1 ) ;
rank: 713
score: 99.447509765625
patch: for ( double i = $NUMBER$ ; i <= n - k - k ; i ++ ) {
rank: 713
score: 99.42802159926471
patch: for ( final int i = k ; i < n ; i ++ ) {
rank: 713
score: 99.41016981336806
patch: for ( int i = k + 1 ; i < null ; i -- ) {
rank: 713
score: 99.40244427849265
patch: for ( int i = $NUMBER$ + 1 ; i != n ; i ++ )
rank: 713
score: 99.38202667236328
patch: for ( int i = k ; k <= n ; i ++ ) {
rank: 714
score: 99.44739990234375
patch: for ( int i = k + 1 ; i <= 0 - k ; i ++ ) {
rank: 714
score: 99.42153930664062
patch: for ( int i = min ; i <= n ; i ++ ) {
rank: 714
score: 99.41966417100694
patch: / * for ( int i = 0 ; i < k ; i ++ ) {
rank: 714
score: 99.40996636284723
patch: for ( int i = 0 ; i <= k + 0 ; i ++ ) {
rank: 714
score: 99.4023796530331
patch: for ( int i = $NUMBER$ ; i , i <= n ; i ++ )
rank: 714
score: 99.39429995888158
patch: for ( int i = k - 1 ; i >= k ; i -= n ) {
rank: 714
score: 99.38201545266544
patch: for ( int i = 1 ; i <= k ; i 1 ++ ) {
rank: 714
score: 99.35779622395833
patch: for ( int i = 1 ; i <= i ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 715
score: 99.42746310763889
patch: for ( int i = k & 1 ; i < n ; i ++ ) {
rank: 715
score: 99.40184110753677
patch: for ( int i = $NUMBER$ - 1 ; i <= k ; i ++ )
rank: 715
score: 99.38186806126645
patch: for ( int i = k ; i <= k ; i ++ ) { i ++ ;
rank: 715
score: 99.357666015625
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( double ) n ;
rank: 716
score: 99.44725799560547
patch: for ( double i = 1 ; i <= n ; i ++ ) {
rank: 716
score: 99.42723324424342
patch: for ( int i = k + 1 ; i < n - n ; i ++ )
rank: 716
score: 99.42033386230469
patch: for ( int n = $NUMBER$ ; i <= n ; i ++ ) {
rank: 716
score: 99.41951069078948
patch: for ( int i = 0 + 1 ; i <= n ; i ++ ) { }
rank: 716
score: 99.40089326746323
patch: for ( int int i = $NUMBER$ ; i < n ; i ++ ) {
rank: 716
score: 99.39415825737848
patch: z ; for ( int i = 0 ; i <= n ; i ++ ) {
rank: 716
score: 99.38182067871094
patch: for ( int i = k ; i <= n ; i 1 ) {
rank: 717
score: 99.42003631591797
patch: for ( int i = 1 ; i < $NUMBER$ ; i ++ ) {
rank: 717
score: 99.40984143708882
patch: for ( int i = k + $NUMBER$ ; i >= - 1 ; i -- ) {
rank: 717
score: 99.40080710018383
patch: for ( int i = $NUMBER$ ; i <= n : n ; i ++ )
rank: 717
score: 99.39407509251645
patch: for ( Iterator i = k ; i . has CaMeL Next ( ) ; ) { {
rank: 717
score: 99.35702950613839
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( new double ) ;
rank: 718
score: 99.44663696289062
patch: for ( int i = k + k ; i >= n - k ; i ++ ) {
rank: 718
score: 99.41935221354167
patch: for ( int i = k * 0 ; i <= n ; i ++ ) {
rank: 718
score: 99.40956624348958
patch: for ( int i = 0 ; i < k / n ; i ++ ) {
rank: 718
score: 99.39401584201389
patch: for ( int k = k + 1 ; n >= n ; i -- ) {
rank: 718
score: 99.35701497395833
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( double ) ( i ) ;
rank: 719
score: 99.42694413034539
patch: for ( int i = k + k + 1 ; i < n ; i ++ )
rank: 719
score: 99.40938568115234
patch: for ( int i = 0 ; i < value ; i ++ ) {
rank: 719
score: 99.3939144736842
patch: for ( double i = k + 1 ; i < n ; i ++ ) { {
rank: 719
score: 99.3809814453125
patch: final for ( int i = k ; i <= k ; i ++ ) {
rank: 719
score: 99.3567626953125
patch: for ( int i = $NUMBER$ ; i <= n ; ++ i ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 720
score: 99.44657817639802
patch: / for ( int i = k + k ; i <= n ; i ++ ) {
rank: 720
score: 99.41883042279412
patch: for ( int i = 0 ; i ++ <= n ; i ++ ) {
rank: 720
score: 99.40904405381944
patch: for ( int i = k + 1 ; 1 < n ; i -- ) {
rank: 720
score: 99.40004595588235
patch: for ( int i = 0 ; i == n - k ; i ++ )
rank: 720
score: 99.38093647203948
patch: for ( int i = k ; i < n ; i ++ ) { ) { }
rank: 721
score: 99.44655890213816
patch: for ( int i = k + 1 ; i <= n ; i ++ ) continue ;
rank: 721
score: 99.42682243795956
patch: for ( int i = n ; i < n ; i ++ ) { {
rank: 721
score: 99.41904703776042
patch: for ( int i = k * 1 ; i < 1 ; i ++ ) {
rank: 721
score: 99.41841848273026
patch: for ( int i = $NUMBER$ ; i <= n + k ; i ++ ) { {
rank: 721
score: 99.40888129340277
patch: for ( int i = k ; i < n * n ; i ++ ) {
rank: 721
score: 99.39974212646484
patch: for ( int i = $NUMBER$ ; i != 0 ; i ++ ) {
rank: 721
score: 99.38075884650735
patch: for ( int i = k ; i <= n ; i ] ++ ) {
rank: 722
score: 99.44636840820313
patch: for ( int i = k + k ; i > n - k ; i ++ ) {
rank: 722
score: 99.43766515395221
patch: for ( int i = - 1 ; i > n ; i ++ ) {
rank: 722
score: 99.40886094835069
patch: for ( int i = k + 1 ; i >= $NUMBER$ ; ++ i ) {
rank: 722
score: 99.39957921645221
patch: for ( int int i = k ; i <= n ; i ++ ) {
rank: 722
score: 99.38043571920956
patch: for ( int i = k ; i + 1 : n + 1 ) {
rank: 722
score: 99.35548502604166
patch: for ( int i = 0 ; i <= i ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 723
score: 99.43762885199652
patch: for ( int i = $NUMBER$ ; i > $NUMBER$ - 1 ; i ++ ) {
rank: 723
score: 99.4267513877467
patch: * for ( int i = k ; i < n + 1 ; i ++ ) {
rank: 723
score: 99.41815185546875
patch: for ( int i = k + $NUMBER$ ; i >= i ; i ++ ) {
rank: 723
score: 99.39955767463235
patch: for ( int k = k + 1 ; i <= n ; i ++ )
rank: 723
score: 99.38031327097039
patch: for ( int i = k ; i < k ; i ++ ) { i ++ {
rank: 723
score: 99.35503743489583
patch: for ( int i = $NUMBER$ ; i >= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 724
score: 99.41810438368056
patch: for ( int i = k - 1 ; i != 0 ; i ++ ) {
rank: 724
score: 99.40867614746094
patch: for ( int i = 0 ; i <= $STRING$ ; i -- ) {
rank: 724
score: 99.39948586856617
patch: for ( int i = 0 + 1 ; i <= 1 ; i ++ )
rank: 724
score: 99.39354112413194
patch: for ( Iterator i = k + 1 ; i <= k ; i ++ ) {
rank: 724
score: 99.3800277709961
patch: for ( int i = n ; i < 1 ; i ++ ) {
rank: 724
score: 99.35450060614224
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( n - k ) ;
rank: 725
score: 99.4461181640625
patch: for ( int i = k + k ; i <= n - $NUMBER$ ; i ++ ) {
rank: 725
score: 99.43741183810764
patch: for ( int i = $NUMBER$ + 1 + i <= n ; i ++ ) {
rank: 725
score: 99.40854899088542
patch: for ( int i = k + 1 ; i >= start ; i -- ) {
rank: 725
score: 99.3988037109375
patch: for ( int i = k + k ; i <= 0 ; i ++ )
rank: 725
score: 99.39345974392361
patch: for ( int i = 0 . 0 ; i < n ; i ++ ) {
rank: 725
score: 99.37995062934027
patch: for ( int i = k + 1 ; i ++ ++ <= n ; ) {
rank: 725
score: 99.35432942708333
patch: for ( int i = $NUMBER$ ; i > k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 726
score: 99.43735080295139
patch: for ( int i = 0 + 1 ; i > $NUMBER$ ; i ++ ) {
rank: 726
score: 99.41793484157986
patch: for ( int i = k - 0 ; i >= n ; i ++ ) {
rank: 726
score: 99.40802360983456
patch: for ( int i = k + 1 ; i < k ; i -- )
rank: 726
score: 99.39871978759766
patch: for ( int i = - 1 ; i == n ; i ++ )
rank: 726
score: 99.39341735839844
patch: for ( int k = k ; k <= n ; k ++ ) {
rank: 726
score: 99.37990851151316
patch: for ( int i = k + 1 ; i >= 1 ; i ++ ) { )
rank: 726
score: 99.35430697737068
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( $STRING$ , i ) ;
rank: 727
score: 99.44538959703948
patch: for ( k = k + 1 ; i <= n - 1 ; i ++ ) {
rank: 727
score: 99.43720838758681
patch: for ( int i = k ; i > k - k ; i ++ ) {
rank: 727
score: 99.4163818359375
patch: for ( int i = - 1 ; i <= i ; i ++ ) {
rank: 727
score: 99.40780300564236
patch: for ( int i = 0 ; i < n ; i - 1 ++ ) {
rank: 727
score: 99.39840877757354
patch: for ( int i = $NUMBER$ - 1 ; i <= $NUMBER$ ; i ++ )
rank: 727
score: 99.39288330078125
patch: for ( int i = i - 1 ; i >= k ; i -- ) {
rank: 727
score: 99.37986845128677
patch: for for ( int i = 0 ; i <= n ; i ++ ) {
rank: 727
score: 99.3538589477539
patch: for ( int i = k + 1 ; i < n - k ;
rank: 728
score: 99.44527180989583
patch: k ! for ( int i = $NUMBER$ ; i <= $NUMBER$ ; i ++ ) {
rank: 728
score: 99.41636898643092
patch: for ( int i = k + k ; i < n ; i ++ ) { {
rank: 728
score: 99.40774875217014
patch: for ( long i = k + 1 ; i < n ; i -- ) {
rank: 728
score: 99.3797607421875
patch: for ( int i = k ; i <= 0 ; i ++ ) { ) {
rank: 728
score: 99.35358072916667
patch: for ( int i = $NUMBER$ ; i < i ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 729
score: 99.42613461143092
patch: / * for ( int i = k + 1 ; i < n ; i ++ )
rank: 729
score: 99.40772162543402
patch: for ( int i = k + 0 ; i < n ; ++ i ) {
rank: 729
score: 99.39286723889802
patch: for ( int i = k + 1 ; i != k ; i ++ ) { {
rank: 729
score: 99.3795525045956
patch: for ( int i = k $NUMBER$ ; i <= n ; i ++ ) {
rank: 729
score: 99.3533935546875
patch: for ( int i = k ; i >= $NUMBER$ ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 730
score: 99.43648274739583
patch: for ( int i = $NUMBER$ ; i > n + 1 ; i ++ ) {
rank: 730
score: 99.40770806206598
patch: for ( int i = k + $NUMBER$ ; i <= $STRING$ ; i ++ ) {
rank: 730
score: 99.39774816176471
patch: for ( long i = k + 1 ; i <= n ; i ++ )
rank: 731
score: 99.44485634251645
patch: for ( int int i = k + k ; i <= n ; i ++ ) {
rank: 731
score: 99.4166259765625
patch: for ( int i = k + $NUMBER$ ; i <= start ; i ++ ) {
rank: 731
score: 99.40749104817708
patch: for ( int i = k - $NUMBER$ ; i < n ; i -- ) {
rank: 731
score: 99.39271375868056
patch: for ( int n = k - 1 ; n <= n ; i ++ ) {
rank: 731
score: 99.353076171875
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum = Math . log ( ( double ) i ) ;
rank: 732
score: 99.43587000229779
patch: for ( int i = - 1 ; i > 0 ; i ++ ) {
rank: 732
score: 99.41660563151042
patch: for ( int i = k + 1 ; i <= n ; length ++ ) {
rank: 732
score: 99.39728860294117
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { ;
rank: 732
score: 99.37899619654605
patch: for ( int i = k ; i <= k - 1 ; i ++ ) { {
rank: 732
score: 99.35296433971774
patch: for ( int i = - 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 733
score: 99.41427612304688
patch: for ( int i = $NUMBER$ ; i <= size ; i ++ ) {
rank: 733
score: 99.39251030815973
patch: for ( int i = k + 1 ; i < n ; ++ ++ i )
rank: 733
score: 99.37891909950658
patch: for ( int i = k ; i <= k + 1 ; i ++ ) { )
rank: 733
score: 99.35292154947916
patch: for ( int i = 1 ; i >= 1 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 734
score: 99.43561469184027
patch: for ( int i = k + 0 ; i > $NUMBER$ ; i ++ ) {
rank: 734
score: 99.41390228271484
patch: for ( int k = $NUMBER$ ; i < n ; i ++ ) {
rank: 734
score: 99.40739610460069
patch: for ( int i = 0 ; i < n + 0 ; i -- ) {
rank: 734
score: 99.3970588235294
patch: for ( int i = $NUMBER$ + 1 ; i <= 0 ; i ++ )
rank: 734
score: 99.39224243164062
patch: for ( int k = 0 ; k <= n ; i ++ ) {
rank: 735
score: 99.44363742404514
patch: for ( double i = k + 1 ; i <= $NUMBER$ ; i ++ ) {
rank: 735
score: 99.41634114583333
patch: for ( int i = k - 0 ; i <= k ; i ++ ) {
rank: 735
score: 99.4136734008789
patch: for ( int i = 0 ; i != k ; i ++ ) {
rank: 735
score: 99.40738932291667
patch: for ( int i = n + $NUMBER$ ; i < n ; i -- ) {
rank: 735
score: 99.39692239200367
patch: for ( int i = $NUMBER$ ; i + k <= n ; i ++ )
rank: 735
score: 99.39220473345588
patch: for ( int i = n + 1 ; i >= n ; i -- )
rank: 735
score: 99.3788833618164
patch: for ( int i = k ; n <= n ; i ++ ) {
rank: 735
score: 99.35276745211694
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ; }
rank: 736
score: 99.41266832853618
patch: for ( int i = k + 1 ; i <= n : n - 1 ) {
rank: 736
score: 99.39214728860294
patch: for ( double i = k + 1 ; i < n ; i ++ )
rank: 736
score: 99.37853285845588
patch: } for ( int i = k ; i <= k ; i ++ ) {
rank: 737
score: 99.4239437705592
patch: for ( int i = n + 1 ; i < n - 1 ; i ++ )
rank: 737
score: 99.39643859863281
patch: for ( n = k + 1 ; i <= n ; i ++ )
rank: 737
score: 99.37765502929688
patch: for ( int n = k ; n < n ; i ++ ) {
rank: 737
score: 99.35250651041666
patch: for ( int i = $NUMBER$ ; i <= 0 ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 738
score: 99.42373996310764
patch: for ( int i = k * k ; i < n ; i ++ ) {
rank: 738
score: 99.40719943576389
patch: for ( Integer i = k + 1 ; i < n ; i -- ) {
rank: 738
score: 99.39641256893383
patch: for ( int i = $STRING$ ; i <= n ; i ++ ) { {
rank: 738
score: 99.39189317491319
patch: for ( Number i = k + 1 ; i >= n ; i -- ) {
rank: 738
score: 99.3775699013158
patch: for ( int i = k ; i < n ; i ++ ) { n -- ;
rank: 739
score: 99.44266086154514
patch: if ( ( n == k ) || ( k == n - k ) ) {
rank: 739
score: 99.40707736545139
patch: for ( int i = 0 ; i < length + 1 ; i ++ ) {
rank: 739
score: 99.39633358226104
patch: for ( int i = k ; i >= - k ; i ++ ) {
rank: 739
score: 99.39189147949219
patch: for ( int k = 0 ; n < n ; k ++ ) {
rank: 739
score: 99.37738358347039
patch: for ( int i = k ; i <= n ; i ++ ) { ++ i ;
rank: 739
score: 99.3523370150862
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( double ) i ) ;
rank: 740
score: 99.42347627527573
patch: for ( int i = k ; i < n + $NUMBER$ ; i ++ )
rank: 740
score: 99.40702739514802
patch: for ( int i = k + $NUMBER$ ; i < - 1 ; i -- ) {
rank: 740
score: 99.39632415771484
patch: for ( int i = k ; i == $NUMBER$ ; i ++ ) {
rank: 740
score: 99.35208333333334
patch: for ( int i = 0 ; i <= 1 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 741
score: 99.43516031901042
patch: for ( int i = 0 ; i > n - 1 ; i ++ ) {
rank: 741
score: 99.41577826605902
patch: for ( int i = 0 + 1 ; i > n ; i ++ ) {
rank: 741
score: 99.40956744025735
patch: for ( int i = $NUMBER$ ; i <= n ] ; i ++ ) {
rank: 741
score: 99.39604635799633
patch: for ( int i = k - k ; i >= $NUMBER$ ; i ++ )
rank: 741
score: 99.391845703125
patch: for ( int n = 0 ; n <= n ; n ++ ) {
rank: 741
score: 99.37664473684211
patch: for ( int i = k ; i < k - 1 ; i ++ ) { {
rank: 741
score: 99.35205078125
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( i - i ) ;
rank: 742
score: 99.42320492393092
patch: for ( int i = 1 ; i < n ; i ++ ) { i ++ ;
rank: 742
score: 99.41568332248264
patch: for ( int i = 0 + 0 ; i <= 1 ; i ++ ) {
rank: 742
score: 99.40689849853516
patch: for ( int i = k ; i < length ; i ++ ) {
rank: 742
score: 99.39568732766544
patch: for ( int i = $NUMBER$ - k ; i <= n ; i ++ )
rank: 742
score: 99.3918228149414
patch: for ( int i = k ; i > 0 ; i -- ) {
rank: 742
score: 99.35190255301339
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i - ) ;
rank: 743
score: 99.44189453125
patch: for ( double i = $NUMBER$ + 1 ; i <= n ; i ++ ) {
rank: 743
score: 99.40681966145833
patch: for ( int i = k ; i <= k - $NUMBER$ ; i ++ ) {
rank: 743
score: 99.39552217371323
patch: for ( int i = - $NUMBER$ ; i < n ; i ++ ) {
rank: 743
score: 99.39177788628473
patch: for ( int k = k + 1 ; n >= n ; k -- ) {
rank: 743
score: 99.37477740119485
patch: for ( int i = k ; i <= n ; i ++ ) { ;
rank: 744
score: 99.43463812934027
patch: for ( int i = n + 1 ; i > 1 ; i ++ ) {
rank: 744
score: 99.40676540798611
patch: for ( int i = 0 ; i < n * n ; i ++ ) {
rank: 744
score: 99.395166015625
patch: for ( int i = $NUMBER$ ; i == 1 ; i ++ )
rank: 744
score: 99.3917236328125
patch: for ( int k = 0 ; n < n ; i ++ ) {
rank: 744
score: 99.3740170127467
patch: for ( int i = k + 1 ; i <= n ; ++ i ) { )
rank: 744
score: 99.35130208333334
patch: for ( int i = $STRING$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 745
score: 99.40666368272569
patch: for ( int i = 0 ; i <= n * n ; i ++ ) {
rank: 745
score: 99.39170435855263
patch: for ( int i = k + 1 ; i > k ; i -- ) { {
rank: 745
score: 99.37399773848684
patch: for ( int i = k ; i <= n ; i ++ ) { ++ n ;
rank: 745
score: 99.3512939453125
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) n ) ;
rank: 746
score: 99.44039113898026
patch: for ( int i = k + k ; i <= n ; i ++ ) { }
rank: 746
score: 99.41546630859375
patch: for ( int i = 1 + $NUMBER$ ; i < n ; i ++ ) {
rank: 746
score: 99.40665690104167
patch: for ( int i = 0 ; i <= n / 1 ; i -- ) {
rank: 746
score: 99.39151340060764
patch: for ( int i = k ; i != k + 1 ; i ++ ) {
rank: 746
score: 99.37387566817434
patch: for ( int i = k ; i <= n ; i ++ ) { i -- ;
rank: 746
score: 99.35128348214286
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i
rank: 747
score: 99.43405490451389
patch: for ( int i = $NUMBER$ - 1 ; i >= 0 ; i ++ ) {
rank: 747
score: 99.40633138020833
patch: for ( int i = n + 1 ; i < 0 ; i -- ) {
rank: 747
score: 99.39488309972427
patch: for ( int i = 0 ; i <= i + k ; i ++ )
rank: 747
score: 99.39124213324652
patch: n ; for ( int i = 0 ; i < n ; i ++ ) {
rank: 747
score: 99.3510009765625
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( byte ) i ) ;
rank: 748
score: 99.43987073396382
patch: for ( n = k + 1 ; i <= n - k ; i ++ ) {
rank: 748
score: 99.40632459852431
patch: for ( int i = k + 1 ; 1 <= k ; i ++ ) {
rank: 748
score: 99.39486694335938
patch: for ( int i = $NUMBER$ ; i <= max ; i ++ ) {
rank: 748
score: 99.39118109809027
patch: for ( int n = k + 1 ; i <= n ; n ++ ) {
rank: 748
score: 99.37356906467014
patch: for ( int i = k + 1 ; i <= n ; i ] ) {
rank: 748
score: 99.35021551724138
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i , i ) ;
rank: 749
score: 99.43317328559027
patch: for ( int i = 1 + 1 ; i != n ; i ++ ) {
rank: 749
score: 99.40630139802632
patch: for ( int i = k ; i < n + 1 ; i += 1 ) {
rank: 749
score: 99.39117431640625
patch: for ( int n = k + 1 ; n >= 0 ; n -- ) {
rank: 749
score: 99.35006510416666
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( int ) i ) ;
rank: 750
score: 99.43316650390625
patch: for ( int i = $NUMBER$ ; i <= false ; i ++ ) {
rank: 750
score: 99.41470675998264
patch: for ( int i = start + 1 ; i < 0 ; i ++ ) {
rank: 750
score: 99.40621609157986
patch: for ( int i = k + 1 ; i <= false ; i -- ) {
rank: 750
score: 99.394287109375
patch: for ( int i = max + 1 ; i <= n ; i ++ )
rank: 750
score: 99.390869140625
patch: for ( int i = k + 1 ; i -- >= 0 ; i -- ) {
rank: 750
score: 99.34905598958333
patch: for ( int i = $NUMBER$ ; i <= n ; i -- ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 751
score: 99.43295769942434
patch: for ( int i = k + 1 ; i >= $NUMBER$ ; i ++ ) { {
rank: 751
score: 99.42110402960526
patch: for ( int i = n + 1 ; i >= n + 1 ; i -- )
rank: 751
score: 99.41468641493056
patch: for ( int i = 0 + n ; i <= 1 ; i ++ ) {
rank: 751
score: 99.39074028862848
patch: for ( int i = 1 + 1 ; i >= k ; i -- ) {
rank: 752
score: 99.4205322265625
patch: for ( int i = k + n + 1 ; i < n ; i ++ )
rank: 752
score: 99.41434733072917
patch: for ( int i = k - 0 ; i < k ; i ++ ) {
rank: 752
score: 99.40610223067434
patch: for ( int i = k + - 1 ; i <= n ; i -- ) {
rank: 752
score: 99.39396158854167
patch: for ( int i = 0 ; i < $NUMBER$ ; i ++ )
rank: 752
score: 99.39072779605263
patch: for ( int i = k + 1 - 1 ; i <= n ; i ++ )
rank: 752
score: 99.37284088134766
patch: for ( int i = n ; i < 0 ; i ++ ) {
rank: 752
score: 99.34878434806035
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( n - k ) ;
rank: 753
score: 99.40604654947917
patch: for ( int i = 0 ; i < n + k ; i -- ) {
rank: 753
score: 99.40378289473684
patch: for ( int i = k + 1 ; i < n ; i ++ ) break ;
rank: 753
score: 99.39381408691406
patch: for ( final int i = $NUMBER$ ; i <= n ; i ++ )
rank: 753
score: 99.37274491159539
patch: for ( int i = k ; i < k ; i ++ ) { i ++ ;
rank: 753
score: 99.34876751077586
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i - k ) ;
rank: 754
score: 99.43792046440973
patch: for ( int i = $NUMBER$ + k ; i <= $NUMBER$ ; i ++ ) {
rank: 754
score: 99.41998291015625
patch: for ( int i = i ; i <= n + 1 ; i ++ ) {
rank: 754
score: 99.4141845703125
patch: for ( int i = k - 1 ; i < n ; i ++ ) { }
rank: 754
score: 99.4033203125
patch: for ( int i = $NUMBER$ ; i == n 1 ; i ++ ) {
rank: 754
score: 99.39356904871323
patch: for ( int i = k - 1 ; i > $NUMBER$ ; i ++ )
rank: 754
score: 99.39038764105902
patch: for ( ; i = k + 1 ; i < n ; i ++ ) {
rank: 754
score: 99.34801432291667
patch: for ( int i = 1 ; i >= $NUMBER$ ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 755
score: 99.41950819227431
patch: * for ( int i = k + 1 ; i < n ; i ++ )
rank: 755
score: 99.40549045138889
patch: for ( int i = k + 1 ; k < n ; i -- ) {
rank: 755
score: 99.39000701904297
patch: for ( int i = 1 ; i >= 0 ; i -- ) {
rank: 755
score: 99.3724006204044
patch: for ( int i i = 1 ; i <= n ; i ++ ) {
rank: 755
score: 99.34786671605603
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( n - i ) ;
rank: 756
score: 99.43730725740132
patch: / for ( int i = $NUMBER$ ; i <= n - 1 ; i ++ ) {
rank: 756
score: 99.4324951171875
patch: for ( int i = k + k ; i > 0 ; i ++ ) {
rank: 756
score: 99.41945286800987
patch: for ( int i = k + 1 ; i < n / $NUMBER$ ; i ++ )
rank: 756
score: 99.39328182444854
patch: for ( int i = $NUMBER$ ; i != k ; i ++ ) { {
rank: 756
score: 99.38968658447266
patch: for ( int k = 0 ; k <= n ; k ++ ) {
rank: 756
score: 99.34781620420259
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( i + i ) ;
rank: 757
score: 99.41366916232639
patch: for ( int i = k + 1 ; i <= max ; ++ i ) {
rank: 757
score: 99.39319565716912
patch: for ( int i = k + 1 ; i <= n : n ) {
rank: 757
score: 99.38962689568015
patch: for ( int i = 0 ; i < n ; ++ i ) { {
rank: 757
score: 99.37166555304276
patch: for ( int i = k + 1 ; i <= i ; i ++ ) { )
rank: 757
score: 99.3474609375
patch: for ( int i = $NUMBER$ ; i != n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 758
score: 99.43690321180556
patch: k ! for ( int i = $NUMBER$ ; i <= k ; i ++ ) {
rank: 758
score: 99.40485582853618
patch: for ( int i = 0 ; i <= n + 1 ; i += 1 ) {
rank: 758
score: 99.39311667049633
patch: for ( int i = $NUMBER$ ; i <= $NUMBER$ + 1 ; i ++ )
rank: 758
score: 99.34730631510416
patch: for ( int i = 1 ; i <= k ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 759
score: 99.43218315972223
patch: for ( int i = k - 0 ; i == n ; i ++ ) {
rank: 759
score: 99.41928582442434
patch: for ( int i = k + 1 ; i >= n ; i += n ) {
rank: 759
score: 99.41353352864583
patch: for ( int i = k - $NUMBER$ ; i <= i ; i ++ ) {
rank: 759
score: 99.40481728001645
patch: for ( int i = k + 1 ; i >> <= n ; i -- ) {
rank: 759
score: 99.4016342163086
patch: for ( int i = $NUMBER$ + k <= n ; i ++ ) {
rank: 759
score: 99.39298741957721
patch: for ( int i = k + 0 ; i <= $NUMBER$ ; i ++ )
rank: 759
score: 99.38944498697917
patch: for ( int i + 1 = 0 ; i <= n ; i ++ ) {
rank: 759
score: 99.37028503417969
patch: for ( int i = Math ; i <= k ; i ++ ) {
rank: 759
score: 99.3472100619612
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( i - i ) ;
rank: 760
score: 99.43217917049633
patch: for ( int i = 1 ; i <= - 1 ; i ++ ) {
rank: 760
score: 99.41899278428819
patch: for ( int i = k ; i < n . length ; i ++ ) {
rank: 760
score: 99.39296875
patch: for ( int i = 1 ; i == n ; i ++ )
rank: 760
score: 99.38944498697917
patch: for ( int i = k + 1 ; i >= n ; ++ ++ i )
rank: 760
score: 99.3702751608456
patch: for ( int i = k + 1 ; i += n + 1 ) {
rank: 760
score: 99.34704196068549
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ; }
rank: 761
score: 99.43609619140625
patch: / / for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 761
score: 99.41885536595395
patch: for ( final int i = 0 ; i < n + 1 ; i ++ ) {
rank: 761
score: 99.41318766276042
patch: for ( int i = k + 1 ; i >= false ; i ++ ) {
rank: 761
score: 99.37013646175987
patch: for ( int i = k ; i < n ; i ++ ) { n -- {
rank: 761
score: 99.34666285021552
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( double ) i ) ;
rank: 762
score: 99.40420871310764
patch: for ( int i = value + 1 ; i < n ; i ++ ) {
rank: 762
score: 99.39281508501838
patch: for ( int i = - k ; i <= k ; i ++ ) {
rank: 762
score: 99.38930792557566
patch: for ( int i = k - 1 ; i >= 0 ; i -= k ) {
rank: 762
score: 99.36981879340277
patch: for ( int i = k + 1 ; i <= n ; i ++ ) throws
rank: 762
score: 99.34611002604167
patch: for ( int i = $NUMBER$ ; i > 0 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 763
score: 99.41285536024306
patch: for ( int i = k + 1 ; i >= i ; ++ i ) {
rank: 763
score: 99.40409581801471
patch: for ( int i = k ; i < - $NUMBER$ ; i ++ ) {
rank: 763
score: 99.40076446533203
patch: for ( int i = this ; i <= n ; i ++ ) {
rank: 763
score: 99.38898468017578
patch: for ( int k = k ; n <= n ; k ++ ) {
rank: 764
score: 99.41276719835069
patch: for ( int i = k * 1 ; i <= n ; i -- ) {
rank: 764
score: 99.40352590460526
patch: for ( int i = k + 1 ; i < n ; i += k ) {
rank: 764
score: 99.39208984375
patch: for ( int i = $NUMBER$ ; i >= k + k ; i ++ )
rank: 764
score: 99.38875325520833
patch: for ( char i = k + 1 ; i < n ; i ++ ) {
rank: 764
score: 99.34529113769531
patch: for ( int i = k ] ; i <= n ; i ++ )
rank: 765
score: 99.43404990748355
patch: for ( int i = $NUMBER$ + k ; i <= n ; i ++ ) { {
rank: 765
score: 99.43111843532986
patch: for ( int i = k ; i >= n - 1 ; i ++ ) {
rank: 765
score: 99.39955540707237
patch: for ( int i = 0 ; i < n - k ; i ++ ) { {
rank: 765
score: 99.39200846354167
patch: for ( int i = 1 ; i >= 0 ; i ++ )
rank: 765
score: 99.38861762152777
patch: for ( int n = k + 1 ; n <= n ; ++ n ) {
rank: 766
score: 99.43098958333333
patch: for ( int i = k ; i >= n - k ; i ++ ) {
rank: 766
score: 99.41224500868056
patch: for ( int k = k + 1 ; i >= 0 ; i ++ ) {
rank: 766
score: 99.40342203776042
patch: for ( int i = 0 ; i <= n ; i - 1 ++ ) {
rank: 766
score: 99.39183852251838
patch: for ( int i = $NUMBER$ ; i >= $NUMBER$ - 1 ; i ++ )
rank: 766
score: 99.36843390213816
patch: for ( int i = k + + 1 ; i <= n ; i -- ) {
rank: 766
score: 99.3446044921875
patch: for ( int i = n ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 767
score: 99.433837890625
patch: k ! for ( int i = $NUMBER$ ; i <= n ; i ++ ) { {
rank: 767
score: 99.41745174632354
patch: for ( int i = k * 1 ; i <= n ; i ++ )
rank: 767
score: 99.40325927734375
patch: for ( int i = $STRING$ ; i <= k ; i ++ ) {
rank: 767
score: 99.39148667279412
patch: for ( int i = 0 ; i >= 0 ; i ++ ) { {
rank: 767
score: 99.38795979817708
patch: for ( int k = k + 1 ; k >= n ; k -- ) {
rank: 767
score: 99.36808507582721
patch: for ( int i = k ; i <= n + ; i ++ ) {
rank: 767
score: 99.34439290364584
patch: for ( int i = i ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 768
score: 99.41729377297794
patch: for ( int i = k * 1 ; i < n ; i ++ )
rank: 768
score: 99.41200764973958
patch: for ( int i = k - $NUMBER$ ; i <= $NUMBER$ ; i ++ ) {
rank: 768
score: 99.39134114583334
patch: for ( int i = 0 ; i >= 1 ; i ++ )
rank: 768
score: 99.38790554470486
patch: for ( int k = k - 1 ; i < n ; k ++ ) {
rank: 768
score: 99.36767578125
patch: for ( int i = 1 ; i <= k 1 ; i ++ ) {
rank: 768
score: 99.34405307112068
patch: for ( int i = 0 ; i <= n ; i ++ ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + i ) ;
rank: 769
score: 99.4172427528783
patch: for ( int k = k + 1 ; i < n ; i ++ ) { {
rank: 769
score: 99.39072552849265
patch: for ( int i = k - 1 ; i < k ; i ++ )
rank: 769
score: 99.38784308182566
patch: for ( int i = k + 1 ; i <= k + $NUMBER$ ; i ++ )
rank: 769
score: 99.343994140625
patch: for ( int i = length ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 770
score: 99.4334652549342
patch: k ! for ( int i = k + 1 ; i <= n ; i ++ )
rank: 770
score: 99.39803314208984
patch: for ( int i = true ; i < n ; i ++ ) {
rank: 770
score: 99.38776598478618
patch: for ( int i = k + 1 ; i <= n ; i ++ ) * /
rank: 770
score: 99.36743842230902
patch: for ( int i = k ; i < 1 ; i ++ ) { ) {
rank: 770
score: 99.34376627604166
patch: for ( int i = 1 ; i <= 1 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 771
score: 99.39065372242646
patch: for ( int i = k ; i <= - k ; i ++ ) {
rank: 771
score: 99.38764105902777
patch: for ( int k = k + 1 ; k <= k ; i ++ ) {
rank: 771
score: 99.34351427801724
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i , i ) ;
rank: 772
score: 99.42974853515625
patch: for ( int i = k + $NUMBER$ ; i > n ; i ++ ) {
rank: 772
score: 99.41660670230263
patch: for ( int i = k ; i < k + 1 ; i ++ ) { {
rank: 772
score: 99.40243869357639
patch: for ( int i = 1 ; i <= n + 1 ; i -- ) {
rank: 772
score: 99.3973388671875
patch: for ( int i = - 1 ; i < 1 ; i ++ ) {
rank: 772
score: 99.39059627757354
patch: for ( int i = $NUMBER$ ; i > k ; i ++ ) { {
rank: 772
score: 99.36712325246711
patch: for ( int i = k + k ; i <= n ; i ++ ) { )
rank: 773
score: 99.43321468955592
patch: for ( int i = $NUMBER$ ; i <= n - 1 ; i ++ ) { }
rank: 773
score: 99.42960851332721
patch: for ( int i = 0 ; i >= - 1 ; i ++ ) {
rank: 773
score: 99.41634114583333
patch: for ( int i = start ; i < n + 1 ; i ++ ) {
rank: 773
score: 99.40230984157986
patch: for ( int i = 0 ; i < n == n ; i ++ ) {
rank: 773
score: 99.39052734375
patch: for ( int i = k ; i >= n ; i ++ )
rank: 773
score: 99.38751898871527
patch: for ( int k = k + 1 ; k >= n ; i -- ) {
rank: 773
score: 99.36696079799107
patch: for ( int i ; i <= k ; i ++ ) {
rank: 773
score: 99.34337957974138
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( 0 , i ) ;
rank: 774
score: 99.42870415581598
patch: for ( int i = 1 ; i >= k - k ; i ++ ) {
rank: 774
score: 99.41132269965277
patch: for ( int i = 0 + k ; i >= 0 ; i ++ ) {
rank: 774
score: 99.40226665296052
patch: for ( int i = k + 1 ; int i <= n ; i -- ) {
rank: 774
score: 99.36681410845588
patch: for ( final int i = k ; i <= k ; i ++ ) {
rank: 774
score: 99.34292497306035
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( i - n ) ;
rank: 775
score: 99.41612413194444
patch: * * for ( int i = 0 ; i < n ; i ++ ) {
rank: 775
score: 99.40226022820724
patch: for ( int i = k + 1 ; i < n ; i += n ) {
rank: 775
score: 99.39678633840461
patch: for ( int i = k - k ; i <= n ; i ++ ) { {
rank: 775
score: 99.38739013671875
patch: for ( Number i = k + 1 ; i <= k ; i ++ ) {
rank: 775
score: 99.36659869025735
patch: for ( int i = k ; i <= n - ; i ++ ) {
rank: 775
score: 99.34231665826613
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ; }
rank: 776
score: 99.43132188585069
patch: for ( int i = k + length ; i <= n ; i ++ ) {
rank: 776
score: 99.40190294053819
patch: for ( String i = 0 ; i <= n + 1 ; i ++ ) {
rank: 776
score: 99.390380859375
patch: for ( int i = 0 ; i >= - k ; i ++ ) {
rank: 776
score: 99.34209798177083
patch: for ( int i = k ; i <= 1 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 777
score: 99.41561086554276
patch: for ( int i = ++ k + 1 ; i < n ; i ++ ) {
rank: 777
score: 99.40182976973684
patch: for ( int i = k + $NUMBER$ ; i <= n + 1 ; i ++ )
rank: 777
score: 99.39028751148896
patch: for ( int i = 0 ; i >= k ; i ++ ) { {
rank: 777
score: 99.38722737630208
patch: for ( int k = k + 1 ; n >= n ; i ++ ) {
rank: 777
score: 99.34188639322916
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( float ) i ) ;
rank: 778
score: 99.42746151194854
patch: for ( int i = - 1 ; i >= 1 ; i ++ ) {
rank: 778
score: 99.41079372829861
patch: for ( int i = k + 1 ; i <= i ; ++ i ) {
rank: 778
score: 99.4017333984375
patch: for ( Object i = 0 ; i <= n ; i ++ ) {
rank: 778
score: 99.39530944824219
patch: for ( int k = 0 ; i <= n ; i ++ ) {
rank: 778
score: 99.39020852481617
patch: for ( int i = $NUMBER$ ; i <= 0 - k ; i ++ )
rank: 778
score: 99.38711208767361
patch: for ( int n = k + 1 ; n <= k ; i ++ ) {
rank: 778
score: 99.36634826660156
patch: for ( int i = k + 1 ; i , n ++ ) {
rank: 778
score: 99.341259765625
patch: for ( int i = 1 ; i == n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 779
score: 99.41559196920956
patch: for ( int i = k / 1 ; i <= n ; i ++ )
rank: 779
score: 99.39527893066406
patch: for ( int i = $NUMBER$ ; i != 1 ; i ++ ) {
rank: 779
score: 99.38991411994485
patch: for ( int i = $NUMBER$ ; i > - k ; i ++ ) {
rank: 779
score: 99.3870913856908
patch: for ( int i = k + 1 ; i <= n ; i ++ ) try {
rank: 779
score: 99.34108072916666
patch: for ( int i = start ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 780
score: 99.40166159237133
patch: for ( int i = 0 ; i <= n ; i += 1 ) {
rank: 780
score: 99.38982795266544
patch: for ( int i = k + 0 ; i <= k ; i ++ )
rank: 780
score: 99.38706461588542
patch: for ( int i = k + 1 ; i >= k ; i -= $NUMBER$ )
rank: 780
score: 99.36546325683594
patch: for ( int i = k ; i < n ; k ++ ) {
rank: 781
score: 99.42450272409539
patch: for ( int i = k + 1 ; i > 0 ; i ++ ) { {
rank: 781
score: 99.41054958767361
patch: for ( int i = k - 1 ; i <= 0 ; ++ i ) {
rank: 781
score: 99.39399799547698
patch: for ( int i = $NUMBER$ ; i < n + k ; i ++ ) { {
rank: 781
score: 99.38969152113971
patch: for ( int i = $NUMBER$ ; i > 0 ; i ++ ) { {
rank: 781
score: 99.38652038574219
patch: for ( Number i = 0 ; i < n ; i ++ ) {
rank: 781
score: 99.34096342941811
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i - k ) ;
rank: 782
score: 99.41054280598958
patch: for ( int i = k - $NUMBER$ ; i >= 0 ; i -- ) {
rank: 782
score: 99.40119934082031
patch: for ( int i = 0 ; i < n ; k ++ ) {
rank: 782
score: 99.38646782769098
patch: for ( int i = k + 1 ; i != k ; ++ i ) {
rank: 782
score: 99.36499786376953
patch: for ( int i = ) ; i <= n ; i ++ ) {
rank: 782
score: 99.34093424479167
patch: for ( int i = k + 1 ; i . < n ; i ++ ) { log CaMeL Sum += Math . log ( i ) ;
rank: 783
score: 99.39947188527961
patch: for ( int i = k + 1 ; i >= n ; i += 1 ) {
rank: 783
score: 99.39332490808823
patch: for ( int i = 0 ; i >> < n ; i ++ ) {
rank: 783
score: 99.36483604029605
patch: for ( int i = k ; i <= n ; i ++ ) { i -- {
rank: 784
score: 99.41482883029514
patch: for ( int i = k - n ; i >= n ; i ++ ) {
rank: 784
score: 99.38933967141544
patch: for ( int i = $NUMBER$ + $NUMBER$ ; i < n ; i ++ )
rank: 784
score: 99.34073893229167
patch: for ( int i = $NUMBER$ ; i > 1 ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 785
score: 99.39892578125
patch: for ( int i = 0 ; i < n ; i -- )
rank: 785
score: 99.34072265625
patch: for ( int i = 1 ; i < k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 786
score: 99.4100341796875
patch: for ( int i = k * 1 ; i >= k ; i ++ ) {
rank: 786
score: 99.39869449013158
patch: } for ( int i = k + 1 ; i >= 1 ; i -- ) {
rank: 786
score: 99.38922119140625
patch: for ( int i = $NUMBER$ ; i <= null ; i ++ ) {
rank: 786
score: 99.36420355902777
patch: for ( int i = n ; i <= n ; i ++ ) { ) {
rank: 786
score: 99.34044596354167
patch: for ( int i = $NUMBER$ ; i <= $NUMBER$ ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 787
score: 99.42845323350694
patch: for ( int i = k + ] ; i <= n ; i ++ ) {
rank: 787
score: 99.40967559814453
patch: for ( int i = 0 ; 1 < n ; i ++ ) {
rank: 787
score: 99.39868927001953
patch: for ( int i = k ; i <= size ; i ++ ) {
rank: 787
score: 99.38893229166666
patch: for ( int i = false ; i <= n ; i ++ )
rank: 787
score: 99.38583034939236
patch: for ( for ( int i = 0 ; i < n ; i ++ ) {
rank: 787
score: 99.3639777688419
patch: for ( int i = k ; i < n ; i ++ ) { }
rank: 787
score: 99.34041078629032
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ; }
rank: 788
score: 99.42831759982639
patch: for ( double i = $NUMBER$ + k ; i <= n ; i ++ ) {
rank: 788
score: 99.421875
patch: for ( int i = $NUMBER$ ; i >= $NUMBER$ ; i -- ) {
rank: 788
score: 99.41421669407895
patch: for ( int i = k + 1 ; i < i ; i ++ ) { {
rank: 788
score: 99.39780680338542
patch: for ( int i = k + 1 ; i < n ; i -- ) )
rank: 788
score: 99.38579644097223
patch: for ( int i = i + 1 ; i <= i ; i ++ ) {
rank: 788
score: 99.36384662828948
patch: for ( int i = 0 ; i <= n ; i ++ ) { i ++ {
rank: 788
score: 99.3400634765625
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( String ) i ) ;
rank: 789
score: 99.41411389802632
patch: for ( int i = ++ k + 1 ; i <= n ; i ++ ) {
rank: 789
score: 99.38999938964844
patch: for ( int i = size ; i <= n ; i ++ ) {
rank: 789
score: 99.38888729319854
patch: for ( int i = k - k ; i == n ; i ++ )
rank: 789
score: 99.38568793402777
patch: for ( double i = k - 1 ; i >= k ; i -- ) {
rank: 789
score: 99.36373697916666
patch: for ( int i = k ; ++ i <= n ; ) {
rank: 789
score: 99.33997002963362
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( n - k ) ;
rank: 790
score: 99.41363525390625
patch: for ( int i = i - 1 ; i >= n ; i ++ ) {
rank: 790
score: 99.40889485677083
patch: for ( int n = k + 1 ; i <= 0 ; i ++ ) {
rank: 790
score: 99.38987330386513
patch: for ( int i = k + 0 ; i < n ; i ++ ) { {
rank: 790
score: 99.3883056640625
patch: for ( double i = $NUMBER$ ; i < n ; i ++ ) {
rank: 790
score: 99.36335305606617
patch: for ( int i = 0 ; i < k 1 ; i ++ ) {
rank: 790
score: 99.33993635506465
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( i - i ) ;
rank: 791
score: 99.42786407470703
patch: for ( int i = $NUMBER$ ; i <= length ; i ++ ) {
rank: 791
score: 99.3974250344669
patch: for ( int i = 0 ; i < n ; i -= 1 ) {
rank: 791
score: 99.38552517361111
patch: for ( long i = k - 1 ; i < n ; i ++ ) {
rank: 791
score: 99.33991109913794
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i , i ) ;
rank: 792
score: 99.41328430175781
patch: for ( long i = k ; i < n ; i ++ ) {
rank: 792
score: 99.39742238898026
patch: for ( int i = k + 1 ; i <= n ; i += 0 ) {
rank: 792
score: 99.3886947631836
patch: for ( int i = $NUMBER$ ; i == i ; i ++ ) {
rank: 792
score: 99.38783892463235
patch: k ! for ( int i = 0 ; i <= n ; i ++ )
rank: 792
score: 99.38544108072917
patch: for ( int i = 0 ; i <= n ; ++ i )
rank: 792
score: 99.36308208264802
patch: for ( int i = k ; i <= k ; i ++ ) { n ++ ;
rank: 792
score: 99.33974609375
patch: for ( int i = 1 ; i >= k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 793
score: 99.42746988932292
patch: if ( ( k == 1 ) && ( k == n - 1 ) ) {
rank: 793
score: 99.38777429917279
patch: for ( int i = k ; i < n + k ; i ++ )
rank: 794
score: 99.4262336282169
patch: for ( i = $NUMBER$ ; i <= n - 1 ; i ++ ) {
rank: 794
score: 99.39703047902961
patch: for ( int i = 0 ; i <= k + 1 ; i ++ ) { {
rank: 794
score: 99.38540649414062
patch: for ( double i = k ; i <= k ; i ++ ) {
rank: 794
score: 99.36237335205078
patch: for ( String i = k ; i < n ; i ++ ) {
rank: 794
score: 99.33948174838362
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum -= Math . log ( n - i ) ;
rank: 795
score: 99.3968441611842
patch: for ( int i = k + 1 ; i >= 0 ; i -= 1 ) {
rank: 795
score: 99.38773839613971
patch: for ( int i = $NUMBER$ ; i <= n - n ; i ++ )
rank: 795
score: 99.38528603001645
patch: for ( int i = k + 1 ; i >= k ; ++ i ) { {
rank: 795
score: 99.3622687844669
patch: for ( final int i = 1 ; i <= n ; i ++ ) {
rank: 795
score: 99.33863067626953
patch: for ( int k = $NUMBER$ ; k <= n ; k ++ ) {
rank: 796
score: 99.41277112458882
patch: for ( int i = k + 1 ; i < n ] ; i ++ ) {
rank: 796
score: 99.40766059027777
patch: for ( int i = k * 1 ; i >= 0 ; i -- ) {
rank: 796
score: 99.39632375616776
patch: for ( int i = k + 1 ; i >= 1 ; i -= 1 ) {
rank: 796
score: 99.38773600260417
patch: for ( int i = 1 ; i >= k ; i ++ )
rank: 796
score: 99.3385498046875
patch: for ( int i = $NUMBER$ ; i <= n ; ++ i ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 797
score: 99.3961245888158
patch: for ( int i = k + 1 ; i < n + ; i -- ) {
rank: 797
score: 99.3876594094669
patch: for ( int i = k ; i >= 0 ; i ++ ) { {
rank: 797
score: 99.36186218261719
patch: for ( Iterator i = 0 ; i < n ; i ++ ) {
rank: 797
score: 99.33854727909483
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( double ) n ) ;
rank: 798
score: 99.40709164268092
patch: for ( int i = 0 + 1 ; i < n - 1 ; i ++ )
rank: 798
score: 99.38573455810547
patch: for ( int i = 0 ; i == 1 ; i ++ ) {
rank: 798
score: 99.38488051470588
patch: for ( int i = k - 1 ; i >= i ; ++ ) {
rank: 798
score: 99.3616081686581
patch: for for ( int i = k ; i < n ; i ++ ) {
rank: 799
score: 99.38480631510417
patch: * for ( int i = k + 1 ; i <= n ; i ++ )
rank: 799
score: 99.36144256591797
patch: for ( int i = k ; i <= n ; n ++ ) {
rank: 799
score: 99.337744140625
patch: for ( int i = 0 ; i <= 0 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 800
score: 99.41219932154605
patch: for ( int i = 0 ; i < n + $NUMBER$ ; i ++ ) { {
rank: 800
score: 99.40671900699013
patch: for ( int i = k + 1 ; i >= 0 ; i += n ) {
rank: 800
score: 99.38727883731617
patch: for ( int i = $NUMBER$ - 1 ; i >= $NUMBER$ ; i ++ )
rank: 800
score: 99.384765625
patch: for ( int i = k ; i <= n ; ++ i )
rank: 800
score: 99.33748653017241
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ;
rank: 801
score: 99.38506208147321
patch: for ( int i = k <= n ; i ++ ) {
rank: 801
score: 99.36065995065789
patch: for ( int i = k ; i < n ; i ++ ) { ++ i ;
rank: 801
score: 99.33736979166666
patch: for ( int i = k + 1 ; i [ i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 802
score: 99.425048828125
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { this .
rank: 802
score: 99.38714240579044
patch: for ( int i = k + 1 ; i == 0 ; i ++ )
rank: 802
score: 99.36056315104166
patch: for ( int i = k + 1 ; i += 1 ) {
rank: 802
score: 99.33670359644397
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) { log CaMeL Sum += Math . log ( i ) ;
rank: 803
score: 99.41627261513158
patch: for ( int i = 0 ; i <= n - k - k ; i ++ )
rank: 803
score: 99.40579562717014
patch: for ( int i = 0 + 1 ; i >= 0 ; ++ i ) {
rank: 803
score: 99.39500668174342
patch: for ( int i = 0 ; i < n + 1 ; i -- ) { {
rank: 803
score: 99.38684800091912
patch: for ( int i = k - n ; i <= n ; i ++ )
rank: 803
score: 99.38404846191406
patch: for ( int i = $NUMBER$ ; i != i ; i ++ ) {
rank: 803
score: 99.36003561580883
patch: for ( int i = k ; i < k - ; i ++ ) {
rank: 803
score: 99.33660481770833
patch: for ( int i = $NUMBER$ ; i < 1 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 804
score: 99.38681209788604
patch: for ( int i = $NUMBER$ ; i < i - k ; i ++ )
rank: 804
score: 99.3364966607863
patch: for ( int i = k ] ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 805
score: 99.41200015419408
patch: for ( int i = i + 1 ; i <= n + 1 ; i ++ )
rank: 805
score: 99.40531412760417
patch: for ( int i = k * 1 ; i <= n ; ++ i ) {
rank: 805
score: 99.38657513786765
patch: for ( int i = k + $NUMBER$ ; i >= $NUMBER$ ; i ++ )
rank: 805
score: 99.33645103717673
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , i ) ;
rank: 806
score: 99.4050357216283
patch: for ( int i = k + 1 ; i <= n / 1 ; i ++ )
rank: 806
score: 99.3941714638158
patch: } for ( int i = k + 1 ; i >= 1 ; i ++ ) {
rank: 806
score: 99.38641716452206
patch: for ( int i = - + 1 ; i <= n ; i ++ )
rank: 806
score: 99.359375
patch: for ( int i = i ; i <= k ; i ++ ) {
rank: 806
score: 99.33626582704741
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( double ) i ) ;
rank: 807
score: 99.41508483886719
patch: for ( int i = $NUMBER$ ; i >= k ; i -- ) {
rank: 807
score: 99.40500217013889
patch: for ( int i = start + 1 ; i >= 0 ; i ++ ) {
rank: 807
score: 99.3862663717831
patch: for ( double i = $NUMBER$ ; i <= n - k ; i ++ )
rank: 807
score: 99.3590087890625
patch: if ( for ( int i = 1 ; i <= n ; i ++ ) ) {
rank: 808
score: 99.39308794806985
patch: for ( int i = k ; i <= - 1 ; i -- ) {
rank: 808
score: 99.38382118626645
patch: for ( int i = 0 ; i < ( k + 1 ) ; i ++ )
rank: 808
score: 99.33611863659274
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { double log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 809
score: 99.41419982910156
patch: for ( int i = 1 ; i == k ; i ++ ) {
rank: 809
score: 99.38605499267578
patch: for ( int i = k + 1 ; i <= n : n )
rank: 809
score: 99.33570149739583
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) n ) ;
rank: 810
score: 99.42291937934027
patch: try { for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 810
score: 99.40425109863281
patch: for ( int i = 0 ; k <= k ; i ++ ) {
rank: 810
score: 99.38353207236842
patch: for ( int i = k + 1 ; i >= n ; i -= i ) {
rank: 810
score: 99.35857077205883
patch: / for ( int i = k ; i <= n ; i ++ ) {
rank: 810
score: 99.335693359375
patch: for ( int i = 1 ; i <= n ; i ++ ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + i ) ;
rank: 811
score: 99.42276804070724
patch: for ( Iterator i = n ; i . < n - k ; i ++ ) {
rank: 811
score: 99.41398540296052
patch: for ( int i = 1 + 1 ; i <= n ; i ++ ) { {
rank: 811
score: 99.39057159423828
patch: for ( String i = 0 ; i < n ; i ++ ) {
rank: 811
score: 99.3851677389706
patch: for ( int i = 0 ; i <= 0 ; i ++ ) { {
rank: 811
score: 99.38332790798611
patch: for ( int i + 1 = 1 ; i <= n ; i ++ ) {
rank: 811
score: 99.35856797960069
patch: for ( int i = k ; i < 0 ; i ++ ) { ) {
rank: 812
score: 99.40363311767578
patch: for ( int i = k ; i <= length ; i ++ ) {
rank: 812
score: 99.38511029411765
patch: for ( int i = k + 1 ; i ! n ; i ++ )
rank: 812
score: 99.3831787109375
patch: for ( int i = k + 1 ; i <= n / $NUMBER$ ; i ++ )
rank: 812
score: 99.35820770263672
patch: for ( int k = k ; i < k ; i ++ ) {
rank: 812
score: 99.33564453125
patch: for ( int i = k ; i >= k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 813
score: 99.41374126233552
patch: for ( int i = k + 1 ; i > $NUMBER$ ; i ++ ) { {
rank: 813
score: 99.3897476196289
patch: for ( int i = 0 ; i < i ; i -- ) {
rank: 813
score: 99.38501694623162
patch: for ( int i = $NUMBER$ - 1 ; i == n ; i ++ )
rank: 813
score: 99.35816865808823
patch: for ( int i = k ; i <= 1 ; i ++ ) { )
rank: 813
score: 99.33546549479166
patch: for ( int i = k ; i <= k ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 814
score: 99.38501694623162
patch: for ( int i = k - $NUMBER$ ; i < n ; i ++ )
rank: 814
score: 99.38312530517578
patch: for ( int i = 1 ; i >= k ; i -- ) {
rank: 814
score: 99.3800277709961
patch: for ( int i = min ; i < n ; i ++ ) {
rank: 814
score: 99.33515167236328
patch: if ( ( n == k ) || ( n == 0 ) ) {
rank: 815
score: 99.42164370888158
patch: for ( int i = k ; i <= n ; i ++ ) { k ++ ;
rank: 815
score: 99.3882827758789
patch: for ( Integer i = 0 ; i <= n ; i ++ ) {
rank: 815
score: 99.38499540441177
patch: for ( int i = $NUMBER$ ; i >= 0 + 1 ; i ++ )
rank: 815
score: 99.38001251220703
patch: for ( int n = $NUMBER$ ; i < n ; i ++ ) {
rank: 815
score: 99.35755157470703
patch: for ( int i = max ; i <= k ; i ++ ) {
rank: 815
score: 99.33494466145834
patch: for ( int i = k ; i >= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 816
score: 99.38801843979779
patch: for ( int i = k ; i <= n ; 1 ++ i ) {
rank: 816
score: 99.35697214226974
patch: for ( int i = k + 1 ; i >= 0 ; i ++ ) { )
rank: 816
score: 99.33466628502156
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i - k ) ;
rank: 817
score: 99.41263580322266
patch: for ( Object i = n ; i <= n ; i ++ ) {
rank: 817
score: 99.38768174913194
patch: for ( int i = k + 1 ; i < n ; i 1 ) {
rank: 817
score: 99.38480870863971
patch: for ( int i = $NUMBER$ ; i <= $NUMBER$ - k ; i ++ )
rank: 817
score: 99.38264295789931
patch: for ( int i = 1 + 1 ; i >= 1 ; i -- ) {
rank: 817
score: 99.3789126747533
patch: for ( int i = k + 1 ; i < n ; i ++ ) continue ;
rank: 817
score: 99.35654703776042
patch: for ( int i = n ; i < n ; i ++ ) { ) {
rank: 817
score: 99.33440530711206
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( i - 1 ) ;
rank: 818
score: 99.38456217447917
patch: for ( int i = true ; i <= n ; i ++ )
rank: 818
score: 99.37786865234375
patch: for ( int i = k <= n - 1 ; i ++ ) {
rank: 818
score: 99.33392740885417
patch: for ( int i = k ; i < k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 819
score: 99.41241814108456
patch: for ( int i = k ; i >> <= n ; i ++ ) {
rank: 819
score: 99.40174018012152
patch: for ( int i = k | 1 ; i >= 0 ; i ++ ) {
rank: 819
score: 99.38700866699219
patch: for ( int i = 0 ; i < null ; i ++ ) {
rank: 819
score: 99.384521484375
patch: for ( int i = $NUMBER$ ; i != n - 1 ; i ++ )
rank: 819
score: 99.38249126233552
patch: for ( int i = 0 + 1 ; i < n + 1 ; i ++ )
rank: 819
score: 99.333740234375
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( int ) i ) ;
rank: 820
score: 99.40964762369792
patch: for ( int i = 0 ; i < n * $NUMBER$ ; i ++ ) {
rank: 820
score: 99.40172054893092
patch: for ( int i = k + 1 ; i >= 0 ; i += $NUMBER$ ) {
rank: 820
score: 99.38428452435662
patch: for ( int i = $NUMBER$ ; i <= n : n - k ) {
rank: 820
score: 99.38215717516448
patch: for ( int i = k - 1 ; i >= k ; i ++ ) { {
rank: 820
score: 99.3772036903783
patch: for ( int i = $NUMBER$ ; i <= n + 1 : n - k ) {
rank: 820
score: 99.35587310791016
patch: for ( int n = k ; i <= n ; i ++ ) {
rank: 820
score: 99.33364868164062
patch: for ( int i = $NUMBER$ ; i <= n ; -- i ) {
rank: 821
score: 99.42094983552632
patch: for ( int i = k ; i <= n - - k ; i ++ ) {
rank: 821
score: 99.401123046875
patch: for ( int i = 0 ; i < n ; i ++ ) { i -- ;
rank: 821
score: 99.38684760199652
patch: for ( int i = k + 1 ; i < n ; i ++ ) }
rank: 821
score: 99.38405474494485
patch: for ( n = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 821
score: 99.38153435202206
patch: for ( int i = k 0 ; i <= k ; i ++ ) {
rank: 822
score: 99.40879313151042
patch: for ( int i = k / $NUMBER$ ; i >= n ; i ++ ) {
rank: 822
score: 99.38348029641544
patch: for ( int i = k ; i >= k ; i ++ ) { {
rank: 822
score: 99.38120404411765
patch: for ( int i = k ; i <= k - 1 ; i ++ )
rank: 822
score: 99.3754021139706
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) break ;
rank: 822
score: 99.33354949951172
patch: for ( int i = k ++ ; i <= n ; i ++ )
rank: 823
score: 99.42064073350694
patch: / ! for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 823
score: 99.38654327392578
patch: for ( int i = 0 ; i < n ; = i ) {
rank: 823
score: 99.38347311580883
patch: for ( int i = 1 ; i <= k - k ; i ++ )
rank: 823
score: 99.38103170955883
patch: for ( int i = n - 1 ; i >= n ; i -- )
rank: 823
score: 99.33316243489584
patch: for ( int i = 0 ; i >= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 824
score: 99.42045512952302
patch: for ( int i = $NUMBER$ ; i <= n - k ; ; i ++ ) {
rank: 824
score: 99.40830485026042
patch: for ( int i = k ; i > n + 1 ; i ++ ) {
rank: 824
score: 99.38324333639706
patch: for ( int i = k - 1 ; i < $NUMBER$ ; i ++ )
rank: 824
score: 99.38096217105263
patch: for ( int i = k + 1 ; i <= n / n ; i ++ )
rank: 824
score: 99.33314615885416
patch: for ( int i = 1 ; i <= i ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 825
score: 99.4080810546875
patch: * / for ( int i = 1 ; i < n ; i ++ ) {
rank: 825
score: 99.39988949424342
patch: for ( int i = k + $NUMBER$ ; i <= n - 1 ; i ++ )
rank: 825
score: 99.38320025275735
patch: for ( int i = $NUMBER$ ; i != n + k ; i ++ )
rank: 825
score: 99.38080193014706
patch: for ( int i = k ; i < n ; ++ ++ i ) {
rank: 825
score: 99.37282843338816
patch: for ( int i = $NUMBER$ ; i <= n - 1 : n - 1 ) {
rank: 825
score: 99.35499974300987
patch: for ( int i = k ; i <= k ; i ++ ) { n ++ {
rank: 825
score: 99.3331298828125
patch: for ( int i = k ; i <= i ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 826
score: 99.42040337456598
patch: for ( double i = 1 ; i <= n - 1 ; i ++ ) {
rank: 826
score: 99.38312126608456
patch: for ( double i = $NUMBER$ ; i <= n ; i ++ ) { {
rank: 826
score: 99.3805793313419
patch: for ( int i = 0 ; ; i <= n ; i ++ ) {
rank: 826
score: 99.3330078125
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( float ) i ) ;
rank: 827
score: 99.40763346354167
patch: for ( int k = k - 1 ; i < n ; i ++ ) {
rank: 827
score: 99.39879086143092
patch: for ( int i = 0 ; i <= n ; i ++ ) { i -- ;
rank: 827
score: 99.38308536305146
patch: for ( int i = $NUMBER$ ; i <= n - 0 ; i ++ )
rank: 827
score: 99.3804995888158
patch: for ( int i = k - 1 ; i > n ; i -- ) { {
rank: 827
score: 99.37156677246094
patch: for ( int i = $NUMBER$ ; i < size ; i ++ ) {
rank: 827
score: 99.3327880859375
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum = Math . log ( ( double ) i ) ;
rank: 828
score: 99.38462919347427
patch: for ( int i = 0 ; i < k ; 1 ++ i ) {
rank: 828
score: 99.38300637637867
patch: for ( int i = $NUMBER$ ; i >= k + 1 ; i ++ )
rank: 828
score: 99.37106323242188
patch: for ( short i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 828
score: 99.35403262867646
patch: for ( int i = k + 1 ; i += n - 1 ) {
rank: 829
score: 99.4194271689967
patch: for ( Iterator i = n + k ; i . < n ; i ++ ) {
rank: 829
score: 99.40688747829861
patch: for ( long i = 0 ; i < n + 1 ; i ++ ) {
rank: 829
score: 99.38402557373047
patch: for ( int i = k ; i < $NUMBER$ ; i -- ) {
rank: 829
score: 99.3828857421875
patch: for ( int i = $NUMBER$ ; i > n ; i ++ )
rank: 829
score: 99.35403262867646
patch: for ( int i = k ; i < n ; i ++ ) { ;
rank: 829
score: 99.3324951171875
patch: for ( int i = 1 ; i > $NUMBER$ ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 830
score: 99.38399251302083
patch: for ( int i = k + 1 ; i < n ; i -- ) ;
rank: 830
score: 99.38256022135417
patch: for ( int i = - ; i <= n ; i ++ )
rank: 830
score: 99.38025665283203
patch: for ( int i = 0 ; i >= n ; i -- ) {
rank: 830
score: 99.35393210018383
patch: for ( int i = k + 1 ; i -- >= n ; ) {
rank: 830
score: 99.33238118489584
patch: for ( int i = k ; i == n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 831
score: 99.3839111328125
patch: for ( Object i = 0 ; i < n ; i ++ ) {
rank: 831
score: 99.35382080078125
patch: for ( int i = k ; i < n ; i 1 ) {
rank: 831
score: 99.3319891567888
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( i - i ) ;
rank: 832
score: 99.41920301649306
patch: n ! for ( int i = k ; i <= n ; i ++ ) {
rank: 832
score: 99.38220932904412
patch: for ( int i = $NUMBER$ ; i >= $NUMBER$ - k ; i ++ )
rank: 832
score: 99.36958312988281
patch: for ( int i = null ; i <= k ; i ++ ) {
rank: 832
score: 99.3531558388158
patch: for ( int i = 0 ; i <= n + 1 ; i ++ ) { )
rank: 832
score: 99.33194986979167
patch: for ( int i = 1 ; i >= 0 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 833
score: 99.41893174913194
patch: for ( int i = $NUMBER$ + k ; i <= k ; i ++ ) {
rank: 833
score: 99.39606071920956
patch: for ( int i = 0 ; i < k - 1 ; i ++ )
rank: 833
score: 99.38300916883681
patch: for ( int i = k + 1 ; i < - 1 ; i ++ )
rank: 833
score: 99.35272216796875
patch: for ( int i = k ; n < k ; i ++ ) {
rank: 833
score: 99.331396484375
patch: for ( int i = 0 ; i >= $NUMBER$ ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 834
score: 99.39592542146382
patch: for ( int i = k + 1 ; i >= 0 ; i += 0 ) {
rank: 834
score: 99.38288430606617
patch: for ( int i = 0 ; i < n ; i -- ) { {
rank: 834
score: 99.3818130493164
patch: for ( double i = $NUMBER$ ; i <= $NUMBER$ ; i ++ ) {
rank: 834
score: 99.35255833675987
patch: for ( int i = 0 ; i <= n - 1 ; i ++ ) { )
rank: 834
score: 99.331298828125
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( double ) ( i ) ;
rank: 835
score: 99.38176413143383
patch: for ( int i = $NUMBER$ ; i <= 0 - 1 ; i ++ )
rank: 835
score: 99.37962510850694
patch: for ( int k = k + 1 ; i <= n ; ++ k ) {
rank: 835
score: 99.36832682291667
patch: for ( int i ++ ; i <= n ; i ++ ) {
rank: 835
score: 99.3525390625
patch: for ( int i = k ; i < k ; i ++ ) { n ++ ;
rank: 835
score: 99.3312744140625
patch: for ( int i = 0 ; i < k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 836
score: 99.41821967230902
patch: for ( int i = $NUMBER$ ; i <= n - 1 ; ++ i ) {
rank: 836
score: 99.40653483072917
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { ) {
rank: 836
score: 99.3818000344669
patch: for ( int i = k ; i < n + 1 ; i -- )
rank: 836
score: 99.35197448730469
patch: for ( int i = k ; i <= n ; i ] ) {
rank: 836
score: 99.33078529094827
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i + n ) ;
rank: 837
score: 99.40632180606617
patch: for ( int i = k ; i >= - 1 ; i ++ ) {
rank: 837
score: 99.39460192228618
patch: for ( int i = k - 1 ; i <= 0 ; i ++ ) { {
rank: 837
score: 99.38136919806985
patch: for ( int i = k + $NUMBER$ ; i == n ; i ++ )
rank: 837
score: 99.37916564941406
patch: for ( int n = 0 ; i < n ; i ++ ) {
rank: 837
score: 99.33040102066532
patch: for ( int i = - 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 838
score: 99.40627872242646
patch: for ( int i = 1 ; i >> <= n ; i ++ ) {
rank: 838
score: 99.38134047564338
patch: for ( int i = 0 + 1 ; i == n ; i ++ )
rank: 838
score: 99.38107638888889
patch: for ( int i = k + 1 ; i < k ; i ++ ) )
rank: 838
score: 99.37895372178819
patch: for ( int i = k + 1 ; i <= k ; -- i ) {
rank: 838
score: 99.3516909950658
patch: for ( int i = k ; i < n ; i ++ ) { i -- ;
rank: 838
score: 99.33028859105603
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( $STRING$ + i ) ;
rank: 839
score: 99.38130457261029
patch: for ( int i = $NUMBER$ ; i >= n - 1 ; i ++ )
rank: 839
score: 99.37998334099265
patch: for ( int i = 0 ; i <= n + 1 ; i -- )
rank: 839
score: 99.3301202182112
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i +
rank: 840
score: 99.41775851779514
patch: this . for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 840
score: 99.37834616268383
patch: for ( int i = 0 , ; i < n ; i ++ ) {
rank: 840
score: 99.36736739309211
patch: for ( int i = $NUMBER$ ; i <= n + 1 : n - 1 ) {
rank: 840
score: 99.35154095818015
patch: for ( int i = k ; i <= 0 ; i ++ ) { {
rank: 840
score: 99.32935412176724
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( $STRING$ , i ) ;
rank: 841
score: 99.41764322916667
patch: for ( double i = 0 ; i <= n - 1 ; i ++ ) {
rank: 841
score: 99.37921905517578
patch: for ( int i = 0 ; i <= n ; k ++ ) {
rank: 841
score: 99.3782958984375
patch: for ( int i = k - 1 ; i > 0 ; i -- )
rank: 841
score: 99.35128623560855
patch: for ( int i = k ; i < n ; i ++ ) { ++ n ;
rank: 841
score: 99.32925907258064
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { return log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 842
score: 99.40510639391448
patch: for ( int i = $NUMBER$ - 1 ; i <= n ; i ++ ) { {
rank: 842
score: 99.38084501378677
patch: for ( int i = $NUMBER$ + k ; i < n ; i ++ )
rank: 842
score: 99.3782958984375
patch: do { for ( int i = k + 1 ; i <= n ; i ++ )
rank: 842
score: 99.36510467529297
patch: if ( ( k == k ) || ( k == 1 ) ) {
rank: 842
score: 99.32919921875
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum + Math . log ( ( double ) i ) ;
rank: 843
score: 99.40329318576389
patch: for ( int i = k / $NUMBER$ ; i >= n ; i -- ) {
rank: 843
score: 99.38070475260416
patch: for ( int i = k ; i <= i ; i ++ )
rank: 843
score: 99.37826538085938
patch: for ( int k = 0 ; i <= n ; k ++ ) {
rank: 843
score: 99.36479635799633
patch: for ( int i = $NUMBER$ ; i <= n : n - 1 ) {
rank: 843
score: 99.32900390625
patch: for ( int i = $NUMBER$ ; i > k ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 844
score: 99.39301300048828
patch: for ( int k = 0 ; i < k ; i ++ ) {
rank: 844
score: 99.38048598345588
patch: for ( int i = 0 ; i == n ; i ++ ) { {
rank: 844
score: 99.37795840992646
patch: for ( int i = 0 ; i < k ; i i ++ ) {
rank: 844
score: 99.35029039884868
patch: for ( int i = k + 1 ; i <= k ; i ++ ) { }
rank: 844
score: 99.328857421875
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( byte ) i ) ;
rank: 845
score: 99.38036391314338
patch: for ( int i = $NUMBER$ ; i < - k ; i ++ ) {
rank: 845
score: 99.37813074448529
patch: for ( int i = 0 + ; i < n ; i ++ ) {
rank: 845
score: 99.37790814568015
patch: for ( int i = k + 1 ; i < 0 ; i -- )
rank: 845
score: 99.36380004882812
patch: for ( int i = k == n - 1 ; i ++ ) {
rank: 845
score: 99.35009765625
patch: for ( int i = 1 ; i <= k ; ++ i ) {
rank: 845
score: 99.32881673177083
patch: for ( int i = $NUMBER$ ; i > n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 846
score: 99.41635470920139
patch: while ( ( k == 1 ) || ( k == n - 1 ) ) {
rank: 846
score: 99.38032082950367
patch: if ( ( k == 0 ) || ( k == n - 1 ) )
rank: 846
score: 99.37779235839844
patch: for ( Integer i = 0 ; i < n ; i ++ ) {
rank: 846
score: 99.37772863051471
patch: for ( int i = k - 1 ; i > n ; i -- )
rank: 846
score: 99.34991133840461
patch: for ( int i = k ; i <= k ; i ++ ) { n -- ;
rank: 846
score: 99.32869203629032
patch: for ( int i = 0 ; i <= n ; i ++ ) { double log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 847
score: 99.4029541015625
patch: for ( int i = i + n ; i < n ; i ++ ) {
rank: 847
score: 99.3799689797794
patch: for ( int i = $NUMBER$ ; i + k == n ; i ++ )
rank: 847
score: 99.34982781661184
patch: for ( int i = k + 0 ; i < n ; i ++ ) { )
rank: 847
score: 99.32860514322917
patch: for ( int i = $NUMBER$ ; i >= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 848
score: 99.37993307674633
patch: for ( int i = k + k ; i >= 1 ; i ++ )
rank: 848
score: 99.3285400390625
patch: for ( int i = 0 ; i <= n ; i -- ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 849
score: 99.40191650390625
patch: for ( int i = 1 ; i >= n + 1 ; i ++ ) {
rank: 849
score: 99.37983972886029
patch: for ( int i = k + $NUMBER$ ; i <= 1 ; i ++ )
rank: 849
score: 99.37739562988281
patch: for ( int i = 0 ; i <= value ; i ++ ) {
rank: 849
score: 99.37648111979166
patch: for ( int i = 0 ; i < ; i ++ ) {
rank: 849
score: 99.36258095189145
patch: for ( int i = k ; i < n - k ; i ++ ) { {
rank: 849
score: 99.32815755208334
patch: for ( int i = 1 ; i <= 0 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 850
score: 99.40337775735294
patch: for ( int i = 0 ; i > - 1 ; i ++ ) {
rank: 850
score: 99.37962239583334
patch: for ( int i = k ; i >= 1 ; i ++ )
rank: 850
score: 99.37689615885417
patch: for ( int i = k + 1 ; i < k ) {
rank: 850
score: 99.37642629523026
patch: for ( int i = n - 1 ; i <= n ; i ++ ) { {
rank: 850
score: 99.36199629934211
patch: for ( int i = k + 1 ; i < n + k ; i ++ )
rank: 850
score: 99.34917249177632
patch: for ( int i = k + $NUMBER$ ; i <= n ; i ++ ) { )
rank: 850
score: 99.32809244791666
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) n ) ;
rank: 851
score: 99.39084986636513
patch: for ( int i = k + 1 ; i < n - $NUMBER$ ; i ++ )
rank: 851
score: 99.37940216064453
patch: for ( int i = - 1 ; i >= k ; i ++ )
rank: 851
score: 99.37629250919117
patch: for for ( int i = 0 ; i < n ; i ++ ) {
rank: 851
score: 99.3489128561581
patch: for ( int i = n + 1 ; i -- <= n ; ) {
rank: 851
score: 99.3273193359375
patch: for ( int i = k ; i >= 1 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 852
score: 99.37933708639706
patch: for ( n = k - 1 ; i <= n ; i ++ ) {
rank: 852
score: 99.3611198874081
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) continue ;
rank: 852
score: 99.34865208675987
patch: if ( for ( int i = k ; i <= k ; i ++ ) ) {
rank: 852
score: 99.32721354166667
patch: for ( int i = k ; i >= $NUMBER$ ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 853
score: 99.41484239366319
patch: for ( int i = k + k ; i <= n ; ++ i ) {
rank: 853
score: 99.4030402688419
patch: for ( int i = $NUMBER$ ; i << <= n ; i ++ ) {
rank: 853
score: 99.37924373851104
patch: for ( int i = $NUMBER$ + 1 ; i >= 1 ; i ++ )
rank: 853
score: 99.37595502068015
patch: for ( int i = k + $NUMBER$ ; i < n ; i -- )
rank: 853
score: 99.34849548339844
patch: for ( String k = k ; i <= n ; i ++ ) {
rank: 853
score: 99.32691243489583
patch: for ( int i = 0 ; i >= k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 854
score: 99.4146728515625
patch: for ( int i = $NUMBER$ ; i <= n ; ; i ++ ) {
rank: 854
score: 99.40138753255208
patch: for ( int i = i + 1 ; i >= k ; i ++ ) {
rank: 854
score: 99.3792365579044
patch: for ( Object i = k + 1 ; i <= n ; i ++ )
rank: 854
score: 99.37571716308594
patch: for ( int i = k + 1 ; i < n + 1 {
rank: 854
score: 99.35960629111842
patch: for ( int i = k + 1 ; i < n : n - 1 ) {
rank: 854
score: 99.34844207763672
patch: for ( int i = k ; i <= n ; -- i ) {
rank: 854
score: 99.3268798828125
patch: for ( int i = $STRING$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 855
score: 99.38796817555146
patch: final for ( int i = 0 ; i < n ; i ++ ) {
rank: 855
score: 99.37916475183823
patch: for ( int i = $NUMBER$ ; i <= n + $NUMBER$ ; i ++ )
rank: 855
score: 99.37379455566406
patch: for ( int n = k ; n < n ; n ++ ) {
rank: 855
score: 99.34837582236842
patch: for ( int i = k ; i <= n ; i ++ ) { ) { {
rank: 855
score: 99.32687062230603
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( n , i ) ;
rank: 856
score: 99.40120697021484
patch: for ( int i = 1 ; i >= n ; i -- ) {
rank: 856
score: 99.38761179070724
patch: for ( int i = k + 1 ; i <= length - 1 ; i ++ )
rank: 856
score: 99.37540690104167
patch: for ( int i = 0 ; i < n ; i -- ) { ) {
rank: 856
score: 99.35911158511513
patch: for ( int i = k - k ; i < n ; i ++ ) { {
rank: 856
score: 99.34793251439145
patch: for ( int i = k ; i < k ; i ++ ) { n ++ {
rank: 856
score: 99.32647494612068
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum -= Math . log ( n - k ) ;
rank: 857
score: 99.41431342230902
patch: for ( double i = k + $NUMBER$ ; i <= n ; i ++ ) {
rank: 857
score: 99.40176391601562
patch: for ( int i = $NUMBER$ ; i >= 0 ; i -- ) {
rank: 857
score: 99.37845052083334
patch: for ( int k = $NUMBER$ ; i <= n ; i ++ )
rank: 857
score: 99.3724006204044
patch: for ( int i = k + 1 ; i > k ; i -- )
rank: 857
score: 99.34778594970703
patch: for ( Object i = k ; i < k ; i ++ ) {
rank: 857
score: 99.32647298177083
patch: for ( int i = 0 ; i <= 1 ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 858
score: 99.37836770450367
patch: for ( int i = - 1 ; i < $NUMBER$ ; i ++ ) {
rank: 858
score: 99.37483215332031
patch: for ( int i = 0 ; i <= true ; i ++ ) {
rank: 858
score: 99.35799367804276
patch: for ( int i = k + 1 ; i <= n : n - k ) {
rank: 858
score: 99.34759842722039
patch: for ( int i = 1 ; i <= n ; i ++ ) { i ++ {
rank: 858
score: 99.32599283854167
patch: for ( int i = 1 ; i >= 1 ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 859
score: 99.41383763363487
patch: for ( int i = k ; i <= n - k ; i ++ ) { }
rank: 859
score: 99.4006706686581
patch: for ( int i = - 1 ; i > 1 ; i ++ ) {
rank: 859
score: 99.37830307904412
patch: for ( int i = $NUMBER$ : 1 ; i <= n ; i ++ )
rank: 859
score: 99.37464815027573
patch: } for ( int i = 0 ; i < k ; i ++ ) {
rank: 859
score: 99.37197440011161
patch: for ( int i = k + 1 ; i < n )
rank: 859
score: 99.34751892089844
patch: for ( int i = n ; i <= i ; i ++ ) {
rank: 859
score: 99.325927734375
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( double ) i ; }
rank: 860
score: 99.41356743706598
patch: for ( int i = $NUMBER$ ; i <= n - max ; i ++ ) {
rank: 860
score: 99.3871208639706
patch: final for ( int i = 0 ; i <= n ; i ++ ) {
rank: 860
score: 99.3782958984375
patch: for ( int i = 0 + 1 ; i >= n ; i ++ )
rank: 860
score: 99.37428193933823
patch: for ( int i = 0 ; i < n ; i i -- ) {
rank: 860
score: 99.37155330882354
patch: for ( int i = k ; i >= n ; i -- ) { {
rank: 860
score: 99.35777282714844
patch: for ( int i = k == n + 1 ; i ++ ) {
rank: 860
score: 99.3259033203125
patch: for ( int i = max ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 861
score: 99.38669947574013
patch: for ( int i = 0 + 1 ; i < n ; i ++ ) { }
rank: 861
score: 99.378173828125
patch: for ( n = k ; i <= n ; i ++ ) {
rank: 861
score: 99.3739990234375
patch: for ( int i = 0 ; i <= n ; i -- )
rank: 861
score: 99.3711296530331
patch: for ( float i = k + 1 ; i <= n ; i ++ )
rank: 861
score: 99.32574252424568
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( 0 , i ) ;
rank: 862
score: 99.4127197265625
patch: for ( Iterator i = n ; i . < n ; i ++ ) {
rank: 862
score: 99.37808227539062
patch: for ( int i = - 1 ; i >= n ; i ++ )
rank: 862
score: 99.37396240234375
patch: for ( int i = 0 ; i < n ; i ++ ) ;
rank: 862
score: 99.37103630514706
patch: for ( int i = k ; i <= k ; ++ ++ i ) {
rank: 862
score: 99.35699462890625
patch: for ( Object i = $NUMBER$ ; i < n ; i ++ ) {
rank: 862
score: 99.32565833782327
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ;
rank: 863
score: 99.41265869140625
patch: for ( int i = k + 1 ; i <= n ; i ++ ) :
rank: 863
score: 99.3779296875
patch: for ( int i = $NUMBER$ ; i != $NUMBER$ ; i ++ ) { {
rank: 863
score: 99.37085678998162
patch: for ( int i = 0 + ; i <= n ; i ++ ) {
rank: 863
score: 99.34702662417763
patch: for ( int i = k ; i <= k ; i ++ ) { ) { }
rank: 863
score: 99.32547095514113
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ] ) ;
rank: 864
score: 99.37781479779412
patch: for ( int i = 0 - 1 ; i <= k ; i ++ )
rank: 864
score: 99.37247467041016
patch: for ( int i += 0 ; i < n ; i ++ ) {
rank: 864
score: 99.3702033547794
patch: for ( int i = 0 ) ; i <= n ; i ++ ) {
rank: 864
score: 99.35697937011719
patch: for ( int i = 0 ; i != $NUMBER$ ; i ++ ) {
rank: 864
score: 99.34658974095395
patch: for ( int i = n + 1 ; i >= n ; i ++ ) { )
rank: 864
score: 99.32525227864583
patch: for ( int i = $NUMBER$ ; i < 0 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 865
score: 99.41242811414931
patch: for ( double i = $NUMBER$ ; i <= n + k ; i ++ ) {
rank: 865
score: 99.3772834329044
patch: for ( int i = 0 + 1 ; i >= $NUMBER$ ; i ++ )
rank: 865
score: 99.37245088465073
patch: } for ( int i = 0 ; i <= k ; i ++ ) {
rank: 865
score: 99.34607696533203
patch: for ( int i = Math ; i < k ; i ++ ) {
rank: 865
score: 99.32505355342742
patch: for ( int i = k ++ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 866
score: 99.39797973632812
patch: for ( int i = 1 ; i != k ; i ++ ) {
rank: 866
score: 99.38450863486842
patch: for ( int i = k + 1 ; i <= max - 1 ; i ++ )
rank: 866
score: 99.37727625229779
patch: for ( int i = 0 ; i != n ; i ++ ) { {
rank: 866
score: 99.37242126464844
patch: for ( int i = 0 ; i < n ; i ++ ) )
rank: 866
score: 99.37003820082721
patch: for ( int i = k ) ; i < n ; i ++ ) {
rank: 866
score: 99.34593200683594
patch: for ( int i = k ; n <= k ; i ++ ) {
rank: 866
score: 99.32428385416667
patch: for ( double i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 867
score: 99.38432965959821
patch: for ( int i = k > 1 ; i ++ ) {
rank: 867
score: 99.37720444623162
patch: for ( int i = k - 1 ; i <= i ; i ++ )
rank: 867
score: 99.37230631510417
patch: for ( i = k ; i <= n ; i ++ ) {
rank: 867
score: 99.36947811351104
patch: for ( int i = k ] ; i <= k ; i ++ ) {
rank: 867
score: 99.35617547286184
patch: for ( int i = 0 ; i <= n + k ; i ++ ) { {
rank: 867
score: 99.34576416015625
patch: for ( int n = k ; n <= n ; i ++ ) {
rank: 868
score: 99.39493815104167
patch: for ( int i = n ; i < n ; i ++ )
rank: 868
score: 99.37708237591912
patch: for ( int i = k - 1 ; i == $NUMBER$ ; i ++ )
rank: 868
score: 99.37159075055804
patch: for ( ; i <= n + 1 ; i ++ ) {
rank: 868
score: 99.32402512122844
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i - n ) ;
rank: 869
score: 99.3960025185033
patch: for ( int i = k + 1 ; i > 1 ; i ++ ) { {
rank: 869
score: 99.39337565104167
patch: for ( int i = k + 1 ; i >= n ) {
rank: 869
score: 99.3832778930664
patch: for ( int i = 0 ; int < n ; i ++ ) {
rank: 869
score: 99.37145182291667
patch: for ( int i = 0 ; i < 1 ; i ++ )
rank: 869
score: 99.369140625
patch: for ( int i = k + 1 ; i >= n ; -- i )
rank: 869
score: 99.3452212685033
patch: for ( int i = k ; i < n ; i ++ ) { i -- {
rank: 869
score: 99.32392578125
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( int ) i ) ;
rank: 870
score: 99.41107855902777
patch: for ( Object i = k ; i <= n - k ; i ++ ) {
rank: 870
score: 99.39571982935855
patch: for ( int i = k + 1 ; i >= - k ; i -- ) {
rank: 870
score: 99.38327508223684
patch: for ( int i = k + 1 ; i <= 0 + 1 ; i ++ )
rank: 870
score: 99.37657255284927
patch: for ( int i = 1 ; i >= $NUMBER$ ; i ++ ) { {
rank: 870
score: 99.37065887451172
patch: for ( int i = k ; i < value ; i ++ ) {
rank: 870
score: 99.3687515258789
patch: for ( int k = k ; i <= n ; k ++ ) {
rank: 870
score: 99.32378743489583
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum = Math . log ( ( double ) i ) ;
rank: 871
score: 99.4107306985294
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { String
rank: 871
score: 99.38322230747768
patch: for ( int i = k >= 1 ; i ++ ) {
rank: 871
score: 99.37053680419922
patch: for ( Class i = 0 ; i <= n ; i ++ ) {
rank: 871
score: 99.32360026041667
patch: for ( int i = k ; i <= 0 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 872
score: 99.37602233886719
patch: for ( int i = $STRING$ ; i <= $NUMBER$ ; i ++ ) {
rank: 872
score: 99.37036946614583
patch: for ( int i = 0 ; i < 0 ; i ++ )
rank: 872
score: 99.34450169613487
patch: for ( int i = n + 1 ; i >= n ; i ++ ) { {
rank: 872
score: 99.32150170110887
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ; }
rank: 873
score: 99.41038682725694
patch: / * for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 873
score: 99.37594784007354
patch: for ( int i = $NUMBER$ - 1 ; i >= n ; i ++ )
rank: 873
score: 99.37004258897569
patch: for ( int i = k ; i < n ; ( i ++ ) ) {
rank: 873
score: 99.36768296185662
patch: for ( int i = 0 ; i < n 0 ; i ++ ) {
rank: 873
score: 99.34404754638672
patch: for ( Integer i = k ; i <= n ; i ++ ) {
rank: 873
score: 99.32144368489584
patch: for ( int i = k + 1 ; i [ i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 874
score: 99.38991411994485
patch: for ( int k = k + 1 ; i < n ; i ++ )
rank: 874
score: 99.38185747931985
patch: for ( int i = k ] ; i <= 0 ; i ++ ) {
rank: 874
score: 99.37590789794922
patch: for ( int i = - 1 ; i >= 0 ; i ++ )
rank: 874
score: 99.32085774739583
patch: for ( int i = 0 ; i == n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 875
score: 99.39072779605263
patch: for ( int i = k ; i <= n - k - k ; i ++ )
rank: 875
score: 99.366455078125
patch: for ( float i = k ; i < n ; i ++ ) {
rank: 875
score: 99.3434829711914
patch: for ( int k = k ; i <= k ; i ++ ) {
rank: 875
score: 99.32058919270834
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( String ) i ) ;
rank: 876
score: 99.40999109604779
patch: ! for ( int i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 876
score: 99.38149542557566
patch: for ( int i = k + 1 ; i < 0 ; i ++ ) { }
rank: 876
score: 99.37574055989583
patch: for ( int i = $NUMBER$ ; i < i ; i ++ )
rank: 876
score: 99.36943502987133
patch: for ( int i = k ; i <= - $NUMBER$ ; i ++ ) {
rank: 876
score: 99.36623965992646
patch: for ( int i = k 1 ; i >= n ; i -- ) {
rank: 876
score: 99.3205078125
patch: for ( int i = 1 ; i < i ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 877
score: 99.40951717601104
patch: for ( i = k ; i <= n - k ; i ++ ) {
rank: 877
score: 99.38826497395833
patch: for ( i = k ; i < n ; i ++ ) {
rank: 877
score: 99.3756103515625
patch: for ( int i = k - 1 ; i < 1 ; i ++ )
rank: 877
score: 99.36939154730902
patch: for ( int i = k + 1 ; i < k ; i ++ ) ;
rank: 877
score: 99.36598115808823
patch: for ( int i = k - 1 ; i <= ; i ++ ) {
rank: 877
score: 99.35038757324219
patch: if ( ( k == $NUMBER$ ) || ( k == 1 ) ) {
rank: 877
score: 99.34326171875
patch: for ( int i = k ; i <= i ; i ++ ) { ) {
rank: 877
score: 99.32044270833333
patch: for ( int i = 1 ; i != n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 878
score: 99.40951199001736
patch: for ( Object i = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 878
score: 99.38777429917279
patch: for ( int i = i ; i < n ; i ++ ) { {
rank: 878
score: 99.38136291503906
patch: for ( int i = 0 ; 1 < k ; i ++ ) {
rank: 878
score: 99.36923397288604
patch: for ( int i = k ; i < n ; i += 1 ) {
rank: 878
score: 99.36595961626838
patch: for ( i = k + 1 ; i >= k ; i -- ) {
rank: 878
score: 99.34307098388672
patch: for ( Class i = k ; i <= n ; i ++ ) {
rank: 878
score: 99.320361328125
patch: for ( int i = length ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 879
score: 99.37545955882354
patch: for ( int i = this . n ; i <= n ; i ++ )
rank: 879
score: 99.34281198601974
patch: if ( for ( int i = 0 ; i <= n ; i ++ ) ) {
rank: 879
score: 99.32029622395834
patch: for ( int i = 1 ; i <= n ; i -- ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 880
score: 99.40877278645833
patch: for ( int k = $NUMBER$ ; i <= n - k ; i ++ ) {
rank: 880
score: 99.38755888097427
patch: for ( int i = - 1 ; i >= n ; i -- ) {
rank: 880
score: 99.38121032714844
patch: for ( int i = 0 ; i <= min ; i ++ ) {
rank: 880
score: 99.37535749162946
patch: for ( k = $NUMBER$ ; i <= n ; i ++ )
rank: 880
score: 99.36868286132812
patch: for ( int i += k ; i < n ; i ++ ) {
rank: 880
score: 99.34664113898026
patch: for ( int i = $NUMBER$ ; i <= n - 1 : n - k ) {
rank: 880
score: 99.3197998046875
patch: for ( int i = k + 1 ; i . < n ; i ++ ) { log CaMeL Sum -= Math . log ( i ) ;
rank: 881
score: 99.38865260074013
patch: for ( int i = k - 1 ; i == n ; i ++ ) { {
rank: 881
score: 99.37533748851104
patch: for ( int i = $NUMBER$ ; i >= $NUMBER$ ; i ++ ) { }
rank: 881
score: 99.36857335707721
patch: for ( int i = 0 ; i < k ; i += 1 ) {
rank: 881
score: 99.3419418334961
patch: for ( int i = k , n < n ; i ++ ) {
rank: 881
score: 99.31964518229167
patch: for ( int i = $NUMBER$ ; i > 0 ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 882
score: 99.40815565321181
patch: for ( int i = $NUMBER$ ; i <= 1 - k ; i ++ ) {
rank: 882
score: 99.38747989430146
patch: for ( int i = n ; i < n + 1 ; i ++ )
rank: 882
score: 99.3807373046875
patch: boolean for ( int i = 0 ; i < n ; i ++ ) {
rank: 882
score: 99.37492101332721
patch: for ( int i = k - 1 ; i == k ; i ++ )
rank: 882
score: 99.36457061767578
patch: for ( int k = 0 ; n <= n ; i ++ ) {
rank: 882
score: 99.34185431985294
patch: for ( int i = k ; i <= k ; i ++ ) { }
rank: 882
score: 99.3195068359375
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( float ) i ) ;
rank: 883
score: 99.37479400634766
patch: for ( int i = - 0 ; i <= n ; i ++ )
rank: 883
score: 99.36454010009766
patch: for ( i = k + 1 ; i <= n ; i ++ )
rank: 883
score: 99.34165954589844
patch: for ( int n = k ; i < k ; i ++ ) {
rank: 883
score: 99.31927083333333
patch: for ( int i = 0 ; i <= $NUMBER$ ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 884
score: 99.37439727783203
patch: for ( int i += $NUMBER$ ; i <= n ; i ++ ) {
rank: 884
score: 99.36786651611328
patch: for ( int i = k ; i < $STRING$ ; i -- ) {
rank: 884
score: 99.36408547794117
patch: * for ( int i = k ; i <= k ; i ++ ) {
rank: 884
score: 99.34345446134868
patch: for ( int i = $NUMBER$ ; i < n + 1 : n - k ) {
rank: 884
score: 99.3414370888158
patch: for ( int i = 1 ; i <= n - 1 ; i ++ ) { )
rank: 884
score: 99.3185302734375
patch: for ( int i = 1 ; i <= 1 ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 885
score: 99.40764024522569
patch: for ( double i = $NUMBER$ ; i < n - k ; i ++ ) {
rank: 885
score: 99.3861443014706
patch: for ( int i = k $NUMBER$ ; i < n ; i ++ ) {
rank: 885
score: 99.36773681640625
patch: for ( int i = k ; i <= false ; i ++ ) {
rank: 885
score: 99.31835123697917
patch: for ( int i = $NUMBER$ ; i < $NUMBER$ ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 886
score: 99.40717230902777
patch: k ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 886
score: 99.37933028371711
patch: for ( int i = k + $NUMBER$ ; i <= n ; i ++ ) { }
rank: 886
score: 99.37197265625
patch: for ( int i = 0 ; i > $NUMBER$ ; i ++ )
rank: 886
score: 99.36403521369485
patch: for ( int i = k + 1 ; -- i <= n ; ) {
rank: 886
score: 99.34111785888672
patch: for ( String i = k ; i <= k ; i ++ ) {
rank: 886
score: 99.31802571614584
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) n ) ;
rank: 887
score: 99.38497924804688
patch: for ( int i = $NUMBER$ ; i >= 1 ; i -- ) {
rank: 887
score: 99.36628723144531
patch: for ( int i = k + 1 ; i <= n + ) {
rank: 887
score: 99.36399931066177
patch: for ( i = k - 1 ; i < n ; i ++ ) {
rank: 887
score: 99.3408432006836
patch: for ( int i = k ; i < n ; i ] ) {
rank: 887
score: 99.31717936197917
patch: for ( int i = 1 ; i == n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 888
score: 99.40560574001736
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { try {
rank: 888
score: 99.3781802528783
patch: for ( int i = k + 1 ; i <= i + 1 ; i ++ )
rank: 888
score: 99.37106323242188
patch: for ( Iterator i = n ; i <= n ; i ++ ) {
rank: 888
score: 99.34056899126838
patch: for ( int i = k ; i <= 0 ; i ++ ) { )
rank: 888
score: 99.3171630859375
patch: for ( int i = k ; i > n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 889
score: 99.36992645263672
patch: for ( int i = $NUMBER$ ; i <= n : n - k )
rank: 889
score: 99.36308737362133
patch: for ( int i = k - 1 ; i <= k ; ++ i )
rank: 889
score: 99.3404605263158
patch: for ( int i = k ; i <= n ; i ++ ) { { ) {
rank: 889
score: 99.3404541015625
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) throws
rank: 889
score: 99.31680501302084
patch: for ( int i = k ; i <= 1 ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 890
score: 99.36951446533203
patch: for ( int int i = 0 ; i <= n ; i ++ )
rank: 890
score: 99.3615951538086
patch: for ( int k = k ; i < n ; k ++ ) {
rank: 890
score: 99.34042840254934
patch: for ( int i = k + 1 ; i < 1 ; i ++ ) { )
rank: 890
score: 99.3166259765625
patch: for ( int i = 1 ; i < k ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 891
score: 99.38207289751838
patch: for ( int i = k ; i >= n + 1 ; i ++ )
rank: 891
score: 99.37710089432566
patch: for ( int i = k + 1 ; i <= 1 ; i ++ ) { }
rank: 891
score: 99.368310546875
patch: for ( int i = 1 ; i <= 0 ; i ++ )
rank: 891
score: 99.316259765625
patch: for ( int i = 1 ; i > 1 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 892
score: 99.40511745876736
patch: for ( Object i = n + 1 ; i <= n ; i ++ ) {
rank: 892
score: 99.38227282072368
patch: for ( int i = k + 1 ; i > k ; i ++ ) { {
rank: 892
score: 99.37702379728618
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { else
rank: 892
score: 99.36817932128906
patch: for ( k = k + 1 ; i <= n ; i ++ )
rank: 892
score: 99.36215209960938
patch: for ( int i += k ; i <= n ; i ++ ) {
rank: 892
score: 99.36076085707721
patch: for ( int i = 0 , ; i <= n ; i ++ ) {
rank: 892
score: 99.34030151367188
patch: for ( int i = k + 1 ; i - n ++ ) {
rank: 892
score: 99.33786492598684
patch: for ( int i = $NUMBER$ ; i <= n - k : n - k ) {
rank: 892
score: 99.31613060735887
patch: for ( int i = k ] ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 893
score: 99.4046271829044
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { int
rank: 893
score: 99.37983972886029
patch: for ( i = k + 1 ; i >= n ; i ++ ) {
rank: 893
score: 99.36810709635417
patch: for ( int i = $NUMBER$ ; i == 0 ; i ++ )
rank: 893
score: 99.36046600341797
patch: for ( int k = 0 ; n <= n ; k ++ ) {
rank: 893
score: 99.34027862548828
patch: for ( int i = k ; i <= k ; k ++ ) {
rank: 893
score: 99.31573893229167
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( double ) ( i ) ;
rank: 894
score: 99.40433756510417
patch: for ( double i = k + 1 ; i <= 1 ; i ++ ) {
rank: 894
score: 99.37598374310662
patch: for ( int i = 0 ; i < k ; i ++ ) { }
rank: 894
score: 99.34013928865132
patch: for ( int i = 1 ; i <= n + 1 ; i ++ ) { )
rank: 894
score: 99.3156029485887
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { return log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 895
score: 99.40432559742646
patch: for ( int i = $NUMBER$ ; i -- <= n ; i ++ ) {
rank: 895
score: 99.3787841796875
patch: for ( int i = n + 1 ; i >= n ; i ++ )
rank: 895
score: 99.37566174958882
patch: for ( int i = k + 1 ; i >= 0 + 1 ; i ++ )
rank: 895
score: 99.36146545410156
patch: for ( int i = k ; i < true ; i ++ ) {
rank: 895
score: 99.34001922607422
patch: for ( int i = k ; i < n ; n ++ ) {
rank: 895
score: 99.33689778645834
patch: for ( n = $NUMBER$ ; i < n ; i ++ ) {
rank: 895
score: 99.31529134114584
patch: for ( int i = ] ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 896
score: 99.40371524586396
patch: for ( int i = $NUMBER$ ; ; i <= n ; i ++ ) {
rank: 896
score: 99.3671875
patch: for ( int i = $NUMBER$ ; i <= n ; i -- )
rank: 896
score: 99.35924574908088
patch: for ( int i = 0 ; int i < n ; i ++ ) {
rank: 896
score: 99.33963775634766
patch: for ( int i = length ; i < n ; i ++ ) {
rank: 896
score: 99.31521809895834
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( float ) i ) ;
rank: 897
score: 99.37864774816177
patch: for ( int i = k ; i >= n ; i ++ ) { {
rank: 897
score: 99.36665852864583
patch: for ( n = 0 ; i <= n ; i ++ ) {
rank: 897
score: 99.35922241210938
patch: for ( int k = k ; k < n ; i ++ ) {
rank: 897
score: 99.33952331542969
patch: for ( int n = k ; n < k ; i ++ ) {
rank: 897
score: 99.315087890625
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . abs ( ( double ) i ) ;
rank: 898
score: 99.40227508544922
patch: for ( int i = $NUMBER$ ; i <= n ; k ++ ) {
rank: 898
score: 99.38106536865234
patch: for ( int i = $NUMBER$ ; i >= n ; i -- ) {
rank: 898
score: 99.3785759420956
patch: for ( int i = ~ 1 ; i <= n ; i ++ ) {
rank: 898
score: 99.3603515625
patch: for ( int i = k + 1 ; i <= k ; i -- )
rank: 898
score: 99.35919548483456
patch: for ( int i = k ; i >= k ; i -- ) { {
rank: 898
score: 99.33890787760417
patch: for ( int i = k + 1 ; i < n ; i ] ) {
rank: 898
score: 99.31505166330645
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ; }
rank: 899
score: 99.40146053538604
patch: for ( k = $NUMBER$ ; i <= n - 1 ; i ++ ) {
rank: 899
score: 99.37392064144737
patch: for ( int i = k + 1 ; i >= 1 ; i ++ ) { }
rank: 899
score: 99.36512858072916
patch: for ( long i = $NUMBER$ ; i <= n ; i ++ )
rank: 899
score: 99.360107421875
patch: for ( int i = 0 ; i <= n ; = i ) {
rank: 899
score: 99.35910931755515
patch: for ( k = k + 1 ; n <= n ; k ++ ) {
rank: 899
score: 99.31455078125
patch: for ( int i = k ; i >= 0 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 900
score: 99.38039679276316
patch: for ( int i = $NUMBER$ ; i <= k - 1 ; i ++ ) { {
rank: 900
score: 99.37377211626838
patch: for ( int i = 0 ; i <= n ; length ++ i ) {
rank: 900
score: 99.36456298828125
patch: for ( float i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 900
score: 99.3380126953125
patch: for ( i = 1 ; i <= k ; i ++ ) {
rank: 900
score: 99.33375308388158
patch: for ( int i = 0 ; i < n + k ; i ++ ) { {
rank: 900
score: 99.31371256510417
patch: for ( int i = 1 ; i >= k ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 901
score: 99.37359978170956
patch: for ( int i = 0 ; i < 0 ; i ++ ) { {
rank: 901
score: 99.36399841308594
patch: for ( int i = 1 ; i == $NUMBER$ ; i ++ ) {
rank: 901
score: 99.35893249511719
patch: for ( int k = k ; k < n ; k ++ ) {
rank: 901
score: 99.35733795166016
patch: for ( int i = $NUMBER$ ; i < k ; i -- ) {
rank: 901
score: 99.33725155101104
patch: for ( int i = k ; i < 1 ; i ++ ) { {
rank: 901
score: 99.3134521484375
patch: for ( int i = $NUMBER$ ; i <= n ; -- i ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 902
score: 99.39990234375
patch: for ( k = k + 1 ; k <= n ; i ++ ) {
rank: 902
score: 99.38011410361842
patch: for ( int i = k - 0 ; i <= n ; i ++ ) { {
rank: 902
score: 99.36327311197917
patch: for ( int i = 0 ; i == $NUMBER$ ; i ++ )
rank: 902
score: 99.35873592601104
patch: for ( int i = k - 1 ; i >= k ; ++ i )
rank: 902
score: 99.33697509765625
patch: for ( int i = 1 ; i <= max ; i ++ ) {
rank: 902
score: 99.33312116350446
patch: for ( int i = k + 1 : n + 1 )
rank: 902
score: 99.31193033854167
patch: for ( int i = 0 ; i <= 0 ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 903
score: 99.36209309895834
patch: for ( int i = max ; i <= n ; i ++ )
rank: 903
score: 99.35673522949219
patch: for ( int i = 0 ; i < n ; i 1 ) {
rank: 903
score: 99.33305921052632
patch: for ( int i = k + 1 ; i <= 1 : n - 1 ) {
rank: 903
score: 99.31187337239584
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( short ) i ) ;
rank: 904
score: 99.39641256893383
patch: for ( int i = $NUMBER$ ; i <= <= n ; i ++ ) {
rank: 904
score: 99.36151123046875
patch: for ( int i = SIZE ; i <= n ; i ++ ) {
rank: 904
score: 99.35659790039062
patch: for ( int i = 0 ; i < size ; i -- ) {
rank: 904
score: 99.33612738715277
patch: for ( int i = k + 1 ; i <= n ; i 1 ) {
rank: 904
score: 99.33244885896382
patch: for ( int i = 1 ; i < n - k ; i ++ ) { {
rank: 904
score: 99.31171061197917
patch: for ( int i = $NUMBER$ ; i < 1 ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 905
score: 99.35734558105469
patch: for ( double i = 0 ; i < k ; i ++ ) {
rank: 905
score: 99.35633087158203
patch: for ( int i = 0 ; i >= 1 ; i -- ) {
rank: 905
score: 99.33556365966797
patch: for ( int i = k ; k <= k ; i ++ ) {
rank: 905
score: 99.33226254111842
patch: for ( int i = k - 1 ; i <= n ; i ++ ) break ;
rank: 905
score: 99.31156412760417
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( String ) i ) ;
rank: 906
score: 99.37165069580078
patch: for ( int i = 0 ; n < n ; i ++ ) {
rank: 906
score: 99.31143680695564
patch: for ( final int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 907
score: 99.37837219238281
patch: for ( int i = $NUMBER$ ; i <= true ; i ++ ) {
rank: 907
score: 99.37560317095588
patch: * for ( int i = 1 ; i < n ; i ++ ) {
rank: 907
score: 99.35952758789062
patch: for ( int i = $NUMBER$ ; i instanceof k ; i ++ ) {
rank: 907
score: 99.35591125488281
patch: for ( int i = k ; 1 <= n ; i ++ ) {
rank: 907
score: 99.33159436677632
patch: for ( int i = k + 1 ; i < $NUMBER$ ; i ++ ) { {
rank: 907
score: 99.311279296875
patch: for ( int i = k ; i != n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 908
score: 99.35941314697266
patch: for ( int i = $NUMBER$ 1 ; i <= n ; i ++ )
rank: 908
score: 99.3310791015625
patch: for ( i = $NUMBER$ ; i < n ; i ++ ) {
rank: 908
score: 99.31112467447916
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( byte ) i ) ;
rank: 909
score: 99.37525132123162
patch: for ( int i = k ; i <= n + n ; i ++ )
rank: 909
score: 99.35921478271484
patch: for ( double i = $NUMBER$ ; i <= k ; i ++ ) {
rank: 909
score: 99.35537719726562
patch: for ( String i = 0 ; i <= k ; i ++ ) {
rank: 909
score: 99.31101888020834
patch: for ( int i = 0 ; i <= n ; ++ i ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 910
score: 99.37698524876645
patch: for ( int i = 0 - 1 ; i <= n ; i ++ ) { {
rank: 910
score: 99.3699951171875
patch: for ( int i = k + 1 ; i < n / 1 ; i ++ )
rank: 910
score: 99.35574340820312
patch: for ( Number i = 0 ; i <= n ; i ++ ) {
rank: 910
score: 99.35521742876838
patch: for ( int i = 0 ; i <= n ; i -- ) { {
rank: 910
score: 99.3331069946289
patch: for ( int i = i ; i < k ; i ++ ) {
rank: 910
score: 99.31085611979167
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( float ) i ) ;
rank: 911
score: 99.36896715666118
patch: for ( int i = k + 1 ; i <= max ; i ++ ) { {
rank: 911
score: 99.35491943359375
patch: for ( int i = 0 ; i <= i ; i -- ) {
rank: 911
score: 99.332568359375
patch: for ( int i = ; i <= n ; i ++ ) {
rank: 911
score: 99.33041863692434
patch: for ( int i = k ; i <= n + k ; i ++ ) { {
rank: 911
score: 99.31034342447917
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( int ) i ) ;
rank: 912
score: 99.35661315917969
patch: for ( int i = 0 ; i ! n ; i ++ ) {
rank: 912
score: 99.35560518152573
patch: for ( int i = 1 1 ; i <= n ; i ++ ) {
rank: 912
score: 99.35430501302083
patch: for ( int i = k + $NUMBER$ ; i < n ) {
rank: 912
score: 99.32993035567434
patch: for ( int i = $NUMBER$ ; i <= i - 1 ; i ++ ) { {
rank: 912
score: 99.31017672631049
patch: for ( int i = k + 1 ; i <= n ; i ++ ) log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 913
score: 99.36782355057566
patch: for ( int i = k + 1 ; i <= start - 1 ; i ++ )
rank: 913
score: 99.35411834716797
patch: for ( int i = 0 ; i < false ; i -- ) {
rank: 913
score: 99.3100830078125
patch: for ( int i = k ; i <= n ; i -- ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 914
score: 99.3316162109375
patch: for = k + 1 ; i <= n ; i ++ ) {
rank: 914
score: 99.30987141927083
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) n ) ;
rank: 915
score: 99.35328584558823
patch: for ( int i = k ; i <= n ; ++ i ) { {
rank: 915
score: 99.30983072916666
patch: for ( int i = k ; i < k ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 916
score: 99.36705106847427
patch: for ( int i = 0 ; i < n ; length ++ i ) {
rank: 916
score: 99.35307042738971
patch: for ( k = k + 1 ; n <= n ; i ++ ) {
rank: 916
score: 99.30980631510417
patch: for ( int i = k ; i >= k ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 917
score: 99.36656429893092
patch: for ( int i = k - 1 ; i >= 0 ; i ++ ) { }
rank: 917
score: 99.35298426011029
patch: for ( int i = 0 ; i <= n ; ++ i ) { {
rank: 917
score: 99.35260772705078
patch: for ( int i = 0 ; i <= n ; i ++ ) ;
rank: 917
score: 99.33057403564453
patch: for ( int i = k + 1 ; i - 1 ++ ) {
rank: 917
score: 99.30958606350806
patch: for ( int i = 1 ; i <= n ; i ++ ) { double log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 918
score: 99.3728256225586
patch: for ( int i = $NUMBER$ ; i > $NUMBER$ ; i -- ) {
rank: 918
score: 99.35480499267578
patch: for ( int i = - 1 ; i <= 0 ; i ++ )
rank: 918
score: 99.35258214613971
patch: for ( int i = k + $NUMBER$ ; i < k ; i ++ )
rank: 918
score: 99.32762386924342
patch: for ( int i = 1 ; i < n - 1 ; i ++ ) { {
rank: 918
score: 99.30952305947581
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i + ) ;
rank: 919
score: 99.35477447509766
patch: for ( int i = - 1 ; i != n ; i ++ )
rank: 919
score: 99.35256958007812
patch: for ( int i = 0 ; i <= n ; i ++ ) )
rank: 919
score: 99.3301010131836
patch: for ( Iterator i = k ; i < k ; i ++ ) {
rank: 919
score: 99.30882975260417
patch: for ( int i = k ; i >= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 920
score: 99.36663459329044
patch: for ( int i = k + 1 ; ++ i < n ; ) {
rank: 920
score: 99.35453287760417
patch: for ( int i = $NUMBER$ ; i ! n ; i ++ )
rank: 920
score: 99.3525390625
patch: for ( double i = 1 ; i < n ; i ++ ) {
rank: 920
score: 99.35235236672794
patch: for ( int i = 0 ; i < 1 ; i ++ ) { {
rank: 920
score: 99.33006286621094
patch: for ( int i = k ; 1 < n ; i ++ ) {
rank: 920
score: 99.30882975260417
patch: for ( int k = $NUMBER$ ; k <= n ; k ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 921
score: 99.36598607113487
patch: for ( int i = 0 + 1 ; i <= 0 ; i ++ ) { {
rank: 921
score: 99.3520278930664
patch: for ( Number i = k ; i <= n ; i ++ ) {
rank: 921
score: 99.30850423177084
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += ( Math . log ( double ) i ) ;
rank: 922
score: 99.37222450657895
patch: for ( int i = k - 1 ; i != n ; i ++ ) { {
rank: 922
score: 99.36577606201172
patch: for ( int i = 0 ; k <= 0 ; i ++ ) {
rank: 922
score: 99.35430501302083
patch: for ( double i = 0 ; i <= n ; i ++ )
rank: 922
score: 99.35113166360294
patch: * for ( int i = 0 ; i < k ; i ++ ) {
rank: 922
score: 99.32965087890625
patch: for ( int i = k ; i <= min ; i ++ ) {
rank: 922
score: 99.326318359375
patch: for ( int i = k + 1 ; i <= n ++ )
rank: 922
score: 99.30820785030242
patch: for ( int i = - 1 ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 923
score: 99.35008239746094
patch: for ( int i += 0 ; i <= n ; i ++ ) {
rank: 923
score: 99.3296127319336
patch: for ( int i = max ; i < k ; i ++ ) {
rank: 923
score: 99.32584421258224
patch: for ( int i = $NUMBER$ ; i < n + 1 : n - 1 ) {
rank: 923
score: 99.30633951822917
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( Integer ) i ) ;
rank: 924
score: 99.35390625
patch: for ( int i = k ; i < $NUMBER$ ; i ++ )
rank: 924
score: 99.32512464021382
patch: for ( int i = $NUMBER$ ; i <= n : n ; i ++ ) { {
rank: 924
score: 99.30604654947916
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( int ) i ) ;
rank: 925
score: 99.36472455193015
patch: { for ( int i = 0 ; i < n ; i ++ ) {
rank: 925
score: 99.35309244791667
patch: for ( int i = 1 ; i != n ; i ++ )
rank: 925
score: 99.34992980957031
patch: for ( int i = 0 ; i < max ; i -- ) {
rank: 925
score: 99.32486765008224
patch: for ( int i = $NUMBER$ ; i <= n - k : n - 1 ) {
rank: 925
score: 99.305419921875
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) k ) ;
rank: 926
score: 99.3526611328125
patch: for ( int i = $NUMBER$ ; k <= n ; i ++ ) {
rank: 926
score: 99.34921264648438
patch: for ( int n = 0 ; i < n ; ++ n ) {
rank: 926
score: 99.32834041819854
patch: for ( int i = k ; i < 0 ; i ++ ) { {
rank: 926
score: 99.30531412760416
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( double ) ( i ) ;
rank: 927
score: 99.36461684283088
patch: for ( int i = n ; i <= n ; i ++ ) { {
rank: 927
score: 99.36383377878289
patch: for ( int i = 0 ; i < k ; i ++ ) { i ++ ;
rank: 927
score: 99.35240173339844
patch: for ( n = $NUMBER$ ; i <= n ; i ++ ) { {
rank: 927
score: 99.34939575195312
patch: for ( int i = k ; i < n ; = i ) {
rank: 927
score: 99.34777069091797
patch: for ( int n = 0 ; n < n ; i ++ ) {
rank: 927
score: 99.32396175986842
patch: for ( int i = 1 ; i <= n + 1 ; i ++ ) { {
rank: 927
score: 99.304296875
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( ( float ) i ) ;
rank: 928
score: 99.35188802083333
patch: for ( int i = k ; i > $NUMBER$ ; i ++ )
rank: 928
score: 99.34922880284927
patch: for ( int i = k + 1 ; i < 1 ; i -- )
rank: 928
score: 99.32393606085526
patch: for ( int i = $NUMBER$ ; i <= n - 1 ; i ++ ) break ;
rank: 928
score: 99.30369518649194
patch: for ( int i = k ++ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 929
score: 99.36377716064453
patch: for ( int i = k ; i >= n ; ++ i ) {
rank: 929
score: 99.3518295288086
patch: if ( ( k == $NUMBER$ ) || ( k == 0 ) ) {
rank: 929
score: 99.34697614397321
patch: for ( int i = k + 1 ; i <= k )
rank: 929
score: 99.32733513327206
patch: for ( int i = k ; i <= k ; i ++ ) { ;
rank: 929
score: 99.3022216796875
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( byte ) i ) ;
rank: 930
score: 99.36323098575367
patch: for ( int i = i ; i < n + 1 ; i ++ )
rank: 930
score: 99.36184210526316
patch: for ( int i = k + 1 ; i < k ; i ++ ) { }
rank: 930
score: 99.35076904296875
patch: for ( int i = - k ; i <= $NUMBER$ ; i ++ )
rank: 930
score: 99.34597778320312
patch: for ( int i = 0 ; i >= k ; i -- ) {
rank: 930
score: 99.30195470010081
patch: for ( int i = 0 ; i <= n ; i ++ ) { double log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 931
score: 99.34967041015625
patch: for ( int i = k ; i != $NUMBER$ ; i ++ ) {
rank: 931
score: 99.326904296875
patch: for ( int i = k == n ; i ++ ) {
rank: 931
score: 99.32253546463816
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) break ;
rank: 931
score: 99.30083821614583
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( int ) i ) ;
rank: 932
score: 99.36174774169922
patch: for ( int i = k ; i < min ; i ++ ) {
rank: 932
score: 99.34965515136719
patch: for ( Double i = $NUMBER$ ; i <= n ; i ++ ) {
rank: 932
score: 99.34727478027344
patch: for ( int i = 0 ; 1 <= n ; i ++ ) {
rank: 932
score: 99.32235557154605
patch: for ( int i = $NUMBER$ - 1 ; i < n ; i ++ ) { {
rank: 932
score: 99.3006103515625
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum , Math . log ( ( double ) i ) ;
rank: 933
score: 99.3484130859375
patch: for ( int i = 1 ; i >= n ; i ++ )
rank: 933
score: 99.32683967141544
patch: for ( int i = k ; i < 1 ; i ++ ) { )
rank: 933
score: 99.29976399739583
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( String ) i ) ;
rank: 934
score: 99.3477294921875
patch: for ( Object i = k ; i <= n ; i ++ )
rank: 934
score: 99.32678985595703
patch: for ( int i = k + 1 ; i -- <= n ; )
rank: 934
score: 99.29916677167338
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { double log CaMeL Sum = Math . log ( ( double ) i ) ;
rank: 935
score: 99.35883532072368
patch: for ( int i = k - 1 ; i <= 0 ; i ++ ) { }
rank: 935
score: 99.347412109375
patch: for ( int i = k ; i == $NUMBER$ ; i ++ )
rank: 935
score: 99.34544462316177
patch: for ( int i = k + 1 ; i >= $NUMBER$ ; i -- )
rank: 935
score: 99.33972930908203
patch: for ( int i ; i + 1 < n ; i ++ ) {
rank: 935
score: 99.32150750411184
patch: for ( int i = $NUMBER$ ; i <= i + 1 ; i ++ ) { {
rank: 935
score: 99.29913526965726
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { else log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 936
score: 99.36619808799342
patch: for ( int i = 1 ; i <= n - k - k ; i ++ )
rank: 936
score: 99.35826351768092
patch: for ( int i = k + 1 ; i >= length - 1 ; i ++ )
rank: 936
score: 99.3473388671875
patch: for ( k = 0 ; i <= n ; i ++ ) {
rank: 936
score: 99.34414672851562
patch: for ( int i = k ; i < null ; i ++ ) {
rank: 936
score: 99.33932495117188
patch: for ( i = k + 1 ; i < n ; i ++ )
rank: 936
score: 99.32463836669922
patch: for ( int i + 1 ; i < n ; i ++ ) {
rank: 936
score: 99.29911951864919
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ] ) ;
rank: 937
score: 99.34700012207031
patch: for ( int i = 0 ; i <= n 1 ; i ++ )
rank: 937
score: 99.3385009765625
patch: for ( double i = 0 ; i <= k ; i ++ ) {
rank: 937
score: 99.29908801663306
patch: for ( int i = k + 1 ; i <= n ; i ++ ) log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 938
score: 99.37232881433823
patch: for ( k = k ; i <= n - k ; i ++ ) {
rank: 938
score: 99.35784590871711
patch: for ( int i = k + $NUMBER$ ; i < n - 1 ; i ++ )
rank: 938
score: 99.34373474121094
patch: for ( int i = 0 ; i < min ; i ++ ) {
rank: 938
score: 99.3373291015625
patch: for ( int i = k ; i >= n ; i -- )
rank: 938
score: 99.32454681396484
patch: for ( int i = k ; i <= n , n ++ ) {
rank: 938
score: 99.2971923828125
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . max ( ( double ) i ) ;
rank: 939
score: 99.34672037760417
patch: for ( int i = 0 ; i == k ; i ++ )
rank: 939
score: 99.32441711425781
patch: for ( String k = k ; i < n ; i ++ ) {
rank: 939
score: 99.29715851814517
patch: for ( int i = k ; i <= n ; i ++ ) { double log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 940
score: 99.34544372558594
patch: for ( int i = 0 ; i <= - k ; i ++ )
rank: 940
score: 99.34317016601562
patch: for ( int i = 1 ; i < $STRING$ ; i ++ ) {
rank: 940
score: 99.32416848575367
patch: for ( int i = k ; i < k ; i ++ ) { }
rank: 940
score: 99.29557554183468
patch: for ( int i -- ; i <= n - k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 941
score: 99.344970703125
patch: for ( int int i = $NUMBER$ ; i < n ; i ++ )
rank: 941
score: 99.33335876464844
patch: for ( int i = n ; i >= n ; i -- ) {
rank: 941
score: 99.29541829427083
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( ( int ) i ) ;
rank: 942
score: 99.3713150024414
patch: for ( double i = $NUMBER$ ; i <= i ; i ++ ) {
rank: 942
score: 99.35817583869485
patch: for ( int i = 0 ; i <= n + n ; i ++ )
rank: 942
score: 99.34259796142578
patch: for ( int i = $STRING$ ; i < n ; i -- ) {
rank: 942
score: 99.32381439208984
patch: for ( int k = 1 ; i < n ; i ++ ) {
rank: 942
score: 99.29522298177083
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( Object ) i ) ;
rank: 943
score: 99.36342259457237
patch: for ( int i = $NUMBER$ ; i == n - 1 ; i ++ ) { {
rank: 943
score: 99.3555679321289
patch: for ( int i = ) ; i < n ; i ++ ) {
rank: 943
score: 99.34281921386719
patch: for ( int i = $NUMBER$ ; i <= min ; i ++ ) {
rank: 943
score: 99.34221649169922
patch: for ( int i = 0 ; i < length ; i -- ) {
rank: 943
score: 99.323486328125
patch: for ( int i = n ; i < n ; i -- ) {
rank: 943
score: 99.29463048135081
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { double log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 944
score: 99.36871337890625
patch: for ( int i ; i <= n - k ; i ++ ) {
rank: 944
score: 99.34264373779297
patch: for ( int int i = k ; i <= n ; i ++ )
rank: 944
score: 99.33148600260417
patch: for ( int i = k + 1 ; i >= ++ ) {
rank: 944
score: 99.29427083333333
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . abs ( ( double ) i ) ;
rank: 945
score: 99.35511538856908
patch: for ( int i = k + 1 ; i <= i ; i ++ ) { }
rank: 945
score: 99.35509490966797
patch: for ( char i = 0 ; i < n ; i ++ ) {
rank: 945
score: 99.3419189453125
patch: for ( Object i = $NUMBER$ ; i <= $NUMBER$ ; i ++ ) {
rank: 945
score: 99.34176635742188
patch: for ( int i = 0 ; i <= null ; i ++ ) {
rank: 945
score: 99.32992350260416
patch: for ( int i = k ; i < n ; ++ i )
rank: 945
score: 99.29317351310483
patch: for ( int i = 0 ; i <= n ; i ++ ) { return log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 946
score: 99.34141438802084
patch: for ( int i = $NUMBER$ ; i <= n ; ++ i )
rank: 946
score: 99.32889556884766
patch: for ( int n = k ; n <= k ; n ++ ) {
rank: 946
score: 99.29162991431451
patch: for ( int i = k 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 947
score: 99.35418701171875
patch: for ( int i = k ; i >= i ; i ++ ) {
rank: 947
score: 99.32121276855469
patch: for ( int k = 1 ; i <= n ; i ++ ) {
rank: 947
score: 99.289794921875
patch: for ( final int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 948
score: 99.36233038651316
patch: for ( int i = 0 ; i <= k - 1 ; i ++ ) { {
rank: 948
score: 99.34133911132812
patch: for ( int i = 0 ; i <= - 1 ; i ++ )
rank: 948
score: 99.33858489990234
patch: for ( int i = k + 1 ; i <= n + 1 {
rank: 948
score: 99.32037760416667
patch: for ( int i = k ; i -- <= n ; ) {
rank: 948
score: 99.315673828125
patch: for ( int i = k + k - 1 ; i < n ; i ++ )
rank: 948
score: 99.28888136340726
patch: for ( int ++ i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 949
score: 99.3666130514706
patch: for ( i = $NUMBER$ + 1 ; i <= n ; i ++ ) {
rank: 949
score: 99.3413314819336
patch: if ( ( k == 0 ) || ( k == 0 ) ) {
rank: 949
score: 99.33712768554688
patch: for ( int i = 0 ; i < n ; i ++ ) throws
rank: 949
score: 99.32781982421875
patch: for ( int i + 1 ; i <= n ; i ++ ) {
rank: 949
score: 99.28861359627017
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ] ) ;
rank: 950
score: 99.3532958984375
patch: for ( int i = i ; i < n ; i ++ )
rank: 950
score: 99.34049987792969
patch: for ( int i = - $NUMBER$ ; i < n ; i ++ )
rank: 950
score: 99.3201904296875
patch: for ( String n = k ; i <= n ; i ++ ) {
rank: 950
score: 99.28776304183468
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 951
score: 99.36432243795956
patch: for ( Iterator i = k ; i . < n ; i ++ ) {
rank: 951
score: 99.35285186767578
patch: for ( int i = n ; i >= n ; i ++ ) {
rank: 951
score: 99.32589518229166
patch: for ( int i = k ; i >= k ; i -- )
rank: 951
score: 99.32001495361328
patch: for ( int i = k + 1 < k ; i ++ ) {
rank: 951
score: 99.2875740297379
patch: for ( int i = 1 ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ; }
rank: 952
score: 99.35160104851974
patch: for ( int i = k + 1 ; i < i - 1 ; i ++ )
rank: 952
score: 99.34947204589844
patch: for ( short i = 0 ; i < n ; i ++ ) {
rank: 952
score: 99.34043782552084
patch: for ( int i = 1 ; i >= 1 ; i ++ )
rank: 952
score: 99.33567810058594
patch: for ( int i = k ; i <= $NUMBER$ ; i -- ) {
rank: 952
score: 99.28711725050404
patch: for ( int i = $NUMBER$ ; i >= $NUMBER$ ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ; }
rank: 953
score: 99.34034016927083
patch: for ( int i = $STRING$ ; i < n ; i ++ )
rank: 953
score: 99.33544921875
patch: for ( Object i = 0 ; i <= k ; i ++ ) {
rank: 953
score: 99.286865234375
patch: for ( int i = k ] ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 954
score: 99.36211081112133
patch: for ( int i = Math . log ( ( double ) i ) ) {
rank: 954
score: 99.33976236979167
patch: for ( int i = k ; i == k ; i ++ )
rank: 954
score: 99.33504486083984
patch: for ( Object i = 0 ; i < k ; i ++ ) {
rank: 954
score: 99.28668409778226
patch: for ( int i = $NUMBER$ ; i <= k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ; }
rank: 955
score: 99.36210363051471
patch: / for ( int i = 1 ; i <= n ; i ++ ) {
rank: 955
score: 99.33636881510417
patch: for ( int i = $NUMBER$ ; i <= max ; i ++ )
rank: 955
score: 99.32283020019531
patch: for ( int k = k ; n < n ; i ++ ) {
rank: 955
score: 99.3185173483456
patch: for ( int i = n ; i <= n ; i ++ ) { )
rank: 955
score: 99.28548702116936
patch: for ( int i = - 1 ; i < n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 956
score: 99.3505859375
patch: for ( int i = k + 1 ; i <= max ; i ++ )
rank: 956
score: 99.33546549479166
patch: for ( int i = k ; i < 1 ; i ++ )
rank: 956
score: 99.3326416015625
patch: for ( int i = k + 1 ; i >= ++ i ) {
rank: 956
score: 99.28356539818549
patch: for ( int i = 1 ; i <= n ; i ++ ) { double log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 957
score: 99.3353759765625
patch: for ( int i = $NUMBER$ ; i <= n : n ) {
rank: 957
score: 99.31838553292411
patch: for ( int i = k - 1 ; i ++ ) {
rank: 957
score: 99.28353389616936
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ) ;
rank: 958
score: 99.34958065257354
patch: for ( int i = 0 + 1 ; i <= 0 ; i ++ )
rank: 958
score: 99.3339599609375
patch: for ( int i = 1 ; i < $NUMBER$ ; i ++ )
rank: 958
score: 99.33170318603516
patch: for ( int i = $STRING$ ; i < 1 ; i ++ ) {
rank: 958
score: 99.31772748161765
patch: for ( int i = k ; i < 0 ; i ++ ) { )
rank: 958
score: 99.31045692845395
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) return 0 ; }
rank: 958
score: 99.28201392389113
patch: for ( int i = 1 ; i <= n ; i ++ ) { return log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 959
score: 99.35785233347039
patch: for ( int i = $NUMBER$ ; i == n - k ; i ++ ) { {
rank: 959
score: 99.33252766927083
patch: for ( int i = 0 ; i > 0 ; i ++ )
rank: 959
score: 99.3316650390625
patch: for ( int i = $STRING$ ; i <= 1 ; i ++ ) {
rank: 959
score: 99.32087707519531
patch: for ( int k = k ; k <= k ; k ++ ) {
rank: 959
score: 99.28011592741936
patch: for ( int i = k + 1 ; i . < n ; i ++ ) { log CaMeL Sum += Math . log ( double ) i ;
rank: 960
score: 99.34932708740234
patch: for ( int i = 0 ; k < 0 ; i ++ ) {
rank: 960
score: 99.33174641927083
patch: for ( int n = $NUMBER$ ; i <= n ; i ++ )
rank: 960
score: 99.33164978027344
patch: for ( int i = value ; i < n ; i ++ ) {
rank: 960
score: 99.31903839111328
patch: for ( int k = k ; n <= k ; i ++ ) {
rank: 960
score: 99.31399972098214
patch: for ( int i = n + 1 ; i ++ ) {
rank: 960
score: 99.30825966282895
patch: for ( int i = k + 1 ; i < n ; i ++ ) * /
rank: 960
score: 99.27994266633064
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ] ) ;
rank: 961
score: 99.35259246826172
patch: for ( int i += 1 ; i <= n ; i ++ ) {
rank: 961
score: 99.34897030101104
patch: for ( int i = 0 ; i <= k ; i ++ ) { }
rank: 961
score: 99.33136393229167
patch: for ( int i = $NUMBER$ ; i <= size ; i ++ )
rank: 961
score: 99.31869506835938
patch: for ( int n = 0 ; n <= n ; i ++ ) {
rank: 961
score: 99.31321088005515
patch: for ( int i = k ; i <= i ; i ++ ) { {
rank: 961
score: 99.2797615297379
patch: for ( int i = 0 ; i <= n ; i ++ ) { return log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 962
score: 99.33718872070312
patch: for ( short i = k ; i < n ; i ++ ) {
rank: 962
score: 99.33133951822917
patch: for ( double i = $NUMBER$ ; i < n ; i ++ )
rank: 962
score: 99.326318359375
patch: for ( int i = 0 ; i < k ; i -- )
rank: 962
score: 99.31842447916667
patch: for ( int i = k ; i < ; i ++ ) {
rank: 962
score: 99.3129021139706
patch: for ( int i = k ; i < k ; i ++ ) { ;
rank: 962
score: 99.27949376260081
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i + ) ;
rank: 963
score: 99.35089111328125
patch: if ( ( n == k ) || ( k == 1 ) ) {
rank: 963
score: 99.34886169433594
patch: for ( int i = 0 ; n <= n ; i ++ ) {
rank: 963
score: 99.3281982421875
patch: for ( int i = $NUMBER$ ; i <= null ; i ++ )
rank: 963
score: 99.326123046875
patch: for ( int i = k + 1 ; i <= k ) {
rank: 963
score: 99.31826782226562
patch: for ( int i = 0 ; i >= 0 ; i -- ) {
rank: 963
score: 99.30738589638158
patch: for ( int i = $NUMBER$ ; i <= n - 0 ; i ++ ) { {
rank: 963
score: 99.27900548135081
patch: for ( int i = $NUMBER$ ; i <= - 1 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 964
score: 99.3481216430664
patch: for ( double i = $NUMBER$ ; i <= 1 ; i ++ ) {
rank: 964
score: 99.3281494140625
patch: for ( int i = 1 ; i < k ; i ++ )
rank: 964
score: 99.3231201171875
patch: for ( int i = k ; i < n ; i -- )
rank: 964
score: 99.31780598958333
patch: for ( int i = k ; i <= ; i ++ ) {
rank: 964
score: 99.27895035282258
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 965
score: 99.32784016927083
patch: for ( double i = k ; i <= n ; i ++ )
rank: 965
score: 99.3175048828125
patch: for ( Number i = k ; i < n ; i ++ ) {
rank: 965
score: 99.31199544270834
patch: for ( int i = ; i <= k ; i ++ ) {
rank: 965
score: 99.30669202302632
patch: for ( int i = $NUMBER$ ; i <= k - k ; i ++ ) { {
rank: 965
score: 99.27887159778226
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log log ( ( double ) i ) ;
rank: 966
score: 99.32711588541666
patch: for ( int i = 0 ; i > k ; i ++ )
rank: 966
score: 99.3143798828125
patch: for ( int i = 0 ; i <= ; i ++ ) {
rank: 966
score: 99.30598530016448
patch: for ( int i = $NUMBER$ ; i <= i - k ; i ++ ) { {
rank: 966
score: 99.2760994203629
patch: for ( int i ++ ; i <= n - k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 967
score: 99.32632649739584
patch: if ( ( k == 1 ) || ( k == 0 ) )
rank: 967
score: 99.31947544642857
patch: for ( int i = k + 1 ; i >= ) {
rank: 967
score: 99.31056123621323
patch: for ( int i = k + 1 ; i <= n ; i ] {
rank: 967
score: 99.30548416940789
patch: for ( int i = k - 0 ; i < n ; i ++ ) { {
rank: 967
score: 99.27391790574596
patch: for ( int i = k ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ; }
rank: 968
score: 99.34405517578125
patch: for ( int i = ] ; i <= n ; i ++ ) {
rank: 968
score: 99.3260986328125
patch: for ( double i = $NUMBER$ ; i <= $NUMBER$ ; i ++ )
rank: 968
score: 99.3184814453125
patch: for ( int i = k + $NUMBER$ ; i <= n ) {
rank: 968
score: 99.31148274739583
patch: for ( double i = 0 ; i < n ; i ++ )
rank: 968
score: 99.3102165670956
patch: for ( int i = n ; i < n ; i ++ ) { )
rank: 968
score: 99.27357925907258
patch: for ( int i = $NUMBER$ ; i <= i ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ; }
rank: 969
score: 99.35361199629934
patch: for ( int i = k - 1 ; i >= $NUMBER$ ; i ++ ) { {
rank: 969
score: 99.34574890136719
patch: for ( int i = 0 ; i <= n ; length ++ ) {
rank: 969
score: 99.32493489583334
patch: for ( n = $NUMBER$ ; i <= $NUMBER$ ; i ++ ) {
rank: 969
score: 99.3092400045956
patch: for ( int i = k + 1 ; i [ i - 1 ] {
rank: 969
score: 99.30826241629464
patch: for ( int i = k + 1 ; i < ) {
rank: 969
score: 99.30445963541666
patch: for ( int i = k ; i <= k ; ++ i )
rank: 969
score: 99.27355563256049
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ++ ) ;
rank: 970
score: 99.34495544433594
patch: for ( int i = 0 ; i < n ; length ++ ) {
rank: 970
score: 99.324755859375
patch: for ( int i = $NUMBER$ ; i != 0 ; i ++ )
rank: 970
score: 99.30301706414474
patch: for ( int i = 1 + 1 ; i < n ; i ++ ) { {
rank: 970
score: 99.27338237147177
patch: for ( int i -- ; i <= n - k ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 971
score: 99.3229736328125
patch: for ( int i = 1 ; i <= i ; i ++ )
rank: 971
score: 99.30401204427083
patch: for ( i = 1 ; i < n ; i ++ ) {
rank: 971
score: 99.27310672883064
patch: for ( int -- i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ;
rank: 972
score: 99.322314453125
patch: for ( int i = k ; i > 0 ; i ++ )
rank: 972
score: 99.3063232421875
patch: for ( int i = 0 ; ++ i <= n ; ) {
rank: 972
score: 99.3021240234375
patch: for ( int i = k + 1 - 1 ; i < n ; i ++ )
rank: 972
score: 99.2720435357863
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( ( double ) i ) ;
rank: 973
score: 99.35239771792763
patch: for ( int i = $NUMBER$ ; i >= k - 1 ; i ++ ) { {
rank: 973
score: 99.3282699584961
patch: for ( int i ; i < n + 1 ; i ++ ) {
rank: 973
score: 99.32112630208333
patch: for ( k = $NUMBER$ ; i < n ; i ++ ) {
rank: 973
score: 99.30196340460526
patch: for ( int i = k - 1 ; i <= 1 ; i ++ ) { {
rank: 973
score: 99.29927571614583
patch: for ( k = 1 ; i <= n ; i ++ ) {
rank: 973
score: 99.271240234375
patch: for ( int i = k ; i <= n ; i ++ ) { double log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 974
score: 99.32068684895833
patch: for ( int i = $STRING$ ; i <= $NUMBER$ ; i ++ )
rank: 974
score: 99.30159719366776
patch: for ( int i = k ; i < n + k ; i ++ ) { {
rank: 974
score: 99.2926025390625
patch: for ( int i ; i < n ; i ++ ) {
rank: 974
score: 99.27079920614919
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) n ) ; }
rank: 975
score: 99.32057407924107
patch: for ( int i = $NUMBER$ ; i <= n : n )
rank: 975
score: 99.30311686197916
patch: for ( int i = k ; i < 0 ; i ++ )
rank: 975
score: 99.30155864514802
patch: for ( int i = $NUMBER$ ; i <= n - 1 ; i ++ ) * /
rank: 975
score: 99.29872233072916
patch: for ( int i = 0 ; i < i ; i ++ )
rank: 975
score: 99.2706810735887
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum . log CaMeL Sum . log CaMeL Sum ; }
rank: 976
score: 99.34975714432566
patch: for ( int i = k + 1 ; i <= k - k ; i ++ )
rank: 976
score: 99.33768463134766
patch: for ( int k = $NUMBER$ ; i <= n ; k ++ ) {
rank: 976
score: 99.3196533203125
patch: for ( int i = k ; i > k ; i ++ )
rank: 976
score: 99.28980305989583
patch: for ( int i = k ; i + 1 : k ) {
rank: 976
score: 99.26998802923387
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i + ) ;
rank: 977
score: 99.34834369860198
patch: for ( int i = $NUMBER$ ; i < n - k - k ; i ++ )
rank: 977
score: 99.31709798177083
patch: for ( int i = i ; i <= n ; i ++ )
rank: 977
score: 99.30263846261161
patch: for ( ; i < n + 1 ; i ++ ) {
rank: 977
score: 99.30098684210526
patch: for ( int i = k + 1 : n ; i <= n ; i ++ )
rank: 977
score: 99.29685872395834
patch: for ( int i = k ; i >= 0 ; i -- )
rank: 977
score: 99.269287109375
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += ( Math . log ( ( double ) i ) ;
rank: 978
score: 99.3158935546875
patch: for ( int i = 1 ; i > $NUMBER$ ; i ++ )
rank: 978
score: 99.30060686383929
patch: for ( int i = k > $NUMBER$ ; i ++ ) {
rank: 978
score: 99.26923198084677
patch: for ( int i = $NUMBER$ ; i < n ; i ++ ) { double log CaMeL Sum -= Math . log ( ( double ) i ) ;
rank: 979
score: 99.31475423177083
patch: for ( int i = $NUMBER$ ; i != 1 ; i ++ )
rank: 979
score: 99.29965006510416
patch: for ( int i = k + 1 ; i < n ++ )
rank: 979
score: 99.29039713541667
patch: for ( int i = 0 ; i <= k ; i -- )
rank: 979
score: 99.27606608072917
patch: for ( int i = k ; ++ i <= k ; ) {
rank: 979
score: 99.26812941028226
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i $NUMBER$ ) ;
rank: 980
score: 99.34685315583882
patch: for ( int i = length + 1 ; i <= n ; i ++ ) { {
rank: 980
score: 99.32845633370536
patch: for ( int i = k - 1 ; i <= n {
rank: 980
score: 99.31298014322917
patch: for ( int i = $NUMBER$ ; i <= false ; i ++ )
rank: 980
score: 99.29953484786184
patch: for ( int i = $NUMBER$ + 1 ; i <= k ; i ++ ) { {
rank: 980
score: 99.290087890625
patch: for ( int i = 1 ; i <= n ; ++ i )
rank: 980
score: 99.28810337611607
patch: for ( ; i <= k + 1 ; i ++ ) {
rank: 980
score: 99.27603352864584
patch: for ( int i = k + 1 ; i <= n , {
rank: 980
score: 99.26752299647177
patch: for ( int i = 0 ; i < n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ; }
rank: 981
score: 99.32012532552083
patch: for ( i = 0 ; i <= k ; i ++ ) {
rank: 981
score: 99.31265462239584
patch: for ( int i = min ; i <= n ; i ++ )
rank: 981
score: 99.27886962890625
patch: for ( int i = k + $NUMBER$ ; i < n {
rank: 981
score: 99.27231270926339
patch: for ( int i = k + n ; i ++ ) {
rank: 981
score: 99.26752299647177
patch: for ( int i = 0 ; i <= n ; i ++ ) { double log CaMeL Sum = Math . log ( ( double ) i ) ;
rank: 982
score: 99.31253255208334
patch: for ( int i = 1 ; i == $NUMBER$ ; i ++ )
rank: 982
score: 99.2985904091283
patch: for ( int i = 0 ; i <= i - 1 ; i ++ ) { {
rank: 982
score: 99.26459330897177
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) ( i ) ;
rank: 983
score: 99.33226013183594
patch: for ( Object i = 1 ; i <= n ; i ++ ) {
rank: 983
score: 99.31374686104911
patch: for ( int i = k == 1 ; i ++ ) {
rank: 983
score: 99.31236979166667
patch: for ( int i += $NUMBER$ ; i <= n ; i ++ )
rank: 983
score: 99.28227887834821
patch: for ( int i = k - 1 ; i <= n )
rank: 983
score: 99.27287074497768
patch: for ( int i = k + $NUMBER$ ; i <= n {
rank: 983
score: 99.26451455393145
patch: for ( int i = 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i + ) ;
rank: 983
score: 99.25895472935268
patch: for ( int i = k ; i <= n ++ ) {
rank: 984
score: 99.33219146728516
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) :
rank: 984
score: 99.31325857979911
patch: for ( int i = 0 + 1 ; i <= n {
rank: 984
score: 99.311376953125
patch: for ( n = $NUMBER$ ; i <= k ; i ++ ) {
rank: 984
score: 99.2970034950658
patch: for ( int i = $NUMBER$ + 1 ; i < n - k ; i ++ )
rank: 984
score: 99.26835414341518
patch: for ( int i = k + 1 ; i >= n {
rank: 984
score: 99.26421528477823
patch: for ( int i = k ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ] ) ;
rank: 985
score: 99.30904947916666
patch: for ( k = k ; i <= n ; i ++ ) {
rank: 985
score: 99.29688784950658
patch: for ( int i = k - $NUMBER$ ; i <= n ; i ++ ) { {
rank: 985
score: 99.26465715680804
patch: for ( int i = k + 1 ; i >= 0 {
rank: 985
score: 99.26345923639113
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ; else
rank: 985
score: 99.24342564174107
patch: for ( int i ; i >= n ; i ++ ) {
rank: 986
score: 99.308447265625
patch: for ( int i = $STRING$ ; i <= k ; i ++ )
rank: 986
score: 99.29930826822917
patch: for ( int i = k - 1 ; i >= n ) {
rank: 986
score: 99.27666364397321
patch: for ( int i = k + 1 ; i >= n )
rank: 986
score: 99.26412527901786
patch: for ( int i = k + 1 ; i < k {
rank: 986
score: 99.2622306577621
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i + i ;
rank: 987
score: 99.30842808314732
patch: for ( n = k ; i <= n ; i ++ )
rank: 987
score: 99.29609118009868
patch: for ( int i = $NUMBER$ ; i == n + 1 ; i ++ ) { {
rank: 987
score: 99.29361397879464
patch: for ( int i = k >= n ; i ++ ) {
rank: 987
score: 99.27569580078125
patch: for ( ; i >= k + 1 ; i ++ ) {
rank: 987
score: 99.26222278225806
patch: for ( int i = 1 ; i < n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ; }
rank: 987
score: 99.26171003069196
patch: for ( int i = 0 ; i < n + ) {
rank: 987
score: 99.23652866908482
patch: for ( int i = k + 1 ; i <= 1 {
rank: 988
score: 99.34553608141448
patch: for ( int i = max + 1 ; i <= n ; i ++ ) { {
rank: 988
score: 99.306396484375
patch: for ( i = $NUMBER$ ; i <= n ; i ++ )
rank: 988
score: 99.29759928385417
patch: for ( i = 0 ; i < k ; i ++ ) {
rank: 988
score: 99.27564290364583
patch: for ( i = k ; i <= k ; i ++ ) {
rank: 988
score: 99.26211252520162
patch: for ( int i = 0 ; i <= n ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ] ) ;
rank: 989
score: 99.3033935546875
patch: for ( float i = $NUMBER$ ; i <= n ; i ++ )
rank: 989
score: 99.29227992466518
patch: for ( int i = k + 1 ; i <= 0 {
rank: 989
score: 99.26182113155242
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum = Math . log ( ( double ) i ) ; }
rank: 989
score: 99.25481305803571
patch: for ( int i = k + 1 ; i < 0 {
rank: 989
score: 99.23312813895089
patch: for ( int i = k + 1 ; i <= n ;
rank: 990
score: 99.31034633091518
patch: for ( int i < n - k ; i ++ ) {
rank: 990
score: 99.30301106770834
patch: for ( int i = 1 ; i == k ; i ++ )
rank: 990
score: 99.29598195929276
patch: for ( int i = $NUMBER$ ; i != n - k ; i ++ ) { {
rank: 990
score: 99.28554861886161
patch: for ( int i = k + 1 ; i <= ) {
rank: 990
score: 99.26577322823661
patch: for ( int i = k + 1 ; i <= k {
rank: 990
score: 99.26177387852823
patch: for ( int i = $NUMBER$ ; i >= 1 ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ; }
rank: 990
score: 99.25143868582589
patch: for ( ; i <= n + 1 ; i -- ) {
rank: 990
score: 99.23296247209821
patch: for ( int i ; i <= 1 ; i ++ ) {
rank: 991
score: 99.34440532483552
patch: for ( int i = k + 1 ; i >= k - k ; i ++ )
rank: 991
score: 99.29560932360198
patch: for ( int i = $NUMBER$ ; i <= n - k ; i ++ ) * /
rank: 991
score: 99.28498186383929
patch: for ( int i = k - 1 ; i < n {
rank: 991
score: 99.26162424395162
patch: for ( int i = $NUMBER$ ; i <= k ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ; }
rank: 991
score: 99.24700927734375
patch: for ( int i = 0 ; i < n + 1 {
rank: 991
score: 99.23227364676339
patch: for ( int i = k ; i <= k ++ ) {
rank: 992
score: 99.30126139322917
patch: for ( double i = $NUMBER$ ; i <= k ; i ++ )
rank: 992
score: 99.26013577368951
patch: for ( int i = k + 1 ; i . < n ; i ++ ) { log CaMeL Sum -= Math . log ( double ) i ;
rank: 992
score: 99.24555315290179
patch: for ( int i = k + 1 ; i >= 1 {
rank: 992
score: 99.23064313616071
patch: for ( int i = k ; i < n ++ ) {
rank: 993
score: 99.30118815104167
patch: for ( int i = 0 ; i != k ; i ++ )
rank: 993
score: 99.25995463709677
patch: for ( int i = $NUMBER$ ; i >= $NUMBER$ ; i ++ ) { log CaMeL Sum -= Math . log ( ( double ) i ) ; }
rank: 993
score: 99.22937883649554
patch: for ( int i = k ; i < k ++ ) {
rank: 994
score: 99.29497419084821
patch: for ( n = 0 ; i <= n ; i ++ )
rank: 994
score: 99.29190499441964
patch: for ( ; i <= n - k ; i ++ ) {
rank: 994
score: 99.2674560546875
patch: for ( int i = 0 + 1 ; i < n {
rank: 994
score: 99.26572963169643
patch: for ( int i = k >= 1 ; i -- ) {
rank: 994
score: 99.25752110635081
patch: for ( int i = k + 1 ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( n - k ) ;
rank: 994
score: 99.24082728794643
patch: for ( int i = k <= 1 ; i ++ ) {
rank: 994
score: 99.23589215959821
patch: for ( int i = k + 1 ; i >= k )
rank: 994
score: 99.22655378069196
patch: for ( int i ; i >= k ; i ++ ) {
rank: 995
score: 99.28857421875
patch: for ( n = $NUMBER$ ; i < n ; i ++ )
rank: 995
score: 99.28766741071429
patch: for ( int i = k < n ; i ++ ) {
rank: 995
score: 99.26211983816964
patch: for ( int i = k >= k ; i ++ ) {
rank: 995
score: 99.25752110635081
patch: for ( int i = $NUMBER$ ; i < k ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ; }
rank: 995
score: 99.2327880859375
patch: for ( ; i < k + 1 ; i ++ ) {
rank: 995
score: 99.22874232700893
patch: for ( int i = k + 1 ; i >= ++ )
rank: 995
score: 99.22526332310268
patch: for ( int i = k + 0 ; i ++ ) {
rank: 996
score: 99.29566301618304
patch: for ( int i = k + 1 ; i > ) {
rank: 996
score: 99.27790178571429
patch: for ( k = 0 ; i <= n ; i ++ )
rank: 996
score: 99.27475411551339
patch: for ( int i = k > k ; i ++ ) {
rank: 996
score: 99.25695407006049
patch: for ( int i = $NUMBER$ ; i <= n ; i ++ ) { log CaMeL Sum += Math . log ( i - 1 , i ) ;
rank: 996
score: 99.25653948102679
patch: for ( int i = k > 1 ; i -- ) {
rank: 996
score: 99.183837890625
patch: for ( int i = 0 ; i < n ) {
rank: 996
score: 98.76038275824652
patch: for ( String n : k ) {
rank: 997
score: 99.27640787760417
patch: for ( k = $NUMBER$ ; k <= n ; i ++ ) {
rank: 997
score: 99.27142333984375
patch: ( ( k == 1 ) || ( k == 1 ) )
rank: 997
score: 99.2561743951613
patch: for ( int i = $NUMBER$ ; i == n ; i ++ ) { log CaMeL Sum += Math . log ( ( double ) i ) ; }
rank: 997
score: 99.25547572544643
patch: for ( k = $NUMBER$ ; i < n ; i ++ )
rank: 997
score: 99.25490025111607
patch: for ( int i = k >= 0 ; i -- ) {
rank: 997
score: 99.1083475748698
patch: for ( int i = 0 ; i < n {
rank: 997
score: 98.72422960069444
patch: for ( String k : k ) {
rank: 997
score: 98.69384765625
patch: if ( k == 1 ) {
rank: 998
score: 99.2672119140625
patch: ( ( k == 1 ) || ( k == 0 ) )
rank: 998
score: 99.25408935546875
patch: for ( n = $NUMBER$ ; i <= $NUMBER$ ; i ++ )
rank: 998
score: 99.25017438616071
patch: for ( ; i <= n - 1 ; i ++ ) {
rank: 998
score: 99.22389439174107
patch: for ( i = 0 ; i < n ; i ++ )
rank: 998
score: 98.88746337890625
patch: for ( int i = k + 1 {
rank: 998
score: 98.66942596435547
patch: if ( k == k ) {
rank: 998
score: 98.05748494466145
patch: for ( int i =
rank: 999
score: 99.24912806919643
patch: for ( int i = $NUMBER$ ; i <= n ; ) {
rank: 999
score: 99.23597935267857
patch: for ( int i = k + 1 ; ++ i ) {
rank: 999
score: 99.22106061662946
patch: for ( ; i >= k + 1 ; i -- ) {
rank: 999
score: 98.60260772705078
patch: if ( n == k ) {
rank: 999
score: 98.04103597005208
patch: return log CaMeL Sum ;
rank: 999
score: 93.81158447265625
patch: }
rank: 1000
score: 99.24087088448661
patch: for ( int i < n - 1 ; i ++ ) {
rank: 1000
score: 99.24012974330357
patch: for ( n = $NUMBER$ ; i <= k ; i ++ )
rank: 1000
score: 99.234375
patch: for ( int i = k + 1 ; i <= length {
rank: 1000
score: 98.5957260131836
patch: if ( n == 1 ) {
rank: 1000
score: 98.58076477050781
patch: if ( k == n ) {
rank: 1000
score: 93.73243713378906
patch: *
