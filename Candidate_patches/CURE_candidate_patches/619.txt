rank: 1
score: 99.83867938701923
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 1
score: 99.810869140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 1
score: 99.80291374362245
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 1
score: 99.79040243459302
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 1
score: 99.78934420072116
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 1
score: 99.78259995404412
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 1
score: 99.7267357610887
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 1
score: 99.71478862147177
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 1
score: 99.709794921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 1
score: 99.67592436691811
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 2
score: 99.82962814031863
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 2
score: 99.79548674938725
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 2
score: 99.782216796875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 2
score: 99.7781907684949
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 2
score: 99.77403846153847
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 2
score: 99.7266845703125
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 2
score: 99.71465473790323
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 2
score: 99.70350383890086
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 2
score: 99.6711688701923
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 3
score: 99.79367220603814
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 3
score: 99.78286224941037
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 3
score: 99.78012190193965
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 3
score: 99.77394612630208
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 3
score: 99.76874651227679
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 3
score: 99.72584635416666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 3
score: 99.71385904947917
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 3
score: 99.67066271551724
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 4
score: 99.8144830197704
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 4
score: 99.78143190870098
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 4
score: 99.76563341864224
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 4
score: 99.76319298377403
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 4
score: 99.72581845238095
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 4
score: 99.70650421626983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 4
score: 99.69994673295454
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 4
score: 99.67024178340517
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 5
score: 99.79089749243951
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 5
score: 99.77463003305289
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 5
score: 99.76910869891827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 5
score: 99.76234019886364
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 5
score: 99.75259164663461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 5
score: 99.72579857610887
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 5
score: 99.70502761314656
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 5
score: 99.69650503305289
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 5
score: 99.67023737980769
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 6
score: 99.8095703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 6
score: 99.78515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 6
score: 99.77335030691964
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 6
score: 99.76679503242924
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 6
score: 99.76166240985577
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 6
score: 99.75141963252315
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 6
score: 99.72545668658088
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 6
score: 99.70468589907787
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; }
rank: 6
score: 99.69647979736328
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 6
score: 99.66696213942308
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 7
score: 99.80908203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 7
score: 99.781484375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 7
score: 99.77262037627551
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 7
score: 99.74983416863208
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 7
score: 99.7253750887784
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 7
score: 99.70441080729167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 7
score: 99.69623565673828
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 7
score: 99.66685697115385
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 8
score: 99.79944786658653
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } else { scale = new double [ y 0 . length ] ;
rank: 8
score: 99.77952100409836
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 8
score: 99.7720703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 8
score: 99.7455585186298
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 8
score: 99.72502136230469
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 8
score: 99.70338851686508
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 8
score: 99.69527435302734
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 8
score: 99.66675931490384
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 9
score: 99.79667570153062
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 9
score: 99.778466796875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 9
score: 99.76903392650463
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 9
score: 99.75464806189903
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 9
score: 99.75103515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 9
score: 99.74447471217105
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 9
score: 99.72412109375
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 9
score: 99.70156912076271
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 9
score: 99.69527435302734
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 9
score: 99.66668146306819
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 10
score: 99.79456583658855
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 10
score: 99.77565160290948
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 10
score: 99.76197265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 10
score: 99.75379136029412
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 10
score: 99.74918619791667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 10
score: 99.7434375
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 10
score: 99.72316108315678
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 10
score: 99.70097036210318
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 10
score: 99.69515787760416
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 10
score: 99.66590465198864
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 11
score: 99.79362512807377
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 11
score: 99.77332261029412
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 11
score: 99.76189453125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 11
score: 99.75256587009804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 11
score: 99.7429296875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 11
score: 99.72313724347015
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 11
score: 99.70084911281779
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 11
score: 99.69264322916666
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 11
score: 99.66465180495689
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 12
score: 99.79329427083333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 12
score: 99.77167426215277
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 12
score: 99.76163155691964
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 12
score: 99.75053615196079
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 12
score: 99.74482038909314
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 12
score: 99.74219707414215
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 12
score: 99.72261925899622
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 12
score: 99.70072361680327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 12
score: 99.69220377604167
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 12
score: 99.66454326923076
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 13
score: 99.79135529891305
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 13
score: 99.75928561970339
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 13
score: 99.75023935355392
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 13
score: 99.74479166666667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 13
score: 99.74207163665254
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 13
score: 99.72254943847656
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 13
score: 99.70066758452869
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 13
score: 99.69128648290095
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 13
score: 99.66446940104167
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 14
score: 99.79093111478366
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 14
score: 99.76686639300847
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 14
score: 99.75885479266827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 14
score: 99.7500751201923
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 14
score: 99.74454439603366
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 14
score: 99.740478515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 14
score: 99.72237723214286
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 14
score: 99.69693729795259
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 14
score: 99.69117736816406
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 14
score: 99.6644515991211
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 15
score: 99.7904296875
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 15
score: 99.7655078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 15
score: 99.75853620256696
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 15
score: 99.74439912683823
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 15
score: 99.74006404433139
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 15
score: 99.72211371527777
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 15
score: 99.69527493990384
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 15
score: 99.69115447998047
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 15
score: 99.66401811079545
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 16
score: 99.7654544890873
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 16
score: 99.75833445581897
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 16
score: 99.74292452830188
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 16
score: 99.73762459590517
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 16
score: 99.72210596478175
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 16
score: 99.69522831357759
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 16
score: 99.691064453125
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 16
score: 99.66358901515152
patch: System . arraycopy ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 17
score: 99.78994645743535
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 17
score: 99.76359528186275
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 17
score: 99.75703699448529
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 17
score: 99.74198820153062
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 17
score: 99.74155836838942
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 17
score: 99.73607336956522
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 17
score: 99.721923828125
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 17
score: 99.69507677801724
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 17
score: 99.68949962797619
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 17
score: 99.66228966346154
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 18
score: 99.76293531514831
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 18
score: 99.75615919682018
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 18
score: 99.73890177408855
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 18
score: 99.7337646484375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 18
score: 99.69368489583333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ;
rank: 18
score: 99.68922424316406
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 18
score: 99.66213989257812
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 19
score: 99.78804154829545
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 19
score: 99.762294921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 19
score: 99.75610779879386
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 19
score: 99.73989349941037
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 19
score: 99.7373555501302
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 19
score: 99.72169518849206
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 19
score: 99.69321761592742
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; }
rank: 19
score: 99.68910910866477
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 19
score: 99.66211751302083
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 20
score: 99.78434836647727
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 20
score: 99.76225505891394
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 20
score: 99.75583984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 20
score: 99.73937739158163
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 20
score: 99.73729511335785
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 20
score: 99.7328356726695
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 20
score: 99.72144647854478
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 20
score: 99.69263537176724
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 20
score: 99.68910435267857
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 20
score: 99.66155450994319
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 21
score: 99.78426106770833
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 21
score: 99.76170131138393
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 21
score: 99.75523603723404
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 21
score: 99.737939453125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 21
score: 99.73693359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 21
score: 99.72140658103814
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 21
score: 99.69219435307018
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 21
score: 99.68885803222656
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 21
score: 99.66133563701923
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 22
score: 99.78329702524039
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ; }
rank: 22
score: 99.76014184170081
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 22
score: 99.73615234375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 22
score: 99.73443134014423
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 22
score: 99.7320006127451
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 22
score: 99.72105071504237
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 22
score: 99.69209315413136
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 22
score: 99.66080729166667
patch: System . arraycopy ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 23
score: 99.7830810546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 23
score: 99.75970669450432
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 23
score: 99.752685546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 23
score: 99.73534252025463
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 23
score: 99.73268096301021
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 23
score: 99.73194280660377
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 23
score: 99.72064208984375
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 23
score: 99.690185546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 23
score: 99.68831380208333
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 23
score: 99.66075721153847
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 24
score: 99.78204752604167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 24
score: 99.75194470635776
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 24
score: 99.73490314094387
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 24
score: 99.7312607183689
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 24
score: 99.72918581495098
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 24
score: 99.72029383042279
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 24
score: 99.68851531498017
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 24
score: 99.68826844262296
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 24
score: 99.66070963541667
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 25
score: 99.77996356670673
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 25
score: 99.75934355137711
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 25
score: 99.75146484375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 25
score: 99.73486328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 25
score: 99.72999209449405
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 25
score: 99.72898512620192
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 25
score: 99.72000558035714
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 25
score: 99.68801879882812
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 25
score: 99.68775699013158
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 25
score: 99.66059194711538
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 26
score: 99.77945631377551
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 26
score: 99.75829236260776
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 26
score: 99.74996689618644
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 26
score: 99.73478957841981
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 26
score: 99.7296875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 26
score: 99.7197557136194
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 26
score: 99.68800354003906
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 26
score: 99.68756975446429
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 26
score: 99.66057054924242
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 27
score: 99.77884226831897
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 27
score: 99.75782077595339
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 27
score: 99.73448461415816
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 27
score: 99.72963169642857
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 27
score: 99.72763671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 27
score: 99.7193962545956
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 27
score: 99.68765258789062
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 27
score: 99.68699621775794
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 27
score: 99.66036783854166
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 28
score: 99.77876790364583
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 28
score: 99.75777633101852
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 28
score: 99.748017578125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 28
score: 99.73419074292453
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 28
score: 99.72836615114795
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 28
score: 99.72736672794117
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 28
score: 99.71931966145833
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 28
score: 99.6876220703125
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 28
score: 99.68699428013393
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 28
score: 99.66014145359848
patch: System . arraycopy ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 29
score: 99.77727754237289
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 29
score: 99.7576123847336
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 29
score: 99.74794553360849
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 29
score: 99.73315908394608
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 29
score: 99.72812954215117
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 29
score: 99.72711651141827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 29
score: 99.71918487548828
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 29
score: 99.68740896451271
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 29
score: 99.68689965420081
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ;
rank: 29
score: 99.6601141567888
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 30
score: 99.75688319052419
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 30
score: 99.74778778698979
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 30
score: 99.73291919849537
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 30
score: 99.72779756433823
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 30
score: 99.72673929148706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 30
score: 99.71901568244485
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 30
score: 99.68740234375
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 30
score: 99.65992024739583
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 31
score: 99.77640548406863
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ;
rank: 31
score: 99.75673988217213
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 31
score: 99.74719445180085
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 31
score: 99.73291015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; }
rank: 31
score: 99.72762357271634
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 31
score: 99.72655253507654
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 31
score: 99.71883525545636
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 31
score: 99.68726084183673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 31
score: 99.68580342955508
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 31
score: 99.65942007211538
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 32
score: 99.77631667564656
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 32
score: 99.75656283103814
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 32
score: 99.74710147938829
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 32
score: 99.73275390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 32
score: 99.7267596905048
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 32
score: 99.72625177556819
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 32
score: 99.71879725302419
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 32
score: 99.68724060058594
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 32
score: 99.68559412802419
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 32
score: 99.65920494342673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 33
score: 99.77607783564815
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 33
score: 99.75641066028226
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 33
score: 99.74690163352273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 33
score: 99.73123468137256
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 33
score: 99.72650390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 33
score: 99.71868341619319
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 33
score: 99.68701171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 33
score: 99.68546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 33
score: 99.65897993607955
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 34
score: 99.77571895204741
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 34
score: 99.75625315020162
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 34
score: 99.73073780293367
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 34
score: 99.72536057692308
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 34
score: 99.7243015455163
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 34
score: 99.71834976946721
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 34
score: 99.68693801591981
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 34
score: 99.6853759765625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 34
score: 99.65874372209821
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 35
score: 99.7753662109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 35
score: 99.75608667834052
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 35
score: 99.74662990196079
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 35
score: 99.73060546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 35
score: 99.72464693509616
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 35
score: 99.72320556640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 35
score: 99.71816837086396
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 35
score: 99.68684387207031
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 35
score: 99.68533423639113
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 35
score: 99.65873209635417
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 36
score: 99.77524239676339
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 36
score: 99.75577274445564
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 36
score: 99.74616228070175
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 . length ;
rank: 36
score: 99.730537109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 36
score: 99.7242551317402
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 36
score: 99.72237141927083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 36
score: 99.71789944556451
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 36
score: 99.68658854166667
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 36
score: 99.65872955322266
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 37
score: 99.77479272959184
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 37
score: 99.7553290005388
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 37
score: 99.74573863636364
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 37
score: 99.73048867984694
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 37
score: 99.72421683517157
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 37
score: 99.71778869628906
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 37
score: 99.68588423295455
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 37
score: 99.68478732638889
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 37
score: 99.65865071614583
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 38
score: 99.77472297512755
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 38
score: 99.75511067708334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 38
score: 99.729736328125
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 38
score: 99.7240625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 38
score: 99.71772766113281
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 38
score: 99.68538135593221
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 38
score: 99.68360202595339
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 . 0 ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 38
score: 99.65859064980158
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 39
score: 99.77410567434211
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 39
score: 99.75437797934322
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 39
score: 99.74516858552632
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 39
score: 99.72794596354167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 39
score: 99.72367720170455
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 39
score: 99.7220433011968
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 39
score: 99.71750860699153
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 39
score: 99.68525041852679
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 39
score: 99.6585464477539
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 40
score: 99.77385344328704
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 40
score: 99.75421549479167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 40
score: 99.7451641376202
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 40
score: 99.72791772959184
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 40
score: 99.72306315104167
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 40
score: 99.72197265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 40
score: 99.71743312026516
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 40
score: 99.68297918911638
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 40
score: 99.65848214285714
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 41
score: 99.77358610733695
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 41
score: 99.75375124007937
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 41
score: 99.7451171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 41
score: 99.72784308667453
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 41
score: 99.722841796875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 41
score: 99.7216288248698
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 41
score: 99.71711282169117
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 41
score: 99.68517485119048
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 41
score: 99.68287760416666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; }
rank: 41
score: 99.65834045410156
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 42
score: 99.77342753507654
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 42
score: 99.75361328125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 42
score: 99.74290750794492
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 42
score: 99.7270038311298
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 42
score: 99.72283614309211
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 42
score: 99.72034708658855
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 42
score: 99.71708838619404
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 42
score: 99.68509674072266
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 42
score: 99.65827178955078
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 43
score: 99.74283655678353
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 43
score: 99.72594762731481
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 43
score: 99.72020467122395
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 43
score: 99.71701947380515
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 43
score: 99.68509674072266
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 43
score: 99.65824011600378
patch: System . arraycopy ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 44
score: 99.77309885332662
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 44
score: 99.75221354166666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 44
score: 99.74205433238636
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 44
score: 99.72564019097223
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 44
score: 99.72225516183036
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 44
score: 99.72014671148256
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 44
score: 99.71689789870689
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 44
score: 99.68498229980469
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 44
score: 99.68111296622983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 44
score: 99.6581805889423
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 45
score: 99.77217824835526
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 45
score: 99.74200324292453
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 45
score: 99.72515625
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 45
score: 99.7218137254902
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 45
score: 99.72005521334134
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 45
score: 99.71615358382937
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 45
score: 99.68478393554688
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 45
score: 99.6807861328125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 45
score: 99.65806790865385
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 46
score: 99.77202052696079
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ 1 . length ] ; }
rank: 46
score: 99.75110677083333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 46
score: 99.7416359230324
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 46
score: 99.72515190972223
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 46
score: 99.72170003255208
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 46
score: 99.719541015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 46
score: 99.71611328125
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 46
score: 99.68477376302083
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 46
score: 99.65791459517045
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 47
score: 99.75050483315678
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 47
score: 99.7416015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 47
score: 99.72458065257354
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 47
score: 99.72165204893868
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 47
score: 99.71901041666666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 47
score: 99.71600979477611
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 47
score: 99.6846435546875
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 47
score: 99.68028522359914
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 47
score: 99.65787760416667
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 48
score: 99.771484375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 48
score: 99.74920457409274
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 48
score: 99.74130249023438
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 . length ;
rank: 48
score: 99.7245585123698
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 48
score: 99.72102864583333
patch: final double error = 0 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ;
rank: 48
score: 99.71775428921569
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 48
score: 99.71564797794117
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 48
score: 99.68449660966981
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 48
score: 99.68017578125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 48
score: 99.6577666311553
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 49
score: 99.77099609375
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 49
score: 99.74126076211735
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 49
score: 99.72366153492646
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; while ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 49
score: 99.72089301215277
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 49
score: 99.71767578125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 49
score: 99.71555397727273
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 49
score: 99.68429129464286
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 49
score: 99.68004977318549
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 49
score: 99.65774443655303
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 50
score: 99.77086139547414
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 50
score: 99.74825994318182
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 50
score: 99.74105721932871
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 50
score: 99.72361403245192
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 50
score: 99.72082741477273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 50
score: 99.717275390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 50
score: 99.7154194846082
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 50
score: 99.684267578125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 50
score: 99.67993577860169
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 50
score: 99.65773703835227
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 51
score: 99.77037109375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ 1 . length ] ;
rank: 51
score: 99.74751209077381
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 51
score: 99.74098061615567
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 51
score: 99.72312575120192
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 51
score: 99.71725643382354
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 51
score: 99.71537140877017
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 51
score: 99.68424479166667
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 51
score: 99.67987271012932
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; }
rank: 51
score: 99.65753173828125
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 52
score: 99.77014399509804
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ 0 . length ] ; }
rank: 52
score: 99.74747333829364
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 52
score: 99.74088209502551
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 52
score: 99.72250253182871
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ;
rank: 52
score: 99.72021484375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 52
score: 99.71699617346938
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 52
score: 99.71533978174604
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 52
score: 99.68418278769842
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 52
score: 99.679833984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 52
score: 99.65749782986111
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 53
score: 99.7699896364796
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ;
rank: 53
score: 99.74740962658899
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 53
score: 99.74088187839673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 53
score: 99.72021484375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 53
score: 99.71687659438776
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 53
score: 99.71522623697916
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 53
score: 99.68390376984127
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 53
score: 99.67969550461065
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ;
rank: 53
score: 99.6573486328125
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 54
score: 99.7468701972336
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 54
score: 99.74079241071429
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 54
score: 99.72234030330883
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = new double [ y 0 . length ] ;
rank: 54
score: 99.71996228448276
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 54
score: 99.71521577380952
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 54
score: 99.683837890625
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 54
score: 99.67967066271552
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 54
score: 99.65696614583334
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 55
score: 99.76921429550438
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 55
score: 99.74648942618535
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 55
score: 99.74055619673295
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 ;
rank: 55
score: 99.72122012867646
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 55
score: 99.7199609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 55
score: 99.7162890625
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 55
score: 99.71506076388889
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 55
score: 99.68375396728516
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 55
score: 99.67950923859127
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ vec CaMeL Absolute CaMeL Tolerance ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ vec CaMeL Absolute CaMeL Tolerance ] ; }
rank: 55
score: 99.65690104166667
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 56
score: 99.76837627704327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 56
score: 99.74635790215164
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 56
score: 99.74054761202831
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 ;
rank: 56
score: 99.71589626736112
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 56
score: 99.71498221781717
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 56
score: 99.67942266949153
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 56
score: 99.65687897245763
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 57
score: 99.76834671585648
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 57
score: 99.74628092447917
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 57
score: 99.74026804956897
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 57
score: 99.71988600127551
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 57
score: 99.71515362079327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 57
score: 99.71445478019068
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 57
score: 99.683544921875
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 57
score: 99.67909683719758
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; }
rank: 57
score: 99.65679086538462
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 58
score: 99.76783662683823
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 58
score: 99.7458984375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 58
score: 99.74014718191964
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 58
score: 99.72066627358491
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 58
score: 99.71961388221153
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 58
score: 99.71439985795455
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 58
score: 99.68348693847656
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 58
score: 99.6789336622807
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ;
rank: 58
score: 99.656640625
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 59
score: 99.76782705269608
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 59
score: 99.745361328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 59
score: 99.73985815829919
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , null , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 59
score: 99.7205690870098
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = new double [ y 0 . length ] ;
rank: 59
score: 99.7147441007653
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 59
score: 99.71421185661765
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 59
score: 99.68342590332031
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 59
score: 99.67875532670455
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 59
score: 99.65661808894231
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 60
score: 99.767578125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 60
score: 99.74534131659836
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 60
score: 99.73974609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 60
score: 99.72050206801471
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 60
score: 99.71869255514706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 60
score: 99.714658203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 60
score: 99.7141849578373
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 60
score: 99.68322523584905
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 60
score: 99.678740234375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 60
score: 99.65658804086539
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 61
score: 99.745322265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 61
score: 99.73973547894022
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 . length ;
rank: 61
score: 99.72046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 61
score: 99.71791811342592
patch: final double error = 0 ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 61
score: 99.71410193810097
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 61
score: 99.71398379197761
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 61
score: 99.68312072753906
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 61
score: 99.65631200396825
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 62
score: 99.76713590801887
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ;
rank: 62
score: 99.7451592807112
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 62
score: 99.73966604764344
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 62
score: 99.71753358004386
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 62
score: 99.7139380670363
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 62
score: 99.71365234375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 62
score: 99.68299602640086
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 62
score: 99.67841954385081
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 62
score: 99.6562274639423
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 63
score: 99.76702987938596
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 63
score: 99.74509974888393
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 63
score: 99.73943058894231
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 63
score: 99.719423828125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 63
score: 99.71741413620283
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 63
score: 99.71375774515086
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 63
score: 99.71358816964286
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 63
score: 99.68289947509766
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 63
score: 99.67819782838983
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 63
score: 99.6562271118164
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 64
score: 99.76697848135964
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 64
score: 99.73936917489036
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 64
score: 99.71713775058963
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 64
score: 99.71350467566288
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 64
score: 99.7130246629902
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 64
score: 99.67779737903226
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , $NUMBER$ , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 64
score: 99.6561612215909
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 65
score: 99.76689295614919
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 65
score: 99.74495709528688
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 65
score: 99.73927556818182
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 ;
rank: 65
score: 99.71851967865567
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 65
score: 99.71707099780701
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 65
score: 99.71332097457628
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 65
score: 99.71284080038265
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 65
score: 99.68255269752359
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 65
score: 99.67778162802419
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 65
score: 99.65604285037878
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 66
score: 99.76639597039474
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 66
score: 99.74489113136575
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 66
score: 99.73914591471355
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = new double [ y 0 ] ;
rank: 66
score: 99.71702293113425
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 66
score: 99.71695650540866
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 66
score: 99.71312736742425
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 66
score: 99.7121112530048
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = new double [ y 0 . length ] ;
rank: 66
score: 99.68252563476562
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 66
score: 99.65602463942308
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 67
score: 99.74472496157787
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 67
score: 99.73887282151442
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 67
score: 99.71678748497597
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 67
score: 99.716435546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 67
score: 99.71283961054104
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 67
score: 99.71207682291667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 67
score: 99.68246459960938
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 67
score: 99.67689957157258
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; }
rank: 67
score: 99.65589904785156
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 68
score: 99.76546875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 68
score: 99.74437313988095
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 68
score: 99.71657081886575
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 68
score: 99.71634114583334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else {
rank: 68
score: 99.71269200211864
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 68
score: 99.71199065563725
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 68
score: 99.68230438232422
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 68
score: 99.67681981646825
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 68
score: 99.6556625366211
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 69
score: 99.76508159022177
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 69
score: 99.74426508884804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 69
score: 99.7383524576823
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 69
score: 99.71645220588235
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 69
score: 99.71202895220588
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 69
score: 99.71184430803571
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 69
score: 99.682177734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 69
score: 99.676513671875
patch: scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 69
score: 99.65562438964844
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 70
score: 99.76504720052084
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 70
score: 99.74339076450893
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 70
score: 99.73834978070175
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 70
score: 99.71595177283653
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 70
score: 99.7158203125
patch: final double error = 0 ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ;
rank: 70
score: 99.71195778917911
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 70
score: 99.711494140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 70
score: 99.6820297241211
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 70
score: 99.67645474137932
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ; }
rank: 70
score: 99.65555889423077
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 71
score: 99.76500355113636
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 71
score: 99.7430813029661
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 71
score: 99.7383045014881
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 71
score: 99.71583873820755
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 71
score: 99.7119140625
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 71
score: 99.71075439453125
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 71
score: 99.68200476694915
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 71
score: 99.67643491683468
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 71
score: 99.65547180175781
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 72
score: 99.76489686129386
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 72
score: 99.74294793801229
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 72
score: 99.73826411732456
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 72
score: 99.71487247242646
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 72
score: 99.71190631200396
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 72
score: 99.71018384850544
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 72
score: 99.68195343017578
patch: System . arraycopy ( first CaMeL Time , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 72
score: 99.67588297526042
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 73
score: 99.764892578125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 73
score: 99.74269233315678
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 73
score: 99.73817593443627
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 73
score: 99.71179917279412
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 73
score: 99.68124494881465
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 73
score: 99.67558262711864
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 73
score: 99.65544359611742
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 74
score: 99.76482421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 74
score: 99.74260344328704
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 74
score: 99.738037109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 74
score: 99.7149299172794
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 74
score: 99.71164838005515
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 74
score: 99.70947265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 74
score: 99.68107604980469
patch: System . arraycopy ( first CaMeL Time , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 74
score: 99.67535597278226
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 74
score: 99.65540364583333
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 75
score: 99.76476836622807
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 75
score: 99.7425930217161
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 75
score: 99.7378817471591
patch: y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 75
score: 99.71446602299528
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 75
score: 99.71339699074075
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 75
score: 99.71158854166667
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 75
score: 99.7094140625
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 75
score: 99.6809585813492
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 75
score: 99.67534993489583
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 75
score: 99.6552734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 76
score: 99.76471292747641
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 76
score: 99.742431640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 76
score: 99.73783735795455
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 76
score: 99.71438598632812
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 76
score: 99.7130714699074
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; }
rank: 76
score: 99.7115119485294
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 76
score: 99.70927734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 76
score: 99.6809326171875
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 76
score: 99.6751357256356
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , new double [ y 0 . length ] , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 76
score: 99.65520833333333
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 77
score: 99.74239309210526
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 77
score: 99.71395137392241
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 77
score: 99.7128236060049
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 77
score: 99.71147155761719
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 77
score: 99.70923330269608
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 77
score: 99.68063923463983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 77
score: 99.67473958333333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 77
score: 99.65516075721153
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 78
score: 99.764482421875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ 0 . length ] ;
rank: 78
score: 99.74231196384804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 78
score: 99.73734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 78
score: 99.71376584610849
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 78
score: 99.71278928360849
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; }
rank: 78
score: 99.7113549017137
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 78
score: 99.7089092548077
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 78
score: 99.68055725097656
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 78
score: 99.67458055840164
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 78
score: 99.65514026988636
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 79
score: 99.7642271752451
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 79
score: 99.74197232521186
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 79
score: 99.73719075520833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( ) ;
rank: 79
score: 99.7134650735294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 79
score: 99.71229383680556
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 79
score: 99.7113396139706
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 79
score: 99.70869140625
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 79
score: 99.68042379712301
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 79
score: 99.67445816532258
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 79
score: 99.65509517609127
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 80
score: 99.76411576704545
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 80
score: 99.74157507944915
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 80
score: 99.73665364583333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 80
score: 99.71228515625
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 80
score: 99.71226435122283
patch: final double error = 0 ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 80
score: 99.71116009880515
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 80
score: 99.680322265625
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 80
score: 99.65505981445312
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 81
score: 99.76405777469758
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 81
score: 99.74146749205508
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 81
score: 99.73643092105263
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 81
score: 99.7122641509434
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 81
score: 99.7120361328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 81
score: 99.71114561987704
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 81
score: 99.70864800347222
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } }
rank: 81
score: 99.67415364583333
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 81
score: 99.65503743489583
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 82
score: 99.74107024629237
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 82
score: 99.73638916015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 82
score: 99.71218872070312
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 82
score: 99.71199972587719
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ) ;
rank: 82
score: 99.71091267213983
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 82
score: 99.70828683035714
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 82
score: 99.68029022216797
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 82
score: 99.67410594019397
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 82
score: 99.6549301147461
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 83
score: 99.76398405481558
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 83
score: 99.74083533653847
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 83
score: 99.736328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 83
score: 99.71187721108491
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 83
score: 99.71168374115567
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 83
score: 99.71084449404762
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 83
score: 99.70773315429688
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = scale ;
rank: 83
score: 99.68026878720238
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 83
score: 99.67403288810483
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 83
score: 99.65483940972223
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 84
score: 99.76397589917453
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 84
score: 99.74082594651442
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 84
score: 99.73597130408653
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 84
score: 99.71147303427419
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 84
score: 99.71083818855932
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 84
score: 99.70766977163461
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 84
score: 99.68002077132937
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 84
score: 99.67396282327586
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; }
rank: 84
score: 99.65480065724206
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 85
score: 99.76388888888889
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 85
score: 99.74058314732143
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 85
score: 99.73589178856383
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 85
score: 99.71149027122641
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 85
score: 99.71077198093221
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 85
score: 99.67988586425781
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 85
score: 99.67383587549604
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 85
score: 99.65476032838983
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 86
score: 99.76347294560185
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 86
score: 99.74036458333333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 86
score: 99.73573704769737
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 86
score: 99.71075798483456
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 86
score: 99.71042887369792
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 86
score: 99.707099609375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 86
score: 99.67984444754464
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 86
score: 99.67334826239224
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 86
score: 99.65474700927734
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 87
score: 99.76334635416667
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } { scale = new double [ y 0 . length ] ;
rank: 87
score: 99.7403564453125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 87
score: 99.73572649274554
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 87
score: 99.71106196384804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 87
score: 99.71074387122844
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 87
score: 99.71036630306604
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 87
score: 99.70700252757354
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 87
score: 99.67972819010417
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 87
score: 99.67332240513393
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 87
score: 99.65470886230469
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 88
score: 99.76272957785088
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 88
score: 99.74025352328431
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; / } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 88
score: 99.73561448317308
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 88
score: 99.71099175347223
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ) ;
rank: 88
score: 99.71066056436567
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 88
score: 99.70599724264706
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 88
score: 99.67291559938525
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . clone ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . clone ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . clone ( ) ; }
rank: 88
score: 99.65460759943181
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 89
score: 99.76265980113637
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 89
score: 99.74005827356558
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 89
score: 99.73519461495536
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 89
score: 99.71087771045919
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 89
score: 99.71028645833333
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 89
score: 99.7054443359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 89
score: 99.67942592075893
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 89
score: 99.67273149334017
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 89
score: 99.65444946289062
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 90
score: 99.76254583864795
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 90
score: 99.73997395833334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 90
score: 99.73508029513889
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 90
score: 99.71081149193549
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 90
score: 99.71050840435606
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 90
score: 99.70931893807871
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 90
score: 99.70522836538461
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 90
score: 99.67938232421875
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 90
score: 99.67190926535088
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 91
score: 99.76248115405701
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 91
score: 99.73994298135081
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 91
score: 99.73505476409314
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 91
score: 99.71050666360294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 91
score: 99.7104346431903
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 91
score: 99.70913756127452
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 91
score: 99.70495366115196
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 91
score: 99.67932891845703
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 91
score: 99.67174353966347
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 91
score: 99.65437085700758
patch: System . arraycopy ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 92
score: 99.76245545504386
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 92
score: 99.73949032738095
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 92
score: 99.73503460800438
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 92
score: 99.71044921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 92
score: 99.71037946428571
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 92
score: 99.70846737132354
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 92
score: 99.70491849459134
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 92
score: 99.67902374267578
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 92
score: 99.6716812375992
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 92
score: 99.65435697115385
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 93
score: 99.76217086226852
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 93
score: 99.73948620211694
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 93
score: 99.73500639816811
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 93
score: 99.71034150965073
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 93
score: 99.71020009566327
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 93
score: 99.70817364386792
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) }
rank: 93
score: 99.70484415690105
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 93
score: 99.67162146935097
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 93
score: 99.6541045217803
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 94
score: 99.7621004971591
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ y 0 . length ] = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 94
score: 99.73487215909091
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 94
score: 99.709814453125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 94
score: 99.70783547794117
patch: final double [ ] scale = if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 94
score: 99.70475968070652
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 94
score: 99.67891245039682
patch: System . arraycopy ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 94
score: 99.67129952566964
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 95
score: 99.7618920110887
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 95
score: 99.73897999730603
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 95
score: 99.73486328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 95
score: 99.71010162870763
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ) ;
rank: 95
score: 99.709658203125
patch: final double error = 0 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 95
score: 99.70783276827831
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 95
score: 99.7046760110294
patch: if ( vec CaMeL Absolute CaMeL Tolerance != null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 95
score: 99.67889737215908
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 95
score: 99.6711189516129
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , $NUMBER$ , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 95
score: 99.6538973721591
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 96
score: 99.76166130514706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 96
score: 99.73890341481855
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 96
score: 99.73411704009433
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 96
score: 99.70995375689338
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 96
score: 99.70455228365384
patch: if ( vec CaMeL Absolute CaMeL Tolerance != null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 96
score: 99.6788101196289
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 96
score: 99.67098947298729
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 96
score: 99.65384734623017
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 97
score: 99.76164165296052
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 97
score: 99.7387459047379
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 97
score: 99.73363353587963
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ; }
rank: 97
score: 99.70984468005952
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 97
score: 99.7095703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 97
score: 99.70737868088942
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 97
score: 99.67880249023438
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 97
score: 99.67094646516394
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 98
score: 99.76154370577831
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } }
rank: 98
score: 99.73871626420454
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 98
score: 99.73328899515086
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 98
score: 99.70983516808712
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 98
score: 99.70956655649039
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 98
score: 99.7071694428066
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 98
score: 99.6785888671875
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 98
score: 99.67081392728366
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 98
score: 99.65366036551339
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 99
score: 99.76143973214286
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 99
score: 99.73869105747768
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 99
score: 99.73323848329741
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 99
score: 99.70967741935483
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 99
score: 99.70936210200472
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 99
score: 99.70712515024039
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 99
score: 99.70261793870192
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 99
score: 99.67858072916667
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 99
score: 99.6535907451923
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 100
score: 99.73846028645833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 100
score: 99.7329296875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a [ 0 . length ] ;
rank: 100
score: 99.7096650094697
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 100
score: 99.70923639112904
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 100
score: 99.70260799632354
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 100
score: 99.67857360839844
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 100
score: 99.67047419313525
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 100
score: 99.65354965672348
patch: interpolator . store CaMeL Time ( first CaMeL Time , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 101
score: 99.76106770833333
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 101
score: 99.73824923155738
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 101
score: 99.73276192801339
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 101
score: 99.70950415826613
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 101
score: 99.70896522671569
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 101
score: 99.70249586838942
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 101
score: 99.6785404265873
patch: System . arraycopy ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 101
score: 99.67038532838983
patch: scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 101
score: 99.65351394127156
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 102
score: 99.7605302918632
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 102
score: 99.7381924715909
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 102
score: 99.73275553385416
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 102
score: 99.70942892957089
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 102
score: 99.70889871162281
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 102
score: 99.70670572916667
patch: double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 102
score: 99.702392578125
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 102
score: 99.67823223039215
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 102
score: 99.67030609631148
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ;
rank: 102
score: 99.65348597935268
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 103
score: 99.76038953993056
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 103
score: 99.73815696022727
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 103
score: 99.73226207386364
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 103
score: 99.70940085018383
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 103
score: 99.70868542729592
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; first CaMeL Time = false ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 103
score: 99.70640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ;
rank: 103
score: 99.67814636230469
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 103
score: 99.67019952512256
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 103
score: 99.65343475341797
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 104
score: 99.76013671875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 104
score: 99.73805092865567
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 104
score: 99.73225911458333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 104
score: 99.70937965029762
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 104
score: 99.70866231715425
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] ;
rank: 104
score: 99.70218673406863
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 104
score: 99.67786407470703
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 104
score: 99.67007396260246
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 104
score: 99.65339608028017
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 105
score: 99.737890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 105
score: 99.73218645368304
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 105
score: 99.70937791511194
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 105
score: 99.7085593894676
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 105
score: 99.70606486002605
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 105
score: 99.7020975748698
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 105
score: 99.67779071514423
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 105
score: 99.66998808262711
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 105
score: 99.65328979492188
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 106
score: 99.75995342548077
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 106
score: 99.73767961774554
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 106
score: 99.73218217329546
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 . length ;
rank: 106
score: 99.70936686197916
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 106
score: 99.70839436848958
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 106
score: 99.70606407752403
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 106
score: 99.7020772298177
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 106
score: 99.67763671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 106
score: 99.66943359375
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ vec CaMeL Absolute CaMeL Tolerance ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale [ vec CaMeL Absolute CaMeL Tolerance ] = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 106
score: 99.65327592329545
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 107
score: 99.7597235317888
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 107
score: 99.7373046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 107
score: 99.73213641826923
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 107
score: 99.7093445824795
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 107
score: 99.7081768329327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 107
score: 99.70590728183963
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 107
score: 99.7017941942402
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; else scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 107
score: 99.67762678760593
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 107
score: 99.66941758452869
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 107
score: 99.65325270432692
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 108
score: 99.75960582386364
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 108
score: 99.73689645235656
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 108
score: 99.73203822544643
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 108
score: 99.70895337301587
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 108
score: 99.70557544849537
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 108
score: 99.7017463235294
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 108
score: 99.66931573275862
patch: scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 108
score: 99.65321673768939
patch: System . arraycopy ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 109
score: 99.75956669560185
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 109
score: 99.73194247159091
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance + vec CaMeL Absolute CaMeL Tolerance ;
rank: 109
score: 99.70880485983456
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 109
score: 99.70809072818396
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 109
score: 99.70553823617789
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 109
score: 99.70160381610577
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 109
score: 99.67742156982422
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 109
score: 99.669228515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 110
score: 99.75954182942708
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 110
score: 99.73656826331967
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 110
score: 99.73181683084239
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 110
score: 99.70877838134766
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 110
score: 99.70798017393868
patch: final double error = 0 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 110
score: 99.701455078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 110
score: 99.65317962129237
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 111
score: 99.75949435763889
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 111
score: 99.73655598958334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 111
score: 99.73175370065789
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 . length ;
rank: 111
score: 99.70877722537878
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 111
score: 99.70796342329545
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 111
score: 99.7053855613426
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 111
score: 99.70138671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 111
score: 99.67723059275794
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 111
score: 99.66916876324153
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 111
score: 99.65317719558189
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 112
score: 99.75933837890625
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 112
score: 99.73623860677084
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 112
score: 99.73174324682203
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 112
score: 99.70855353860294
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 112
score: 99.7078857421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 112
score: 99.70522836538461
patch: } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 112
score: 99.70108736478366
patch: if ( scal CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 112
score: 99.67721557617188
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 112
score: 99.66900324417372
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 112
score: 99.65308357007575
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 113
score: 99.75924307839912
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 113
score: 99.73620398569915
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 113
score: 99.73141818576389
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 113
score: 99.70854635799633
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 113
score: 99.70777925531915
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 113
score: 99.7051532451923
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 113
score: 99.67719282670454
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 113
score: 99.66878836495536
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 113
score: 99.65305739182692
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 114
score: 99.75837311921296
patch: double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 114
score: 99.73618404200819
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = Math . min ( vec CaMeL Absolute CaMeL Tolerance , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 114
score: 99.73128522028688
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 114
score: 99.70829458085318
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 114
score: 99.70771300117924
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 114
score: 99.70489875637755
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 114
score: 99.70095590444711
patch: if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 114
score: 99.67716217041016
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 114
score: 99.66867220603814
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 114
score: 99.65303178267045
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 115
score: 99.75831074617346
patch: scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 115
score: 99.73614698840726
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 115
score: 99.7312744140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 115
score: 99.7082275390625
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 115
score: 99.70762803819444
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 115
score: 99.67713216145833
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 115
score: 99.66866515112704
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 115
score: 99.65295040246212
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 116
score: 99.75807407924107
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 116
score: 99.73614095052083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 116
score: 99.73120595894608
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 116
score: 99.70796472886029
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 116
score: 99.70482919730392
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 116
score: 99.70083383413461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ;
rank: 116
score: 99.67711139547414
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 116
score: 99.66852323887711
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 116
score: 99.65285422585227
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 117
score: 99.73597372731855
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 117
score: 99.73077766262755
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 117
score: 99.70787173411885
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 117
score: 99.70761213631465
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 117
score: 99.70481004901961
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 117
score: 99.70075017755681
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 117
score: 99.66837565104167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . clone ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . clone ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . clone ( ) ;
rank: 117
score: 99.65279327876983
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 118
score: 99.75786884014423
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ;
rank: 118
score: 99.73589409722223
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 118
score: 99.73064864309211
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b 0 . length ;
rank: 118
score: 99.7078524502841
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 118
score: 99.70726521809895
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 118
score: 99.70474947415866
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 118
score: 99.67706008184524
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 118
score: 99.66825284090909
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 118
score: 99.65277944711538
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 119
score: 99.75784505208334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 119
score: 99.73064554148706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 119
score: 99.70773470603814
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 119
score: 99.70701316550925
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 119
score: 99.70056870404412
patch: if ( scal CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 119
score: 99.67699032738095
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 119
score: 99.6681640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 119
score: 99.6527328491211
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 120
score: 99.75783242984694
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y length ] ;
rank: 120
score: 99.73544259798729
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 120
score: 99.73056265024039
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 120
score: 99.70757054570896
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 120
score: 99.70693912146227
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 120
score: 99.70443960336539
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 120
score: 99.70018592247597
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 120
score: 99.65270182291667
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 121
score: 99.75778377757354
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 1 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 121
score: 99.7353751890121
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 121
score: 99.70736873851104
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 121
score: 99.70656822467673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 121
score: 99.70431640625
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 121
score: 99.70013786764706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 121
score: 99.67684500558036
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ; }
rank: 121
score: 99.66760004783163
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 121
score: 99.65268049568965
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 122
score: 99.7574624115566
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 122
score: 99.73509579613095
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 122
score: 99.7301953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 122
score: 99.70735677083333
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 122
score: 99.70636455829327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 122
score: 99.67683531746032
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 122
score: 99.66739241803279
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 123
score: 99.75742885044643
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 123
score: 99.73505316840277
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 123
score: 99.72998046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 123
score: 99.70708955223881
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 123
score: 99.70411964699075
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null )
rank: 123
score: 99.69997608418367
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 123
score: 99.67680358886719
patch: System . arraycopy ( first CaMeL Time , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 123
score: 99.66737944504311
patch: scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 123
score: 99.65260667067308
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 124
score: 99.757119140625
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y . length ] ;
rank: 124
score: 99.73501481681035
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 124
score: 99.72983186141305
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 ;
rank: 124
score: 99.70698322233606
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 124
score: 99.7062237079327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 124
score: 99.70409252025463
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 124
score: 99.69992300180289
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 124
score: 99.67657063802083
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 124
score: 99.6671942349138
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 124
score: 99.65238813920455
patch: interpolator . store CaMeL Time ( first CaMeL Time , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 125
score: 99.75691731770833
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 125
score: 99.735
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 125
score: 99.72982627467105
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 125
score: 99.70693022629311
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 125
score: 99.70620492788461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 125
score: 99.70398179540095
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . } } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 125
score: 99.69988364361703
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scale ; } else { scale = new double [ y 0 . length ] ;
rank: 125
score: 99.67652893066406
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 125
score: 99.66700962611607
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 125
score: 99.65231119791666
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 126
score: 99.75681068157327
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 126
score: 99.73485540574596
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 126
score: 99.72965227971312
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 126
score: 99.70690735774254
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 126
score: 99.70589488636364
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 126
score: 99.70365084134616
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = new double [ y 0 . length ] ;
rank: 126
score: 99.69974689094387
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale += vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 126
score: 99.67648315429688
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 126
score: 99.66691214139344
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 127
score: 99.75655691964286
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 127
score: 99.73484413296569
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 127
score: 99.70688763786765
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 127
score: 99.70564932193396
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 127
score: 99.70362249410377
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 127
score: 99.69968825120192
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 127
score: 99.67647298177083
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 127
score: 99.6667040215164
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 127
score: 99.652197265625
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 128
score: 99.75636478892544
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 128
score: 99.73474542025862
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 128
score: 99.72932381465517
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 128
score: 99.70687820662313
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 128
score: 99.70558518629808
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 128
score: 99.70360423900463
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } ( ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 128
score: 99.69965069110577
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 128
score: 99.67634582519531
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 128
score: 99.66631027747844
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 128
score: 99.65215879498106
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 129
score: 99.75625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 129
score: 99.73467426915323
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 129
score: 99.7293113425926
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 ; }
rank: 129
score: 99.70677923387096
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 129
score: 99.699443359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 129
score: 99.67625075120192
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 129
score: 99.66624232700893
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 129
score: 99.65207891949153
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 130
score: 99.73453194754464
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 130
score: 99.72905530427632
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages - 1 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 130
score: 99.70658605238971
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 130
score: 99.70534104567308
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 130
score: 99.69933064778645
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 130
score: 99.6761245727539
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 130
score: 99.66590426260964
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; }
rank: 130
score: 99.65195904356061
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 131
score: 99.75616122159092
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 131
score: 99.73450741525424
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 131
score: 99.7290234375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 131
score: 99.70655952065678
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 131
score: 99.70313439002403
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 131
score: 99.6992578125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 131
score: 99.67607879638672
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 131
score: 99.66590356045081
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 131
score: 99.65192057291667
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 132
score: 99.756005859375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 132
score: 99.73450520833333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 132
score: 99.72895250822368
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 . length * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 132
score: 99.70647116268383
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 132
score: 99.705068359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 132
score: 99.703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 132
score: 99.6988645067402
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 132
score: 99.67605590820312
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 132
score: 99.665869140625
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 132
score: 99.65188598632812
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 133
score: 99.75593784877232
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 133
score: 99.73436699538935
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 133
score: 99.72891727570564
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 133
score: 99.70644244025735
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 133
score: 99.70298414963942
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 133
score: 99.69885493259804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 133
score: 99.66558730811404
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 133
score: 99.65188506155303
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 134
score: 99.7557884954637
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 134
score: 99.73436658135776
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 134
score: 99.72872792119566
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 134
score: 99.7063224546371
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 134
score: 99.70436873525944
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 134
score: 99.70259986733491
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 134
score: 99.69858502327128
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 134
score: 99.65187072753906
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 135
score: 99.75546532346492
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 135
score: 99.73428548177084
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 135
score: 99.72869140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages - 1 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 135
score: 99.70627010569854
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 135
score: 99.702587890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 135
score: 99.67571258544922
patch: System . arraycopy ( first CaMeL Time , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 135
score: 99.6652595766129
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ; }
rank: 136
score: 99.73422128182871
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 136
score: 99.72841796875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 ;
rank: 136
score: 99.70618857106855
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 136
score: 99.70421742584746
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 136
score: 99.69849111519608
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 136
score: 99.6756591796875
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 136
score: 99.66517130533855
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , scale ) ;
rank: 136
score: 99.65183327414773
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 137
score: 99.75537909836065
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 137
score: 99.73408534163136
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 137
score: 99.72840711805556
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 137
score: 99.70617094494048
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 137
score: 99.69845793968024
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 137
score: 99.67564392089844
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 137
score: 99.66514664989407
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 137
score: 99.65180969238281
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 138
score: 99.7551171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 138
score: 99.73407820159314
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 138
score: 99.72838320974576
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 138
score: 99.70614769345238
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 138
score: 99.70338295990567
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 138
score: 99.70217556423611
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 138
score: 99.698349609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 138
score: 99.67564290364584
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 138
score: 99.66512711321721
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ;
rank: 138
score: 99.65169525146484
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 139
score: 99.755078125
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 139
score: 99.73369770665323
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 139
score: 99.72835867745536
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 139
score: 99.70613606770833
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 139
score: 99.70328463040866
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 139
score: 99.70198567708333
patch: try { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 139
score: 99.6983418367347
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 139
score: 99.67561340332031
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 139
score: 99.66512324892241
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 139
score: 99.65164620535714
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 140
score: 99.73359375
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 140
score: 99.72820575420673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 140
score: 99.70593979779412
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 140
score: 99.7032111672794
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; sum = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 140
score: 99.70185908564815
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 140
score: 99.69808900122548
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 140
score: 99.67559814453125
patch: h CaMeL New = estimate CaMeL Error ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 140
score: 99.66509419102823
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 140
score: 99.65162760416666
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 141
score: 99.733564453125
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 141
score: 99.728203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 141
score: 99.70585062966418
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 141
score: 99.70320638020833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 141
score: 99.70180756191037
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 141
score: 99.67549133300781
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 141
score: 99.66467678931451
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 141
score: 99.65157752403846
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 142
score: 99.75482855902777
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 142
score: 99.73353794642857
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 142
score: 99.72817201967592
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 142
score: 99.70578900505515
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 142
score: 99.70261793870192
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 142
score: 99.7015739889706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance <= null ) { scale = new double [ y 0 . length ] ;
rank: 142
score: 99.69716342659883
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 142
score: 99.66463216145833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 142
score: 99.65157645089286
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 143
score: 99.75474330357143
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 143
score: 99.73349294354838
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 143
score: 99.72795999461206
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 143
score: 99.7057243795956
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 143
score: 99.70248931308963
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 143
score: 99.70154296875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 143
score: 99.69633693321079
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 143
score: 99.65155029296875
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 144
score: 99.75465303308823
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 144
score: 99.72794886997768
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 144
score: 99.70562841021825
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 144
score: 99.70232223252118
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 1 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 144
score: 99.70143821022727
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = new double [ y 0 . length ] ;
rank: 144
score: 99.69627948835785
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 144
score: 99.67491319444444
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 144
score: 99.65153503417969
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 145
score: 99.75461798199153
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 145
score: 99.73345269097223
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 145
score: 99.72774174528301
patch: final double [ ] scale ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 145
score: 99.7055305032169
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 145
score: 99.70223563058036
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 145
score: 99.701416015625
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 145
score: 99.67487089512711
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 145
score: 99.66444798519737
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 . 0 ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 145
score: 99.65144348144531
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 146
score: 99.75447591145833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 146
score: 99.73295017930327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 146
score: 99.7276953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 146
score: 99.702138671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; try { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 146
score: 99.69596041165866
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 146
score: 99.67484537760417
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 146
score: 99.66431092379386
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ;
rank: 146
score: 99.65138293850806
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 147
score: 99.75404986213235
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y . length ] ; }
rank: 147
score: 99.73285964439656
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 147
score: 99.72766644021739
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = b 0 ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 147
score: 99.70535950741525
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 147
score: 99.70202215786638
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 147
score: 99.7012469951923
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = new double [ y 0 . length ] ;
rank: 147
score: 99.69580078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 147
score: 99.66418663930085
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 147
score: 99.65132843501983
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 148
score: 99.7540402879902
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 148
score: 99.73280777469758
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 148
score: 99.72764040389151
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = b [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 148
score: 99.70524828361742
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 148
score: 99.70197405133929
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 148
score: 99.70124421296296
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 148
score: 99.695732421875
patch: final double [ ] scale ; if ( ( vec CaMeL Absolute CaMeL Tolerance == null ) && ( vec CaMeL Absolute CaMeL Tolerance == null ) ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 148
score: 99.67474772135417
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 148
score: 99.66415700604838
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ; }
rank: 148
score: 99.651318359375
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 149
score: 99.73267764136905
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 149
score: 99.72759540264423
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 149
score: 99.70510771780303
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 149
score: 99.70123636497641
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 149
score: 99.6956418059593
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 149
score: 99.67473602294922
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 149
score: 99.66415201822916
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 149
score: 99.65131378173828
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 150
score: 99.75361499451755
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 150
score: 99.73241359904661
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 150
score: 99.72747171336206
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 . length ; }
rank: 150
score: 99.70506332859848
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 150
score: 99.70188036151961
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 150
score: 99.70121793926887
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 150
score: 99.69504957932692
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 150
score: 99.67460632324219
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 150
score: 99.66410252305327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 150
score: 99.65131378173828
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 151
score: 99.73219105113637
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 151
score: 99.72746930803571
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 151
score: 99.70496226165254
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 151
score: 99.70090470224056
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 151
score: 99.6950214092548
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ;
rank: 151
score: 99.67449951171875
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 151
score: 99.66396318855932
patch: scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 151
score: 99.65130722313596
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 152
score: 99.7533291903409
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 152
score: 99.73212570440573
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = Math . max ( vec CaMeL Absolute CaMeL Tolerance , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 152
score: 99.72742365056818
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance : vec CaMeL Absolute CaMeL Tolerance ;
rank: 152
score: 99.70489142922794
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 152
score: 99.70177801724138
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 152
score: 99.70059317129629
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 152
score: 99.69495738636364
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; } else { scale = new double [ y 0 . length ] ;
rank: 152
score: 99.67447636045259
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 152
score: 99.65119702888258
patch: interpolator . store CaMeL Time ( first CaMeL Time , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 153
score: 99.75302915219908
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 153
score: 99.73209897933468
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 153
score: 99.72722981770833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 153
score: 99.7048843625992
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 153
score: 99.701533203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 153
score: 99.70049370659723
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 153
score: 99.694833984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; else if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ;
rank: 153
score: 99.6636487023305
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 153
score: 99.6511748342803
patch: interpolator . store CaMeL Time ( first CaMeL Time , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 154
score: 99.75276692708333
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 154
score: 99.73203461745689
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 154
score: 99.72706705729166
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 154
score: 99.70482610887096
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 154
score: 99.701513671875
patch: final double error = 0 ; for ( boolean loop = true ; loop ; ) { if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 154
score: 99.700478515625
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ;
rank: 154
score: 99.67435455322266
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 154
score: 99.66364397321429
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 154
score: 99.6511493389423
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 155
score: 99.73203125
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 155
score: 99.72696109693878
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = new double [ y 0 . length ] ;
rank: 155
score: 99.70455340485074
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 155
score: 99.70129616477273
patch: final double error = 0 ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 155
score: 99.70005859375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 155
score: 99.694814453125
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 155
score: 99.67434740823413
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 155
score: 99.66355794270834
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 156
score: 99.7525146484375
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 156
score: 99.7319099672379
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; / } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 156
score: 99.72690337558963
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 156
score: 99.7045023903918
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 156
score: 99.70118108785377
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 156
score: 99.69999262971699
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = new double [ y 0 . length ] ;
rank: 156
score: 99.6942689185049
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 156
score: 99.67428540426587
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 156
score: 99.66352370689656
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ; }
rank: 157
score: 99.75230916341145
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ;
rank: 157
score: 99.73189484126983
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 157
score: 99.72689383370536
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ; }
rank: 157
score: 99.70426671645221
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 157
score: 99.70103945974576
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 157
score: 99.69984266493056
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } ( ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ) . } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 157
score: 99.67420959472656
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 157
score: 99.66337733114919
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 157
score: 99.65106201171875
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 158
score: 99.7523046875
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 158
score: 99.73169817243304
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 158
score: 99.72683465676229
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 158
score: 99.7041744402985
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 158
score: 99.700966796875
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 158
score: 99.69968860554245
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 158
score: 99.69405205305233
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 158
score: 99.6741943359375
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 158
score: 99.66325160435268
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ( ) ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( ) ; }
rank: 158
score: 99.65105438232422
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 159
score: 99.75227864583333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 159
score: 99.73158365885416
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 159
score: 99.7267578125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 159
score: 99.70413855350378
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 159
score: 99.69957805129717
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 159
score: 99.69388595281863
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 159
score: 99.67414407169117
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 159
score: 99.66321982106855
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 160
score: 99.75227007949562
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 160
score: 99.73107038225446
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 160
score: 99.72674560546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 160
score: 99.70411706349206
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 160
score: 99.70081018518519
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 160
score: 99.69950434846699
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 160
score: 99.67389012896825
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 160
score: 99.6630859375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 161
score: 99.75221410290948
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 161
score: 99.73098958333334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 161
score: 99.726728515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , null , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 161
score: 99.7040306829637
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 161
score: 99.70079694475446
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 161
score: 99.6994159405048
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 161
score: 99.69343532986112
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 161
score: 99.67388916015625
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 161
score: 99.66306938559322
patch: scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 162
score: 99.75216829978814
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 162
score: 99.72669719827586
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 162
score: 99.70386460248162
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 162
score: 99.700712890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ;
rank: 162
score: 99.69304342830883
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 162
score: 99.67388509114583
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 162
score: 99.66287781762296
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 162
score: 99.65077311197916
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 163
score: 99.75209381620763
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 163
score: 99.72662353515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ;
rank: 163
score: 99.70384579613095
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 163
score: 99.69905911959134
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; }
rank: 163
score: 99.69290939031863
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 163
score: 99.67388237847223
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 163
score: 99.662841796875
patch: } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 164
score: 99.751943359375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y length ] ; }
rank: 164
score: 99.73067220052083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 164
score: 99.72659737723214
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 ; }
rank: 164
score: 99.70369332735656
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 164
score: 99.70067420372597
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 164
score: 99.69273792613636
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 164
score: 99.67385864257812
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 164
score: 99.66278176229508
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 164
score: 99.65062713623047
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 165
score: 99.75185178360849
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } else { scale = new double [ y 0 . length ] ; }
rank: 165
score: 99.72618611653645
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 165
score: 99.70366354549633
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 165
score: 99.69882436899039
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 165
score: 99.69260204081633
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 165
score: 99.67383922230114
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 165
score: 99.66273600260416
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 165
score: 99.65061996922348
patch: System . arraycopy ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 166
score: 99.75182711693549
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 166
score: 99.73040301983173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 166
score: 99.72595666956019
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 166
score: 99.7036424323694
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 166
score: 99.70056382665095
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 166
score: 99.69259643554688
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale += vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 166
score: 99.67376708984375
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 166
score: 99.6626685357863
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , null ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 166
score: 99.65050159801136
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 167
score: 99.75181513247283
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 167
score: 99.7303967085041
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 167
score: 99.72583879743304
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 167
score: 99.70355902777777
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 167
score: 99.70055700231481
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 167
score: 99.69870283018868
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 167
score: 99.69259643554688
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 167
score: 99.67373657226562
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 167
score: 99.65047325721154
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 168
score: 99.7516668911638
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 168
score: 99.73036024305556
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 168
score: 99.725771484375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] + y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 168
score: 99.7035412397541
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 168
score: 99.70046762319711
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 168
score: 99.69867519162736
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance . }
rank: 168
score: 99.69244025735294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 168
score: 99.6736831665039
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 168
score: 99.66256455243644
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 168
score: 99.65047325721154
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 169
score: 99.751591796875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ; }
rank: 169
score: 99.72992350260417
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 169
score: 99.72552490234375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 169
score: 99.70353190104167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ) ; }
rank: 169
score: 99.70045823317308
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , scale ) ;
rank: 169
score: 99.69863472732843
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 169
score: 99.67366536458333
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 169
score: 99.66254962858606
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 169
score: 99.65047200520833
patch: System . arraycopy ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 170
score: 99.729736328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 170
score: 99.72544487847222
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 ; }
rank: 170
score: 99.70351993336396
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 170
score: 99.70036969866071
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 170
score: 99.69863472732843
patch: scale ( new double [ y 0 . length ] ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] ) ; } else { scale ( new double [ y 0 . length ] ) ;
rank: 170
score: 99.692265625
patch: final double [ ] scale ; if ( ( vec CaMeL Absolute CaMeL Tolerance == null ) || ( vec CaMeL Absolute CaMeL Tolerance == null ) ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 170
score: 99.66241244612068
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; }
rank: 170
score: 99.65042877197266
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 171
score: 99.75140487938596
patch: scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 171
score: 99.72964182207662
patch: if ( scal CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 171
score: 99.72543646364795
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 171
score: 99.7034553079044
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 171
score: 99.7003515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 171
score: 99.69861557904412
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 171
score: 99.67360336061508
patch: System . arraycopy ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 171
score: 99.66240076864919
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 171
score: 99.65037536621094
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 172
score: 99.75113932291667
patch: double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 172
score: 99.72954358552632
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 172
score: 99.7252197265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 172
score: 99.70325618003731
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 172
score: 99.67356872558594
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 172
score: 99.66239659926471
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 172
score: 99.65035306490384
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 173
score: 99.75095621744792
patch: scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 173
score: 99.7292901400862
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 173
score: 99.72521441915761
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = a 0 ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 173
score: 99.70321025545636
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 173
score: 99.700078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y - 1 ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 173
score: 99.6919657389323
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 173
score: 99.66238248146186
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , new double [ y 0 . length ] , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 173
score: 99.6503388375947
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 174
score: 99.75090422453704
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 174
score: 99.72898789702869
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 174
score: 99.72516867897727
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 174
score: 99.70318293167372
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 174
score: 99.70003255208333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y - 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 174
score: 99.69834352889151
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = new double [ y 0 . length ] ;
rank: 174
score: 99.69191367953431
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; this . scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 174
score: 99.67351531982422
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 174
score: 99.66232549948771
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 175
score: 99.75087376644737
patch: double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 175
score: 99.72895063920454
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 175
score: 99.72508893694196
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 175
score: 99.70002092633929
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 175
score: 99.69833374023438
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 175
score: 99.6918194110577
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 175
score: 99.67350260416667
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 175
score: 99.65025886656746
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 176
score: 99.72887789818549
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 176
score: 99.72507642663044
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 176
score: 99.70313979640152
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 176
score: 99.699970703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } first CaMeL Time = false ;
rank: 176
score: 99.69823297464623
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 176
score: 99.69174505739795
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 176
score: 99.6734848022461
patch: h CaMeL New = estimate CaMeL Error ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 176
score: 99.662109375
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 177
score: 99.75042724609375
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 177
score: 99.72887731481481
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 177
score: 99.72505779655613
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 . length ; }
rank: 177
score: 99.70313262939453
patch: System . arraycopy ( y 0 , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 177
score: 99.69996925636575
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 177
score: 99.69812260841837
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 177
score: 99.69115271935097
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 177
score: 99.67347005208333
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 177
score: 99.662060546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 177
score: 99.65006256103516
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 178
score: 99.72884889632937
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 178
score: 99.72491828762755
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ a 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 178
score: 99.70308800899622
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 178
score: 99.69990234375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 178
score: 99.69112723214286
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 178
score: 99.67337239583334
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 178
score: 99.66204533811475
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 178
score: 99.65003551136364
patch: System . arraycopy ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 179
score: 99.75029139364919
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 179
score: 99.70304495389344
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 179
score: 99.6977069561298
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 179
score: 99.69111726721938
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ;
rank: 179
score: 99.67330932617188
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 179
score: 99.66195728739754
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 179
score: 99.64999337923729
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 180
score: 99.750146484375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 1 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 180
score: 99.72856083622685
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 180
score: 99.72472692418981
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = new double [ y 0 . length ] [ ] ;
rank: 180
score: 99.70298549107143
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 180
score: 99.699619140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 180
score: 99.69110576923077
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale . scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 180
score: 99.6732177734375
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 180
score: 99.66194385593221
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 180
score: 99.6499774639423
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 181
score: 99.75004069010417
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 181
score: 99.72849907309322
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 181
score: 99.72450474330357
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 181
score: 99.70289661038306
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 181
score: 99.69956235532408
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else {
rank: 181
score: 99.697421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 181
score: 99.69095458984376
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 181
score: 99.67320905412946
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 181
score: 99.66194354363208
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 181
score: 99.64993544756356
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 182
score: 99.74988731971153
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 182
score: 99.72848462301587
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 182
score: 99.72421322228773
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 182
score: 99.70287367876838
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 182
score: 99.69688063401442
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } * else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 182
score: 99.690771484375
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 182
score: 99.67296549479167
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 182
score: 99.66161308913935
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , new double [ y 0 . length ] ) ;
rank: 182
score: 99.64993239182692
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 183
score: 99.74962133290816
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 183
score: 99.72839807581019
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 183
score: 99.72416469029018
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 183
score: 99.70276272681451
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 183
score: 99.69930166568396
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 183
score: 99.6968635110294
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 183
score: 99.6907489483173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } while ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 183
score: 99.67277405753968
patch: System . arraycopy ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 183
score: 99.66158107069673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , $NUMBER$ , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 183
score: 99.64986535274622
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 184
score: 99.74946732954545
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 184
score: 99.72824928977273
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 184
score: 99.72405598958333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; }
rank: 184
score: 99.7026599702381
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 184
score: 99.69916347287736
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 184
score: 99.69642469618056
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 184
score: 99.69070733762256
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 184
score: 99.67276763916016
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 184
score: 99.66142216435185
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] ) ;
rank: 184
score: 99.64978397253788
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 185
score: 99.74934362192623
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 185
score: 99.72820344518442
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 185
score: 99.72393683667453
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ,
rank: 185
score: 99.70240350979478
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 185
score: 99.69912662146227
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 185
score: 99.69642469618056
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 185
score: 99.69065946691177
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 185
score: 99.67266555059524
patch: final Runge CaMeL Kutta CaMeL Step CaMeL Interpolator ( t 0 , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 185
score: 99.66138482862904
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; }
rank: 186
score: 99.74924045138889
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 186
score: 99.72808337602459
patch: if ( scal CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 186
score: 99.72384798728814
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 186
score: 99.70228486902573
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 186
score: 99.69621246936275
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 186
score: 99.69065755208334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = scale ;
rank: 186
score: 99.66126522775424
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ;
rank: 186
score: 99.64974212646484
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 187
score: 99.74903361002605
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ length ] ;
rank: 187
score: 99.72805304276316
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 187
score: 99.72369260204081
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 - 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 187
score: 99.70214016154661
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 187
score: 99.69861557904412
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else {
rank: 187
score: 99.69617850825472
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 187
score: 99.69062117034314
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 187
score: 99.67264556884766
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 187
score: 99.64967346191406
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 188
score: 99.7489764873798
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 188
score: 99.72799479166666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 188
score: 99.72369140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b [ 0 . length ] ;
rank: 188
score: 99.70213407628677
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 188
score: 99.69846888950893
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 188
score: 99.69060958059211
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 188
score: 99.67262268066406
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 188
score: 99.66110665457589
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ vec CaMeL Absolute CaMeL Tolerance ] ; }
rank: 188
score: 99.64966634114583
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 189
score: 99.74896129261364
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 189
score: 99.72798859126983
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 189
score: 99.7236328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 189
score: 99.70194692460318
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 189
score: 99.6983994306144
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 189
score: 99.69585605837264
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 189
score: 99.67251586914062
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 189
score: 99.66079416582662
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 189
score: 99.64965444711538
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 190
score: 99.7489525579637
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 190
score: 99.72796941207628
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 190
score: 99.70161576704545
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 190
score: 99.69806377704327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 190
score: 99.69571109693878
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 190
score: 99.67247009277344
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 190
score: 99.6607666015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 190
score: 99.64959085398706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 191
score: 99.7488505045573
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 191
score: 99.72783699682203
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 191
score: 99.72331832627118
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 191
score: 99.70160502772177
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 191
score: 99.69773548054245
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 191
score: 99.69503484987744
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 191
score: 99.6903997927296
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 191
score: 99.67246403769842
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 191
score: 99.66070056352459
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 191
score: 99.64958190917969
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 192
score: 99.74870082310268
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 192
score: 99.72325508549528
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b 0 ;
rank: 192
score: 99.70149253731343
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 192
score: 99.69770784198113
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; first CaMeL Time = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 192
score: 99.69492750901442
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ;
rank: 192
score: 99.69021606445312
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 192
score: 99.6724365234375
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 192
score: 99.66069965977823
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 192
score: 99.6495590209961
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 193
score: 99.74869511045259
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 193
score: 99.72769657258064
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 193
score: 99.7232421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 193
score: 99.7014663938492
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 193
score: 99.69471232096355
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 193
score: 99.6900607638889
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 193
score: 99.67240978422619
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 193
score: 99.6604715983073
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 193
score: 99.64950420673077
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 194
score: 99.7485546875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } }
rank: 194
score: 99.72320197610294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 194
score: 99.70137049788136
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 194
score: 99.69766177771227
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 194
score: 99.69459885817308
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 194
score: 99.67223539806548
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 194
score: 99.66045932112068
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 . 0 ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 194
score: 99.6494658499053
patch: System . arraycopy ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 195
score: 99.74825846354166
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 195
score: 99.72277301290761
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 195
score: 99.70129000756049
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 195
score: 99.69764335200472
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 195
score: 99.68994140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 195
score: 99.66027631915983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 195
score: 99.64946131552419
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 196
score: 99.7273163377193
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = Math . min ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 196
score: 99.72263849431818
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 196
score: 99.70128580729167
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 196
score: 99.697568359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 196
score: 99.69444783528645
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 196
score: 99.67218780517578
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 196
score: 99.66011687247983
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 196
score: 99.6494384765625
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 197
score: 99.74780701754386
patch: scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 197
score: 99.72718224158653
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 197
score: 99.7226092998798
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } }
rank: 197
score: 99.70118689903846
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 197
score: 99.69752854567308
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 197
score: 99.6943359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ;
rank: 197
score: 99.68954702524039
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 197
score: 99.67215638241525
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 197
score: 99.66007206357759
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 197
score: 99.64939926609848
patch: compute CaMeL Derivatives ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 198
score: 99.74780701754386
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 198
score: 99.72697501346983
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 198
score: 99.72243736530173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 198
score: 99.70111268939394
patch: System . arraycopy ( y 0 , 0 , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 198
score: 99.69735013521634
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] - y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 198
score: 99.69431640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ;
rank: 198
score: 99.68951171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 198
score: 99.67214217275944
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 198
score: 99.66001216700819
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 198
score: 99.64932105654762
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 199
score: 99.74775390625
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 199
score: 99.72695817618535
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 199
score: 99.72236689814815
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 199
score: 99.7010891154661
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 199
score: 99.69725705866227
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 199
score: 99.69420934606481
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? ) : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 199
score: 99.68926164215686
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 199
score: 99.6721420288086
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 199
score: 99.65970052083334
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ vec CaMeL Absolute CaMeL Tolerance ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale [ vec CaMeL Absolute CaMeL Tolerance ] = vec CaMeL Absolute CaMeL Tolerance ;
rank: 199
score: 99.64931640625
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 200
score: 99.72694546568627
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; * } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 200
score: 99.72236499451755
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 200
score: 99.70107581967213
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 200
score: 99.69705636160714
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ;
rank: 200
score: 99.69419049202128
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 200
score: 99.68899536132812
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 200
score: 99.6720703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 200
score: 99.65966796875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 200
score: 99.6492431640625
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 201
score: 99.74760999177632
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 201
score: 99.72673059682377
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 201
score: 99.72232380319149
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 . length ; }
rank: 201
score: 99.70102875808189
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 201
score: 99.69703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 201
score: 99.6939858490566
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 201
score: 99.68877618963069
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 201
score: 99.65963429418103
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 201
score: 99.64923292590726
patch: interpolator . store CaMeL Time ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 202
score: 99.74756731305804
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 202
score: 99.72671458760246
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 202
score: 99.70098114013672
patch: System . arraycopy ( y 0 , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 202
score: 99.69701171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 202
score: 99.69382052951389
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 202
score: 99.68868719362744
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 202
score: 99.67194366455078
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 202
score: 99.65962794569673
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 202
score: 99.64920479910714
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 203
score: 99.74743200231481
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 203
score: 99.72670084635416
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 203
score: 99.72209220096983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 203
score: 99.70090060763889
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 203
score: 99.69673127948113
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 203
score: 99.69373914930556
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 203
score: 99.68855315563725
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 203
score: 99.67193948997641
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 203
score: 99.65951974051339
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 203
score: 99.64915512547348
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 204
score: 99.72643074156746
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 204
score: 99.72208658854167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages - 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 204
score: 99.70076622596154
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 204
score: 99.69672751913265
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 204
score: 99.6936786358173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 204
score: 99.671923828125
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 204
score: 99.6594474546371
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , null ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 205
score: 99.74735300164474
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 205
score: 99.72642074092742
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 205
score: 99.721953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 205
score: 99.70074573863636
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 205
score: 99.69672206662736
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 205
score: 99.69359890919812
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : new double [ y 0 . length ] ;
rank: 205
score: 99.65942811129386
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 205
score: 99.64914466594827
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 206
score: 99.74718167489036
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 206
score: 99.72639382102273
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 206
score: 99.72190504807692
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 206
score: 99.70073784722223
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 206
score: 99.69664836379717
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 206
score: 99.69342386497641
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } * else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 206
score: 99.68826171875
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 206
score: 99.6717758178711
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 206
score: 99.6593905362216
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scale ) ;
rank: 206
score: 99.64912553267045
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 207
score: 99.74676983173077
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y $NUMBER$ . length ] ; }
rank: 207
score: 99.72634637551229
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 207
score: 99.72181357106855
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 207
score: 99.70073617788462
patch: final double sum = b 0 ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 207
score: 99.69664655412946
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 207
score: 99.69334980085785
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 207
score: 99.68810317095588
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 207
score: 99.6717300415039
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 207
score: 99.65924372438525
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 . 0 ; }
rank: 207
score: 99.64909130031779
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 208
score: 99.74649234693878
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ length ] ; }
rank: 208
score: 99.72612653459821
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 208
score: 99.72177915219908
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 208
score: 99.70071411132812
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 208
score: 99.69661754261364
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 208
score: 99.69329488502359
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 208
score: 99.687939453125
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 208
score: 99.67172346443965
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 208
score: 99.658984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 208
score: 99.64908599853516
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 209
score: 99.74643841911765
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; else { scale = new double [ y 0 . length ] ; }
rank: 209
score: 99.72609991776316
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 209
score: 99.72174072265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 209
score: 99.70062529151119
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 209
score: 99.68780891262755
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 209
score: 99.67170715332031
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 209
score: 99.6589591733871
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 209
score: 99.64903675426136
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 210
score: 99.74640523976294
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 210
score: 99.72168890035377
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 210
score: 99.70047760009766
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 210
score: 99.69635759320175
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Tmp [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 210
score: 99.6932421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 210
score: 99.68745659722222
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length + 1 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 210
score: 99.67168426513672
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 210
score: 99.65881147540983
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 210
score: 99.64898496685606
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 211
score: 99.74624399038461
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ vec CaMeL Absolute CaMeL Tolerance ; }
rank: 211
score: 99.72605794270834
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 211
score: 99.72160391971983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 211
score: 99.70043157762096
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 211
score: 99.69626290457589
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 211
score: 99.69319661458333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . } } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 211
score: 99.68739827473958
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; else scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 211
score: 99.67162322998047
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 211
score: 99.65849278336864
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 211
score: 99.64891826923076
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 212
score: 99.74585389254386
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 212
score: 99.7258984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 212
score: 99.72158203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 212
score: 99.70041419719827
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 212
score: 99.69602808459052
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 212
score: 99.69300672743056
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 212
score: 99.68719482421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 212
score: 99.671484375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 212
score: 99.65846354166666
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? vec CaMeL Absolute CaMeL Tolerance : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 213
score: 99.74580891927083
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 213
score: 99.72581845238095
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 213
score: 99.72153405975877
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 213
score: 99.70029148910984
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 213
score: 99.696015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 213
score: 99.692900390625
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 213
score: 99.6870703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 213
score: 99.67144775390625
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 213
score: 99.65805103739754
patch: scale = scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 214
score: 99.74577384159483
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 214
score: 99.72571672712054
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 214
score: 99.72145774147727
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b 0 ;
rank: 214
score: 99.7001953125
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 214
score: 99.69601514862805
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 214
score: 99.69287109375
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 214
score: 99.68705157844387
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 214
score: 99.67136896306818
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 214
score: 99.65796802662037
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 214
score: 99.64876302083333
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 215
score: 99.74566291360294
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 215
score: 99.72548988217213
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 215
score: 99.72121710526316
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 215
score: 99.69997054811508
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 215
score: 99.6960126768868
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 215
score: 99.67134094238281
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 215
score: 99.65785660282258
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 215
score: 99.64873860677083
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 216
score: 99.74550615730932
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 216
score: 99.72120028409091
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 216
score: 99.69991966985887
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 216
score: 99.69266312210648
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 216
score: 99.67124602754237
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 216
score: 99.65750220514113
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 217
score: 99.74549005681818
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 217
score: 99.72530812230603
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 217
score: 99.72112691627359
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = b [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 217
score: 99.69985499526516
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 217
score: 99.69588569972827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 217
score: 99.69255461516204
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 217
score: 99.686708984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 217
score: 99.67122395833333
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 217
score: 99.6571377840909
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 217
score: 99.64864464962122
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 218
score: 99.74541766826923
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y $NUMBER$ . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 218
score: 99.72529627913136
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 218
score: 99.72106061662946
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 218
score: 99.69964784564394
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 218
score: 99.69564759497548
patch: final double error = 0 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 218
score: 99.69249242665816
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 218
score: 99.686435546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 218
score: 99.6711929563492
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 218
score: 99.64854107481061
patch: interpolator . store CaMeL Time ( first CaMeL Time , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 219
score: 99.74525787870763
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 219
score: 99.72528976690573
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 219
score: 99.72100539434524
patch: final double [ ] scale ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 219
score: 99.6996349897541
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 219
score: 99.6956097146739
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { sum = new double [ y 0 . length ] ;
rank: 219
score: 99.69245515046296
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ;
rank: 219
score: 99.68638102213542
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 219
score: 99.67113844014831
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 219
score: 99.65687216481855
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y ] ;
rank: 219
score: 99.64848327636719
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 220
score: 99.74516325176887
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 220
score: 99.72512428977272
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 220
score: 99.72088833512932
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 220
score: 99.69959771455224
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 220
score: 99.69543004918981
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } try { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 220
score: 99.67113494873047
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 220
score: 99.65685163225446
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 220
score: 99.64847506009616
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 221
score: 99.74510005482456
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 221
score: 99.72508877840909
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 221
score: 99.72080775669643
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 221
score: 99.6995069159836
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 221
score: 99.69537823016827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 221
score: 99.69227013221153
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 221
score: 99.6863671875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 221
score: 99.67108154296875
patch: System . arraycopy ( first CaMeL Time , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 221
score: 99.65684772359914
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 221
score: 99.6484603881836
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 222
score: 99.74509193157327
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 222
score: 99.72507364241804
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 222
score: 99.72072056361607
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 222
score: 99.69937133789062
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 222
score: 99.6953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 222
score: 99.6862323467548
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 222
score: 99.67103794642857
patch: final Runge CaMeL Kutta CaMeL Step CaMeL Interpolator ( t 0 , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 222
score: 99.65675636574075
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 222
score: 99.64835357666016
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 223
score: 99.74505097987289
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 223
score: 99.72501627604167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; / } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 223
score: 99.72066885964912
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 223
score: 99.69933894230769
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 223
score: 99.69529407429245
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 223
score: 99.6922098795573
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 223
score: 99.6708984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 223
score: 99.65673828125
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 223
score: 99.64834594726562
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 224
score: 99.74502750318878
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 224
score: 99.72499302455357
patch: double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 224
score: 99.72064316063596
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 224
score: 99.69933081454919
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 224
score: 99.69525505514706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 1 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 224
score: 99.69218388310185
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 224
score: 99.686103515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 224
score: 99.6708984375
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 224
score: 99.6565177671371
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 224
score: 99.64833392518939
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 225
score: 99.74498110911885
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 225
score: 99.724921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; / } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 225
score: 99.72040847252156
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 225
score: 99.69921135179925
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 225
score: 99.69524147727273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 225
score: 99.69218388310185
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 225
score: 99.68600643382354
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 225
score: 99.67089029947917
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 225
score: 99.65645345052083
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ? scal CaMeL Absolute CaMeL Tolerance : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 226
score: 99.74496626420455
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 226
score: 99.72482353344299
patch: double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 226
score: 99.72037235383064
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 226
score: 99.69915315998135
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 226
score: 99.69482421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 226
score: 99.69210815429688
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 226
score: 99.6856640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 226
score: 99.67086029052734
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 226
score: 99.64828953598484
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 227
score: 99.72470528738839
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 227
score: 99.72020733173076
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 227
score: 99.69884633209746
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 227
score: 99.69476425438596
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 227
score: 99.69190357349537
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 227
score: 99.685654296875
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 227
score: 99.6708251953125
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 227
score: 99.65633138020833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 227
score: 99.64821861530173
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 228
score: 99.74488988415948
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 228
score: 99.7245384954637
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 228
score: 99.69877485795455
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 228
score: 99.69474449936224
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 228
score: 99.68560431985294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } final double scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 228
score: 99.67078399658203
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 228
score: 99.65631214488636
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 228
score: 99.64820498511905
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 229
score: 99.74488467261905
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 1 . length ] ;
rank: 229
score: 99.69873046875
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 229
score: 99.69471571180556
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = a [ 0 ] [ 0 ] ;
rank: 229
score: 99.6917255108173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 229
score: 99.64816376657197
patch: compute CaMeL Derivatives ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 230
score: 99.74448482325819
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 230
score: 99.72445518092105
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 230
score: 99.72013479764344
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 230
score: 99.69869791666666
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 230
score: 99.694599609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] [ 0 ] ;
rank: 230
score: 99.69165943287037
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 230
score: 99.68543198529412
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 230
score: 99.67069692460318
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 230
score: 99.65628255208334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 230
score: 99.64815521240234
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 231
score: 99.72437855113637
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 231
score: 99.72012271521227
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 231
score: 99.69455078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ) ;
rank: 231
score: 99.6915357940051
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 231
score: 99.685400390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 231
score: 99.670654296875
patch: System . arraycopy ( first CaMeL Time , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 231
score: 99.6560927568856
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 231
score: 99.64815398185483
patch: interpolator . store CaMeL Time ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 232
score: 99.74436732700893
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 232
score: 99.72436123206967
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 232
score: 99.71999595905173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 232
score: 99.6986559851695
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 232
score: 99.6944741303066
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 232
score: 99.6914361447704
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 232
score: 99.685302734375
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 232
score: 99.67056477864584
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 232
score: 99.65607389856558
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 233
score: 99.74424913194444
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 233
score: 99.72431291852679
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 233
score: 99.71993963068182
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 233
score: 99.69860617897727
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 233
score: 99.69419985911885
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 1 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 233
score: 99.69140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 233
score: 99.68524050245098
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 233
score: 99.67056274414062
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 233
score: 99.65605311239919
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) . copy ( ) . copy ( ) . copy ( ) . copy ( ) ) ;
rank: 233
score: 99.64810672883064
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 234
score: 99.74424391526442
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 234
score: 99.7241919732863
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 234
score: 99.71984197443182
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 234
score: 99.69848245287699
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 234
score: 99.69419232536765
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new float [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 234
score: 99.69139720775463
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 234
score: 99.6851806640625
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 234
score: 99.6705551147461
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 234
score: 99.65593782018442
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . clone ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . clone ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; }
rank: 234
score: 99.648095703125
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 235
score: 99.72397383432539
patch: if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 235
score: 99.69842529296875
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 235
score: 99.69412796585648
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 235
score: 99.69123444733796
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 235
score: 99.68517578125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ;
rank: 235
score: 99.6704810357863
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 235
score: 99.64807942708333
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 236
score: 99.74422373670212
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ } ;
rank: 236
score: 99.72374039989407
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 236
score: 99.71977443321079
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 236
score: 99.69841974431819
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 236
score: 99.69361255787037
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 236
score: 99.691005859375
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 236
score: 99.68517348345588
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 236
score: 99.67047750538794
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 236
score: 99.65566781850961
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance $NUMBER$ ; } else { scale = vec CaMeL Absolute CaMeL Tolerance $NUMBER$ ; } else { scale = vec CaMeL Absolute CaMeL Tolerance $NUMBER$ ; }
rank: 236
score: 99.64804997519842
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 237
score: 99.744169921875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 237
score: 99.71973483845339
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 237
score: 99.69838944692461
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 237
score: 99.69094613882211
patch: scale ( new double [ y 0 . length ] ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] ) ; } else { scale ( new double [ y 0 . length ] ) ; }
rank: 237
score: 99.68477647569445
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; ; }
rank: 237
score: 99.67045084635417
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 237
score: 99.65563742897727
patch: scale ; } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 237
score: 99.64799429086538
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 238
score: 99.743896484375
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ 0 ] = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 238
score: 99.723671875
patch: final Object [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 238
score: 99.71971893310547
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 238
score: 99.6983142289959
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 238
score: 99.69342510516827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = new double [ y 0 . length ] ;
rank: 238
score: 99.69085223858173
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 238
score: 99.68461818321079
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 238
score: 99.67038532838983
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 238
score: 99.65559303977273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 239
score: 99.74389204545454
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 239
score: 99.72364964978448
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 239
score: 99.69822535021552
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 239
score: 99.69341362847223
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 239
score: 99.6907958984375
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 239
score: 99.68459024234694
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 239
score: 99.670361328125
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 239
score: 99.65558058215726
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 239
score: 99.64793294270834
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 240
score: 99.74374825613839
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 240
score: 99.72364068800404
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 240
score: 99.7196632667824
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 240
score: 99.69815955528846
patch: System . arraycopy ( y 0 , 0 , y CaMeL Tmp , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 240
score: 99.69333120492789
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 240
score: 99.65542367788461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 240
score: 99.64779146634615
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 241
score: 99.74368489583334
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 241
score: 99.72362453654661
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 241
score: 99.71956994398585
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 241
score: 99.69796437230603
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 241
score: 99.69331868489583
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ y ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 241
score: 99.69070999710648
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 241
score: 99.68454159007354
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 241
score: 99.67023468017578
patch: h CaMeL New = estimate CaMeL Error ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 241
score: 99.65542084316037
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = System . current CaMeL Time CaMeL Millis ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 241
score: 99.6477568655303
patch: System . arraycopy ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 242
score: 99.72359970868644
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 242
score: 99.71955078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 242
score: 99.69791165865385
patch: final double sum = b 0 ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 242
score: 99.69330971927967
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 242
score: 99.69066443810097
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 242
score: 99.68413185586735
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 242
score: 99.65519634046052
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 242
score: 99.64766693115234
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 243
score: 99.72338053385417
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 243
score: 99.71943359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ( ( double [ ] ) scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 243
score: 99.69789341517857
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 243
score: 99.68409142127403
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 243
score: 99.64766438802083
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 244
score: 99.74354475635593
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 244
score: 99.72327473958333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 244
score: 99.71938390899123
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 244
score: 99.69774533991227
patch: System . arraycopy ( y 0 , 0 , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 244
score: 99.69313401442308
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new float [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 244
score: 99.69044846754808
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; while ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; }
rank: 244
score: 99.68407245710785
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 244
score: 99.67012049788136
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 244
score: 99.65516937756148
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) . copy ( ) ;
rank: 244
score: 99.6476629849138
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 245
score: 99.74334395559211
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 245
score: 99.7229736328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 245
score: 99.71937435963115
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 245
score: 99.69757634943181
patch: System . arraycopy ( y 0 , 0 , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 245
score: 99.69312905365567
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 1 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 245
score: 99.69040934244792
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 245
score: 99.6700439453125
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 245
score: 99.64761352539062
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 246
score: 99.74332386363636
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 246
score: 99.72294108072917
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 246
score: 99.71913364955357
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 ; }
rank: 246
score: 99.69742838541667
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 246
score: 99.69307277513587
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 246
score: 99.69037543402777
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 246
score: 99.68398030598958
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 246
score: 99.66990661621094
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 246
score: 99.65498570033482
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 246
score: 99.64759335275424
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 247
score: 99.74327947443182
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 247
score: 99.72284773284314
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 247
score: 99.718994140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ;
rank: 247
score: 99.69731069711538
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 247
score: 99.69294686153017
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 247
score: 99.69032505580357
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else scale = new double [ y 0 . length ] ;
rank: 247
score: 99.68381911057692
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 247
score: 99.66986083984375
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 247
score: 99.65493724385246
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , $NUMBER$ , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 247
score: 99.64754486083984
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 248
score: 99.74317278180804
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 248
score: 99.72284526209677
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 248
score: 99.71897786458334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 248
score: 99.69724036907327
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 248
score: 99.69288987379808
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 248
score: 99.69027650122548
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance >= null ) { scale = new double [ y 0 . length ] ;
rank: 248
score: 99.68380859375
patch: final double [ ] scale ; if ( ( vec CaMeL Absolute CaMeL Tolerance == null ) && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 248
score: 99.65478515625
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 248
score: 99.64752090186404
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 249
score: 99.74300426136364
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 249
score: 99.71896517478814
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 249
score: 99.69722806490384
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 249
score: 99.69286151960785
patch: if ( ! first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 249
score: 99.69015203737744
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 249
score: 99.683720703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; this . scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 249
score: 99.66975402832031
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 249
score: 99.65461136122882
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 249
score: 99.64747596153846
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 250
score: 99.74295987215909
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 250
score: 99.72262314618644
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 250
score: 99.71888388356855
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , null , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 250
score: 99.69708806818181
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 250
score: 99.69277719350961
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 250
score: 99.6901385967548
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 250
score: 99.6546043113426
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 250
score: 99.6474609375
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 251
score: 99.74286726409314
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 251
score: 99.72260112147177
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 251
score: 99.71886488970588
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a [ 0 ] [ 0 ] ;
rank: 251
score: 99.69701748206967
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 251
score: 99.69274450231481
patch: final double error = 0 ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 251
score: 99.68993236400463
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 251
score: 99.68353396045919
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 251
score: 99.66973152807203
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 251
score: 99.65459526909723
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 252
score: 99.74284518494898
patch: scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 252
score: 99.72253838900862
patch: else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 252
score: 99.71865609975961
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 - 0 ] ;
rank: 252
score: 99.69699928977273
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 252
score: 99.69268120659723
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; }
rank: 252
score: 99.68980994591347
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . $NUMBER$ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 252
score: 99.68353271484375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 252
score: 99.66968936011905
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 252
score: 99.65450951360887
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 252
score: 99.64739227294922
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 253
score: 99.74282602163461
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 253
score: 99.7185381043632
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ,
rank: 253
score: 99.69695225046642
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 253
score: 99.69265512319711
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 253
score: 99.6898073682598
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 253
score: 99.66964285714286
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 253
score: 99.65450499487704
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; }
rank: 253
score: 99.64730318509615
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 254
score: 99.74282474841101
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 254
score: 99.72246413934427
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 254
score: 99.71847218480603
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 254
score: 99.69688831676136
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 254
score: 99.69248812806373
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 254
score: 99.683095703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 254
score: 99.66963195800781
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 254
score: 99.65438406808036
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 254
score: 99.64722442626953
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 255
score: 99.74265834263393
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 255
score: 99.72241611168033
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 255
score: 99.71843551377118
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 255
score: 99.69682173295455
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 255
score: 99.69227749693627
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 255
score: 99.68974793632076
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 256
score: 99.7426329495614
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 256
score: 99.72228422619048
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 256
score: 99.718388671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = b 0 ; } else { scale = b 0 ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 256
score: 99.69671904151119
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 256
score: 99.69208487817797
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 256
score: 99.68955258969908
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 256
score: 99.68297400841347
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 256
score: 99.6695785522461
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 256
score: 99.654296875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 257
score: 99.74261944110577
patch: final double [ ] scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 257
score: 99.7222412109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 257
score: 99.71835275423729
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 257
score: 99.69661195816532
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 257
score: 99.68949833622685
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } /
rank: 257
score: 99.68295288085938
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 257
score: 99.66952514648438
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 257
score: 99.65416217672414
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 257
score: 99.64717955508475
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 258
score: 99.7425870028409
patch: final int [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 258
score: 99.71822342218137
patch: final double [ ] scale ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 258
score: 99.69660124231558
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 258
score: 99.69187644675925
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 258
score: 99.68272986778847
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 258
score: 99.66950988769531
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 258
score: 99.65412819602273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 258
score: 99.6471650094697
patch: interpolator . store CaMeL Time ( first CaMeL Time , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 259
score: 99.74255601415095
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 259
score: 99.722177734375
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 259
score: 99.71818938078704
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 259
score: 99.69657044491525
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 259
score: 99.69186970338983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 259
score: 99.6891030365566
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 259
score: 99.68265704719387
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 259
score: 99.66945072642544
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 259
score: 99.65408075051229
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 259
score: 99.64716339111328
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 260
score: 99.74241879111842
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 260
score: 99.7220959272541
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 260
score: 99.71816821808511
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 ; }
rank: 260
score: 99.6965087890625
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 260
score: 99.691787109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 260
score: 99.6890988817402
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ;
rank: 260
score: 99.68260761335785
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 260
score: 99.65401905980603
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 261
score: 99.74240770526961
patch: else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 261
score: 99.72209087171052
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 261
score: 99.71813757944915
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 261
score: 99.69644059806035
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 261
score: 99.69169184846699
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 261
score: 99.689052734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 261
score: 99.6825501685049
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 261
score: 99.66940209173387
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 261
score: 99.65380058913935
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 261
score: 99.64710582386364
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 262
score: 99.74237530048077
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ;
rank: 262
score: 99.72206721230158
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 262
score: 99.71807528409092
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 262
score: 99.69639109141791
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 262
score: 99.69162547831633
patch: final double error = 0 ; if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ;
rank: 262
score: 99.68885869565217
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 262
score: 99.68251389723558
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 262
score: 99.65375893802967
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } }
rank: 262
score: 99.64705403645833
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 263
score: 99.74236940870098
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 263
score: 99.7218369306144
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 263
score: 99.717978515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 263
score: 99.69636656746032
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 263
score: 99.6914924172794
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 263
score: 99.68885216346153
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 263
score: 99.6824951171875
patch: float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 263
score: 99.66932678222656
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 263
score: 99.65374966325432
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 263
score: 99.64703924005681
patch: compute CaMeL Derivatives ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 264
score: 99.74233312774123
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 264
score: 99.72183469742063
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 264
score: 99.71779563210227
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b 0 ;
rank: 264
score: 99.69636535644531
patch: System . arraycopy ( y 0 , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 264
score: 99.69137961647728
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 264
score: 99.6888266509434
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 264
score: 99.68247612847222
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 264
score: 99.669287109375
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 264
score: 99.65374755859375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ;
rank: 264
score: 99.64702690972223
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 265
score: 99.742314453125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 . length ] ;
rank: 265
score: 99.72172771516394
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 265
score: 99.71776404747597
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 265
score: 99.6962158203125
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 265
score: 99.69133391203704
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 265
score: 99.68880859375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 265
score: 99.68233548677884
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 265
score: 99.66926820816532
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 265
score: 99.6470244436553
patch: System . arraycopy ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 266
score: 99.74221319901316
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 266
score: 99.72171336206897
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 266
score: 99.7177313442888
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 266
score: 99.69614109848484
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 266
score: 99.69118333899456
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 266
score: 99.68217677696079
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale += vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 266
score: 99.66919759114583
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 266
score: 99.65371817129629
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 266
score: 99.64700224905303
patch: compute CaMeL Derivatives ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 267
score: 99.74217006138393
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 267
score: 99.72156832510964
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 267
score: 99.69599112817797
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 267
score: 99.69115750294812
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 267
score: 99.6883425245098
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 267
score: 99.682138671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } }
rank: 267
score: 99.6691185735887
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 267
score: 99.65355603448276
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 267
score: 99.64687647964016
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 268
score: 99.7215516137295
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 268
score: 99.71771550582628
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 268
score: 99.69592467350746
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 268
score: 99.6910561615566
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 268
score: 99.68821433738425
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 268
score: 99.68213848039215
patch: final double [ ] scale ; if ( ( vec CaMeL Absolute CaMeL Tolerance == null ) && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 268
score: 99.6691162109375
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 268
score: 99.65349786931819
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 268
score: 99.64677114335318
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 269
score: 99.74212753563596
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 269
score: 99.72151692708333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 269
score: 99.71755826271186
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 269
score: 99.69590594951923
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 269
score: 99.69103773584905
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 1 , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 269
score: 99.68819625289352
patch: final double [ ] scale ; try { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 269
score: 99.68185659555289
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 269
score: 99.6690673828125
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 269
score: 99.65341291756465
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 269
score: 99.6467514038086
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 270
score: 99.7421251662234
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 270
score: 99.72145623675847
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 270
score: 99.7175525483631
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 270
score: 99.69573343211206
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 270
score: 99.69093639445755
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; try { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 270
score: 99.68182373046875
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 270
score: 99.6690444946289
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 270
score: 99.65313720703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 270
score: 99.6467499314693
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 271
score: 99.74207163665254
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 271
score: 99.72143998579546
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = Math . max ( scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 271
score: 99.71749562230603
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ a 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 271
score: 99.69564773787313
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 271
score: 99.69093371975806
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 271
score: 99.68765625
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 271
score: 99.68160076530613
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 271
score: 99.66902923583984
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 271
score: 99.6531005859375
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 272
score: 99.7420594262295
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 272
score: 99.72140299479166
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 272
score: 99.69564615885416
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 272
score: 99.69064015355603
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { first CaMeL Time = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 272
score: 99.68753756009616
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 272
score: 99.68130258413461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 272
score: 99.66888020833333
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 272
score: 99.65306042086694
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 272
score: 99.64655412946429
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 273
score: 99.74192334784836
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 273
score: 99.72127803679436
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 273
score: 99.71733566810344
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 273
score: 99.69563802083333
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 273
score: 99.69044712611607
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 273
score: 99.68737553615196
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; while ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 273
score: 99.68126723345588
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 273
score: 99.66886901855469
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 273
score: 99.65305616034836
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 273
score: 99.64655303955078
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 274
score: 99.74191623263889
patch: scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 274
score: 99.71727611400463
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 274
score: 99.69559795673077
patch: final double sum = b 0 ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 274
score: 99.690400390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 274
score: 99.68735914963942
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 274
score: 99.68099290497449
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 274
score: 99.66886039402173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 274
score: 99.65296223958333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , null , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 274
score: 99.64651925223214
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 275
score: 99.74182549838362
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 275
score: 99.72126374421296
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 275
score: 99.71721662554825
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 275
score: 99.6955829326923
patch: System . arraycopy ( y 0 , 0 , y CaMeL Tmp , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 275
score: 99.69037334735577
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 275
score: 99.6873191550926
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 275
score: 99.68097297512755
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 275
score: 99.66885579427084
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 275
score: 99.65294989224138
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 275
score: 99.64650092690678
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 276
score: 99.74181463068182
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 276
score: 99.7212634477459
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 276
score: 99.71715436662946
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 . length ; }
rank: 276
score: 99.69556826636905
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 276
score: 99.690283203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 276
score: 99.68731066645408
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 276
score: 99.68080767463235
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 276
score: 99.6687744140625
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 276
score: 99.65293782552084
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? scal CaMeL Absolute CaMeL Tolerance : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 276
score: 99.64646911621094
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 277
score: 99.7414971713362
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 277
score: 99.72121542008196
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 277
score: 99.7171480948465
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 277
score: 99.69554570895522
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 277
score: 99.69021371694711
patch: final double [ ] scale = new double [ y 0 . length ] [ 0 ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 277
score: 99.68729341947116
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 277
score: 99.6807861328125
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 277
score: 99.66876983642578
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 277
score: 99.65283203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ;
rank: 278
score: 99.741484375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ;
rank: 278
score: 99.72114175052967
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 278
score: 99.71694841056035
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 278
score: 99.69552176339286
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 278
score: 99.69013843201755
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ) ; first CaMeL Time = false ;
rank: 278
score: 99.68727394386575
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 278
score: 99.6805928548177
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 278
score: 99.66875457763672
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 278
score: 99.65280052923387
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 278
score: 99.64638671875
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 279
score: 99.74141023596938
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 279
score: 99.71694711538461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 279
score: 99.69541352370689
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 279
score: 99.690107421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 279
score: 99.68727394386575
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 279
score: 99.6805752840909
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; ;
rank: 279
score: 99.668701171875
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 279
score: 99.65271996670081
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 279
score: 99.64632662259615
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 280
score: 99.74139873798077
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ; } } else { scale = new double [ y 0 . length ] ;
rank: 280
score: 99.72109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 280
score: 99.7169339364035
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 280
score: 99.69539513221154
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 280
score: 99.68994954427083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { first CaMeL Time = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 280
score: 99.68725125294812
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 280
score: 99.68056640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 280
score: 99.66859436035156
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 280
score: 99.64618210565476
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 281
score: 99.74134172712054
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 281
score: 99.72104936079545
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 281
score: 99.71691273834746
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 281
score: 99.69538879394531
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 281
score: 99.6899181547619
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 281
score: 99.68722768930289
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { vec CaMeL Absolute CaMeL Tolerance = null ;
rank: 281
score: 99.68054448341837
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 281
score: 99.66853412828948
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 281
score: 99.64616394042969
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 282
score: 99.741298828125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = null ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 282
score: 99.7169034090909
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 282
score: 99.6952704067888
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 282
score: 99.6898193359375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 282
score: 99.68721440153301
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 282
score: 99.68037683823529
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 282
score: 99.66851806640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 282
score: 99.65267452116936
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 283
score: 99.74116734095982
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 283
score: 99.72096535011575
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 283
score: 99.71681722005208
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = a 0 . length ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 283
score: 99.68978478773585
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 283
score: 99.68716119260205
patch: final double [ ] scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 283
score: 99.65267193903688
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 284
score: 99.74085003396739
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 284
score: 99.72095514112904
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 284
score: 99.7167724609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 284
score: 99.69526599702381
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 284
score: 99.6871337890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ;
rank: 284
score: 99.66846478174604
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 284
score: 99.65265823622882
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 284
score: 99.64608623798077
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 285
score: 99.74078369140625
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 285
score: 99.72093098958334
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 285
score: 99.7167547817888
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 285
score: 99.69522986778846
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 285
score: 99.689541015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] [ ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 285
score: 99.68712660845588
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 285
score: 99.68032769097222
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 285
score: 99.66845703125
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 285
score: 99.65264301915323
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 285
score: 99.64608134920636
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 286
score: 99.74066840277777
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 1 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 286
score: 99.7209236391129
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 286
score: 99.7166748046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } }
rank: 286
score: 99.69506072998047
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 286
score: 99.6895201439951
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 286
score: 99.6802734375
patch: if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 286
score: 99.66844940185547
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 286
score: 99.65262140012256
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 286
score: 99.64600372314453
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 287
score: 99.74061414930556
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 287
score: 99.72087122182377
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 287
score: 99.69501370102611
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 287
score: 99.68927001953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ;
rank: 287
score: 99.68703884548611
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 287
score: 99.68026546556122
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ; { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 287
score: 99.66839402721774
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 287
score: 99.65260472790948
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 287
score: 99.64598858173076
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 288
score: 99.74045325969827
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 288
score: 99.72077287946429
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 288
score: 99.71659128289474
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages ] [ ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 288
score: 99.69483235677083
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 288
score: 99.6892620584239
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = new double [ y 0 . length ] [ 0 ] ;
rank: 288
score: 99.686728515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 288
score: 99.66836313100961
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 288
score: 99.65260472790948
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( null , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( null , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( null , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 289
score: 99.7403916181144
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ y 0 . length ] = scal CaMeL Absolute CaMeL Tolerance ; } else { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 289
score: 99.720732421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 289
score: 99.71659128289474
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = b [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 289
score: 99.69473758820564
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 289
score: 99.68925258091518
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 289
score: 99.68671277104592
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 289
score: 99.68018517127403
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 289
score: 99.66825358072917
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 289
score: 99.65252896012932
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 ; }
rank: 290
score: 99.74038856907895
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 290
score: 99.72072975852272
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 290
score: 99.7164467865566
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 290
score: 99.69469303871269
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 290
score: 99.68923291973039
patch: final if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 290
score: 99.68664098668981
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } ( ( double [ ] ) scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 290
score: 99.66822076612904
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 290
score: 99.65243966238839
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 290
score: 99.64575609110169
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 291
score: 99.74038529829545
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 291
score: 99.69468587239584
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 291
score: 99.68919372558594
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ;
rank: 291
score: 99.68661917892157
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 291
score: 99.66819605334052
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 291
score: 99.65236030190678
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 291
score: 99.64574819711538
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 292
score: 99.74037642045455
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 292
score: 99.72059906506148
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 292
score: 99.71636652542372
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 292
score: 99.69459885817308
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 292
score: 99.68914325420673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 292
score: 99.68653301164215
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 292
score: 99.6795681423611
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scale ; }
rank: 292
score: 99.6681640625
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 292
score: 99.65203226023706
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 293
score: 99.74033657340117
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ;
rank: 293
score: 99.7205810546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 293
score: 99.71631716008773
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = a 0 . length ;
rank: 293
score: 99.69456845238095
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 293
score: 99.68912760416667
patch: final double error = 0 ; if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 293
score: 99.68634152879902
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 293
score: 99.679541015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 293
score: 99.66815948486328
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 293
score: 99.65195952868852
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 293
score: 99.64568328857422
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 294
score: 99.74031147203948
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 294
score: 99.72057291666667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 294
score: 99.71630859375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 294
score: 99.69450973252118
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 294
score: 99.68630859375
patch: final double [ ] scale = new double [ y 0 . length ] ; final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 294
score: 99.66805594308036
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 294
score: 99.6519263482863
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 294
score: 99.64568058894231
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 295
score: 99.74027193509616
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = new double [ y 0 . length ] ; } } else { scale = new double [ y 0 . length ] ; }
rank: 295
score: 99.72055951286765
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 295
score: 99.71629901960785
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a [ 0 . length ] ; }
rank: 295
score: 99.69446364182693
patch: System . arraycopy ( y 0 , 0 , y CaMeL Tmp , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 295
score: 99.68911224941037
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 295
score: 99.67944878472223
patch: try { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 295
score: 99.6679916381836
patch: h CaMeL New = estimate CaMeL Error ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 295
score: 99.65190873579546
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] ) ; }
rank: 295
score: 99.64557647705078
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 296
score: 99.72054036458333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 296
score: 99.71629083806818
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 296
score: 99.69443359375
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 296
score: 99.6890869140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 296
score: 99.68624312789352
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( scale == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 296
score: 99.6793924967448
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 296
score: 99.66797637939453
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 296
score: 99.65190686677632
patch: } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 296
score: 99.64552331349206
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 297
score: 99.73999927662037
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 297
score: 99.72051791487068
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 297
score: 99.71628376588983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 297
score: 99.69442894345238
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 297
score: 99.68614047181373
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 297
score: 99.67936197916667
patch: scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 297
score: 99.65186334425404
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 297
score: 99.64547729492188
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 298
score: 99.7399432842548
patch: if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 298
score: 99.720517578125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 298
score: 99.71626209077381
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 298
score: 99.69419642857143
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 298
score: 99.68892415364583
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else {
rank: 298
score: 99.68613462094908
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 298
score: 99.67918925382654
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 298
score: 99.66785249255952
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 298
score: 99.65177671370968
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ vec CaMeL Absolute CaMeL Tolerance ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ vec CaMeL Absolute CaMeL Tolerance ] ;
rank: 298
score: 99.64546130952381
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 299
score: 99.73986395474138
patch: final double [ ] scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 299
score: 99.72051595052083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 299
score: 99.71621436403508
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 299
score: 99.694091796875
patch: System . arraycopy ( y 0 , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 299
score: 99.68880208333333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 299
score: 99.6858969634434
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 299
score: 99.67890027104592
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 299
score: 99.6678466796875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 299
score: 99.65168563179348
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 300
score: 99.73984829215117
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 300
score: 99.72047776442308
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 300
score: 99.6940703810307
patch: System . arraycopy ( y 0 , 0 , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 300
score: 99.68878979952831
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 300
score: 99.6858379657452
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 300
score: 99.67889030612245
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 300
score: 99.66783905029297
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 300
score: 99.65165070564517
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 300
score: 99.6452132936508
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 301
score: 99.72043678977273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 301
score: 99.69398007150424
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 301
score: 99.68878058667453
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = 0 . 0 ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 301
score: 99.68564860026042
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 301
score: 99.67884239783653
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale . scale ( scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 301
score: 99.66777012711864
patch: final Runge CaMeL Kutta CaMeL Step CaMeL Interpolator ( t 0 , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 301
score: 99.651611328125
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 301
score: 99.64514923095703
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 302
score: 99.72038664641204
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 302
score: 99.71597975127551
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 302
score: 99.69397536057693
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 302
score: 99.688720703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 302
score: 99.68562825520833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 302
score: 99.67880859375
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 302
score: 99.66761997767857
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 302
score: 99.65160193810097
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ;
rank: 302
score: 99.64510967548077
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 303
score: 99.7396240234375
patch: if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 303
score: 99.72036381091101
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 303
score: 99.71592975484914
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 . length ; }
rank: 303
score: 99.6939697265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 303
score: 99.68848528180804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 303
score: 99.68562346813725
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 303
score: 99.6787890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 303
score: 99.66752697172619
patch: System . arraycopy ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 303
score: 99.6515380859375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 303
score: 99.6449486517137
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 304
score: 99.73946844362744
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y $NUMBER$ . length ] ;
rank: 304
score: 99.72034112338362
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 304
score: 99.71590169270833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = b [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 304
score: 99.69393184267241
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 304
score: 99.68841796875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 304
score: 99.67868221507354
patch: try { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 304
score: 99.66740417480469
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 304
score: 99.65147298177084
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . clone ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . clone ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ;
rank: 305
score: 99.73940344024123
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 305
score: 99.7202976032839
patch: final Object [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 305
score: 99.71582873114224
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; }
rank: 305
score: 99.69388834635417
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 305
score: 99.688408203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 305
score: 99.68534794560185
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 305
score: 99.67867337740384
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 305
score: 99.66737196180556
patch: System . arraycopy ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 305
score: 99.65138319672131
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 306
score: 99.73929537259616
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 306
score: 99.72029143688725
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 306
score: 99.715810546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 306
score: 99.69388020833334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 306
score: 99.68833571213942
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 306
score: 99.68532081886575
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null }
rank: 306
score: 99.67853515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; final scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 306
score: 99.6673583984375
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 306
score: 99.6513671875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 307
score: 99.73929466391509
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ;
rank: 307
score: 99.72020709325396
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 307
score: 99.71580895712209
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = new double [ y 0 . length ] ;
rank: 307
score: 99.69370814732143
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 307
score: 99.688076171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 307
score: 99.68524848090277
patch: final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 307
score: 99.67841796875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 307
score: 99.65131392045454
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 307
score: 99.64482250548245
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 308
score: 99.739189453125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 308
score: 99.71563605542453
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 308
score: 99.69361514136905
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 308
score: 99.68793845663265
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 308
score: 99.6851337139423
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale += vec CaMeL Absolute CaMeL Tolerance ;
rank: 308
score: 99.6783546241554
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 308
score: 99.66717529296875
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 308
score: 99.65128300107759
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 308
score: 99.64481801835318
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 309
score: 99.73901845894608
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 309
score: 99.72016759072581
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 309
score: 99.71558159722223
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = new double [ y 0 . length ] ;
rank: 309
score: 99.69356536865234
patch: h CaMeL New = initialize CaMeL Step ( equations 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 309
score: 99.68791555851064
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 309
score: 99.6850390625
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 309
score: 99.67834223533163
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 309
score: 99.66716974431819
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 309
score: 99.65121895926339
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 309
score: 99.64475661057692
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 310
score: 99.73894457547169
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 310
score: 99.72015881147541
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 310
score: 99.7155439268868
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ vec CaMeL Absolute CaMeL Tolerance ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 310
score: 99.69352476058468
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 310
score: 99.6878515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 310
score: 99.6850077311198
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; while ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 310
score: 99.67832594651442
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 310
score: 99.66712188720703
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 310
score: 99.65113092237904
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 311
score: 99.73883928571429
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 311
score: 99.72013346354167
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 311
score: 99.71553132971938
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ;
rank: 311
score: 99.69349784281717
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 311
score: 99.6877763856132
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 311
score: 99.68496285232843
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 311
score: 99.67829924938725
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 311
score: 99.66702270507812
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 311
score: 99.65111490885417
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 312
score: 99.73867910879629
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 312
score: 99.72013346354167
patch: if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 312
score: 99.71547407670455
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 312
score: 99.69344600554436
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 312
score: 99.68774874705188
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 312
score: 99.67811936598558
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 312
score: 99.66693522135417
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 312
score: 99.65110620959052
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 313
score: 99.73864293981481
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 313
score: 99.7201320842161
patch: double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 313
score: 99.71544392903645
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 313
score: 99.69342912946429
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 313
score: 99.68765419407895
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 313
score: 99.68476378242924
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . $NUMBER$ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 313
score: 99.67790377869898
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 313
score: 99.6509497857863
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 313
score: 99.64462228548729
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 314
score: 99.73860677083333
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 314
score: 99.720126953125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 314
score: 99.71537562779018
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 314
score: 99.69337487599206
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 314
score: 99.68765024038461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) {
rank: 314
score: 99.6846373314951
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 314
score: 99.67772498497597
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 314
score: 99.66690005896227
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 314
score: 99.65085975796569
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 314
score: 99.64461263020833
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 315
score: 99.73856026785714
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 315
score: 99.72010277920081
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 315
score: 99.71536820023148
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] + y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 315
score: 99.69329833984375
patch: h CaMeL New = initialize CaMeL Step ( equations 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 315
score: 99.68762428977273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 315
score: 99.67763264973958
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 315
score: 99.6668701171875
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 315
score: 99.64459134615385
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 316
score: 99.73853515625
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 316
score: 99.72008883568549
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 316
score: 99.69328360721983
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 316
score: 99.68760329026442
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 316
score: 99.68450458233173
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 316
score: 99.677626953125
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 316
score: 99.66685485839844
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 316
score: 99.65077039930556
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 317
score: 99.72005733366936
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 317
score: 99.71531080163044
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 317
score: 99.69328308105469
patch: final double sum = b 0 . length + vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 317
score: 99.68754359654018
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 317
score: 99.68446180555556
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; while ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 317
score: 99.67758576766305
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 317
score: 99.66680145263672
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 317
score: 99.65075883709017
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 317
score: 99.64450073242188
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 318
score: 99.73816789899554
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 318
score: 99.72001795614919
patch: final Object [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 318
score: 99.7153087797619
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 318
score: 99.68752569901316
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Tmp [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 318
score: 99.68445841471355
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 318
score: 99.67734183517157
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 318
score: 99.6667920722336
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 318
score: 99.65073423032408
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 318
score: 99.64445495605469
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 319
score: 99.7379214638158
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 319
score: 99.7200127963362
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 319
score: 99.71530539772728
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 319
score: 99.69292712602459
patch: System . arraycopy ( y 0 , 0 , y CaMeL Tmp , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 319
score: 99.68744472287736
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 319
score: 99.68437292220744
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 319
score: 99.67725694444445
patch: final double [ ] scale ; if ( this . vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 319
score: 99.66678619384766
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 319
score: 99.65056966145833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 319
score: 99.64443359375
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 320
score: 99.7379210425205
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 320
score: 99.71996282762096
patch: if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 320
score: 99.7152734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 320
score: 99.69287109375
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 320
score: 99.687421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ; }
rank: 320
score: 99.684296875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 320
score: 99.67724609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 320
score: 99.66677856445312
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 320
score: 99.65056903545673
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 320
score: 99.64442443847656
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 321
score: 99.7379176363032
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 321
score: 99.71993963068182
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = Math . min ( scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 321
score: 99.71518640350877
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 321
score: 99.69285481770834
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 321
score: 99.68738664899554
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( first CaMeL Time ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 321
score: 99.68419164540816
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 321
score: 99.67719626913265
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 321
score: 99.65053470799181
patch: final double [ ] scale = ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 322
score: 99.73790352299528
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 322
score: 99.71517783717105
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 322
score: 99.69279711174242
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 322
score: 99.6873779296875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 322
score: 99.6771709735577
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale ( vec CaMeL Absolute CaMeL Tolerance ;
rank: 322
score: 99.66662804555085
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 322
score: 99.65052897135416
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 322
score: 99.64436340332031
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 323
score: 99.73782113882211
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 323
score: 99.7197998046875
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 323
score: 99.71513671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = b 0 ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 323
score: 99.69278583829364
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 323
score: 99.68735591700819
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 1 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 323
score: 99.68407298900463
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; int scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 323
score: 99.6771599264706
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ;
rank: 323
score: 99.6666259765625
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 323
score: 99.65045915570175
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 323
score: 99.64431607521186
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 324
score: 99.73777521306818
patch: final double [ ] scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 324
score: 99.71973443800404
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 324
score: 99.71501754502118
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 324
score: 99.69277848868535
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 324
score: 99.68731478987068
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 324
score: 99.6840350811298
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance <= null ) { scale = new double [ y 0 . length ] ;
rank: 324
score: 99.67703012319711
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 324
score: 99.66660970052084
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 324
score: 99.65036446707589
patch: scale = scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 324
score: 99.64423370361328
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 325
score: 99.73766668911638
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . scale ( scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 325
score: 99.7197265625
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 325
score: 99.714892578125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 325
score: 99.69276871219758
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , forward , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 325
score: 99.68728111530173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 325
score: 99.683994140625
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 325
score: 99.67694561298077
patch: final double [ ] scale ; if ( ( vec CaMeL Absolute CaMeL Tolerance == null ) && ( vec CaMeL Absolute CaMeL Tolerance == null ) ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 325
score: 99.66654528601696
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 325
score: 99.65035807291666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ; }
rank: 326
score: 99.73751698369566
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 326
score: 99.71956380208333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ; }
rank: 326
score: 99.71488060141509
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 326
score: 99.69273274739584
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 326
score: 99.68385597511575
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 326
score: 99.67692057291667
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 326
score: 99.66653645833334
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 326
score: 99.65032762096774
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 327
score: 99.7374737079327
patch: final int [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 327
score: 99.71956380208333
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 327
score: 99.71481849407327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 327
score: 99.69261955492425
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 327
score: 99.68380172164352
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 327
score: 99.67691744290866
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 327
score: 99.66651916503906
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 327
score: 99.65025983537946
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 327
score: 99.64419320913461
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 328
score: 99.73742897727273
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 328
score: 99.71937662760416
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 328
score: 99.71468098958333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = b [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 328
score: 99.69256310096154
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 328
score: 99.68716543692129
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 328
score: 99.6837745949074
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) } }
rank: 328
score: 99.67685546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 328
score: 99.65020216557018
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? vec CaMeL Absolute CaMeL Tolerance : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 329
score: 99.73739858774039
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } else { scale = new double [ y 1 . length ] ;
rank: 329
score: 99.71937435963115
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 329
score: 99.6925108862705
patch: System . arraycopy ( y 0 , 0 , y CaMeL Tmp , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 329
score: 99.68709463443396
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 329
score: 99.68373046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 329
score: 99.67680763711735
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 329
score: 99.66650390625
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 329
score: 99.65018586189517
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 329
score: 99.6441650390625
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 330
score: 99.7373798076923
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 330
score: 99.71935641381049
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 330
score: 99.7146318543632
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 330
score: 99.6925048828125
patch: final double sum = b 0 . length + vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 330
score: 99.68709019252232
patch: final double error = 0 ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 330
score: 99.68366350446429
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 330
score: 99.67667330228366
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 330
score: 99.66650390625
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 330
score: 99.65018372616525
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 ; }
rank: 330
score: 99.6441650390625
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 331
score: 99.73733618951613
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 331
score: 99.71932394462719
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = Math . max ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 331
score: 99.71462576729911
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 331
score: 99.69245042067308
patch: final double sum = b 0 ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 331
score: 99.68698299632354
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; try { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 331
score: 99.683603515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 331
score: 99.66645665322581
patch: interpolator . store CaMeL Time ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 331
score: 99.65018015894397
patch: scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 331
score: 99.64416110131049
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 332
score: 99.7372338079637
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 332
score: 99.71931640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 332
score: 99.71461123511905
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 332
score: 99.6924072265625
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 332
score: 99.68680695564517
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 332
score: 99.6834347747093
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 332
score: 99.67660757211539
patch: try { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 332
score: 99.66645050048828
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 332
score: 99.64412172379032
patch: interpolator . store CaMeL Time ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 333
score: 99.73719413325472
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 333
score: 99.71922940340909
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 333
score: 99.6924064390121
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 333
score: 99.68677775065105
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 333
score: 99.68333152488425
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 333
score: 99.6765606219952
patch: final double [ ] scale ; if ( ( vec CaMeL Absolute CaMeL Tolerance == null ) || ( vec CaMeL Absolute CaMeL Tolerance == null ) ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 333
score: 99.66632952008929
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 333
score: 99.65015435987904
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 334
score: 99.73711480034723
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 334
score: 99.71920572916666
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 334
score: 99.71457435344827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 334
score: 99.69233630952381
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 334
score: 99.68333082932692
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 334
score: 99.67625075120192
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scale ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 334
score: 99.66630045572917
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 334
score: 99.65010579427083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . length ; }
rank: 334
score: 99.64410090042372
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 335
score: 99.73710414341518
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 335
score: 99.7191097861842
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 335
score: 99.71452113560268
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 335
score: 99.69231722248135
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 335
score: 99.686708984375
patch: if ( ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 335
score: 99.68331204927884
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance , } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 335
score: 99.67622884114583
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 335
score: 99.66627502441406
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 335
score: 99.64995747227823
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 335
score: 99.64409993489583
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 336
score: 99.73703056469299
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 336
score: 99.71910220286885
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 336
score: 99.71450966282895
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 336
score: 99.6921615600586
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 336
score: 99.68330078125
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 336
score: 99.67612711588542
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 336
score: 99.66624348958334
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 336
score: 99.64994303385417
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 336
score: 99.64409809727823
patch: interpolator . store CaMeL Time ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 337
score: 99.73700340757979
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y . length ] ;
rank: 337
score: 99.71909877232143
patch: else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 337
score: 99.71449751420455
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b 0 . length ;
rank: 337
score: 99.69215494791666
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 337
score: 99.68651404747597
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , true ) ;
rank: 337
score: 99.68323771158855
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 337
score: 99.676025390625
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 337
score: 99.6662353515625
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 337
score: 99.64970179966518
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 337
score: 99.64405048076924
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 338
score: 99.73692975725446
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 338
score: 99.71447504783163
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 338
score: 99.69208487817797
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 338
score: 99.68647556678921
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = 0 ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 338
score: 99.683232421875
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 338
score: 99.67596435546875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 338
score: 99.64969075520834
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . length ; }
rank: 338
score: 99.64399646577381
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 339
score: 99.73690206962719
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 339
score: 99.71907018442623
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 339
score: 99.71445121017157
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 339
score: 99.6919937133789
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 339
score: 99.686474609375
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 339
score: 99.6758111447704
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 339
score: 99.66621251260081
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 339
score: 99.64395904541016
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 340
score: 99.73677201704545
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 340
score: 99.71905924479167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 340
score: 99.71443684895833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 340
score: 99.691943359375
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 340
score: 99.68644468245968
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 340
score: 99.68315972222223
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 340
score: 99.67579064002403
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 340
score: 99.66613188244048
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 340
score: 99.64961882560483
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 340
score: 99.64392852783203
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 341
score: 99.73676853553921
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 341
score: 99.71899013831967
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 341
score: 99.7144275102459
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 341
score: 99.69181823730469
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 341
score: 99.68644205729167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else {
rank: 341
score: 99.68313419117646
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 341
score: 99.67576246995192
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 341
score: 99.66611800655242
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 341
score: 99.64958215932377
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 341
score: 99.64392483618951
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 342
score: 99.73675847457628
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 342
score: 99.718896484375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ;
rank: 342
score: 99.71441761363636
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = a 0 ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 342
score: 99.69178508890086
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 342
score: 99.68642241379311
patch: final double error = 0 ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 342
score: 99.68311682412791
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 342
score: 99.66610717773438
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 342
score: 99.64953399122807
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 343
score: 99.73674538352273
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 343
score: 99.71436321924604
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 343
score: 99.69177911931818
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 343
score: 99.6829714307598
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; }
rank: 343
score: 99.6756640625
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 343
score: 99.66609312996032
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 343
score: 99.64952741350446
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 343
score: 99.64382595486111
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 344
score: 99.73673189603366
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 344
score: 99.7188720703125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 344
score: 99.7142666903409
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 344
score: 99.69173420009328
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 344
score: 99.68632175611413
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] [ 0 ] ;
rank: 344
score: 99.68278341090425
patch: final double [ ] scale = new double [ y 0 . length ] ; int scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 344
score: 99.67555588942308
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 344
score: 99.6494885460805
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( null , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( null , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( null , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 344
score: 99.64370031524123
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 345
score: 99.73671875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 345
score: 99.71883418642241
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 345
score: 99.7142558195153
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 345
score: 99.6915283203125
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 345
score: 99.68622295673077
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 345
score: 99.68274377893519
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 345
score: 99.6755078125
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 345
score: 99.66605564805327
patch: compute CaMeL Derivatives ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 345
score: 99.64945091391509
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 345
score: 99.64368438720703
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 346
score: 99.73670679209184
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = new double [ y 1 . length ] ;
rank: 346
score: 99.71881620762711
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ;
rank: 346
score: 99.71417356004902
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ,
rank: 346
score: 99.69135199652777
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 346
score: 99.6861102764423
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 346
score: 99.68265548406863
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; }
rank: 346
score: 99.67550223214286
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = scale ; }
rank: 346
score: 99.666015625
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 346
score: 99.64944893973214
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , null , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 346
score: 99.64363861083984
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 347
score: 99.73660043569711
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 347
score: 99.7187928316886
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 347
score: 99.71414131030701
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 347
score: 99.69132620389344
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 347
score: 99.68603515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h = vec CaMeL Absolute CaMeL Tolerance ;
rank: 347
score: 99.6826171875
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 347
score: 99.67549402573529
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 347
score: 99.66600799560547
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 347
score: 99.64942233845339
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 347
score: 99.64363045528017
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 348
score: 99.73657687205188
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new Double ( scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 348
score: 99.71876575100806
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; / } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 348
score: 99.71412836119185
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 348
score: 99.69131610576923
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 348
score: 99.685986328125
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = new double [ y 0 . length ] ;
rank: 348
score: 99.68250868055556
patch: final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 348
score: 99.6754619891827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 348
score: 99.6659927368164
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 348
score: 99.64940605788935
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 348
score: 99.6436279296875
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 349
score: 99.73656322337963
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 349
score: 99.71868596311475
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 349
score: 99.71409009850544
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b 0 . length ;
rank: 349
score: 99.69129866260593
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 349
score: 99.68591538915095
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ;
rank: 349
score: 99.6824951171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 349
score: 99.67544921875
patch: } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 349
score: 99.66596984863281
patch: h CaMeL New = estimate CaMeL Error ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 349
score: 99.64940564385776
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 ; }
rank: 349
score: 99.64359606726696
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 350
score: 99.73649088541667
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y . length ] ;
rank: 350
score: 99.718603515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 350
score: 99.71399132680085
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] + y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 350
score: 99.69127155172414
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 350
score: 99.685849609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 350
score: 99.682373046875
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 350
score: 99.67537109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scale [ y 0 . length ] ;
rank: 350
score: 99.66595262096774
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 350
score: 99.6493395789195
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 351
score: 99.73646988407258
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 351
score: 99.71389723557692
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 351
score: 99.6912490068856
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 351
score: 99.68581627155173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 351
score: 99.68225549768519
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance [ null ] == null ) { scale = new double [ y 0 . length ] ;
rank: 351
score: 99.6753680889423
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; }
rank: 351
score: 99.64919607979911
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 352
score: 99.71858723958333
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 352
score: 99.71388293850806
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 352
score: 99.69122798859127
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 352
score: 99.68567425271739
patch: final double error = 0 ; if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 352
score: 99.682001953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 352
score: 99.6753553025266
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( scale == null ) { scale = new double [ y 0 . length ] ;
rank: 352
score: 99.66586100260416
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 352
score: 99.64917931189903
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 352
score: 99.64357043850806
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 353
score: 99.73641263521634
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 353
score: 99.71858723958333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 353
score: 99.7138671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations ) ;
rank: 353
score: 99.69113251657197
patch: System . arraycopy ( y 0 , 0 , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 353
score: 99.68558843085107
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else {
rank: 353
score: 99.6819559733073
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 353
score: 99.67530254289215
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale . scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 353
score: 99.66581726074219
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 353
score: 99.64917805989583
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 354
score: 99.73638325352823
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 354
score: 99.7185794890873
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 354
score: 99.71377268145162
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 354
score: 99.6855801669034
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 354
score: 99.68185763888889
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ;
rank: 354
score: 99.67528300382654
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 354
score: 99.6658155097336
patch: compute CaMeL Derivatives ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 354
score: 99.64913736979166
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 354
score: 99.64353785021552
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 355
score: 99.73631940569196
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 355
score: 99.71852587090164
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 355
score: 99.6909697561553
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 355
score: 99.68552943638393
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 355
score: 99.68179381127452
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 355
score: 99.6752630739796
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 355
score: 99.66581411210318
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 355
score: 99.64906754032258
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 355
score: 99.6435125942888
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 356
score: 99.73624246162281
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 356
score: 99.71851827330508
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 356
score: 99.71371858016305
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 356
score: 99.68545134171195
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 356
score: 99.68175117924528
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 356
score: 99.675126953125
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 356
score: 99.66580636160714
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 356
score: 99.648974609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 356
score: 99.64344787597656
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 357
score: 99.73615056818181
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 357
score: 99.71836410030242
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 357
score: 99.71366743607955
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 357
score: 99.69079196068549
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 357
score: 99.68525913783482
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 357
score: 99.68169921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 357
score: 99.67506917317708
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 357
score: 99.66579086061508
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 357
score: 99.64897380891394
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 357
score: 99.64340572033899
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 358
score: 99.71834834929436
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 358
score: 99.71360973011363
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 358
score: 99.6907626065341
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 358
score: 99.68521521226415
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 358
score: 99.681474609375
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 358
score: 99.67504404105392
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 358
score: 99.665771484375
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 358
score: 99.6489494077621
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , 0 ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 358
score: 99.64335317460318
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 359
score: 99.73610889668367
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } } else { scale = new double [ y 0 . length ] ;
rank: 359
score: 99.71826171875
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 359
score: 99.71359197443182
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ vec CaMeL Absolute CaMeL Tolerance ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 359
score: 99.69068714488637
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , forward ) ;
rank: 359
score: 99.6814287293632
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 359
score: 99.6748758951823
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 359
score: 99.6657485961914
patch: System . arraycopy ( first CaMeL Time , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 359
score: 99.64893391927083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 . 0 ; }
rank: 360
score: 99.73601740056819
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 360
score: 99.71819768186475
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 360
score: 99.71357593201755
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 360
score: 99.69062003442797
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 360
score: 99.68515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 360
score: 99.68132467830883
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 360
score: 99.67481426164215
patch: final double [ ] scale ; if ( this . vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 360
score: 99.6657485961914
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 360
score: 99.64890769675925
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 361
score: 99.73601488797169
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 361
score: 99.71817068326271
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 361
score: 99.71355646306819
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 361
score: 99.69059778432377
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 361
score: 99.68498489091981
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ;
rank: 361
score: 99.68129595588235
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 361
score: 99.67477596507354
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 361
score: 99.66574622844827
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 361
score: 99.64889962332589
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 361
score: 99.64319816468254
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 362
score: 99.7359260110294
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 362
score: 99.718115234375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 362
score: 99.713427734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ vec CaMeL Absolute CaMeL Tolerance ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 362
score: 99.69057377049181
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 362
score: 99.68487690770348
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 362
score: 99.68125406901042
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 362
score: 99.67476712740384
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 362
score: 99.6657211061508
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 362
score: 99.6487525201613
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ vec CaMeL Absolute CaMeL Tolerance ] ; }
rank: 362
score: 99.64318084716797
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 363
score: 99.73590959821429
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 363
score: 99.71796526227679
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance , scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 363
score: 99.71340762867646
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( ) ;
rank: 363
score: 99.69056815531717
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 363
score: 99.68103515625
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 363
score: 99.67474724264706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; }
rank: 363
score: 99.66570113877118
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 363
score: 99.64871060646186
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , new double [ y 0 . length ] ) ; }
rank: 363
score: 99.64311606197033
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 364
score: 99.7358826754386
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ;
rank: 364
score: 99.71789157006049
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 364
score: 99.71325932716837
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 364
score: 99.69055382680085
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 364
score: 99.68451799665179
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 364
score: 99.68085753242924
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ;
rank: 364
score: 99.67472700639205
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 364
score: 99.6656978546627
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 364
score: 99.64868951612904
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance . length ) ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 364
score: 99.64309692382812
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 365
score: 99.73577008928571
patch: scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 365
score: 99.71788969494048
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 365
score: 99.71319580078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance + vec CaMeL Absolute CaMeL Tolerance ; }
rank: 365
score: 99.68434920400944
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 365
score: 99.68076735276442
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 365
score: 99.67455486918605
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } finally { scale = new double [ y 0 . length ] ;
rank: 365
score: 99.64867322198276
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 365
score: 99.64309256417411
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 366
score: 99.7357653601695
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 366
score: 99.71787923177084
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } final double scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 366
score: 99.71318028336864
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 366
score: 99.68429266237744
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { h = vec CaMeL Absolute CaMeL Tolerance ;
rank: 366
score: 99.68074174360795
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 366
score: 99.67446664663461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 366
score: 99.66566467285156
patch: interpolator . shift ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 366
score: 99.64864309210526
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 366
score: 99.64300537109375
patch: interpolator . store CaMeL Time ( y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 367
score: 99.7357113486842
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 367
score: 99.71784319196429
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance + scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 367
score: 99.71317471590909
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 367
score: 99.6903868558114
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 367
score: 99.68426983173077
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 367
score: 99.6806007667824
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 367
score: 99.67439299938725
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = scale [ y 0 . length ] ;
rank: 367
score: 99.66565910218254
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 367
score: 99.648603515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 368
score: 99.73568612557871
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 368
score: 99.71770722987289
patch: else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 368
score: 99.71316583806818
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 . length * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 368
score: 99.69024761652543
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 368
score: 99.68423227163461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , false ) ;
rank: 368
score: 99.68050130208333
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 368
score: 99.67435546875
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 368
score: 99.66562325613839
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 368
score: 99.64855536099138
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 368
score: 99.64299011230469
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 369
score: 99.73564091435185
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; / * { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 369
score: 99.71761067708333
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 369
score: 99.71314761513158
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 369
score: 99.69022800611413
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 369
score: 99.6842041015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 369
score: 99.680478515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 369
score: 99.67421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 369
score: 99.66561397429436
patch: if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 369
score: 99.64855336334746
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = null ; }
rank: 369
score: 99.64298502604167
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 370
score: 99.7356289950284
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 370
score: 99.7175925925926
patch: final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 370
score: 99.71311257102273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 370
score: 99.69007258628731
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 370
score: 99.68418337264151
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 370
score: 99.64855291193182
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , new double [ y 0 . length ] ) ;
rank: 371
score: 99.73549467941811
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 371
score: 99.71753329918033
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 371
score: 99.71309621710526
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 371
score: 99.69001891121032
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 371
score: 99.68043428308823
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 371
score: 99.67412707270408
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 371
score: 99.66554284474206
patch: h CaMeL New = initialize CaMeL Step ( equations , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 371
score: 99.6484619140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 371
score: 99.64295014880952
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 372
score: 99.73549397786458
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } final double scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 372
score: 99.7174423993644
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 372
score: 99.71307995854592
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 372
score: 99.68993340163935
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 372
score: 99.68413837139423
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 372
score: 99.67412109375
patch: { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 372
score: 99.66546533978175
patch: final Runge CaMeL Kutta CaMeL Step CaMeL Interpolator ( t 0 , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 372
score: 99.64842845775463
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 372
score: 99.64290865384615
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 373
score: 99.73531788793103
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 373
score: 99.71741174768519
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 373
score: 99.7130635579427
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 373
score: 99.68988882211538
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 373
score: 99.68382547669492
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 373
score: 99.68039598651961
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 373
score: 99.67411295572917
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 373
score: 99.66542053222656
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 373
score: 99.64832543545081
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 373
score: 99.64287567138672
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 374
score: 99.7352882667824
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 374
score: 99.71730116547131
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 374
score: 99.713037109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ;
rank: 374
score: 99.68987736936475
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 374
score: 99.68365371436404
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ) ;
rank: 374
score: 99.68039175180289
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 374
score: 99.67406063988095
patch: float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 374
score: 99.66539228723404
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 374
score: 99.64815611758475
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ? scal CaMeL Absolute CaMeL Tolerance : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 374
score: 99.64287109375
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 375
score: 99.7352770789195
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 375
score: 99.71729343220339
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 375
score: 99.71298485471492
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 375
score: 99.68986390128968
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 375
score: 99.68360262784091
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 375
score: 99.67404409555289
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 375
score: 99.6653568328373
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 375
score: 99.6481493340164
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 376
score: 99.73512369791666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 376
score: 99.7128515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 376
score: 99.68986002604167
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 376
score: 99.68352399553571
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance + 0 ] [ 0 ] ;
rank: 376
score: 99.67403157552083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 376
score: 99.66532841435185
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 376
score: 99.64812360491071
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] ) ; }
rank: 377
score: 99.73506673177083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 377
score: 99.71727643694196
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 377
score: 99.71280643857759
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 - 1 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 377
score: 99.68352004716981
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else {
rank: 377
score: 99.68028428819444
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 377
score: 99.673935546875
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 377
score: 99.64803213443396
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 377
score: 99.64280225409836
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 378
score: 99.73502272002551
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 378
score: 99.71714107325819
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 378
score: 99.71268503289474
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 378
score: 99.6897841631356
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 378
score: 99.68349240860849
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 378
score: 99.68014814268868
patch: } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 378
score: 99.67372639973958
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scale ; } else { scale = new double [ y 0 . length ] ; }
rank: 378
score: 99.66530257936508
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 378
score: 99.64794921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 378
score: 99.64277674788136
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 379
score: 99.7347900390625
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 379
score: 99.71711963718221
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 379
score: 99.71266143176021
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ;
rank: 379
score: 99.68978177584134
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 379
score: 99.68344634433963
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 379
score: 99.68006089154412
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 379
score: 99.67338324652778
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale ; } else { scale = new double [ y 0 . length ] ;
rank: 379
score: 99.665283203125
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 379
score: 99.64789496527777
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; vec CaMeL Absolute CaMeL Tolerance = true ; }
rank: 380
score: 99.73464439655173
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 380
score: 99.71691473599138
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 380
score: 99.71265462239583
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 380
score: 99.68972724780701
patch: System . arraycopy ( y 0 , 0 , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 380
score: 99.68342194733796
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations ,
rank: 380
score: 99.68005823206019
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 380
score: 99.67318040497449
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 380
score: 99.6652328249008
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 380
score: 99.64770908043033
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 381
score: 99.73463350183823
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } final double scale = new double [ y 0 . length ] ;
rank: 381
score: 99.71689925655242
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 381
score: 99.71256510416667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 381
score: 99.68972685842803
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 381
score: 99.68336455676021
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] [ 0 ] ;
rank: 381
score: 99.68003493088942
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 381
score: 99.67309091605392
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 381
score: 99.6652099609375
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 381
score: 99.64765456627156
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 381
score: 99.6427061987705
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 382
score: 99.73462818287037
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale [ 0 ] = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 382
score: 99.71688350554436
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 382
score: 99.71253458658855
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 382
score: 99.68967725409836
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 382
score: 99.68328753972457
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 382
score: 99.68001302083333
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 382
score: 99.67307942708334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; } else { scale = new double [ y 0 . length ] ; }
rank: 382
score: 99.64764939692982
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 382
score: 99.64266916048729
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 383
score: 99.73442639802632
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 383
score: 99.71688350554436
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 383
score: 99.71252648305085
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 383
score: 99.68962860107422
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 383
score: 99.679990234375
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 383
score: 99.67303936298077
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 383
score: 99.64760916573661
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 383
score: 99.64263153076172
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 384
score: 99.73438341864224
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 384
score: 99.71685112847223
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 384
score: 99.71235183189656
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 384
score: 99.68960521260246
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 384
score: 99.68315529336735
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 384
score: 99.67989676339286
patch: scale ( new double [ y 0 . length ] ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 384
score: 99.67302997295673
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 384
score: 99.6475890112705
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 385
score: 99.7168201264881
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 385
score: 99.71232096354167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 385
score: 99.68957331730769
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 385
score: 99.68290127840909
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 385
score: 99.679892578125
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ;
rank: 385
score: 99.673017578125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 385
score: 99.66497705853175
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 385
score: 99.64755544354838
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . length ; }
rank: 385
score: 99.64261627197266
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 386
score: 99.73432712928921
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 386
score: 99.71678137400794
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 386
score: 99.68955078125
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 386
score: 99.68289317255434
patch: final double error = 0 ; for ( boolean loop = true ; loop ; ) { if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) {
rank: 386
score: 99.67988096992924
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = new double [ y 0 . length ] ;
rank: 386
score: 99.67300103635205
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 386
score: 99.6649658203125
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 386
score: 99.64745279947917
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 387
score: 99.73431606950432
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 387
score: 99.71668101165254
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 387
score: 99.71214978448276
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 . length * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 387
score: 99.68948622881356
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 387
score: 99.68282376802884
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 387
score: 99.67987530048077
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 387
score: 99.67279296875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 387
score: 99.64718424479166
patch: } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 388
score: 99.73426649305556
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 388
score: 99.7166748046875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 388
score: 99.712109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 388
score: 99.68935210129311
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 388
score: 99.68279925847457
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 388
score: 99.67987175707547
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ;
rank: 388
score: 99.66488942792338
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 388
score: 99.64710507150424
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? vec CaMeL Absolute CaMeL Tolerance : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 388
score: 99.64250183105469
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 389
score: 99.73416015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 . length ] ;
rank: 389
score: 99.7166688012295
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 389
score: 99.71203082540761
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages - 1 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 389
score: 99.68933686755952
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 389
score: 99.68274456521739
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 389
score: 99.67970628004808
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 389
score: 99.67277725883152
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 390
score: 99.73405905330883
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 1 . length ] ;
rank: 390
score: 99.71665736607143
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 390
score: 99.71200666756465
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b 0 . length ; }
rank: 390
score: 99.68271292892157
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 390
score: 99.66477917086694
patch: interpolator . shift ( y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 390
score: 99.64703369140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , null , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 390
score: 99.64238739013672
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 391
score: 99.73400426793981
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 391
score: 99.71664790783899
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 391
score: 99.71198272705078
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 391
score: 99.68922836061508
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 391
score: 99.682666015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 1 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 391
score: 99.679404296875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 391
score: 99.67260243941327
patch: double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 391
score: 99.64694063780738
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 391
score: 99.64233022836538
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 392
score: 99.73375773879717
patch: int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 392
score: 99.71662554824562
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 392
score: 99.71181640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 392
score: 99.68918897284836
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 392
score: 99.68250774515086
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ) ; }
rank: 392
score: 99.67259765625
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 392
score: 99.66466103830645
patch: if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 392
score: 99.64692034040179
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 392
score: 99.64219060019842
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 393
score: 99.71659211189517
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 393
score: 99.71180943080357
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 393
score: 99.68915385584677
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 393
score: 99.68241613051471
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 393
score: 99.67257925180289
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 393
score: 99.66464378720238
patch: interpolator . shift ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 393
score: 99.64681570870536
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 393
score: 99.6421607232863
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 394
score: 99.73362379807692
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 394
score: 99.7165106411638
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 394
score: 99.71179413377193
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y - 1 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 394
score: 99.6889892578125
patch: final double sum = b 0 ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 394
score: 99.68235922759433
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 394
score: 99.67934283088235
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) }
rank: 394
score: 99.67251275510205
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 394
score: 99.66454303075396
patch: interpolator . shift ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 394
score: 99.64680713718221
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 394
score: 99.64214777542372
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 395
score: 99.73357522898706
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 395
score: 99.716435546875
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 395
score: 99.71176861702128
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 395
score: 99.68883514404297
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 395
score: 99.68235560825893
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , scale , get CaMeL Order ( ) ,
rank: 395
score: 99.67932581018519
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ;
rank: 395
score: 99.67244140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 395
score: 99.66451202876983
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 395
score: 99.64678485576923
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 395
score: 99.64213491586538
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 396
score: 99.73357421875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 396
score: 99.71634114583334
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 396
score: 99.71169990405701
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = a 0 . length ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 396
score: 99.68879351699562
patch: System . arraycopy ( a 0 , 0 , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 396
score: 99.67925347222223
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? false : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 396
score: 99.672431640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 396
score: 99.66450639204545
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 396
score: 99.64676789314517
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; } }
rank: 396
score: 99.64213053385417
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 397
score: 99.73338001179245
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 397
score: 99.71160567434211
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b 0 . length ;
rank: 397
score: 99.68873232886905
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 397
score: 99.68228474069149
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 397
score: 99.67919000589623
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 397
score: 99.67241753472223
patch: double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 397
score: 99.66449381510417
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 397
score: 99.64675748146186
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 397
score: 99.64210559475806
patch: interpolator . store CaMeL Time ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 398
score: 99.73336226851852
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } final double scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 398
score: 99.71632460297131
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 398
score: 99.71160257273706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = new double [ y 0 . length ] ;
rank: 398
score: 99.6886703249008
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 398
score: 99.682236328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 398
score: 99.67909975405092
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 398
score: 99.67239379882812
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 398
score: 99.66446415070564
patch: interpolator . shift ( y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 398
score: 99.64667619977679
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 398
score: 99.64210534474206
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 399
score: 99.73330630896227
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 399
score: 99.7162353515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 399
score: 99.71159415409483
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 399
score: 99.6885498046875
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 399
score: 99.68221201795212
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] [ 0 ] ;
rank: 399
score: 99.67233455882354
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale += vec CaMeL Absolute CaMeL Tolerance ;
rank: 399
score: 99.664453125
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 399
score: 99.64664713541667
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 399
score: 99.64210510253906
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 400
score: 99.73321126302083
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 400
score: 99.7162198153409
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = Math . min ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 400
score: 99.71157525510205
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 400
score: 99.6884994506836
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 400
score: 99.68217028601696
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 400
score: 99.67904260023585
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 400
score: 99.67228668811275
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 400
score: 99.66444498697916
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 400
score: 99.64657242571721
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 400
score: 99.64203752790179
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 401
score: 99.73309206495098
patch: else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 401
score: 99.7161353326613
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 401
score: 99.7115628426535
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = a 0 ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 401
score: 99.6884765625
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 401
score: 99.68212018694196
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { h = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 401
score: 99.67902688419117
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 401
score: 99.64654134114583
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 401
score: 99.64203725961538
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 402
score: 99.7329963235294
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = new double [ y 0 . length ] ;
rank: 402
score: 99.71605603448276
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 402
score: 99.71154005984043
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 402
score: 99.6884344692888
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 402
score: 99.68211933210785
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; }
rank: 402
score: 99.67212975543478
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 402
score: 99.64650092690678
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 402
score: 99.64196570444915
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 403
score: 99.73298725328948
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 403
score: 99.71140802556818
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = b 0 ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 403
score: 99.68828621557203
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 403
score: 99.68209060968137
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 403
score: 99.67900182845744
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( scale != null ) { scale = new double [ y 0 . length ] ;
rank: 403
score: 99.67211435355392
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 403
score: 99.6464415433114
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 403
score: 99.64192988954741
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 404
score: 99.71594690393519
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 404
score: 99.71138139204545
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages - 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 404
score: 99.68819233908582
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 404
score: 99.6820537860577
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 404
score: 99.67897316261575
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 404
score: 99.67208784054488
patch: final double [ ] scale ; if ( scale == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 404
score: 99.664306640625
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 404
score: 99.64640018857759
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 404
score: 99.64192199707031
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 405
score: 99.73291857489224
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ;
rank: 405
score: 99.68814808238636
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 405
score: 99.68204439603366
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 405
score: 99.67893016581633
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 405
score: 99.672080078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 405
score: 99.66429850260417
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 405
score: 99.6463623046875
patch: scale = scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 405
score: 99.64187720514113
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 406
score: 99.73285784040179
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 406
score: 99.71589265046296
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 406
score: 99.71128373579545
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 406
score: 99.68813139816811
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 406
score: 99.68183210784314
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 406
score: 99.67887369791667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 406
score: 99.66424457097457
patch: final Runge CaMeL Kutta CaMeL Step CaMeL Interpolator ( t 0 , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 406
score: 99.64186507936508
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 407
score: 99.71587634477459
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 407
score: 99.71128015350877
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 407
score: 99.68812674906717
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 407
score: 99.68178530092592
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 407
score: 99.67877666766827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 407
score: 99.67195811170212
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 407
score: 99.66419719827586
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 407
score: 99.646298828125
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scale ) ;
rank: 407
score: 99.64175180288461
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 408
score: 99.7328350360577
patch: } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 408
score: 99.71581243699596
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 408
score: 99.71127681408899
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 408
score: 99.68812662760416
patch: System . arraycopy ( y 0 , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 408
score: 99.68177734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 408
score: 99.67872051164215
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 408
score: 99.6719219501202
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 408
score: 99.66416015625
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 408
score: 99.64620085685483
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 408
score: 99.6417236328125
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 409
score: 99.73281069155092
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 409
score: 99.71578829405738
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 409
score: 99.71110026041667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b 0 . length ;
rank: 409
score: 99.68795572916666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 409
score: 99.68177734375
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 409
score: 99.67870154747597
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 409
score: 99.67188457414215
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 409
score: 99.64607319078948
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 409
score: 99.64172175480769
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 410
score: 99.71576980064656
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 410
score: 99.71100852272727
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 410
score: 99.68795184235074
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 410
score: 99.68174164870689
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { h = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 410
score: 99.67867408608491
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 410
score: 99.66413225446429
patch: h CaMeL New = initialize CaMeL Step ( equations , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 410
score: 99.6460205078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 . 0 ; }
rank: 410
score: 99.64171600341797
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 411
score: 99.73277869591347
patch: else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 411
score: 99.71572265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 411
score: 99.71088115985577
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = new double [ y 0 ] ;
rank: 411
score: 99.68173275353773
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else {
rank: 411
score: 99.67865566037736
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } ( ( vec CaMeL Absolute CaMeL Tolerance == null ) ) { scale = new double [ y 0 . length ] ;
rank: 411
score: 99.66407877604166
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 411
score: 99.64597981770834
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } }
rank: 411
score: 99.64171181955645
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 412
score: 99.73272824754902
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y $NUMBER$ . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 412
score: 99.715703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; / } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 412
score: 99.71087646484375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b [ 0 ] ;
rank: 412
score: 99.68788248697916
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 412
score: 99.68165977328431
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 412
score: 99.67862802181604
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 412
score: 99.67159449800532
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = scale ;
rank: 412
score: 99.64596298993644
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = new double [ y 0 . length ] ;
rank: 412
score: 99.64170231894842
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 413
score: 99.73272372159092
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance . is CaMeL Empty ( ) ) { scale = new double [ y 0 . length ] ;
rank: 413
score: 99.71563620645492
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 413
score: 99.7107570482337
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = a [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 413
score: 99.68780226934524
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 413
score: 99.68156403186275
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ;
rank: 413
score: 99.67857530381944
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 413
score: 99.6715234375
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 413
score: 99.66402312247983
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 413
score: 99.64595471398304
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 413
score: 99.64166356646825
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 414
score: 99.73260378370098
patch: if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 414
score: 99.7156084168632
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 414
score: 99.71074538934427
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ;
rank: 414
score: 99.68776292067308
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; first CaMeL Time = false ;
rank: 414
score: 99.68155751329788
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] [ 0 ] [ 0 ] ;
rank: 414
score: 99.67848982900944
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 414
score: 99.6715087890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 414
score: 99.66402180989583
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 414
score: 99.6459228515625
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] ) ;
rank: 414
score: 99.64160931299604
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 415
score: 99.73259420955883
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 415
score: 99.71560767389113
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ;
rank: 415
score: 99.71072334155701
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 415
score: 99.68774827860169
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 415
score: 99.68146623883929
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 415
score: 99.67848488136575
patch: final double [ ] scale = scal CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 415
score: 99.67148844401042
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = scale ; }
rank: 415
score: 99.66395844006148
patch: handler . reinitialize ( this , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 415
score: 99.64591899671052
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 415
score: 99.64154052734375
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 416
score: 99.73254633884804
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } final { scale = new double [ y 0 . length ] ;
rank: 416
score: 99.71556678185097
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 416
score: 99.68772412909836
patch: System . arraycopy ( y 0 , 0 , y CaMeL Tmp , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 416
score: 99.68139204545454
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 416
score: 99.678447265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 416
score: 99.6714336688702
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 416
score: 99.66394624255952
patch: final Runge CaMeL Kutta CaMeL Step CaMeL Interpolator ( t 0 , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 416
score: 99.64590567129629
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 416
score: 99.64145883413461
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 417
score: 99.71547037760416
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; }
rank: 417
score: 99.71044921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 417
score: 99.68768219449628
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 417
score: 99.68139187794812
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 1 , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 417
score: 99.678388671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 417
score: 99.67142427884616
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 417
score: 99.66393229166667
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 417
score: 99.64590003842213
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ vec CaMeL Absolute CaMeL Tolerance . length ] ; }
rank: 417
score: 99.64141845703125
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 418
score: 99.73248046875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 418
score: 99.7154601050205
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } }
rank: 418
score: 99.71037212171052
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 418
score: 99.68762770432693
patch: System . arraycopy ( y 0 , 0 , y CaMeL Tmp , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 418
score: 99.68135502653301
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 418
score: 99.67837006191037
patch: double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 418
score: 99.67138671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scale ;
rank: 418
score: 99.6638671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 418
score: 99.64587616502193
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ;
rank: 418
score: 99.6413803100586
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 419
score: 99.73245304188829
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 419
score: 99.71033653846153
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ;
rank: 419
score: 99.68758138020833
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 419
score: 99.68122893688725
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 419
score: 99.67800342793367
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ; final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 419
score: 99.67132927389706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } return vec CaMeL Absolute CaMeL Tolerance ;
rank: 419
score: 99.6638623847336
patch: handler . reinitialize ( this , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 419
score: 99.64587602459017
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , null ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 419
score: 99.64137027138158
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 420
score: 99.71537642045455
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 420
score: 99.68756866455078
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 420
score: 99.68121337890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 420
score: 99.67796469634433
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale += vec CaMeL Absolute CaMeL Tolerance ; }
rank: 420
score: 99.67122708834134
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 420
score: 99.66381022135417
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 420
score: 99.64566790471312
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ;
rank: 421
score: 99.73232797475961
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new Double ( scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 421
score: 99.71534830729166
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 421
score: 99.7103196747449
patch: final double [ ] scale ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 421
score: 99.68743341619319
patch: System . arraycopy ( y 0 , 0 , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 421
score: 99.68121230811404
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Tmp [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 421
score: 99.67794053819445
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 421
score: 99.67120830829327
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 421
score: 99.663720703125
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 421
score: 99.64565728635205
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ; }
rank: 421
score: 99.64122596153847
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 422
score: 99.71530720338983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 422
score: 99.71027018229167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 422
score: 99.68740408761161
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , forward ) ; }
rank: 422
score: 99.68120659722223
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] [ 0 ] ;
rank: 422
score: 99.67786583533653
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = new double [ y 0 . length ] ; }
rank: 422
score: 99.67115319293478
patch: double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 422
score: 99.66368180614407
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 422
score: 99.64563802083333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 423
score: 99.73219457165948
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 423
score: 99.71520774147727
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = Math . max ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 423
score: 99.68737980769231
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; first CaMeL Time = false ;
rank: 423
score: 99.68105844350961
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 423
score: 99.67779181985294
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] ) ; } else { scale ( new double [ y 0 . length ] ) ;
rank: 423
score: 99.6711092862216
patch: { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 423
score: 99.6636450982863
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 423
score: 99.64563409213362
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 424
score: 99.73218677662037
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 424
score: 99.7151747881356
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 424
score: 99.71010335286458
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 424
score: 99.68736683238636
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations ) ;
rank: 424
score: 99.68105061848958
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 424
score: 99.67771444515306
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 424
score: 99.67108777104592
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 424
score: 99.66356634324596
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 424
score: 99.64554036458334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 424
score: 99.64110514322917
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 425
score: 99.71510416666666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 425
score: 99.7100436970339
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 425
score: 99.68736392161885
patch: System . arraycopy ( y 0 , 0 , y CaMeL Tmp , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 425
score: 99.68099271334134
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 425
score: 99.67768650428921
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 425
score: 99.67106784119898
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { double scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 425
score: 99.66355794270834
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 425
score: 99.64554036458334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 425
score: 99.6410903930664
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 426
score: 99.73206865026596
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 426
score: 99.71509989754098
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 426
score: 99.71004356971154
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 426
score: 99.6873427568856
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 426
score: 99.680869140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 426
score: 99.6776835123698
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 426
score: 99.67106119791667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ;
rank: 426
score: 99.6635509672619
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 426
score: 99.64540678879311
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 . 0 ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] ) ; }
rank: 426
score: 99.6410900297619
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 427
score: 99.73194355867346
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ;
rank: 427
score: 99.71504077576755
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 427
score: 99.70986328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 427
score: 99.68726827330508
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 427
score: 99.6808612530048
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 427
score: 99.67093912760417
patch: double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 427
score: 99.64536372950819
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 427
score: 99.64106362552967
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 428
score: 99.71503737877156
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 428
score: 99.7097900390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations ,
rank: 428
score: 99.68725961538462
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 428
score: 99.680751953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 428
score: 99.67765625
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 428
score: 99.67091758578431
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 428
score: 99.66350149601064
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 428
score: 99.64527608580508
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 428
score: 99.64102935791016
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 429
score: 99.7318115234375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 429
score: 99.71499875992063
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 429
score: 99.70971251370614
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 429
score: 99.68701934814453
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 429
score: 99.68059747869319
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 429
score: 99.67757161458333
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 429
score: 99.67090782752403
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale += vec CaMeL Absolute CaMeL Tolerance ; }
rank: 429
score: 99.66349417264344
patch: compute CaMeL Derivatives ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 429
score: 99.64525035511363
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , new double [ y 0 . length ] ) ;
rank: 429
score: 99.64099308894231
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 430
score: 99.73180731411638
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 430
score: 99.71497763356855
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 430
score: 99.70950692160088
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = b 0 ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 430
score: 99.68699645996094
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 430
score: 99.68057437818878
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; h CaMeL New = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 430
score: 99.6775410970052
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 430
score: 99.6634461449795
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 430
score: 99.64524366034836
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 430
score: 99.64092726934524
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 431
score: 99.70946438029661
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 431
score: 99.68046703673245
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 431
score: 99.677529296875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 431
score: 99.67078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 431
score: 99.6634188565341
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 431
score: 99.64521300117924
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 431
score: 99.64090169270834
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 432
score: 99.73172562210648
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 1 . length ] ;
rank: 432
score: 99.71481173155738
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 432
score: 99.70936506885593
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 432
score: 99.68687650240385
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 432
score: 99.68044793801229
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 432
score: 99.67744715073529
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 432
score: 99.66340584590517
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 432
score: 99.64520733173077
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 433
score: 99.73158001077586
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 433
score: 99.71478771772541
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 433
score: 99.68683492726294
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 433
score: 99.68042931189903
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ) ; }
rank: 433
score: 99.6707012469952
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 433
score: 99.66339983258929
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 433
score: 99.64505440848214
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 . 0 ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 434
score: 99.73146373820755
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 434
score: 99.71475808662281
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 434
score: 99.70928565492021
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 434
score: 99.68677958504098
patch: System . arraycopy ( a 0 , 0 , y CaMeL Tmp , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 434
score: 99.68042834051724
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 434
score: 99.67714475235849
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 434
score: 99.67048987563776
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 434
score: 99.66326497395833
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 434
score: 99.64503728693182
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 434
score: 99.64076232910156
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 435
score: 99.7314453125
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 435
score: 99.71475271451271
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 435
score: 99.70913163442461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ;
rank: 435
score: 99.68039598651961
patch: final double error = 0 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 435
score: 99.67711046006944
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } }
rank: 435
score: 99.67044771634616
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 435
score: 99.66326203893442
patch: System . arraycopy ( y 0 , y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 435
score: 99.64501953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , new double [ y 0 . length ] , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 436
score: 99.73142005657327
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 436
score: 99.71473430765086
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; length = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 436
score: 99.7090555826823
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 436
score: 99.68672943115234
patch: h CaMeL New = initialize CaMeL Step ( equations 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 436
score: 99.68036358173077
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 436
score: 99.67701631433823
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 436
score: 99.6704296875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 436
score: 99.66323002049181
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 436
score: 99.64497150358606
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 436
score: 99.64075127963362
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 437
score: 99.71466261340726
patch: else { final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 437
score: 99.7089415433114
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = b [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 437
score: 99.68666076660156
patch: h CaMeL New = initialize CaMeL Step ( equations 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 437
score: 99.68034561820652
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 437
score: 99.67699291087963
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 437
score: 99.67042893629808
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 437
score: 99.66316344246032
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 437
score: 99.6449486517137
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 438
score: 99.7313071196934
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 438
score: 99.714599609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 438
score: 99.7089131673177
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = b [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 438
score: 99.68664944556451
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 438
score: 99.68025425502232
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 438
score: 99.67695886948529
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 438
score: 99.67037185968137
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 438
score: 99.66309435614224
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 438
score: 99.64492692618535
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , new double [ y 0 . length ] ) ;
rank: 438
score: 99.64061658135776
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 439
score: 99.73127026827831
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 439
score: 99.71450510332662
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 439
score: 99.70889282226562
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = b [ 1 ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 439
score: 99.68656281502017
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 439
score: 99.6801953125
patch: final double error = 0 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 439
score: 99.66307779947917
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 439
score: 99.6405517578125
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 440
score: 99.7312644675926
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 440
score: 99.71442167637711
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 440
score: 99.70882161458333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 440
score: 99.68653144211065
patch: System . arraycopy ( a 0 , 0 , y CaMeL Tmp , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 440
score: 99.68006243024554
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 440
score: 99.67688927283653
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } vec CaMeL Absolute CaMeL Tolerance = null ;
rank: 440
score: 99.67020769817073
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 440
score: 99.66305493551587
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 440
score: 99.6448974609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 440
score: 99.64053344726562
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 441
score: 99.73122510723039
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 441
score: 99.71440067997685
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 441
score: 99.7088134765625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 441
score: 99.68646450700432
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 441
score: 99.68002319335938
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 441
score: 99.67013784555289
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 441
score: 99.66302393353175
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 441
score: 99.64478739754098
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; vec CaMeL Absolute CaMeL Tolerance . copy ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 442
score: 99.73118489583334
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = null ; } else { scale = new double [ y 0 . length ] ;
rank: 442
score: 99.71438697076613
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) {
rank: 442
score: 99.70872782044492
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 442
score: 99.68643240201271
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 442
score: 99.67996515012256
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Tmp [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 442
score: 99.67670147235577
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 442
score: 99.67009765625
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 442
score: 99.66302190061475
patch: compute CaMeL Derivatives ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 442
score: 99.64473783052884
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] : new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 442
score: 99.6404296875
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 443
score: 99.71433945952869
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } final double scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 443
score: 99.70868455317982
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 443
score: 99.68639715786638
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 443
score: 99.679873046875
patch: final double error = 0 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 443
score: 99.66995594113372
patch: final Double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 443
score: 99.66299874441964
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 443
score: 99.64473179408482
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 443
score: 99.6404052734375
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 444
score: 99.73111364976415
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new Double ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 444
score: 99.71425015318627
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 444
score: 99.70864818135246
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 444
score: 99.68638392857143
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 444
score: 99.67965877757354
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 444
score: 99.669931640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } final scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 444
score: 99.64466732838115
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ;
rank: 444
score: 99.64038848876953
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 445
score: 99.73104745370371
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 445
score: 99.71423554002193
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 445
score: 99.70850466008773
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 445
score: 99.68637084960938
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 445
score: 99.67963518415179
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 445
score: 99.67659505208333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } else scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 445
score: 99.66990064538044
patch: if ( scale ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 445
score: 99.66283779456967
patch: System . arraycopy ( y 0 , y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 445
score: 99.64464518229167
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 . 0 ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } }
rank: 445
score: 99.64036959134616
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 446
score: 99.7309998629386
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 446
score: 99.71420806308963
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 446
score: 99.70830891927083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 446
score: 99.68632481461864
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 446
score: 99.67961774553571
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 446
score: 99.67645941840277
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 446
score: 99.66989968039773
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 446
score: 99.66283779456967
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 446
score: 99.64464331454919
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 446
score: 99.64026272681451
patch: interpolator . store CaMeL Time ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 447
score: 99.73096624410377
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 447
score: 99.70817057291667
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 447
score: 99.68632192460318
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 447
score: 99.67935616629464
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 447
score: 99.676328125
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 447
score: 99.66977945963542
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 447
score: 99.6627358490566
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 447
score: 99.64462515024039
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 447
score: 99.64016772073413
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 448
score: 99.73092335668103
patch: final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 448
score: 99.7078707510965
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = a [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 448
score: 99.67934662441037
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 448
score: 99.6762890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 448
score: 99.66974954044117
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ;
rank: 448
score: 99.66264204545455
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] [ 0 ] ;
rank: 448
score: 99.64461930071721
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance . length ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 448
score: 99.64016723632812
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 449
score: 99.71416645665323
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 449
score: 99.70783971567623
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 449
score: 99.68611532182835
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 449
score: 99.6793287627551
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 449
score: 99.67626953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 449
score: 99.66974346454327
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 449
score: 99.64458673650569
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ; }
rank: 449
score: 99.64016723632812
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 450
score: 99.73074776785714
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 450
score: 99.71414620535714
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 450
score: 99.70781078673245
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = a [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 450
score: 99.68608240927419
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 450
score: 99.67930453431373
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 450
score: 99.66968790690105
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 450
score: 99.6625390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 450
score: 99.64456741898148
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 450
score: 99.64015197753906
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 451
score: 99.730712890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 451
score: 99.70780222039474
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 451
score: 99.68605701958955
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 451
score: 99.67929182381465
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 451
score: 99.67591688368056
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 451
score: 99.66963704427083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ; { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 451
score: 99.64443359375
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 451
score: 99.64012016684322
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 452
score: 99.73070271809895
patch: double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 452
score: 99.70780003324468
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 452
score: 99.68597111936475
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 452
score: 99.67928602430555
patch: final double error = 0 ; if ( ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ;
rank: 452
score: 99.675791015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 452
score: 99.669404296875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 452
score: 99.66241939484127
patch: System . arraycopy ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 452
score: 99.64441148290095
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 452
score: 99.6400622351695
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 453
score: 99.730537109375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance . is CaMeL Empty ( ) ) { scale = new double [ y 0 . length ] ;
rank: 453
score: 99.71395010318396
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 453
score: 99.70715117872807
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ) ;
rank: 453
score: 99.68594255118535
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 453
score: 99.6792629076087
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else {
rank: 453
score: 99.67579064002403
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 453
score: 99.66939290364583
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 453
score: 99.66241244612068
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 453
score: 99.64002646169355
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 454
score: 99.73043045343137
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 454
score: 99.71394469246032
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 454
score: 99.70686848958333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 454
score: 99.68593236019737
patch: System . arraycopy ( y 0 , 0 , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 454
score: 99.67575412326389
patch: double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 454
score: 99.66937546502976
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ; } else { scale = new double [ y 0 . length ] ;
rank: 454
score: 99.64431607521186
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 454
score: 99.6400146484375
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 455
score: 99.73041909427967
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 455
score: 99.71393229166667
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 455
score: 99.706787109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 455
score: 99.68592834472656
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 455
score: 99.67922585227272
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 455
score: 99.6757179542824
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 455
score: 99.66927396334134
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 455
score: 99.66236514136905
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 455
score: 99.64426491477273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 455
score: 99.64000701904297
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 456
score: 99.7303859904661
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 456
score: 99.7065960427989
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b 0 ;
rank: 456
score: 99.68587740384615
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; first CaMeL Time = false ;
rank: 456
score: 99.679130859375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 456
score: 99.66921436543367
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 456
score: 99.662353515625
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 456
score: 99.64422137920673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 456
score: 99.63996292372882
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 457
score: 99.73035668545081
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 457
score: 99.71385943700396
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 457
score: 99.70647893186475
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 457
score: 99.6857673891129
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 457
score: 99.67910347732843
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 457
score: 99.675712890625
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 457
score: 99.66921436543367
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 457
score: 99.64420572916667
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 457
score: 99.63996292372882
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 458
score: 99.73035386029412
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 458
score: 99.7138427734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 458
score: 99.70632102272727
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 458
score: 99.68576388888889
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 458
score: 99.6790752108135
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 458
score: 99.67566636029412
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 458
score: 99.66913679534314
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 458
score: 99.66233723958334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 458
score: 99.64410189924568
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ $NUMBER$ ] ; }
rank: 458
score: 99.63996292372882
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 459
score: 99.7303305571934
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 459
score: 99.71380925582628
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 459
score: 99.70627881659836
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 459
score: 99.68576299948771
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 459
score: 99.67562463148585
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ) ;
rank: 459
score: 99.66908203125
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 459
score: 99.6623291015625
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 459
score: 99.64405235877403
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 459
score: 99.6399429563492
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 460
score: 99.73032924107143
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 460
score: 99.71371346932871
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 460
score: 99.7062119306144
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a [ 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 460
score: 99.68570682920259
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 460
score: 99.67898995535714
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance <= null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 460
score: 99.67561479048295
patch: final double [ ] scale = new double [ y 0 . length ] ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 460
score: 99.6690673828125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance ;
rank: 460
score: 99.66224179025424
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 460
score: 99.64405184659091
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance - vec CaMeL Absolute CaMeL Tolerance ; }
rank: 460
score: 99.63988882211538
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 461
score: 99.73023399939903
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 461
score: 99.71367684057203
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 461
score: 99.70601222826087
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = b [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 461
score: 99.68567805503731
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 461
score: 99.67896484375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 461
score: 99.67554615162037
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; int scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 461
score: 99.66221696239407
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 461
score: 99.63988095238095
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 462
score: 99.730185546875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 462
score: 99.71366825810185
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 462
score: 99.70580267137096
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 462
score: 99.68562264278017
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 462
score: 99.67891438802083
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 462
score: 99.67545880011792
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( scale != null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 462
score: 99.66903921274039
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 462
score: 99.662177734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 462
score: 99.64388287653688
patch: } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 462
score: 99.63986002604166
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 463
score: 99.73017976721938
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 463
score: 99.71361328125
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 463
score: 99.70579993206522
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 463
score: 99.68558825476696
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 463
score: 99.67890276227679
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 463
score: 99.67539469401042
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scale ;
rank: 463
score: 99.669033203125
patch: final double [ ] scale ; if ( ( vec CaMeL Absolute CaMeL Tolerance == null ) && ( vec CaMeL Absolute CaMeL Tolerance == null ) ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 463
score: 99.662109375
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 463
score: 99.64386183215726
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance $NUMBER$ ; } else { scale = vec CaMeL Absolute CaMeL Tolerance $NUMBER$ ; } else { scale = vec CaMeL Absolute CaMeL Tolerance $NUMBER$ ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 463
score: 99.63983050847457
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 464
score: 99.73007089120371
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ; }
rank: 464
score: 99.71357101690573
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 464
score: 99.70572916666667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 464
score: 99.68552071707589
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ,
rank: 464
score: 99.67886465567129
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Tmp [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 464
score: 99.67535745872641
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 464
score: 99.669033203125
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 464
score: 99.66209387400794
patch: System . arraycopy ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 464
score: 99.64380787037037
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance . length ) ;
rank: 464
score: 99.63978678385416
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 465
score: 99.7300549523305
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 465
score: 99.71350518588362
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 465
score: 99.70560578377017
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 465
score: 99.68550749747983
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 465
score: 99.67886352539062
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 465
score: 99.67527488425925
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ;
rank: 465
score: 99.66890545280613
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 465
score: 99.66203187003968
patch: System . arraycopy ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 465
score: 99.64380296610169
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 465
score: 99.63974193816489
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 466
score: 99.73001098632812
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 466
score: 99.71349645543981
patch: if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 466
score: 99.70552884615384
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 466
score: 99.67882634943182
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 466
score: 99.67519722732843
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 466
score: 99.66890092329545
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; final double [ ] scale = new double [ y 0 . length ] ;
rank: 466
score: 99.66197916666667
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 466
score: 99.64375398596938
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = null ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 466
score: 99.63967326536017
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 467
score: 99.72997089460785
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } else { scale = new double [ 1 . length ] ;
rank: 467
score: 99.71333240327381
patch: if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 467
score: 99.70536024305555
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b 0 ; }
rank: 467
score: 99.68542850378788
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ; }
rank: 467
score: 99.67874210438829
patch: for ( boolean loop = true ; loop ; ) { if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 467
score: 99.67518765318627
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += new double [ y 0 . length ] ;
rank: 467
score: 99.66881385216347
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; else scale = new double [ y 0 . length ] ;
rank: 467
score: 99.66186910962301
patch: System . arraycopy ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 467
score: 99.64374679815573
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 467
score: 99.63965631300404
patch: interpolator . store CaMeL Time ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 468
score: 99.72984095982143
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 . length ] ;
rank: 468
score: 99.71333087858606
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) {
rank: 468
score: 99.68541217672414
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 468
score: 99.6787109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 468
score: 99.67518241450472
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 468
score: 99.63963293650794
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 469
score: 99.71325289818549
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 469
score: 99.70522085336539
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 469
score: 99.6853915127841
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ; }
rank: 469
score: 99.67866128177967
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ) ;
rank: 469
score: 99.67517541956019
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; }
rank: 469
score: 99.66868681066177
patch: float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 469
score: 99.66181010584677
patch: interpolator . shift ( y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 469
score: 99.64369032118056
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 470
score: 99.7297784213362
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ; }
rank: 470
score: 99.71319247159092
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 470
score: 99.70514787946429
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages - 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 470
score: 99.68538161057693
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 470
score: 99.67860991379311
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance <= null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 470
score: 99.67516150841347
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 470
score: 99.66866361177884
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } scale = new double [ y 0 . length ] ;
rank: 470
score: 99.66180519979508
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 470
score: 99.64368614783653
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 470
score: 99.6395263671875
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 471
score: 99.72965785435268
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 471
score: 99.7051013764881
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 471
score: 99.68532342425847
patch: System . arraycopy ( y 0 , 0 , y , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 471
score: 99.6785727446934
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 471
score: 99.67500361689815
patch: final double [ ] scale ; if ( this . vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 471
score: 99.66866048177083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 471
score: 99.66173502604167
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 471
score: 99.64361872438525
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 472
score: 99.72960425204919
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 472
score: 99.71310221354166
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 472
score: 99.70502019332628
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 472
score: 99.68529510498047
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 472
score: 99.67853860294117
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 472
score: 99.67499248798077
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 472
score: 99.66863064236111
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 472
score: 99.66172040519068
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 472
score: 99.64357994342673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 472
score: 99.63949584960938
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 473
score: 99.72957938058036
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 473
score: 99.71308425377156
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 473
score: 99.70458984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 473
score: 99.68520883413461
patch: System . arraycopy ( y 0 , 0 , y CaMeL Tmp , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 473
score: 99.6785380045573
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * sum [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 473
score: 99.66849772135417
patch: if ( scale == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 473
score: 99.64350237165179
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ; }
rank: 473
score: 99.63949424342105
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 474
score: 99.72954852764423
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 474
score: 99.7129971590909
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 474
score: 99.70454846398304
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 474
score: 99.68518487338362
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 474
score: 99.67845662434895
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 474
score: 99.6683203125
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 474
score: 99.66169084821429
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 474
score: 99.64348615679825
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } }
rank: 474
score: 99.63948848329741
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == 0 ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 475
score: 99.72952903891509
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ y 0 . length ] = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 475
score: 99.71298828125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 475
score: 99.7043194110577
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 475
score: 99.67842533903301
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 475
score: 99.67492915134804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 475
score: 99.66830384497548
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 475
score: 99.6616631869612
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 475
score: 99.63943797144397
patch: scale ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 476
score: 99.72947535021552
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 476
score: 99.7129767922794
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 476
score: 99.70418294270833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 476
score: 99.685107421875
patch: final double sum = b 0 ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 476
score: 99.6783955891927
patch: if ( ! first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 476
score: 99.6749267578125
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 476
score: 99.66826171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scale ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 476
score: 99.66166178385417
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 476
score: 99.64341998922414
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance - new double [ y 0 . length ] ; }
rank: 476
score: 99.63941671080508
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 477
score: 99.72947303921569
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 477
score: 99.71295572916667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 477
score: 99.70366467927632
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 477
score: 99.6850818452381
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 477
score: 99.678349609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 477
score: 99.67486917747641
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 477
score: 99.668203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 477
score: 99.66165984623017
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 477
score: 99.64335049715909
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ vec CaMeL Absolute CaMeL Tolerance ] ;
rank: 478
score: 99.72946735963983
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 478
score: 99.70334201388889
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = new double [ y 0 ] ;
rank: 478
score: 99.6850357055664
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 478
score: 99.67828010110294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 478
score: 99.67486328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 478
score: 99.66818237304688
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 478
score: 99.66165209573413
patch: interpolator . shift ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 478
score: 99.64334204889113
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , new double [ y 0 . length ] ) ; }
rank: 478
score: 99.63935546875
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 479
score: 99.71292372881356
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 479
score: 99.70328776041667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 479
score: 99.6850357055664
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 479
score: 99.67822265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 479
score: 99.67484085648148
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 479
score: 99.66817491319445
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length + 1 ] ;
rank: 479
score: 99.66164634967673
patch: System . arraycopy ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 479
score: 99.64332629788306
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 479
score: 99.63933293269231
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 480
score: 99.72936320754717
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 480
score: 99.71287434895834
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 480
score: 99.70326908299181
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 480
score: 99.68501790364583
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 480
score: 99.67821344339623
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 480
score: 99.67484085648148
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } ( ( double [ ] ) scal CaMeL Absolute CaMeL Tolerance ) . } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 480
score: 99.66811822385205
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 480
score: 99.66164510758196
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 480
score: 99.64315445696721
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , null ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 480
score: 99.63931790865385
patch: scale = new Dummy CaMeL Step CaMeL Interpolator ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 481
score: 99.72923485008445
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 481
score: 99.71287349232456
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 481
score: 99.70293465307203
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = a 0 . length ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 481
score: 99.68500627790179
patch: final double sum = b 0 ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 481
score: 99.67810997596153
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 481
score: 99.67481426164215
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 481
score: 99.6679986447704
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 481
score: 99.66162109375
patch: System . arraycopy ( first CaMeL Time , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 481
score: 99.64314778645833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 482
score: 99.729189453125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } scale = new double [ y 0 . length ] ;
rank: 482
score: 99.71283169450432
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 482
score: 99.70246061731558
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 482
score: 99.68499300373135
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 482
score: 99.67809119591347
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y - 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 482
score: 99.67474609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 482
score: 99.66792889030613
patch: final Double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 482
score: 99.66161334325396
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 482
score: 99.63929537259615
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 483
score: 99.72918231670673
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } { scale = new double [ y 0 . length ] ; }
rank: 483
score: 99.7128197454637
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale += vec CaMeL Absolute CaMeL Tolerance ; }
rank: 483
score: 99.70212624289773
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 483
score: 99.67801202512256
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 483
score: 99.67470522280092
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance . } }
rank: 483
score: 99.661611328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 483
score: 99.64305853074596
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 483
score: 99.63919953377017
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 484
score: 99.72915287341101
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 484
score: 99.71275983537946
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 484
score: 99.70209050582628
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ;
rank: 484
score: 99.67793856534091
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 484
score: 99.67468713831019
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 484
score: 99.6678347120098
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 484
score: 99.66158040364583
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 484
score: 99.64305065524194
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 484
score: 99.63916857489224
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 485
score: 99.7290926846591
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 485
score: 99.71275592672414
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 485
score: 99.70203030493951
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 485
score: 99.68487141927083
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 485
score: 99.67788809317129
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 485
score: 99.6746826171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 485
score: 99.66780952785327
patch: scale ; } else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 485
score: 99.6615490522541
patch: System . arraycopy ( first CaMeL Time , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 485
score: 99.64301313920454
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ;
rank: 485
score: 99.63916015625
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 486
score: 99.72902916217673
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 486
score: 99.70176866319444
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] [ ] ;
rank: 486
score: 99.68485576923077
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; first CaMeL Time = false ;
rank: 486
score: 99.67779330549568
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 486
score: 99.67439932193396
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 486
score: 99.66779641544117
patch: try { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 486
score: 99.66152178230932
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 486
score: 99.63906715029762
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 487
score: 99.72902233195755
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 487
score: 99.71272252817623
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 487
score: 99.70176595052084
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 487
score: 99.68482686705508
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 487
score: 99.677685546875
patch: final double error = 0 ; if ( ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 487
score: 99.67438874421296
patch: final double [ ] scale ; if ( ( vec CaMeL Absolute CaMeL Tolerance == null ) ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 487
score: 99.66769109987744
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 487
score: 99.66150296118951
patch: interpolator . shift ( y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 487
score: 99.64297921316964
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 487
score: 99.63899477066532
patch: interpolator . store CaMeL Time ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 488
score: 99.72879464285714
patch: scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ;
rank: 488
score: 99.71267798639113
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ;
rank: 488
score: 99.70159357244319
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = b [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = b [ 1 ] ;
rank: 488
score: 99.68482259114583
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 488
score: 99.67767644332628
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward ) ;
rank: 488
score: 99.67428768382354
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance == null ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 488
score: 99.667646484375
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 488
score: 99.6614478326613
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 488
score: 99.64297598379629
patch: scale = scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 489
score: 99.72873450969827
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 489
score: 99.71263316761363
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 489
score: 99.70130795338115
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 489
score: 99.68481031514831
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 489
score: 99.67766702586206
patch: final double [ ] scale ; if ( ( vec CaMeL Absolute CaMeL Tolerance == null ) ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 489
score: 99.67425191627359
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ;
rank: 489
score: 99.66760493259804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 489
score: 99.6614209784836
patch: System . arraycopy ( y CaMeL Tmp , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 489
score: 99.64292571504237
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 489
score: 99.63894314236111
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 490
score: 99.72871830778301
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new Double ( scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 490
score: 99.71258644979508
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; / } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 490
score: 99.70118815104166
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 490
score: 99.68478077855603
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 490
score: 99.677666015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; first CaMeL Time = false ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 490
score: 99.67421694155092
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 490
score: 99.6676025390625
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 490
score: 99.63892443426724
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 491
score: 99.72868795955883
patch: int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 491
score: 99.71251502403847
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale , scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 491
score: 99.70097423735119
patch: final double error = 0 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 491
score: 99.68469445180085
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 491
score: 99.67756854363208
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else {
rank: 491
score: 99.67420789930556
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ;
rank: 491
score: 99.6675474877451
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length + 1 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 491
score: 99.66136011584052
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 491
score: 99.64273507254464
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance + vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 491
score: 99.63883463541667
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 492
score: 99.72862141927084
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 492
score: 99.71249825613839
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 492
score: 99.70085969518442
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 492
score: 99.68466962394068
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 492
score: 99.67754737367021
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 492
score: 99.67418077256944
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? vec CaMeL Absolute CaMeL Tolerance : vec CaMeL Absolute CaMeL Tolerance ;
rank: 492
score: 99.6675
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 492
score: 99.6613033234127
patch: interpolator . shift ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 492
score: 99.64273274739584
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 492
score: 99.6387939453125
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 493
score: 99.72860281808036
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 . length ] ;
rank: 493
score: 99.71241978236607
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 493
score: 99.70077164446721
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 493
score: 99.68460518973214
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 493
score: 99.67752779447116
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; sum = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 493
score: 99.66746132046569
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 493
score: 99.66128394717262
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 493
score: 99.64272966056035
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } }
rank: 493
score: 99.63878038194444
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 494
score: 99.72857196514423
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 494
score: 99.71240234375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 494
score: 99.70015462239583
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 494
score: 99.68456268310547
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 494
score: 99.67403609664352
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 494
score: 99.66744791666666
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 494
score: 99.66119495738636
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 494
score: 99.64269018954919
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 494
score: 99.63874816894531
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 495
score: 99.700048828125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 495
score: 99.6845370205966
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 495
score: 99.6774393717448
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 495
score: 99.67397836538461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ;
rank: 495
score: 99.66744384765624
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = ( double [ ] ; }
rank: 495
score: 99.64266263521634
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 496
score: 99.71234706662736
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 496
score: 99.68451021634615
patch: System . arraycopy ( y 0 , 0 , y CaMeL Tmp , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 496
score: 99.67740885416667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 496
score: 99.67394567418981
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 496
score: 99.66723154105392
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 496
score: 99.66111653645834
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 496
score: 99.64265046296296
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 497
score: 99.728515625
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 497
score: 99.71231429303279
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 497
score: 99.69981909579919
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 497
score: 99.68447770743535
patch: scale = ( double [ ] [ ] ) initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 497
score: 99.67735944475446
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 497
score: 99.67386968085107
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 497
score: 99.66720145089286
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 497
score: 99.66103350105932
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 497
score: 99.64261950476696
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? scal CaMeL Absolute CaMeL Tolerance : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 498
score: 99.72840372721355
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 498
score: 99.69980003720238
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 . length ] ;
rank: 498
score: 99.68443913246269
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 498
score: 99.67734555844908
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 498
score: 99.6670783547794
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new int [ y 0 . length ] ;
rank: 498
score: 99.66097586495536
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 498
score: 99.64258654364224
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 498
score: 99.63868871228448
patch: scale ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 499
score: 99.728271484375
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y $NUMBER$ . length ] ;
rank: 499
score: 99.71221333165323
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 499
score: 99.69969593394886
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 499
score: 99.68443080357143
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 499
score: 99.67371622721355
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 499
score: 99.66707356770833
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 499
score: 99.64250235721983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 499
score: 99.6386486235119
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 500
score: 99.728271484375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 500
score: 99.712158203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 500
score: 99.69954693903688
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 500
score: 99.68435872395834
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 500
score: 99.67726440429688
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 500
score: 99.6737109375
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 500
score: 99.6670592064951
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 500
score: 99.66094070184427
patch: System . arraycopy ( y CaMeL Tmp , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 500
score: 99.642421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 500
score: 99.6386297817888
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 501
score: 99.72816297743056
patch: int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 501
score: 99.71212670110887
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 501
score: 99.69951837713069
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = b [ 1 ] ; } else { scale = b [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 501
score: 99.68433817879098
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 501
score: 99.67721354166666
patch: final double [ ] error ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ;
rank: 501
score: 99.6670592064951
patch: final double [ ] scale ; while ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 501
score: 99.66092122395834
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 501
score: 99.642333984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 501
score: 99.63861083984375
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 502
score: 99.72815975900424
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 502
score: 99.71211460658482
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 502
score: 99.6994873046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 502
score: 99.68432229662699
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 502
score: 99.67704341096699
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 502
score: 99.67357016509433
patch: final double [ ] scale = new double [ y 0 . length ] ; final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 502
score: 99.66703287760417
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 502
score: 99.66090494791666
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 502
score: 99.642333984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ $NUMBER$ ] ; }
rank: 502
score: 99.63857886904762
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 503
score: 99.72801050646552
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ; }
rank: 503
score: 99.71209927262932
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; out = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 503
score: 99.69937337239584
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; }
rank: 503
score: 99.68431332236842
patch: System . arraycopy ( a 0 , 0 , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 503
score: 99.67700623629386
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Tmp [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 503
score: 99.67355907206633
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 503
score: 99.66700215242346
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 503
score: 99.66089280985169
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 503
score: 99.64229038783482
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = System . current CaMeL Time CaMeL Millis ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 504
score: 99.72792600235849
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } }
rank: 504
score: 99.71207989386792
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] } ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 504
score: 99.69899680397727
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 504
score: 99.68423665364584
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 504
score: 99.677001953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 504
score: 99.67349609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 504
score: 99.66682278380102
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 504
score: 99.64211647727272
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ( ) ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( ) ;
rank: 504
score: 99.63857736895162
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 505
score: 99.727919921875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ; }
rank: 505
score: 99.71204647775424
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 505
score: 99.69898702330508
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = b 0 ; } else { scale = b 0 ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 505
score: 99.68421223958333
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 505
score: 99.67687536168981
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 505
score: 99.67349243164062
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 505
score: 99.6667813387784
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 505
score: 99.64209856305804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 ; }
rank: 505
score: 99.63847824622844
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 506
score: 99.72786151238208
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { { scale = new double [ y 0 . length ] ; }
rank: 506
score: 99.7119885460805
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 506
score: 99.69891948084677
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 506
score: 99.68419471153847
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 506
score: 99.67684273097827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 506
score: 99.67344313401442
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = new double [ y 0 . length ] ; }
rank: 506
score: 99.6666843580163
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ; }
rank: 506
score: 99.6607154107863
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ; first CaMeL Time = false ;
rank: 506
score: 99.64208096590909
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 507
score: 99.7278076171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 507
score: 99.71197620738636
patch: else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 507
score: 99.69854329427083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 507
score: 99.68404835668103
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 507
score: 99.67682756696429
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 507
score: 99.673349609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 507
score: 99.666640625
patch: final double [ ] scale ; if ( ( vec CaMeL Absolute CaMeL Tolerance == null ) || ( vec CaMeL Absolute CaMeL Tolerance == null ) ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 507
score: 99.64205496651786
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , null , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 507
score: 99.63844014830508
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 508
score: 99.72774465460526
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 508
score: 99.69849046610169
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ;
rank: 508
score: 99.6840069110577
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 508
score: 99.67331167367789
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance )
rank: 508
score: 99.66650390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } vec CaMeL Absolute CaMeL Tolerance ;
rank: 508
score: 99.66070346174568
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 508
score: 99.64203657670454
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 508
score: 99.638427734375
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 509
score: 99.72769601004464
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 509
score: 99.71190549616227
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 509
score: 99.69846563824153
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 509
score: 99.68380737304688
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 509
score: 99.67674719769022
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] + y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 509
score: 99.67323022959184
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 509
score: 99.6664740114796
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 509
score: 99.66064453125
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 509
score: 99.6420228247549
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance $NUMBER$ ; } else { scale = vec CaMeL Absolute CaMeL Tolerance $NUMBER$ ; } else { scale = vec CaMeL Absolute CaMeL Tolerance $NUMBER$ ;
rank: 509
score: 99.63841089709052
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 510
score: 99.72768930288461
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 510
score: 99.71180380544355
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 510
score: 99.6982421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 510
score: 99.68378409692797
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 510
score: 99.67669888200432
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 510
score: 99.67322007665095
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ;
rank: 510
score: 99.64198882004311
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 510
score: 99.63840060763889
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 511
score: 99.72765692349138
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ y 0 . length ] = scal CaMeL Absolute CaMeL Tolerance ; } else { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ;
rank: 511
score: 99.71177936422414
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 511
score: 99.69810977224576
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages - 1 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 511
score: 99.68374633789062
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 511
score: 99.673212890625
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 511
score: 99.66629028320312
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 511
score: 99.64198704769737
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 511
score: 99.63838704427083
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 512
score: 99.72745487607759
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ; }
rank: 512
score: 99.7117139472336
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 512
score: 99.69789798924181
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 512
score: 99.68372395833333
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 512
score: 99.6766690340909
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) {
rank: 512
score: 99.6732058057598
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; this . scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 512
score: 99.66042935646186
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 512
score: 99.64195421006944
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 512
score: 99.63835906982422
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 513
score: 99.72742478390957
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 513
score: 99.71170594262296
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 513
score: 99.69781901041667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; }
rank: 513
score: 99.68361058728448
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 513
score: 99.67656847895408
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; first CaMeL Time = false ;
rank: 513
score: 99.67318040497449
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; while ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 513
score: 99.6662264737216
patch: } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 513
score: 99.6419208233173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 513
score: 99.63832632211539
patch: scale = new Dummy CaMeL Step CaMeL Interpolator ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 514
score: 99.72740342881944
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 514
score: 99.711669921875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 514
score: 99.69751390360169
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ a 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 514
score: 99.68358646222015
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 514
score: 99.67649739583334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else {
rank: 514
score: 99.67317708333333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 514
score: 99.66621907552083
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 514
score: 99.66040880926724
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 514
score: 99.64171491350446
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = System . current CaMeL Time CaMeL Millis ( ) ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 514
score: 99.63832092285156
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 515
score: 99.71158272879464
patch: double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 515
score: 99.69749735169492
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 515
score: 99.68350271451271
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 515
score: 99.676474609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = true ;
rank: 515
score: 99.673154296875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } * else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 515
score: 99.66618795955883
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale . scale ( vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 515
score: 99.64170258620689
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 . 0 ; }
rank: 515
score: 99.63831829202586
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 516
score: 99.727275390625
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 516
score: 99.71156986424181
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 516
score: 99.69740988991477
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 516
score: 99.68348430765086
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 516
score: 99.67639612268519
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; try { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 516
score: 99.67302997295673
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 516
score: 99.66611550071023
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 516
score: 99.64168146306818
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 516
score: 99.63826884920636
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 517
score: 99.72724226409314
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 0 . length ] ;
rank: 517
score: 99.71156185963115
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 517
score: 99.69739583333333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 517
score: 99.68336588541666
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 517
score: 99.67635478670636
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 517
score: 99.672978515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 517
score: 99.64155016447368
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 517
score: 99.63824462890625
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 518
score: 99.72722258391204
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ 0 . length ] = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 518
score: 99.71155894886364
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 518
score: 99.69736550071023
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 518
score: 99.68335802801724
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 518
score: 99.67632480837264
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 518
score: 99.67286095252403
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } final double scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 518
score: 99.66602623980978
patch: try { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 518
score: 99.66025556144068
patch: final Runge CaMeL Kutta CaMeL Step CaMeL Interpolator ( t 0 , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 518
score: 99.6414014472336
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) . copy ( ) ;
rank: 518
score: 99.63823009672619
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 519
score: 99.71155753968254
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 519
score: 99.69718794389205
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ;
rank: 519
score: 99.68334221117425
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ; }
rank: 519
score: 99.67630859375
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else {
rank: 519
score: 99.67281400240384
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance == null ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 519
score: 99.66597493489583
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( scale == null ) { scale = new double [ y 0 . length ] ;
rank: 519
score: 99.66022359913794
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 519
score: 99.6413788377193
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 519
score: 99.63816833496094
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 520
score: 99.72717492055085
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ; }
rank: 520
score: 99.71150568181818
patch: if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 520
score: 99.69701360887096
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 520
score: 99.68333675986842
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 520
score: 99.67628795695755
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 520
score: 99.67269837622548
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 520
score: 99.665927734375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 520
score: 99.66021321614583
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 520
score: 99.641357421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 521
score: 99.72715692934783
patch: scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 521
score: 99.71149198887711
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 521
score: 99.69700445130815
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = new double [ y 0 ] [ ] ;
rank: 521
score: 99.68331593480603
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 521
score: 99.67626953125
patch: final if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 521
score: 99.6658935546875
patch: double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 521
score: 99.66002965856481
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 521
score: 99.64131747159091
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 521
score: 99.63811492919922
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 522
score: 99.72710890997024
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = new double [ y 0 . length ] ;
rank: 522
score: 99.7114501953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 522
score: 99.69686397429436
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ,
rank: 522
score: 99.68328766324628
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 522
score: 99.67626953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; }
rank: 522
score: 99.672607421875
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 522
score: 99.6658909574468
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 522
score: 99.6412353515625
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? vec CaMeL Absolute CaMeL Tolerance : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 522
score: 99.63808257004311
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 523
score: 99.72706956129808
patch: } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 523
score: 99.71143419989224
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 523
score: 99.6965564546131
patch: final double [ ] a ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 523
score: 99.68325805664062
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 523
score: 99.67259360259433
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 523
score: 99.66587201286765
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 524
score: 99.72696786556604
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 524
score: 99.69642857142857
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 524
score: 99.68321126302084
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 524
score: 99.67612884004237
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 524
score: 99.67238170695755
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 524
score: 99.66572840073529
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; . scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 524
score: 99.65994813012296
patch: compute CaMeL Derivatives ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 524
score: 99.64093137254902
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; }
rank: 524
score: 99.63795072115384
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 525
score: 99.7269137198465
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 525
score: 99.69623647836538
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 1 ] ;
rank: 525
score: 99.68311434659091
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 525
score: 99.6760784646739
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y [ 0 ] ;
rank: 525
score: 99.66572265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 525
score: 99.65985222582547
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 525
score: 99.64090265012256
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 525
score: 99.63792703919492
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 526
score: 99.72685339095744
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 526
score: 99.71140663296569
patch: else { final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 526
score: 99.69589162427326
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 526
score: 99.68308327414773
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 526
score: 99.67602999705188
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 526
score: 99.67225999098558
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; }
rank: 526
score: 99.66563197544643
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 526
score: 99.65982005635246
patch: compute CaMeL Derivatives ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 526
score: 99.640869140625
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 526
score: 99.6379158266129
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 527
score: 99.72682542067308
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new Double ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 527
score: 99.71137251420454
patch: else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 527
score: 99.69579264322917
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , null , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = a 0 . length ;
rank: 527
score: 99.68305445429104
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 527
score: 99.67597307477679
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 527
score: 99.66560393688725
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 527
score: 99.659814453125
patch: System . arraycopy ( y 0 , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 527
score: 99.64079632675438
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 527
score: 99.637890625
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 528
score: 99.7267433449074
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 528
score: 99.71127206307871
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 528
score: 99.69507223462301
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 528
score: 99.6758482689951
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 528
score: 99.67217902417453
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance , } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 528
score: 99.66559709821429
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 528
score: 99.65974934895833
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 529
score: 99.72671110733695
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 529
score: 99.71126582704741
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 529
score: 99.69503997093024
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 - 0 ] ;
rank: 529
score: 99.68302283653846
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 529
score: 99.67572985197368
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 529
score: 99.67217548076923
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 529
score: 99.66555606617646
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 529
score: 99.65966796875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 529
score: 99.64076569120763
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , null , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 529
score: 99.63786663925438
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 530
score: 99.72670200892857
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 530
score: 99.71126302083333
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 530
score: 99.69484049479166
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 530
score: 99.67566148290095
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 530
score: 99.67215670072116
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 530
score: 99.66547309027777
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 530
score: 99.64066256009616
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = true ; }
rank: 530
score: 99.63781117584746
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 531
score: 99.7266796875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } }
rank: 531
score: 99.7111580141129
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 531
score: 99.69476412259615
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 531
score: 99.68299865722656
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 531
score: 99.67562753182871
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 531
score: 99.67213295990567
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 531
score: 99.66545138888888
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 531
score: 99.65966796875
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 531
score: 99.64064243861607
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 531
score: 99.6377704326923
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 532
score: 99.72639069733796
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 532
score: 99.71104508739407
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 532
score: 99.6947521772541
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 532
score: 99.68291945684524
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 532
score: 99.67562144886364
patch: final double error = 0 ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 532
score: 99.67205004422169
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 532
score: 99.65961100260417
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 532
score: 99.64061643366227
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 533
score: 99.72629220145089
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 533
score: 99.71097506009616
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 533
score: 99.6943126860119
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] + y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 533
score: 99.68287374205508
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 533
score: 99.67562129579741
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , scale , get CaMeL Order ( ) , scale ,
rank: 533
score: 99.67202758789062
patch: final double [ ] scale = new double [ y 0 . length ] ; final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 533
score: 99.66510009765625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 533
score: 99.65959563078704
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 533
score: 99.64058140345982
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance - vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 533
score: 99.63772583007812
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 534
score: 99.72620049838362
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 534
score: 99.6941654265873
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 1 ] ;
rank: 534
score: 99.68284653172348
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ; }
rank: 534
score: 99.67559424867021
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = 0 ] ;
rank: 534
score: 99.66508888711735
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 534
score: 99.64045877659575
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = new double [ y 0 . length ] ; }
rank: 534
score: 99.6376953125
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 535
score: 99.72614655671296
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 535
score: 99.71087753563596
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 535
score: 99.69416155133929
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages - 1 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 535
score: 99.68280129354508
patch: System . arraycopy ( y 0 , 0 , y CaMeL Tmp , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 535
score: 99.66505859375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 535
score: 99.65938237028301
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 535
score: 99.64040154925847
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 535
score: 99.63763127561475
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 536
score: 99.72607421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 536
score: 99.71087239583333
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 536
score: 99.68277727971312
patch: System . arraycopy ( y 0 , 0 , y CaMeL Tmp , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 536
score: 99.67551407724056
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 536
score: 99.67193603515625
patch: scale ( new double [ y 0 . length ] ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 536
score: 99.66487630208333
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 536
score: 99.65932280441811
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 536
score: 99.64035373263889
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 537
score: 99.7260211447011
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 537
score: 99.7108642578125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 537
score: 99.69410306490384
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 537
score: 99.68276444692461
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 537
score: 99.67540785845588
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 537
score: 99.66487630208333
patch: if ( scale ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 537
score: 99.65932037870763
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 537
score: 99.64029091282895
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 . 0 ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( new double [ y 0 . length ] ) ;
rank: 537
score: 99.63761393229167
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 538
score: 99.72592859100877
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 538
score: 99.71086379716981
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; final else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 538
score: 99.69391526442308
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 538
score: 99.68270733173077
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 538
score: 99.6753926179847
patch: final double error = 0 ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ;
rank: 538
score: 99.67176444575472
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 538
score: 99.66483289930555
patch: scale ; } else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 538
score: 99.65930989583333
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 539
score: 99.72585311025944
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 539
score: 99.71083984375
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 539
score: 99.69390462239583
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 539
score: 99.6826171875
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 539
score: 99.67536530671296
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 539
score: 99.67176231971153
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale -= new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 539
score: 99.664794921875
patch: double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 539
score: 99.65927391721492
patch: System . arraycopy ( y 0 , y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 539
score: 99.64024697580645
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 540
score: 99.72584443933823
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 540
score: 99.71082356770833
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 540
score: 99.69379069010417
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 540
score: 99.67528392650463
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 540
score: 99.64022122896634
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = System . current CaMeL Time CaMeL Millis ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 540
score: 99.63755580357143
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 541
score: 99.72583912037037
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 541
score: 99.71077198093221
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 541
score: 99.69354654947917
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 541
score: 99.68258351293103
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 541
score: 99.67159449800532
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ;
rank: 541
score: 99.66475423177083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 541
score: 99.65922037760417
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 541
score: 99.64014472336065
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 541
score: 99.63752979343221
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 542
score: 99.71075339395492
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 542
score: 99.69317157451923
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 542
score: 99.68252418154762
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 542
score: 99.67524245689656
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 542
score: 99.6715207567402
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 542
score: 99.66475183823529
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 542
score: 99.65916015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ;
rank: 542
score: 99.64013671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 1 . 0 ; }
rank: 542
score: 99.63752746582031
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 543
score: 99.72579520089286
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 543
score: 99.71073887711864
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 543
score: 99.69304387019231
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 543
score: 99.6824931795635
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 543
score: 99.67522063078704
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 543
score: 99.67151118259804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 543
score: 99.66474609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 543
score: 99.64009602864583
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . clone ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . clone ( ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 543
score: 99.6374275453629
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 544
score: 99.72568766276042
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = null ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 544
score: 99.71073887711864
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 544
score: 99.69297185019842
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 544
score: 99.68248697916667
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 544
score: 99.67514474051339
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 544
score: 99.67145244891827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ;
rank: 544
score: 99.66468302408855
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scale ; }
rank: 544
score: 99.65897042410714
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 544
score: 99.64008068647541
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 544
score: 99.63739604334677
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 545
score: 99.725615234375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } }
rank: 545
score: 99.71068004261363
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 545
score: 99.69291759672619
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 545
score: 99.6824599443856
patch: System . arraycopy ( y 0 , 0 , y , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 545
score: 99.67511792452831
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 545
score: 99.67132222877359
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 545
score: 99.66465541294643
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ;
rank: 545
score: 99.6589599609375
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 545
score: 99.63990499205508
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 545
score: 99.63733782087054
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 546
score: 99.725595703125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 546
score: 99.71063956567797
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 546
score: 99.69275102459017
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 546
score: 99.68238431490384
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 546
score: 99.67507498604911
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 546
score: 99.67115196814903
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale -= vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 546
score: 99.65892712823276
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 546
score: 99.63988318810097
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 546
score: 99.63733673095703
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 547
score: 99.72555776742789
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 547
score: 99.71061731557377
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 547
score: 99.6925277709961
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 547
score: 99.6822265625
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 547
score: 99.67503551136363
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 547
score: 99.67115196814903
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 547
score: 99.66458445581897
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 547
score: 99.63984706038136
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ vec CaMeL Absolute CaMeL Tolerance ] ; }
rank: 547
score: 99.63732328869048
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 548
score: 99.7254638671875
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ;
rank: 548
score: 99.7105874115566
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale ( scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 548
score: 99.69250882056451
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 548
score: 99.68222481863839
patch: final double sum = b 0 ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 548
score: 99.67502579599056
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 548
score: 99.67108623798077
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 548
score: 99.66443120216837
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 548
score: 99.65885977909483
patch: System . arraycopy ( y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 548
score: 99.63984190742924
patch: scale ; } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 548
score: 99.63716634114583
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 549
score: 99.72543646364795
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 549
score: 99.71054997519842
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 549
score: 99.69204179067461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 549
score: 99.68221028645833
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 549
score: 99.67499831627156
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ) ;
rank: 549
score: 99.66431142769608
patch: if ( vec CaMeL Absolute CaMeL Tolerance != null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 549
score: 99.65880533854167
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 549
score: 99.63982282366071
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 549
score: 99.63713126346983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 550
score: 99.71052024147727
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 550
score: 99.6920166015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 550
score: 99.68216507523148
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 550
score: 99.6749851392663
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 550
score: 99.670947265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 550
score: 99.66429227941177
patch: final double [ ] scale ; if ( scale , scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 550
score: 99.65874467329546
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 550
score: 99.63976850665983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 550
score: 99.6371242717161
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 551
score: 99.72537530637256
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 551
score: 99.7104259672619
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 551
score: 99.6916063652664
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( ) ; }
rank: 551
score: 99.68203938802084
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 551
score: 99.67090765035377
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 551
score: 99.66414221938776
patch: } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 551
score: 99.65870012555804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 551
score: 99.63970446977459
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 551
score: 99.63711547851562
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 552
score: 99.72537076271186
patch: final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 552
score: 99.71036396329364
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 552
score: 99.69139122596154
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 552
score: 99.6820297241211
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 552
score: 99.67483181423611
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; first CaMeL Time = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 552
score: 99.67088886335785
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 552
score: 99.66402420343137
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 552
score: 99.65869140625
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 552
score: 99.63966418850806
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 552
score: 99.63706527217742
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 553
score: 99.72533275462963
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ; }
rank: 553
score: 99.71031842912946
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 553
score: 99.69121413934427
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 553
score: 99.68199157714844
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 553
score: 99.6748046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 553
score: 99.67087890625
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 553
score: 99.664013671875
patch: float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 554
score: 99.72532743566177
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = new double [ y 0 . length ] ; } } else { scale = new double [ y 0 . length ] ;
rank: 554
score: 99.7102919756356
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 554
score: 99.69113409323771
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 554
score: 99.68191856971154
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 554
score: 99.6747050382653
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 554
score: 99.67086087740384
patch: } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 554
score: 99.66399274553571
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scale ; }
rank: 554
score: 99.65868298760776
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 554
score: 99.63952414772727
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ; }
rank: 554
score: 99.63695447198276
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 555
score: 99.72530577612704
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 555
score: 99.7102287046371
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 555
score: 99.69108606557377
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 555
score: 99.68188062764831
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 555
score: 99.674658203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 555
score: 99.67084861288265
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 555
score: 99.65862519862289
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 555
score: 99.63950892857143
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 555
score: 99.63688413558468
patch: interpolator . store CaMeL Time ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 556
score: 99.72530033903301
patch: { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 556
score: 99.71011302510246
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 556
score: 99.69090221774194
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 556
score: 99.68187313988095
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 556
score: 99.67083864795919
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 556
score: 99.66394372888513
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 556
score: 99.65860689603366
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 556
score: 99.63947975852273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , new double [ y 0 . length ] , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 556
score: 99.6368759931144
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 557
score: 99.72528483072917
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 557
score: 99.71010044642857
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 557
score: 99.69088646673387
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 557
score: 99.68184988839286
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 557
score: 99.67434256417411
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 557
score: 99.6707602446934
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; }
rank: 557
score: 99.66375
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 557
score: 99.65855532786885
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 557
score: 99.639453125
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 558
score: 99.72526041666667
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ } ; }
rank: 558
score: 99.71008752893519
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 558
score: 99.69086538461538
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 558
score: 99.68184661865234
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 558
score: 99.67434210526316
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 558
score: 99.67073567708333
patch: final double [ ] scale = new double [ y 0 . length ] ; int scale = vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 558
score: 99.65854317801339
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 558
score: 99.63941217237904
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) . copy ( ) ; }
rank: 559
score: 99.72519712094908
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 559
score: 99.69070434570312
patch: y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 559
score: 99.68184407552083
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 559
score: 99.67419663915095
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] - y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 559
score: 99.66362072172619
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 559
score: 99.6393806703629
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 560
score: 99.7251727764423
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; / * { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 560
score: 99.6906001984127
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 560
score: 99.68181818181819
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 560
score: 99.6741782134434
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] ;
rank: 560
score: 99.67055963010205
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 560
score: 99.66361328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 560
score: 99.65839301215277
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 560
score: 99.63933195891204
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance - vec CaMeL Absolute CaMeL Tolerance ;
rank: 560
score: 99.63673502604166
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 561
score: 99.7251609519676
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 561
score: 99.70997869318182
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 561
score: 99.69033668154762
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 561
score: 99.68181242766204
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 561
score: 99.67417689732143
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance + 1 ] [ 0 ] ;
rank: 561
score: 99.67046760110294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 561
score: 99.66353352864583
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 561
score: 99.6583603681144
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 561
score: 99.63921440972223
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 561
score: 99.63671875
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 562
score: 99.72515625
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 562
score: 99.70994349888393
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 562
score: 99.69013351690573
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = 0 ;
rank: 562
score: 99.68175688244048
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 562
score: 99.6740085767663
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 562
score: 99.67044700766509
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 562
score: 99.663388671875
patch: final double [ ] scale ; if ( ( vec CaMeL Absolute CaMeL Tolerance == null ) && ( vec CaMeL Absolute CaMeL Tolerance != null ) ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 562
score: 99.6583311987705
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 562
score: 99.6391015625
patch: scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 562
score: 99.63667515345982
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 563
score: 99.72510669849537
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 563
score: 99.7099365234375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 563
score: 99.68995666503906
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 563
score: 99.68153303760593
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 563
score: 99.67399379185268
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 563
score: 99.6631529564951
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; scale = new double [ y 0 . length ] ;
rank: 563
score: 99.63907596982759
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = null ; }
rank: 563
score: 99.63666823814656
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 564
score: 99.72508769132654
patch: final int [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 564
score: 99.6895282451923
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 564
score: 99.6815166170635
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 564
score: 99.67396881620763
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 564
score: 99.67015165441177
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 564
score: 99.6630078125
patch: try { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 564
score: 99.6366359904661
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 565
score: 99.72508052357456
patch: final double scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 565
score: 99.70986990201271
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : scal CaMeL Absolute CaMeL Tolerance ;
rank: 565
score: 99.6895251664959
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 565
score: 99.68146784855769
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 565
score: 99.67388556985294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , scale ,
rank: 565
score: 99.66280691964286
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 565
score: 99.65816945043103
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 565
score: 99.63898835358796
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; vec CaMeL Absolute CaMeL Tolerance = true ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; }
rank: 566
score: 99.72507642663044
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 566
score: 99.68948514344262
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 566
score: 99.68126085069444
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 566
score: 99.67380859375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 566
score: 99.67011534492924
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ; }
rank: 566
score: 99.6627909342448
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 566
score: 99.65815261314656
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 566
score: 99.63896668632076
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 566
score: 99.63660430908203
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 567
score: 99.72495680588942
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } }
rank: 567
score: 99.70981530975877
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 567
score: 99.68940587197581
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 567
score: 99.6812411221591
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 567
score: 99.67377761314656
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 567
score: 99.670107421875
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 567
score: 99.66278913909314
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 567
score: 99.63892802254098
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , null ) ;
rank: 568
score: 99.72489497346699
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 568
score: 99.68927702356558
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 568
score: 99.68123800712719
patch: System . arraycopy ( a 0 , 0 , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 568
score: 99.67365944602273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 568
score: 99.67008463541667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 568
score: 99.662705078125
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 568
score: 99.65812174479167
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 568
score: 99.63883463541667
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , scale ) ;
rank: 569
score: 99.72489107572116
patch: { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 569
score: 99.70981270926339
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 569
score: 99.6891649590164
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 569
score: 99.68120574951172
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 569
score: 99.67363449622844
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 569
score: 99.67001155931122
patch: else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 569
score: 99.662470703125
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 569
score: 99.65805489676339
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 569
score: 99.63882559317129
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 569
score: 99.63651275634766
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 570
score: 99.72481595552884
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 570
score: 99.70979817708333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 570
score: 99.68900923295455
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 570
score: 99.68116889565678
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 570
score: 99.67356329449153
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 570
score: 99.66995004507211
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 570
score: 99.6580322265625
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 570
score: 99.63879633884804
patch: final double [ ] scale = scal CaMeL Absolute CaMeL Tolerance ) ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 570
score: 99.63644205729166
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 571
score: 99.72474772135416
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 571
score: 99.7097900390625
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 571
score: 99.68851928710937
patch: final double [ ] scale ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ;
rank: 571
score: 99.68116889565678
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 571
score: 99.673486328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 571
score: 99.66994030070755
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 571
score: 99.662275390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 571
score: 99.638671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 572
score: 99.7247340425532
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 1 . length ] ;
rank: 572
score: 99.70978655133929
patch: if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 572
score: 99.68844454405738
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 572
score: 99.68108258928571
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations ) ; }
rank: 572
score: 99.6734645113032
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else {
rank: 572
score: 99.66993183992346
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 572
score: 99.66224736752717
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale ;
rank: 572
score: 99.63866191007654
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] ) ; }
rank: 572
score: 99.63639856557377
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 573
score: 99.72463989257812
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 573
score: 99.70966628502156
patch: double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 573
score: 99.68765258789062
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 573
score: 99.68103648040254
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 573
score: 99.67342703683036
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 573
score: 99.66987400428921
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 573
score: 99.66222426470588
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 573
score: 99.65785047743056
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 573
score: 99.63863431490384
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 573
score: 99.63629913330078
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 574
score: 99.7245665433114
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 574
score: 99.70965909090908
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 574
score: 99.67338590801887
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 574
score: 99.66985212053571
patch: } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 574
score: 99.6621875
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 574
score: 99.6385967548077
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , 0 , scale ) ;
rank: 575
score: 99.72455078125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } { scale = new double [ y 0 . length ] ;
rank: 575
score: 99.70965676229508
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 575
score: 99.68670169890873
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 . length ] ;
rank: 575
score: 99.68089245211694
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 575
score: 99.67338505497685
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 575
score: 99.66980919471153
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ;
rank: 575
score: 99.66216796875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 575
score: 99.657783203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 575
score: 99.63858768857759
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = new double [ y 0 . length ] ;
rank: 575
score: 99.6362537202381
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 576
score: 99.72455044450432
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 576
score: 99.70965021306819
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 576
score: 99.6866943359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = new double [ y 0 ] ; }
rank: 576
score: 99.68088751324153
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 576
score: 99.67336647727272
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 576
score: 99.66980698529412
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 576
score: 99.6620563009511
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 576
score: 99.65771484375
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 576
score: 99.63847824622844
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 576
score: 99.63623834425404
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 577
score: 99.72454364483173
patch: new double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 577
score: 99.70956716229838
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 577
score: 99.68668870192307
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 577
score: 99.680849609375
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 577
score: 99.67323225635593
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 577
score: 99.66203278186275
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 577
score: 99.63844014830508
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 577
score: 99.63622205010776
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 578
score: 99.72453567216981
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new Double ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 578
score: 99.7095458984375
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 578
score: 99.68650742827869
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 578
score: 99.67321356411638
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 578
score: 99.66202965561224
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; final scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 578
score: 99.65766518802967
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 578
score: 99.6383856411638
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 578
score: 99.63620476973684
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 579
score: 99.7245205965909
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 579
score: 99.70951267930327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 579
score: 99.68622011126894
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 579
score: 99.68074824892241
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 579
score: 99.67314801897321
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 579
score: 99.66972840507076
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 579
score: 99.66183471679688
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = scale [ y 0 . length ] ;
rank: 579
score: 99.65765080686475
patch: handler . reinitialize ( this , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 579
score: 99.6383837090164
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } }
rank: 579
score: 99.63618469238281
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 580
score: 99.72450405943627
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } else { scale = new double [ 0 . length ] ;
rank: 580
score: 99.70948040674604
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 580
score: 99.6861632300205
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 580
score: 99.6807391826923
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 580
score: 99.67312720514113
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 580
score: 99.6697099793632
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 580
score: 99.66183338994566
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = scale ; }
rank: 580
score: 99.65759070444915
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 580
score: 99.63822428385417
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; vec CaMeL Absolute CaMeL Tolerance . copy ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 580
score: 99.6361064608135
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 581
score: 99.72441590507076
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 581
score: 99.70943648726852
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 581
score: 99.68602035984848
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 581
score: 99.68072706653226
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 581
score: 99.67310049019608
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y - 1 ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 581
score: 99.66956505408653
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 581
score: 99.6617506377551
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = new double [ y 0 . length ] ;
rank: 581
score: 99.65748697916666
patch: System . arraycopy ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 581
score: 99.63821726831897
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = null ; }
rank: 581
score: 99.63610276442307
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 582
score: 99.72439453125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } } else { scale = new double [ y 0 . length ] ; }
rank: 582
score: 99.70943580483491
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 582
score: 99.68595765128968
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 582
score: 99.68070913461538
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; first CaMeL Time = false ;
rank: 582
score: 99.673046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = b [ 0 ] [ 0 ] ;
rank: 582
score: 99.66948993389423
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 582
score: 99.66171875
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 582
score: 99.6574286099138
patch: if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 582
score: 99.63821669756356
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( ) ; }
rank: 582
score: 99.6360077439693
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 583
score: 99.72439236111111
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 583
score: 99.70942034040179
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 583
score: 99.68495736471037
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = new double [ y 0 ] [ ] ;
rank: 583
score: 99.68068033854166
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 583
score: 99.6729709201389
patch: final double error = 0 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ;
rank: 583
score: 99.669482421875
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 583
score: 99.6617072610294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale += new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 583
score: 99.6573974609375
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 583
score: 99.63809407552084
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 583
score: 99.63600316540948
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 584
score: 99.72433172487744
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 584
score: 99.70941569010417
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 584
score: 99.68463331653226
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 584
score: 99.68065534319196
patch: final double error = b 0 ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 584
score: 99.6729260460805
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 584
score: 99.669384765625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { vec CaMeL Absolute CaMeL Tolerance ;
rank: 584
score: 99.66163126627605
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 584
score: 99.65734663165983
patch: compute CaMeL Derivatives ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 584
score: 99.63809390943878
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 584
score: 99.63597106933594
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 585
score: 99.72429142441861
patch: new double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 585
score: 99.70940163352273
patch: double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 585
score: 99.68403439405488
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = new double [ y 0 ] ;
rank: 585
score: 99.68034957627118
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 585
score: 99.67289595170455
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 585
score: 99.669375
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 585
score: 99.66162109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length 1 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 585
score: 99.65721855788935
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 586
score: 99.72421322228773
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 586
score: 99.7093994140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 586
score: 99.68380301339286
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 586
score: 99.6803038550205
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 586
score: 99.67281087239583
patch: final double error = 0 ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ;
rank: 586
score: 99.6693699048913
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 586
score: 99.66156914893617
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 586
score: 99.65719892393868
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 586
score: 99.63791725852273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 586
score: 99.63589680989584
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 587
score: 99.7241796875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 587
score: 99.70937965029762
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 587
score: 99.68333023313492
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 587
score: 99.66924579326923
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 587
score: 99.66154450061275
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 587
score: 99.65716863082628
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 587
score: 99.63786399147727
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance [ 0 ] ) ;
rank: 588
score: 99.723955078125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 588
score: 99.70934024099576
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 588
score: 99.68323722718254
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 588
score: 99.68018378586065
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 588
score: 99.67263454861111
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; }
rank: 588
score: 99.6692364032452
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 588
score: 99.66151936848958
patch: final Double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 588
score: 99.63786399147727
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , new double [ y 0 . length ] , 0 , scale ) ;
rank: 588
score: 99.63572505482456
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 589
score: 99.72388155955188
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 589
score: 99.70930397727273
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 589
score: 99.68307396673387
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 589
score: 99.68008773053279
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 589
score: 99.67260298295454
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 589
score: 99.66923429528062
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 589
score: 99.66151577818627
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale . scale ( scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 589
score: 99.65699442879098
patch: compute CaMeL Derivatives ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 589
score: 99.63784354073661
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 589
score: 99.63570343501983
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 590
score: 99.72387216605392
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 590
score: 99.70928230932203
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 590
score: 99.68266225961538
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 590
score: 99.68006819385593
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 590
score: 99.67251699942129
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance [ 0 ] == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 590
score: 99.66919424019608
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y $NUMBER$ . length ] ;
rank: 590
score: 99.66146790747548
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 590
score: 99.6569580078125
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 590
score: 99.63782159213362
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 591
score: 99.72386853448276
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } }
rank: 591
score: 99.70924535290948
patch: try { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 591
score: 99.68250274658203
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 591
score: 99.68006441885964
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 591
score: 99.6724853515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance >= null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 591
score: 99.669189453125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } * else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 591
score: 99.66136259191177
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 591
score: 99.65693010602679
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 591
score: 99.63775831653226
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = y 0 . length ; }
rank: 592
score: 99.72386823381696
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 592
score: 99.7091844902664
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 592
score: 99.68226623535156
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 592
score: 99.6800417432598
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ; }
rank: 592
score: 99.67238943917411
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 592
score: 99.6688944498698
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 592
score: 99.6612040201823
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 592
score: 99.65681675502232
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 592
score: 99.63775165264423
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = new double [ y 0 . length ] ;
rank: 592
score: 99.63566641971983
patch: scale ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 593
score: 99.72386259191177
patch: scale = if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 593
score: 99.7091796875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale += vec CaMeL Absolute CaMeL Tolerance ; }
rank: 593
score: 99.68212890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 593
score: 99.68003402217742
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 593
score: 99.67238011853448
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , forward , get CaMeL Order ( ) ,
rank: 593
score: 99.66889105902777
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = new double [ y 0 . length ] ; }
rank: 593
score: 99.66114342730978
patch: final int [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 593
score: 99.65671115451389
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 593
score: 99.63774256552419
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ vec CaMeL Absolute CaMeL Tolerance ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ vec CaMeL Absolute CaMeL Tolerance ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 593
score: 99.6356594279661
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 594
score: 99.72384878305289
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 594
score: 99.70916341145833
patch: final Object [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 594
score: 99.68194861778846
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 594
score: 99.67996888241525
patch: System . arraycopy ( a 0 , 0 , y , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 594
score: 99.67233564268868
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 594
score: 99.66883263221153
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 594
score: 99.6609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 594
score: 99.65664724576271
patch: final Runge CaMeL Kutta CaMeL Step CaMeL Interpolator ( t 0 , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 594
score: 99.63768730788935
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 594
score: 99.63558756510416
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 595
score: 99.72367350260417
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 595
score: 99.70909463205645
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) {
rank: 595
score: 99.68191856971154
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 595
score: 99.6799560546875
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 595
score: 99.672265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 595
score: 99.6688157684949
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ;
rank: 595
score: 99.66075880984043
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale ; }
rank: 595
score: 99.65658619364754
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 595
score: 99.63762958233173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = null ; } else { scale = new double [ y 0 . length ] ; }
rank: 596
score: 99.72365764036017
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 596
score: 99.70901007401316
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 596
score: 99.68184988839286
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 596
score: 99.67992322198276
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 596
score: 99.67226193985849
patch: final double [ ] error ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 596
score: 99.668681640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 596
score: 99.66053602430556
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 596
score: 99.63759765625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 597
score: 99.68182473104508
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 597
score: 99.67978172971492
patch: System . arraycopy ( y 0 , 0 , y CaMeL Dot CaMeL K [ 0 ] , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 597
score: 99.67217145647321
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , get CaMeL Order ( ) , scale ,
rank: 597
score: 99.66867065429688
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 597
score: 99.660517578125
patch: final double [ ] scale ; if ( this . vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 597
score: 99.63753587372449
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 597
score: 99.63551330566406
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 598
score: 99.72356832252359
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ; }
rank: 598
score: 99.68094519412878
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 598
score: 99.67975484913794
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 598
score: 99.67214626736111
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance [ 0 ] == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 598
score: 99.66866361177884
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ null ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 598
score: 99.66050211588542
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ;
rank: 598
score: 99.63749668961864
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 598
score: 99.63549404456967
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 599
score: 99.70893297697368
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 599
score: 99.68064926609848
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 599
score: 99.67206862877156
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Tmp [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; }
rank: 599
score: 99.66863544170673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 599
score: 99.66044714095744
patch: final int [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 599
score: 99.65632576778017
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 599
score: 99.63748046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 599
score: 99.63543701171875
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 600
score: 99.72348813657408
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 600
score: 99.70893012152777
patch: if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 600
score: 99.68060803022541
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , false ) ;
rank: 600
score: 99.67964935302734
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 600
score: 99.67203495420259
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 600
score: 99.66861979166667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 600
score: 99.6601861447704
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 600
score: 99.65627401383196
patch: handler . reinitialize ( this , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 600
score: 99.63741749730603
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ ) ] ; }
rank: 600
score: 99.63543701171875
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 601
score: 99.72348458426339
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 601
score: 99.68021647135417
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 601
score: 99.67964812247983
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 601
score: 99.67201450892857
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 601
score: 99.66848575367646
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . $NUMBER$ ] ;
rank: 601
score: 99.66017617984694
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 601
score: 99.65625921285377
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 601
score: 99.63735525948661
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ ; }
rank: 601
score: 99.63543701171875
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 602
score: 99.70888671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ; }
rank: 602
score: 99.68009827628968
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 602
score: 99.67952473958333
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 602
score: 99.67193027712264
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 602
score: 99.66015625
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 602
score: 99.65620640345982
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 602
score: 99.63734266493056
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 602
score: 99.63540649414062
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 603
score: 99.72339311079546
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 603
score: 99.7088623046875
patch: else { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 603
score: 99.67945911038306
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 603
score: 99.66845703125
patch: } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 603
score: 99.66010837928921
patch: float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 603
score: 99.65610437225877
patch: System . arraycopy ( y 0 , y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 603
score: 99.6372790727459
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ;
rank: 603
score: 99.63529459635417
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 604
score: 99.7233564268868
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 604
score: 99.70882975260416
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 604
score: 99.67944711538462
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 604
score: 99.67940398185483
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 604
score: 99.67184974407327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance >= null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 604
score: 99.668427734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) scale = new double [ y 0 . length ] ;
rank: 604
score: 99.660107421875
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 604
score: 99.65605788934427
patch: handler . reinitialize ( this , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 604
score: 99.63725668697033
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 604
score: 99.63524563029661
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 605
score: 99.72334558823529
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 605
score: 99.67939309512867
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 605
score: 99.67933654785156
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 605
score: 99.671826171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 605
score: 99.66836128982843
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 605
score: 99.66009521484375
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 605
score: 99.6371600811298
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 605
score: 99.63521575927734
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 606
score: 99.7233417217548
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 606
score: 99.70880011792453
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 606
score: 99.67914663461538
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 606
score: 99.67907321068549
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 606
score: 99.67181640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 606
score: 99.66826171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 606
score: 99.66008029513888
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 606
score: 99.65594161184211
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 606
score: 99.63715376420454
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 606
score: 99.63514631885593
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 607
score: 99.72330416165866
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new float [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 607
score: 99.67903912653688
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 607
score: 99.67872668850806
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 607
score: 99.67176164899554
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 607
score: 99.6682451356132
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 607
score: 99.66002400716145
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 607
score: 99.65580958946079
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 607
score: 99.63714909957628
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , new double [ y 0 . length ] , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 607
score: 99.63512149099576
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 608
score: 99.72323665978773
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 608
score: 99.70874837239583
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 608
score: 99.67884826660156
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; first CaMeL Time = false ;
rank: 608
score: 99.67845892137096
patch: y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 608
score: 99.67167637711864
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 608
score: 99.66823592275944
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 608
score: 99.65996759588069
patch: } else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 608
score: 99.6557196255388
patch: if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 608
score: 99.63711280153508
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance - new double [ y 0 . length ] ;
rank: 608
score: 99.63508838718221
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 609
score: 99.7232157389323
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 609
score: 99.67875744047619
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 609
score: 99.67156878972457
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 609
score: 99.65996476715686
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 609
score: 99.65571812220982
patch: System . arraycopy ( y 0 , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 609
score: 99.63710600754311
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 610
score: 99.72305152529762
patch: int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 610
score: 99.7086241675205
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 610
score: 99.67850281762296
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 610
score: 99.67778015136719
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 610
score: 99.67156351023706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 610
score: 99.66820227581522
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 610
score: 99.65994188262195
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 610
score: 99.65570068359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 610
score: 99.63709758890086
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ y ] ; }
rank: 610
score: 99.63506673177083
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 611
score: 99.722939453125
patch: { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 611
score: 99.7085822610294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 611
score: 99.67842684659091
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 611
score: 99.6774384469697
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 611
score: 99.67155238560268
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 611
score: 99.66819254557292
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 611
score: 99.65992705676021
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ;
rank: 611
score: 99.63706752232143
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , ;
rank: 611
score: 99.63504356971154
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 612
score: 99.72291324013158
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 612
score: 99.70857599431818
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = Math . abs ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 612
score: 99.67838541666667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 612
score: 99.67657752403846
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 612
score: 99.67142740885417
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 612
score: 99.6680357689951
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) } scale = new double [ y 0 . length ] ;
rank: 612
score: 99.65988817401961
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = new double [ y 0 . length ] ;
rank: 612
score: 99.65546332465277
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 612
score: 99.63704952116936
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 612
score: 99.63501364087301
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 613
score: 99.72289134837963
patch: if ( this . vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 613
score: 99.70857186153017
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 613
score: 99.6783447265625
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 613
score: 99.67647429435483
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ; }
rank: 613
score: 99.67142039331897
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 613
score: 99.65988498263889
patch: final double [ ] scale ; if ( scale , scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 613
score: 99.63704427083333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 614
score: 99.72288657134433
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 614
score: 99.70852426382211
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 614
score: 99.67831526131465
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 614
score: 99.67598276289682
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 614
score: 99.67132927389706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } first CaMeL Time = false ; }
rank: 614
score: 99.66794111143868
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ null ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 614
score: 99.63684288930085
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 614
score: 99.63493114406779
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 615
score: 99.72275954026442
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; ; } else { scale = new double [ y 0 . length ] ;
rank: 615
score: 99.70846407530738
patch: final Object [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 615
score: 99.67829026442308
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 615
score: 99.67567099294355
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 615
score: 99.67123046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 615
score: 99.65976371017157
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 615
score: 99.63679750504032
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 615
score: 99.6348896329365
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 616
score: 99.72266466864224
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 616
score: 99.70840505826271
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 616
score: 99.67828158674568
patch: scale = ( double [ ] [ ] ) initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 616
score: 99.6754867311508
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ stages ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 616
score: 99.67116855053192
patch: if ( ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 616
score: 99.6678825827206
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . y ] ;
rank: 616
score: 99.65972900390625
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 616
score: 99.65520894752359
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 616
score: 99.6367919921875
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 616
score: 99.63486638144842
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 617
score: 99.72262137276786
patch: double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 617
score: 99.70839533730158
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 617
score: 99.67826403601696
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 617
score: 99.67452355587122
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] ;
rank: 617
score: 99.67116380774456
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 617
score: 99.66787906568878
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 617
score: 99.65966796875
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 617
score: 99.6366717998798
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 617
score: 99.63485225554436
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 618
score: 99.72261622694673
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 618
score: 99.70837195444915
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 618
score: 99.67823093220339
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 618
score: 99.67401123046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 618
score: 99.67108050847457
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 618
score: 99.66778449292453
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 618
score: 99.65965735394022
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 618
score: 99.65516246448864
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 618
score: 99.63660061743951
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 618
score: 99.63484191894531
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 619
score: 99.72253618084017
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 619
score: 99.70829906798245
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 619
score: 99.67823053175404
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 619
score: 99.673828125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 619
score: 99.66778094951923
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 619
score: 99.65963924632354
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 619
score: 99.6551393995098
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 619
score: 99.63656721443965
patch: scale = 0 . 0 ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 620
score: 99.72249073093221
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 620
score: 99.70829050164474
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 620
score: 99.67816162109375
patch: final double error = b 0 ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 620
score: 99.67365534855769
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 620
score: 99.66778094951923
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 620
score: 99.659638671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? $NUMBER$ : vec CaMeL Absolute CaMeL Tolerance ;
rank: 620
score: 99.65513274629237
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 620
score: 99.63652663934427
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 620
score: 99.63478217690678
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 621
score: 99.72248046875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 621
score: 99.6781005859375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp ) ;
rank: 621
score: 99.67345797631049
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 621
score: 99.670791015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = null ;
rank: 621
score: 99.6677754720052
patch: else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 621
score: 99.65957222732843
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 621
score: 99.65510475852273
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 621
score: 99.63641980229592
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 621
score: 99.63475720635776
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == 0 ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 622
score: 99.72246636284723
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new Double ( y , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 622
score: 99.70827196465164
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; while ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 622
score: 99.67801920572917
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 622
score: 99.67319927793561
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ;
rank: 622
score: 99.67063871343085
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 622
score: 99.66774854473039
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 622
score: 99.65944010416666
patch: final double [ ] scale ; double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 622
score: 99.65510310683139
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 622
score: 99.63636610243056
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 623
score: 99.72245456861413
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 623
score: 99.70826939174107
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 623
score: 99.67800748146186
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 623
score: 99.67308407738095
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] + y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 623
score: 99.67061941964286
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 623
score: 99.6676953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale += vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 623
score: 99.65940163352273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } finally { scale = new double [ y 0 . length ] ; }
rank: 623
score: 99.65509664601294
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 623
score: 99.6363645067402
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 623
score: 99.63470669450432
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 624
score: 99.72238991477273
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 624
score: 99.70823511584052
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 624
score: 99.67799535290948
patch: scale = ( double [ ] [ ] ) initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 624
score: 99.6730720766129
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 624
score: 99.67059659090908
patch: final double error = 0 ; if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 624
score: 99.66769109987744
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ;
rank: 624
score: 99.6593526204427
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 624
score: 99.65505545479911
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 624
score: 99.63627115885417
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 624
score: 99.63467458951271
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 625
score: 99.7082015749008
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 625
score: 99.67793299788136
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 625
score: 99.6730720766129
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 625
score: 99.67058454241071
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 625
score: 99.667666015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 625
score: 99.65934909119898
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 625
score: 99.655029296875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ;
rank: 625
score: 99.63623046875
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 626
score: 99.70816790471312
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 626
score: 99.67791047643442
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 626
score: 99.67300119707662
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 626
score: 99.67045261548913
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 626
score: 99.66763070913461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 626
score: 99.6592508951823
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 626
score: 99.6549423993644
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 626
score: 99.63461836557539
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 627
score: 99.72225900423729
patch: final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 627
score: 99.70814957157258
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 627
score: 99.67786096643519
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 627
score: 99.6728744506836
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 627
score: 99.6676025390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 627
score: 99.65916015625
patch: double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 627
score: 99.63616426112289
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ vec CaMeL Absolute CaMeL Tolerance ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 627
score: 99.6345655097336
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 628
score: 99.72222028459821
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 628
score: 99.7081448739035
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 628
score: 99.67785223599138
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 628
score: 99.67257690429688
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ;
rank: 628
score: 99.67024739583333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 628
score: 99.65915934244792
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 629
score: 99.70809884798729
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 629
score: 99.67782541048729
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 629
score: 99.67211126512096
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 629
score: 99.66758181014151
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 629
score: 99.6591015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 629
score: 99.65485136387711
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 629
score: 99.63608484100877
patch: scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 629
score: 99.63452935987904
patch: interpolator . store CaMeL Time ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 630
score: 99.7220458984375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 1 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 630
score: 99.70803306842673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 630
score: 99.67778240266394
patch: System . arraycopy ( y 0 , 0 , y CaMeL Tmp , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 630
score: 99.67098506804436
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ vec CaMeL Absolute CaMeL Tolerance ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 630
score: 99.67017443426724
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New += initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 630
score: 99.65906613372093
patch: final int [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 630
score: 99.65482653601696
patch: final Runge CaMeL Kutta CaMeL Step CaMeL Interpolator ( t 0 , t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 630
score: 99.63607584635416
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 . 0 ;
rank: 631
score: 99.722001953125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 631
score: 99.7080314390121
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 631
score: 99.67774237961065
patch: System . arraycopy ( y 0 , 0 , y CaMeL Tmp , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 631
score: 99.67083082932692
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 631
score: 99.67009866648706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , false , get CaMeL Order ( ) ,
rank: 631
score: 99.66749924879808
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ;
rank: 631
score: 99.65902024872449
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 631
score: 99.6360185731132
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 631
score: 99.63448546362704
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 632
score: 99.72194191261575
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 632
score: 99.70802525111607
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 632
score: 99.67766067216981
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 632
score: 99.67049153645833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 632
score: 99.67006138392857
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) .
rank: 632
score: 99.667353515625
patch: } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 632
score: 99.65898038903062
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 632
score: 99.65464446504237
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 632
score: 99.63591828893442
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 632
score: 99.63448424258475
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 633
score: 99.72192881058673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 633
score: 99.70801608845339
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 633
score: 99.67757936507937
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 633
score: 99.6700439453125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New += initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 633
score: 99.67000579833984
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 633
score: 99.6673464307598
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 633
score: 99.65461531929348
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 633
score: 99.6358203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , null ) ;
rank: 634
score: 99.7080078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 634
score: 99.67754720052083
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 634
score: 99.66984477796052
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 634
score: 99.65884088010205
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 634
score: 99.65450032552083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 634
score: 99.6344793911638
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 635
score: 99.72185202205883
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 635
score: 99.7079649808114
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 635
score: 99.67752747616525
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 635
score: 99.6699888939951
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Tmp [ 0 ] [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 635
score: 99.66976165771484
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 635
score: 99.66726449819711
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 635
score: 99.65883382161458
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 635
score: 99.63570851293103
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 635
score: 99.63433743990385
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 636
score: 99.72183663504464
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 636
score: 99.70787605406746
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; / } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 636
score: 99.67752130681818
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 636
score: 99.66998401988636
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 636
score: 99.66971261160714
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 636
score: 99.667236328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; try { scale = new double [ y 0 . length ] ;
rank: 636
score: 99.658798828125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 636
score: 99.65449549788136
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 636
score: 99.63569253177967
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = new double [ y 0 . length ] ; }
rank: 636
score: 99.63430989583334
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 637
score: 99.721796875
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 637
score: 99.70787311422414
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 637
score: 99.67750308388158
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 637
score: 99.66970612281976
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 637
score: 99.66964721679688
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 637
score: 99.66721141581633
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 637
score: 99.6587775735294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( scale == scal CaMeL Absolute CaMeL Tolerance ) { scale = new double [ y 0 . length ] ;
rank: 637
score: 99.65446239406779
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 637
score: 99.63562632415254
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 638
score: 99.72179645040761
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ;
rank: 638
score: 99.67748623206967
patch: System . arraycopy ( a 0 , 0 , y CaMeL Tmp , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 638
score: 99.66960299744898
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 638
score: 99.66930183531746
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 638
score: 99.6671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 638
score: 99.65872012867646
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 638
score: 99.65436308262711
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 638
score: 99.6356201171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 638
score: 99.63422475961538
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 639
score: 99.72172489872685
patch: new double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 639
score: 99.70780304939517
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 639
score: 99.67739335317461
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 639
score: 99.66959110383064
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 639
score: 99.6692157451923
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 639
score: 99.66716723172169
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale -= new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 639
score: 99.65871310763889
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length + $NUMBER$ ] ; } else { scale = new double [ y 0 . length ] ;
rank: 639
score: 99.65430515095339
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 639
score: 99.63560546875
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 639
score: 99.63419342041016
patch: System . arraycopy ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 640
score: 99.72159677181604
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ 1 . length ] ;
rank: 640
score: 99.70773565573771
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 640
score: 99.67734555844908
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 640
score: 99.66949462890625
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 640
score: 99.66907501220703
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K ,
rank: 640
score: 99.66710180165816
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 640
score: 99.6586201985677
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 640
score: 99.65426002358491
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 640
score: 99.63552701271186
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 641
score: 99.70772750289352
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 641
score: 99.67733028017241
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 641
score: 99.6693115234375
patch: final double error = 0 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else {
rank: 641
score: 99.66876705109127
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 . length ] ;
rank: 641
score: 99.66707190688776
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 641
score: 99.6586052389706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = 0 . [ y 0 . length ] ;
rank: 641
score: 99.6542499248798
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 641
score: 99.63551488415948
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 641
score: 99.6341552734375
patch: interpolator . store CaMeL Time ( y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 642
score: 99.72146922144397
patch: final double scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 642
score: 99.67732599431818
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 642
score: 99.66928498641305
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = a [ 0 ] [ 0 ] ; }
rank: 642
score: 99.66862487792969
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 642
score: 99.66705791766827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 642
score: 99.65850949754902
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 642
score: 99.65413707386364
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 642
score: 99.63548473011363
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 642
score: 99.63409830729167
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 643
score: 99.72141810825893
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 643
score: 99.70755955430327
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 643
score: 99.67721058238637
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 643
score: 99.6684424556903
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 . length ] ;
rank: 643
score: 99.66701982606132
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale -= vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 643
score: 99.65848795572917
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 643
score: 99.65413692079741
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 643
score: 99.63546806469299
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 643
score: 99.6340752963362
patch: scale ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 644
score: 99.72129720052084
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 644
score: 99.70755208333334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 644
score: 99.67715505826271
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 644
score: 99.66911910752118
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 644
score: 99.66734525240385
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 644
score: 99.6669921875
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ;
rank: 644
score: 99.65404859639831
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 645
score: 99.7212910554847
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 645
score: 99.70752840909091
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = Double . max ( scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 645
score: 99.67715158770162
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 645
score: 99.66910282258064
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 645
score: 99.66730769230769
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 645
score: 99.66697225765306
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 645
score: 99.6583027742347
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 645
score: 99.65401785714286
patch: compute CaMeL Derivatives ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 645
score: 99.63530815972223
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 ; }
rank: 646
score: 99.72113247575432
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 646
score: 99.70740198206019
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ; }
rank: 646
score: 99.67714507004311
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 646
score: 99.66908707157258
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 646
score: 99.66718292236328
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 . length ] ; }
rank: 646
score: 99.66685994466145
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 646
score: 99.6582743326823
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 646
score: 99.65374755859375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 646
score: 99.63528701006356
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 646
score: 99.63388009798729
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 647
score: 99.72112926136364
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 647
score: 99.67710876464844
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 647
score: 99.66907755533855
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Tmp [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 647
score: 99.66695404052734
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 647
score: 99.66684857536765
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; try { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 647
score: 99.65823364257812
patch: final double [ ] scale ; if ( scale == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 647
score: 99.65372869318182
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 647
score: 99.63526247258773
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 648
score: 99.72110849056604
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = new double [ y 1 . length ] ;
rank: 648
score: 99.70738807091347
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = this . vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 648
score: 99.67709455818965
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 648
score: 99.66906072443182
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 648
score: 99.66684945913461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 648
score: 99.666845703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 648
score: 99.658193359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 648
score: 99.65361496497844
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 648
score: 99.6351318359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 ; }
rank: 648
score: 99.63381911057692
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 649
score: 99.72088955965908
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 649
score: 99.70734342981558
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 649
score: 99.67707772090517
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 649
score: 99.66895527742346
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ y ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 649
score: 99.66660748106061
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 649
score: 99.658154296875
patch: float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 649
score: 99.65349264705883
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 649
score: 99.63512731481481
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 649
score: 99.63378092447917
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 650
score: 99.72087445175438
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 650
score: 99.7073194159836
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 650
score: 99.67706853693181
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 650
score: 99.66873972039474
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Tmp [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ;
rank: 650
score: 99.66658916170636
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y [ 1 . length ] ;
rank: 650
score: 99.65815330038265
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 650
score: 99.65347726004464
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 650
score: 99.63511591372283
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 650
score: 99.6337646484375
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 651
score: 99.7208371629902
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 . length ] ;
rank: 651
score: 99.70724171605603
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 651
score: 99.67705708165323
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 651
score: 99.66873753324468
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else {
rank: 651
score: 99.66672770182292
patch: final double [ ] scale = if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 651
score: 99.66616358901516
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 651
score: 99.65814634811046
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else {
rank: 651
score: 99.65342992665816
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 651
score: 99.63506179559427
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , new double [ y 0 . length ] , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 651
score: 99.63367513020833
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 652
score: 99.67703919491525
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 652
score: 99.66871611926021
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 652
score: 99.66598557692308
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 652
score: 99.6533947960805
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 652
score: 99.63501848493304
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ; }
rank: 652
score: 99.63367319915254
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 653
score: 99.72073364257812
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 653
score: 99.70721238659274
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 653
score: 99.67689985795455
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 653
score: 99.66670496323529
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 653
score: 99.66558074951172
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] ,
rank: 653
score: 99.65811157226562
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 653
score: 99.65338604266827
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 653
score: 99.63496981534091
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ y 0 . length ] ; }
rank: 653
score: 99.6336669921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 654
score: 99.72071184430804
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 654
score: 99.70720880681819
patch: final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 654
score: 99.67687594506049
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 654
score: 99.6685635653409
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 654
score: 99.66669921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance == null } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 654
score: 99.6655040922619
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } }
rank: 654
score: 99.658095703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = ( double [ ] ; scale = new double [ y 0 . length ] ;
rank: 654
score: 99.65337262834821
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] [ 0 ] ; }
rank: 654
score: 99.6349676724138
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 . 0 ; }
rank: 654
score: 99.63363752693965
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 655
score: 99.72055220170455
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 655
score: 99.70710875496032
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 655
score: 99.67681477864583
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 655
score: 99.66852323887711
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 655
score: 99.66663288620283
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 655
score: 99.66537475585938
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 655
score: 99.6580735809949
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance <= null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 655
score: 99.6533203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 655
score: 99.63495744977679
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ; }
rank: 655
score: 99.63362121582031
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 656
score: 99.72048950195312
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y $NUMBER$ . length ] ;
rank: 656
score: 99.70708176185344
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 656
score: 99.67674180327869
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 656
score: 99.66844075520834
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; else {
rank: 656
score: 99.66657366071429
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( scale == null ) { scale = new double [ y 0 . length ] ;
rank: 656
score: 99.66507781498017
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 . length ] ;
rank: 656
score: 99.65797601744185
patch: final Object [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 656
score: 99.6533203125
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 656
score: 99.63495205965908
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 656
score: 99.63361628605769
patch: scale = new Dummy CaMeL Step CaMeL Interpolator ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 657
score: 99.72048424030173
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 657
score: 99.70707262976696
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 657
score: 99.67669377561475
patch: System . arraycopy ( a 0 , 0 , y CaMeL Tmp , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 657
score: 99.66843039772728
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 657
score: 99.66648475796569
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 657
score: 99.66495643028846
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 657
score: 99.657958984375
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 657
score: 99.65331159319196
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 657
score: 99.63490513392857
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 657
score: 99.63355334051724
patch: scale ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 658
score: 99.72047393176021
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } } else { scale = new double [ y 0 . length ] ;
rank: 658
score: 99.70706435381356
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ;
rank: 658
score: 99.67669270833333
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 658
score: 99.66842276589912
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Tmp [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 658
score: 99.66641939603366
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance .
rank: 658
score: 99.66471354166667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 658
score: 99.65795400191327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ; }
rank: 658
score: 99.65323311941964
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 659
score: 99.7204375685307
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 659
score: 99.70705997242646
patch: final Object [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 659
score: 99.67658648574562
patch: System . arraycopy ( a 0 , 0 , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 659
score: 99.66841264204545
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 659
score: 99.66634427584134
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . y ] ;
rank: 659
score: 99.66462828621032
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 659
score: 99.65789794921875
patch: if ( vec CaMeL Absolute CaMeL Tolerance != null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 659
score: 99.63487617924528
patch: final double [ ] scale = new double [ y 0 . length ] ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 659
score: 99.6335028286638
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == 0 ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 660
score: 99.67647643008475
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 660
score: 99.6683274872449
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] [ 0 ] ;
rank: 660
score: 99.6663348858173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 660
score: 99.66433623342803
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 660
score: 99.65786743164062
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = ( double [ ] ; }
rank: 660
score: 99.65306712962963
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 660
score: 99.63486842105263
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , 0 , scale , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 661
score: 99.72038130326705
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] } ; } else { scale = new double [ y 0 . length ] ;
rank: 661
score: 99.70690497036638
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 661
score: 99.67645987817797
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 661
score: 99.66828762755102
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 661
score: 99.66624098557692
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 661
score: 99.66414000496032
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 . length ] ;
rank: 661
score: 99.65777587890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 661
score: 99.63483537946429
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 . 0 ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } }
rank: 661
score: 99.63348599137932
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 662
score: 99.72023518880208
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y . length ] ;
rank: 662
score: 99.70686848958333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) y ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 662
score: 99.67630955430327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 662
score: 99.66826668432203
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 662
score: 99.66413225446429
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , null , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 662
score: 99.653056640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 662
score: 99.63479178292411
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 ; }
rank: 662
score: 99.63342097355769
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 663
score: 99.720185546875
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 663
score: 99.70683019301471
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 663
score: 99.67626139322917
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 663
score: 99.66816737288136
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 663
score: 99.66621830778301
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } scale = new double [ y 0 . length ] ;
rank: 663
score: 99.66315774356617
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 663
score: 99.65768367686171
patch: final double [ ] scale ; if ( scale == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 663
score: 99.634765625
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 663
score: 99.63337654903017
patch: scale ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 664
score: 99.72013346354167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 664
score: 99.70679911629098
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 664
score: 99.67621060075432
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 664
score: 99.66813742897727
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 664
score: 99.66620495854592
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 664
score: 99.66231652462122
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 664
score: 99.6575927734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 664
score: 99.65303893008475
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 664
score: 99.63474684495192
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 664
score: 99.63336651141827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 665
score: 99.72010294596355
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 665
score: 99.70676967075893
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 665
score: 99.67620442708333
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 665
score: 99.66812626008064
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 665
score: 99.66619499362245
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 665
score: 99.6618881225586
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 665
score: 99.65755540497449
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 665
score: 99.63459694602273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 666
score: 99.72007076075819
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 666
score: 99.70674986758475
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 666
score: 99.67595804148706
patch: scale = ( double [ ] [ ] ) initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 666
score: 99.66615234375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 666
score: 99.66139573317308
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 666
score: 99.65754544005102
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } while ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 666
score: 99.6333236694336
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 667
score: 99.72003728693181
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 667
score: 99.70667904713115
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 667
score: 99.67588227370689
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 667
score: 99.66803089488636
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( )
rank: 667
score: 99.66613051470588
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ;
rank: 667
score: 99.66136215672348
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 667
score: 99.65751316236413
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 667
score: 99.63456700211864
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } }
rank: 667
score: 99.63330078125
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 668
score: 99.71992003242924
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 668
score: 99.70667766702586
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 668
score: 99.67586691337719
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 668
score: 99.66800059442934
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 668
score: 99.6661017922794
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } * else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 668
score: 99.66105530753968
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New ;
rank: 668
score: 99.65750868055555
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 668
score: 99.652900390625
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 668
score: 99.63444010416667
patch: scale = 0 . 0 ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 668
score: 99.63330078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 669
score: 99.719853515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = 0 ; } else { scale = new double [ y 0 . length ] ;
rank: 669
score: 99.706591796875
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 669
score: 99.67584745762711
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 669
score: 99.66790574596774
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 669
score: 99.6660826439951
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( scale == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 669
score: 99.66103205605158
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ,
rank: 669
score: 99.65749561543367
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 669
score: 99.65287990196079
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ) ;
rank: 669
score: 99.6332778930664
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 670
score: 99.719814453125
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y length ] ;
rank: 670
score: 99.70646292264344
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 670
score: 99.67582775297619
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 670
score: 99.66785685221355
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 670
score: 99.665966796875
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 670
score: 99.66100105406746
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 670
score: 99.65749463848039
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } vec CaMeL Absolute CaMeL Tolerance ; }
rank: 670
score: 99.65277099609375
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 670
score: 99.6343505859375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ;
rank: 670
score: 99.63326710668103
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 671
score: 99.71979509320175
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . scale ( scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 671
score: 99.70643890881148
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } break ;
rank: 671
score: 99.67580788352272
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 671
score: 99.6659532912234
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 671
score: 99.66084604414682
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 . length ] ;
rank: 671
score: 99.65746008831522
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length + 1 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 671
score: 99.6527569110577
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 671
score: 99.63325940148304
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 672
score: 99.71974498820755
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 672
score: 99.7064208984375
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 672
score: 99.67578966864224
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 672
score: 99.66770833333334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp ,
rank: 672
score: 99.66590134640957
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 672
score: 99.66070462740385
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 672
score: 99.65272739955357
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 672
score: 99.63431351273148
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 672
score: 99.63325500488281
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 673
score: 99.71966552734375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 673
score: 99.70639272836539
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 673
score: 99.66582629145408
patch: scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 673
score: 99.66057477678571
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 673
score: 99.65738600127551
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 673
score: 99.65266651218221
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 673
score: 99.63418433779762
patch: scale = scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 674
score: 99.71964808872768
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 674
score: 99.706357421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 674
score: 99.67570277622768
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 674
score: 99.66752202460107
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] ;
rank: 674
score: 99.66578087439903
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 674
score: 99.66017844460227
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 1 ] ;
rank: 674
score: 99.65732421875
patch: float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 674
score: 99.65255033052884
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ;
rank: 674
score: 99.63306427001953
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 675
score: 99.71964518229167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y . length ] ;
rank: 675
score: 99.7063492063492
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 675
score: 99.6755811347336
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 675
score: 99.66745923913044
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; } else { scale = new double [ y 0 . length ] ;
rank: 675
score: 99.66572081367924
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 675
score: 99.66017104640152
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 675
score: 99.65727850731383
patch: if ( scale == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 675
score: 99.65253409692797
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 675
score: 99.63412911551339
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = null ; }
rank: 675
score: 99.63303138469827
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 676
score: 99.71951878324468
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 676
score: 99.70629469014831
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 676
score: 99.67552601207386
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 676
score: 99.66741426112289
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 676
score: 99.66570671237245
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) arraycopy ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 676
score: 99.65997314453125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 676
score: 99.657265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 676
score: 99.65250941685268
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 677
score: 99.71945057744566
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 677
score: 99.70627065805289
patch: final double [ ] scale ; if ( this . vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 677
score: 99.67550108862704
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 677
score: 99.667236328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , scale , get CaMeL Order ( ) ,
rank: 677
score: 99.6655985514323
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 677
score: 99.65981593276516
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 677
score: 99.65718315972222
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 677
score: 99.6522692664195
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 677
score: 99.63406575520834
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = new double [ y 0 . length ] ;
rank: 677
score: 99.632763671875
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 678
score: 99.71934883549528
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ 0 ] = scal CaMeL Absolute CaMeL Tolerance ; } else { scale [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 678
score: 99.6655943627451
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 678
score: 99.65976872519842
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 678
score: 99.657158203125
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 678
score: 99.65223616260593
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 678
score: 99.6340087890625
patch: final double [ ] scale = ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 679
score: 99.7193359375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 679
score: 99.70625
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 679
score: 99.67535917637711
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 679
score: 99.66714638157895
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale
rank: 679
score: 99.66548978365384
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; this . scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 679
score: 99.65941664751838
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 679
score: 99.65711167279412
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } final scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 679
score: 99.6521961300872
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 679
score: 99.63397839604592
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = true ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 679
score: 99.63273374495968
patch: interpolator . store CaMeL Time ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 680
score: 99.71922665550595
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 0 . length ] ;
rank: 680
score: 99.70622907366071
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 680
score: 99.6749751984127
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 680
score: 99.66708322298729
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 680
score: 99.66547947303921
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 680
score: 99.65928649902344
patch: y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 680
score: 99.65708295036765
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 680
score: 99.65195121017157
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 681
score: 99.71921064268868
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 681
score: 99.67491227489407
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 681
score: 99.66703374335107
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 681
score: 99.66547206662736
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 681
score: 99.65926106770833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 . length ] ;
rank: 681
score: 99.65701729910714
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 681
score: 99.65193394252232
patch: System . arraycopy ( y 0 , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 681
score: 99.6339463056144
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 681
score: 99.63268074156746
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 682
score: 99.70613178453948
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 682
score: 99.67476330773304
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 682
score: 99.6670166015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) [ 0 ] ) ;
rank: 682
score: 99.6592022235577
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ $NUMBER$ ] ;
rank: 682
score: 99.65699678308823
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 682
score: 99.65191761363636
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 682
score: 99.63391927083333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 ; }
rank: 682
score: 99.6326552568856
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 683
score: 99.7191961880388
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 683
score: 99.70607994342673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 683
score: 99.67457682291666
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 683
score: 99.66690726902173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 683
score: 99.66545075061275
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : new double [ y 0 . length ] ;
rank: 683
score: 99.65902467757937
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 683
score: 99.65691764987245
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 683
score: 99.65185546875
patch: compute CaMeL Derivatives ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 683
score: 99.63260323660714
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 684
score: 99.7191759474734
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 0 . length ] ;
rank: 684
score: 99.70606372974537
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 684
score: 99.67449020127118
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 684
score: 99.66688603940217
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length + 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 684
score: 99.66541245404412
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 684
score: 99.65899367559524
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 684
score: 99.656845703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : scal CaMeL Absolute CaMeL Tolerance ;
rank: 684
score: 99.63376336348684
patch: final double [ ] scale = ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 684
score: 99.63258361816406
patch: interpolator . shift ( h CaMeL New , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 685
score: 99.71909516433189
patch: final int scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 685
score: 99.70604626885776
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = vec CaMeL Absolute CaMeL Tolerance ; else scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 685
score: 99.67442491319444
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 685
score: 99.666796875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 685
score: 99.6653583233173
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; }
rank: 685
score: 99.6581805889423
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K ) ;
rank: 685
score: 99.65678810586735
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 685
score: 99.65170127467105
patch: System . arraycopy ( y 0 , y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 685
score: 99.63374299823113
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = new double [ y 0 . length ] ; }
rank: 686
score: 99.71896816821808
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 686
score: 99.70594332510964
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 686
score: 99.6744051846591
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp ) ;
rank: 686
score: 99.66658238002232
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 686
score: 99.66533586090686
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scale ;
rank: 686
score: 99.65792846679688
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 1 ] ;
rank: 686
score: 99.65673828125
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 686
score: 99.65152413504464
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 686
score: 99.6336609887295
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 686
score: 99.6324947296627
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 687
score: 99.71895559210526
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 687
score: 99.70587713068181
patch: try { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 687
score: 99.67438261387711
patch: System . arraycopy ( y 0 , 0 , y , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 687
score: 99.66657662898936
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 687
score: 99.66524969362744
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( scale != null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 687
score: 99.65709538246269
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( ) ;
rank: 687
score: 99.63361672794117
patch: } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 688
score: 99.71888834635416
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 688
score: 99.70587158203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance [ y 0 . length ] ;
rank: 688
score: 99.67436691810344
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 688
score: 99.66655717329546
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 688
score: 99.6651171875
patch: final double [ ] scale = if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 688
score: 99.6566670735677
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 688
score: 99.65576171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } }
rank: 688
score: 99.65145687181122
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 689
score: 99.71873779296875
patch: scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 689
score: 99.70579246238425
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 689
score: 99.67414030481558
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 689
score: 99.66635846077128
patch: if ( ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 689
score: 99.665107421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 689
score: 99.65664859693878
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 689
score: 99.65534741950758
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 689
score: 99.63358347039474
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ;
rank: 690
score: 99.71873046875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 690
score: 99.67413736979167
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 690
score: 99.66624450683594
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 690
score: 99.6650899251302
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 690
score: 99.65657552083333
patch: scale ; } else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 690
score: 99.6551742553711
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 690
score: 99.65141950334821
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 690
score: 99.63356561175847
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scale ; }
rank: 690
score: 99.63218352754237
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 691
score: 99.71870930989583
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 691
score: 99.7057236493644
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ; }
rank: 691
score: 99.67407724808673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = new double [ y 0 . length ] [ 0 ] ;
rank: 691
score: 99.66614350818452
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = a [ 0 ] [ 0 ] ;
rank: 691
score: 99.66504845252403
patch: final double [ ] scale = if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; }
rank: 691
score: 99.65652598505434
patch: final double [ ] scale ; double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 691
score: 99.6544921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] ;
rank: 691
score: 99.65135063559322
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 691
score: 99.63351004464286
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 691
score: 99.63216426454741
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 692
score: 99.67405157574153
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 692
score: 99.66611115828805
patch: final double error = 0 ; if ( ! first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ;
rank: 692
score: 99.66499299823113
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } }
rank: 692
score: 99.65640943877551
patch: { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 692
score: 99.65317670036765
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 . length ] ;
rank: 692
score: 99.65129865679825
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 692
score: 99.63350890112704
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 693
score: 99.71865068855932
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 693
score: 99.70556640625
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 693
score: 99.67401455965908
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 693
score: 99.66609552556818
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 693
score: 99.66498046875
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = new double [ y 0 . length ] ;
rank: 693
score: 99.65638316761364
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 693
score: 99.65316772460938
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 693
score: 99.6512844279661
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 693
score: 99.6334979717548
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 694
score: 99.71860758463542
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 694
score: 99.70540364583333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 694
score: 99.6659532912234
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 694
score: 99.66497802734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance <= null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 694
score: 99.65634084302326
patch: final Integer [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 694
score: 99.65270278033088
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 694
score: 99.63342524509804
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 . 0 ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 694
score: 99.63210533405173
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 695
score: 99.71845703125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 695
score: 99.70537492340686
patch: else { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 695
score: 99.6738990045363
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 695
score: 99.66590947690217
patch: final double [ ] scale ; if ( ( vec CaMeL Absolute CaMeL Tolerance == null ) ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 695
score: 99.66494516225961
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] ) ; } else { scale ( new double [ y 0 . length ] ) ; }
rank: 695
score: 99.65629155585107
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = ( double [ ] [ ] ) vec CaMeL Absolute CaMeL Tolerance ;
rank: 695
score: 99.65252870501894
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 695
score: 99.65120442708333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 696
score: 99.71840994698661
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 696
score: 99.70537277747844
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 696
score: 99.67387251420455
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 696
score: 99.6657951108871
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 1 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 696
score: 99.66487630208333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 696
score: 99.65623007015306
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 696
score: 99.65214399857955
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 696
score: 99.65111825980392
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 696
score: 99.6333538552989
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = new double [ y 0 . length ] ;
rank: 696
score: 99.63205788352273
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 697
score: 99.71840912441037
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 697
score: 99.70529700969827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 697
score: 99.67376363502359
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , forward ) ;
rank: 697
score: 99.66570723684211
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ) ;
rank: 697
score: 99.66486672794117
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ scale 0 . length ] ;
rank: 697
score: 99.65208834134616
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 697
score: 99.651005859375
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 697
score: 99.63323567708333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 697
score: 99.63204752604166
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 698
score: 99.70526801215277
patch: double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 698
score: 99.67368743379237
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 698
score: 99.66566938920455
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; else {
rank: 698
score: 99.66483248197116
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 698
score: 99.65621170343137
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 698
score: 99.65203857421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ y 0 . length ] ;
rank: 698
score: 99.65094866071429
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 698
score: 99.63318941885964
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 699
score: 99.71833147321429
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 699
score: 99.67362122616525
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 699
score: 99.66566938920455
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 699
score: 99.66479952830188
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 699
score: 99.65611683238636
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ;
rank: 699
score: 99.6519305889423
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Tmp , forward ) ;
rank: 699
score: 99.65091720281863
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 699
score: 99.6331667432598
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 700
score: 99.7181640625
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 700
score: 99.70517743644068
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 700
score: 99.67355501853814
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 700
score: 99.66563349184783
patch: final double [ ] error ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 700
score: 99.66470102163461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . $NUMBER$ ] ;
rank: 700
score: 99.656005859375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) {
rank: 700
score: 99.65177283653846
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ) ;
rank: 700
score: 99.63315873579545
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( new double [ y 0 . length ] , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 700
score: 99.63197428385416
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 701
score: 99.70516531808036
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 701
score: 99.67353019067797
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 701
score: 99.66561837923729
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 701
score: 99.65599027593085
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 701
score: 99.65160006009616
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 701
score: 99.6507961467161
patch: System . arraycopy ( first CaMeL Time , 0 , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 701
score: 99.63314115084134
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 701
score: 99.63194986979167
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 702
score: 99.71813151041667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ;
rank: 702
score: 99.70515950520833
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 702
score: 99.67348188920455
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 702
score: 99.6656101032839
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 702
score: 99.664638671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 702
score: 99.65598192401961
patch: float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 702
score: 99.6513671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 702
score: 99.6507901278409
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 702
score: 99.63309280960648
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 703
score: 99.71804942255434
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y length ] ;
rank: 703
score: 99.70510525173611
patch: if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 703
score: 99.6734619140625
patch: final double sum = b 0 ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 703
score: 99.66556872351696
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 703
score: 99.66459865196079
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { vec CaMeL Absolute CaMeL Tolerance ; }
rank: 703
score: 99.65574137369792
patch: if ( scale ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 703
score: 99.65124329524254
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 . length ] ;
rank: 703
score: 99.63298688616071
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance - vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 703
score: 99.63181910021552
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 704
score: 99.71803880774456
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 704
score: 99.70509588068182
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 704
score: 99.6733165922619
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 704
score: 99.66548596398304
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 704
score: 99.66452026367188
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ;
rank: 704
score: 99.65572185905613
patch: final int [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 704
score: 99.65101947206439
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 1 ] ;
rank: 704
score: 99.65076754385964
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 704
score: 99.63294491525424
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 704
score: 99.6316988760965
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 705
score: 99.71800130208334
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 705
score: 99.70508654364224
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance [ y 0 . length ] ;
rank: 705
score: 99.67330046622983
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 705
score: 99.66548596398304
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 705
score: 99.66451248468137
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = null ; } else { scale = new double [ y 0 . length ] ;
rank: 705
score: 99.655712890625
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 705
score: 99.65098407451923
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ $NUMBER$ ] ;
rank: 705
score: 99.65072993908899
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 705
score: 99.63288826778017
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 706
score: 99.7179735527664
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 706
score: 99.705078125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 706
score: 99.6732666015625
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 706
score: 99.66545304008152
patch: final double error = 0 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; }
rank: 706
score: 99.66451248468137
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 706
score: 99.65568033854167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 706
score: 99.65065511067708
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 706
score: 99.65061996922348
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 706
score: 99.63287043167372
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 706
score: 99.63166155133929
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Tmp [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 707
score: 99.7179735527664
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 707
score: 99.70496676260964
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 707
score: 99.67325846354167
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 707
score: 99.66543579101562
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; for ( boolean loop = true ; loop ; ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 707
score: 99.66447418811275
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 707
score: 99.65555245535714
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 707
score: 99.65053803066037
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 707
score: 99.65048397288604
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 707
score: 99.63282993861607
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 707
score: 99.63154627913136
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 708
score: 99.71795654296875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 708
score: 99.70496544471153
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 708
score: 99.6729403409091
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 708
score: 99.66537314967105
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 708
score: 99.66443589154412
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 708
score: 99.65541294642857
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 708
score: 99.65045635516827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 708
score: 99.65045072115385
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 708
score: 99.63277633101852
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; vec CaMeL Absolute CaMeL Tolerance = null ; }
rank: 708
score: 99.63146391369048
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 709
score: 99.7178561970339
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 709
score: 99.70494140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 709
score: 99.67291152686404
patch: System . arraycopy ( y 0 , 0 , y CaMeL Dot CaMeL K [ 0 ] , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 709
score: 99.665283203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 709
score: 99.6553622159091
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ;
rank: 709
score: 99.65012428977273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 709
score: 99.63272798978366
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 709
score: 99.63145003780242
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 710
score: 99.7178243001302
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 710
score: 99.70492658943965
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 710
score: 99.67281218497983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 710
score: 99.66526251324153
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 710
score: 99.66443101415095
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 710
score: 99.65531412760417
patch: final double [ ] scale ; if ( scale == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 710
score: 99.64978215144231
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 710
score: 99.63270844006148
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 710
score: 99.6314473054847
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 711
score: 99.71780598958334
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 711
score: 99.70479403409091
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 711
score: 99.67277579471983
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 711
score: 99.66498940677967
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 711
score: 99.66432158801021
patch: final int [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 711
score: 99.65523097826087
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } scale = scale ;
rank: 711
score: 99.65026648569915
patch: System . arraycopy ( first CaMeL Time , 0 , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 711
score: 99.64908611240672
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 711
score: 99.63259548611111
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 711
score: 99.63144026131465
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 712
score: 99.71779745133196
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 712
score: 99.70469743114407
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 712
score: 99.67266635237068
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 712
score: 99.66480733580508
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 712
score: 99.66426355698529
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 712
score: 99.65521918402777
patch: final double [ ] scale ; int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 712
score: 99.6502535635965
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 712
score: 99.64849008413462
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 712
score: 99.63257264254386
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 ) ;
rank: 712
score: 99.6314304157839
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 713
score: 99.71770490679825
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 713
score: 99.70457208806818
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 713
score: 99.66471700465425
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ; }
rank: 713
score: 99.66414541568396
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 713
score: 99.65492466517857
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 713
score: 99.64814897017045
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 713
score: 99.63253348214286
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 713
score: 99.63141500538794
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 714
score: 99.67238943917411
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 714
score: 99.66469389816811
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ) ; first CaMeL Time = false ; }
rank: 714
score: 99.6641248337766
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 714
score: 99.65484619140625
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale += vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 714
score: 99.64814453125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 714
score: 99.63252840909091
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 714
score: 99.63140762061404
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 715
score: 99.7174233490566
patch: long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 715
score: 99.66450112552967
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 715
score: 99.66401643573113
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 715
score: 99.65481387867646
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 715
score: 99.64642427884615
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 715
score: 99.63252124451755
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . double CaMeL Value ( ) ; } else { scale = new double [ y 0 . length ] ;
rank: 715
score: 99.63134765625
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 716
score: 99.71729436910377
patch: if ( this . vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 716
score: 99.70452363612289
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 716
score: 99.6722412109375
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 716
score: 99.66449284957628
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 716
score: 99.663994140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 716
score: 99.64991155660377
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 716
score: 99.64603365384616
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 716
score: 99.63250177556819
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 . 0 ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 716
score: 99.63133978074596
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 717
score: 99.71726032838983
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } }
rank: 717
score: 99.70449053230932
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 717
score: 99.67207362288136
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 717
score: 99.65479473039215
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 717
score: 99.64573317307692
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 717
score: 99.63246626420455
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 717
score: 99.63128769188596
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 718
score: 99.71715198863636
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 718
score: 99.70448133680556
patch: else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 718
score: 99.66395920973558
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 718
score: 99.654775390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } }
rank: 718
score: 99.64558179450758
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 718
score: 99.63243628329919
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , 0 ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 718
score: 99.63118770204741
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 719
score: 99.70446356411638
patch: else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 719
score: 99.67194010416667
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 719
score: 99.66395718443627
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 719
score: 99.65475643382354
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 719
score: 99.64546342329545
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 719
score: 99.6323993389423
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scal CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 720
score: 99.716943359375
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 720
score: 99.70432044719827
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 720
score: 99.67186628069196
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 720
score: 99.66394273290095
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 720
score: 99.6545743075284
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 720
score: 99.64529646688433
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 720
score: 99.63231549944196
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , null , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 721
score: 99.71688655931122
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 721
score: 99.70424107142857
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 721
score: 99.66411215572033
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else
rank: 721
score: 99.66393803615196
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 721
score: 99.65455118815105
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 721
score: 99.64910567434211
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 721
score: 99.64505597014926
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 . length ] ;
rank: 721
score: 99.63097563244048
patch: interpolator . shift ( t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 722
score: 99.7168605638587
patch: scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 722
score: 99.67175745081019
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 722
score: 99.66409560381356
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 722
score: 99.66391389266305
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 722
score: 99.65437659438776
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 722
score: 99.64895290798611
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 722
score: 99.64499766791045
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 . length ] ;
rank: 722
score: 99.63226528825432
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 722
score: 99.63077411954364
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 723
score: 99.7166748046875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } final double scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 723
score: 99.70413643973214
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 723
score: 99.6717177568856
patch: System . arraycopy ( y 0 , 0 , y , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 723
score: 99.66395635190217
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 723
score: 99.6543477376302
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 723
score: 99.64482421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] ;
rank: 723
score: 99.63224609375
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 723
score: 99.63071040783899
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 724
score: 99.71664268092105
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 724
score: 99.67164327330508
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ) ;
rank: 724
score: 99.66392415364584
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , scale ,
rank: 724
score: 99.66386320153062
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 724
score: 99.65431602328431
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) double scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 724
score: 99.64893450055804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 724
score: 99.64417613636364
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 724
score: 99.63220414959017
patch: scale = 0 . 0 ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 724
score: 99.63058155980603
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 725
score: 99.71654873206967
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 725
score: 99.70392776747882
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 725
score: 99.67156282018442
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 725
score: 99.66387215307203
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 725
score: 99.654296875
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 725
score: 99.64879499162946
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 725
score: 99.64402817234848
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 725
score: 99.6321957236842
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 726
score: 99.71647135416667
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 726
score: 99.70392477101294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 726
score: 99.67155210433468
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ) ;
rank: 726
score: 99.66383958899456
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { sum = new double [ y 0 . length ] [ 0 ] ;
rank: 726
score: 99.663720703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 726
score: 99.65428626019022
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 726
score: 99.64873046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 726
score: 99.6439555153918
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] ,
rank: 726
score: 99.63218952047414
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 726
score: 99.6304931640625
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 727
score: 99.71642852247807
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 727
score: 99.70384765625
patch: else { final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 727
score: 99.67152622767857
patch: final double sum = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 727
score: 99.66377110635081
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 727
score: 99.663603515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 727
score: 99.65427734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 727
score: 99.64855105377907
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ;
rank: 727
score: 99.64329927884616
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 727
score: 99.6304443359375
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 728
score: 99.70381221064815
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 728
score: 99.66376065340908
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 728
score: 99.66359299879808
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ;
rank: 728
score: 99.6540625
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 728
score: 99.64855085100446
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 728
score: 99.64310396634616
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ $NUMBER$ ] ;
rank: 728
score: 99.63213900862068
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 729
score: 99.71640790519068
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 729
score: 99.70373956088362
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 729
score: 99.66367885044643
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; }
rank: 729
score: 99.66351677389706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 729
score: 99.65401785714286
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; else scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 729
score: 99.64847176535088
patch: System . arraycopy ( y 0 , y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 729
score: 99.64233034048507
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 . length ] ;
rank: 729
score: 99.63213575932018
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } vec CaMeL Absolute CaMeL Tolerance = true ;
rank: 730
score: 99.70371859681373
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 730
score: 99.671337890625
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 730
score: 99.66365947420636
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { y CaMeL Dot CaMeL K [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 730
score: 99.65400390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 730
score: 99.64842893366227
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 730
score: 99.6417569247159
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 730
score: 99.63213210809427
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] ) ; }
rank: 731
score: 99.71632893880208
patch: scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 . length ] ;
rank: 731
score: 99.70369140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 731
score: 99.67133706302967
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 731
score: 99.663623046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else {
rank: 731
score: 99.65398092830883
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 731
score: 99.64837646484375
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 731
score: 99.64103929924242
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y , y CaMeL Dot CaMeL K [ 0 ] ,
rank: 731
score: 99.6303290005388
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 732
score: 99.71630859375
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 732
score: 99.67128740730932
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 732
score: 99.66347032912235
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 732
score: 99.65396803252551
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 732
score: 99.64818875294812
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 732
score: 99.6408332375919
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 732
score: 99.63210227272727
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scale ) ;
rank: 733
score: 99.71628866390306
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 733
score: 99.70362215909091
patch: scale ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 733
score: 99.6712801846591
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 733
score: 99.66344401041667
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; else {
rank: 733
score: 99.6633955792683
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 733
score: 99.65391031901042
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 733
score: 99.64817301432292
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 733
score: 99.63990737452652
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 733
score: 99.632080078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 733
score: 99.63030374461206
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 734
score: 99.71627491918103
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 734
score: 99.70361328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 734
score: 99.67126664959017
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 734
score: 99.663388671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ;
rank: 734
score: 99.66337719298245
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 734
score: 99.6538798014323
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ; scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 734
score: 99.63934685202206
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 734
score: 99.63202582465277
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 734
score: 99.6302990522541
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 735
score: 99.71619318181818
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 735
score: 99.70359108664773
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 735
score: 99.6631747159091
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) ,
rank: 735
score: 99.66310471754808
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 735
score: 99.65386603860294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 735
score: 99.64803213443396
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 735
score: 99.638916015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance + vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( ) ;
rank: 735
score: 99.63199869791667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] : new double [ y 0 . length ] ;
rank: 735
score: 99.63027033730158
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 736
score: 99.71618445444915
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 736
score: 99.70348011363636
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 736
score: 99.67113779105392
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 736
score: 99.66310436320755
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 736
score: 99.66309729287791
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 736
score: 99.65383911132812
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ;
rank: 736
score: 99.64800153459821
patch: compute CaMeL Derivatives ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 736
score: 99.63837028952206
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ;
rank: 736
score: 99.63192854256465
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) . copy ( ) . copy ( ) . copy ( ) ) ;
rank: 736
score: 99.63020272090517
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 737
score: 99.70342293432203
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 737
score: 99.67110770089286
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; first CaMeL Time = false ;
rank: 737
score: 99.66305443548387
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 737
score: 99.66304908608491
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 737
score: 99.65371704101562
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 737
score: 99.64770079495614
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 737
score: 99.63792465672348
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 737
score: 99.631875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 737
score: 99.63019283234127
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 738
score: 99.71604817708334
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 1 ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 738
score: 99.70339439655173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 738
score: 99.6708984375
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 738
score: 99.66299438476562
patch: double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 738
score: 99.66293334960938
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 738
score: 99.653681640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length + 1 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 738
score: 99.6476836622807
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 738
score: 99.63783387880068
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 738
score: 99.63180930397728
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 738
score: 99.6301505796371
patch: interpolator . store CaMeL Time ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 739
score: 99.71599410752118
patch: final double scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 739
score: 99.66293334960938
patch: try { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 739
score: 99.6629286943856
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ) ;
rank: 739
score: 99.64759172712054
patch: System . arraycopy ( y 0 , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 739
score: 99.63676313920455
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 739
score: 99.63173647280092
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 740
score: 99.71577228483606
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 740
score: 99.70336500264831
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 740
score: 99.67088035300925
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 740
score: 99.6628189086914
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 740
score: 99.66280205305233
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ scale 0 . length ] ;
rank: 740
score: 99.6535007642663
patch: final double [ ] scale ; int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 740
score: 99.64754083806818
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 740
score: 99.63634535845588
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 740
score: 99.62995858028017
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 741
score: 99.71576891447368
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 741
score: 99.70335170200893
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 741
score: 99.67088035300925
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 741
score: 99.66279871323529
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 741
score: 99.66267755681818
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 741
score: 99.65345052083333
patch: double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 741
score: 99.64750700176887
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ;
rank: 741
score: 99.63573489972015
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 741
score: 99.63157371238425
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 741
score: 99.62993475731383
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 742
score: 99.71575927734375
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 742
score: 99.70333059210526
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 742
score: 99.67080740201271
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 742
score: 99.66279112617924
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance , }
rank: 742
score: 99.66237420550847
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 742
score: 99.65342420212765
patch: final double [ ] scale ; if ( scale == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 742
score: 99.64746965680804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 742
score: 99.63542406486742
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ $NUMBER$ ] ; }
rank: 742
score: 99.63155455508475
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 742
score: 99.62990234375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ;
rank: 743
score: 99.71575178179825
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 743
score: 99.70320791568396
patch: try { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 743
score: 99.67075639204545
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 743
score: 99.66278913909314
patch: final double [ ] scale = if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 743
score: 99.66237054869185
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; for ( boolean loop = true ; loop ; ) {
rank: 743
score: 99.65323350694445
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 743
score: 99.64742337740384
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 743
score: 99.63498017282197
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 743
score: 99.6314221398305
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , scale ) ;
rank: 743
score: 99.62984913793103
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 744
score: 99.71558017418033
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 744
score: 99.70316938920455
patch: if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 744
score: 99.6705322265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 744
score: 99.66231627383475
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 744
score: 99.653203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } ;
rank: 744
score: 99.64735814144737
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 744
score: 99.63475082859848
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance : vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( ) ;
rank: 744
score: 99.6314221398305
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 744
score: 99.62984854714912
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 745
score: 99.71546708776596
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = 0 . length ; }
rank: 745
score: 99.70316116898148
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 745
score: 99.67044632523148
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , t 0 ) ;
rank: 745
score: 99.6627566315407
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . $NUMBER$ ] ; } else { scale = new double [ y 0 . length ] ;
rank: 745
score: 99.66230640076755
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 745
score: 99.65318359375
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 745
score: 99.6473388671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ;
rank: 745
score: 99.63461701766305
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 746
score: 99.71511685646186
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } final double scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 746
score: 99.67042759486607
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 746
score: 99.6623004415761
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = new double [ y 0 . length ] ; } else {
rank: 746
score: 99.653037109375
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 746
score: 99.63442309934702
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , forward ) ;
rank: 746
score: 99.62979020743535
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 747
score: 99.71510532924107
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 747
score: 99.67020089285714
patch: final double sum = b 0 ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 747
score: 99.662724609375
patch: final double [ ] scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 747
score: 99.65303132971938
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 747
score: 99.64725030637256
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 747
score: 99.63433478860294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 . length ] ;
rank: 747
score: 99.63133965163935
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 747
score: 99.62972285829741
patch: scale ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 748
score: 99.7149182335805
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 748
score: 99.7029909620098
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 748
score: 99.67017001793033
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 748
score: 99.66269899764151
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 748
score: 99.66225006620763
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 748
score: 99.65294164540816
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 748
score: 99.64720243566177
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 748
score: 99.63426994554925
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 748
score: 99.63133861400463
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 748
score: 99.62964739118304
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 749
score: 99.71491805366848
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 749
score: 99.70292080965909
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 749
score: 99.66269155649039
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 749
score: 99.6621602376302
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ;
rank: 749
score: 99.65289306640625
patch: final double [ ] scale ; double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 749
score: 99.64718572443182
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 749
score: 99.62964280985169
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 750
score: 99.71484375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 750
score: 99.702880859375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 750
score: 99.67008739406779
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 750
score: 99.66263671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? ) : vec CaMeL Absolute CaMeL Tolerance ;
rank: 750
score: 99.6619540127841
patch: final double error = 0 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ;
rank: 750
score: 99.65287853422619
patch: double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 750
score: 99.63367245802239
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 750
score: 99.63117585358796
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 751
score: 99.71480823863637
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 751
score: 99.70283726283482
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 751
score: 99.66997884114583
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 751
score: 99.66260782877605
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 751
score: 99.66145324707031
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 751
score: 99.65286254882812
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 751
score: 99.6468505859375
patch: sanity CaMeL Checks ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 751
score: 99.63353752367425
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] ;
rank: 751
score: 99.63112229567308
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 751
score: 99.62956832627118
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 752
score: 99.71470133463542
patch: else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 752
score: 99.70278990502452
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; / } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 752
score: 99.6698974609375
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 752
score: 99.66259765625
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 752
score: 99.66138214760639
patch: final double error = 0 ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ;
rank: 752
score: 99.652763671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 752
score: 99.64678485576923
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 752
score: 99.63335179570896
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 . length ] ;
rank: 752
score: 99.63109110169492
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ;
rank: 752
score: 99.62956321022727
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 753
score: 99.71466619318181
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 753
score: 99.66981051260964
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ) ;
rank: 753
score: 99.6625507061298
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 753
score: 99.66133143538136
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 753
score: 99.6527432528409
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 753
score: 99.6333366842831
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( equations ) ;
rank: 753
score: 99.62952922952586
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 754
score: 99.71440778459821
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 754
score: 99.70273951480263
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 754
score: 99.66980794270833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == 0 ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 754
score: 99.66130942486703
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { sum = new double [ y 0 . length ] ; }
rank: 754
score: 99.6522928873698
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = new scale ;
rank: 754
score: 99.64665020636792
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 754
score: 99.63304184422348
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = a 0 . length * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 754
score: 99.63105119977679
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 754
score: 99.62951078869048
patch: h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 755
score: 99.7026953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ;
rank: 755
score: 99.66972294560185
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 755
score: 99.6625306372549
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 [ length ] ;
rank: 755
score: 99.66089928668478
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * sum ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 755
score: 99.65224821671195
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length + 1 ] ; }
rank: 755
score: 99.64659926470588
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 755
score: 99.63302384561567
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 755
score: 99.631025390625
patch: scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 756
score: 99.71420454545455
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 756
score: 99.70264610877403
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 756
score: 99.6625114889706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : new double [ y 0 . length ] ;
rank: 756
score: 99.66086647727273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = new double [ y 0 . length ] ; }
rank: 756
score: 99.6521875
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 756
score: 99.6465909090909
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 756
score: 99.63252098880596
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ ] ;
rank: 756
score: 99.63092386497641
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 756
score: 99.62935315148304
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 757
score: 99.71418980189732
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 757
score: 99.669677734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 757
score: 99.66248046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else throw vec CaMeL Absolute CaMeL Tolerance ;
rank: 757
score: 99.66085759943182
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; else {
rank: 757
score: 99.65218098958333
patch: final double [ ] scale ; int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 757
score: 99.63234576056985
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = 0 ;
rank: 757
score: 99.62930886787281
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 758
score: 99.71417867726294
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 758
score: 99.66241574754902
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 758
score: 99.65216438137755
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ;
rank: 758
score: 99.64632742745536
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 758
score: 99.63230985753677
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 . length ] ;
rank: 758
score: 99.63084129050925
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; vec CaMeL Absolute CaMeL Tolerance = false ; }
rank: 758
score: 99.62921773976294
patch: scale ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 759
score: 99.71412150065105
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = new double [ y 1 . length ] ;
rank: 759
score: 99.70246834590517
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 759
score: 99.66961263020833
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 759
score: 99.66237654775944
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 759
score: 99.66083487817797
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 759
score: 99.65214029947917
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 759
score: 99.64627075195312
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 759
score: 99.63219303871269
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 759
score: 99.62918406519397
patch: scale ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 760
score: 99.70245992726294
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 760
score: 99.66958182198661
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 760
score: 99.6623065655048
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( scale == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 760
score: 99.65206609987744
patch: if ( vec CaMeL Absolute CaMeL Tolerance != null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 760
score: 99.63215406013258
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 760
score: 99.63072374131944
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 760
score: 99.62917935646186
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 761
score: 99.71409801136363
patch: double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 761
score: 99.70245028409092
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance + scal CaMeL Absolute CaMeL Tolerance ;
rank: 761
score: 99.66956922743056
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 761
score: 99.66226900540866
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale += vec CaMeL Absolute CaMeL Tolerance ;
rank: 761
score: 99.66070963541667
patch: final double error = 0 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else {
rank: 761
score: 99.6517917798913
patch: final double [ ] scale ; if ( this . vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 761
score: 99.6461769386574
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 761
score: 99.63204308712122
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 761
score: 99.63068327356558
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 761
score: 99.6291289747807
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 762
score: 99.71407063802083
patch: scale = new double [ y 0 . length ] ; else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 762
score: 99.70237821691177
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; true } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 762
score: 99.66950212445175
patch: double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 762
score: 99.66225961538461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ;
rank: 762
score: 99.66068892045455
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; else {
rank: 762
score: 99.65169270833333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 762
score: 99.64603515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 762
score: 99.63184322527985
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 1 ] ,
rank: 762
score: 99.63068181818181
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 762
score: 99.62908614309211
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 763
score: 99.71397477489407
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 763
score: 99.70233487215908
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 763
score: 99.66942420372597
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 763
score: 99.66057832362289
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ) ;
rank: 763
score: 99.6514892578125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = ( double [ ] [ ] ) vec CaMeL Absolute CaMeL Tolerance ; }
rank: 763
score: 99.645908203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == 0 ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 763
score: 99.63158815298507
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 763
score: 99.63066948784723
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 763
score: 99.62908004502118
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 764
score: 99.71396484375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 764
score: 99.70231119791667
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 764
score: 99.66941704184322
patch: System . arraycopy ( a 0 , 0 , y , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 764
score: 99.66222914209905
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 764
score: 99.66056743421052
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 764
score: 99.6514004794034
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else {
rank: 764
score: 99.63144239738806
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } }
rank: 764
score: 99.6306592597336
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , new double [ y 0 . length ] , 0 , vec CaMeL Absolute CaMeL Tolerance . length ) ;
rank: 764
score: 99.62890625
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 765
score: 99.71372477213542
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 1 . length ] ;
rank: 765
score: 99.7022854989035
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 765
score: 99.66941583806818
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 765
score: 99.66196576286765
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 765
score: 99.66047780106707
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 765
score: 99.65138753255208
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 765
score: 99.63126847550676
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 766
score: 99.70208108836206
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 766
score: 99.66938634072581
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 766
score: 99.66192072088069
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 766
score: 99.66040452860169
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 766
score: 99.6308447994403
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 . length ] ;
rank: 766
score: 99.63060546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 766
score: 99.62884221311475
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 767
score: 99.71365559895834
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 767
score: 99.70201945754717
patch: final Object [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 767
score: 99.66032757675438
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 767
score: 99.63059701492537
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 767
score: 99.62883649553571
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 768
score: 99.71364305840164
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 768
score: 99.6692965323465
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , scale ) ;
rank: 768
score: 99.6512109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 768
score: 99.64555387676887
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 768
score: 99.63055013020833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; vec CaMeL Absolute CaMeL Tolerance = true ;
rank: 768
score: 99.6300048828125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 768
score: 99.6287841796875
patch: interpolator . shift ( y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 769
score: 99.71354442531779
patch: final int scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 769
score: 99.70177350725446
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 769
score: 99.66920753761575
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 769
score: 99.66186044730392
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 769
score: 99.65999702785327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } break ;
rank: 769
score: 99.65110809948979
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 769
score: 99.64524063974056
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 769
score: 99.63053731715425
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 769
score: 99.62973201976104
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 769
score: 99.62876674107143
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 770
score: 99.7133368130388
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 770
score: 99.70164100796569
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 770
score: 99.66916048728814
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 770
score: 99.66183172487744
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 770
score: 99.65108668550532
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } return scale ;
rank: 770
score: 99.63053692511792
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; }
rank: 770
score: 99.62865846548507
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 . length ] ;
rank: 771
score: 99.71329471982759
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } }
rank: 771
score: 99.7015219634434
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 771
score: 99.66915838068182
patch: System . arraycopy ( b 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 771
score: 99.66183035714286
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 771
score: 99.6599716558689
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 771
score: 99.6510084502551
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 771
score: 99.64493502103366
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 771
score: 99.63050007370283
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 771
score: 99.62862486758475
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 771
score: 99.62854186100746
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 772
score: 99.71307705965908
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 772
score: 99.70147169682018
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 772
score: 99.66912141393442
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 772
score: 99.66161092122395
patch: final double [ ] scale ; if ( scale == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 772
score: 99.65996413934427
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , true ) ;
rank: 772
score: 99.65091145833334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = null ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 772
score: 99.63048828125
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 772
score: 99.62841796875
patch: scale ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 772
score: 99.62810459421642
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 773
score: 99.71306195175438
patch: scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 773
score: 99.70147169682018
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 773
score: 99.6690823739035
patch: double sum = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 773
score: 99.66154137436224
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 773
score: 99.65995025634766
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 773
score: 99.65090013586956
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scale ; } else { scale = new double [ y 0 . length ] ;
rank: 773
score: 99.64485677083333
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 773
score: 99.62839271282327
patch: scale ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 773
score: 99.62757987406717
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( equations ,
rank: 774
score: 99.71288248697917
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 774
score: 99.701455078125
patch: new double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 774
score: 99.66896339699075
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 774
score: 99.6615234375
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 774
score: 99.65084838867188
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 774
score: 99.64476102941177
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 774
score: 99.63042534722223
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; do { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 774
score: 99.62812003442797
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 774
score: 99.62739114200367
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 775
score: 99.71274201766305
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 775
score: 99.7010546875
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 775
score: 99.65980038400424
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 775
score: 99.65083735039893
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 775
score: 99.64475047831633
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 775
score: 99.63035194546569
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 775
score: 99.62811612215908
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 775
score: 99.62706244169776
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 776
score: 99.71273479055851
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 776
score: 99.70091029575893
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 776
score: 99.6688708289195
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 776
score: 99.66145125679348
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] ) ; } else { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; }
rank: 776
score: 99.65979766845703
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 776
score: 99.65070134943181
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 776
score: 99.64473017939815
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 776
score: 99.63027162905092
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 776
score: 99.62803071120689
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 776
score: 99.62685977711396
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 777
score: 99.71270419034092
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 777
score: 99.70075334821429
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 777
score: 99.66878255208333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ) ;
rank: 777
score: 99.66143798828125
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 777
score: 99.65962254723837
patch: final double error = 0 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ;
rank: 777
score: 99.65066528320312
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 777
score: 99.64469068877551
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 777
score: 99.63013634314903
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance , 0 ) ;
rank: 777
score: 99.62802899894068
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 777
score: 99.62634823927239
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 . length ] ;
rank: 778
score: 99.71262122844827
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 778
score: 99.70074932391827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } }
rank: 778
score: 99.6687644675926
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 778
score: 99.65941273082386
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 778
score: 99.65057508680556
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } }
rank: 778
score: 99.64461576021634
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 778
score: 99.630107421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 778
score: 99.62795584542411
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 778
score: 99.6263068704044
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 779
score: 99.71260793585526
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 779
score: 99.70065487132354
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 779
score: 99.6685763888889
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length + 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 779
score: 99.66136633831522
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scale ;
rank: 779
score: 99.65937003442797
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 779
score: 99.65051020408163
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 779
score: 99.64460227272727
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 779
score: 99.62786233836206
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 779
score: 99.62467687270221
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 780
score: 99.71253551136364
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 780
score: 99.70063999720982
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance + scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 780
score: 99.66838968211206
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ) ;
rank: 780
score: 99.66129225127551
patch: try { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 780
score: 99.65935348252118
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 780
score: 99.6505078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 780
score: 99.64455888856132
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 780
score: 99.63002366286058
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scal CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 780
score: 99.62782389322916
patch: interpolator . store CaMeL Time ( t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 780
score: 99.62419577205883
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 . length ] ; }
rank: 781
score: 99.71232229764344
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } }
rank: 781
score: 99.66836490271227
patch: System . arraycopy ( y 0 , 0 , y , 0 , y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 781
score: 99.66127642463235
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 0 . length ] ;
rank: 781
score: 99.65934952445652
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] [ 0 ] ;
rank: 781
score: 99.650390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scale [ y 0 . length ] ;
rank: 781
score: 99.6444803873698
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 781
score: 99.62781633649554
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 781
score: 99.62367362406717
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y CaMeL Dot CaMeL K [ 0 ] , forward ) ;
rank: 782
score: 99.71217061705508
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 782
score: 99.66836313100961
patch: System . arraycopy ( a 0 , 0 , y , 0 , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 782
score: 99.66122855392157
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } * else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 782
score: 99.65037109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 782
score: 99.64443912146227
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 782
score: 99.62780309606481
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 782
score: 99.62345499067165
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 783
score: 99.712158203125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 783
score: 99.70053796600877
patch: else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 783
score: 99.66834496670081
patch: double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 783
score: 99.66114238664215
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance == null } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 783
score: 99.65904169497283
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance + 1 ] [ 0 ] ;
rank: 783
score: 99.65033203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; . scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 783
score: 99.64441370081019
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 783
score: 99.629833984375
patch: scale = scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 783
score: 99.62779017857143
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 783
score: 99.62270220588235
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 784
score: 99.71205357142857
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 784
score: 99.70042136863425
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 784
score: 99.66828264508929
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; first CaMeL Time = false ;
rank: 784
score: 99.66112323835785
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 784
score: 99.65897409539474
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 784
score: 99.65031294389205
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = scale ;
rank: 784
score: 99.64438883463542
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 784
score: 99.6297762784091
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 784
score: 99.62770623675847
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 784
score: 99.62260232042911
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 785
score: 99.7119140625
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ;
rank: 785
score: 99.70041725852273
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 785
score: 99.6682761863426
patch: scale = ( double [ ] [ ] ) initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 785
score: 99.661044921875
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 785
score: 99.65895677649456
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] [ y ] ;
rank: 785
score: 99.65029509171195
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale ; } else { scale = new double [ y 0 . length ] ; }
rank: 785
score: 99.64435620577831
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 785
score: 99.629775390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , scale ) ;
rank: 785
score: 99.62764937789352
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 785
score: 99.62158203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 786
score: 99.70033616286058
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 786
score: 99.6682549838362
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 786
score: 99.66102430555556
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } final double [ ] scale = new double [ y 0 . length ] ;
rank: 786
score: 99.65885692531779
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 786
score: 99.65029488357843
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } }
rank: 786
score: 99.64431549781976
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 786
score: 99.62972301136364
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 786
score: 99.62103630514706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = scale ;
rank: 787
score: 99.71177936422414
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 787
score: 99.70024956597223
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 787
score: 99.66817801339286
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 787
score: 99.66088388480392
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ;
rank: 787
score: 99.6441053025266
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 787
score: 99.62758685172872
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 787
score: 99.62077287946428
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 788
score: 99.7117354230183
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y length ] ;
rank: 788
score: 99.70021244517544
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 788
score: 99.65881554555085
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , null ) ;
rank: 788
score: 99.65017139668367
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = new double [ y 0 . length ] ;
rank: 788
score: 99.6296064268868
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance , new double [ y 0 . length ] } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 788
score: 99.62756768588362
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 788
score: 99.61969353170956
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 1 ] ;
rank: 789
score: 99.71166548295454
patch: new double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 789
score: 99.6676085425205
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 789
score: 99.64393907912235
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 789
score: 99.62954193691037
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ y 0 ] ; }
rank: 789
score: 99.62752945696721
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 789
score: 99.61949043843283
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 790
score: 99.7114678744612
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 790
score: 99.70013427734375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 790
score: 99.66744679418103
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , scale ) ; }
rank: 790
score: 99.66068359375
patch: } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 790
score: 99.65856119791667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 790
score: 99.6500318877551
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = new scale ;
rank: 790
score: 99.62752559267241
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 790
score: 99.61908232276119
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 . 0 ] ;
rank: 791
score: 99.7113370028409
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 791
score: 99.7000732421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 791
score: 99.66739908854167
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 791
score: 99.6606778231534
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale += new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 791
score: 99.6583401864035
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Tmp [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 791
score: 99.6498046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } scale = scale ;
rank: 791
score: 99.64370840567129
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 791
score: 99.62949859118852
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 791
score: 99.6275158898305
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 791
score: 99.61902032382247
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( equations , forward ,
rank: 792
score: 99.71130901834239
patch: scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 792
score: 99.70002964564732
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 792
score: 99.65821397569445
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 792
score: 99.64340277777778
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 792
score: 99.62944418697033
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 792
score: 99.62737630208333
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 792
score: 99.61847543025362
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 793
score: 99.71126655910327
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 793
score: 99.69996925636575
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 793
score: 99.6672803534836
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , 1 ) ;
rank: 793
score: 99.66066446109694
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 793
score: 99.65806513247283
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] ; scale = new double [ y 0 . length ] ;
rank: 793
score: 99.64966837565105
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance <= null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 793
score: 99.64332071940105
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 . length ] * y ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 793
score: 99.62938652663935
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 . 0 ;
rank: 793
score: 99.62736563846983
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 793
score: 99.61817801339286
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 794
score: 99.71123046875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = 0 ; } else { scale = new double [ y 0 . length ] ; }
rank: 794
score: 99.69990757533482
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 794
score: 99.66724874205508
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 794
score: 99.65788036281779
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 794
score: 99.64929448341837
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null )
rank: 794
score: 99.6432354266827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 794
score: 99.62935207201087
patch: final double [ ] scale = new double [ y 0 . length ] ; final double [ ] scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scale ) ;
rank: 794
score: 99.62733381885593
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 794
score: 99.61769014246323
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 795
score: 99.71121419270834
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 795
score: 99.69984654017857
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 795
score: 99.6671630859375
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 795
score: 99.6603495279948
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 795
score: 99.6491639672256
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 795
score: 99.62730899099576
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 795
score: 99.61728224113806
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; break ;
rank: 796
score: 99.7108094262295
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 796
score: 99.6669921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , true ) ;
rank: 796
score: 99.6603367017663
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; }
rank: 796
score: 99.65759070444915
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 796
score: 99.64900526889535
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance <= null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 796
score: 99.64308518629808
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 796
score: 99.62921612079327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 796
score: 99.6272705078125
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 796
score: 99.61592371323529
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 797
score: 99.71076617324562
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 797
score: 99.69975934709821
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 797
score: 99.66698376885776
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 797
score: 99.64894571109694
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 797
score: 99.64301215277777
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 797
score: 99.62909773284314
patch: scale ; } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , scale ) ;
rank: 797
score: 99.6272186814693
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 797
score: 99.61533344655797
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 798
score: 99.71063565340908
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ;
rank: 798
score: 99.69975490196079
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale += vec CaMeL Absolute CaMeL Tolerance ; }
rank: 798
score: 99.66690767728366
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 798
score: 99.65743255615234
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 798
score: 99.64889322916666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 798
score: 99.64290978773585
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 798
score: 99.6290127840909
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 798
score: 99.61524155560662
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 799
score: 99.69973415798611
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 799
score: 99.66689665421195
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 799
score: 99.65734242584746
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 799
score: 99.64873046875
patch: final double [ ] scale ; double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 799
score: 99.64287293632076
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 799
score: 99.62900571469908
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = 0 ; }
rank: 799
score: 99.61476004464286
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 800
score: 99.71046999667553
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = null ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 800
score: 99.69955078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } final else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 800
score: 99.66685014204545
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , forward , scale ) ;
rank: 800
score: 99.66015625
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ;
rank: 800
score: 99.65727621822033
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 800
score: 99.648681640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; return scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 800
score: 99.64267365828805
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 800
score: 99.62900230532787
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ;
rank: 800
score: 99.62688691737289
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 800
score: 99.61389490076013
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 801
score: 99.71037074497768
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 801
score: 99.69952512254902
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 801
score: 99.66010642538265
patch: final int [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 801
score: 99.64858940972222
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 801
score: 99.62886265345982
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 801
score: 99.62683726165254
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 801
score: 99.61380440848214
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 802
score: 99.71000162760417
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 802
score: 99.6995129707532
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 802
score: 99.66678292410714
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp ) ; }
rank: 802
score: 99.65721571180555
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] ;
rank: 802
score: 99.648583984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 802
score: 99.64258922230114
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 802
score: 99.62886186079545
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 802
score: 99.62672099129098
patch: h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 802
score: 99.61366338315217
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 803
score: 99.70999644886363
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 803
score: 99.69947574013158
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 803
score: 99.66663018588362
patch: System . arraycopy ( y 0 , 0 , y , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 803
score: 99.66007653061224
patch: final double [ ] scale ; if ( scale == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 803
score: 99.6570895010965
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 803
score: 99.64842587425595
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length + 1 ] ; scale = new double [ y 0 . length ] ;
rank: 803
score: 99.642578125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; }
rank: 803
score: 99.62886103877315
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 803
score: 99.6136280004529
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 804
score: 99.70997837611607
patch: scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 804
score: 99.69939055266204
patch: if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 804
score: 99.65988159179688
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 804
score: 99.65705276747882
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 804
score: 99.64822048611111
patch: final double [ ] scale ; int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 804
score: 99.64243727463942
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 804
score: 99.62886018573113
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } }
rank: 804
score: 99.62668829449153
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 804
score: 99.61338895909927
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 . length ] ;
rank: 805
score: 99.70996981534091
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } } else { scale = new double [ y 0 . length ] ;
rank: 805
score: 99.69928977272727
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 805
score: 99.66662145543981
patch: scale = ( double [ ] [ ] ) initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 805
score: 99.65971339026163
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 805
score: 99.65701966366525
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 805
score: 99.64820353190105
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 805
score: 99.64237034574468
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 805
score: 99.62884410511364
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 805
score: 99.62668372844827
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 805
score: 99.61333151424633
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ;
rank: 806
score: 99.70992542613637
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 . length ] ;
rank: 806
score: 99.69927014802632
patch: else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 806
score: 99.65691996729652
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = new double [ y 0 . length ] ;
rank: 806
score: 99.64815090013587
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 806
score: 99.64234780365567
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ;
rank: 806
score: 99.62880859375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 806
score: 99.62661307198661
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 806
score: 99.61308019301471
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 807
score: 99.66632886202831
patch: System . arraycopy ( y 0 , 0 , y , 0 , y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 807
score: 99.65944874043367
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 807
score: 99.656494140625
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 807
score: 99.6480787627551
patch: final double [ ] scale ; final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 807
score: 99.64229403409091
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 807
score: 99.62879356971153
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = null ; }
rank: 807
score: 99.62655050712719
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 807
score: 99.61147891773896
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 808
score: 99.6663067157452
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ;
rank: 808
score: 99.65943492542614
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 808
score: 99.65644034692797
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , false ) ;
rank: 808
score: 99.64806111653645
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = scale ;
rank: 808
score: 99.64228748139881
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ;
rank: 808
score: 99.62876674107143
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . ; } else { scale = new double [ y 0 . length ] ; }
rank: 808
score: 99.62625925164474
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 808
score: 99.61029411764706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 809
score: 99.70950520833334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 809
score: 99.69901945153062
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 809
score: 99.66624691611842
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 809
score: 99.6590234375
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) }
rank: 809
score: 99.65641276041667
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ;
rank: 809
score: 99.64798177083334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scale ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 809
score: 99.64218026620371
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ;
rank: 809
score: 99.62875253182871
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 809
score: 99.6097053079044
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 1 ] = 0 ;
rank: 810
score: 99.70937674386161
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 810
score: 99.69901216947116
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale , vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 810
score: 99.66613539209905
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 810
score: 99.64788942920919
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 810
score: 99.64211748231132
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 810
score: 99.62871476715686
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 810
score: 99.62618702855603
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 810
score: 99.60951254401408
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; first CaMeL Time = false ;
rank: 811
score: 99.70935910247093
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 811
score: 99.66597877358491
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , false ) ;
rank: 811
score: 99.65889070471938
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 811
score: 99.65572861493644
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 811
score: 99.64774576822917
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 811
score: 99.64201171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 811
score: 99.62870570591518
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 811
score: 99.62616502192982
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 811
score: 99.60882927389706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = forward ;
rank: 812
score: 99.70928054559427
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 812
score: 99.69887514467592
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 812
score: 99.6588671875
patch: final double [ ] scale = if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 812
score: 99.65554654396186
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , this ) ;
rank: 812
score: 99.64762037627551
patch: float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 812
score: 99.62863991477273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance * vec CaMeL Absolute CaMeL Tolerance ; }
rank: 812
score: 99.62613600127551
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 812
score: 99.6086227829392
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ;
rank: 813
score: 99.70924479166666
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 813
score: 99.69887514467592
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = null ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 813
score: 99.6659159757653
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 813
score: 99.65882939877717
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 813
score: 99.65537274894068
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 813
score: 99.64723307291666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length + ) ] ; } else { scale = new double [ y 0 . length ] ;
rank: 813
score: 99.64164943321079
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 813
score: 99.62859987745098
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance ) } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 813
score: 99.62607421875
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 813
score: 99.60860072544642
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 814
score: 99.70912388392857
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 814
score: 99.69881036931818
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ; }
rank: 814
score: 99.65866088867188
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 814
score: 99.65530654131356
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 814
score: 99.64722789417614
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 814
score: 99.641611328125
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 814
score: 99.6284649188702
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 814
score: 99.62604391163794
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 814
score: 99.60769473805146
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 . length ] ; }
rank: 815
score: 99.70899325284091
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 815
score: 99.69880894252232
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 815
score: 99.66580255681818
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , t 0 ) ; }
rank: 815
score: 99.65852864583333
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 815
score: 99.65503717237904
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 815
score: 99.64710771276596
patch: scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 815
score: 99.64130316840277
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 815
score: 99.62825833834134
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 815
score: 99.6259765625
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 815
score: 99.60762001811594
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; }
rank: 816
score: 99.70899309430804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } }
rank: 816
score: 99.69873046875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 816
score: 99.6656338778409
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 816
score: 99.65838623046875
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 816
score: 99.65478515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 816
score: 99.64703979492188
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 816
score: 99.64072672526042
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 816
score: 99.62812671326755
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 816
score: 99.62591763200432
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 816
score: 99.60760003167229
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 817
score: 99.70886444627193
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 817
score: 99.66562084441489
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 817
score: 99.65833984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 817
score: 99.64682074652778
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 817
score: 99.628125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance + vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 817
score: 99.6258938029661
patch: interpolator . store CaMeL Time ( t 0 , t 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 817
score: 99.60712747012867
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = stages ;
rank: 818
score: 99.7088623046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 818
score: 99.69872089460785
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; out } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 818
score: 99.66551920572917
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ) ; }
rank: 818
score: 99.65826822916667
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 818
score: 99.6546279131356
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 818
score: 99.64680989583333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = y 0 . length ;
rank: 818
score: 99.64055266203704
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 818
score: 99.62811159620098
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 818
score: 99.6257538377193
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 818
score: 99.60658892463235
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 819
score: 99.70876620678192
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 819
score: 99.69868607954545
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 819
score: 99.6650390625
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ) ; }
rank: 819
score: 99.65824809827302
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 819
score: 99.65419756355932
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 819
score: 99.64674479166666
patch: { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 819
score: 99.64054509943182
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 819
score: 99.60653730751811
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New ;
rank: 820
score: 99.70869954427083
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 820
score: 99.69856480189732
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 820
score: 99.66490279796511
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 820
score: 99.65381944444445
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = new double [ y 0 . length ] [ ] ;
rank: 820
score: 99.64639945652173
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ;
rank: 820
score: 99.640341796875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 820
score: 99.62805397727273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , [ y 0 . length - 1 ] ) ;
rank: 820
score: 99.62553267045455
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 820
score: 99.60606474034927
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( ) ; }
rank: 821
score: 99.70862100290698
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; / * { scale = new double [ y 0 . length ] ;
rank: 821
score: 99.69854856004902
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 821
score: 99.6644837622549
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 821
score: 99.6580859375
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 821
score: 99.65379231770834
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) [ 1 ] ) ;
rank: 821
score: 99.64635416666667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 821
score: 99.64013671875
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 821
score: 99.62803500306373
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ ] ; }
rank: 821
score: 99.62545460668103
patch: scale ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 821
score: 99.60523120777027
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 1 ] ;
rank: 822
score: 99.70860224184783
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = 0 . length ;
rank: 822
score: 99.69852388822116
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 822
score: 99.65802651263297
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; }
rank: 822
score: 99.65352721133475
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 822
score: 99.64629572088069
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 822
score: 99.64009986733491
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 822
score: 99.62792112116227
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 822
score: 99.60475401947464
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 823
score: 99.70859998337765
patch: final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 823
score: 99.65794921875
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 823
score: 99.65349469866071
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = a [ 0 ] [ 0 ] ;
rank: 823
score: 99.64621310763889
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length - 1 ] ;
rank: 823
score: 99.64003208705357
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 823
score: 99.62791053921569
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 823
score: 99.60466452205883
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ $NUMBER$ ] ;
rank: 824
score: 99.70855502424568
patch: scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 824
score: 99.66415292245371
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( ) ;
rank: 824
score: 99.65792713994566
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] ) ; }
rank: 824
score: 99.65318080357143
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y - 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 824
score: 99.6461893717448
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance }
rank: 824
score: 99.62786347987289
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 824
score: 99.62524842379386
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 824
score: 99.60436293658088
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 825
score: 99.70805921052632
patch: final double [ ] scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 825
score: 99.6984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 825
score: 99.6640957919034
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 825
score: 99.65773703835227
patch: final double [ ] scale : if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 825
score: 99.65310767389113
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 1 , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 825
score: 99.64608764648438
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 825
score: 99.6397960574128
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 825
score: 99.6277606670673
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 825
score: 99.62516837284483
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 825
score: 99.60417624080883
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = false ;
rank: 826
score: 99.70803965692934
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 826
score: 99.69842862215908
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 826
score: 99.66403432992789
patch: System . arraycopy ( a 0 , 0 , y , 0 , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 826
score: 99.6575419108073
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 826
score: 99.6529541015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 826
score: 99.64597486413044
patch: final double [ ] scale ; final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 826
score: 99.63974417892157
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 826
score: 99.62772310697116
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 826
score: 99.62515371817129
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 826
score: 99.60375258501838
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = sum ;
rank: 827
score: 99.70802382172131
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 827
score: 99.69839913504464
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ null ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance [ null ] ; }
rank: 827
score: 99.66401198814656
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Tmp , forward ) ;
rank: 827
score: 99.65725911458334
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( scale == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 827
score: 99.65294409579919
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , scale ) ;
rank: 827
score: 99.6454366048177
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 827
score: 99.6397372159091
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 827
score: 99.625107421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ;
rank: 827
score: 99.60335994112319
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 828
score: 99.6982891376202
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 828
score: 99.66369176793981
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , forward ) ; }
rank: 828
score: 99.65703352107558
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 828
score: 99.65277409957628
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 828
score: 99.64530806107955
patch: final double [ ] scale ; if ( scale == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 828
score: 99.63971416766827
patch: final double [ ] scale = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 828
score: 99.62747896634616
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 828
score: 99.60285500919117
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 829
score: 99.66363055889423
patch: System . arraycopy ( a 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; first CaMeL Time = false ;
rank: 829
score: 99.65697224934895
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null : vec CaMeL Absolute CaMeL Tolerance ;
rank: 829
score: 99.65263051835318
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 829
score: 99.64525257457386
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scale ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 829
score: 99.63956552181604
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 829
score: 99.62746957632211
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; ;
rank: 829
score: 99.62492290296052
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 829
score: 99.6017040307971
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 . length ] ; }
rank: 830
score: 99.70797470868644
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) scale = vec CaMeL Absolute CaMeL Tolerance ; else scale = new double [ y 0 . length ] ;
rank: 830
score: 99.66355543870192
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; first CaMeL Time = false ;
rank: 830
score: 99.65690104166667
patch: scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 830
score: 99.65238715277778
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; } else { sum = new double [ y 0 . length ] ;
rank: 830
score: 99.64446311773256
patch: float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 830
score: 99.6395143995098
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 830
score: 99.62740384615384
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 830
score: 99.62491995389344
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 830
score: 99.60167410714286
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 831
score: 99.70797293526786
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 831
score: 99.69817116477273
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 831
score: 99.6568678252551
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } }
rank: 831
score: 99.65230237023304
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 831
score: 99.64443774933511
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } scale = scale ;
rank: 831
score: 99.63945496757076
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 831
score: 99.62734927771227
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 0 ] ; }
rank: 831
score: 99.62491581357759
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 831
score: 99.60133272058823
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 . length ] ; }
rank: 832
score: 99.707763671875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 832
score: 99.69813687193627
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 832
score: 99.66325774016204
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 832
score: 99.65653268914474
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 832
score: 99.65225290697674
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 832
score: 99.6444118923611
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } ;
rank: 832
score: 99.60089470358456
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 833
score: 99.70774244225544
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y . length ] ; } else { scale = new double [ y . length ] ;
rank: 833
score: 99.65636427859043
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = new double [ y 0 . length ] ;
rank: 833
score: 99.65205078125
patch: final double error = 1 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ;
rank: 833
score: 99.64438264266305
patch: final double [ ] scale ; final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 833
score: 99.63931978665866
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 833
score: 99.62718394886363
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 833
score: 99.62476870888158
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , t 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 833
score: 99.600830078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 . length ] ; }
rank: 834
score: 99.70764973958333
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 834
score: 99.69798900462963
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 834
score: 99.66310402199075
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 834
score: 99.6563123337766
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : new double [ y 0 . length ] ;
rank: 834
score: 99.65201822916667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 834
score: 99.64424035904256
patch: final double [ ] scale ; final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 834
score: 99.6271221454327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = false ; }
rank: 834
score: 99.60073939732143
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 835
score: 99.7076416015625
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 835
score: 99.69787367334905
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 835
score: 99.66297538325472
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 835
score: 99.65626061480978
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] ) ; } else { scale ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 835
score: 99.6442234205163
patch: } else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 835
score: 99.62708984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 835
score: 99.62457575563525
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 835
score: 99.60064338235294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 836
score: 99.70730251736111
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = null ; }
rank: 836
score: 99.69780717329546
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 836
score: 99.66210080866227
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; first CaMeL Time = false ; }
rank: 836
score: 99.65616319444445
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? null : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 836
score: 99.65195478019068
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; }
rank: 836
score: 99.64418096127717
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 836
score: 99.63908743351064
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 836
score: 99.62703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 836
score: 99.62454723011363
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 836
score: 99.60057875689338
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 837
score: 99.70729166666666
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 837
score: 99.69779075766509
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 837
score: 99.66174555759804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == 0 ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 837
score: 99.65613644622093
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . y ] ; } else { scale = new double [ y 0 . length ] ;
rank: 837
score: 99.651953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 837
score: 99.64414911684783
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scale ; }
rank: 837
score: 99.6390713778409
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 837
score: 99.62687882133152
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 ) ;
rank: 837
score: 99.62448055186171
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 837
score: 99.60024233217592
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ;
rank: 838
score: 99.70729166666666
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 838
score: 99.697763671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; * } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 838
score: 99.65191243489583
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 838
score: 99.64409845525569
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } }
rank: 838
score: 99.63888250612744
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 838
score: 99.62672706886575
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 838
score: 99.59992781929348
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 839
score: 99.70715942382813
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 839
score: 99.69769965277777
patch: else { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 839
score: 99.66159292367789
patch: System . arraycopy ( a 0 , 0 , y , 0 , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 839
score: 99.65597098214286
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 839
score: 99.64407413563829
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = ( double [ ] ;
rank: 839
score: 99.63886926529256
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 839
score: 99.6243836449795
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 839
score: 99.5995232077206
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else {
rank: 840
score: 99.7071533203125
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 840
score: 99.69766939603366
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance , scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 840
score: 99.66150132665095
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 840
score: 99.65596101721938
patch: final double [ ] scale = if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 840
score: 99.6516345796131
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = a [ 0 ] ;
rank: 840
score: 99.64404296875
patch: final double [ ] scale ; final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 840
score: 99.63876953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 840
score: 99.62664794921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = null ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 840
score: 99.6243096713362
patch: scale ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 840
score: 99.59946576286765
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = 1 ;
rank: 841
score: 99.70688302176339
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ y 0 . length ] = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 841
score: 99.69766177771227
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 841
score: 99.66131706957547
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , scale ) ;
rank: 841
score: 99.65127615201271
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , true ) ;
rank: 841
score: 99.64400634765624
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 841
score: 99.62418619791667
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 841
score: 99.59923112896126
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K ,
rank: 842
score: 99.70681966145834
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ y 0 . length ] = scal CaMeL Absolute CaMeL Tolerance ; } else { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 842
score: 99.69762961647727
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 842
score: 99.6610858623798
patch: System . arraycopy ( y 0 , 0 , y , 0 , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 842
score: 99.65572185905613
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 842
score: 99.65125621448864
patch: final double error = 0 ; for ( boolean loop = true ; loop ; ) { if ( first CaMeL Time || ! fsal ) { final double [ ] scale = new double [ y 0 . length ] ;
rank: 842
score: 99.64399754723837
patch: final Float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 842
score: 99.63869357638889
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 842
score: 99.62658025568182
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , new double [ y 0 . length ] , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 842
score: 99.62409920528017
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 842
score: 99.59738026494566
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 843
score: 99.7066714638158
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 843
score: 99.6605224609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 843
score: 99.65572185905613
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 843
score: 99.64389436141305
patch: final int [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 843
score: 99.63862400428921
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 843
score: 99.626572265625
patch: scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 843
score: 99.62381546585648
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 843
score: 99.59634765625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 844
score: 99.70640462239584
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 844
score: 99.69758823939732
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 844
score: 99.66040499705188
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 844
score: 99.65570068359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 844
score: 99.65122649629237
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 844
score: 99.64348196476064
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = null ; } else { scale = new double [ y 0 . length ] ;
rank: 844
score: 99.63853681848404
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 844
score: 99.62655526620371
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 844
score: 99.62367720170455
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 844
score: 99.59547254774306
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K ) ;
rank: 845
score: 99.7063857256356
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 845
score: 99.69747978344299
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 845
score: 99.65552256058673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 845
score: 99.65120180191532
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 1 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 845
score: 99.6433438387784
patch: final Double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 845
score: 99.6384914232337
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 845
score: 99.62642728365384
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 845
score: 99.62358940972223
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 845
score: 99.5944576539855
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 846
score: 99.70629040948276
patch: scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } }
rank: 846
score: 99.69747869318182
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 846
score: 99.66011939858491
patch: System . arraycopy ( y 0 , 0 , y , 0 , y 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 846
score: 99.64330512152777
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 846
score: 99.63836020611703
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 846
score: 99.62639382102273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance - vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 846
score: 99.59380938555744
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 847
score: 99.70592840786638
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } }
rank: 847
score: 99.69739008884804
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 847
score: 99.65995065789474
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , y CaMeL Dot CaMeL K [ 0 ] ) ; }
rank: 847
score: 99.65074920654297
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 847
score: 99.64329769736842
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 847
score: 99.63829414799528
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 847
score: 99.62634765625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , vec CaMeL Absolute CaMeL Tolerance , null ) ;
rank: 847
score: 99.62355170815678
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 847
score: 99.59270267210145
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 848
score: 99.70585300611413
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 848
score: 99.6973876953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 848
score: 99.65976186899039
patch: final double sum = b 0 ; h CaMeL New = initialize CaMeL Step ( equations , forward , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 848
score: 99.65522801598837
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . y ] ;
rank: 848
score: 99.6507216631356
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 848
score: 99.6428859544837
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = 0 . length ;
rank: 848
score: 99.63824338329081
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] [ y 0 . length ] ;
rank: 848
score: 99.62627336090686
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 848
score: 99.62312534877232
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 848
score: 99.59237715126811
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 849
score: 99.70562189275569
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 1 ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 849
score: 99.69737897600446
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 849
score: 99.65508039607558
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 849
score: 99.65066373146186
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 849
score: 99.64253540039063
patch: final double [ ] scale ; if ( scale == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 849
score: 99.62606956845238
patch: scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 849
score: 99.62311260516827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 849
score: 99.59233469202898
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 850
score: 99.7056084994612
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 850
score: 99.69728440504808
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { this . scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 850
score: 99.65495499320652
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scale ;
rank: 850
score: 99.65049821239407
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward ) ;
rank: 850
score: 99.64186128656915
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 850
score: 99.62606811523438
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , $NUMBER$ ) ;
rank: 850
score: 99.59227818080358
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 851
score: 99.69719709429825
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 851
score: 99.65481567382812
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null * vec CaMeL Absolute CaMeL Tolerance ;
rank: 851
score: 99.65042317708334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 851
score: 99.62579345703125
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 851
score: 99.62293551260964
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 851
score: 99.59130151721014
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = 0 ; }
rank: 852
score: 99.70536665482955
patch: else final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 852
score: 99.65453084309895
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance >= null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 852
score: 99.65006510416667
patch: final double error = 0 ; for ( boolean loop = true ; loop ; ) { if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) {
rank: 852
score: 99.64172894021739
patch: scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 852
score: 99.63772715692934
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 852
score: 99.62293352399554
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Tmp [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 852
score: 99.59072124094203
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] ;
rank: 853
score: 99.70533068426724
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 853
score: 99.6970847800926
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 853
score: 99.64991396949405
patch: final double error = 0 ; if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ 0 ] ;
rank: 853
score: 99.64164402173913
patch: final double [ ] scale ; final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 853
score: 99.62559442934783
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 853
score: 99.62290482954545
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 853
score: 99.59054432744566
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; }
rank: 854
score: 99.70531354631696
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 854
score: 99.69707414215686
patch: else final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 854
score: 99.65855994591347
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , t 0 ) ;
rank: 854
score: 99.64984441207628
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 854
score: 99.64156000664893
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 854
score: 99.637626953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 854
score: 99.62556640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , $NUMBER$ , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 854
score: 99.62270682198661
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 854
score: 99.59012369791667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 855
score: 99.7052801724138
patch: double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 855
score: 99.65403645833334
patch: final double [ ] scale ; if ( ( vec CaMeL Absolute CaMeL Tolerance == null ) ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 855
score: 99.64136803668478
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( scale == null ) scale = new double [ y 0 . length ] ;
rank: 855
score: 99.6376201923077
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 855
score: 99.62265625
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 855
score: 99.58953683035715
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 856
score: 99.7052801724138
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 856
score: 99.69699754901961
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; length } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 856
score: 99.65386962890625
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 856
score: 99.64921755907012
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 856
score: 99.641357421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length + 1 ] ;
rank: 856
score: 99.63745595894608
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 856
score: 99.62546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 856
score: 99.62261962890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 856
score: 99.58923688616072
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = h CaMeL New ;
rank: 857
score: 99.70513705549568
patch: final double scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 857
score: 99.69696044921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 857
score: 99.65380859375
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 857
score: 99.64921061197917
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 857
score: 99.64122683502907
patch: final short [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 857
score: 99.637275390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 857
score: 99.625390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 857
score: 99.62205038265306
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 857
score: 99.58871372767857
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 858
score: 99.7051202182112
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; }
rank: 858
score: 99.69688585069444
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ; }
rank: 858
score: 99.65370686848958
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 858
score: 99.64907836914062
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 858
score: 99.64113599200581
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ; } else { scale = new double [ y 0 . length ] ; }
rank: 858
score: 99.63713107638888
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ;
rank: 858
score: 99.62537772700472
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 858
score: 99.62154651988637
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , t 0 ) ;
rank: 858
score: 99.58771906672297
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] + y CaMeL Dot CaMeL K [ 0 ] ;
rank: 859
score: 99.70506211577869
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance . is CaMeL Empty ( ) ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 859
score: 99.69681351273148
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 859
score: 99.656708984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ,
rank: 859
score: 99.64903675426136
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else {
rank: 859
score: 99.637080078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 859
score: 99.62521063112744
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 859
score: 99.62152206688596
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 859
score: 99.58731981734155
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; first CaMeL Time = false ;
rank: 860
score: 99.70474446614584
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 860
score: 99.69675925925925
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; for ( ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 860
score: 99.64890950520834
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 860
score: 99.63693895526961
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; }
rank: 860
score: 99.621474609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 860
score: 99.5857464334239
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 861
score: 99.70468589907787
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 861
score: 99.69665979456019
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 861
score: 99.65643780048077
patch: System . arraycopy ( a 0 , 0 , y , 0 , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 861
score: 99.6531292459239
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] , vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] ) ; }
rank: 861
score: 99.64849262852823
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; first CaMeL Time = false ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 861
score: 99.64090098505434
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 861
score: 99.63669960171569
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 861
score: 99.62508968431122
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = true ; }
rank: 861
score: 99.62142508370536
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 861
score: 99.58567566802536
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ; }
rank: 862
score: 99.70464533025569
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 862
score: 99.6966488486842
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 862
score: 99.65310108418367
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 862
score: 99.64717029389881
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = b [ 0 ] [ 0 ] ;
rank: 862
score: 99.64066655585107
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scale ; } else { scale = new double [ y 0 . length ] ;
rank: 862
score: 99.6364237467448
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 862
score: 99.6250861672794
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , new double [ y 0 . length ] ) ;
rank: 862
score: 99.62111088267544
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 862
score: 99.58502970950704
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K ;
rank: 863
score: 99.70418160860656
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 863
score: 99.65624060997597
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Tmp [ 1 ] = y [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 863
score: 99.65301371729652
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 863
score: 99.6469017767137
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 1 , scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 863
score: 99.6405613111413
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] . length ] ;
rank: 863
score: 99.63636067708333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 863
score: 99.62501842570755
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 863
score: 99.58454241071429
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 . length ] ;
rank: 864
score: 99.70404343377976
patch: long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 864
score: 99.65578988882211
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 1 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 864
score: 99.65298150510205
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance <= null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 864
score: 99.64028695913461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 864
score: 99.6362890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance < null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 864
score: 99.6248046875
patch: scale = scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 864
score: 99.62051980537281
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; }
rank: 864
score: 99.58451224662163
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] + y CaMeL Dot CaMeL K [ 1 ] ;
rank: 865
score: 99.70370047433036
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 865
score: 99.6529796511628
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . $NUMBER$ ] ;
rank: 865
score: 99.64025297619048
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 865
score: 99.63614366319445
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; }
rank: 865
score: 99.62472534179688
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 865
score: 99.58441076144366
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 866
score: 99.70368303571429
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ; }
rank: 866
score: 99.69633427372685
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 866
score: 99.65545789930556
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 866
score: 99.64016856317934
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 866
score: 99.624716796875
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 866
score: 99.58333773226352
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 867
score: 99.70315926535088
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 867
score: 99.69626290457589
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 867
score: 99.6522725423177
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 867
score: 99.6457256610577
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 867
score: 99.64013671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale ; }
rank: 867
score: 99.63606770833333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 867
score: 99.62467447916667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 867
score: 99.61990411931818
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 867
score: 99.58294591769366
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 868
score: 99.70309012276786
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 868
score: 99.69625418526786
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 868
score: 99.65435546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations ) ; }
rank: 868
score: 99.6455322265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } * /
rank: 868
score: 99.64006076388888
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } }
rank: 868
score: 99.635654296875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] + y CaMeL Dot CaMeL K [ 1 ] ;
rank: 868
score: 99.62444196428571
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y ] ; }
rank: 868
score: 99.61974883497807
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 868
score: 99.58280986064189
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] ;
rank: 869
score: 99.7030821683114
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 869
score: 99.69612038352273
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 869
score: 99.65191650390625
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 869
score: 99.64501201923076
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 869
score: 99.64002821180556
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ;
rank: 869
score: 99.63543836805556
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] ;
rank: 869
score: 99.58266395246478
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 870
score: 99.70295120497882
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 870
score: 99.69611725983796
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 870
score: 99.65185546875
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 870
score: 99.64498077876983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; first CaMeL Time = false ;
rank: 870
score: 99.63978949652778
patch: final double [ ] scale ; if ( scale == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 870
score: 99.63519411670919
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 870
score: 99.62431640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , $NUMBER$ , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 870
score: 99.61969992897727
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 870
score: 99.58263644366197
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New = false ;
rank: 871
score: 99.70291883680555
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = $NUMBER$ ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 871
score: 99.69608637971699
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 871
score: 99.65301393995098
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = true ; }
rank: 871
score: 99.65181477864583
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 871
score: 99.64432779947917
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 871
score: 99.63970656622024
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 871
score: 99.63513901654412
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 871
score: 99.6195068359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 871
score: 99.58147419674296
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 872
score: 99.70269564924568
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 872
score: 99.65289861505681
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == 0 ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 872
score: 99.65162150065105
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; }
rank: 872
score: 99.644287109375
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 872
score: 99.63970521438954
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 872
score: 99.63498757102273
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 872
score: 99.58133370535714
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 1 ] ;
rank: 873
score: 99.70261840820312
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ length ] ;
rank: 873
score: 99.69597061820652
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = null ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 873
score: 99.65274234693878
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 873
score: 99.65149943033855
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 873
score: 99.6397020293445
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 873
score: 99.63480548469387
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 873
score: 99.62354512117346
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 873
score: 99.61917489035088
patch: h CaMeL New = initialize CaMeL Step ( equations , t 0 , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 873
score: 99.58125697544642
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Tmp ) ;
rank: 874
score: 99.7025539592161
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 874
score: 99.69579206194196
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = Math . min ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 874
score: 99.6514295212766
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 874
score: 99.64323425292969
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 874
score: 99.6396233974359
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 874
score: 99.63473690257354
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 874
score: 99.62332737699468
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 874
score: 99.58045637103874
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [
rank: 875
score: 99.70215700383773
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 875
score: 99.6957146139706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ;
rank: 875
score: 99.65233313519022
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 875
score: 99.64294149709302
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 875
score: 99.6393191315407
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new int [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 875
score: 99.6347125509511
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 . length ] ;
rank: 875
score: 99.62326171875
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 875
score: 99.61881801060268
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 875
score: 99.58040364583333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ ;
rank: 876
score: 99.70178506540698
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } { scale = new double [ y 0 . length ] ;
rank: 876
score: 99.695703125
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 876
score: 99.65225219726562
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 876
score: 99.65099246002907
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 876
score: 99.6428955078125
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 876
score: 99.63914954144022
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scale ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 876
score: 99.62320006127452
patch: scale ; } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 876
score: 99.5802654109589
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ ] ;
rank: 877
score: 99.701708984375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 877
score: 99.69569614955357
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 877
score: 99.651982421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = new double [ y 0 . length ] [ 0 ] ; }
rank: 877
score: 99.64220377604167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ) ;
rank: 877
score: 99.63906462296195
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 877
score: 99.634501953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 877
score: 99.62312979068396
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 877
score: 99.57953404017857
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( equations , forward ) ;
rank: 878
score: 99.69569116709184
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 878
score: 99.63889898255815
patch: { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 878
score: 99.63438924153645
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 878
score: 99.62306602328431
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 878
score: 99.57881272007042
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 879
score: 99.70147169682018
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 879
score: 99.69568323206019
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 879
score: 99.65078922193878
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale : new double [ ] [ ] [ ] { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 879
score: 99.65027436755952
patch: } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] ) ; } else { scale ( new double [ y 0 . length ] ) ;
rank: 879
score: 99.641357421875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 879
score: 99.6385498046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; scale = scale ;
rank: 879
score: 99.6343443627451
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 879
score: 99.61831498579545
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 879
score: 99.57836216517858
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 880
score: 99.70139382102273
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = new double [ y 0 . length ] ;
rank: 880
score: 99.64112079326924
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 880
score: 99.63835797991071
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 880
score: 99.63427734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 880
score: 99.62295719068878
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = false ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 880
score: 99.57614397321429
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New ; }
rank: 881
score: 99.7013089364035
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ;
rank: 881
score: 99.69554379111842
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 881
score: 99.65020751953125
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 881
score: 99.649287109375
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 881
score: 99.6410412397541
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ,
rank: 881
score: 99.63821614583334
patch: final double [ ] scale ; scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 881
score: 99.633623046875
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 881
score: 99.61799839564732
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 881
score: 99.57586927816901
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; interpolator . shift ( ) ;
rank: 882
score: 99.7011297817888
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } }
rank: 882
score: 99.69544813368056
patch: if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 882
score: 99.65020461309524
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = new double [ y 0 . length ] ; }
rank: 882
score: 99.64912109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 882
score: 99.64032451923077
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 882
score: 99.63799913194444
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scale ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 882
score: 99.633564453125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = new double [ y 0 ] ;
rank: 882
score: 99.62281709558823
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 882
score: 99.617890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ;
rank: 882
score: 99.57396782769098
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; first CaMeL Time = false ; }
rank: 883
score: 99.70109049479167
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 883
score: 99.69534122242646
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 883
score: 99.64999389648438
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 883
score: 99.64908500339673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 - y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 883
score: 99.64021809895833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) [ 0 ] ) ;
rank: 883
score: 99.63798828125
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 883
score: 99.63349609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 883
score: 99.622724609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance . length ) ;
rank: 883
score: 99.617802734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 883
score: 99.57388864436619
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 884
score: 99.69524016203704
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; }
rank: 884
score: 99.639892578125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , get CaMeL Order ( ) ,
rank: 884
score: 99.6378173828125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ++ ] ; } else { scale = new double [ y 0 . length ] ;
rank: 884
score: 99.63334233710107
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 884
score: 99.62259845344387
patch: scale = scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 884
score: 99.573681640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } }
rank: 885
score: 99.70083568135246
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ; }
rank: 885
score: 99.64890455163044
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y [ 1 ] ;
rank: 885
score: 99.63780628551136
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = scale ;
rank: 885
score: 99.63289388020833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 885
score: 99.61754918981481
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 885
score: 99.57291208186619
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 886
score: 99.70070014565678
patch: final double [ ] scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 886
score: 99.69515269886364
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ null ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance [ null ] ;
rank: 886
score: 99.64939328457447
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 886
score: 99.64880901834239
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 886
score: 99.63924678679436
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , 0 , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 886
score: 99.63767453457447
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 886
score: 99.63252160904256
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 886
score: 99.62252174233491
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 886
score: 99.61739813112744
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( ) ;
rank: 886
score: 99.57290364583334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 887
score: 99.70063556608606
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance . is CaMeL Empty ( ) ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 887
score: 99.69514382102273
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 887
score: 99.64927606997283
patch: } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] ) ;
rank: 887
score: 99.63899739583333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp ,
rank: 887
score: 99.63752885298295
patch: scale ; } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 887
score: 99.632509765625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 887
score: 99.62241118808963
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 887
score: 99.61730504918981
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 887
score: 99.57272600446429
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 888
score: 99.70050680226294
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 888
score: 99.69513811383929
patch: else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 888
score: 99.63893539186508
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 888
score: 99.63747499047255
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 888
score: 99.6324103860294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 888
score: 99.62234375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 888
score: 99.6172762784091
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 888
score: 99.57181693412163
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ $NUMBER$ ] ;
rank: 889
score: 99.70049324682203
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 889
score: 99.69504957932692
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 889
score: 99.6480078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 889
score: 99.6383026867378
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 889
score: 99.63674094460227
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; } else { scale = new double [ y 0 . length ] ;
rank: 889
score: 99.622314453125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 889
score: 99.61720784505208
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ; }
rank: 889
score: 99.57168240017361
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K . ;
rank: 890
score: 99.70038052262932
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } }
rank: 890
score: 99.69498988560268
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 890
score: 99.64821458899456
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 890
score: 99.63829752604167
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ) ; }
rank: 890
score: 99.63657769097222
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; scale ;
rank: 890
score: 99.62225456957547
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , new double [ y 0 . length ] , 0 ) ;
rank: 890
score: 99.6171242042824
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 890
score: 99.57086676520271
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 891
score: 99.70026152012711
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . scale ( scal CaMeL Absolute CaMeL Tolerance ) ; } }
rank: 891
score: 99.64802594866072
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 891
score: 99.63828435019842
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ,
rank: 891
score: 99.63653273809524
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 891
score: 99.631552734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 891
score: 99.6221564797794
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 891
score: 99.61703378182871
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 891
score: 99.57082868303571
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New ++ ;
rank: 892
score: 99.70023890904018
patch: final int [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 892
score: 99.69486038773148
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 892
score: 99.64783494015957
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 892
score: 99.64755062181122
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 892
score: 99.63826497395833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else {
rank: 892
score: 99.63626231317934
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else {
rank: 892
score: 99.62208116319445
patch: final double [ ] scale = ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 892
score: 99.6168964092548
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 892
score: 99.57058071082747
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 893
score: 99.64764694940476
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } { scale = new double [ y 0 . length ] ;
rank: 893
score: 99.64726118607955
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 893
score: 99.63822361680327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { first CaMeL Time = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ) ;
rank: 893
score: 99.63619559151786
patch: try { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 893
score: 99.6313671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 893
score: 99.61663707386364
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 893
score: 99.57029854910714
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New = y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 894
score: 99.7001232710041
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 894
score: 99.69466458834134
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; / } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 894
score: 99.64761284722222
patch: final double [ ] scale ; try { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 894
score: 99.64712890625
patch: System . arraycopy ( y 0 , 0 , y , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 894
score: 99.63804408482143
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ) ;
rank: 894
score: 99.63608620383523
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length 1 ] ;
rank: 894
score: 99.621826171875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ;
rank: 894
score: 99.57010226779514
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Tmp , forward ) ;
rank: 895
score: 99.69998013771186
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } } { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 895
score: 99.69460720486111
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 895
score: 99.64672283793605
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 895
score: 99.63600336119185
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 895
score: 99.63106553819445
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 895
score: 99.62169392903645
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y ] ;
rank: 895
score: 99.61625532670455
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 895
score: 99.56970544763513
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] : y CaMeL Dot CaMeL K [ 0 ] ;
rank: 896
score: 99.69460401348039
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } final else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 896
score: 99.64729471409575
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 896
score: 99.63747829861111
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ) ;
rank: 896
score: 99.62154047539893
patch: scale ; } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scale ) ;
rank: 896
score: 99.61553332270408
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 896
score: 99.56834635416666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 897
score: 99.699951171875
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 897
score: 99.64629504145408
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 897
score: 99.63743542086694
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , scale , get CaMeL Order ( ) ,
rank: 897
score: 99.63566623263888
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 897
score: 99.6300074800532
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 897
score: 99.62137957317073
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 897
score: 99.61544921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 897
score: 99.56729043496621
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 - y CaMeL Dot CaMeL K [ 0 ] ;
rank: 898
score: 99.69988692434211
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y . length ] ;
rank: 898
score: 99.69459751674107
patch: scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 898
score: 99.64623046875
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ) ;
rank: 898
score: 99.64605287063954
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale += new double [ y 0 . length ] ;
rank: 898
score: 99.63720703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 898
score: 99.63557942708333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale = new scale ;
rank: 898
score: 99.62137934846699
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , new double [ y 0 . length ] ) ;
rank: 898
score: 99.61542426215277
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp [ 1 ] ) ;
rank: 898
score: 99.56717623197116
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 899
score: 99.69979121767241
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 899
score: 99.69432636335785
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 899
score: 99.64622961956522
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale : new double [ ] [ ] { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 899
score: 99.63705679086539
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 899
score: 99.6298828125
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ;
rank: 899
score: 99.61511948529412
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( ) ;
rank: 899
score: 99.56711077008929
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = 0 ;
rank: 900
score: 99.69953865840517
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 900
score: 99.64606584821429
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; h CaMeL New = false ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 900
score: 99.64592796148256
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . 0 ] ;
rank: 900
score: 99.63689701140873
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; else
rank: 900
score: 99.63472222222222
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale ; scale = new double [ y 0 . length ] ;
rank: 900
score: 99.6211270419034
patch: scale = 0 . 0 ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 900
score: 99.61508413461539
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = new double [ y 0 . length ] ;
rank: 900
score: 99.56694010416666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 901
score: 99.69945088370902
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 901
score: 99.64562136627907
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y - 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 901
score: 99.6450528231534
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale ;
rank: 901
score: 99.63645459784836
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , first CaMeL Time ) ;
rank: 901
score: 99.63449435763889
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 901
score: 99.62971340880102
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 901
score: 99.62111409505208
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( new double [ y 0 . length ] ) ;
rank: 901
score: 99.56601034628379
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] ;
rank: 902
score: 99.69917805989583
patch: double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 902
score: 99.6454296875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale : new double [ ] [ ] [ ] { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 902
score: 99.63636067708333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) {
rank: 902
score: 99.62925826671511
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; }
rank: 902
score: 99.62099609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance , scal CaMeL Absolute CaMeL Tolerance } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 902
score: 99.61457429108796
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 902
score: 99.56599055109797
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , forward ) ;
rank: 903
score: 99.69911943855932
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 903
score: 99.6939541903409
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; }
rank: 903
score: 99.64495442708333
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 903
score: 99.64469401041667
patch: if ( ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 903
score: 99.63629807692308
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 903
score: 99.63431140988372
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 903
score: 99.62901013962765
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 903
score: 99.62083943684895
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = true ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 903
score: 99.61455078125
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 903
score: 99.56518880208333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 904
score: 99.69899088541666
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 904
score: 99.64475835755815
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 [ length ] ;
rank: 904
score: 99.63627115885417
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , scale ,
rank: 904
score: 99.62899925595238
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 904
score: 99.62076822916667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 904
score: 99.61428545106132
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 904
score: 99.56421930017606
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 905
score: 99.698681640625
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 905
score: 99.69384765625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; break ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 905
score: 99.64434956395348
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y $NUMBER$ . length ] ;
rank: 905
score: 99.63610276442307
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 905
score: 99.6340664950284
patch: final int [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 905
score: 99.62069515306122
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 905
score: 99.61416015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else {
rank: 905
score: 99.56307768485915
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; first CaMeL Time = 0 ;
rank: 906
score: 99.69862944504311
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ;
rank: 906
score: 99.69383877840909
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } }
rank: 906
score: 99.64408452460107
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 906
score: 99.64407552083334
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 906
score: 99.6359423027664
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , forward ) ;
rank: 906
score: 99.6337354706555
patch: final final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 906
score: 99.62856038411458
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 906
score: 99.6206724877451
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 906
score: 99.56237621038733
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K ;
rank: 907
score: 99.69844908633475
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 907
score: 99.6937614889706
patch: new double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 907
score: 99.64404296875
patch: if ( ! first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 907
score: 99.64394077034883
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale -= new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 907
score: 99.6357189360119
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ,
rank: 907
score: 99.6336337002841
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scale ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 907
score: 99.62843874667553
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 907
score: 99.620654296875
patch: scale = 0 . 0 ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 907
score: 99.6139503761574
patch: h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 907
score: 99.56192593961148
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] : y CaMeL Dot CaMeL K [ 1 ] ;
rank: 908
score: 99.69809792258523
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = 0 ; } else { scale = new double [ y 0 . length ] ;
rank: 908
score: 99.64329944957386
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 908
score: 99.63547803534836
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else {
rank: 908
score: 99.6335205078125
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 908
score: 99.62828776041667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 908
score: 99.6134152879902
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( ) ;
rank: 908
score: 99.56088385783451
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 909
score: 99.69799376370614
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 909
score: 99.63518415178571
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ) ;
rank: 909
score: 99.63331213662791
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 909
score: 99.62824135638297
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 909
score: 99.62052734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , 0 , scale , 0 , scal CaMeL Absolute CaMeL Tolerance ) ;
rank: 909
score: 99.61314498546511
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 909
score: 99.5605399977993
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [
rank: 910
score: 99.69796437230603
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance . is CaMeL Empty ( ) ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 910
score: 99.63492584228516
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; else {
rank: 910
score: 99.62807210286458
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 910
score: 99.620498046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 910
score: 99.612353515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ;
rank: 910
score: 99.56053367820945
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 911
score: 99.69793559229652
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new Double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 911
score: 99.64232288707386
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 911
score: 99.63405198317308
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 911
score: 99.6330899325284
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 911
score: 99.62767986918605
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 911
score: 99.62045288085938
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] : new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scale ) ;
rank: 911
score: 99.61228515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 911
score: 99.5601905616554
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 0 ] ;
rank: 912
score: 99.69784109933036
patch: final double [ ] scale = scal CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 912
score: 99.64215642755681
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 912
score: 99.63375091552734
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ]
rank: 912
score: 99.63306773792614
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = 0 . [ y 0 . length ] ; }
rank: 912
score: 99.62753295898438
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 912
score: 99.62042236328125
patch: final double vec CaMeL Absolute CaMeL Tolerance = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 912
score: 99.61185396634616
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations ) ;
rank: 912
score: 99.5586006272007
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; h CaMeL New = false ;
rank: 913
score: 99.69782366071429
patch: scale = scal CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 913
score: 99.69300007370283
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 913
score: 99.64161265980114
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 913
score: 99.64085419323979
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = new double [ y 0 . length ] [ y ] ;
rank: 913
score: 99.63335681352459
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , true ) ;
rank: 913
score: 99.63299851190476
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 913
score: 99.62743030894886
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 913
score: 99.55774785431338
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 914
score: 99.69779750279018
patch: double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 914
score: 99.69269875919117
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 914
score: 99.64122178819444
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 914
score: 99.64085286458334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 914
score: 99.63312800480769
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale ,
rank: 914
score: 99.6329601199128
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; ; } else { scale = new double [ y 0 . length ] ;
rank: 914
score: 99.62701416015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 914
score: 99.62021484375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance , vec CaMeL Absolute CaMeL Tolerance ) } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 914
score: 99.61179832175925
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 914
score: 99.55754153829226
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [
rank: 915
score: 99.69765625
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 915
score: 99.64094682173295
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ scale 0 . length ] ; }
rank: 915
score: 99.64083729619566
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == 0 ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 915
score: 99.63306051587301
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; else
rank: 915
score: 99.63291237571023
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = null ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 915
score: 99.62692195811171
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ;
rank: 915
score: 99.62021484375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ;
rank: 915
score: 99.61158203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 915
score: 99.557373046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ ;
rank: 916
score: 99.69742571721312
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 916
score: 99.64083341272865
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ;
rank: 916
score: 99.64040798611111
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length - 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 916
score: 99.63241722470238
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; else
rank: 916
score: 99.63231259300595
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 916
score: 99.62684215198864
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 916
score: 99.62012736002605
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , 0 , scale , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 916
score: 99.55736970248287
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ ] ;
rank: 917
score: 99.69729872881356
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 917
score: 99.640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 917
score: 99.64036591198979
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 917
score: 99.63219651442307
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 917
score: 99.62680886008523
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 917
score: 99.620068359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ ; }
rank: 917
score: 99.61122483473558
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = new double [ y 0 . length ] ;
rank: 917
score: 99.5572265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 918
score: 99.6971285635965
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 918
score: 99.692470703125
patch: final Object [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 918
score: 99.64052512428977
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ null ] ; }
rank: 918
score: 99.64028098366477
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale += vec CaMeL Absolute CaMeL Tolerance ; }
rank: 918
score: 99.63217995383523
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; scale = scale ;
rank: 918
score: 99.63216824001736
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 918
score: 99.62660435267857
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = new double [ y 0 ] ;
rank: 918
score: 99.55661311619718
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; first CaMeL Time = true ;
rank: 919
score: 99.69703389830508
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 919
score: 99.69246732271634
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } break ;
rank: 919
score: 99.63202514648438
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 919
score: 99.6318161423142
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 919
score: 99.6265536221591
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 919
score: 99.61057692307692
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 919
score: 99.55625550176056
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ y CaMeL Dot CaMeL K [ 1 ] ;
rank: 920
score: 99.69244854266827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 920
score: 99.63972981770833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] [ 0 ] [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 920
score: 99.63194949127907
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else { scale = new double [ y 0 . length ] ;
rank: 920
score: 99.63108350409836
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , false ) ;
rank: 920
score: 99.62647523271276
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 920
score: 99.55565086570945
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] y CaMeL Dot CaMeL K [ 0 ] ;
rank: 921
score: 99.69208984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; while ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 921
score: 99.63968098958334
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 921
score: 99.63962720788044
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 921
score: 99.63192894345238
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] ; scale = new double [ y 0 . length ] ;
rank: 921
score: 99.63099709535257
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 921
score: 99.62596493675595
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 921
score: 99.610302734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 921
score: 99.55557710830479
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K . 0 ;
rank: 922
score: 99.6969482421875
patch: double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 922
score: 99.69191367953431
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 922
score: 99.63953415890957
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 922
score: 99.63946675145348
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 - 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 922
score: 99.63151798691861
patch: final double [ ] scale ; if ( scale == scal CaMeL Absolute CaMeL Tolerance ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 922
score: 99.63095092773438
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; else {
rank: 922
score: 99.62542317708333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = new double [ y 0 ] [ 0 ] ;
rank: 922
score: 99.61949869791667
patch: final double [ ] scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scale ) ;
rank: 922
score: 99.609970703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 922
score: 99.55487225506756
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 - y CaMeL Dot CaMeL K [ 1 ] ;
rank: 923
score: 99.69190410539215
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } if ( vec CaMeL Absolute CaMeL Tolerance == null ) {
rank: 923
score: 99.63939931441327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New ++ ;
rank: 923
score: 99.63904918323864
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . y ] ; }
rank: 923
score: 99.63137742949695
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 923
score: 99.63070186491936
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , 0 , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 923
score: 99.62528050199468
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 923
score: 99.619140625
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 923
score: 99.60995296556122
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else
rank: 923
score: 99.55408203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 924
score: 99.69667454769737
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } }
rank: 924
score: 99.63902389171511
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } final double scale = new double [ y 0 . length ] ;
rank: 924
score: 99.63121139171511
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ; }
rank: 924
score: 99.63067823840726
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , get CaMeL Order ( ) ,
rank: 924
score: 99.61911010742188
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 924
score: 99.60986328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 924
score: 99.55337649828768
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , forward ,
rank: 925
score: 99.6305648561508
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 925
score: 99.63034889914773
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scale ; }
rank: 925
score: 99.62455610795455
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 1 ] ;
rank: 925
score: 99.61911010742188
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 925
score: 99.609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 925
score: 99.552490234375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New = false ; }
rank: 926
score: 99.69611773574562
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ; } else { scale [ y 0 . length ] = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 926
score: 99.69173828125
patch: final long [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 926
score: 99.63848876953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 926
score: 99.6305160522461
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ) ; else {
rank: 926
score: 99.63017134232955
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 926
score: 99.62441184303977
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] ;
rank: 926
score: 99.61877972146739
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . ) . arraycopy ( scale , 0 , scale , 0 , scale ) ;
rank: 926
score: 99.55221896701389
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = vec CaMeL Absolute CaMeL Tolerance ;
rank: 927
score: 99.69609543372844
patch: final double scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 927
score: 99.69158203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 927
score: 99.63835797991071
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 927
score: 99.63028304303279
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ,
rank: 927
score: 99.6300417877907
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance >= null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 927
score: 99.62429809570312
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 927
score: 99.61838697350544
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , vec CaMeL Absolute CaMeL Tolerance , 0 , scale ) ;
rank: 927
score: 99.55202229817708
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; first CaMeL Time = false ; }
rank: 928
score: 99.69576822916666
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 928
score: 99.69152113970588
patch: if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 928
score: 99.63809678819445
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } ( ( double [ ] [ ] ) vec CaMeL Absolute CaMeL Tolerance ) .
rank: 928
score: 99.62996806795636
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ) ; first CaMeL Time = false ;
rank: 928
score: 99.62973854758523
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scale ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 928
score: 99.62427867542614
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y ] ;
rank: 928
score: 99.6181104706555
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 928
score: 99.54991170804794
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K . length ;
rank: 929
score: 99.6956637198465
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ;
rank: 929
score: 99.69141582414215
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 929
score: 99.63805868459302
patch: } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] ) ; } else { scale ( new double [ y 0 . length ] ) ; }
rank: 929
score: 99.63786892361111
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y - 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 929
score: 99.62968977107558
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] }
rank: 929
score: 99.62899017333984
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ]
rank: 929
score: 99.61808095079788
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 0 ] ; vec CaMeL Absolute CaMeL Tolerance = null ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 929
score: 99.60800170898438
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ; }
rank: 929
score: 99.54971773330479
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , y ,
rank: 930
score: 99.69547526041667
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 930
score: 99.63766276041666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } ( ( double [ ] [ ] ) vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 930
score: 99.62892896075581
patch: final boolean [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 930
score: 99.62891387939453
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ]
rank: 930
score: 99.62378472222223
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 930
score: 99.61801458864795
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 930
score: 99.607919921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] [ 1 ] ;
rank: 930
score: 99.54874234586148
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K [ $NUMBER$ ] ;
rank: 931
score: 99.69540672971492
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } }
rank: 931
score: 99.6912890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 931
score: 99.63755731997283
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; break ; }
rank: 931
score: 99.63752498183139
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else scale = new double [ y 0 . length ] ; }
rank: 931
score: 99.6285655886628
patch: final byte [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 931
score: 99.62835393186475
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { first CaMeL Time = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , forward ) ;
rank: 931
score: 99.62347837936046
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ;
rank: 931
score: 99.6179836107337
patch: scale = new double [ y ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 931
score: 99.54821447423987
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ length ] ;
rank: 932
score: 99.69532877604166
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } }
rank: 932
score: 99.6912841796875
patch: final double [ ] scale ; try { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 932
score: 99.63744007457386
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . $NUMBER$ ] ; }
rank: 932
score: 99.6284423828125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 932
score: 99.627978515625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else {
rank: 932
score: 99.6234130859375
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 932
score: 99.61770694813829
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ; }
rank: 932
score: 99.6073046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else {
rank: 932
score: 99.54792317708333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] + y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 933
score: 99.6951904296875
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 933
score: 99.69073955829327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ; }
rank: 933
score: 99.63736625339673
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 933
score: 99.63735894097222
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = ( double [ ] ) scal CaMeL Absolute CaMeL Tolerance ;
rank: 933
score: 99.62834821428571
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length - 1 ] ;
rank: 933
score: 99.6268291170635
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 933
score: 99.61769612630208
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , scale , 0 , scale ) ;
rank: 933
score: 99.60697265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 933
score: 99.54768000422297
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] =
rank: 934
score: 99.69509834155701
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } }
rank: 934
score: 99.63697306315105
patch: break ; } if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 934
score: 99.61757189162235
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 . 0 ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 934
score: 99.60650390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else {
rank: 934
score: 99.54667044974663
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ $NUMBER$ ] ;
rank: 935
score: 99.6949462890625
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } }
rank: 935
score: 99.63681640625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 935
score: 99.62784204727564
patch: final double [ ] scale ; if ( scale == 0 ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 935
score: 99.62670498206967
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ,
rank: 935
score: 99.62166883680555
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 935
score: 99.606376953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 1 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 935
score: 99.54661413741438
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K ) ; }
rank: 936
score: 99.6947497351695
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ; } }
rank: 936
score: 99.6369098165761
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] : new double [ y 0 . length ] ;
rank: 936
score: 99.62771767064145
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 936
score: 99.62669697745902
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 936
score: 99.6214266690341
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] ;
rank: 936
score: 99.60629272460938
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ; }
rank: 936
score: 99.54644775390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K ; }
rank: 937
score: 99.69456722861842
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 937
score: 99.63671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } double [ ] scale = new double [ y 0 . length ] ;
rank: 937
score: 99.62763444767442
patch: final float [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 937
score: 99.62614465932377
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , scale ) ;
rank: 937
score: 99.62090674867021
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 937
score: 99.61716627038044
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 937
score: 99.60626953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 937
score: 99.5452734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 938
score: 99.68998046875
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 938
score: 99.63588324652778
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 938
score: 99.627197265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = ( double [ ] ) scale ; }
rank: 938
score: 99.62078208111703
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 938
score: 99.61647542317708
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 938
score: 99.54525839315879
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K . 0 ] ;
rank: 939
score: 99.69445180084746
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } }
rank: 939
score: 99.68984566482843
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 939
score: 99.63614555027173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else final double [ ] scale = new double [ y 0 . length ] ;
rank: 939
score: 99.63559792258523
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 939
score: 99.6270126714939
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 939
score: 99.62596106150794
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ; else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 939
score: 99.61634318033855
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = null ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 939
score: 99.604130859375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 1 ] [ 1 ] ;
rank: 939
score: 99.54493489583334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] + y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 940
score: 99.69423187756148
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 940
score: 99.689794921875
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 940
score: 99.6361416903409
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 940
score: 99.63434244791667
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 940
score: 99.62673737281976
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; final double [ ] scale = new double [ y 0 . length ] ;
rank: 940
score: 99.62517610143442
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ,
rank: 940
score: 99.62069896941489
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 940
score: 99.61616111288265
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 940
score: 99.6039453125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 940
score: 99.54464382595486
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 941
score: 99.6942074424342
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 941
score: 99.635986328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = scale ;
rank: 941
score: 99.62604469476744
patch: final String [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 941
score: 99.62479188012296
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ,
rank: 941
score: 99.6151813009511
patch: final double [ ] scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ; }
rank: 941
score: 99.6033223470052
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ; }
rank: 941
score: 99.54451385916096
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ]
rank: 942
score: 99.69364903336864
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 942
score: 99.68912760416667
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 942
score: 99.6358898074128
patch: final double [ ] scale = if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 942
score: 99.62593005952381
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ; scale ;
rank: 942
score: 99.62432761270492
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , double [ ] ) ;
rank: 942
score: 99.62029079861111
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 942
score: 99.61481584821429
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ( scale , scal CaMeL Absolute CaMeL Tolerance ) ; } else { scale = new double [ y 0 . length ] ;
rank: 942
score: 99.603251953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 942
score: 99.54445963541667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 943
score: 99.69364075741525
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ;
rank: 943
score: 99.68893667367789
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . length ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 943
score: 99.63577625363372
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 [ length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 943
score: 99.62228643698771
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 943
score: 99.61918218085107
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ;
rank: 943
score: 99.60280811543367
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else
rank: 943
score: 99.54410367398648
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K . length ] ;
rank: 944
score: 99.69319291548295
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = $NUMBER$ ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 944
score: 99.68886910232843
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale += vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 944
score: 99.63266389266305
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 1 ] [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 944
score: 99.62538364955357
patch: final double [ ] scale ; if ( scale , scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 944
score: 99.62227957589286
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) . get CaMeL Order ( ) ) ;
rank: 944
score: 99.61906790226064
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 1 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 944
score: 99.61312202785327
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 944
score: 99.60279337565105
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 944
score: 99.54397135416667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 945
score: 99.69287109375
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } }
rank: 945
score: 99.6351318359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = null ;
rank: 945
score: 99.63209069293478
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] length ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 945
score: 99.62414220861487
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 945
score: 99.6222435735887
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } }
rank: 945
score: 99.61852213541667
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 945
score: 99.60257022938829
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 945
score: 99.54389912373311
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 1 ] ;
rank: 946
score: 99.69251302083333
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } } else { scale = new double [ y 0 . length ] ;
rank: 946
score: 99.6885435814951
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 946
score: 99.63505415482955
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else }
rank: 946
score: 99.62220419606855
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) .
rank: 946
score: 99.61824174360795
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 . length ] ;
rank: 946
score: 99.61307956861413
patch: scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 946
score: 99.54387842465754
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , scale ,
rank: 947
score: 99.68849609375
patch: if ( scal CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 947
score: 99.63462936046511
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = new double [ y 0 . length ] ; }
rank: 947
score: 99.63136935763889
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 947
score: 99.6235119047619
patch: else { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 947
score: 99.62215836321721
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ,
rank: 947
score: 99.61823064630681
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 947
score: 99.61288452148438
patch: scale = scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 947
score: 99.60200832201087
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; h CaMeL New = false ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 947
score: 99.54292915962837
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ start ] ;
rank: 948
score: 99.69225039724576
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 948
score: 99.688408203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 948
score: 99.63435502485795
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null * scale ;
rank: 948
score: 99.63111461292614
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y - 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 948
score: 99.62316001333842
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 948
score: 99.62203881048387
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ]
rank: 948
score: 99.6172762784091
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 948
score: 99.61241896609043
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 948
score: 99.54219563802083
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K ) ;
rank: 949
score: 99.69218418961864
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 949
score: 99.68839996936275
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 949
score: 99.6339444247159
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 949
score: 99.63098725818452
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 949
score: 99.62274169921875
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 949
score: 99.62191280241936
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) .
rank: 949
score: 99.61698310319767
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 949
score: 99.6120837983631
patch: scale = $NUMBER$ ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 949
score: 99.601650390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 949
score: 99.5416911922089
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ ; }
rank: 950
score: 99.69190253586065
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { vec CaMeL Absolute CaMeL Tolerance = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 950
score: 99.68832337622548
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 950
score: 99.63091131981383
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale : new double [ ] [ ] { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 950
score: 99.62225952148438
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 950
score: 99.62153400358606
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ,
rank: 950
score: 99.61695445667614
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length + y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 950
score: 99.54104166666667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 951
score: 99.69189453125
patch: double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 951
score: 99.68822763480392
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 951
score: 99.63384454900569
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale [ y 0 . length ] = new double [ y 0 . length ] ;
rank: 951
score: 99.63067491319444
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 951
score: 99.62062147797131
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 1 , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ,
rank: 951
score: 99.61687360491071
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] ;
rank: 951
score: 99.611572265625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 951
score: 99.54054036458334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K . [ 0 ] ;
rank: 952
score: 99.69161436987704
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 952
score: 99.63374467329545
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . $NUMBER$ ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 952
score: 99.63049600290698
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 952
score: 99.62147739955357
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = double [ y 0 . length ] ;
rank: 952
score: 99.6202452612705
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ,
rank: 952
score: 99.61008029513889
patch: } final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scale ) ;
rank: 952
score: 99.60098337572674
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { sum = new double [ y 0 . length ] ;
rank: 952
score: 99.5395374036815
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ ] ;
rank: 953
score: 99.69137052210365
patch: scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 953
score: 99.68803615196079
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 953
score: 99.6336086107337
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 953
score: 99.63045601222827
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 953
score: 99.62135009765625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; else scale = new double [ y 0 . length ] ;
rank: 953
score: 99.62018122438525
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , scal CaMeL Absolute CaMeL Tolerance , 0 , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ,
rank: 953
score: 99.61618874289773
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 953
score: 99.53924065667229
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ y ] ;
rank: 954
score: 99.69105038400424
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 954
score: 99.6879021139706
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; / }
rank: 954
score: 99.63285792151163
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 954
score: 99.63022248641305
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 954
score: 99.621337890625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 954
score: 99.62016444052419
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ) ;
rank: 954
score: 99.6160915798611
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = 0 ;
rank: 954
score: 99.60990574048913
patch: final double [ ] scale = new double [ y 0 . length ] ; final double [ ] scale = new double [ y 1 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scale ) ;
rank: 954
score: 99.59973675271739
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 . length ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 954
score: 99.53876819349315
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K . ] ;
rank: 955
score: 99.69072762182203
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scale ; }
rank: 955
score: 99.68748046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale += vec CaMeL Absolute CaMeL Tolerance ;
rank: 955
score: 99.62976604959239
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = new double [ y 1 . length ] ;
rank: 955
score: 99.62100797086148
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ; else scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 955
score: 99.62007780997983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ) ;
rank: 955
score: 99.61535063244048
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 1 ] ;
rank: 955
score: 99.60985266644022
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 955
score: 99.53860097388699
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ ) ;
rank: 956
score: 99.69033865201271
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 956
score: 99.687470703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; / } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 956
score: 99.63197085731908
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 956
score: 99.6294833096591
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 956
score: 99.6200451460041
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( )
rank: 956
score: 99.61847418707771
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 956
score: 99.61534288194444
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] [ 0 ] ;
rank: 956
score: 99.60915798611111
patch: final double [ ] scale ; if ( ! vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scale ) ;
rank: 956
score: 99.599609375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; } else { sum = new double [ y 0 . length ] ;
rank: 956
score: 99.5380859375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] y CaMeL Dot CaMeL K [ 1 ] ;
rank: 957
score: 99.69031382415254
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 957
score: 99.687294921875
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 957
score: 99.63189271438954
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; try { scale = new double [ y 0 . length ] ; }
rank: 957
score: 99.6292698636968
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 957
score: 99.61982685810811
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 957
score: 99.61720002003206
patch: final double [ ] scale ; if ( scale != null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 957
score: 99.60823197798295
patch: scale = scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 957
score: 99.59955078125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 957
score: 99.53767123287672
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New . reinitialize ( ) ;
rank: 958
score: 99.68728637695312
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 958
score: 99.62919477982955
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 958
score: 99.61938864087301
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 958
score: 99.61584821428572
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 958
score: 99.61455743963069
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 958
score: 99.60783585258152
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 958
score: 99.599501953125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y CaMeL Dot CaMeL K [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 958
score: 99.53746388056507
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] + y CaMeL Dot CaMeL K [ ] ;
rank: 959
score: 99.687236328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 959
score: 99.63060271434294
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 959
score: 99.61936383928571
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] ;
rank: 959
score: 99.6144686612216
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == 0 ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 959
score: 99.60775093410327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance . copy ( ) ; }
rank: 959
score: 99.59943359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 959
score: 99.53572371199324
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ ] ; }
rank: 960
score: 99.6297351925872
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } } else scale = new double [ y 0 . length ] ;
rank: 960
score: 99.62861328125
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 960
score: 99.61903824344758
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) .
rank: 960
score: 99.6145751953125
patch: final float [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 960
score: 99.6138671875
patch: final double [ ] [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 960
score: 99.60775093410327
patch: final double [ ] scale ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 960
score: 99.598935546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 960
score: 99.53495442708333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 961
score: 99.68966471354166
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 961
score: 99.68666015625
patch: else double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 961
score: 99.62965570494185
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else } scale = new double [ y 0 . length ] ;
rank: 961
score: 99.62855113636364
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 961
score: 99.61900674143145
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward ) ;
rank: 961
score: 99.61410757211539
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 961
score: 99.61351996527777
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] [ 1 ] ;
rank: 961
score: 99.60755986752717
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( vec CaMeL Absolute CaMeL Tolerance , 0 , 0 , scale ) ;
rank: 961
score: 99.59893409242021
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 961
score: 99.53395895761986
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ]
rank: 962
score: 99.68940346927967
patch: double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 962
score: 99.68609375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 962
score: 99.62958757267442
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else ; scale = new double [ y 0 . length ] ;
rank: 962
score: 99.62842881944445
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 962
score: 99.61883060515873
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance > null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ,
rank: 962
score: 99.61405535442073
patch: final String [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 962
score: 99.61299913194445
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 962
score: 99.59888671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 1 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 962
score: 99.53378504922945
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] [ 0 ] ;
rank: 963
score: 99.68939615885417
patch: scale = ( double ) vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 963
score: 99.686064453125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance <= null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 963
score: 99.62900747903963
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; vec CaMeL Absolute CaMeL Tolerance = vec CaMeL Absolute CaMeL Tolerance ;
rank: 963
score: 99.62834028764205
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum += new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 963
score: 99.61782541582662
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ ] ;
rank: 963
score: 99.61402027027027
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 963
score: 99.61297052556819
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 1 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 963
score: 99.6063922384511
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 1 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 963
score: 99.597900390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 963
score: 99.53193225599315
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K . ; }
rank: 964
score: 99.68933305584017
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } ;
rank: 964
score: 99.68507852359694
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 964
score: 99.62840605945122
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ;
rank: 964
score: 99.62798646438954
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 964
score: 99.61680772569444
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ] ) ; else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 964
score: 99.61373975800305
patch: { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 964
score: 99.6126708984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 964
score: 99.60604635099085
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 964
score: 99.596923828125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ y 0 . length ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 964
score: 99.5319255672089
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K . ] ;
rank: 965
score: 99.68923875762195
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else scale = new double [ y 0 . length ] ;
rank: 965
score: 99.68498046875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] } ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 965
score: 99.627685546875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = new double [ y 0 . length ] ; }
rank: 965
score: 99.6160171750992
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) .
rank: 965
score: 99.61242094494048
patch: if ( first CaMeL Time || ! fsal ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] ;
rank: 965
score: 99.61052856445312
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; scale = new double [ y 0 . length ] ;
rank: 965
score: 99.6058349609375
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scale ) ;
rank: 965
score: 99.59666951497395
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 965
score: 99.53182523544521
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K . 0 ;
rank: 966
score: 99.68919270833334
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } } { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 966
score: 99.684814453125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = 0 . 0 ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 966
score: 99.62744140625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 966
score: 99.62709263392857
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance == null ;
rank: 966
score: 99.6158931671627
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ; else
rank: 966
score: 99.61236281622024
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 966
score: 99.61006469726563
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 966
score: 99.5963134765625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 966
score: 99.53177734375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 967
score: 99.68902909128289
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 967
score: 99.684765625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = vec CaMeL Absolute CaMeL Tolerance ; else } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 967
score: 99.62677951388889
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; break ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 967
score: 99.61528862847223
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance + 0 . 0 ;
rank: 967
score: 99.60956131784539
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 967
score: 99.60542629076087
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 0 ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 967
score: 99.59541652513587
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] ; } else { sum = new double [ y 0 . length ] ;
rank: 967
score: 99.53165364583333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ $NUMBER$ ] ; }
rank: 968
score: 99.68885904947916
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 968
score: 99.68435546875
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 968
score: 99.62639973958333
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 968
score: 99.61515687003968
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ; else
rank: 968
score: 99.61194428943452
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 968
score: 99.60955489309211
patch: double [ ] scale ; if ( scale == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 968
score: 99.6048000169837
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ ] { vec CaMeL Absolute CaMeL Tolerance } ; } else { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ;
rank: 968
score: 99.59518299932066
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 968
score: 99.53030642947635
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ $NUMBER$ ] ;
rank: 969
score: 99.68851143973214
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 969
score: 99.61432647705078
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ) ;
rank: 969
score: 99.60593775699013
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 969
score: 99.6046115451389
patch: scale = $NUMBER$ ; final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 969
score: 99.52883498733108
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ max ] ;
rank: 970
score: 99.61383153521825
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) .
rank: 970
score: 99.61183810763889
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 970
score: 99.60571967230902
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 970
score: 99.60451438210227
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? new double [ y 0 . length ] : new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 970
score: 99.52854817708334
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 1 ] ;
rank: 971
score: 99.68802083333334
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; } else { if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 971
score: 99.62523871527777
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 971
score: 99.61912810496794
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale ( new double [ y 0 . length ] ) ; } else { scale ( new double [ y 0 . length ] ) ;
rank: 971
score: 99.61357116699219
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ; else {
rank: 971
score: 99.61160065406976
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 971
score: 99.60387652853261
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; }
rank: 971
score: 99.5946044921875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 971
score: 99.52827412373311
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ sum ] ;
rank: 972
score: 99.68766276041667
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = new double [ y 0 . length ] ; } }
rank: 972
score: 99.62470703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == 0 ) { scale = new double [ y 0 . length - 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 972
score: 99.61706229967949
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 972
score: 99.61265563964844
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ; else {
rank: 972
score: 99.61140950520833
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] ; } else { scale = new double [ y 0 ] [ 0 ] ;
rank: 972
score: 99.60508604307432
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 972
score: 99.5946018949468
patch: if ( first CaMeL Time ) { final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 972
score: 99.52784522804055
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] =
rank: 973
score: 99.68744187127976
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ scale . length ] ;
rank: 973
score: 99.68083346619898
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = y 1 . length ;
rank: 973
score: 99.62430245535714
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 973
score: 99.6125717163086
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ]
rank: 973
score: 99.611083984375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] + y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 973
score: 99.60392252604167
patch: final int [ ] scale ; if ( scale == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 973
score: 99.52766707136824
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ ++ ] ;
rank: 974
score: 99.68640336834017
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 974
score: 99.67904338430851
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 974
score: 99.62420099431819
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length - 1 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 974
score: 99.61502153445512
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 974
score: 99.61195373535156
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) . scale ,
rank: 974
score: 99.61079644097222
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y 0 ] ;
rank: 974
score: 99.60375298394098
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 974
score: 99.59970925071023
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance [ 0 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 974
score: 99.52763671875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 1 ] ;
rank: 975
score: 99.68607003348214
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 1 . length ] ;
rank: 975
score: 99.62385697798295
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = scal CaMeL Absolute CaMeL Tolerance ; }
rank: 975
score: 99.6148452758789
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 975
score: 99.6116714477539
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) . scale ,
rank: 975
score: 99.61057783917683
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 975
score: 99.60063733552632
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 975
score: 99.59810965401786
patch: scale = 0 ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 975
score: 99.52744791666667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] : y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 976
score: 99.68606770833334
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } }
rank: 976
score: 99.6236239346591
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ $NUMBER$ ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 976
score: 99.61165618896484
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) ) ;
rank: 976
score: 99.61080285274622
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 976
score: 99.61015392485119
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 976
score: 99.59758966619319
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ; }
rank: 976
score: 99.59462098817568
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 976
score: 99.59289020040761
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 976
score: 99.52719401041666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 1 ] ) ;
rank: 977
score: 99.68412205430327
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 977
score: 99.6107177734375
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ]
rank: 977
score: 99.60987437855114
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 1 ] * y CaMeL Dot CaMeL K [ 1 ] [ 0 ] ;
rank: 977
score: 99.59473818824405
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 0 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 977
score: 99.59269913383152
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 977
score: 99.52714192708333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K [ 0 ] = }
rank: 978
score: 99.68361776383196
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance . is CaMeL Empty ( ) ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 978
score: 99.62298177083333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] * y ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 978
score: 99.60991753472223
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ; else
rank: 978
score: 99.60586635044643
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 978
score: 99.59331665039062
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y ] ; } else { scale = new double [ y 0 . length ] ;
rank: 978
score: 99.5931297508446
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 978
score: 99.59264605978261
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 978
score: 99.52653874577703
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] + y CaMeL Dot CaMeL K [ $NUMBER$ ] ;
rank: 979
score: 99.68314819335937
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 0 ] ;
rank: 979
score: 99.66951127485795
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 979
score: 99.6229248046875
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 979
score: 99.60986328125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] ,
rank: 979
score: 99.60889781605114
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] length ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 979
score: 99.59909396701389
patch: final double [ ] scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 979
score: 99.59281994047619
patch: scale = new double [ y 0 . length ] ; final double [ ] scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scale ) ;
rank: 979
score: 99.59248683763587
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y CaMeL Dot CaMeL K [ 0 ] [ 1 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 979
score: 99.5915725295608
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 979
score: 99.52646484375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; y CaMeL Dot CaMeL K . reinitialize ( ) ;
rank: 980
score: 99.68264120133196
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 980
score: 99.62247178819445
patch: final double [ ] scale ; if ( first CaMeL Time || vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 980
score: 99.60950469970703
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ;
rank: 980
score: 99.60771251860119
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y ] ;
rank: 980
score: 99.59567599826389
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ) ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 980
score: 99.59265718005952
patch: final double [ ] scale = new double [ y 0 . length ] ; System . arraycopy ( scale , 0 , scale , 0 , scale ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 980
score: 99.59226437832447
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 980
score: 99.52600911458333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 - y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 981
score: 99.68200883709017
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 981
score: 99.62232555042614
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; y CaMeL Tmp [ 1 ] = y [ 1 ] ;
rank: 981
score: 99.60946800595238
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null && vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( )
rank: 981
score: 99.607666015625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == 0 ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 981
score: 99.59347626657197
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 981
score: 99.57712227957589
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 981
score: 99.52576013513513
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ end ] ;
rank: 982
score: 99.68165283203125
patch: scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ;
rank: 982
score: 99.62177068536931
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 982
score: 99.60897064208984
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) , scale , y CaMeL Dot CaMeL K [ 0 ] , y CaMeL Dot CaMeL K [ 1 ] ,
rank: 982
score: 99.60714285714286
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 1 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 982
score: 99.59166899181548
patch: final double scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 982
score: 99.59146118164062
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 982
score: 99.58879320549242
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 982
score: 99.57099260602679
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) scale = new double [ y 0 . length ] ;
rank: 982
score: 99.52510029560811
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 0 ] =
rank: 983
score: 99.66257595486111
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 983
score: 99.62109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ stages ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 983
score: 99.60842063210227
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; }
rank: 983
score: 99.60610816592262
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ $NUMBER$ ] [ 0 ] ;
rank: 983
score: 99.5886001586914
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 983
score: 99.5704574584961
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 983
score: 99.52503255208333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K . [ 1 ] ;
rank: 984
score: 99.62100694444445
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 984
score: 99.60781860351562
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; first CaMeL Time = false ; }
rank: 984
score: 99.60606625205592
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y CaMeL Dot CaMeL K [ 0 ] ;
rank: 984
score: 99.59123587101064
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == 0 ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 984
score: 99.59027390252976
patch: scale = scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ; }
rank: 984
score: 99.58426666259766
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 984
score: 99.56927490234375
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 984
score: 99.52453125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 1 ] = y CaMeL Dot CaMeL K [ 0 ] ;
rank: 985
score: 99.6743896484375
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y length ] ;
rank: 985
score: 99.65727198401163
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = ( double [ ] ) vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 985
score: 99.62077907986111
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length + 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 985
score: 99.60768127441406
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 0 ] ) ; else {
rank: 985
score: 99.60595703125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = new double [ y 0 ] ; }
rank: 985
score: 99.56556438577586
patch: final int [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 985
score: 99.52386639569256
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] *
rank: 986
score: 99.67098999023438
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y ] ;
rank: 986
score: 99.65291748046874
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 986
score: 99.6200284090909
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 - y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 986
score: 99.60655975341797
patch: final double [ ] scale ; if ( y CaMeL Dot CaMeL K [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 1 ] , y CaMeL Tmp , y CaMeL Dot CaMeL K [ 0 ]
rank: 986
score: 99.60584347747093
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 986
score: 99.59059836647727
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] [ y 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 986
score: 99.58866954985119
patch: scale = null ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 1 . length ] ; }
rank: 986
score: 99.56840006510417
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; }
rank: 986
score: 99.55856849407327
patch: final double [ ] scale ; if ( scal CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 986
score: 99.5237109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 - y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 987
score: 99.6193615141369
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 987
score: 99.60624694824219
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , scale , y CaMeL Tmp , y CaMeL Dot CaMeL K [ $NUMBER$ ] ) ;
rank: 987
score: 99.60447966746794
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 987
score: 99.58848505434783
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 1 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 987
score: 99.55796370967742
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 987
score: 99.53605704471983
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = new double [ y 0 . length ] ;
rank: 987
score: 99.52278645833333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 988
score: 99.65508510044643
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 988
score: 99.61633882068452
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 988
score: 99.605224609375
patch: final double [ ] scale = vec CaMeL Absolute CaMeL Tolerance ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = initialize CaMeL Step ( equations , forward , get CaMeL Order ( ) . scale ,
rank: 988
score: 99.58613513764881
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 1 0 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 988
score: 99.55448857060185
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 988
score: 99.52180338541666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] [ y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 988
score: 99.50356820913461
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 989
score: 99.64703525641026
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 989
score: 99.6455078125
patch: scale = new double [ y 0 . length ] ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 989
score: 99.61540876116071
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 989
score: 99.60315522693452
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 1 ] [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 989
score: 99.58531605113636
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ;
rank: 989
score: 99.5847703887195
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ 0 ] ; }
rank: 989
score: 99.52001302083333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] : y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 989
score: 99.4826953125
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 990
score: 99.61418968023256
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 1 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 990
score: 99.60053943452381
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ y ] * y CaMeL Dot CaMeL K [ 0 ] ;
rank: 990
score: 99.58482294497283
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; } h CaMeL New = false ;
rank: 990
score: 99.58391291920732
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ $NUMBER$ ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 990
score: 99.58027648925781
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else {
rank: 990
score: 99.51992838541666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 990
score: 99.47649676983173
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance != null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 991
score: 99.61305414244185
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 991
score: 99.60008603050595
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 1 ] * y CaMeL Dot CaMeL K [ 1 ] ;
rank: 991
score: 99.5834365472561
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 0 ] ; } else { scale = new double [ y 0 . length ] ;
rank: 991
score: 99.5706787109375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ;
rank: 991
score: 99.51922526041666
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] ; y CaMeL Dot CaMeL K [ 1 ] ; }
rank: 991
score: 99.49489427649456
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ;
rank: 992
score: 99.61274754723837
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 992
score: 99.5998302641369
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ y 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ 0 ] ;
rank: 992
score: 99.582275390625
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 1 ] ; } else { sum = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 992
score: 99.56696188038794
patch: final double error = 0 ; for ( boolean loop = true ; loop ; ) { if ( first CaMeL Time || ! fsal ) {
rank: 992
score: 99.51856119791667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 1 ] ;
rank: 992
score: 99.46530018682066
patch: scale ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale ( vec CaMeL Absolute CaMeL Tolerance ) ; }
rank: 992
score: 99.40478515625
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 993
score: 99.61236281622024
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 ] [ y 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 993
score: 99.58197021484375
patch: scale = scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ 0 0 ] ; } else { scale = new double [ y 0 . length ] ; }
rank: 993
score: 99.58165394176136
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] ; } else { sum = new double [ y 0 . length ] ; }
rank: 993
score: 99.55682842548077
patch: scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 993
score: 99.51795572916667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ) ;
rank: 993
score: 99.4001953125
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 994
score: 99.58122114701705
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ; } else { sum = new double [ y 0 . length ] ; }
rank: 994
score: 99.56667608963816
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y ] ; } else { scale = new double [ y ] ; }
rank: 994
score: 99.51783203125
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } h CaMeL New = initialize CaMeL Step ( y CaMeL Dot CaMeL K , forward ) ; }
rank: 994
score: 99.4894131747159
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : new double [ y 0 . length ] ;
rank: 994
score: 99.45638020833333
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 994
score: 99.33239067925348
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) {
rank: 995
score: 99.60247247869319
patch: if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } }
rank: 995
score: 99.56591796875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ y 0 . length ] ;
rank: 995
score: 99.51782552083333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ] ;
rank: 995
score: 99.44246633429276
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ? 0 : vec CaMeL Absolute CaMeL Tolerance ;
rank: 995
score: 99.02567545572917
patch: scale = new double [ y 0 . length ] ;
rank: 996
score: 99.60724919016768
patch: final double sum ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 . length ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 996
score: 99.54585535386029
patch: scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 996
score: 99.516796875
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] ; } y CaMeL Dot CaMeL K [ 0 ] y CaMeL Dot CaMeL K [ 0 ] ; }
rank: 996
score: 99.37517346833882
patch: final double [ ] scale = new double [ y 0 . length ] [ 0 ] ;
rank: 996
score: 99.35521697998047
patch: final double [ ] scale = new double [ y 0 . length ] ;
rank: 996
score: 99.01518419053819
patch: scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 997
score: 99.60203857421875
patch: double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = new double [ y 0 ] [ 0 ] ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ;
rank: 997
score: 99.57508175872093
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == 0 ) { scale = new double [ y 0 . length ] ; } else { scale = new double [ y 0 . length ] ;
rank: 997
score: 99.51592447916667
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 1 ] * y CaMeL Dot CaMeL K . [ 0 ] ;
rank: 997
score: 98.96160888671875
patch: scale ( vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 997
score: 98.93230590820312
patch: scale = vec CaMeL Absolute CaMeL Tolerance ) ;
rank: 998
score: 99.51583333333333
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] ; h CaMeL New = initialize CaMeL Step ( ) ;
rank: 998
score: 99.00553755326705
patch: scale = vec CaMeL Absolute CaMeL Tolerance == null ;
rank: 998
score: 98.8805419921875
patch: scale = vec CaMeL Absolute CaMeL Tolerance ; }
rank: 998
score: 98.85974993024554
patch: final double [ ] scale ;
rank: 999
score: 99.51568359375
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { scale = vec CaMeL Absolute CaMeL Tolerance ; } else { scale = vec CaMeL Absolute CaMeL Tolerance ; } y CaMeL Dot CaMeL K [ 0 ] = y CaMeL Dot CaMeL K [ 0 ] * y CaMeL Dot CaMeL K [ 0 ] [ y CaMeL Dot CaMeL K [ 0 ] ] ;
rank: 999
score: 98.85843234592014
patch: scale = scal CaMeL Absolute CaMeL Tolerance ;
rank: 999
score: 98.41285923549107
patch: final double error = 0 ;
rank: 1000
score: 99.47501346982759
patch: final double [ ] scale ; if ( vec CaMeL Absolute CaMeL Tolerance == null ) { sum = new double [ y 0 . length ] ;
rank: 1000
score: 97.71995849609375
patch: scale = scale ;
rank: 1000
score: 96.33723958333333
patch: scale ;
rank: 1000
score: 94.99774169921875
patch: final
