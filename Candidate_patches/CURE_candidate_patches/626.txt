rank: 1
score: 99.6528552827381
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 1
score: 99.64856538318452
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 1
score: 99.59978889016544
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 1
score: 99.34759521484375
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 1
score: 99.22579956054688
patch: return KILL . KILL . KILL . KILL ;
rank: 1
score: 99.22374957540761
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ) . double CaMeL Value ( ) ;
rank: 1
score: 99.20916748046875
patch: return KILL . KILL . KILL . KILL . KILL ;
rank: 1
score: 99.09705352783203
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 2
score: 99.56253212376645
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 2
score: 99.5564601732337
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 2
score: 99.33561567826705
patch: return Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) . KILL ;
rank: 2
score: 99.20667375837054
patch: return KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 2
score: 99.16673743206522
patch: return Integer . value CaMeL Of ( n . get CaMeL String ( ) ) . int CaMeL Value ( ) ;
rank: 2
score: 99.14337158203125
patch: return KILL . KILL . KILL ;
rank: 2
score: 99.08879937065973
patch: throw new Runtime CaMeL Exception ( $STRING$ ;
rank: 3
score: 99.6123046875
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 3
score: 99.52033102101294
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 3
score: 99.28090413411458
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 3
score: 99.1498386548913
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ) ) . int CaMeL Value ( ) ;
rank: 3
score: 99.14315359933036
patch: return this . KILL . KILL . KILL . KILL . KILL ;
rank: 3
score: 99.08455033735795
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 3
score: 99.07722473144531
patch: return KILL ;
rank: 4
score: 99.60630731997283
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ;
rank: 4
score: 99.509521484375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 4
score: 99.500244140625
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 4
score: 99.40349469866071
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ;
rank: 4
score: 99.26714797247024
patch: return Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) . ;
rank: 4
score: 99.14539104959239
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . boolean CaMeL Value ( ) ;
rank: 4
score: 99.10378793569711
patch: return KILL . KILL . KILL . KILL . KILL ; }
rank: 4
score: 99.06193542480469
patch: return null ;
rank: 4
score: 99.02721150716145
patch: return KILL . KILL ;
rank: 5
score: 99.49539317255434
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) {
rank: 5
score: 99.49111147280092
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 5
score: 99.39948836616848
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 5
score: 99.26319376627605
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 5
score: 99.13603071732955
patch: return n . get CaMeL Value ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 5
score: 99.09873744419643
patch: return KILL . KILL . KILL . KILL . KILL ; } ;
rank: 6
score: 99.49420928955078
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 6
score: 99.48215247844827
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) ) ;
rank: 6
score: 99.39902524594908
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 6
score: 99.25245157877605
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 6
score: 99.13025433084239
patch: return Boolean . value CaMeL Of ( n . get CaMeL Value ( ) ) . boolean CaMeL Value ( ) ;
rank: 6
score: 99.09668840680804
patch: return KILL . KILL . KILL . KILL ; } return true ;
rank: 6
score: 99.03429066051136
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ;
rank: 6
score: 98.82341766357422
patch: return $STRING$ ;
rank: 7
score: 99.4717129794034
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 7
score: 99.2464111328125
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 7
score: 99.11942722486413
patch: return Integer . value CaMeL Of ( n . get CaMeL String ( ) ) . boolean CaMeL Value ( ) ;
rank: 7
score: 98.77490234375
patch: return KILL . KILL . KILL . FALSE ;
rank: 8
score: 99.56433686755952
patch: return Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL Parent ( ) ) ;
rank: 8
score: 99.4783935546875
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 8
score: 99.38573376885776
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 8
score: 99.2420987215909
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 8
score: 99.11704950747283
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ) ) . boolean CaMeL Value ( ) ;
rank: 8
score: 99.08858816964286
patch: return KILL . KILL . KILL . KILL ; } return false ;
rank: 8
score: 98.74312133789063
patch: return this . KILL . KILL . KILL ;
rank: 9
score: 99.5619586447011
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n ) ;
rank: 9
score: 99.475732421875
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 9
score: 99.38052262931035
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 9
score: 99.11571248372395
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 9
score: 99.07988630022321
patch: return super . KILL . KILL . KILL . KILL . KILL ;
rank: 9
score: 99.01957433363971
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL . ;
rank: 9
score: 98.73876274956598
patch: return KILL . KILL . KILL . ;
rank: 10
score: 99.46877872242646
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 10
score: 99.46442780671296
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) ;
rank: 10
score: 99.3804995888158
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 10
score: 99.23170301649306
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 10
score: 99.11118386008523
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ) . double CaMeL Value ( ;
rank: 10
score: 99.0684305826823
patch: return this . KILL . KILL . KILL . KILL ;
rank: 10
score: 98.72807006835937
patch: return Double . KILL . KILL . KILL ;
rank: 11
score: 99.45127958409927
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ;
rank: 11
score: 99.10509381975446
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ) ;
rank: 11
score: 99.05780901227679
patch: return parent . KILL . KILL . KILL . KILL . KILL ;
rank: 11
score: 98.96981201171874
patch: throw new Runtime CaMeL Exception ( KILL ) ;
rank: 11
score: 98.72730170355902
patch: return KILL . KILL . KILL ; ;
rank: 12
score: 99.46615439967105
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 12
score: 99.21295776367188
patch: return Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) ;
rank: 12
score: 99.1031494140625
patch: return n . get CaMeL Value ( ) . to CaMeL String ( ) ;
rank: 12
score: 99.05728585379464
patch: return KILL . KILL . KILL . KILL ; } return null ;
rank: 12
score: 98.96381022135417
patch: return KILL . KILL . KILL . KILL . KILL . KILL . ;
rank: 12
score: 98.72601928710938
patch: return super . KILL . KILL . KILL ;
rank: 13
score: 99.54823704769737
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 13
score: 99.53304317079741
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 13
score: 99.46226435122283
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL String ( ) ) ;
rank: 13
score: 99.37117309570313
patch: return Control CaMeL Flow CaMeL Graph . KILL ;
rank: 13
score: 99.20819702148438
patch: return node . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 13
score: 99.10188562729779
patch: return Integer . parse CaMeL Int ( n . get CaMeL String ( ) ) ;
rank: 13
score: 98.94917297363281
patch: return Boolean . value CaMeL Of ( ) . int CaMeL Value ( ) ;
rank: 13
score: 98.69716796875
patch: return Integer . KILL . KILL . KILL ;
rank: 14
score: 99.54753766741071
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 14
score: 99.458251953125
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 14
score: 99.4284912109375
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 14
score: 99.37052628800676
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 14
score: 99.19843207465277
patch: throw new Runtime CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 14
score: 99.1015392485119
patch: return Boolean . value CaMeL Of ( Boolean . value CaMeL Of ( Boolean . value CaMeL Of ( ;
rank: 14
score: 98.99940842848558
patch: return KILL . KILL . KILL . KILL . KILL ; ;
rank: 14
score: 98.94226792279412
patch: result = KILL . KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 14
score: 98.6885009765625
patch: throw KILL . KILL . KILL . KILL ;
rank: 15
score: 99.42789713541667
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) ) ;
rank: 15
score: 99.19657817639802
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ;
rank: 15
score: 99.10093688964844
patch: return n . get CaMeL Result ( ) . get CaMeL Value ( ) ;
rank: 15
score: 98.93844784007354
patch: return return KILL . KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 15
score: 98.68184814453124
patch: return scope . KILL . KILL . KILL ;
rank: 16
score: 99.44203252377717
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) {
rank: 16
score: 99.42117309570312
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ;
rank: 16
score: 99.3632311698718
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 16
score: 99.19472045898438
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 16
score: 98.99785505022321
patch: return KILL . KILL . KILL . KILL ; } return KILL ;
rank: 16
score: 98.93472110523896
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + Integer . to CaMeL String ;
rank: 16
score: 98.67757161458333
patch: return KILL . KILL . KILL . KILL
rank: 17
score: 99.5250308388158
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 17
score: 99.5166015625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ;
rank: 17
score: 99.41653006417411
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) ;
rank: 17
score: 99.36296530330883
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 17
score: 99.19451545266544
patch: throw new Runtime CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ;
rank: 17
score: 99.09376061480978
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . to CaMeL String ( ) ;
rank: 17
score: 98.99642508370536
patch: return Node CaMeL Util . KILL . KILL . KILL . KILL ;
rank: 17
score: 98.64498562282986
patch: return . KILL . KILL . KILL ;
rank: 18
score: 99.51268469769022
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 18
score: 99.43095259232955
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 18
score: 99.41419474283855
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 18
score: 99.35238534432871
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 18
score: 99.09361200747283
patch: return Short . value CaMeL Of ( n . get CaMeL Value ( ) ) . boolean CaMeL Value ( ) ;
rank: 18
score: 98.99460274832589
patch: return this . KILL . KILL . KILL . KILL ; } ;
rank: 18
score: 98.64273681640626
patch: return KILL . KILL . KILL . EMPTY ;
rank: 19
score: 99.52297044836956
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , variable ) ;
rank: 19
score: 99.35127527573529
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 19
score: 99.190234375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 19
score: 99.09275220788044
patch: return Boolean . value CaMeL Of ( n . get CaMeL Boolean ( ) ) . boolean CaMeL Value ( ) ;
rank: 19
score: 98.99453500600961
patch: return this . KILL . KILL . KILL . KILL ; }
rank: 19
score: 98.9281234741211
patch: System . out . println ( KILL . to CaMeL String ( ) ) ;
rank: 19
score: 98.63778347439236
patch: return KILL . KILL . KILL ; }
rank: 20
score: 99.425498046875
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL String ( ) ) ;
rank: 20
score: 99.41052667025862
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL String ( ) ) ;
rank: 20
score: 99.34927528782895
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) ;
rank: 20
score: 99.18997353001645
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ;
rank: 20
score: 99.09144658627717
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ) . boolean CaMeL Value ( ) ;
rank: 20
score: 98.99308638139205
patch: return KILL . KILL . KILL . KILL ; }
rank: 20
score: 98.92471133961396
patch: { return KILL . KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 20
score: 98.63123575846355
patch: return Integer . KILL ;
rank: 21
score: 99.42025390625
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 21
score: 99.40999348958333
patch: super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 21
score: 99.34461805555556
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 21
score: 99.18917686060855
patch: return Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ;
rank: 21
score: 99.08617102581522
patch: return Double . value CaMeL Of ( n . get CaMeL Double ( ) ) . double CaMeL Value ( ) ;
rank: 21
score: 98.99143473307292
patch: return super . KILL . KILL . KILL . KILL ;
rank: 21
score: 98.92426614200367
patch: return KILL . KILL . return KILL . KILL . KILL . KILL . KILL ;
rank: 21
score: 98.62467651367187
patch: return KILL . KILL . KILL . KILL KILL
rank: 22
score: 99.510498046875
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 22
score: 99.50442820581897
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , n . get CaMeL Parent ( ) ) ;
rank: 22
score: 99.40668279474431
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 22
score: 99.34291585286458
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL ;
rank: 22
score: 99.1863525390625
patch: if ( Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ) ) )
rank: 22
score: 99.08578636532738
patch: return n . get CaMeL Value ( ) . equals ( n . get CaMeL String ( ) ) ;
rank: 22
score: 98.98733084542411
patch: return KILL . KILL . KILL . KILL == KILL . KILL ;
rank: 22
score: 98.91651826746323
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . to CaMeL String ( ) ;
rank: 22
score: 98.62264404296874
patch: return KILL . KILL . KILL + KILL ;
rank: 23
score: 99.51046620244566
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 23
score: 99.406396484375
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 23
score: 99.34137284128289
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 23
score: 98.91079477163461
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ;
rank: 23
score: 98.6126220703125
patch: return KILL . KILL . KILL . TRUE ;
rank: 24
score: 99.51036312705592
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 24
score: 99.50390625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 24
score: 99.41732584635416
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 24
score: 99.40477728074596
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 24
score: 99.34068359375
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 24
score: 99.08311244419643
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . trim ( ) ;
rank: 24
score: 98.90957462086396
patch: return KILL . KILL . KILL . return KILL . KILL . KILL . KILL ;
rank: 24
score: 98.61168077256944
patch: return KILL . . KILL . KILL ;
rank: 25
score: 99.50996326264881
patch: return Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 25
score: 99.4143597146739
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n . get CaMeL Parent ( ) ) ;
rank: 25
score: 99.3401630108173
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 25
score: 99.17636940696023
patch: if ( Node CaMeL Util . is CaMeL Qualified CaMeL Name ( n . get CaMeL String ( ) ) )
rank: 25
score: 99.08020550271739
patch: return Long . value CaMeL Of ( n . get CaMeL Value ( ) ) . double CaMeL Value ( ) ;
rank: 25
score: 98.98102678571429
patch: return Boolean . KILL . KILL . KILL . KILL . KILL ;
rank: 25
score: 98.90500895182292
patch: throw new Illegal CaMeL Argument CaMeL Exception ( KILL ) ;
rank: 25
score: 98.60850219726562
patch: return super . get CaMeL Parent ( ) ;
rank: 26
score: 99.50880784254808
patch: return Node CaMeL Util . is CaMeL Lhs ( n ) ;
rank: 26
score: 99.41067665501645
patch: return this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 26
score: 99.33994654605263
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 26
score: 99.17085404829545
patch: return node . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . KILL ;
rank: 26
score: 99.07696242559524
patch: return n . get CaMeL Value ( ) . get CaMeL Value ( ) . get CaMeL Value ( ;
rank: 26
score: 98.97943987165179
patch: return null . KILL . KILL . KILL . KILL . KILL ;
rank: 26
score: 98.9010368795956
patch: return KILL . return KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 26
score: 98.60658569335938
patch: return KILL . KILL . KILL = KILL ;
rank: 27
score: 99.40995519301471
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 27
score: 99.1668117357337
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . ;
rank: 27
score: 99.07588527513587
patch: return Short . value CaMeL Of ( n . get CaMeL String ( ) ) . boolean CaMeL Value ( ) ;
rank: 27
score: 98.97622680664062
patch: return parent . KILL . KILL . KILL . KILL ;
rank: 27
score: 98.8992919921875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; }
rank: 27
score: 98.60564422607422
patch: return false ;
rank: 28
score: 99.49250139508929
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 28
score: 99.4092429832176
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 28
score: 99.39927606997283
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ;
rank: 28
score: 99.33879258897569
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 28
score: 99.16339111328125
patch: return parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 28
score: 99.07540283203124
patch: return n . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 28
score: 98.89707946777344
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . to CaMeL String ( ;
rank: 28
score: 98.6024169921875
patch: return KILL . KILL . FALSE ;
rank: 29
score: 99.50528446320564
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) ) ;
rank: 29
score: 99.39880823206019
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) ) ;
rank: 29
score: 99.33812191611842
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) ;
rank: 29
score: 99.16200015419408
patch: if ( Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ) ;
rank: 29
score: 99.07164996603261
patch: return Double . value CaMeL Of ( n . get CaMeL String ( ) ) . double CaMeL Value ( ) ;
rank: 29
score: 98.971435546875
patch: return KILL . KILL . KILL . KILL ; } ;
rank: 29
score: 98.88837747012867
patch: return KILL . KILL . KILL . KILL KILL . KILL . KILL . KILL ;
rank: 29
score: 98.60033569335937
patch: return KILL . KILL . KILL . KILL Variable
rank: 30
score: 99.40618341619319
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 30
score: 99.3983742042824
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL String ( ) ) ;
rank: 30
score: 99.33546956380208
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 30
score: 99.16063842773437
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 30
score: 99.07004681755515
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) ;
rank: 30
score: 98.88773839613971
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ . to CaMeL String ( ) ;
rank: 30
score: 98.59755249023438
patch: return KILL . KILL . KILL . KILL .
rank: 31
score: 99.48577521829044
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 31
score: 99.33271620008681
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 31
score: 99.0693996263587
patch: return Long . value CaMeL Of ( n . get CaMeL Value ( ) ) . boolean CaMeL Value ( ) ;
rank: 31
score: 98.88772403492646
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + Integer . to CaMeL String ;
rank: 31
score: 98.58460828993056
patch: return KILL KILL . KILL . KILL ;
rank: 32
score: 99.15858764648438
patch: return Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ; }
rank: 32
score: 99.06892903645833
patch: return n . get CaMeL String ( ) . equals ( n . get CaMeL String ( ) ) ;
rank: 32
score: 98.9365234375
patch: return KILL KILL . KILL . KILL . KILL . KILL ;
rank: 32
score: 98.88670857747395
patch: throw new Illegal CaMeL State CaMeL Exception ( KILL ) ;
rank: 32
score: 98.58347574869792
patch: return Double . KILL ;
rank: 33
score: 99.39172894021739
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) )
rank: 33
score: 99.33114803538604
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 33
score: 99.151318359375
patch: if ( Node CaMeL Util . KILL . equals ( ; Node CaMeL Util . KILL . KILL ;
rank: 33
score: 99.06737171519886
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 33
score: 98.9344012920673
patch: return return KILL . KILL . KILL . KILL . KILL ;
rank: 33
score: 98.88661104090073
patch: return KILL . KILL . KILL . KILL . KILL KILL . KILL . KILL ;
rank: 33
score: 98.57986111111111
patch: return KILL . KILL . . KILL ;
rank: 34
score: 99.48080842391305
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 34
score: 99.40158081054688
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) {
rank: 34
score: 99.32833784054488
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) ;
rank: 34
score: 99.15029074928977
patch: if ( Node CaMeL Util . KILL . KILL . equals ( n . get CaMeL String ( ) ) )
rank: 34
score: 99.06612820095486
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ) . ;
rank: 34
score: 98.88633099724265
patch: return KILL . KILL . KILL . . KILL . KILL . KILL . KILL ;
rank: 34
score: 98.57685852050781
patch: return Double . KILL . KILL ;
rank: 35
score: 99.49247101814517
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL String ( ) ) ;
rank: 35
score: 99.40012904575893
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 35
score: 99.32806222098215
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 35
score: 99.14859672214673
patch: return Boolean . value CaMeL Of ( n . get CaMeL String ( ) ) . boolean CaMeL Value ( ) ;
rank: 35
score: 99.06511896306819
patch: return n . get CaMeL Result ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 35
score: 98.9237530048077
patch: return KILL . KILL . KILL . KILL ; } else {
rank: 35
score: 98.88581848144531
patch: System . err . println ( KILL . to CaMeL String ( ) ) ;
rank: 35
score: 98.57322998046875
patch: return ; = KILL . KILL . KILL ;
rank: 36
score: 99.47990470096983
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ) ;
rank: 36
score: 99.39903971354167
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 36
score: 99.14749948601974
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ;
rank: 36
score: 99.06459045410156
patch: return n . get CaMeL Value ( ) . boolean CaMeL Value ( ) ;
rank: 36
score: 98.9228985126202
patch: return . KILL . KILL . KILL . KILL . KILL ;
rank: 36
score: 98.572265625
patch: return Math . KILL . KILL . KILL ;
rank: 37
score: 99.48779296875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 37
score: 99.4783871299342
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 37
score: 99.39888509114583
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 37
score: 99.38162796585648
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL String ( ) ) ;
rank: 37
score: 99.32305908203125
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 37
score: 99.14661754261364
patch: if ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) . ;
rank: 37
score: 99.06220037286931
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 37
score: 98.91768391927083
patch: return KILL . KILL . KILL . KILL == KILL ;
rank: 37
score: 98.87668744255515
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL ; ;
rank: 37
score: 98.56988525390625
patch: return null . KILL . KILL . KILL ;
rank: 38
score: 99.47838174143145
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 38
score: 99.32255473889802
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 38
score: 99.06212848165761
patch: return n . get CaMeL Value ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ; }
rank: 38
score: 98.87277401194854
patch: return KILL . KILL KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 38
score: 98.56728108723958
patch: return return KILL . KILL . KILL ;
rank: 39
score: 99.39605353860294
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 39
score: 99.37601047092014
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 39
score: 99.3223812705592
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 39
score: 99.14544968377976
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . ;
rank: 39
score: 98.90431565504808
patch: else return KILL . KILL . KILL . KILL . KILL ;
rank: 39
score: 98.8717529296875
patch: throw new Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( ) ;
rank: 39
score: 98.56143188476562
patch: return KILL . KILL . EMPTY ;
rank: 40
score: 99.47562081473214
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ;
rank: 40
score: 99.39566824776786
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 40
score: 99.37458748653017
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) , variable ) ;
rank: 40
score: 99.32135009765625
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL ;
rank: 40
score: 99.05625915527344
patch: return n . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 40
score: 98.89190673828125
patch: return KILL . KILL . KILL . KILL ; break ;
rank: 40
score: 98.8686294555664
patch: throw new Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;
rank: 40
score: 98.55797576904297
patch: return Integer . KILL . KILL ;
rank: 41
score: 99.47520862926136
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( ) ) ;
rank: 41
score: 99.39492652529762
patch: if ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) {
rank: 41
score: 99.37354625355114
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 41
score: 99.31911057692308
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL ;
rank: 41
score: 99.14084041819854
patch: return Boolean . value CaMeL Of ( true ) . boolean CaMeL Value ( ) ;
rank: 41
score: 99.0549953294837
patch: return Node CaMeL Util . KILL . equals CaMeL Ignore CaMeL Case ( n . get CaMeL String ( ) ) ;
rank: 41
score: 98.8905029296875
patch: return Node CaMeL Util . KILL . KILL . KILL ;
rank: 41
score: 98.8671013327206
patch: return KILL . KILL . KILL . KILL . KILL . KILL KILL . KILL ;
rank: 41
score: 98.55296325683594
patch: return super . KILL . KILL ;
rank: 42
score: 99.48116932744566
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( child CaMeL Value ) ;
rank: 42
score: 99.4751953125
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) )
rank: 42
score: 99.39475611636513
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ;
rank: 42
score: 99.37331627155173
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First ( ) ) ;
rank: 42
score: 99.31895616319444
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 42
score: 99.13727361505681
patch: return Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) . ; }
rank: 42
score: 99.05369931175595
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ;
rank: 42
score: 98.88739013671875
patch: return parent . KILL . get CaMeL Instance ( ) ;
rank: 42
score: 98.86702473958333
patch: result = KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 42
score: 98.54901123046875
patch: return $STRING$ . KILL . KILL . KILL ;
rank: 43
score: 99.48068138860887
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Graph ( ) ) ;
rank: 43
score: 99.47355143229167
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Node ( ) ) ;
rank: 43
score: 99.39323874080883
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 43
score: 99.37246365017361
patch: super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 43
score: 99.3188674514358
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ) ;
rank: 43
score: 99.05293996710526
patch: return Character . to CaMeL Upper CaMeL Case ( n . get CaMeL String ( ) ) ;
rank: 43
score: 98.88511149088542
patch: return null . KILL . KILL . KILL . KILL ;
rank: 43
score: 98.86521809895834
patch: return KILL . KILL . KILL . return KILL . KILL . KILL ;
rank: 43
score: 98.54564666748047
patch: return this ;
rank: 44
score: 99.47349811422414
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n . get CaMeL Parent ( ) ) ;
rank: 44
score: 99.372412109375
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) ;
rank: 44
score: 99.31874593098958
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL
rank: 44
score: 99.13337053571429
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ;
rank: 44
score: 99.05266779119319
patch: return n . get CaMeL Parent ( ) . get CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 44
score: 98.87877061631944
patch: throw new Runtime CaMeL Exception ( ) ;
rank: 44
score: 98.86392032398896
patch: return KILL . KILL . KILL . KILL . KILL . return KILL . KILL ;
rank: 44
score: 98.54314575195312
patch: return KILL . KILL . KILL . . ;
rank: 45
score: 99.37158203125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) ) ;
rank: 45
score: 99.31802368164062
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 45
score: 99.13334517045455
patch: return parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . KILL ;
rank: 45
score: 99.04996390964673
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) . double CaMeL Value ( ) ) ;
rank: 45
score: 98.86283111572266
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ . to CaMeL String ( ;
rank: 45
score: 98.5389892578125
patch: return KILL . KILL . KILL ( KILL ;
rank: 46
score: 99.31777518136161
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 46
score: 99.13319307215073
patch: return Boolean . value CaMeL Of ( false ) . boolean CaMeL Value ( ) ;
rank: 46
score: 99.04845660665761
patch: return Short . value CaMeL Of ( n . get CaMeL Value ( ) ) . int CaMeL Value ( ) ;
rank: 46
score: 98.87802124023438
patch: return KILL . KILL . KILL == KILL . KILL ;
rank: 46
score: 98.86182579627403
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $STRING$ ;
rank: 46
score: 98.53386840820312
patch: return vars . KILL . KILL . KILL ;
rank: 47
score: 99.38611711774554
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 47
score: 99.31764573317308
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) , variable ) ;
rank: 47
score: 99.0475543478261
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . int CaMeL Value ( ) ;
rank: 47
score: 98.87728177584134
patch: return KILL . KILL . KILL . KILL . KILL . ;
rank: 47
score: 98.860302734375
patch: return KILL . KILL . return KILL . KILL . KILL . KILL ;
rank: 47
score: 98.53384399414062
patch: return this . KILL . KILL ;
rank: 48
score: 99.47660319010417
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( n ) ) ;
rank: 48
score: 99.38607933407738
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL String ( ) ) ;
rank: 48
score: 99.13290550595238
patch: if ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL . KILL . KILL )
rank: 48
score: 99.04736328125
patch: return Character . to CaMeL Char CaMeL Array ( n . get CaMeL Line CaMeL Number ( ) ) ;
rank: 48
score: 98.8734882061298
patch: return KILL . KILL KILL . KILL . KILL . KILL ;
rank: 48
score: 98.85956169577206
patch: return KILL . KILL . KILL . KILL . return KILL . KILL . KILL ;
rank: 48
score: 98.53143310546875
patch: return KILL . KILL . KILL . . KILL
rank: 49
score: 99.47651110197368
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 49
score: 99.38594193892045
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 49
score: 99.31432756696428
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 49
score: 99.13212280273437
patch: return Boolean . value CaMeL Of ( Boolean . value CaMeL Of ( Boolean . value CaMeL Of ;
rank: 49
score: 99.046826171875
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ;
rank: 49
score: 98.87152569110577
patch: else { return KILL . KILL . KILL . KILL ; }
rank: 49
score: 98.85921223958333
patch: throw new Runtime CaMeL Exception ( $STRING$ + Integer . to CaMeL String ;
rank: 49
score: 98.53118286132812
patch: return Node CaMeL Util . KILL . KILL ;
rank: 50
score: 99.47608326099537
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 50
score: 99.383828125
patch: return this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 50
score: 99.36658653846153
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 50
score: 99.31128607855902
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 50
score: 99.13179524739583
patch: if ( Node CaMeL Util . KILL . equals ( ;
rank: 50
score: 99.04532470703126
patch: return n . get CaMeL Value ( ) . equals ( n . get CaMeL String ( ) ;
rank: 50
score: 98.870361328125
patch: return Boolean . KILL . KILL . KILL . KILL ;
rank: 50
score: 98.85701258042279
patch: return return Boolean . value CaMeL Of ( ) . int CaMeL Value ( ) ;
rank: 50
score: 98.52579345703126
patch: return System . KILL . KILL . KILL ;
rank: 51
score: 99.46909877232143
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n . get CaMeL First CaMeL Child ( ) ) ;
rank: 51
score: 99.38299005681819
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL String ( ) ) ;
rank: 51
score: 99.3112595016892
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 51
score: 99.13092595880681
patch: return Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) . load ;
rank: 51
score: 99.0444972826087
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ) ) . double CaMeL Value ( ) ;
rank: 51
score: 98.85624425551471
patch: return KILL . KILL . KILL . KILL . KILL . . KILL . KILL ;
rank: 51
score: 98.52401123046874
patch: return KILL . KILL . KILL ; } ;
rank: 52
score: 99.46567111545139
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 52
score: 99.36601039341518
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) )
rank: 52
score: 99.31118539663461
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . READ ;
rank: 52
score: 99.12980382582721
patch: return Integer . value CaMeL Of ( n . get CaMeL String ( ) ) ;
rank: 52
score: 99.04412520559211
patch: return Character . to CaMeL Char CaMeL Array ( n . get CaMeL String ( ) ) ;
rank: 52
score: 98.86978149414062
patch: return this . KILL . get CaMeL Instance ( ) ;
rank: 52
score: 98.85015510110294
patch: return KILL . KILL . KILL . KILL . KILL . KILL . return KILL ;
rank: 52
score: 98.51885223388672
patch: return KILL . KILL . TRUE ;
rank: 53
score: 99.46396336410984
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 53
score: 99.31010478251689
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 53
score: 99.12803021599265
patch: return Boolean . value CaMeL Of ( value ) . boolean CaMeL Value ( ) ;
rank: 53
score: 99.042724609375
patch: return Integer . value CaMeL Of ( n . get CaMeL String ( ) ) . double CaMeL Value ( ) ;
rank: 53
score: 98.86731896033653
patch: return super . KILL KILL . KILL . KILL . KILL ;
rank: 53
score: 98.84992327008929
patch: throw new Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( ;
rank: 53
score: 98.51217041015624
patch: return super . get CaMeL Value ( ) ;
rank: 54
score: 99.46351278981855
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill , variable ) ;
rank: 54
score: 99.37629917689732
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 54
score: 99.36548755787037
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) ) ;
rank: 54
score: 99.30992889404297
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 54
score: 99.12446032072368
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . ;
rank: 54
score: 98.86572265625
patch: return super . KILL . get CaMeL Instance ( ) ;
rank: 54
score: 98.8483378092448
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ; }
rank: 54
score: 98.51170043945312
patch: if ; return KILL . KILL . KILL ;
rank: 55
score: 99.37403453480114
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 55
score: 99.3652861624053
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . n , n . get CaMeL Parent ( ) ) ;
rank: 55
score: 99.30905243844697
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 55
score: 99.12132504111842
patch: if ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL . KILL )
rank: 55
score: 99.0418117357337
patch: return Short . value CaMeL Of ( n . get CaMeL String ( ) ) . int CaMeL Value ( ) ;
rank: 55
score: 98.8641866048177
patch: return 0 . KILL . KILL . KILL . KILL ;
rank: 55
score: 98.84820001775569
patch: throw new Runtime CaMeL Exception ( $STRING$ + $STRING$ ;
rank: 55
score: 98.51157836914062
patch: return code . KILL . KILL . KILL ;
rank: 56
score: 99.37393925107759
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 56
score: 99.36505681818181
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n , n . get CaMeL Parent ( ) ) ;
rank: 56
score: 99.30900969328704
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 56
score: 99.1192294034091
patch: return Node CaMeL Util . KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 56
score: 99.04131789434524
patch: return Character . to CaMeL Upper CaMeL Case ( n . get CaMeL Line CaMeL Number ( ) ) ;
rank: 56
score: 98.85869891826923
patch: } return KILL . KILL . KILL . KILL . KILL ;
rank: 56
score: 98.84710334329044
patch: return KILL . KILL . KILL . KILL . . KILL . KILL . KILL ;
rank: 56
score: 98.5075439453125
patch: return super . get CaMeL Result ( ) ;
rank: 57
score: 99.4698486328125
patch: return Node CaMeL Util . is CaMeL Lhs ( n , variable ) ;
rank: 57
score: 99.46249852035984
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) ) ;
rank: 57
score: 99.37366092566288
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 57
score: 99.30873736213235
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 57
score: 99.1189697265625
patch: if ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ;
rank: 57
score: 99.03956139605978
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ;
rank: 57
score: 98.85860188802083
patch: return KILL . KILL . KILL . KILL . EMPTY ;
rank: 57
score: 98.8449462890625
patch: return return KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 57
score: 98.50447591145833
patch: return KILL . KILL . KILL KILL ;
rank: 58
score: 99.46895599365234
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 58
score: 99.46249276620371
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n . get CaMeL Parent ( ) ) ;
rank: 58
score: 99.37325613839286
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 58
score: 99.36360473632813
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 58
score: 99.1185886548913
patch: if ( Node CaMeL Util . KILL . equals CaMeL Ignore CaMeL Case ( n . get CaMeL String ( ) ;
rank: 58
score: 99.03892933238636
patch: return n . get CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 58
score: 98.49959106445313
patch: return KILL . KILL . KILL . NONE ;
rank: 59
score: 99.46195475260417
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 59
score: 99.37216584578805
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL String ( ) ) ;
rank: 59
score: 99.36195882161458
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 59
score: 99.30802408854167
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent ) ;
rank: 59
score: 99.11829144021739
patch: return Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) . KILL ( ;
rank: 59
score: 99.03851873224431
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 59
score: 98.85439231178977
patch: return KILL . KILL . KILL . KILL ; ;
rank: 59
score: 98.4991455078125
patch: return KILL . KILL return KILL . KILL ;
rank: 60
score: 99.37130398220486
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( (
rank: 60
score: 99.36194786658653
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 60
score: 99.30757068452381
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 60
score: 99.11782438858695
patch: if ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL )
rank: 60
score: 99.03783118206522
patch: return n . get CaMeL String CaMeL Value ( ) . equals ( n . get CaMeL String CaMeL Value ( ;
rank: 60
score: 98.85335286458333
patch: else return KILL . KILL . KILL . KILL ; }
rank: 60
score: 98.83098288143383
patch: return KILL . KILL . KILL . KILL ; return KILL . KILL . KILL ;
rank: 60
score: 98.49544270833333
patch: return - KILL . KILL . KILL ;
rank: 61
score: 99.46647135416667
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n ) ;
rank: 61
score: 99.46102905273438
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) ;
rank: 61
score: 99.30733235677083
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) ;
rank: 61
score: 99.11505126953125
patch: if ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL String ( ) ) )
rank: 61
score: 99.037353515625
patch: return Node CaMeL Util . KILL . equals CaMeL Ignore CaMeL Case ( n . get CaMeL String ( ) ;
rank: 61
score: 98.84862263997395
patch: return Boolean . KILL ;
rank: 61
score: 98.83081772748162
patch: return KILL . KILL . KILL . KILL . KILL . KILL . . KILL ;
rank: 61
score: 98.49070739746094
patch: return Node CaMeL Util . KILL ;
rank: 62
score: 99.37062581380208
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n
rank: 62
score: 99.35970405910327
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First ( ) ) ;
rank: 62
score: 99.30703895970395
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 62
score: 99.114990234375
patch: if ( Node CaMeL Util . is CaMeL Qualified CaMeL Name ( n . get CaMeL String ( ) ;
rank: 62
score: 98.8475341796875
patch: return Node CaMeL Util . get CaMeL Instance ( ) ;
rank: 62
score: 98.82904052734375
patch: return KILL . KILL . KILL . KILL . KILL . KILL . . ;
rank: 62
score: 98.49034118652344
patch: return true ;
rank: 63
score: 99.46510009765625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ) ;
rank: 63
score: 99.45872667100694
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) )
rank: 63
score: 99.03495065789474
patch: return n . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ;
rank: 63
score: 98.84650127704327
patch: return this . KILL . KILL . KILL . KILL ; ;
rank: 63
score: 98.82823835100446
patch: throw new Illegal CaMeL Argument CaMeL Exception . Error ( $STRING$ ) ;
rank: 63
score: 98.48816528320313
patch: return KILL . KILL . KILL . KILL (
rank: 64
score: 99.4646857766544
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( n ) ) ;
rank: 64
score: 99.45860380284927
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 64
score: 99.36977854082662
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ) {
rank: 64
score: 99.30376233552632
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 64
score: 99.11496900475544
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL ) ;
rank: 64
score: 98.8456280048077
patch: return KILL . KILL . KILL . KILL ; break ; }
rank: 64
score: 98.82461547851562
patch: throw new Runtime CaMeL Exception ( $STRING$ + . ) ;
rank: 64
score: 98.48606567382812
patch: return false . KILL . KILL . KILL ;
rank: 65
score: 99.36899201766305
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 65
score: 99.3031005859375
patch: return n . get CaMeL Parent ( ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 65
score: 99.03446655273437
patch: return n . get CaMeL String ( ) . equals ( n . get CaMeL String ( ) ;
rank: 65
score: 98.8441913311298
patch: return null . KILL . KILL . KILL . KILL ; }
rank: 65
score: 98.82364095052084
patch: { return KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 65
score: 98.48516845703125
patch: return KILL . KILL . KILL . println ;
rank: 66
score: 99.36814926609848
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 66
score: 99.3029276529948
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . READ ;
rank: 66
score: 99.11220481178977
patch: return Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) . check ;
rank: 66
score: 99.03359503495066
patch: return Character . to CaMeL Lower CaMeL Case ( n . get CaMeL String ( ) ) ;
rank: 66
score: 98.84083251953125
patch: return KILL . get CaMeL Instance ( ) ;
rank: 66
score: 98.82357967601104
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL KILL ;
rank: 66
score: 98.48306613498264
patch: return KILL . KILL ; return KILL ;
rank: 67
score: 99.45440995065789
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n )
rank: 67
score: 99.36799665178572
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 67
score: 99.1112060546875
patch: return Node CaMeL Util . KILL . KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 67
score: 99.03342603600544
patch: return Integer . parse CaMeL Int ( n . get CaMeL String ( ) ) . int CaMeL Value ( ) ;
rank: 67
score: 98.8366229717548
patch: break KILL . KILL . KILL . KILL . KILL ; }
rank: 67
score: 98.82247721354166
patch: throw new Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception ( $STRING$ ;
rank: 67
score: 98.47869873046875
patch: return KILL . KILL . KILL , KILL ;
rank: 68
score: 99.45320638020833
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 68
score: 99.36794211647727
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) {
rank: 68
score: 99.35204206194196
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 68
score: 99.30225965711806
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ,
rank: 68
score: 99.11119249131944
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ( ;
rank: 68
score: 99.03236897786458
patch: return n . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ;
rank: 68
score: 98.83339436848958
patch: return KILL . KILL . KILL . KILL . . ;
rank: 68
score: 98.82221221923828
patch: return get CaMeL Runtime ( ) . KILL . KILL . KILL . KILL ;
rank: 68
score: 98.47177559988839
patch: return KILL ; return KILL ;
rank: 69
score: 99.4609375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) , variable ) ;
rank: 69
score: 99.4527587890625
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 69
score: 99.35181505926724
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) )
rank: 69
score: 99.30207061767578
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 69
score: 99.11080496651786
patch: if ( Node CaMeL Util . KILL . KILL . equals ( n . get CaMeL String ( ) ;
rank: 69
score: 99.03158714657738
patch: return n . get CaMeL Name ( ) . equals ( n . get CaMeL String ( ) ) ;
rank: 69
score: 98.8310213955966
patch: return . KILL . KILL . KILL . KILL ;
rank: 69
score: 98.8204574584961
patch: return KILL . KILL . KILL . KILL = KILL . KILL . KILL ;
rank: 69
score: 98.47108764648438
patch: return KILL . KILL . KILL == KILL ;
rank: 70
score: 99.45213734019886
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ;
rank: 70
score: 99.35162550403226
patch: return Control CaMeL Flow CaMeL Graph . KILL . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 70
score: 99.30188927283653
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . READ ;
rank: 70
score: 99.10906427556819
patch: if ( Node CaMeL Util . is CaMeL Qualified CaMeL Name ( n . get CaMeL String ( ) ) ;
rank: 70
score: 99.03113374255952
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ) . double CaMeL Value ;
rank: 70
score: 98.83098895733173
patch: finally { return KILL . KILL . KILL . KILL ; }
rank: 70
score: 98.82012067522321
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + . ) ;
rank: 70
score: 98.46535034179688
patch: return count . KILL . KILL . KILL ;
rank: 71
score: 99.45106090198864
patch: state = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 71
score: 99.36609564887152
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 71
score: 99.3515204067888
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL String ( ) ) ;
rank: 71
score: 99.30171712239583
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) ;
rank: 71
score: 99.10894775390625
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 71
score: 99.0304538892663
patch: return Short . value CaMeL Of ( n . get CaMeL Value ( ) ) . double CaMeL Value ( ) ;
rank: 71
score: 98.82977764423077
patch: return - KILL . KILL . KILL . KILL . KILL ;
rank: 71
score: 98.81981658935547
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Runtime CaMeL Exception . KILL ) ;
rank: 71
score: 98.46529541015624
patch: return KILL . KILL . KILL : KILL ;
rank: 72
score: 99.45826879040948
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 72
score: 99.34926576967592
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL String ( ) ) ;
rank: 72
score: 99.10772150213069
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . ; }
rank: 72
score: 99.0302966889881
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ;
rank: 72
score: 98.8187255859375
patch: throw new Runtime CaMeL Exception ( $STRING$ ; }
rank: 72
score: 98.46430969238281
patch: return ; = KILL . KILL ;
rank: 73
score: 99.45725730613425
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 73
score: 99.45012071397569
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) )
rank: 73
score: 99.36410183376736
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 73
score: 99.34907670454545
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill . return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 73
score: 99.1073330965909
patch: if ( Node CaMeL Util . is CaMeL Na CaMeL N ( n . get CaMeL String ( ) ) )
rank: 73
score: 99.02961077008929
patch: return n . get CaMeL Parent ( ) . get CaMeL Node ( ) . get CaMeL Node ( ;
rank: 73
score: 98.8240458170573
patch: return node . KILL . KILL . KILL . KILL ;
rank: 73
score: 98.81798598345588
patch: throw new Runtime CaMeL Exception ( $STRING$ + node . get CaMeL String ( ) ;
rank: 73
score: 98.46305338541667
patch: return super . KILL ;
rank: 74
score: 99.45567282652243
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) , variable ) ;
rank: 74
score: 99.44987883391204
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . READ ) ;
rank: 74
score: 99.363623046875
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 74
score: 99.34894293707771
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 74
score: 99.29913330078125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) ;
rank: 74
score: 99.1055020419034
patch: throw new No CaMeL Such CaMeL Method CaMeL Error ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 74
score: 99.02549050071023
patch: return n . get CaMeL Result ( ) . get CaMeL Value ( ) . to CaMeL String ( ) ;
rank: 74
score: 98.81954345703124
patch: return parent . KILL . KILL . KILL ;
rank: 74
score: 98.8153076171875
patch: try { return KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 74
score: 98.45477294921875
patch: return Compiler . KILL . KILL . KILL ;
rank: 75
score: 99.45563616071429
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ;
rank: 75
score: 99.36353278882575
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 75
score: 99.29879513302365
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 75
score: 99.10501437717014
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ;
rank: 75
score: 98.81741098257211
patch: return $STRING$ . KILL . KILL . KILL . KILL ; }
rank: 75
score: 98.8134765625
patch: } else { return KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 75
score: 98.453955078125
patch: return KILL . KILL . KILL . LINE ;
rank: 76
score: 99.45497197690217
patch: return Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 76
score: 99.36288791232639
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 76
score: 99.34724731445313
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 76
score: 99.10463256835938
patch: if ( Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ) ) ;
rank: 76
score: 99.023828125
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ;
rank: 76
score: 98.81619027944711
patch: return parent . KILL KILL . KILL . KILL . KILL ;
rank: 76
score: 98.8124755859375
patch: return KILL . return KILL . KILL . KILL . KILL . KILL ;
rank: 76
score: 98.45293579101562
patch: return KILL . KILL . KILL . ; ;
rank: 77
score: 99.45408630371094
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( n ) ) ;
rank: 77
score: 99.10453033447266
patch: throw new Runtime CaMeL Exception ( $STRING$ + n . get CaMeL String ( ;
rank: 77
score: 99.0229159268466
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent ;
rank: 77
score: 98.8159649188702
patch: return parent . KILL . KILL . KILL . KILL ; }
rank: 77
score: 98.81203391335227
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ;
rank: 77
score: 98.45106201171875
patch: return KILL . KILL = KILL . KILL ;
rank: 78
score: 99.4463599420363
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ) ;
rank: 78
score: 99.36184692382812
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 78
score: 99.29810509314903
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 78
score: 99.10256958007812
patch: return ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL . KILL ) ;
rank: 78
score: 99.0216552734375
patch: return get CaMeL Value ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 78
score: 98.81435139973958
patch: return props . KILL . KILL . KILL . KILL ;
rank: 78
score: 98.80952962239583
patch: System . out . println ( KILL . to CaMeL String ( ) ;
rank: 78
score: 98.44955444335938
patch: return . . KILL . KILL . KILL ;
rank: 79
score: 99.45343159520348
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . ) ) ;
rank: 79
score: 99.36112837357955
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) )
rank: 79
score: 99.34506661551339
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL String ( ) ) ;
rank: 79
score: 99.29799290707237
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) , variable ) ;
rank: 79
score: 99.10201416015624
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 79
score: 99.0212933084239
patch: return n . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Node ( ;
rank: 79
score: 98.8139139811198
patch: return type . KILL . KILL . KILL . KILL ;
rank: 79
score: 98.80674525669643
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 79
score: 98.44577026367188
patch: return this . KILL ;
rank: 80
score: 99.45299111643145
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 80
score: 99.34401292067308
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) )
rank: 80
score: 99.29798648231908
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 80
score: 99.10127397017045
patch: if ( Node CaMeL Util . KILL . starts CaMeL With ( n . get CaMeL String ( ) ) )
rank: 80
score: 99.02078247070312
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ;
rank: 80
score: 98.81200154622395
patch: return filter . KILL . KILL . KILL . KILL ;
rank: 80
score: 98.80464441636029
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this . get CaMeL Message ( ) ;
rank: 80
score: 98.44459533691406
patch: return KILL ; } return KILL ;
rank: 81
score: 99.452880859375
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 81
score: 99.34342710433468
patch: return Control CaMeL Flow CaMeL Graph . super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 81
score: 99.09928755326705
patch: return ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL . KILL . KILL ) ;
rank: 81
score: 99.0199862393466
patch: return n . get CaMeL Value ( ) . trim ( ) . to CaMeL Lower CaMeL Case ( ) ;
rank: 81
score: 98.80977783203124
patch: throw new Runtime CaMeL Exception ( 1 ) ;
rank: 81
score: 98.80454508463542
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ; ) ;
rank: 81
score: 98.44451904296875
patch: return KILL . KILL . KILL . ; }
rank: 82
score: 99.4523417154948
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) ) ) ;
rank: 82
score: 99.35722824622844
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) ) {
rank: 82
score: 99.34286295572916
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ; }
rank: 82
score: 99.09895463423295
patch: return node . get CaMeL Result ( ) . get CaMeL Result ( ) . get CaMeL Result ( ) ;
rank: 82
score: 99.01914284446023
patch: return Integer . value CaMeL Of ( n . get CaMeL String ( ) ) . int CaMeL Value ( ;
rank: 82
score: 98.80776145241477
patch: return return KILL . KILL . KILL . KILL ;
rank: 82
score: 98.80421447753906
patch: return return Boolean . value CaMeL Of ( ) . int CaMeL Value ( ;
rank: 82
score: 98.44117431640625
patch: return super . to CaMeL String ( ) ;
rank: 83
score: 99.34239612926136
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) )
rank: 83
score: 99.29626858618951
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n . get CaMeL Parent ( ) ) ;
rank: 83
score: 99.09881591796875
patch: throw new No CaMeL Such CaMeL Method CaMeL Error ( $STRING$ ) ;
rank: 83
score: 99.0178581686581
patch: return Integer . value CaMeL Of ( n ) . int CaMeL Value ( ) ;
rank: 83
score: 98.80609685724431
patch: return KILL . KILL . KILL . KILL . ;
rank: 83
score: 98.80298665364583
patch: return KILL . KILL . KILL . KILL . return KILL . KILL ;
rank: 83
score: 98.44107055664062
patch: return KILL . KILL . KILL [ KILL ;
rank: 84
score: 99.4428074048913
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , n ) ;
rank: 84
score: 99.35627547554348
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) ) ;
rank: 84
score: 99.34114583333333
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ; }
rank: 84
score: 99.29597742417279
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 84
score: 99.09432220458984
patch: return Integer . value CaMeL Of ( n . get CaMeL String ( ) ;
rank: 84
score: 99.0175448330966
patch: return parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 84
score: 98.80588785807292
patch: return parent . KILL . get CaMeL Node ( ) ;
rank: 84
score: 98.79671805245536
patch: throw new Illegal CaMeL State CaMeL Exception . Error ( $STRING$ ) ;
rank: 84
score: 98.44053344726562
patch: return KILL . KILL . KILL . ; _
rank: 85
score: 99.4503925030048
patch: return Node CaMeL Util . ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 85
score: 99.44167162024456
patch: return n . get CaMeL Parent ( ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 85
score: 99.09222412109375
patch: System . out . println ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 85
score: 99.01669150904605
patch: return n . get CaMeL Variable CaMeL Map ( ) . get CaMeL Variable CaMeL Map ( ;
rank: 85
score: 98.80284627278645
patch: return KILL . KILL . KILL ; } return true ;
rank: 85
score: 98.795751953125
patch: throw new Internal CaMeL Error ( $STRING$ ) ;
rank: 85
score: 98.43947143554688
patch: return list . KILL . KILL . KILL ;
rank: 86
score: 99.35540771484375
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ;
rank: 86
score: 99.01602172851562
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ;
rank: 86
score: 98.80220853365384
patch: return Boolean . KILL . KILL . KILL . KILL ; }
rank: 86
score: 98.79412841796875
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ) ;
rank: 86
score: 98.43928745814732
patch: return KILL . KILL ; ;
rank: 87
score: 99.449951171875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n ) ) ;
rank: 87
score: 99.35374620225694
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 87
score: 99.29427939967105
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ;
rank: 87
score: 99.09144810267857
patch: if ( Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ) , $STRING$ ;
rank: 87
score: 99.01552946671195
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . double CaMeL Value ( ) ;
rank: 87
score: 98.7996826171875
patch: return this . KILL . KILL . KILL ; }
rank: 87
score: 98.79317220052083
patch: return Boolean . value CaMeL Of ( ) . int CaMeL Value ( ;
rank: 87
score: 98.43607788085937
patch: return true . KILL . KILL . KILL ;
rank: 88
score: 99.35333984375
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 88
score: 99.339453125
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 88
score: 99.29287237870066
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent ) ) ;
rank: 88
score: 99.09075055803571
patch: throw new No CaMeL Such CaMeL Method CaMeL Error ( $STRING$ + n . get CaMeL String ( ) ;
rank: 88
score: 99.01443614130434
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ) . int CaMeL Value ( ) ) ;
rank: 88
score: 98.79698689778645
patch: return options . KILL . KILL . KILL . KILL ;
rank: 88
score: 98.78975423177083
patch: return KILL . KILL . KILL . KILL KILL . KILL . KILL ;
rank: 88
score: 98.43565673828125
patch: return KILL . KILL . KILL ; . KILL
rank: 89
score: 99.43904976222827
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node , variable ) ;
rank: 89
score: 99.29220420435855
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node ) ) ;
rank: 89
score: 99.0885342684659
patch: return Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) . read ;
rank: 89
score: 99.01400093410327
patch: return Double . value CaMeL Of ( n . get CaMeL Boolean ( ) ) . double CaMeL Value ( ) ;
rank: 89
score: 98.79622025923295
patch: else return KILL . KILL . KILL . KILL ;
rank: 89
score: 98.78875732421875
patch: return KILL . KILL . KILL . KILL . KILL = KILL . KILL ;
rank: 89
score: 98.43330213758681
patch: return KILL . KILL KILL . KILL ;
rank: 90
score: 99.44787066915761
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n , n . get CaMeL Parent ( ) ) ;
rank: 90
score: 99.43688594933712
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 90
score: 99.3529636548913
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n . get CaMeL String ( ) ) ;
rank: 90
score: 99.2919921875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 90
score: 99.08803982204861
patch: return Node CaMeL Util . KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 90
score: 99.01352761008523
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + n . get CaMeL Message ( ) ) ;
rank: 90
score: 98.7960917154948
patch: return KILL . KILL ; } return KILL . KILL ;
rank: 90
score: 98.78752136230469
patch: throw new Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception ( KILL ) ;
rank: 90
score: 98.43209228515624
patch: return Visitor . KILL . KILL . KILL ;
rank: 91
score: 99.4476254111842
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 91
score: 99.351953125
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n . get CaMeL Parent ( ) ) ;
rank: 91
score: 99.33666178385417
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) ) {
rank: 91
score: 99.29177934695512
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 91
score: 99.08773949032738
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL ) ;
rank: 91
score: 99.01241932744566
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ;
rank: 91
score: 98.79432169596355
patch: return this . KILL . get CaMeL Parent ( ) ;
rank: 91
score: 98.7860107421875
patch: System . out . println ( $STRING$ + KILL ) ;
rank: 91
score: 98.431005859375
patch: return KILL . KILL . KILL . RIGHT ;
rank: 92
score: 99.44709725215517
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( ) ) ;
rank: 92
score: 99.43583751860119
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( name ) ;
rank: 92
score: 99.29086785567434
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 92
score: 99.08769788240132
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ;
rank: 92
score: 99.0119961825284
patch: return n . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get ;
rank: 92
score: 98.79306265024039
patch: else return KILL . KILL . KILL . KILL ; } ;
rank: 92
score: 98.78479766845703
patch: return KILL . KILL . KILL . KILL . KILL . KILL return KILL ;
rank: 92
score: 98.42897338867188
patch: return KILL . KILL . KILL . KILL ,
rank: 93
score: 99.4462890625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n , n . get CaMeL Parent ( ) ) ;
rank: 93
score: 99.35146147629311
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . KILL ) ) {
rank: 93
score: 99.08251139322917
patch: return value CaMeL Of ( n . get CaMeL String ( ) ) ;
rank: 93
score: 99.01170247395834
patch: return variable . equals ( n . get CaMeL String ( ) ) ;
rank: 93
score: 98.78281947544643
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + . ) ;
rank: 93
score: 98.426904296875
patch: return KILL . KILL . KILL . KILL }
rank: 94
score: 99.44546110733695
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 94
score: 99.33378642314189
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 94
score: 99.29037710336539
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent ) ) ;
rank: 94
score: 99.0822521391369
patch: if ( Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ) ) ) {
rank: 94
score: 99.009765625
patch: return n . get CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent ;
rank: 94
score: 98.78155110677083
patch: return KILL . KILL . KILL . . KILL . KILL . KILL ;
rank: 94
score: 98.42627563476563
patch: return KILL . KILL . KILL ; ; }
rank: 95
score: 99.4454345703125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL String ( ) ) ) ;
rank: 95
score: 99.33377779447116
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) )
rank: 95
score: 99.28903610641892
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 95
score: 99.08221756784539
patch: return node . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ;
rank: 95
score: 99.00926672894022
patch: return Short . value CaMeL Of ( n . get CaMeL String ( ) ) . double CaMeL Value ( ) ;
rank: 95
score: 98.78131866455078
patch: return KILL . KILL . KILL . KILL . KILL . KILL . ; ;
rank: 95
score: 98.424755859375
patch: return node . KILL . KILL . KILL ;
rank: 96
score: 99.443876953125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( child CaMeL Value , variable ) ;
rank: 96
score: 99.3496805826823
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) {
rank: 96
score: 99.3331768329327
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) ) ;
rank: 96
score: 99.08153578814338
patch: return KILL . get CaMeL Value ( n . get CaMeL String ( ) ) ;
rank: 96
score: 99.00855601917614
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ) ) . int CaMeL Value ( ;
rank: 96
score: 98.78915405273438
patch: return site . KILL . KILL . KILL . KILL ;
rank: 96
score: 98.78091634114584
patch: return KILL . KILL KILL . KILL . KILL . KILL . KILL ;
rank: 96
score: 98.42449188232422
patch: return scope . KILL . KILL ;
rank: 97
score: 99.44371259973404
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 97
score: 99.43422037760416
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 97
score: 99.33200970818015
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n , n . get CaMeL Parent ( ) ) ;
rank: 97
score: 99.08107688210227
patch: if ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL . KILL . KILL ) {
rank: 97
score: 99.00833262567934
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) . int CaMeL Value ( ) ) ;
rank: 97
score: 98.78870646158855
patch: return Boolean . class . get CaMeL Instance ( ) ;
rank: 97
score: 98.7789306640625
patch: throw new Illegal CaMeL Argument CaMeL Exception . Exception ( $STRING$ ) ;
rank: 97
score: 98.42387084960937
patch: return super . get CaMeL String ( ) ;
rank: 98
score: 99.43371212121212
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ;
rank: 98
score: 99.3494644165039
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 98
score: 99.33199974798387
patch: return Control CaMeL Flow CaMeL Graph . this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 98
score: 99.28763580322266
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 98
score: 99.07806687127976
patch: if ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 98
score: 99.00825832201087
patch: return n . get CaMeL Qualified CaMeL Name ( ) . equals ( n . get CaMeL Qualified CaMeL Name ( ;
rank: 98
score: 98.7863300030048
patch: return super . KILL . KILL . KILL . KILL ; }
rank: 98
score: 98.7786865234375
patch: return KILL . KILL . KILL . KILL . KILL ; return KILL . KILL ;
rank: 98
score: 98.42243109809027
patch: return KILL . return KILL . KILL ;
rank: 99
score: 99.44236061789773
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) ) ;
rank: 99
score: 99.43370472301136
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n ) ;
rank: 99
score: 99.0778564453125
patch: if ( Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ) , ;
rank: 99
score: 98.78612263997395
patch: return KILL . KILL . KILL . KILL != KILL ;
rank: 99
score: 98.77564194623162
patch: throw new Illegal CaMeL State CaMeL Exception ( this . get CaMeL Message ( ) ;
rank: 99
score: 98.42228190104167
patch: if return KILL . KILL . KILL ;
rank: 100
score: 99.43360484730114
patch: state = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 100
score: 99.34890407986111
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 100
score: 99.33077870244566
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) )
rank: 100
score: 99.00691024116848
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ) . float CaMeL Value ( ) ;
rank: 100
score: 98.77516276041666
patch: return KILL . KILL . KILL . KILL . KILL . KILL ; ;
rank: 100
score: 98.41845703125
patch: return KILL . KILL . ; _
rank: 101
score: 99.34811197916666
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n ) ) {
rank: 101
score: 99.28670027449324
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 101
score: 99.075927734375
patch: return node . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get ;
rank: 101
score: 99.00668733016305
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ) . int CaMeL Value ( ) ;
rank: 101
score: 98.78529710036058
patch: return this . KILL . KILL . KILL . KILL . ;
rank: 101
score: 98.7745361328125
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 101
score: 98.4167236328125
patch: return KILL . KILL . KILL . VOID ;
rank: 102
score: 99.44168090820312
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL First CaMeL Child ( n ) ) ;
rank: 102
score: 99.43098667689732
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 102
score: 99.34723578559027
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( child
rank: 102
score: 99.32966561153017
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) , variable ) ;
rank: 102
score: 99.07570578835227
patch: if ( Node CaMeL Util . KILL . KILL . equals ( n . get CaMeL String ( ) ) ;
rank: 102
score: 99.00575474330357
patch: return n . get CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Node ( ;
rank: 102
score: 98.78450520833333
patch: return Integer . KILL . get CaMeL Instance ( ) ;
rank: 102
score: 98.77214050292969
patch: result = KILL . KILL . KILL . KILL . KILL . KILL . ;
rank: 102
score: 98.41639055524554
patch: return KILL ; return $STRING$ ;
rank: 103
score: 99.34705607096355
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 103
score: 99.28642442491319
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL
rank: 103
score: 99.07478162977431
patch: return ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL ) ;
rank: 103
score: 99.00571511008523
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) . double CaMeL Value ( ) ;
rank: 103
score: 98.78225708007812
patch: return scope . KILL . KILL . KILL . KILL ;
rank: 103
score: 98.76971794577206
patch: throw new Runtime CaMeL Exception ( KILL . KILL . KILL . KILL . KILL ;
rank: 103
score: 98.41626586914063
patch: return KILL . KILL . KILL | KILL ;
rank: 104
score: 99.4304908014113
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 104
score: 99.34672694052419
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 104
score: 99.32580172631049
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . n , n . get CaMeL Parent ( ) ) ;
rank: 104
score: 99.28623453776042
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 104
score: 99.0741195678711
patch: if ( Node CaMeL Util . KILL . equals CaMeL Ignore CaMeL Case ( ;
rank: 104
score: 99.00563742897727
patch: return node . get CaMeL Parent ( ) . get CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 104
score: 98.78102620442708
patch: return this . KILL . KILL . KILL ; } ;
rank: 104
score: 98.41109619140624
patch: return KILL . KILL . KILL . NO ;
rank: 105
score: 99.43034811580883
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 105
score: 99.32539585658482
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) )
rank: 105
score: 99.07363409745066
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL ) ;
rank: 105
score: 99.00558810763889
patch: return Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ) ;
rank: 105
score: 98.78048706054688
patch: return ) . KILL . KILL . KILL . KILL ;
rank: 105
score: 98.76834810697116
patch: return KILL . KILL . return KILL . KILL . KILL ;
rank: 105
score: 98.4106201171875
patch: return KILL . ; return KILL . KILL ;
rank: 106
score: 99.42784598214286
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 106
score: 99.342509765625
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ) {
rank: 106
score: 99.07362670898438
patch: if ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL . KILL ) {
rank: 106
score: 99.00529479980469
patch: if ( n . get CaMeL Type ( ) == Node CaMeL Util . ;
rank: 106
score: 98.78005981445312
patch: return KILL . KILL . KILL . KILL . ; ;
rank: 106
score: 98.76806640625
patch: return KILL . KILL . KILL . KILL . KILL . KILL . REGEXP ;
rank: 106
score: 98.4104248046875
patch: return return ? KILL . KILL . KILL ;
rank: 107
score: 99.43866644965277
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ;
rank: 107
score: 99.32357177734374
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 107
score: 99.28460693359375
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 107
score: 99.07184392755681
patch: if ( Node CaMeL Util . KILL . is CaMeL Empty ( n . get CaMeL String ( ) ) )
rank: 107
score: 99.00423431396484
patch: return n . get CaMeL Node ( ) . get CaMeL Value ( ) ;
rank: 107
score: 98.77890014648438
patch: return children . KILL . KILL . KILL . KILL ;
rank: 107
score: 98.7674560546875
patch: System . err . println ( $STRING$ + KILL ) ;
rank: 107
score: 98.40950927734374
patch: / * return KILL . KILL . KILL ;
rank: 108
score: 99.34068642893145
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 108
score: 99.32283020019531
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 108
score: 99.07121276855469
patch: return Node CaMeL Util . KILL . KILL . KILL . KILL . KILL ;
rank: 108
score: 99.00408380681819
patch: return n . get CaMeL Node ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 108
score: 98.77794471153847
patch: if return KILL . KILL . KILL . KILL . KILL ;
rank: 108
score: 98.76620483398438
patch: throw new Runtime CaMeL Exception ( this . get CaMeL Runtime ( ) ) ;
rank: 108
score: 98.40902099609374
patch: return Generator . KILL . KILL . KILL ;
rank: 109
score: 99.4383773803711
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Node ( n ) ) ;
rank: 109
score: 99.34016927083333
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL String ( n ) ) ;
rank: 109
score: 99.07119605654762
patch: return node . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . ;
rank: 109
score: 99.00401239809783
patch: return Long . value CaMeL Of ( n . get CaMeL Value ( ) ) . long CaMeL Value ( ) ;
rank: 109
score: 98.77550330528847
patch: return KILL . . KILL . KILL . KILL . KILL ;
rank: 109
score: 98.4081787109375
patch: return KILL . KILL . KILL . this ;
rank: 110
score: 99.43781389508929
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 110
score: 99.32269694010417
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL String ( ) ) ;
rank: 110
score: 99.28411102294922
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 110
score: 99.07060241699219
patch: if ( Node CaMeL Util . is CaMeL Assignable CaMeL From ( n ) )
rank: 110
score: 99.00391303168402
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 110
score: 98.77549235026042
patch: return this . KILL . KILL . KILL == KILL ;
rank: 110
score: 98.76202751608456
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ? KILL . to CaMeL String ;
rank: 110
score: 98.40810818142361
patch: return Node CaMeL Util . KILL KILL ;
rank: 111
score: 99.33811732700893
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 111
score: 99.28376026642628
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 111
score: 99.0698013305664
patch: return node . get CaMeL Value ( ) . to CaMeL String ( ) ;
rank: 111
score: 99.0037841796875
patch: return Symbol . KILL . equals ( n . get CaMeL String ( ) ) ;
rank: 111
score: 98.77463785807292
patch: return KILL . KILL KILL . KILL . KILL ; }
rank: 111
score: 98.76155598958333
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ? $STRING$ : $STRING$ ;
rank: 111
score: 98.40809936523438
patch: return KILL . KILL . KILL . NULL ;
rank: 112
score: 99.42593204273896
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 112
score: 99.33800159801136
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 112
score: 99.06880696614583
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + n . get CaMeL String ( ;
rank: 112
score: 99.00350288722827
patch: return Long . value CaMeL Of ( n . get CaMeL Value ( ) ) . int CaMeL Value ( ) ;
rank: 112
score: 98.77379353841145
patch: return KILL . KILL . KILL . contains ( ) ;
rank: 112
score: 98.7608154296875
patch: return KILL . KILL . KILL . KILL . KILL KILL . KILL ;
rank: 112
score: 98.406591796875
patch: return KILL . KILL . KILL ; return ;
rank: 113
score: 99.43560384114583
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Parent ( n ) ) ;
rank: 113
score: 99.33791678292411
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL String ( ) ) ;
rank: 113
score: 99.32180918817934
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) , variable ) ;
rank: 113
score: 99.28291829427083
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 113
score: 99.06708318536931
patch: throw new Class CaMeL Not CaMeL Found CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 113
score: 99.0031982421875
patch: return n . get CaMeL Name ( ) . equals ( n . get CaMeL String ( ) ;
rank: 113
score: 98.7737567608173
patch: return ! KILL . KILL . KILL . KILL . KILL ;
rank: 113
score: 98.75994873046875
patch: throw new Illegal CaMeL State CaMeL Exception ( ; ) ;
rank: 113
score: 98.404736328125
patch: return Long . KILL . KILL . KILL ;
rank: 114
score: 99.43526905980603
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 114
score: 99.33744172127017
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) ) ) {
rank: 114
score: 99.28234493371212
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 114
score: 99.06686401367188
patch: if ( n . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) )
rank: 114
score: 99.00272800611413
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; }
rank: 114
score: 98.7734883626302
patch: throw new Illegal CaMeL State CaMeL Exception ( 1 ) ;
rank: 114
score: 98.7598876953125
patch: throw new Runtime CaMeL Exception . Runtime CaMeL Exception ( $STRING$ ;
rank: 114
score: 98.4035135904948
patch: return KILL . FALSE ;
rank: 115
score: 99.43468128551136
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ; }
rank: 115
score: 99.33722478693181
patch: return ! Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 115
score: 99.31947544642857
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) )
rank: 115
score: 99.00177873883929
patch: return n . get CaMeL Result ( ) . get CaMeL Value ( ) . get CaMeL Value ( ;
rank: 115
score: 98.77278645833333
patch: return list . KILL . KILL . KILL . KILL ;
rank: 115
score: 98.75852966308594
patch: return KILL . KILL . KILL . KILL . KILL . . KILL . ;
rank: 115
score: 98.403369140625
patch: return ANNOTATION . KILL . KILL . KILL ;
rank: 116
score: 99.43414096174568
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n , variable ) ;
rank: 116
score: 99.42354699337122
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 116
score: 99.33693333675987
patch: throw super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 116
score: 99.31930881076389
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First ( ) ) ;
rank: 116
score: 99.28165108816964
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 116
score: 99.06588134765624
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . ; }
rank: 116
score: 99.00132057883523
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent ;
rank: 116
score: 98.77199143629808
patch: return 0 . KILL . KILL . KILL . KILL ; }
rank: 116
score: 98.75823974609375
patch: return super . KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 116
score: 98.40145874023438
patch: return KILL . KILL . KILL . class ;
rank: 117
score: 99.43311157226563
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) , variable ) ;
rank: 117
score: 99.33660016741071
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL , n . get CaMeL Parent ( ) ) ;
rank: 117
score: 99.31774450231481
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill . return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 117
score: 99.28152804904514
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) ;
rank: 117
score: 99.0655850497159
patch: if ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL . KILL ) return null ;
rank: 117
score: 99.00042403371711
patch: return n . get CaMeL String ( ) . equals ( n . get CaMeL String ( ;
rank: 117
score: 98.77095853365384
patch: return null . KILL KILL . KILL . KILL . KILL ;
rank: 117
score: 98.7570049579327
patch: throw new Illegal CaMeL Argument CaMeL Exception . Error ( $STRING$ ;
rank: 117
score: 98.40142822265625
patch: return KILL . KILL . KILL ++ ;
rank: 118
score: 99.4234286221591
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n . get CaMeL Parent ( ) ) ;
rank: 118
score: 99.06550736860795
patch: return Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) . ; ;
rank: 118
score: 99.00039190995066
patch: return n . get CaMeL Value ( ) . equals ( n . get CaMeL String ( ;
rank: 118
score: 98.7568130493164
patch: { return KILL . KILL . KILL . KILL . KILL . KILL . ;
rank: 118
score: 98.40118408203125
patch: return new ( KILL . KILL . KILL ;
rank: 119
score: 99.4229403409091
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( , variable ) ;
rank: 119
score: 99.3358487215909
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) ) ) {
rank: 119
score: 99.31600791529605
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) ) ;
rank: 119
score: 99.28073354867789
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . ) ;
rank: 119
score: 98.99971340013587
patch: return Integer . value CaMeL Of ( n . get CaMeL Node ( ) ) . int CaMeL Value ( ) ;
rank: 119
score: 98.77090454101562
patch: return this . KILL . get CaMeL Node ( ) ;
rank: 119
score: 98.75641632080078
patch: return KILL . KILL . KILL . KILL . KILL . KILL = KILL ;
rank: 119
score: 98.39598999023437
patch: throw KILL . KILL . KILL . FALSE ;
rank: 120
score: 99.4220673532197
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) ) ;
rank: 120
score: 99.33490513392857
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL
rank: 120
score: 99.3159812644676
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . n , n . get CaMeL Parent ( ) ) ;
rank: 120
score: 99.27877604166666
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 120
score: 99.06395874023437
patch: if ( Node CaMeL Util . KILL . contains ( n . get CaMeL String ( ) ) )
rank: 120
score: 98.99949137369792
patch: return n . get CaMeL Function CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 120
score: 98.77064866286058
patch: return KILL . KILL . KILL . KILL ; } else ;
rank: 120
score: 98.75640869140625
patch: throw new Illegal CaMeL State CaMeL Exception . Exception ( $STRING$ ) ;
rank: 120
score: 98.39366319444444
patch: return KILL . KILL . EMPTY KILL ;
rank: 121
score: 99.4319091796875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( child CaMeL Value ) ) ;
rank: 121
score: 99.42181606950432
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , n . get CaMeL String ( ) ) ;
rank: 121
score: 99.3159412202381
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ;
rank: 121
score: 99.06324351917614
patch: if ( Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ) , $STRING$ ) )
rank: 121
score: 98.7699483235677
patch: return KILL . KILL . KILL ; } return false ;
rank: 121
score: 98.754638671875
patch: return KILL . KILL . KILL . KILL = KILL . KILL ;
rank: 121
score: 98.39337158203125
patch: return KILL . KILL . KILL ; break ;
rank: 122
score: 99.431826171875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . KILL ) ;
rank: 122
score: 99.33189325747283
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Node ( ) ) ;
rank: 122
score: 99.31593480603448
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL First ( ) ) ;
rank: 122
score: 99.27816951976104
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 122
score: 98.99765159970238
patch: return parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ;
rank: 122
score: 98.76474233774039
patch: return this . KILL KILL . KILL . KILL . KILL ;
rank: 122
score: 98.75445197610294
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL = ;
rank: 122
score: 98.39280482700893
patch: return KILL . . KILL ;
rank: 123
score: 99.43158365885417
patch: return Node CaMeL Util . is CaMeL Lhs ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 123
score: 99.331611328125
patch: return null . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 123
score: 99.31585061961206
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) {
rank: 123
score: 99.277099609375
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) ;
rank: 123
score: 99.06231398809524
patch: if ( Node CaMeL Util . is CaMeL Na CaMeL N ( n . get CaMeL String ( ) ;
rank: 123
score: 98.99739213423295
patch: return n . get CaMeL Result ( ) . get CaMeL Value ( ) . boolean CaMeL Value ( ) ;
rank: 123
score: 98.76431978665866
patch: return KILL KILL . KILL . KILL . KILL ; } ;
rank: 123
score: 98.75295840992646
patch: System . out . println ( $STRING$ + node . get CaMeL String ( ) ;
rank: 123
score: 98.39016723632812
patch: return . KILL . KILL . KILL . ;
rank: 124
score: 99.43126627604167
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( variable ) ) ;
rank: 124
score: 99.42109026227679
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 124
score: 99.330322265625
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL String ( ) ) ) {
rank: 124
score: 99.27701822916667
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ;
rank: 124
score: 99.06208881578948
patch: if ( n . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ;
rank: 124
score: 98.99730335582386
patch: return node . get CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 124
score: 98.76205444335938
patch: return ref . KILL . KILL . KILL . KILL ;
rank: 124
score: 98.75290151742789
patch: return KILL . KILL . KILL . return KILL . KILL ;
rank: 124
score: 98.39011840820312
patch: return super . get CaMeL Parent ( ; .
rank: 125
score: 99.43024836359797
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 125
score: 99.41874556107955
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) , variable ) ;
rank: 125
score: 99.27690044202302
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 125
score: 99.0616683959961
patch: if ( Node CaMeL Util . is CaMeL Qualified CaMeL Name ( n ) )
rank: 125
score: 98.99730335582386
patch: return n . get CaMeL Result ( ) . get CaMeL Result ( ) . get CaMeL Result ( ) ;
rank: 125
score: 98.76065767728366
patch: return KILL . KILL . KILL . KILL ; return true ;
rank: 125
score: 98.74959019252232
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + return ) ;
rank: 125
score: 98.389892578125
patch: return KILL . KILL . KILL ; ; ;
rank: 126
score: 99.4294969512195
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ) ;
rank: 126
score: 99.32971801757813
patch: return ! Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 126
score: 99.27674624794408
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ) ;
rank: 126
score: 99.06151733398437
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + n . get CaMeL String ( ;
rank: 126
score: 98.99460671164773
patch: return n . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . ; }
rank: 126
score: 98.7598368326823
patch: return $STRING$ . KILL . KILL . KILL . KILL ;
rank: 126
score: 98.74759928385417
patch: throw new Runtime CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 126
score: 98.38953857421875
patch: return KILL . KILL + KILL . KILL ;
rank: 127
score: 99.32970770474138
patch: if ( Control CaMeL Flow CaMeL Graph . Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) {
rank: 127
score: 99.27630936472039
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) ;
rank: 127
score: 99.06108012952302
patch: return KILL . is CaMeL Assignable CaMeL From ( n . get CaMeL String ( ) ) ;
rank: 127
score: 98.9944484544837
patch: return parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ;
rank: 127
score: 98.75838216145833
patch: return get CaMeL Scope ( ) . KILL . KILL ;
rank: 127
score: 98.74745396205357
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 ) ;
rank: 127
score: 98.38871459960937
patch: return KILL . KILL . KILL . BOTH ;
rank: 128
score: 99.4175335427989
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node , variable ) ;
rank: 128
score: 99.31401535560344
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 128
score: 99.27558336759868
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 128
score: 99.0608269186581
patch: if ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL )
rank: 128
score: 98.99374871504934
patch: return n . get CaMeL Value ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ;
rank: 128
score: 98.74643841911765
patch: throw new Runtime CaMeL Exception ( $STRING$ + Integer . to CaMeL String return ) ;
rank: 128
score: 98.3879150390625
patch: return 0 . KILL . KILL . KILL ;
rank: 129
score: 99.32854352678571
patch: return ! Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 129
score: 98.99364172894022
patch: return n . get CaMeL Function CaMeL Value ( ) . get CaMeL Value ( ) . get CaMeL Value ( ;
rank: 129
score: 98.75670369466145
patch: return super . KILL KILL KILL . KILL . KILL ;
rank: 129
score: 98.7459716796875
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ;
rank: 129
score: 98.38716430664063
patch: return refs . KILL . KILL . KILL ;
rank: 130
score: 99.42789020944149
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( n ) ) ) ;
rank: 130
score: 99.328427734375
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 130
score: 99.31374104817708
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ; }
rank: 130
score: 98.7548828125
patch: return false ; return KILL . KILL . KILL . KILL ;
rank: 130
score: 98.7456298828125
patch: System . err . println ( KILL . to CaMeL String ( ) ;
rank: 130
score: 98.38607788085938
patch: throw KILL . KILL . KILL ;
rank: 131
score: 99.3282470703125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 131
score: 99.3136698404948
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , variable ) ;
rank: 131
score: 99.05914861505681
patch: if ( Node CaMeL Util . is CaMeL Simple CaMeL Name ( n . get CaMeL String ( ) ) )
rank: 131
score: 98.99295043945312
patch: return n . get CaMeL Parent ( ) . get CaMeL Node ( ) ;
rank: 131
score: 98.75365193684895
patch: return KILL . KILL . KILL ; } return null ;
rank: 131
score: 98.74449920654297
patch: return return KILL . KILL . KILL . KILL . KILL . KILL . ;
rank: 132
score: 99.32686812789352
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 132
score: 99.2740542763158
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) ;
rank: 132
score: 99.05912475585937
patch: if ( Node CaMeL Util . is CaMeL Digit ( n . get CaMeL String ( ) ) )
rank: 132
score: 98.9926398782169
patch: return n . get CaMeL Result ( ) . get CaMeL Value ( ) ; }
rank: 132
score: 98.75226299579327
patch: return false . KILL . KILL . KILL . KILL ; }
rank: 132
score: 98.74418370863971
patch: return KILL . KILL . KILL . KILL . KILL . KILL ; return KILL ;
rank: 132
score: 98.38422393798828
patch: return Math . KILL . KILL ;
rank: 133
score: 99.42672729492188
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 133
score: 99.326279296875
patch: if ( this . Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) {
rank: 133
score: 99.27385510896382
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) , variable ) ;
rank: 133
score: 99.05708143446181
patch: if ( Node CaMeL Util . KILL . equals ( ; Node CaMeL Util . KILL ;
rank: 133
score: 98.98948974609375
patch: return parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ;
rank: 133
score: 98.75162447415866
patch: return parent . KILL . KILL . KILL . KILL ; ;
rank: 133
score: 98.74404672475961
patch: result = KILL . KILL . KILL . KILL . KILL ;
rank: 133
score: 98.36885833740234
patch: return Variable CaMeL Visibility . KILL ;
rank: 134
score: 99.42645554315476
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node , variable ) ;
rank: 134
score: 99.32616373697917
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) )
rank: 134
score: 99.31327550551471
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( parent , variable ) ;
rank: 134
score: 99.27381243024554
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 134
score: 99.05685763888889
patch: if ( Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ;
rank: 134
score: 98.98796280570652
patch: return n . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( n . get CaMeL String ( ;
rank: 134
score: 98.7506612141927
patch: return false . KILL . KILL . KILL . KILL ;
rank: 134
score: 98.74398099459134
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ? $STRING$ ;
rank: 134
score: 98.36250523158482
patch: return return Integer . KILL ;
rank: 135
score: 99.42616338315217
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( ) ) ) ;
rank: 135
score: 99.4137451171875
patch: return Node CaMeL Util . is CaMeL Lhs ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 135
score: 99.32603130918561
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL
rank: 135
score: 99.3128662109375
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) )
rank: 135
score: 99.27354307432432
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) , variable ) ;
rank: 135
score: 99.05631296258224
patch: if ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 135
score: 98.98751068115234
patch: return n . get CaMeL String CaMeL Value ( ) . trim ( ) ;
rank: 135
score: 98.75017841045673
patch: return KILL . KILL . KILL . KILL ; } break ;
rank: 135
score: 98.74297223772321
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + 1 ) ;
rank: 135
score: 98.36103166852679
patch: return KILL . KILL KILL ;
rank: 136
score: 99.32528981854838
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ) ;
rank: 136
score: 99.27333392518939
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . KILL . to CaMeL String ( ) ) ;
rank: 136
score: 99.05413208007812
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . KILL ;
rank: 136
score: 98.98750232514881
patch: return n . get CaMeL Node ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ;
rank: 136
score: 98.74930826822917
patch: return refs . KILL . KILL . KILL . KILL ;
rank: 136
score: 98.74201516544117
patch: System . out . println ( $STRING$ + KILL . to CaMeL String ( ) ;
rank: 136
score: 98.3581314086914
patch: if ; return KILL . KILL ;
rank: 137
score: 99.42537064985795
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . variable ) ) ;
rank: 137
score: 99.3124291204637
patch: return this . Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 137
score: 99.2720588235294
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 137
score: 99.05408824573864
patch: return Boolean . value CaMeL Of ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL ;
rank: 137
score: 98.74867757161458
patch: return get CaMeL State ( ) . KILL . KILL ;
rank: 137
score: 98.74169921875
patch: return KILL . KILL . KILL . KILL ; return KILL . KILL ;
rank: 137
score: 98.3556900024414
patch: return ; .
rank: 138
score: 99.42535955255681
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) , variable ) ;
rank: 138
score: 99.31218804253473
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ; }
rank: 138
score: 99.27115360383064
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 138
score: 99.05387609145221
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ;
rank: 138
score: 98.98549107142857
patch: return node . get CaMeL Parent ( ) . get CaMeL Node ( ) . get CaMeL Node ( ;
rank: 138
score: 98.74724872295673
patch: return return KILL . KILL . KILL . KILL ; } ;
rank: 138
score: 98.74048868815105
patch: throw new Illegal CaMeL Argument CaMeL Exception ( null ) ;
rank: 138
score: 98.35552106584821
patch: return KILL . KILL . ;
rank: 139
score: 99.41233132102273
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 139
score: 99.31203264508929
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ) ;
rank: 139
score: 99.27057439630681
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 139
score: 99.05321103050595
patch: throw new Class CaMeL Not CaMeL Found CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ;
rank: 139
score: 98.9849853515625
patch: return Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ) ) ;
rank: 139
score: 98.74497477213542
patch: return 1 . KILL . KILL . KILL . KILL ;
rank: 139
score: 98.73976135253906
patch: return KILL . KILL . KILL . KILL . KILL . KILL . return ;
rank: 139
score: 98.35427517361111
patch: return KILL . KILL . KILL ; KILL
rank: 140
score: 99.42474365234375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL String ( n ) ) ;
rank: 140
score: 99.3237109375
patch: return this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL String ( ) ) ;
rank: 140
score: 99.3100944967831
patch: return Node CaMeL Util . ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 140
score: 99.27029418945312
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) ;
rank: 140
score: 99.05320231119792
patch: if ( Node CaMeL Util . KILL . equals CaMeL Ignore CaMeL Case ( n ) )
rank: 140
score: 98.98478560014205
patch: return n . get CaMeL Variable CaMeL Map ( ) . get CaMeL Variable CaMeL Map ( ) . get ;
rank: 140
score: 98.74491373697917
patch: throw new Runtime CaMeL Exception ( Boolean . class ) ;
rank: 140
score: 98.73926544189453
patch: throw new Runtime CaMeL Exception ( $STRING$ + node . to CaMeL String ( ;
rank: 140
score: 98.35188123914931
patch: return * KILL . KILL . KILL ;
rank: 141
score: 99.32361260775862
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL , variable ) ;
rank: 141
score: 99.30955153245192
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 141
score: 99.27027652138158
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ) ;
rank: 141
score: 99.053125
patch: return KILL . equals ( n . get CaMeL String ( ) ) ;
rank: 141
score: 98.98445991847827
patch: return n . get CaMeL Result ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ; }
rank: 141
score: 98.7444559733073
patch: throw new Illegal CaMeL Argument CaMeL Exception ( 1 ) ;
rank: 141
score: 98.73809814453125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ? ;
rank: 141
score: 98.35128445095486
patch: return KILL . KILL . KILL ) ;
rank: 142
score: 99.40901131465517
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n . get CaMeL String ( ) ) ;
rank: 142
score: 99.32328657670455
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n . get CaMeL Parent ( ) ) ;
rank: 142
score: 99.30953414351852
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n , variable ) ;
rank: 142
score: 99.2699694511218
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 142
score: 99.05174037388393
patch: if ( Node CaMeL Util . KILL . equals ( n ) )
rank: 142
score: 98.98404269748264
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ) ) . ;
rank: 142
score: 98.74216871995192
patch: return KILL . KILL . KILL . KILL . . KILL ;
rank: 142
score: 98.7379901592548
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name ;
rank: 142
score: 98.35100640190973
patch: return KILL . KILL . KILL ( ;
rank: 143
score: 99.42417464717742
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 143
score: 99.3095070167824
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . n , variable ) ;
rank: 143
score: 99.05106977982955
patch: if ( Node CaMeL Util . KILL . starts CaMeL With ( n . get CaMeL String ( ; ) )
rank: 143
score: 98.98393110795455
patch: return n . get CaMeL Node ( ) . get CaMeL Value ( ) . to CaMeL String ( ) ;
rank: 143
score: 98.7418212890625
patch: return Integer . KILL . KILL . KILL . KILL ;
rank: 143
score: 98.73777465820312
patch: throw new Runtime CaMeL Exception ( $STRING$ + ;
rank: 143
score: 98.34954155815973
patch: return KILL . KILL . KILL . EMPTY
rank: 144
score: 99.42402954101563
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL First CaMeL Child ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 144
score: 99.3216781616211
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) ;
rank: 144
score: 99.30944106158088
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node , variable ) ;
rank: 144
score: 99.2696533203125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ) ;
rank: 144
score: 99.04957164417614
patch: if ( Node CaMeL Util . is CaMeL Qualified CaMeL Name ( n . get CaMeL String ( ; ) )
rank: 144
score: 98.98342895507812
patch: return n . get CaMeL Node ( ) . get CaMeL Parent ( ) . get CaMeL Parent ;
rank: 144
score: 98.74171956380208
patch: return KILL KILL . KILL . KILL . KILL ; }
rank: 144
score: 98.73464965820312
patch: throw new Runtime CaMeL Exception ( $STRING$ + KILL ) ;
rank: 144
score: 98.34910074869792
patch: return ; = KILL ;
rank: 145
score: 99.42355248235887
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Node ( ) ) ;
rank: 145
score: 99.40640751008064
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill , n ) ;
rank: 145
score: 99.26925223214286
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 145
score: 99.04885382401316
patch: return Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( )
rank: 145
score: 98.98332413383152
patch: return Character . to CaMeL Upper CaMeL Case ( n . get CaMeL String ( ) ) . trim ( ) ;
rank: 145
score: 98.740478515625
patch: return KILL . KILL . KILL . KILL . KILL ; else
rank: 145
score: 98.73445129394531
patch: return KILL . KILL . KILL . KILL . KILL . KILL KILL . ;
rank: 145
score: 98.3484878540039
patch: return Variable CaMeL Map . KILL ;
rank: 146
score: 99.423291015625
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) ) ;
rank: 146
score: 99.32119605654762
patch: if ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) {
rank: 146
score: 99.26894996279762
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ref ) ;
rank: 146
score: 99.04787310431985
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ;
rank: 146
score: 98.98311614990234
patch: return n . get CaMeL Parent ( ) . get CaMeL Value ( ) ;
rank: 146
score: 98.74010213216145
patch: return KILL . KILL . KILL ; } return KILL ;
rank: 146
score: 98.7335674579327
patch: throw new Illegal CaMeL State CaMeL Exception . Error ( $STRING$ ;
rank: 146
score: 98.34486389160156
patch: return KILL . KILL + KILL ;
rank: 147
score: 99.42324683779762
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL
rank: 147
score: 99.30859375
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , n . get CaMeL Parent ( ) ) ;
rank: 147
score: 99.26847116570724
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ref ) ) ;
rank: 147
score: 99.04786592371323
patch: if ( Node CaMeL Util . KILL . equals ( n . get CaMeL String ;
rank: 147
score: 98.98290337456598
patch: return n . get CaMeL Value ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ;
rank: 147
score: 98.7377178485577
patch: return null ; return KILL . KILL . KILL . KILL ;
rank: 147
score: 98.73323822021484
patch: throw new Runtime CaMeL Exception ( this . get CaMeL Message ( ) ) ;
rank: 147
score: 98.34227159288194
patch: return KILL . KILL . KILL ; else
rank: 148
score: 99.42304992675781
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Cfg ( n ) ) ;
rank: 148
score: 99.40568403764205
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 148
score: 99.319287109375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL Parent ( n ) ) ;
rank: 148
score: 99.26817198057432
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) ;
rank: 148
score: 99.04726340553977
patch: if ( Node CaMeL Util . KILL . starts CaMeL With ( n . get CaMeL String ( ) ) ;
rank: 148
score: 98.98277216372283
patch: return n . get CaMeL Node ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ;
rank: 148
score: 98.7372295673077
patch: return this . KILL . KILL . KILL ; } else {
rank: 148
score: 98.73297526041667
patch: return KILL . KILL . KILL . KILL . KILL . return KILL ;
rank: 148
score: 98.33932931082589
patch: return return KILL . KILL ;
rank: 149
score: 99.4230205829327
patch: return Node CaMeL Util . ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 149
score: 99.30728585379464
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ; }
rank: 149
score: 99.267978515625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n ) ;
rank: 149
score: 99.04496495863971
patch: System . out . println ( $STRING$ + n . get CaMeL String ( ) ;
rank: 149
score: 98.98186700994319
patch: return parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent ;
rank: 149
score: 98.73651123046875
patch: return vars . KILL . KILL . KILL . KILL ;
rank: 149
score: 98.73223876953125
patch: System . out . println ( $STRING$ + Integer . MAX _ VALUE ) ;
rank: 149
score: 98.33729771205357
patch: return ; . return KILL ;
rank: 150
score: 99.42293701171874
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 150
score: 99.40498621323529
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 150
score: 99.31831212197581
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL Graph ( ) ) ;
rank: 150
score: 99.307275390625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) ) ; }
rank: 150
score: 99.04484049479167
patch: if ( n . get CaMeL String ( ) . starts CaMeL With ( $STRING$ ) )
rank: 150
score: 98.98152465820313
patch: return n . get CaMeL Value ( ) . get CaMeL Value ( ) . get CaMeL Value ;
rank: 150
score: 98.73463792067308
patch: return true ; return KILL . KILL . KILL . KILL ;
rank: 150
score: 98.731884765625
patch: return KILL . KILL . KILL . KILL . KILL . . KILL ;
rank: 150
score: 98.33572387695312
patch: return KILL . KILL . . ;
rank: 151
score: 99.42253069196428
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . KILL , n . get CaMeL Parent ( ) ) ;
rank: 151
score: 99.31769430226294
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL
rank: 151
score: 99.30724748883928
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 151
score: 99.04481811523438
patch: if ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL String ( ) ) ;
rank: 151
score: 98.7345858487216
patch: throw new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 151
score: 98.73133087158203
patch: return KILL . KILL . KILL . KILL . KILL . KILL . ; }
rank: 151
score: 98.33255343967014
patch: return super . KILL KILL . KILL ;
rank: 152
score: 99.42116088867188
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 152
score: 99.31706157483552
patch: return null . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 152
score: 98.98031761532738
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) . double CaMeL Value ( ;
rank: 152
score: 98.73403930664062
patch: return get CaMeL Runtime ( ) . KILL . KILL ;
rank: 152
score: 98.73099772135417
patch: throw new Internal CaMeL Error ( $STRING$ ;
rank: 152
score: 98.33118353949652
patch: return System . . . . KILL ;
rank: 153
score: 99.42063854586694
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Cfg ( ) ) ;
rank: 153
score: 99.40432477678571
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . n . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 153
score: 99.31629527698864
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) )
rank: 153
score: 99.30691731770834
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) , variable ) ;
rank: 153
score: 99.26763556985294
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! n . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 153
score: 99.04374614514802
patch: return parent . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ;
rank: 153
score: 98.9793117357337
patch: return n . get CaMeL Variable CaMeL Map ( ) . get CaMeL Variable CaMeL Map ( ) . get ( ;
rank: 153
score: 98.73380737304687
patch: return KILL . KILL || KILL . KILL ;
rank: 153
score: 98.72953033447266
patch: throw new Runtime CaMeL Exception ( KILL . get CaMeL Message ( $STRING$ ) ;
rank: 153
score: 98.32877604166667
patch: return return Integer . KILL . KILL ;
rank: 154
score: 99.42011550377156
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( child CaMeL Value . get CaMeL String ( ) ) ;
rank: 154
score: 99.40398810891544
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 154
score: 99.31591796875
patch: return this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 154
score: 99.30689102564102
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 154
score: 99.26748422475961
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . KILL ;
rank: 154
score: 99.04280170641448
patch: if ( Node CaMeL Util . KILL . contains ( n . get CaMeL String ( ) ;
rank: 154
score: 98.97868546195652
patch: return Boolean . value CaMeL Of ( n . get CaMeL Value ( ) . boolean CaMeL Value ( ) ) ;
rank: 154
score: 98.7334735576923
patch: return KILL . KILL . KILL . KILL ; return false ;
rank: 154
score: 98.72896575927734
patch: return KILL . KILL . KILL . . KILL . KILL . KILL . ;
rank: 154
score: 98.3277587890625
patch: return ? KILL . KILL . KILL ;
rank: 155
score: 99.315576171875
patch: return n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 155
score: 99.30644145764802
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ) ;
rank: 155
score: 99.04253186677632
patch: if ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL String ( ) ;
rank: 155
score: 98.97843070652173
patch: return Short . value CaMeL Of ( n . get CaMeL Value ( ) . int CaMeL Value ( ) ) ;
rank: 155
score: 98.73338826497395
patch: logger . out . println ( $STRING$ ; return KILL ;
rank: 155
score: 98.72797393798828
patch: return KILL . KILL KILL . KILL . KILL . KILL . KILL . ;
rank: 155
score: 98.32465277777777
patch: return KILL . KILL . KILL [ ;
rank: 156
score: 99.31531479779412
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) ;
rank: 156
score: 99.30636463994566
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( parent , variable ) ;
rank: 156
score: 99.26658720128677
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 156
score: 99.042236328125
patch: return value CaMeL Of ( n . get CaMeL String ( ) ;
rank: 156
score: 98.97821599786931
patch: return n . get CaMeL Value ( ) . compare CaMeL To ( n . get CaMeL String ( ) ;
rank: 156
score: 98.72726004464286
patch: throw new Runtime CaMeL Exception . Runtime CaMeL Exception ( $STRING$ ) ;
rank: 156
score: 98.32282366071429
patch: return KILL KILL . KILL ;
rank: 157
score: 99.41966198336694
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( child CaMeL Value , n . get CaMeL Parent ( ) ) ;
rank: 157
score: 99.26636482007575
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 157
score: 98.9771728515625
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . boolean CaMeL Value ( ;
rank: 157
score: 98.7328350360577
patch: return $STRING$ . KILL KILL . KILL . KILL . KILL ;
rank: 157
score: 98.31572723388672
patch: return KILL . KILL . NONE ;
rank: 158
score: 99.41860499526516
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Graph ( ) , variable ) ;
rank: 158
score: 99.40269949776786
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ) ;
rank: 158
score: 99.31436593191964
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL String ( n ) ) ;
rank: 158
score: 99.30629410282258
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Parent ( n ) ) ;
rank: 158
score: 99.26628561580883
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 158
score: 99.04119318181819
patch: if ( Node CaMeL Util . ; Node CaMeL Util . KILL . KILL . KILL . KILL . KILL )
rank: 158
score: 98.97691761363636
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ;
rank: 158
score: 98.73281625600961
patch: return KILL . KILL . . KILL . KILL . KILL ;
rank: 158
score: 98.72467041015625
patch: throw new Runtime CaMeL Exception ( $STRING$ + node . get CaMeL String ( ;
rank: 158
score: 98.31380208333333
patch: return return Double . KILL . KILL ;
rank: 159
score: 99.41847737630208
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Graph ( ) ) ) ;
rank: 159
score: 99.31379699707031
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 159
score: 99.26592462713069
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util .
rank: 159
score: 99.04104614257812
patch: return node . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ; }
rank: 159
score: 98.97462864925987
patch: return n . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ;
rank: 159
score: 98.73228759765625
patch: return get CaMeL State ( ) . KILL ;
rank: 159
score: 98.72445678710938
patch: throw new Runtime CaMeL Exception ( $STRING$ + 1 ) ;
rank: 159
score: 98.31346299913194
patch: return KILL . KILL . println KILL ;
rank: 160
score: 99.41846381293402
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 160
score: 99.40133534307066
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( name , variable ) ;
rank: 160
score: 99.31362735523896
patch: if ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 160
score: 99.30535529641544
patch: return Node CaMeL Util . ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) ) ;
rank: 160
score: 99.04096069335938
patch: if ( Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ; ) )
rank: 160
score: 98.97445015285327
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; }
rank: 160
score: 98.73141714242789
patch: return KILL . KILL . KILL . KILL . . ; }
rank: 160
score: 98.72244262695312
patch: return KILL . KILL . KILL . KILL KILL . KILL . KILL . ;
rank: 160
score: 98.31189836774554
patch: return - KILL . KILL ;
rank: 161
score: 99.40127268145162
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Node CaMeL Util . get CaMeL Parent ( ) ) ;
rank: 161
score: 99.3134132667824
patch: return this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 161
score: 99.3051513671875
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL String ( ) ) ;
rank: 161
score: 99.2645263671875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 161
score: 99.04077758789063
patch: if ( Node CaMeL Util . is CaMeL Primitive ( n . get CaMeL String ( ) ) )
rank: 161
score: 98.97386585582386
patch: return n . get CaMeL Node ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 161
score: 98.73125
patch: return super . get CaMeL Instance ( ) ;
rank: 161
score: 98.72138214111328
patch: throw new Runtime CaMeL Exception ( $STRING$ + this . to CaMeL String ( ;
rank: 161
score: 98.31122504340277
patch: return KILL . KILL . KILL = ;
rank: 162
score: 99.40077533143939
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) ) ;
rank: 162
score: 99.3133877840909
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 162
score: 99.30510919744319
patch: && ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 162
score: 99.26409442608173
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . ) ;
rank: 162
score: 99.04043782552084
patch: return value . equals ( n . get CaMeL String ( ) ) ;
rank: 162
score: 98.97346297554348
patch: return n . get CaMeL Parent ( ) . get CaMeL Node ( ) . get CaMeL Node ( ) ; }
rank: 162
score: 98.72072347005208
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; ;
rank: 162
score: 98.30877685546875
patch: return KILL . return KILL ;
rank: 163
score: 99.39916204637096
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) ) ;
rank: 163
score: 99.31310453869048
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL Parent ( ) ) ) {
rank: 163
score: 99.30497233072917
patch: return Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 163
score: 99.26371256510417
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 163
score: 99.04037475585938
patch: return $STRING$ + n . get CaMeL String ( ) ;
rank: 163
score: 98.97284899259868
patch: return n . get CaMeL Name ( ) . equals ( n . get CaMeL String ( ;
rank: 163
score: 98.73118082682292
patch: return KILL . KILL . KILL . KILL . NONE ;
rank: 163
score: 98.7177734375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ;
rank: 163
score: 98.30552455357143
patch: return return Double . KILL ;
rank: 164
score: 99.41722845262096
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 164
score: 99.30497233072917
patch: super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL String ( ) ) ;
rank: 164
score: 99.26349609375
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 164
score: 99.0395840731534
patch: if ( Node CaMeL Util . is CaMeL Na CaMeL N ( n . get CaMeL String ( ) ) ;
rank: 164
score: 98.9725341796875
patch: return Boolean . value CaMeL Of ( n . get CaMeL Value ( ) ) . boolean CaMeL Value ( ;
rank: 164
score: 98.72967998798077
patch: result . return KILL . KILL . KILL . KILL ; }
rank: 164
score: 98.71690368652344
patch: throw new Illegal CaMeL Argument CaMeL Exception ( this . get CaMeL Runtime ( ;
rank: 164
score: 98.30474853515625
patch: return super . KILL . . KILL ;
rank: 165
score: 99.41695462740384
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 165
score: 99.39869326636905
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( $STRING$ ) ;
rank: 165
score: 99.312744140625
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) return null ;
rank: 165
score: 99.304794921875
patch: return Control CaMeL Flow CaMeL Graph . KILL . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 165
score: 99.26337348090277
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 165
score: 99.03848266601562
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + ;
rank: 165
score: 98.97238991477273
patch: return node . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . ; }
rank: 165
score: 98.72943584735577
patch: return KILL . KILL . KILL . KILL . . . ;
rank: 165
score: 98.71644694010416
patch: return KILL . KILL . KILL . KILL . . KILL . KILL ;
rank: 165
score: 98.30461883544922
patch: return KILL . KILL . NULL ;
rank: 166
score: 99.3127208891369
patch: if ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) {
rank: 166
score: 99.30425555889423
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ;
rank: 166
score: 99.26317107371794
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ref ) ) ;
rank: 166
score: 98.97211456298828
patch: return Integer . parse CaMeL Int ( n . get CaMeL String ( ) ;
rank: 166
score: 98.72859700520833
patch: return Boolean . KILL . get CaMeL Instance ( ) ;
rank: 166
score: 98.7158915201823
patch: throw new Illegal CaMeL Argument CaMeL Exception ( return ) ;
rank: 166
score: 98.30461120605469
patch: return KILL ; } return $STRING$ ;
rank: 167
score: 99.41674194335937
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n ) ) ;
rank: 167
score: 99.39836774553571
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( ) ) ;
rank: 167
score: 99.312294921875
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n . get CaMeL String ( ) ) ;
rank: 167
score: 99.30365234375
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL String ( ) ) ;
rank: 167
score: 99.26303183065879
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ) ;
rank: 167
score: 99.03810628255208
patch: System . err . println ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 167
score: 98.97205528846153
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ;
rank: 167
score: 98.72824096679688
patch: return Variable CaMeL Map . KILL . KILL . KILL ;
rank: 167
score: 98.7154032389323
patch: throw new Runtime CaMeL Exception ( $STRING$ + return ) ;
rank: 167
score: 98.29812282986111
patch: return KILL . KILL . return KILL ;
rank: 168
score: 99.41561397429436
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL First ( ) ) ;
rank: 168
score: 99.39791434151786
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 168
score: 99.31175696331522
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL Parent ( ) ) ) {
rank: 168
score: 99.30362642728366
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) ;
rank: 168
score: 99.26272583007812
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL
rank: 168
score: 99.03741455078125
patch: if ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL ) {
rank: 168
score: 98.97127278645833
patch: return Integer . value CaMeL Of ( n . get CaMeL String ( ) ) . ;
rank: 168
score: 98.72796630859375
patch: throw new Illegal CaMeL State CaMeL Exception ( return ) ;
rank: 168
score: 98.71536254882812
patch: throw new Runtime CaMeL Exception ( ;
rank: 168
score: 98.29262869698661
patch: return null ; return KILL ;
rank: 169
score: 99.41536254882813
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Cfg ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 169
score: 99.3117316750919
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL
rank: 169
score: 99.30339102909483
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable . get CaMeL String ( ) ) ;
rank: 169
score: 99.26215154474431
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 169
score: 99.03718705610795
patch: if ( Node CaMeL Util . is CaMeL Upper CaMeL Case ( n . get CaMeL String ( ) ) )
rank: 169
score: 98.97085731907895
patch: return Integer . value CaMeL Of ( n . get CaMeL Property ( Node CaMeL Util . ;
rank: 169
score: 98.72762044270833
patch: System . out . println ( $STRING$ + return ) ;
rank: 169
score: 98.71535237630208
patch: throw new Runtime CaMeL Exception ( $STRING$ + parent ) ;
rank: 169
score: 98.29178619384766
patch: return KILL . KILL . RIGHT ;
rank: 170
score: 99.41503295898437
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL String ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 170
score: 99.303173828125
patch: return Control CaMeL Flow CaMeL Graph . super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 170
score: 99.26150512695312
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . ) ;
rank: 170
score: 99.03714425223214
patch: if ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) ;
rank: 170
score: 98.97034801136364
patch: return n . get CaMeL Result ( ) . get CaMeL Result ( ) . get CaMeL Value ( ) ;
rank: 170
score: 98.72758345170455
patch: return KILL KILL . KILL . KILL . KILL ;
rank: 170
score: 98.7152811686198
patch: throw new Illegal CaMeL Argument CaMeL Exception ( Exception ) ;
rank: 170
score: 98.29125298394098
patch: if ; { return KILL . KILL ;
rank: 171
score: 99.4148837002841
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . ) ) ;
rank: 171
score: 99.39666748046875
patch: return Node CaMeL Util . is CaMeL Lhs ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 171
score: 99.0367431640625
patch: if ( Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ) , $STRING$ ) ;
rank: 171
score: 98.97000885009766
patch: return Symbol . KILL . equals ( n . get CaMeL String ( ) ;
rank: 171
score: 98.72564227764423
patch: return super . KILL . KILL . KILL . KILL ; ;
rank: 171
score: 98.71411946614583
patch: return KILL . KILL . KILL . KILL . KILL . KILL KILL ;
rank: 171
score: 98.29023573133681
patch: return / KILL . KILL . KILL ;
rank: 172
score: 99.3959430197011
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n ) ;
rank: 172
score: 99.31016540527344
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 172
score: 99.26102905273437
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . READ ;
rank: 172
score: 99.03661391314338
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL ) ;
rank: 172
score: 98.96967163085938
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL Message ( ) ) ;
rank: 172
score: 98.72562255859376
patch: return Boolean . KILL . KILL . KILL ;
rank: 172
score: 98.71379089355469
patch: return KILL . KILL . return KILL . KILL . KILL . KILL . ;
rank: 172
score: 98.29004778180804
patch: return null ; return $STRING$ ;
rank: 173
score: 99.41480654761905
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( this ) ;
rank: 173
score: 99.30977746212122
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL Graph ( ) , variable ) ;
rank: 173
score: 99.30238079202586
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( name , n . get CaMeL Parent ( ) ) ;
rank: 173
score: 99.2609001608456
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ,
rank: 173
score: 99.03629927201705
patch: if ( Node CaMeL Util . ; Node CaMeL Util . KILL . KILL . KILL . KILL . KILL ;
rank: 173
score: 98.96912151834239
patch: return Node CaMeL Util . KILL . equals CaMeL Ignore CaMeL Case ( n . get CaMeL String ( ) , ;
rank: 173
score: 98.72509155273437
patch: return parent . get CaMeL Node ( ) ;
rank: 173
score: 98.7132568359375
patch: } else { return KILL . KILL . KILL . KILL . KILL ;
rank: 173
score: 98.28842599051339
patch: return $STRING$ ; return $STRING$ ;
rank: 174
score: 99.41438432173295
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ; }
rank: 174
score: 99.3020656419837
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( name , n . get CaMeL Parent ( ) ) ;
rank: 174
score: 99.26082589285714
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 174
score: 99.0360995205966
patch: if ( Node CaMeL Util . KILL . equals ( n . get CaMeL String CaMeL Value ( ) ) )
rank: 174
score: 98.96651000976563
patch: return n . get CaMeL Parent ( ) . get CaMeL Node ( ) . get CaMeL Node ;
rank: 174
score: 98.72435584435097
patch: break KILL . KILL . KILL . KILL ; } else {
rank: 174
score: 98.7113037109375
patch: throw new Illegal CaMeL Argument CaMeL Exception . Exception ( $STRING$ ;
rank: 174
score: 98.28780788845486
patch: return ; . return KILL . KILL ;
rank: 175
score: 99.41379238696808
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Parent ( n ) ) ) ;
rank: 175
score: 99.39549206149194
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = n . get CaMeL Parent ( ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 175
score: 99.26056586371527
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 175
score: 99.03606567382812
patch: if ( Node CaMeL Util . is CaMeL Constant ( n . get CaMeL String ( ) ) )
rank: 175
score: 98.96620244565217
patch: return n . get CaMeL Function CaMeL Value ( ) . equals ( n . get CaMeL Function CaMeL Value ( ;
rank: 175
score: 98.72403658353366
patch: return Integer . KILL . KILL . KILL . KILL ; }
rank: 175
score: 98.70997619628906
patch: if ( parent . get CaMeL Property CaMeL Type ( ) . equals ) {
rank: 175
score: 98.28695678710938
patch: return ; = ; = null ;
rank: 176
score: 99.41358184814453
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL String ( variable ) ) ;
rank: 176
score: 99.26036551339286
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 176
score: 99.03603980654762
patch: return node . get CaMeL Result ( ) . get CaMeL Result ( ) . get CaMeL Result ( ;
rank: 176
score: 98.96605009191177
patch: return this . value . equals ( n . get CaMeL String ( ) ) ;
rank: 176
score: 98.72393798828125
patch: return mode . KILL . KILL . KILL . KILL ;
rank: 176
score: 98.70962524414062
patch: throw new Runtime CaMeL Exception . Exception ( $STRING$ ) ;
rank: 176
score: 98.28514862060547
patch: return KILL ; . return KILL ;
rank: 177
score: 99.41349487304687
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 177
score: 99.39374138327206
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 177
score: 99.3063456217448
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 177
score: 99.2595279091283
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ,
rank: 177
score: 99.0346346768466
patch: if ( Node CaMeL Util . KILL . KILL . contains ( n . get CaMeL String ( ) ) )
rank: 177
score: 98.965087890625
patch: return node . get CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Node ( ;
rank: 177
score: 98.72285970052083
patch: return return KILL . KILL . KILL . KILL ; }
rank: 177
score: 98.70882161458333
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ + $STRING$ ;
rank: 177
score: 98.28438895089286
patch: return KILL ; return null ;
rank: 178
score: 99.41346324573864
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 178
score: 99.39360981602823
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 178
score: 99.30560302734375
patch: return ! Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 178
score: 99.30055394665948
patch: = Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 178
score: 99.03338913690476
patch: if ( Node CaMeL Util . KILL . is CaMeL Empty ( n . get CaMeL String ( ) ;
rank: 178
score: 98.96507727581522
patch: return Integer . value CaMeL Of ( n . get CaMeL String ( ) ) . long CaMeL Value ( ) ;
rank: 178
score: 98.72283935546875
patch: return KILL . KILL . KILL . KILL . NULL ;
rank: 178
score: 98.70867919921875
patch: return get CaMeL Runtime ( ) . KILL . KILL . KILL ;
rank: 178
score: 98.28250461154514
patch: return Integer . KILL . KILL . ;
rank: 179
score: 99.30485930266204
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) ) ;
rank: 179
score: 99.25942758413461
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) ;
rank: 179
score: 99.03313446044922
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 179
score: 98.9644442471591
patch: return n . get CaMeL Parent ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 179
score: 98.72186279296875
patch: return get CaMeL Root CaMeL Node ( ) . KILL ;
rank: 179
score: 98.7083740234375
patch: System . out . println ( $STRING$ + KILL . to CaMeL String ( ;
rank: 179
score: 98.2813720703125
patch: return KILL . KILL ; . KILL ;
rank: 180
score: 99.41314142400569
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 180
score: 99.304677734375
patch: throw super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 180
score: 99.29922250600961
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 180
score: 99.25895552201705
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL
rank: 180
score: 99.03292643229166
patch: return $STRING$ . equals ( n . get CaMeL String ( ) ) ;
rank: 180
score: 98.96349516369048
patch: return n . get CaMeL Variable CaMeL Map ( ) . get CaMeL Variable CaMeL Map ( ) . ;
rank: 180
score: 98.72095743815105
patch: return node . KILL . get CaMeL Instance ( ) ;
rank: 180
score: 98.70732770647321
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + KILL ) ;
rank: 180
score: 98.28001185825893
patch: return . KILL . KILL ;
rank: 181
score: 99.41312000363372
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL
rank: 181
score: 99.39334204889113
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill , variable ) ;
rank: 181
score: 99.30398559570312
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL String ( n ) ) ;
rank: 181
score: 99.25844163161058
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL
rank: 181
score: 99.03223818824405
patch: if ( Node CaMeL Util . KILL . starts CaMeL With ( n . get CaMeL String ( ) ;
rank: 181
score: 98.96262525475544
patch: return Integer . value CaMeL Of ( n . get CaMeL Node ( ) ) . boolean CaMeL Value ( ) ;
rank: 181
score: 98.72049967447917
patch: break KILL . KILL . KILL . KILL . KILL ;
rank: 181
score: 98.70722198486328
patch: throw new Runtime CaMeL Exception ( $STRING$ ? KILL . KILL . KILL . ;
rank: 181
score: 98.27988106863839
patch: return KILL . KILL ; }
rank: 182
score: 99.41187183277027
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 182
score: 99.39300722064394
patch: if ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 182
score: 99.3039191750919
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 182
score: 99.29843139648438
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n . get CaMeL Parent ( ) ) ;
rank: 182
score: 99.25830078125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n
rank: 182
score: 99.03206634521484
patch: if ( n . get CaMeL String ( ) . equals ( $STRING$ ) )
rank: 182
score: 98.9623291015625
patch: return n . get CaMeL String CaMeL Value ( ) . trim ( ) . trim ( ) ;
rank: 182
score: 98.72034708658855
patch: return Strings . KILL . KILL . KILL . KILL ;
rank: 182
score: 98.70672200520833
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ? $STRING$ : $STRING$ ;
rank: 182
score: 98.27827962239583
patch: return KILL . KILL . LINE KILL ;
rank: 183
score: 99.39280790441177
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ) ;
rank: 183
score: 99.30373216711956
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . READ ) ;
rank: 183
score: 99.29796006944444
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL Parent ( ) ) ) ;
rank: 183
score: 99.25826223273026
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ) ;
rank: 183
score: 99.03081720525569
patch: try { return KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL . KILL ;
rank: 183
score: 98.72021484375
patch: } return KILL . KILL . KILL . KILL ;
rank: 183
score: 98.70608723958334
patch: throw new Illegal CaMeL Argument CaMeL Exception . Error ( $STRING$ + $STRING$ ;
rank: 183
score: 98.27825164794922
patch: return KILL ; } return null ;
rank: 184
score: 99.41137152777777
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n ) ) ;
rank: 184
score: 99.30292107077206
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 184
score: 99.29792785644531
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 184
score: 99.25810546875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 184
score: 99.03022846422698
patch: if ( Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ; }
rank: 184
score: 98.96199174360795
patch: return Double . value CaMeL Of ( n . get CaMeL Double ( ) ) . double CaMeL Value ( ;
rank: 184
score: 98.71895658052884
patch: try { return KILL . KILL . KILL . KILL ; }
rank: 184
score: 98.27804565429688
patch: return ; = ; = $STRING$ ;
rank: 185
score: 99.41132146661931
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First ( ) ) ) ;
rank: 185
score: 99.39267578125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( child
rank: 185
score: 99.30260049143145
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 185
score: 99.25808715820312
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 185
score: 99.03011648995536
patch: return KILL . equals ( n . get CaMeL String ( ) ;
rank: 185
score: 98.96111188616071
patch: return n . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . ;
rank: 185
score: 98.71883138020833
patch: break KILL . KILL . KILL . KILL . ; }
rank: 185
score: 98.70545543323864
patch: throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ ;
rank: 185
score: 98.27800835503473
patch: return KILL . KILL ; return $STRING$ ;
rank: 186
score: 99.41072591145833
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) , variable ) ;
rank: 186
score: 99.30241593070652
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 186
score: 99.29754638671875
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ;
rank: 186
score: 99.25772897820724
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( id ) ) ;
rank: 186
score: 99.02997116815476
patch: if ( Node CaMeL Util . KILL . equals ( ; Node CaMeL Util . KILL . KILL ) )
rank: 186
score: 98.96071213942308
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( ) ;
rank: 186
score: 98.7186279296875
patch: return parent . get CaMeL Instance CaMeL Type ( ) ;
rank: 186
score: 98.70405578613281
patch: return KILL . KILL . KILL . KILL . . KILL . KILL . ;
rank: 186
score: 98.27756754557292
patch: return ; . KILL . return KILL ;
rank: 187
score: 99.41048583984374
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , variable ) ) ;
rank: 187
score: 99.30220170454545
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL
rank: 187
score: 99.29747817095588
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . n , n . get CaMeL Parent ( ) ) ;
rank: 187
score: 99.2576184395032
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( , variable ) ) ;
rank: 187
score: 99.02995469835069
patch: return KILL . is CaMeL Assignable CaMeL From ( n . get CaMeL String ( ) ;
rank: 187
score: 98.71785111860795
patch: return super . KILL KILL . KILL . KILL ;
rank: 187
score: 98.70389811197917
patch: throw new Runtime CaMeL Exception ( $STRING$ + 0 ) ;
rank: 187
score: 98.2765884399414
patch: return System . KILL . KILL ;
rank: 188
score: 99.30183919270833
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Graph ( ) ) ) {
rank: 188
score: 99.29661342075893
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ) ;
rank: 188
score: 99.25753536739865
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 188
score: 99.0296630859375
patch: if ( Node CaMeL Util . KILL . equals ( ; n . get CaMeL String ( ) ;
rank: 188
score: 98.71751990685097
patch: return ) . KILL . KILL . KILL . KILL ; }
rank: 188
score: 98.70369720458984
patch: System . err . println ( $STRING$ + Integer . MAX _ VALUE ) ;
rank: 188
score: 98.27653672960069
patch: return Double . KILL . KILL . ;
rank: 189
score: 99.39167131696429
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 189
score: 99.30134133731617
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 189
score: 99.29615071614583
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Name ( n ) ) ;
rank: 189
score: 99.25729782516892
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) , variable ) ;
rank: 189
score: 98.96005394345238
patch: return n . get CaMeL Value ( ) . equals ( n . get CaMeL Value ( ) ) ;
rank: 189
score: 98.71676870492789
patch: return ( ) . KILL . KILL . KILL . KILL ;
rank: 189
score: 98.70341352982955
patch: return new Illegal CaMeL State CaMeL Exception ( $STRING$ ;
rank: 189
score: 98.2764892578125
patch: return 0 ;
rank: 190
score: 99.40937885485198
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( name ) ) ;
rank: 190
score: 99.39147528286638
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Node CaMeL Util . get CaMeL Parent ( ) ) ;
rank: 190
score: 99.30045219089673
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) {
rank: 190
score: 99.29612223307292
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 190
score: 99.25727982954545
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL . to CaMeL String ( ) ) ;
rank: 190
score: 99.02904052734375
patch: if ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL ) return null ;
rank: 190
score: 98.95958941915761
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ) ) . long CaMeL Value ( ) ;
rank: 190
score: 98.7162373860677
patch: return KILL . KILL . KILL . KILL ; } else
rank: 190
score: 98.70334879557292
patch: throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ ) ;
rank: 190
score: 98.27346801757812
patch: return KILL . KILL return KILL ;
rank: 191
score: 99.30007595486111
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ;
rank: 191
score: 99.2956478721217
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) , variable ) ;
rank: 191
score: 99.25654296875
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL
rank: 191
score: 99.02886962890625
patch: return Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) .
rank: 191
score: 98.95918605638587
patch: return Character . to CaMeL Lower CaMeL Case ( n . get CaMeL String ( ) ) . trim ( ) ;
rank: 191
score: 98.7162334735577
patch: return this . KILL . KILL . KILL ; break ; }
rank: 191
score: 98.70316859654018
patch: return KILL . KILL . KILL . KILL . KILL . . ;
rank: 191
score: 98.27200317382812
patch: return ; = ; = KILL ;
rank: 192
score: 99.39071219308036
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) ) ;
rank: 192
score: 99.29958177649456
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL String ( ) , variable ) ;
rank: 192
score: 99.2565417167468
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) ;
rank: 192
score: 99.02885885799633
patch: if ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL ;
rank: 192
score: 98.95840056046195
patch: return Integer . value CaMeL Of ( n . get CaMeL String ( ) ) . to CaMeL String ( ) ;
rank: 192
score: 98.7157694498698
patch: return nodes . KILL . KILL . KILL . KILL ;
rank: 192
score: 98.26998562282986
patch: return super . KILL . return KILL ;
rank: 193
score: 99.40831409801136
patch: else return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 193
score: 99.39070268110795
patch: result = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 193
score: 99.29917841372283
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) ;
rank: 193
score: 99.29517279730902
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL Parent ( ) ) ) ;
rank: 193
score: 99.25620814732143
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( (
rank: 193
score: 99.02864213423295
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) + $STRING$ ) ;
rank: 193
score: 98.95836292613636
patch: return n . get CaMeL String CaMeL Value ( ) . equals ( n . get CaMeL String CaMeL Value ;
rank: 193
score: 98.70098876953125
patch: return KILL . KILL . KILL . KILL . KILL KILL . KILL . ;
rank: 193
score: 98.26970079210069
patch: return KILL . KILL ; return null ;
rank: 194
score: 99.4082263764881
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n . get CaMeL Parent ( ) ) ;
rank: 194
score: 99.39037181712963
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n . get CaMeL String ( ) ) ;
rank: 194
score: 99.29892147288604
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL
rank: 194
score: 99.2951027199074
patch: = Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 194
score: 99.25585123697917
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 194
score: 99.02841796875
patch: if ( n . get CaMeL String ( ) . equals ( $STRING$ ;
rank: 194
score: 98.95824133831522
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . get CaMeL Value ( ) ;
rank: 194
score: 98.71551983173077
patch: return KILL . KILL . KILL . KILL == KILL ; }
rank: 194
score: 98.700439453125
patch: return KILL . return KILL . KILL . KILL . KILL . KILL . ;
rank: 194
score: 98.26936340332031
patch: return System . . . KILL ;
rank: 195
score: 99.40804850260416
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n ) ;
rank: 195
score: 99.29884765625
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 195
score: 99.0275390625
patch: throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 195
score: 98.95792643229167
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ; }
rank: 195
score: 98.7153076171875
patch: return n . get CaMeL Node ( ) ;
rank: 195
score: 98.69956970214844
patch: throw new Runtime CaMeL Exception ( $STRING$ + Integer . to CaMeL String ( ;
rank: 195
score: 98.26553344726562
patch: return KILL KILL ;
rank: 196
score: 99.298095703125
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Parent ( n ) ) ) {
rank: 196
score: 99.2945620888158
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 196
score: 99.2548828125
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 196
score: 99.02747260199652
patch: if ( Position . KILL . equals ( n . get CaMeL String ( ) ) )
rank: 196
score: 98.95712762129934
patch: return Boolean . value CaMeL Of ( n . get CaMeL Property ( Node CaMeL Util . ;
rank: 196
score: 98.71517944335938
patch: return get CaMeL Graph ( ) . KILL . KILL ;
rank: 196
score: 98.69937337239584
patch: System . out . println ( $STRING$ + Integer . MAX _ VALUE ;
rank: 196
score: 98.26547677176339
patch: return $STRING$ ; return KILL ;
rank: 197
score: 99.40775730298913
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent , variable ) ;
rank: 197
score: 99.29766845703125
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 197
score: 99.29403791756465
patch: ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) ) ;
rank: 197
score: 99.02742143110795
patch: if ( Node CaMeL Util . KILL . equals ( ; Node CaMeL Util . KILL . KILL . KILL ;
rank: 197
score: 98.95668723366477
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ) . double CaMeL Value ( )
rank: 197
score: 98.7139892578125
patch: return . KILL . KILL . KILL . KILL ; } ;
rank: 197
score: 98.6985595703125
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ;
rank: 197
score: 98.26041666666667
patch: return null ; return KILL . KILL ;
rank: 198
score: 99.40589971127717
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ) ;
rank: 198
score: 99.29765768612133
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , $STRING$ ) ;
rank: 198
score: 99.29399762834821
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) ) ;
rank: 198
score: 99.026806640625
patch: throw new Runtime CaMeL Exception ( $STRING$ + n . get CaMeL String ;
rank: 198
score: 98.95647116268383
patch: return n . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( ;
rank: 198
score: 98.71385609019886
patch: else { return KILL . KILL . KILL ; }
rank: 198
score: 98.69781024639423
patch: return KILL . return KILL . KILL . KILL . KILL ;
rank: 198
score: 98.25977918836806
patch: return this . KILL . . KILL ;
rank: 199
score: 99.4058212652439
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( child CaMeL Value ) ) ;
rank: 199
score: 99.38945079985119
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( id ) ;
rank: 199
score: 99.2975362141927
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 199
score: 99.29376852101294
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable . get CaMeL Parent ( ) ) ;
rank: 199
score: 99.2540283203125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) , variable ) ;
rank: 199
score: 98.95597700639205
patch: return n . get CaMeL Value ( ) . compare CaMeL To ( n . get CaMeL Value ( ) ;
rank: 199
score: 98.7115987141927
patch: return KILL . KILL . KILL != KILL . KILL ;
rank: 199
score: 98.69682965959821
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + 0 ) ;
rank: 199
score: 98.25932312011719
patch: return KILL . KILL . LINE ;
rank: 200
score: 99.40572265625
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL String ( ) ) ;
rank: 200
score: 99.38934616815476
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( type ) ;
rank: 200
score: 99.2975186434659
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 200
score: 99.02623155381944
patch: return KILL . KILL . KILL . KILL . KILL . KILL . KILL . ; }
rank: 200
score: 98.95596168154762
patch: return n . get CaMeL Value ( ) . get CaMeL Value ( ) . get CaMeL Value ( )
rank: 200
score: 98.71157836914062
patch: } else { return KILL . KILL . KILL ; }
rank: 200
score: 98.69605255126953
patch: throw new Illegal CaMeL State CaMeL Exception ( this . get CaMeL Runtime ( ;
rank: 200
score: 98.25837707519531
patch: return vars . KILL . KILL ;
rank: 201
score: 99.40560995565879
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 201
score: 99.29750061035156
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL String ( n ) , variable ) ;
rank: 201
score: 99.25355568910257
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) ;
rank: 201
score: 99.02606201171875
patch: return KILL . get CaMeL Value ( n . get CaMeL String ( ) ;
rank: 201
score: 98.95595296223958
patch: return Character . to CaMeL Upper CaMeL Case ( n . get CaMeL String ( ) ;
rank: 201
score: 98.71128336588542
patch: logger . out . println ( $STRING$ ; return $STRING$ ;
rank: 201
score: 98.69596557617187
patch: throw new Runtime CaMeL Exception ( Exception ) ;
rank: 201
score: 98.25735909598214
patch: return ; . return $STRING$ ;
rank: 202
score: 99.40533854166667
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL First CaMeL Child ( n ) ) ;
rank: 202
score: 99.2974344889323
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 202
score: 99.25338541666666
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . Control CaMeL Flow CaMeL Graph . ) ;
rank: 202
score: 99.02571411132813
patch: return Boolean . value CaMeL Of ( Node CaMeL Util . KILL . KILL . KILL . KILL ;
rank: 202
score: 98.9555728310033
patch: return Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ) , ;
rank: 202
score: 98.7110087076823
patch: return get CaMeL Instance ( ) . KILL . KILL ;
rank: 202
score: 98.69576322115384
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ;
rank: 202
score: 98.25711059570312
patch: return KILL ; ;
rank: 203
score: 99.40494791666667
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL String ( ) , variable ) ;
rank: 203
score: 99.38805731411638
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 203
score: 99.29710083007812
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL String ( ) ) ;
rank: 203
score: 99.2926609205163
patch: throw is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 203
score: 99.25298394097223
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) ;
rank: 203
score: 99.02500221946023
patch: throw new Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 203
score: 98.95501999627976
patch: return n . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 203
score: 98.70867919921875
patch: return true . KILL . KILL . KILL . KILL ;
rank: 203
score: 98.69559420072116
patch: { return KILL . KILL . KILL . KILL . KILL ;
rank: 203
score: 98.25531005859375
patch: throw KILL . KILL . KILL . KILL
rank: 204
score: 99.40474446614583
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL
rank: 204
score: 99.296298828125
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 204
score: 99.29264009915866
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 204
score: 99.25265424679488
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( id ) ) ;
rank: 204
score: 99.02377801192434
patch: if ( n . get CaMeL Value CaMeL Type ( ) == Node CaMeL Util . KILL )
rank: 204
score: 98.95501030815973
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . ;
rank: 204
score: 98.70815022786458
patch: return this . KILL . get CaMeL Symbol ( ) ;
rank: 204
score: 98.69501604352679
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ;
rank: 204
score: 98.25429958767361
patch: return KILL . KILL . KILL + ;
rank: 205
score: 99.40445963541667
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( parent , variable ) ;
rank: 205
score: 99.38727883731617
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 205
score: 99.29569091796876
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) ) ;
rank: 205
score: 99.25227573939732
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 205
score: 99.02309348366477
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 205
score: 98.95486450195312
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ) ;
rank: 205
score: 98.6946512858073
patch: System . out . println ( $STRING$ ; return $STRING$ ;
rank: 205
score: 98.25366889105902
patch: return new ) . KILL . KILL ;
rank: 206
score: 99.40423583984375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL First ( ) ) ) ;
rank: 206
score: 99.38698381696429
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 206
score: 99.29545762803819
patch: super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 206
score: 99.29214372306035
patch: return this . Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 206
score: 99.25182427300348
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ,
rank: 206
score: 99.0228271484375
patch: if ( Node CaMeL Util . is CaMeL Letter ( n . get CaMeL String ( ) ) )
rank: 206
score: 98.95458266314338
patch: return Double . value CaMeL Of ( n ) . double CaMeL Value ( ) ;
rank: 206
score: 98.70785522460938
patch: return KILL . KILL . KILL . KILL ; $NUMBER$ ;
rank: 206
score: 98.69461495535714
patch: try { return KILL . KILL . KILL . KILL . KILL ;
rank: 206
score: 98.25222439236111
patch: return KILL . KILL . KILL . NOT
rank: 207
score: 99.38648897058823
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent CaMeL Node ( n ) ) ;
rank: 207
score: 99.29517618815105
patch: return . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 207
score: 99.29186072716347
patch: Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 207
score: 99.25175645616319
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ,
rank: 207
score: 99.02252197265625
patch: return variable . equals ( n . get CaMeL String ( ) ;
rank: 207
score: 98.95445251464844
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 207
score: 98.7078348795573
patch: return exp . KILL . KILL . KILL . KILL ;
rank: 207
score: 98.69459025065105
patch: throw new Illegal CaMeL State CaMeL Exception ( null ) ;
rank: 207
score: 98.25184631347656
patch: return null ; } return KILL ;
rank: 208
score: 99.40304404810855
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( this ) ) ;
rank: 208
score: 99.29505920410156
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL Node ( n ) ) ;
rank: 208
score: 99.29182942708333
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 208
score: 99.251708984375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 208
score: 99.02159359580592
patch: if ( Node CaMeL Util . is CaMeL Digit ( n . get CaMeL String ( ) ;
rank: 208
score: 98.95427911931819
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ) ) . boolean CaMeL Value ( ;
rank: 208
score: 98.70770263671875
patch: return Character . KILL . KILL . KILL . KILL ;
rank: 208
score: 98.69144381009616
patch: throw new Illegal CaMeL State CaMeL Exception . Exception ( $STRING$ ;
rank: 208
score: 98.25101725260417
patch: return KILL . KILL . KILL , ;
rank: 209
score: 99.29493667140152
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) ;
rank: 209
score: 99.29182680191532
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( n ) ) ;
rank: 209
score: 99.25150981702302
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ) ;
rank: 209
score: 99.0213290127841
patch: return Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ) . KILL (
rank: 209
score: 98.95359971788194
patch: return Character . to CaMeL Char CaMeL Array ( n . get CaMeL String ( ) ;
rank: 209
score: 98.70670572916667
patch: return this . KILL . KILL . KILL ; break ;
rank: 209
score: 98.69131469726562
patch: throw get CaMeL Runtime ( ) . KILL . KILL . KILL . KILL ;
rank: 209
score: 98.24757893880208
patch: return super . . KILL . KILL ;
rank: 210
score: 99.29449462890625
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ) ;
rank: 210
score: 99.2917010967548
patch: super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 210
score: 99.25062052408855
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) {
rank: 210
score: 99.02126639229911
patch: if ( Node CaMeL Util . KILL . KILL . equals ( ;
rank: 210
score: 98.95330451516544
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ) ;
rank: 210
score: 98.70420143821023
patch: throw new Illegal CaMeL State CaMeL Exception KILL ) ;
rank: 210
score: 98.6904296875
patch: throw new Runtime CaMeL Exception ( $STRING$ ? $STRING$ : $STRING$ ;
rank: 210
score: 98.2471415201823
patch: return KILL . EMPTY ;
rank: 211
score: 99.4023968240489
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 211
score: 99.38611886160714
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ) ;
rank: 211
score: 99.294150390625
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Node ( ) ) ;
rank: 211
score: 99.29165544181035
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Node ( ) ) ;
rank: 211
score: 99.25059000651042
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 211
score: 99.02098499644886
patch: if ( Node CaMeL Util . is CaMeL Assignable CaMeL From ( n . get CaMeL String ( ) ) )
rank: 211
score: 98.953125
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ;
rank: 211
score: 98.70264781605114
patch: return KILL . KILL KILL . KILL . KILL ;
rank: 211
score: 98.24620710100446
patch: return false ; return KILL ;
rank: 212
score: 99.38589372306035
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( name , n . get CaMeL Parent ( ) ) ;
rank: 212
score: 99.29363250732422
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n ) ) ;
rank: 212
score: 99.29147338867188
patch: return this . ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) ) ;
rank: 212
score: 99.02096121651786
patch: if ( Node CaMeL Util . KILL . KILL . contains ( n . get CaMeL String ( ) ;
rank: 212
score: 98.95293782552083
patch: return n . get CaMeL Result ( ) . get CaMeL Value ( ;
rank: 212
score: 98.70233154296875
patch: return parent . get CaMeL Current CaMeL Node ( ) ;
rank: 212
score: 98.68845040457589
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + KILL ) ;
rank: 212
score: 98.24466281467014
patch: return KILL ; return KILL . KILL ;
rank: 213
score: 99.29359654017857
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 213
score: 99.29139775815217
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node , n . get CaMeL Parent ( ) ) ;
rank: 213
score: 98.9527920809659
patch: return n . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Node ;
rank: 213
score: 98.70135498046875
patch: return $NUMBER$ . KILL . KILL . KILL . KILL ;
rank: 213
score: 98.68817749023438
patch: throw new Illegal CaMeL State CaMeL Exception ( ;
rank: 213
score: 98.2442855834961
patch: return $STRING$ ; } return KILL ;
rank: 214
score: 99.40163845486111
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 214
score: 99.38551240808823
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 214
score: 99.29351806640625
patch: return ! ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 214
score: 99.29088985558712
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL First CaMeL Child ( n ) ) ;
rank: 214
score: 99.25002034505208
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Variable CaMeL
rank: 214
score: 99.019287109375
patch: return node . get CaMeL Parent CaMeL Node ( ) . KILL ( ) ;
rank: 214
score: 98.95206705729167
patch: return Boolean . value CaMeL Of ( Boolean . value CaMeL Of ( ;
rank: 214
score: 98.69959605823864
patch: break KILL . KILL . KILL . KILL ; }
rank: 214
score: 98.68607584635417
patch: System . out . println ( $STRING$ ; return null ;
rank: 214
score: 98.24361419677734
patch: return KILL . KILL . next ;
rank: 215
score: 99.29296875
patch: return n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 215
score: 99.29073963994566
patch: return is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) ) ;
rank: 215
score: 99.24986049107143
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ) ;
rank: 215
score: 99.0189208984375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) + $STRING$ ) ;
rank: 215
score: 98.95086115056819
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ; }
rank: 215
score: 98.68604871961806
patch: throw new Illegal CaMeL State CaMeL Exception ;
rank: 215
score: 98.2406005859375
patch: return $STRING$ ; return KILL . KILL ;
rank: 216
score: 99.38526178175404
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 216
score: 99.29068729795259
patch: ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 216
score: 99.01875232514881
patch: if ( Node CaMeL Util . KILL . equals CaMeL Ignore CaMeL Case ( n . get CaMeL String ;
rank: 216
score: 98.95048442639802
patch: return get CaMeL Value ( ) . equals ( n . get CaMeL String ( ) ) ;
rank: 216
score: 98.68601296164773
patch: System . out . println ( $STRING$ ; break ;
rank: 216
score: 98.23723687065973
patch: return KILL . KILL . KILL . TO
rank: 217
score: 99.38442160866477
patch: result = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 217
score: 99.29135131835938
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL Parent ( n ) , variable ) ;
rank: 217
score: 99.29007393973214
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) ; }
rank: 217
score: 99.24932183159723
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent ) ) ;
rank: 217
score: 99.01729910714286
patch: throw new Class CaMeL Not CaMeL Found CaMeL Exception ( $STRING$ ) ;
rank: 217
score: 98.95021750710227
patch: return Integer . value CaMeL Of ( n . get CaMeL String ( ) ) . boolean CaMeL Value ( ;
rank: 217
score: 98.23591613769531
patch: return null . KILL . KILL ;
rank: 218
score: 99.40123401988636
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Control CaMeL
rank: 218
score: 99.38349441002156
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node , n . get CaMeL Parent ( ) ) ;
rank: 218
score: 99.290283203125
patch: if ( this . Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) {
rank: 218
score: 99.28966471354167
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Lhs ( n ) ) ;
rank: 218
score: 99.24931640625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 218
score: 98.95012555803571
patch: return n . get CaMeL Node ( ) . equals ( n . get CaMeL String ( ) ) ;
rank: 218
score: 98.69553629557292
patch: return super . KILL . get CaMeL Node ( ) ;
rank: 218
score: 98.23532443576389
patch: throw new Runtime CaMeL Exception KILL ) ;
rank: 219
score: 99.40076104525862
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 219
score: 99.38318589154412
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ;
rank: 219
score: 99.28981018066406
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ;
rank: 219
score: 99.28956139605978
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( index , n . get CaMeL Parent ( ) ) ;
rank: 219
score: 99.24909973144531
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 219
score: 99.01720581054687
patch: throw new No CaMeL Such CaMeL Method CaMeL Error ( $STRING$ + n . get CaMeL String ( ;
rank: 219
score: 98.95000256990132
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . trim ;
rank: 219
score: 98.69491577148438
patch: return KILL . KILL . KILL . KILL . ; }
rank: 219
score: 98.68489837646484
patch: result = KILL . KILL . KILL . KILL . KILL . KILL ; ;
rank: 219
score: 98.23304966517857
patch: if ; { return $STRING$ ;
rank: 220
score: 99.3828833795363
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 220
score: 99.28950580797698
patch: return callback . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 220
score: 99.24850027901786
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n
rank: 220
score: 99.01705932617188
patch: throw new Runtime CaMeL Exception ( $STRING$ + n ) ;
rank: 220
score: 98.69486490885417
patch: return KILL . get CaMeL Instance ( ) . KILL ;
rank: 220
score: 98.68465983072916
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + $STRING$ ;
rank: 220
score: 98.23169623480902
patch: return scope . KILL KILL . KILL ;
rank: 221
score: 99.39984537760417
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Node ( n ) ) ;
rank: 221
score: 99.38287353515625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Parent CaMeL Node ( n ) ) ;
rank: 221
score: 99.2484195106908
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ) ;
rank: 221
score: 98.9496737393466
patch: return Long . value CaMeL Of ( n . get CaMeL Value ( ) ) . double CaMeL Value ( ;
rank: 221
score: 98.69484252929688
patch: return get CaMeL Scope ( ) . KILL ;
rank: 221
score: 98.68395124162946
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name ) ;
rank: 221
score: 98.2303695678711
patch: return KILL . KILL . KILL .
rank: 222
score: 99.399609375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 222
score: 99.3828545932112
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ) ;
rank: 222
score: 99.28817588404605
patch: return this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 222
score: 99.0165506998698
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ; }
rank: 222
score: 98.94947645399306
patch: return n . get CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 222
score: 98.69473876953126
patch: return node . get CaMeL Node ( ) ;
rank: 222
score: 98.6837387084961
patch: throw new Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception ( $STRING$ ; }
rank: 222
score: 98.22971598307292
patch: throw new Runtime CaMeL Exception return $STRING$ ;
rank: 223
score: 99.39866879111842
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 223
score: 99.28888570851294
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node , n . get CaMeL Parent ( ) ) ;
rank: 223
score: 99.28743703741776
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , $STRING$ ) ;
rank: 223
score: 99.24784545898437
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 223
score: 99.01599702380952
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) + $STRING$ ;
rank: 223
score: 98.94935825892857
patch: return Node CaMeL Util . KILL . equals CaMeL Ignore CaMeL Case ( n . get CaMeL String ( ;
rank: 223
score: 98.681640625
patch: throw new Runtime CaMeL Exception ( KILL . KILL . KILL . KILL ;
rank: 223
score: 98.22898864746094
patch: return KILL . KILL . KILL KILL
rank: 224
score: 99.28794759114584
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First ( ) ) ;
rank: 224
score: 99.24760356702302
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 224
score: 98.94866943359375
patch: return n . get CaMeL Value ( ) . trim ( ) ;
rank: 224
score: 98.6939697265625
patch: return KILL . get CaMeL Node ( ) ;
rank: 224
score: 98.68089463975694
patch: throw new Illegal CaMeL Argument CaMeL Exception ;
rank: 224
score: 98.22872924804688
patch: return KILL . EMPTY . KILL ;
rank: 225
score: 99.39833852407095
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 225
score: 99.28528771033653
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Node CaMeL Util . get CaMeL Parent ( n ) ) ;
rank: 225
score: 99.01520647321429
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + ;
rank: 225
score: 98.94786919487848
patch: return Integer . parse CaMeL Int ( n . get CaMeL String ( ) ) ; }
rank: 225
score: 98.69292658025569
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 225
score: 98.68037923177083
patch: throw new Runtime CaMeL Exception ( KILL . KILL ) ;
rank: 225
score: 98.2265625
patch: return ; = . KILL ;
rank: 226
score: 99.38254712975544
patch: return n . get CaMeL Parent ( ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 226
score: 99.28699993265086
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( parent , n . get CaMeL Parent ( ) ) ;
rank: 226
score: 99.28484429253473
patch: return ! is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 226
score: 99.01474434988839
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n ) ;
rank: 226
score: 98.9476318359375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . get CaMeL Message ( ) ) ;
rank: 226
score: 98.67970377604166
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . to CaMeL String ;
rank: 226
score: 98.22418212890625
patch: return return KILL ;
rank: 227
score: 99.38233209425404
patch: return Node CaMeL Util . is CaMeL Lhs ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 227
score: 99.28482421875
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First ( ) ) ;
rank: 227
score: 98.94685502485795
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . value CaMeL Of ( ;
rank: 227
score: 98.69129638671875
patch: return parent . get CaMeL Symbol ( ) ;
rank: 227
score: 98.67930250901442
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name ;
rank: 227
score: 98.22203911675348
patch: return KILL . KILL . FALSE ; ;
rank: 228
score: 99.38232421875
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . n . get CaMeL First CaMeL Child ( ) ) ;
rank: 228
score: 99.28657801011029
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ) ;
rank: 228
score: 99.284765625
patch: return Factory . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 228
score: 99.24698893229167
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ; }
rank: 228
score: 99.01366024925595
patch: if ( Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ) , n ;
rank: 228
score: 98.9462826377467
patch: return get CaMeL Value ( ) . get CaMeL Value ( ) . get CaMeL Value ( ;
rank: 228
score: 98.68977864583333
patch: return KILL . KILL . KILL . KILL return KILL ;
rank: 228
score: 98.67850748697917
patch: System . err . println ( $STRING$ ; return $STRING$ ;
rank: 228
score: 98.22140842013889
patch: return KILL . KILL . KILL . LINE
rank: 229
score: 99.39764873798077
patch: return Node CaMeL Util . is CaMeL Lhs ( variable ) ;
rank: 229
score: 99.3821159811581
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) , variable ) ;
rank: 229
score: 99.28591482979911
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n , variable ) ;
rank: 229
score: 99.24594116210938
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . } ;
rank: 229
score: 99.01360724954044
patch: if ( Node CaMeL Util . ; Node CaMeL Util . KILL . equals ( ;
rank: 229
score: 98.94535688920455
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Root ( ) ;
rank: 229
score: 98.67845865885417
patch: throw new Runtime CaMeL Exception ( $STRING$ + node . to CaMeL String ;
rank: 229
score: 98.21830919053819
patch: return KILL . KILL . KILL $NUMBER$ ;
rank: 230
score: 99.28553838315217
patch: try { return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 230
score: 99.28334350585938
patch: return ! Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 230
score: 99.24583524816177
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 230
score: 99.01325073242188
patch: if ( n . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ ) ;
rank: 230
score: 98.9449234008789
patch: return n . get CaMeL Node ( ) . get CaMeL Parent ( ) ;
rank: 230
score: 98.68781127929688
patch: return get CaMeL Root CaMeL Node ( ) ;
rank: 230
score: 98.6783676147461
patch: throw new Runtime CaMeL Exception ( $STRING$ + this . get CaMeL Class ( ;
rank: 230
score: 98.21621704101562
patch: return super . return ( ) ;
rank: 231
score: 99.39724829889113
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) ) ;
rank: 231
score: 99.38169537168561
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 231
score: 99.28551897321428
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 231
score: 99.28309215198864
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Node CaMeL Util . is CaMeL Lhs ( n ) ;
rank: 231
score: 99.01246337890625
patch: if ( Node CaMeL Util . ; Node CaMeL Util . KILL . KILL . KILL . KILL ;
rank: 231
score: 98.94464789496527
patch: return parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ;
rank: 231
score: 98.67814127604167
patch: throw new Illegal CaMeL State CaMeL Exception . KILL ) ;
rank: 231
score: 98.21502685546875
patch: return code . KILL . KILL ;
rank: 232
score: 99.39723488136575
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Node ( ) ) ;
rank: 232
score: 99.3811896829044
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 232
score: 99.28514720775463
patch: throw Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 232
score: 99.283037109375
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ) ;
rank: 232
score: 99.24526116786859
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( name ) ) ;
rank: 232
score: 99.01241048177083
patch: return KILL . KILL . KILL . KILL . KILL . KILL ) ;
rank: 232
score: 98.21364339192708
patch: throw KILL . KILL . KILL . ;
rank: 233
score: 99.39710150824652
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( n ) , variable ) ;
rank: 233
score: 99.28481950431035
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) ) {
rank: 233
score: 99.24522744455645
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL . to CaMeL String ( ) ) ;
rank: 233
score: 99.01231166294643
patch: if ( Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ( ; )
rank: 233
score: 98.94420623779297
patch: if ( Node CaMeL Util . is CaMeL Na CaMeL N ( n ) )
rank: 233
score: 98.6867167154948
patch: return KILL . KILL . KILL . KILL . ; _
rank: 233
score: 98.6768798828125
patch: return get CaMeL Runtime ( ) . KILL ;
rank: 233
score: 98.21330261230469
patch: return ; . KILL return KILL ;
rank: 234
score: 99.39697265625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( child CaMeL Value . get CaMeL Parent ( ) ) ;
rank: 234
score: 99.28456182065217
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( parent , n . get CaMeL Parent ( ) ) ;
rank: 234
score: 99.282001953125
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) , variable ) ;
rank: 234
score: 99.24517657305744
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ,
rank: 234
score: 98.6866122159091
patch: return this . KILL . KILL . KILL ; ;
rank: 234
score: 98.67676798502605
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ; ;
rank: 234
score: 98.21267361111111
patch: return false ; return KILL . KILL ;
rank: 235
score: 99.38101981026786
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ;
rank: 235
score: 99.284423828125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 235
score: 99.28118341619319
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) &&
rank: 235
score: 99.01130756578948
patch: throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ;
rank: 235
score: 98.94253058182566
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ) . ; }
rank: 235
score: 98.68587239583333
patch: return get CaMeL Current CaMeL Node ( ) . KILL ;
rank: 235
score: 98.67658996582031
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ / 1 . null ) ;
rank: 235
score: 98.21230643136161
patch: return KILL . KILL . KILL
rank: 236
score: 99.38092672413794
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Node ( ) , variable ) ;
rank: 236
score: 99.28429066051136
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) . get CaMeL Parent ( ) ) ;
rank: 236
score: 98.68532307942708
patch: return Node CaMeL Util . get CaMeL Instance KILL ) ;
rank: 236
score: 98.67628580729166
patch: throw new Runtime CaMeL Exception ( $STRING$ + node . get CaMeL String ;
rank: 236
score: 98.20940483940973
patch: return KILL . KILL . KILL / ;
rank: 237
score: 99.38075580018939
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) , variable ) ;
rank: 237
score: 99.28423828125
patch: return Control CaMeL Flow CaMeL Graph . this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 237
score: 99.27884674072266
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ;
rank: 237
score: 99.2444484544837
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) {
rank: 237
score: 99.01009427584134
patch: throw new No CaMeL Such CaMeL Method CaMeL Error ( ) ;
rank: 237
score: 98.9422274502841
patch: return Double . value CaMeL Of ( n . get CaMeL String ( ) ) . double CaMeL Value ( ;
rank: 237
score: 98.68528238932292
patch: return parent . get CaMeL Root CaMeL Node ( ) ;
rank: 237
score: 98.67582563920455
patch: throw new Runtime CaMeL Exception . Exception ( $STRING$ ;
rank: 237
score: 98.20921325683594
patch: return KILL . KILL . NO ;
rank: 238
score: 99.39665784333882
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Cfg ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 238
score: 99.3798195167824
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . variable ) ;
rank: 238
score: 99.28397042410714
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! n . get CaMeL Parent ( ) ) ;
rank: 238
score: 99.27874286358173
patch: if ( ! this . Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) {
rank: 238
score: 99.24430338541667
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ) ;
rank: 238
score: 99.00986153738839
patch: return $STRING$ . equals ( n . get CaMeL String ( ) ;
rank: 238
score: 98.9421157836914
patch: return n . get CaMeL Result ( ) . get CaMeL Result ( ) ;
rank: 238
score: 98.67556966145834
patch: throw new Illegal CaMeL State CaMeL Exception . Error ( $STRING$ + $STRING$ ;
rank: 238
score: 98.20633951822917
patch: return ; = KILL . KILL ; ;
rank: 239
score: 99.39644949776786
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n . get CaMeL First CaMeL Child ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 239
score: 99.37956436820652
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( $STRING$ , variable ) ;
rank: 239
score: 99.28372325067934
patch: return ! ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 239
score: 99.24380154079861
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent ) ) ;
rank: 239
score: 99.00984409877232
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ) ;
rank: 239
score: 98.94173177083333
patch: return n . get CaMeL Result ( ) . get CaMeL Result ( ) . get CaMeL Result ( ;
rank: 239
score: 98.67485809326172
patch: throw new Runtime CaMeL Exception ( $STRING$ + this . get CaMeL Message ( ;
rank: 239
score: 98.20600721571181
patch: return new ) . this . KILL ;
rank: 240
score: 99.39642693014706
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( variable ) ) ;
rank: 240
score: 99.2783203125
patch: return callback . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 240
score: 99.24366760253906
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 240
score: 98.9416170987216
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) . int CaMeL Value ( ) ;
rank: 240
score: 98.67887369791667
patch: return . KILL . KILL . KILL . KILL ; ;
rank: 240
score: 98.67449544270833
patch: throw new Runtime CaMeL Exception ( this . get CaMeL Message ( ) ;
rank: 240
score: 98.20444161551339
patch: return KILL ; return this ;
rank: 241
score: 99.39625343116555
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Graph ( ) . get CaMeL Parent ( ) ) ;
rank: 241
score: 99.37911283052884
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . ) ;
rank: 241
score: 99.28329573006465
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( index , n . get CaMeL Parent ( ) ) ;
rank: 241
score: 99.24352213541667
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ; }
rank: 241
score: 98.94026692708333
patch: return Integer . value CaMeL Of ( n . get CaMeL String ( ) ) . int CaMeL Value ;
rank: 241
score: 98.67844645182292
patch: return false ; return KILL . KILL . KILL ; }
rank: 241
score: 98.67395833333333
patch: throw new Runtime CaMeL Exception . Runtime CaMeL Exception ( $STRING$ + $STRING$ ;
rank: 241
score: 98.20343017578125
patch: return KILL . KILL . class ;
rank: 242
score: 99.39613743832237
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 242
score: 99.37877236643145
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 242
score: 99.28312735721983
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ) ;
rank: 242
score: 99.277890625
patch: return declarations . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 242
score: 99.00967567845395
patch: if ( Node CaMeL Util . is CaMeL Primitive ( n . get CaMeL String ( ) ;
rank: 242
score: 98.940185546875
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . compare CaMeL To ( ;
rank: 242
score: 98.67759195963542
patch: throw new Runtime CaMeL Exception ( Integer . class ) ;
rank: 242
score: 98.67337036132812
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( KILL ) ;
rank: 242
score: 98.20102945963542
patch: return new ( Double . KILL ) ;
rank: 243
score: 99.37839271282327
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Node ( ) ) ;
rank: 243
score: 99.00916290283203
patch: return node . get CaMeL Result ( ) . get CaMeL Result ( ) ;
rank: 243
score: 98.93966238839286
patch: return get CaMeL Value ( ) . get CaMeL Value ( ) . get CaMeL Value ( ) ; }
rank: 243
score: 98.67723499644886
patch: return parent . get CaMeL Property ( $STRING$ ) ;
rank: 243
score: 98.6724344889323
patch: throw new Null CaMeL Pointer CaMeL Exception ( KILL ) ;
rank: 243
score: 98.19999694824219
patch: return KILL . refs . KILL ;
rank: 244
score: 99.39594469572368
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . to CaMeL String ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 244
score: 99.27749235733695
patch: if ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) {
rank: 244
score: 99.00855848524306
patch: if ( n . get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ) )
rank: 244
score: 98.93930886008523
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ) . int CaMeL Value ( ) ;
rank: 244
score: 98.67643229166667
patch: break KILL . KILL . KILL . KILL ; } ;
rank: 244
score: 98.67198893229167
patch: System . out . println ( $STRING$ ; throw new Runtime CaMeL Exception ;
rank: 245
score: 99.39578683035714
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( null ) ;
rank: 245
score: 99.28279622395833
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) . get CaMeL String ( ) ) ;
rank: 245
score: 99.00816932091347
patch: return value CaMeL Of ( Node CaMeL Util . KILL ) ;
rank: 245
score: 98.93925170898437
patch: return n . get CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Node ;
rank: 245
score: 98.6759541829427
patch: logger . out . println ( $STRING$ ; return false ;
rank: 245
score: 98.67130279541016
patch: return null ; } return null ;
rank: 245
score: 98.19984266493056
patch: return KILL . KILL . EMPTY ; ;
rank: 246
score: 99.39552815755208
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Node ( ) ) ) ;
rank: 246
score: 99.37823301373106
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . KILL , n . get CaMeL Parent ( ) ) ;
rank: 246
score: 99.282470703125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 246
score: 99.276220703125
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) return null ;
rank: 246
score: 99.243017578125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ,
rank: 246
score: 99.00770920973558
patch: if ( Node CaMeL Util . KILL . equals ( ; ;
rank: 246
score: 98.93836030505952
patch: return n . get CaMeL Value ( ) . compare CaMeL To ( n . get CaMeL String ( ;
rank: 246
score: 98.67542521158855
patch: return System . get CaMeL Instance ( ) . KILL ;
rank: 246
score: 98.19973754882812
patch: return false ; } return KILL ;
rank: 247
score: 99.3954190340909
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 247
score: 99.37811869959677
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , Node CaMeL Util . get CaMeL Parent ( ) ) ;
rank: 247
score: 99.28236790707237
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 247
score: 99.27506713867187
patch: return new super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 247
score: 99.24285333806819
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ;
rank: 247
score: 99.00655110677083
patch: if ( n . get CaMeL String ( ) . starts CaMeL With ( $STRING$ ) ;
rank: 247
score: 98.6746493252841
patch: return this . KILL . KILL . KILL . ;
rank: 247
score: 98.67094421386719
patch: throw new Runtime CaMeL Exception ( KILL . get CaMeL Property ( $STRING$ ) ;
rank: 247
score: 98.19949340820312
patch: return KILL + KILL + KILL ;
rank: 248
score: 99.39527652138158
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL First CaMeL Child ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 248
score: 99.37790178571429
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent CaMeL Node ( ) , variable ) ;
rank: 248
score: 99.27451578776042
patch: return ! ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 248
score: 99.24245198567708
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node ) ) ;
rank: 248
score: 99.00654740767045
patch: switch ( n . get CaMeL Type ( ) )
rank: 248
score: 98.93738511029412
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ) ) ;
rank: 248
score: 98.67376098632812
patch: return KILL . KILL == KILL . KILL ;
rank: 248
score: 98.67070007324219
patch: throw new Runtime CaMeL Exception ( $STRING$ + ref . to CaMeL String ( ;
rank: 248
score: 98.19908142089844
patch: return KILL KILL ; return KILL ;
rank: 249
score: 99.39525257457386
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Next ( ) ) ) ;
rank: 249
score: 99.37759104082662
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 249
score: 99.28197180706522
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) {
rank: 249
score: 99.2741796875
patch: return Runtime . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 249
score: 99.24222237723214
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n
rank: 249
score: 99.0059455422794
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + n . get CaMeL String ;
rank: 249
score: 98.9372225674716
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ) . boolean CaMeL Value ( ;
rank: 249
score: 98.67289225260417
patch: return name . KILL . KILL . KILL . KILL ;
rank: 249
score: 98.66956787109375
patch: throw new Runtime CaMeL Exception ( null ) ;
rank: 249
score: 98.19705200195312
patch: return KILL . KILL ; } ;
rank: 250
score: 99.39517106681035
patch: return Node CaMeL Util . is CaMeL Lhs ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 250
score: 99.37685546875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . n . get CaMeL Parent ( ) ) ;
rank: 250
score: 99.24167351973684
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( $STRING$ ) ) ;
rank: 250
score: 99.00330268012152
patch: if ( Node CaMeL Util . KILL . equals ( Node CaMeL Util . KILL ) )
rank: 250
score: 98.67287190755208
patch: return KILL . KILL . KILL . KILL ; ; ;
rank: 250
score: 98.66954040527344
patch: throw new Runtime CaMeL Exception ( $STRING$ + KILL . to CaMeL String ( ;
rank: 250
score: 98.19596862792969
patch: return Compiler . KILL . KILL ;
rank: 251
score: 99.39515904017857
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n ;
rank: 251
score: 99.37679390285327
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( this , variable ) ;
rank: 251
score: 99.28172348484848
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 251
score: 99.273388671875
patch: return this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n . get CaMeL Parent ( ) ) ;
rank: 251
score: 99.24144028172348
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . KILL . get CaMeL Parent ( ) ) ;
rank: 251
score: 99.0032246907552
patch: throw new Null CaMeL Pointer CaMeL Exception ( ) ; }
rank: 251
score: 98.67269287109374
patch: return KILL . get CaMeL Symbol ( ) ;
rank: 251
score: 98.66941731770834
patch: return get CaMeL Runtime ( ) . KILL . KILL . KILL . ;
rank: 251
score: 98.19550432477679
patch: return super . return KILL ;
rank: 252
score: 99.39473684210526
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 252
score: 99.37665005387932
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill , variable ) ;
rank: 252
score: 99.28127712673611
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First ( ) ) ;
rank: 252
score: 99.273271484375
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n ) ) {
rank: 252
score: 99.0029296875
patch: return value CaMeL Of ( n . get CaMeL String CaMeL Value ( ) ) ;
rank: 252
score: 98.9365567294034
patch: return Short . value CaMeL Of ( n . get CaMeL Value ( ) ) . boolean CaMeL Value ( ;
rank: 252
score: 98.67212931315105
patch: logger . out . println ( $STRING$ + return ) ;
rank: 252
score: 98.66918073381696
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + return ) ;
rank: 252
score: 98.19483184814453
patch: return new ( KILL . KILL ;
rank: 253
score: 99.37644264914773
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 253
score: 99.272646484375
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 253
score: 99.24097931690706
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( this ) ) ;
rank: 253
score: 99.00283578725961
patch: if ( Node CaMeL Util . KILL . equals ( ; }
rank: 253
score: 98.93622381036931
patch: return n . get CaMeL Node ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ;
rank: 253
score: 98.67139689127605
patch: break KILL . KILL . KILL . KILL . . ;
rank: 253
score: 98.66861979166667
patch: return KILL . KILL . KILL . KILL . KILL . KILL = ;
rank: 253
score: 98.19473266601562
patch: return Generator . KILL . KILL ;
rank: 254
score: 99.39413557381465
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . KILL , variable ) ;
rank: 254
score: 99.272255859375
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL String ( ) , variable ) ;
rank: 254
score: 99.24079241071429
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . KILL . get CaMeL First CaMeL Child ( ) ) ;
rank: 254
score: 99.00266520182292
patch: if ( Node CaMeL Util . KILL . KILL . equals CaMeL Ignore CaMeL Case ( ;
rank: 254
score: 98.93618629092262
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ; }
rank: 254
score: 98.67107599431819
patch: return parent . KILL KILL . KILL . KILL ;
rank: 254
score: 98.66353352864583
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $STRING$ + $STRING$ ;
rank: 254
score: 98.19469342912946
patch: return KILL ; return true ;
rank: 255
score: 99.28077855603448
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable . get CaMeL String ( ) ) ;
rank: 255
score: 99.27169667119566
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL First CaMeL Child ( ) ) ) {
rank: 255
score: 99.24078369140625
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ; }
rank: 255
score: 99.00236680772569
patch: return Thread . current CaMeL Thread ( ) . get CaMeL Context CaMeL Class CaMeL Loader ;
rank: 255
score: 98.93616303943452
patch: return KILL . get CaMeL Value ( ) . equals ( n . get CaMeL String ( ) ) ;
rank: 255
score: 98.66336763822116
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ? $STRING$ ;
rank: 255
score: 98.19384002685547
patch: return KILL . KILL . min ;
rank: 256
score: 99.28065490722656
patch: return this . ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 256
score: 99.27127779447116
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Node CaMeL Util . get CaMeL String ( n ) ) ;
rank: 256
score: 99.2405254657452
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL
rank: 256
score: 99.0015933388158
patch: if ( node . get CaMeL Value CaMeL Type ( ) == Node CaMeL Util . KILL )
rank: 256
score: 98.93421519886364
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . to CaMeL String ( ;
rank: 256
score: 98.66924493963069
patch: return - KILL . KILL . KILL . KILL ;
rank: 256
score: 98.66238403320312
patch: return new Illegal CaMeL State CaMeL Exception ( $STRING$ ; }
rank: 256
score: 98.19376627604167
patch: return scope . KILL ;
rank: 257
score: 99.39367959665698
patch: return Node CaMeL Util . ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 257
score: 99.37574637276786
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ) ;
rank: 257
score: 99.28065321180556
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) )
rank: 257
score: 99.27107543945313
patch: state = Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 257
score: 99.00152909128289
patch: if ( Node CaMeL Util . is CaMeL Constant ( n . get CaMeL String ( ) ;
rank: 257
score: 98.93386840820312
patch: if ( node . get CaMeL Type ( ) == Node CaMeL Util . ;
rank: 257
score: 98.66923014322917
patch: return super . KILL . KILL . KILL == KILL ;
rank: 257
score: 98.6621805826823
patch: throw new Runtime CaMeL Exception ( $STRING$ + type ) ;
rank: 257
score: 98.19167751736111
patch: return KILL . KILL ; . KILL .
rank: 258
score: 99.28060176454741
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) )
rank: 258
score: 99.00048014322917
patch: return Integer . value CaMeL Of ( Node CaMeL Util . KILL ) ;
rank: 258
score: 98.93351236979167
patch: return Character . to CaMeL Lower CaMeL Case ( n . get CaMeL String ( ) ;
rank: 258
score: 98.66879272460938
patch: return null . KILL . KILL . KILL ; } ;
rank: 258
score: 98.66106708233173
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ : $STRING$ ;
rank: 258
score: 98.19142150878906
patch: return ; = . . KILL ;
rank: 259
score: 99.39351196289063
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph ;
rank: 259
score: 99.28034920528017
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) )
rank: 259
score: 99.2705608865489
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) {
rank: 259
score: 99.24037209535257
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) , variable ) ;
rank: 259
score: 98.99842744715073
patch: if ( n . get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ;
rank: 259
score: 98.93343098958333
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ;
rank: 259
score: 98.6678466796875
patch: return KILL . KILL . KILL . KILL = KILL ;
rank: 259
score: 98.66058349609375
patch: throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ ) ;
rank: 259
score: 98.19120958116319
patch: return KILL . KILL . KILL ; return
rank: 260
score: 99.3749640969669
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) , variable ) ;
rank: 260
score: 99.28032856602823
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Name ( n ) ) ;
rank: 260
score: 99.27009800502232
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 260
score: 99.2403564453125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ) ;
rank: 260
score: 98.99788411458333
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + n . get CaMeL String ( ;
rank: 260
score: 98.93282741970486
patch: return n . get CaMeL Value ( ) . trim ( ) . trim ( ) ;
rank: 260
score: 98.6673583984375
patch: return null ; return KILL . KILL . KILL ; }
rank: 260
score: 98.65960693359375
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ? ;
rank: 260
score: 98.19068060980902
patch: return KILL . KILL . FALSE ; }
rank: 261
score: 99.27941216362848
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( n . get CaMeL Parent ( ) ) ) ;
rank: 261
score: 99.26954409950658
patch: return declarations . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 261
score: 98.93223353794643
patch: return n . get CaMeL Result ( ) . get CaMeL Result ( ) . get CaMeL Value ( ;
rank: 261
score: 98.6672030362216
patch: finally { return KILL . KILL . KILL ; }
rank: 261
score: 98.19021170479911
patch: if ; { return KILL ;
rank: 262
score: 99.39295543323864
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) . get CaMeL String ( ) ) ;
rank: 262
score: 99.37453294836956
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( id , variable ) ;
rank: 262
score: 99.2695376747533
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n ) ;
rank: 262
score: 99.23943935296474
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( next ) ) ;
rank: 262
score: 98.99674718520221
patch: if ( n . get CaMeL Type ( ) == Node CaMeL Util . KILL )
rank: 262
score: 98.93219549005681
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . trim ( ) ; }
rank: 262
score: 98.65897042410714
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + type ) ;
rank: 262
score: 98.18997531467014
patch: return KILL . KILL . IF KILL ;
rank: 263
score: 99.37418387276786
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 263
score: 99.2788718894676
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) {
rank: 263
score: 99.26929728190105
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL Parent ( n ) ) ;
rank: 263
score: 99.23935678842905
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 263
score: 98.9317626953125
patch: return n . get CaMeL String ( ) . equals ( n . get CaMeL String ( ) )
rank: 263
score: 98.6651123046875
patch: throw new Runtime CaMeL Exception ( return ) ;
rank: 263
score: 98.65860188802084
patch: throw new Illegal CaMeL Argument CaMeL Exception . Exception ( $STRING$ + $STRING$ ;
rank: 263
score: 98.18990071614583
patch: return KILL . TRUE ;
rank: 264
score: 99.39237837357955
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL String ( ) ) ) ;
rank: 264
score: 99.37396425189394
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) ) ;
rank: 264
score: 99.26919376148896
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n ) ;
rank: 264
score: 99.23890445106908
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( next ) ) ;
rank: 264
score: 98.99595424107143
patch: return n . get CaMeL String ( ) . trim ( ) ;
rank: 264
score: 98.66414388020833
patch: return $STRING$ ; return KILL . KILL . KILL ; }
rank: 264
score: 98.65818093039773
patch: throw new Illegal CaMeL State CaMeL Exception return $STRING$ ;
rank: 264
score: 98.18949890136719
patch: return Long . KILL . KILL ;
rank: 265
score: 99.39234683388158
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Parent ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 265
score: 99.27882434475806
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) , variable ) ;
rank: 265
score: 99.2691796875
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . READ ) ;
rank: 265
score: 99.23871440272177
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . n . get CaMeL Parent ( ) ) ;
rank: 265
score: 98.99593353271484
patch: if ( Node CaMeL Util . KILL . starts CaMeL With ( n ) )
rank: 265
score: 98.9310791015625
patch: return n . get CaMeL Result ( ) . get CaMeL Value ( ) . get CaMeL Value ;
rank: 265
score: 98.6634521484375
patch: return this . KILL . KILL . KILL != KILL ;
rank: 265
score: 98.65758167613636
patch: return new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 265
score: 98.18910435267857
patch: if ; { return null ;
rank: 266
score: 99.39221561316288
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Current CaMeL Node ( ) ) ;
rank: 266
score: 99.37393301504629
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . n , variable ) ;
rank: 266
score: 99.27881920855978
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable . get CaMeL String ( ) ) ;
rank: 266
score: 99.2680133322011
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , $STRING$ ) ;
rank: 266
score: 99.238046875
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . n . get CaMeL Parent ( ) ) ;
rank: 266
score: 98.99514431423611
patch: if ( Node CaMeL Util . KILL . equals CaMeL Ignore CaMeL Case ( node ) )
rank: 266
score: 98.93101917613636
patch: return parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ;
rank: 266
score: 98.66303045099431
patch: logger . out . println ( $STRING$ ; break ;
rank: 266
score: 98.65746053059895
patch: System . err . println ( $STRING$ ; return null ;
rank: 266
score: 98.18853759765625
patch: return KILL . KILL . this ;
rank: 267
score: 99.37391880580357
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( ) , n ) ;
rank: 267
score: 99.27868200231481
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) , variable ) ;
rank: 267
score: 99.26751953125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 267
score: 99.2379150390625
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL
rank: 267
score: 98.99404471261161
patch: return value . equals ( n . get CaMeL String ( ) ;
rank: 267
score: 98.93100992838542
patch: return n . get CaMeL Result ( ) . get CaMeL Value ( ) . equals ;
rank: 267
score: 98.65703938802083
patch: System . err . println ( $STRING$ + Integer . MAX _ VALUE ;
rank: 267
score: 98.18795013427734
patch: return KILL . MAX . KILL ;
rank: 268
score: 99.373876953125
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 268
score: 99.27868200231481
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) , variable ) ;
rank: 268
score: 99.26747639973958
patch: state = Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 268
score: 98.99248860677083
patch: return n . get CaMeL Property ( Node CaMeL Util . KILL ) ;
rank: 268
score: 98.66202799479167
patch: logger . out . println ( $STRING$ ; return null ;
rank: 268
score: 98.65596516927083
patch: System . err . println ( $STRING$ ; throw new Runtime CaMeL Exception ;
rank: 268
score: 98.18563079833984
patch: return $STRING$ . KILL . KILL ;
rank: 269
score: 99.27782093394886
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL Parent ( ) ) )
rank: 269
score: 98.99163818359375
patch: throw new No CaMeL Such CaMeL Method CaMeL Error ( this ) ;
rank: 269
score: 98.93022918701172
patch: return this . value . equals ( n . get CaMeL String ( ) ;
rank: 269
score: 98.66074625651042
patch: return KILL . KILL . KILL . KILL . ERROR ;
rank: 269
score: 98.65564982096355
patch: throw new Runtime CaMeL Exception . Exception ( KILL ) ;
rank: 269
score: 98.18512641059027
patch: return ( Integer ; . true ) ;
rank: 270
score: 99.27775626346983
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL String ( ) ) )
rank: 270
score: 99.26669311523438
patch: return ! is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 270
score: 99.23693517736487
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent ) ) ;
rank: 270
score: 98.9914909811581
patch: return Boolean . value CaMeL Of ( Boolean . value CaMeL Of ( Boolean . ;
rank: 270
score: 98.93016415550595
patch: return node . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 270
score: 98.66072591145833
patch: return new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 270
score: 98.18452671595982
patch: return new ( return ) ;
rank: 271
score: 99.27755576685855
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 271
score: 99.2666766826923
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Node CaMeL Util . is CaMeL Lhs ( n ) ) ;
rank: 271
score: 99.2368876139323
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL
rank: 271
score: 98.93010118272569
patch: return n . get CaMeL Parent CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 271
score: 98.66046142578125
patch: return this . KILL . KILL . KILL . ; ;
rank: 271
score: 98.65445382254464
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $NUMBER$ ) ;
rank: 271
score: 98.18444061279297
patch: return KILL . KILL . BOTH ;
rank: 272
score: 99.265869140625
patch: return null . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL String ( ) ) ;
rank: 272
score: 99.23678341427365
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ,
rank: 272
score: 98.989501953125
patch: if ( Node CaMeL Util . KILL . equals ( ; n . get CaMeL String ( ;
rank: 272
score: 98.92998712713069
patch: return Boolean . value CaMeL Of ( n . get CaMeL Boolean ( ) ) . boolean CaMeL Value ( ;
rank: 272
score: 98.66036987304688
patch: return Node CaMeL Util . KILL . KILL . EMPTY ;
rank: 272
score: 98.65434126420455
patch: throw new Runtime CaMeL Exception ( $STRING$ + name ;
rank: 272
score: 98.18440755208333
patch: return new $STRING$ . this . KILL ;
rank: 273
score: 99.37301199776786
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 273
score: 99.27684294871794
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 273
score: 99.2658627158717
patch: return Factory . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 273
score: 99.2367412860577
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( $STRING$ ) ) ;
rank: 273
score: 98.98885305304276
patch: throw new Runtime CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) + $STRING$ ;
rank: 273
score: 98.92910766601562
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . trim ( ;
rank: 273
score: 98.66009521484375
patch: return KILL . KILL . KILL . KILL ; ) ;
rank: 273
score: 98.65407889229911
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ - 1 ) ;
rank: 273
score: 98.18381076388889
patch: throw new KILL . Exception ( $STRING$ ;
rank: 274
score: 99.3905719259511
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( null , variable ) ;
rank: 274
score: 99.3722915649414
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 274
score: 99.27669949001736
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Name ( n . get CaMeL Parent ( ) ) ) ;
rank: 274
score: 99.26560465494792
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n ) ;
rank: 274
score: 99.23660481770834
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ; }
rank: 274
score: 98.98875427246094
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + n ) ;
rank: 274
score: 98.65874689275569
patch: return null . KILL . KILL . KILL ; }
rank: 274
score: 98.18350655691964
patch: return false ; return $STRING$ ;
rank: 275
score: 99.27647181919643
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 275
score: 99.26462720788044
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) .
rank: 275
score: 98.98726654052734
patch: return node . get CaMeL Parent ( ) . get CaMeL Value ( ) ;
rank: 275
score: 98.92803955078125
patch: return Long . value CaMeL Of ( n . get CaMeL Value ( ) ) . ;
rank: 275
score: 98.65821329752605
patch: break . KILL . KILL . KILL . KILL ; }
rank: 275
score: 98.65018920898437
patch: throw new Runtime CaMeL Exception ( $STRING$ ; ;
rank: 275
score: 98.1826883951823
patch: return new ( ) ;
rank: 276
score: 99.37207818800404
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ; }
rank: 276
score: 99.27626953125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 276
score: 99.26409040178571
patch: if ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) {
rank: 276
score: 99.23622914907095
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ,
rank: 276
score: 98.98675215871711
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + n . get CaMeL String ;
rank: 276
score: 98.92791069878473
patch: return Boolean . value CaMeL Of ( n . get CaMeL Value ( ) ) . ;
rank: 276
score: 98.65774536132812
patch: return Integer . get CaMeL Instance ( ) . KILL ;
rank: 276
score: 98.65013776506696
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name ) ;
rank: 276
score: 98.18180629185268
patch: return ; . return null ;
rank: 277
score: 99.39010487432066
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 277
score: 99.37200372869319
patch: return return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 277
score: 99.26387746710526
patch: return this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ;
rank: 277
score: 99.23610082165948
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ) ;
rank: 277
score: 98.98635382401316
patch: if ( Node CaMeL Util . KILL . equals ( ; Node CaMeL Util . KILL ) )
rank: 277
score: 98.92766462053571
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ) ) . int CaMeL Value ;
rank: 277
score: 98.6568603515625
patch: return . KILL . KILL . KILL . KILL ; }
rank: 277
score: 98.64846801757812
patch: return Integer . value CaMeL Of ( ) ;
rank: 277
score: 98.17978922526042
patch: return KILL . KILL . KILL * ;
rank: 278
score: 99.3898074127907
patch: return Node CaMeL Util . ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 278
score: 99.37200164794922
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ;
rank: 278
score: 99.27610948350694
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) ) ;
rank: 278
score: 99.23605186060855
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) , variable ) ;
rank: 278
score: 98.98589324951172
patch: return ( Node CaMeL Util . KILL . KILL . KILL . KILL ) ;
rank: 278
score: 98.92704503676471
patch: if ( Node CaMeL Util . ; else { return Node CaMeL Util . ; }
rank: 278
score: 98.65631103515625
patch: return this . KILL . KILL . KILL . . ;
rank: 278
score: 98.64811401367187
patch: throw new Runtime CaMeL Exception ( ; ) ;
rank: 278
score: 98.17970275878906
patch: return Visitor . KILL . KILL ;
rank: 279
score: 99.38963099888393
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( n ) ) ;
rank: 279
score: 99.27603952508224
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) )
rank: 279
score: 99.23601973684211
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) , variable ) ;
rank: 279
score: 98.92660861545139
patch: return Short . value CaMeL Of ( n . get CaMeL Value ( ) ) . ;
rank: 279
score: 98.65626220703125
patch: return parent . get CaMeL Instance ( ) ;
rank: 279
score: 98.64735107421875
patch: return return null ;
rank: 279
score: 98.179443359375
patch: return this . KILL . KILL ; ;
rank: 280
score: 99.27587890625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( this , variable ) ;
rank: 280
score: 99.26344129774306
patch: return . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 280
score: 99.23583984375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , ) ) ;
rank: 280
score: 98.9846923828125
patch: return n . get CaMeL String ( ) . equals ( $STRING$ ) ;
rank: 280
score: 98.926513671875
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ; }
rank: 280
score: 98.65464274088542
patch: return KILL KILL . KILL . KILL . KILL ; ;
rank: 280
score: 98.64673790564903
patch: throw new Runtime CaMeL Exception ( $STRING$ + $STRING$ + $STRING$ ;
rank: 280
score: 98.17920600043402
patch: return super . KILL . KILL ; ;
rank: 281
score: 99.27586534288194
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 281
score: 99.23577117919922
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 281
score: 98.98398951480263
patch: if ( n . get CaMeL Value CaMeL Type ( ) != Node CaMeL Util . KILL )
rank: 281
score: 98.6531270345052
patch: return true ; return KILL . KILL . KILL ; }
rank: 281
score: 98.64557354266827
patch: return KILL . KILL . KILL . KILL KILL . KILL ;
rank: 281
score: 98.17801666259766
patch: return Double . MAX . KILL ;
rank: 282
score: 99.263203125
patch: throw super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL String ( ) ) ;
rank: 282
score: 99.23561497738487
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ) ;
rank: 282
score: 98.98298475477431
patch: throw new Internal CaMeL Error ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 282
score: 98.92469787597656
patch: return n . get CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 282
score: 98.64549763997395
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ; , ;
rank: 282
score: 98.17794799804688
patch: return count . KILL . KILL ;
rank: 283
score: 99.38899477066532
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Next ( ) ) ;
rank: 283
score: 99.263193359375
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) {
rank: 283
score: 99.23549933182566
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) , variable ) ;
rank: 283
score: 98.98273577008929
patch: return n . get CaMeL String ( ) . equals ( $STRING$ ;
rank: 283
score: 98.923974609375
patch: return node . get CaMeL Parent ( ) . get CaMeL Node ( ) . get CaMeL Node ;
rank: 283
score: 98.651611328125
patch: throw new Illegal CaMeL Argument CaMeL Exception KILL ) ;
rank: 283
score: 98.64528401692708
patch: throw new Runtime CaMeL Exception ( Boolean . FALSE ) ;
rank: 283
score: 98.17765808105469
patch: return KILL . KILL . VOID ;
rank: 284
score: 99.38889219702745
patch: if ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL
rank: 284
score: 99.37061941964286
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 284
score: 99.27490234375
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ) ;
rank: 284
score: 99.2627286044034
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n . get CaMeL String ( ) ) ;
rank: 284
score: 99.23540900735294
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ,
rank: 284
score: 98.98262293198529
patch: System . err . println ( $STRING$ + n . get CaMeL String ( ) ;
rank: 284
score: 98.9238525390625
patch: return n . get CaMeL Value ( ) ;
rank: 284
score: 98.65064493815105
patch: return super . KILL . KILL . KILL . EMPTY ;
rank: 284
score: 98.64488118489584
patch: throw new Runtime CaMeL Exception ( $STRING$ + Integer . MAX _ VALUE ;
rank: 284
score: 98.17749786376953
patch: return KILL . KILL . ; ;
rank: 285
score: 99.38881703969595
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 285
score: 99.370361328125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Node ( ) ) ;
rank: 285
score: 99.26164899553571
patch: return super . KILL . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 285
score: 99.23511482007575
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) ;
rank: 285
score: 98.982421875
patch: if ( node . get CaMeL Type ( ) == Node CaMeL Util . KILL )
rank: 285
score: 98.92323931525735
patch: return Node CaMeL Util . ; } else { return Node CaMeL Util . ; }
rank: 285
score: 98.6505615234375
patch: return KILL . KILL ; } return false ;
rank: 285
score: 98.64388834635416
patch: throw new Runtime CaMeL Exception ( $STRING$ + this . to CaMeL String ;
rank: 285
score: 98.17747497558594
patch: return KILL . KILL . KILL Variable
rank: 286
score: 99.37000621448864
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , ) ;
rank: 286
score: 99.27451171875
patch: ret = Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 286
score: 99.26160888671875
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 286
score: 99.23475406044408
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ; }
rank: 286
score: 98.98230997721355
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + ;
rank: 286
score: 98.92250366210938
patch: return Character . to CaMeL Char CaMeL Array ( n . get CaMeL Line CaMeL Number ( ) ;
rank: 286
score: 98.64993286132812
patch: return get CaMeL Scope ( ) . KILL == KILL ;
rank: 286
score: 98.17708333333333
patch: return Integer . TRUE ;
rank: 287
score: 99.38867950439453
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( n , variable ) ) ;
rank: 287
score: 99.27447102864583
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Name ( n ) ) ;
rank: 287
score: 99.26115616508152
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Type ( ) ) ;
rank: 287
score: 99.23435924899194
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Instance ( ) ) ;
rank: 287
score: 98.97995174632354
patch: return ( Node CaMeL Util . KILL . KILL . KILL . KILL . KILL ;
rank: 287
score: 98.64903767903645
patch: return KILL . KILL . KILL . KILL . true ;
rank: 287
score: 98.64283336292614
patch: throw new Illegal CaMeL Argument CaMeL Exception return $STRING$ ;
rank: 287
score: 98.17495727539062
patch: return KILL . KILL . KILL ,
rank: 288
score: 99.36924164870689
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable )
rank: 288
score: 99.27442248114224
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable . get CaMeL Parent ( ) ) ;
rank: 288
score: 99.26110309103261
patch: = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 288
score: 99.23407303659539
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 288
score: 98.97946401742789
patch: if ( Node CaMeL Util . KILL . equals ( ; )
rank: 288
score: 98.9210537997159
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Root ( ) ;
rank: 288
score: 98.6488924893466
patch: return ! KILL . KILL . KILL . KILL ;
rank: 288
score: 98.64167924360795
patch: throw new Runtime CaMeL Exception ( $STRING$ : $STRING$ ;
rank: 288
score: 98.17345319475446
patch: if return KILL . KILL ;
rank: 289
score: 99.38850483141448
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( null ) ) ;
rank: 289
score: 99.36872209821429
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . READ , n . get CaMeL Parent ( ) ) ;
rank: 289
score: 99.27428436279297
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL First CaMeL Child ( n ) ) ;
rank: 289
score: 99.23401750837054
patch: return n . get CaMeL Parent ( ) . Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ;
rank: 289
score: 98.97833573190789
patch: if ( n . get CaMeL Value CaMeL Type ( ) == Node CaMeL Util . KILL ;
rank: 289
score: 98.9206901999081
patch: return Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ;
rank: 289
score: 98.64816284179688
patch: return this . KILL . KILL . KILL . EMPTY ;
rank: 289
score: 98.64110310872395
patch: throw new Illegal CaMeL Argument CaMeL Exception . KILL ) ;
rank: 289
score: 98.17185756138393
patch: return super . KILL KILL ;
rank: 290
score: 99.38847448470744
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( variable ) ) ) ;
rank: 290
score: 99.36813354492188
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Node CaMeL Util . get CaMeL Parent ( n ) ) ;
rank: 290
score: 99.27407949942129
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , n . get CaMeL Parent ( ) ) ;
rank: 290
score: 99.25908203125
patch: return KILL . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 290
score: 99.23297440378289
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ) ;
rank: 290
score: 98.97797594572368
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . to CaMeL String ( ) ;
rank: 290
score: 98.92053833007813
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + n . get CaMeL Message ( ) ) ;
rank: 290
score: 98.64718627929688
patch: logger . out . println ( $STRING$ ; return true ;
rank: 290
score: 98.6404296875
patch: throw new Runtime CaMeL Exception ( $STRING$ + System . to CaMeL String ;
rank: 290
score: 98.17113494873047
patch: throw KILL . KILL . FALSE ;
rank: 291
score: 99.38831829202586
patch: return Control CaMeL Flow CaMeL Graph . get CaMeL Graph ( ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 291
score: 99.3677116842831
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL First CaMeL Child ( n ) , variable ) ;
rank: 291
score: 99.27386067708333
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! n . get CaMeL First CaMeL Child ( ) ) ;
rank: 291
score: 99.2589695142663
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Next ( ) ) ;
rank: 291
score: 98.97768147786458
patch: throw new Runtime CaMeL Exception ( $STRING$ + n . to CaMeL String ( ) ) ;
rank: 291
score: 98.9203213778409
patch: return Integer . value CaMeL Of ( n . get CaMeL String ( ) ) . int CaMeL Value ( )
rank: 291
score: 98.64024000901442
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ;
rank: 291
score: 98.1709213256836
patch: return KILL . KILL . TYPE ;
rank: 292
score: 99.3879727450284
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) . get CaMeL Parent ( ) ) ;
rank: 292
score: 99.25895421645221
patch: return this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 292
score: 98.97612448299633
patch: switch ( n . get CaMeL Class ( ) . get CaMeL Name ( ) ;
rank: 292
score: 98.63967660757211
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + $STRING$ ;
rank: 292
score: 98.17083740234375
patch: return ; . KILL .
rank: 293
score: 99.38795823317308
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) , n ) ;
rank: 293
score: 99.36686905570652
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , $STRING$ ) ;
rank: 293
score: 99.27324387122844
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( this , n . get CaMeL Parent ( ) ) ;
rank: 293
score: 99.232099609375
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL
rank: 293
score: 98.97563620174633
patch: if ( Position . KILL . equals ( n . get CaMeL String ( ) ;
rank: 293
score: 98.91967163085937
patch: if ( Node CaMeL Util . is CaMeL Anonymous ( n . get CaMeL Parent ( ) ) )
rank: 293
score: 98.6459248860677
patch: result . return KILL . KILL . KILL . KILL ;
rank: 293
score: 98.63950892857143
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + parent ) ;
rank: 293
score: 98.17068481445312
patch: return KILL . KILL . ; .
rank: 294
score: 99.36678059895833
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Node ( ) ) ;
rank: 294
score: 99.27299230238971
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( this , variable ) ;
rank: 294
score: 99.25814453125
patch: return scope . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 294
score: 98.97529039884868
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ( ; }
rank: 294
score: 98.64546342329545
patch: if return KILL . KILL . KILL . KILL ;
rank: 294
score: 98.63864571707589
patch: return KILL . KILL . KILL . KILL . KILL . ; ;
rank: 294
score: 98.16954040527344
patch: return KILL . KILL ; ; }
rank: 295
score: 99.38739776611328
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( n ) , variable ) ;
rank: 295
score: 99.36677734375
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . n ) ;
rank: 295
score: 99.27257952008928
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 295
score: 99.25680409307066
patch: return ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 295
score: 98.97491096047794
patch: return n . get CaMeL String CaMeL Value ( ) . equals ( $STRING$ ) ;
rank: 295
score: 98.91834716796875
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . ; }
rank: 295
score: 98.64519708806819
patch: return KILL . get CaMeL Instance ( ) ; ;
rank: 295
score: 98.63861083984375
patch: throw new Runtime CaMeL Exception ( $STRING$ + name ) ;
rank: 295
score: 98.16860961914062
patch: return Math . KILL ;
rank: 296
score: 99.36625744047619
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n ) ;
rank: 296
score: 99.23136080228366
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . } ;
rank: 296
score: 98.9748046875
patch: return KILL . contains ( n . get CaMeL String ( ) ) ;
rank: 296
score: 98.917724609375
patch: return node . get CaMeL Parent ( ) . get CaMeL Node ( ) ;
rank: 296
score: 98.64455159505208
patch: return Double . KILL . KILL . KILL . KILL ;
rank: 296
score: 98.63804274338942
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ KILL ) ;
rank: 296
score: 98.16831752232143
patch: return true ; return KILL ;
rank: 297
score: 99.36597442626953
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Node ( variable ) ) ;
rank: 297
score: 99.27232259114584
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n . get CaMeL Parent ( ) ) ;
rank: 297
score: 99.25612505744485
patch: throw is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 297
score: 99.2310726768092
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util .
rank: 297
score: 98.97466077302632
patch: if ( Node CaMeL Util . is CaMeL Letter ( n . get CaMeL String ( ) ;
rank: 297
score: 98.9176513671875
patch: return n . get CaMeL Parent CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ; }
rank: 297
score: 98.64439900716145
patch: return KILL . KILL . KILL . KILL . NO ;
rank: 297
score: 98.63674926757812
patch: throw get CaMeL Runtime ( ) . KILL ;
rank: 297
score: 98.16798400878906
patch: return KILL . KILL . out ;
rank: 298
score: 99.38665771484375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Cfg ( ) ) ) ;
rank: 298
score: 99.25514131433823
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n + variable ) ;
rank: 298
score: 98.91752697172619
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . get CaMeL String ( ) ) ; }
rank: 298
score: 98.64436848958333
patch: else return KILL . KILL . KILL . KILL ; ;
rank: 298
score: 98.63658854166667
patch: throw new Illegal CaMeL State CaMeL Exception . Exception ( $STRING$ + $STRING$ ;
rank: 298
score: 98.16783142089844
patch: return KILL . KILL . ERROR ;
rank: 299
score: 99.38663194444445
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) ) ;
rank: 299
score: 99.27198893229166
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL First ( ) ) ;
rank: 299
score: 98.97340223524306
patch: throw new Assertion CaMeL Error ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 299
score: 98.91744559151786
patch: return n . get CaMeL Var ( ) . equals ( n . get CaMeL String ( ) ) ;
rank: 299
score: 98.64317737926136
patch: return KILL . KILL ; return KILL . KILL ;
rank: 299
score: 98.63548787434895
patch: System . out . println ( $STRING$ ; return false ;
rank: 299
score: 98.16768391927083
patch: return ; . KILL ;
rank: 300
score: 99.36546325683594
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 300
score: 99.27170817057292
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL String ( ) ) ) ;
rank: 300
score: 99.2549465013587
patch: if ( ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) )
rank: 300
score: 99.2308819110577
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ) {
rank: 300
score: 98.972802734375
patch: if ( Node CaMeL Util . KILL . KILL . KILL . KILL ;
rank: 300
score: 98.641650390625
patch: return props . KILL . KILL . KILL ;
rank: 300
score: 98.63530622209821
patch: throw new Illegal CaMeL Argument CaMeL Exception . Runtime CaMeL Exception ( ;
rank: 300
score: 98.16732788085938
patch: return ( Integer ; . $NUMBER$ ;
rank: 301
score: 99.3654552641369
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable )
rank: 301
score: 99.2716648267663
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ; }
rank: 301
score: 99.25429400275735
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n ) ) {
rank: 301
score: 99.23074988162878
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL . get CaMeL First CaMeL Child ( ) ) ;
rank: 301
score: 98.9159912109375
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . get ;
rank: 301
score: 98.64101155598958
patch: return - KILL . KILL . KILL . KILL ; }
rank: 301
score: 98.63491586538461
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + 1 ;
rank: 301
score: 98.16629791259766
patch: return KILL . KILL ; KILL .
rank: 302
score: 99.38615337171052
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 302
score: 99.36538550967262
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n ) ;
rank: 302
score: 99.27163783482143
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 302
score: 99.25364087975544
patch: return && ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 302
score: 99.2304178873698
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph .
rank: 302
score: 98.9709831686581
patch: switch ( Node CaMeL Util . KILL ) { case Node CaMeL Util . KILL :
rank: 302
score: 98.91590576171875
patch: return n . get CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . get ;
rank: 302
score: 98.63467610677084
patch: throw new Runtime CaMeL Exception ( $STRING$ ? KILL . KILL . KILL ;
rank: 302
score: 98.16598510742188
patch: return KILL . KILL . ; }
rank: 303
score: 99.25351097470238
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ;
rank: 303
score: 99.23023086939102
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) , variable ) ;
rank: 303
score: 98.97029331752232
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n . ;
rank: 303
score: 98.9151252297794
patch: return n . get CaMeL Value ( ) . equals CaMeL Ignore CaMeL Case ( ;
rank: 303
score: 98.64020538330078
patch: return KILL . KILL KILL KILL ;
rank: 303
score: 98.63390299479167
patch: throw new Runtime CaMeL Exception ( $STRING$ + Integer . value CaMeL Of ;
rank: 303
score: 98.16577911376953
patch: return KILL return KILL . KILL ;
rank: 304
score: 99.3649014559659
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n ;
rank: 304
score: 99.2520039876302
patch: if ( this . Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) {
rank: 304
score: 99.23016036184211
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ) ;
rank: 304
score: 98.96780215992646
patch: throw new Internal CaMeL Error ( $STRING$ + n . get CaMeL String ( ) ;
rank: 304
score: 98.9150057705966
patch: if ( Node CaMeL Util . is CaMeL Qualified CaMeL Name ( n . get CaMeL Name ( ) ) )
rank: 304
score: 98.16410997178819
patch: return KILL . KILL . KILL . IF
rank: 305
score: 99.38530883789062
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( n . get CaMeL First CaMeL Child ( ) ) , variable ) ;
rank: 305
score: 99.36483944163604
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( n ) , variable ) ;
rank: 305
score: 98.96683995863971
patch: switch ( n . get CaMeL Class ( ) . get CaMeL Name ( ) )
rank: 305
score: 98.91487260298295
patch: return Long . value CaMeL Of ( n . get CaMeL Value ( ) ) . boolean CaMeL Value ( ;
rank: 305
score: 98.6388916015625
patch: else return KILL . KILL . KILL ; }
rank: 305
score: 98.63312174479167
patch: throw new Runtime CaMeL Exception ( $STRING$ + Thread . to CaMeL String ;
rank: 305
score: 98.16339874267578
patch: return ; = ; return KILL ;
rank: 306
score: 99.3646240234375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL First CaMeL Child ( variable ) ) ;
rank: 306
score: 99.25088500976562
patch: else if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) {
rank: 306
score: 99.23004781788794
patch: return n . get CaMeL Parent ( ) . Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 306
score: 98.96554744944854
patch: if ( Node CaMeL Util . KILL . equals CaMeL Ignore CaMeL Case ( ; }
rank: 306
score: 98.91466064453125
patch: return n . get CaMeL Result ( ) . get CaMeL Value ( ) . trim ( ) ;
rank: 306
score: 98.63878173828125
patch: return KILL . get CaMeL Parent ( ) ;
rank: 306
score: 98.63296274038461
patch: return KILL . KILL . KILL . . KILL . KILL ;
rank: 306
score: 98.16325378417969
patch: return new ( return return ) ;
rank: 307
score: 99.38412957442434
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ) ;
rank: 307
score: 99.36452811104911
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( , n . get CaMeL Parent ( ) ) ;
rank: 307
score: 99.27114762931035
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Root ( ) ) ;
rank: 307
score: 99.24876767113095
patch: return super . n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 307
score: 99.22898706896552
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 307
score: 98.96391078404018
patch: return node . get CaMeL Parent ( ) . KILL ( ) ;
rank: 307
score: 98.91380399816177
patch: return Short . value CaMeL Of ( n . get CaMeL Value ( ) ) ;
rank: 307
score: 98.63753051757813
patch: return KILL . KILL && KILL . KILL ;
rank: 307
score: 98.63191731770833
patch: throw new Illegal CaMeL State CaMeL Exception ( Exception ) ;
rank: 307
score: 98.16321672712054
patch: return Integer . . KILL ;
rank: 308
score: 99.38394657258064
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( ) , variable ) ;
rank: 308
score: 99.248046875
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , ) ;
rank: 308
score: 98.91369047619048
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) . int CaMeL Value ( ;
rank: 308
score: 98.63743896484375
patch: return this . KILL . KILL . EMPTY ;
rank: 308
score: 98.63154820033482
patch: throw new Runtime CaMeL Exception ( this . get CaMeL Runtime ( ;
rank: 308
score: 98.16306559244792
patch: return Integer . FALSE ;
rank: 309
score: 99.36403521369485
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( n ) ) ;
rank: 309
score: 99.24718656994048
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL String ( ) ) ) {
rank: 309
score: 99.22881116365132
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) , variable ) ;
rank: 309
score: 98.96196637834821
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n . ;
rank: 309
score: 98.91294860839844
patch: return n . get CaMeL Value ( ) . int CaMeL Value ( ) ;
rank: 309
score: 98.63603515625
patch: return node . get CaMeL Symbol ( ) ;
rank: 309
score: 98.63107299804688
patch: System . out . println ( $STRING$ ; return KILL ;
rank: 309
score: 98.16260528564453
patch: return KILL . KILL . IF ;
rank: 310
score: 99.36365116003788
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 310
score: 99.2707001657197
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) . get CaMeL Node ( ) ) ;
rank: 310
score: 99.24697696461396
patch: return this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 310
score: 99.22877854567308
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) {
rank: 310
score: 98.96132525275735
patch: if ( Node CaMeL Util . KILL . KILL . is CaMeL Empty ( ) )
rank: 310
score: 98.91285289417614
patch: return n . get CaMeL Node ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ) ;
rank: 310
score: 98.6357177734375
patch: throw new Runtime CaMeL Exception ( $NUMBER$ ) ;
rank: 310
score: 98.63020542689732
patch: System . out . println ( KILL . to CaMeL String ( ;
rank: 310
score: 98.16227213541667
patch: return KILL + KILL ;
rank: 311
score: 99.38334037162163
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 311
score: 99.36331176757812
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL
rank: 311
score: 99.27052100929055
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) )
rank: 311
score: 99.24660357306985
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , null ) ;
rank: 311
score: 99.22870058001894
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . KILL . get CaMeL Node ( ) ) ;
rank: 311
score: 98.96106770833333
patch: return Node CaMeL Util . get CaMeL Parent CaMeL Node ( n ) ;
rank: 311
score: 98.91284790039063
patch: return n . get CaMeL Value ( ) . equals ( n . get CaMeL String ( ) )
rank: 311
score: 98.63163248697917
patch: return KILL . KILL . KILL . KILL . IN ;
rank: 311
score: 98.63004557291667
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name + $STRING$ ;
rank: 311
score: 98.16226806640626
patch: return return $STRING$ ;
rank: 312
score: 99.3832809860642
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ;
rank: 312
score: 99.3631820678711
patch: return Node CaMeL Util . is CaMeL Lhs ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 312
score: 99.27029622395834
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First CaMeL Child ( ) )
rank: 312
score: 99.24644711143092
patch: return Runtime . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 312
score: 99.2282381924716
patch: return Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE + Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 312
score: 98.96078491210938
patch: if ( Node CaMeL Util . KILL . KILL . equals ( n ) )
rank: 312
score: 98.9125732421875
patch: return Character . to CaMeL Upper CaMeL Case ( n . get CaMeL Line CaMeL Number ( ) ;
rank: 312
score: 98.63163248697917
patch: return System . KILL . KILL . KILL . KILL ;
rank: 312
score: 98.62896321614583
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + KILL + $STRING$ ;
rank: 312
score: 98.16154479980469
patch: if ; = KILL . KILL ;
rank: 313
score: 99.3831787109375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) , n ) ;
rank: 313
score: 99.24603562127976
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Node CaMeL Util . KILL ) ;
rank: 313
score: 99.2281161221591
patch: return n . get CaMeL Parent ( ) . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ;
rank: 313
score: 98.91237182617188
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) . double CaMeL Value ;
rank: 313
score: 98.63137817382812
patch: throw new Runtime CaMeL Exception ( 0 ) ;
rank: 313
score: 98.62786458333333
patch: throw new Runtime CaMeL Exception ( $STRING$ + KILL . to CaMeL String ;
rank: 313
score: 98.16011810302734
patch: return false . KILL . KILL ;
rank: 314
score: 99.38308641387195
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) , variable ) ;
rank: 314
score: 99.27018229166667
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ; }
rank: 314
score: 98.96043090820312
patch: throw new Assertion CaMeL Error ( $STRING$ ) ;
rank: 314
score: 98.6310791015625
patch: return KILL . KILL ; } return true ;
rank: 314
score: 98.62534005301339
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + type ) ;
rank: 314
score: 98.16004180908203
patch: return return ? KILL . KILL ;
rank: 315
score: 99.24496639476104
patch: return n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 315
score: 99.22747987689394
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL
rank: 315
score: 98.96019744873047
patch: return n . get CaMeL String CaMeL Value ( ) . equals ( $STRING$ ;
rank: 315
score: 98.91200764973958
patch: return int CaMeL Value = n . get CaMeL String ( ) . length ( ) ;
rank: 315
score: 98.63104248046875
patch: return return KILL . KILL . KILL . KILL ; ;
rank: 315
score: 98.62483433314732
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + $STRING$ ) ;
rank: 315
score: 98.15988595145089
patch: return KILL ; return false ;
rank: 316
score: 99.36129557291666
patch: state = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 316
score: 99.26995693108974
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 316
score: 99.227294921875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( index ) ) ;
rank: 316
score: 98.95803397042411
patch: if ( Node CaMeL Util . KILL . equals ( KILL ) )
rank: 316
score: 98.91190962357955
patch: return Short . value CaMeL Of ( n . get CaMeL Value ( ) ) . int CaMeL Value ( ;
rank: 316
score: 98.62971327039931
patch: logger . out . println ( $STRING$ ;
rank: 316
score: 98.62456868489583
patch: System . out . println ( $STRING$ + Integer . to CaMeL String ;
rank: 316
score: 98.1580810546875
patch: return KILL ; KILL return KILL ;
rank: 317
score: 99.38236038773148
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node , n . get CaMeL Parent ( ) ) ;
rank: 317
score: 99.2699444110577
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL String ( ) )
rank: 317
score: 99.24360584077381
patch: = Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 317
score: 98.95588030133929
patch: throw new No CaMeL Such CaMeL Method CaMeL Error ( $STRING$ + ;
rank: 317
score: 98.91171409970238
patch: return n . get CaMeL Parent ( ) . equals ( n . get CaMeL String ( ) ) ;
rank: 317
score: 98.1570332845052
patch: return Integer . EMPTY ;
rank: 318
score: 99.38219793911638
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Node CaMeL Util . get CaMeL String ( ) ) ;
rank: 318
score: 99.26993560791016
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Lhs ( n , variable ) ) ;
rank: 318
score: 99.24293919613487
patch: return KILL . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 318
score: 98.95558384486607
patch: if ( Node CaMeL Util . KILL . equals ( node ) )
rank: 318
score: 98.62157592773437
patch: this . return null ; } return null ;
rank: 318
score: 98.1568603515625
patch: return System . KILL ;
rank: 319
score: 99.38201545266544
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n . get CaMeL First CaMeL Child ( n ) ) ;
rank: 319
score: 99.36112015335648
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . READ ) ;
rank: 319
score: 99.2697021484375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL Name ( n ) ) ;
rank: 319
score: 99.2421875
patch: return null . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 319
score: 99.22695922851562
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n ;
rank: 319
score: 98.95478820800781
patch: if ( Node CaMeL Util . is CaMeL Assignable CaMeL From ( n ) ;
rank: 319
score: 98.91141183035714
patch: return n . get CaMeL Value ( ) . compare CaMeL To ( n . get CaMeL Value ( ;
rank: 319
score: 98.62269176136364
patch: return super . get CaMeL Instance ( ) ; ;
rank: 319
score: 98.62089320591518
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null ) ;
rank: 319
score: 98.15662384033203
patch: return ; . KILL return $STRING$ ;
rank: 320
score: 99.36093319163604
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( ) ) ;
rank: 320
score: 99.2692340353261
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable . get CaMeL Parent ( ) ) ;
rank: 320
score: 99.24212646484375
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n ) ;
rank: 320
score: 98.95458984375
patch: return n . get CaMeL String ( ) . starts CaMeL With ( $STRING$ ) ;
rank: 320
score: 98.62192604758523
patch: return KILL . KILL . KILL . . KILL ;
rank: 320
score: 98.62085832868304
patch: result = KILL . KILL . KILL . KILL . KILL . ;
rank: 320
score: 98.15473937988281
patch: return KILL . KILL . true ;
rank: 321
score: 99.38154797676282
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ; }
rank: 321
score: 99.36066637541118
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable )
rank: 321
score: 99.24109497070313
patch: evaluated = Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 321
score: 99.22638903166118
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( true ) ) ;
rank: 321
score: 98.91090029761905
patch: return Node CaMeL Util . KILL . equals ( n . get CaMeL String ( ) , n ) ;
rank: 321
score: 98.620751953125
patch: return KILL . KILL ; } return KILL ;
rank: 321
score: 98.62071881975446
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + parent ) ;
rank: 321
score: 98.15459442138672
patch: return ; = this . KILL ;
rank: 322
score: 99.381494140625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 322
score: 99.3604507446289
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n ) ;
rank: 322
score: 99.26852416992188
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 322
score: 99.23953247070312
patch: return super . . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 322
score: 99.22631096117425
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL . get CaMeL Parent ( ) ) ;
rank: 322
score: 98.95446059283088
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ;
rank: 322
score: 98.62062581380208
patch: System . out . println ( $STRING$ ; break ; }
rank: 322
score: 98.15327453613281
patch: return Boolean . KILL . KILL ;
rank: 323
score: 99.38148716517857
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node ) ;
rank: 323
score: 99.3603759765625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) ) ) ;
rank: 323
score: 99.2682396673387
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ; }
rank: 323
score: 99.23677368164063
patch: return ! Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 323
score: 98.62039388020834
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + Integer . FALSE ;
rank: 323
score: 98.15310668945312
patch: return KILL . KILL . null ;
rank: 324
score: 99.38134765625
patch: ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 324
score: 99.36024212015086
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 324
score: 99.268232421875
patch: try { return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 324
score: 99.23536376953125
patch: result = Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 324
score: 98.95371380974265
patch: throw new Runtime CaMeL Exception ( $STRING$ + n . get CaMeL String ( ; }
rank: 324
score: 98.91005637428977
patch: return n . get CaMeL Value ( ) . get CaMeL Value ( ) . get CaMeL Value ( ; }
rank: 324
score: 98.6202901204427
patch: return new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 324
score: 98.15205383300781
patch: return KILL . KILL = KILL ;
rank: 325
score: 99.3809784679878
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n ) ) ;
rank: 325
score: 99.26822476773648
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL Parent ( ) ) ) ;
rank: 325
score: 99.23512027138158
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n + variable ) ;
rank: 325
score: 98.95285931755515
patch: if ( Node CaMeL Util . KILL . equals CaMeL Ignore CaMeL Case ( ; ;
rank: 325
score: 98.6202725497159
patch: throw new Runtime CaMeL Exception ( $STRING$ + ) ;
rank: 325
score: 98.61742553710937
patch: return parent . get CaMeL Parent ( ) ;
rank: 325
score: 98.15179443359375
patch: return KILL . KILL . TRUE ; ;
rank: 326
score: 99.36001699942129
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . } ) ;
rank: 326
score: 99.26786411830358
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 326
score: 99.235107421875
patch: return this . this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 326
score: 99.22522424768519
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL . to CaMeL String ( ) ) ;
rank: 326
score: 98.90906372070313
patch: return node . get CaMeL Node ( ) . get CaMeL Node ( ) . get CaMeL Node ;
rank: 326
score: 98.61966959635417
patch: throw new Runtime CaMeL Exception ( $STRING$ + scope ) ;
rank: 326
score: 98.151123046875
patch: return Double . KILL . KILL ; ;
rank: 327
score: 99.38087222450658
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 327
score: 99.35976993336396
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) ;
rank: 327
score: 99.26783014112904
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) ) ; }
rank: 327
score: 99.23499298095703
patch: return ! is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 327
score: 99.2252133018092
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node , variable ) ) ;
rank: 327
score: 98.95181978665866
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + n ;
rank: 327
score: 98.90865478515624
patch: return n . get CaMeL Node ( ) . equals ( n . get CaMeL String ( ) ;
rank: 327
score: 98.61962890625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + node ) ;
rank: 327
score: 98.61593017578124
patch: return site . KILL . KILL . KILL ;
rank: 327
score: 98.15109592013889
patch: return KILL . KILL . . . ;
rank: 328
score: 99.38081440172698
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node ) ;
rank: 328
score: 99.26777501260081
patch: return Node CaMeL Util . is CaMeL Lhs ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 328
score: 99.22520687705592
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( index ) ) ;
rank: 328
score: 98.95166733685662
patch: if ( n . get CaMeL String ( ) . starts CaMeL With ( $STRING$ ;
rank: 328
score: 98.9081143465909
patch: return Short . value CaMeL Of ( n . get CaMeL String ( ) ) . boolean CaMeL Value ( ;
rank: 328
score: 98.61734713040866
patch: throw new Runtime CaMeL Exception ( $STRING$ + name + $STRING$ ;
rank: 328
score: 98.61542302911931
patch: return this . KILL KILL . KILL . KILL ;
rank: 328
score: 98.15109592013889
patch: return super . KILL . KILL . ;
rank: 329
score: 99.26775716145833
patch: result = Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 329
score: 99.23379677220395
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , null ) ;
rank: 329
score: 98.95149230957031
patch: return Boolean . value CaMeL Of ( n . get CaMeL String ( ) ;
rank: 329
score: 98.90754838423295
patch: if ( Node CaMeL Util . is CaMeL Qualified CaMeL Name ( n . get CaMeL Parent ( ) ) )
rank: 329
score: 98.61724384014423
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 ;
rank: 329
score: 98.6138583096591
patch: return parent . KILL . KILL . KILL ; }
rank: 329
score: 98.15026177300348
patch: return Integer . KILL . KILL ; ;
rank: 330
score: 99.23365542763158
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL Child CaMeL
rank: 330
score: 98.95061178768383
patch: throw new Assertion CaMeL Error ( $STRING$ + n . get CaMeL String ( ) ;
rank: 330
score: 98.90745035807292
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( ;
rank: 330
score: 98.61628941127232
patch: { return KILL . KILL . KILL . KILL . KILL . ;
rank: 330
score: 98.61379665798611
patch: return true ; return KILL . KILL ;
rank: 330
score: 98.15006256103516
patch: return KILL . KILL . 0 ;
rank: 331
score: 99.3806884765625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Graph ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 331
score: 99.26767578125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( child CaMeL Value , n . get CaMeL Parent ( ) ) ;
rank: 331
score: 99.23364868164063
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 331
score: 99.22510553175404
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 331
score: 98.94953155517578
patch: if ( Node CaMeL Util . is CaMeL Qualified CaMeL Name ( n ) ;
rank: 331
score: 98.90696314761513
patch: return Short . value CaMeL Of ( n . get CaMeL Value ( ) ) . value ;
rank: 331
score: 98.614990234375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + return ;
rank: 331
score: 98.61325073242188
patch: return super . KILL KILL KILL . KILL ;
rank: 331
score: 98.14896065848214
patch: return this ; return KILL ;
rank: 332
score: 99.38065592447917
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Cfg ( n ) ) ;
rank: 332
score: 99.26737213134766
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Parent ( n ) , variable ) ;
rank: 332
score: 99.23306274414062
patch: state = Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 332
score: 99.2249755859375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . KILL . get CaMeL
rank: 332
score: 98.94851449819711
patch: throw new No CaMeL Such CaMeL Method CaMeL Error ( $STRING$ ;
rank: 332
score: 98.90685424804687
patch: return n . get CaMeL Value ( ) . equals ( n . get CaMeL Value ( ) ;
rank: 332
score: 98.6149658203125
patch: throw new Runtime CaMeL Exception ( $STRING$ ? ;
rank: 332
score: 98.61220481178977
patch: return get CaMeL Scope ( ) . KILL KILL ;
rank: 332
score: 98.14777289496527
patch: return KILL . KILL . KILL . FOR
rank: 333
score: 99.38060735887096
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL String ( ) ) ;
rank: 333
score: 99.23299153645833
patch: if ( Node CaMeL Util . is CaMeL Lhs ( Control CaMeL Flow CaMeL Graph . KILL ) ) {
rank: 333
score: 99.22477953361742
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n . get CaMeL First CaMeL Child ( ) ) ;
rank: 333
score: 98.94840240478516
patch: report CaMeL Error ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 333
score: 98.90598958333334
patch: return String . value CaMeL Of ( n . get CaMeL String ( ;
rank: 333
score: 98.61463274274554
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ; , null ) ;
rank: 333
score: 98.61079711914063
patch: return filter . KILL . KILL . KILL ;
rank: 333
score: 98.14717864990234
patch: return KILL . KILL . WARNING ;
rank: 334
score: 99.38056640625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Control CaMeL
rank: 334
score: 99.35872676454741
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( id , n . get CaMeL Parent ( ) ) ;
rank: 334
score: 99.2669677734375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( n . get CaMeL String ( ) ) ) ;
rank: 334
score: 99.22470925071023
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL
rank: 334
score: 98.94784109933036
patch: if ( Node CaMeL Util . is CaMeL Function ( n ) )
rank: 334
score: 98.9059826078869
patch: return n . get CaMeL Result ( ) . get CaMeL Value ( ) . to CaMeL String ( ;
rank: 334
score: 98.61436878551136
patch: System . err . println ( $STRING$ ; break ;
rank: 334
score: 98.1462631225586
patch: return KILL . KILL . MAX ;
rank: 335
score: 99.26665296052632
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) )
rank: 335
score: 99.2315673828125
patch: return throw super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 335
score: 99.22464896537163
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent ) ) ;
rank: 335
score: 98.9478047688802
patch: return n . get CaMeL String CaMeL Value ( ) ;
rank: 335
score: 98.9057552939967
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . ;
rank: 335
score: 98.61373901367188
patch: throw new Illegal CaMeL State CaMeL Exception ( ; , ;
rank: 335
score: 98.60854270241477
patch: break KILL . KILL . KILL . KILL . ;
rank: 335
score: 98.14536830357143
patch: return Double . . KILL ;
rank: 336
score: 99.38001069568452
patch: return Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL First ( ) ) ;
rank: 336
score: 99.35826373922414
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Node ( ) , variable ) ;
rank: 336
score: 99.26661217730978
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( this , n . get CaMeL Parent ( ) ) ;
rank: 336
score: 99.2312244233631
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n , variable ) ;
rank: 336
score: 99.2243985262784
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph .
rank: 336
score: 98.9477069561298
patch: return KILL . KILL . KILL . KILL . KILL ) ;
rank: 336
score: 98.90523681640624
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . equals ( ;
rank: 336
score: 98.61370294744319
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ; }
rank: 336
score: 98.60850830078125
patch: return get CaMeL Current CaMeL Node ( ) ;
rank: 336
score: 98.14523315429688
patch: return ; = ; return $STRING$ ;
rank: 337
score: 99.37998404153963
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . ;
rank: 337
score: 99.35823059082031
patch: return n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 337
score: 99.26620370370371
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) {
rank: 337
score: 99.22396146334134
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Local CaMeL
rank: 337
score: 98.94767491957721
patch: if ( n . get CaMeL Simple CaMeL Name ( ) . equals ( $STRING$ ;
rank: 337
score: 98.90512917258523
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . starts CaMeL With ( ;
rank: 337
score: 98.61362868088942
patch: System . out . println ( $STRING$ ) ; return null ;
rank: 337
score: 98.6076171875
patch: return Variable CaMeL Map . KILL . KILL ;
rank: 337
score: 98.14431762695312
patch: return KILL . KILL . NAME ;
rank: 338
score: 99.35816333912037
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL , variable ) ;
rank: 338
score: 99.22763206845238
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ,
rank: 338
score: 99.22391183035714
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 338
score: 98.94765799386161
patch: return value . to CaMeL String ( ) . trim ( ) ;
rank: 338
score: 98.90484064275569
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . replace CaMeL All ( ;
rank: 338
score: 98.61297200520833
patch: System . err . println ( $STRING$ + Integer . to CaMeL String ;
rank: 338
score: 98.6068115234375
patch: throw new Runtime CaMeL Exception ( ) ; ;
rank: 338
score: 98.14354705810547
patch: return super . KILL return KILL ;
rank: 339
score: 99.37975056966145
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) , variable ) ) ;
rank: 339
score: 99.26610668285473
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) )
rank: 339
score: 99.22702026367188
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ; }
rank: 339
score: 99.22378077651516
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n . get CaMeL Parent ( ) ) ) {
rank: 339
score: 98.9474738625919
patch: throw new Runtime CaMeL Exception ( $STRING$ + n . to CaMeL String ( ) ;
rank: 339
score: 98.9046297940341
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ) ) . double CaMeL Value ( ;
rank: 339
score: 98.61288016183036
patch: return KILL . KILL . KILL . KILL . KILL . ; }
rank: 339
score: 98.14349365234375
patch: return KILL . KILL . KILL . return
rank: 340
score: 99.37973764780405
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL
rank: 340
score: 99.357861328125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 340
score: 99.22690943667763
patch: return refs . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 340
score: 99.2236392372533
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent ) ) ;
rank: 340
score: 98.94744110107422
patch: return value CaMeL Of ( n . get CaMeL String CaMeL Value ( ) ;
rank: 340
score: 98.90446641710069
patch: return n . get CaMeL String ( ) . equals ( n . get CaMeL String ;
rank: 340
score: 98.6126708984375
patch: System . err . println ( $STRING$ + 0 ) ;
rank: 340
score: 98.60541326349431
patch: return Boolean . value CaMeL Of ( $STRING$ ) ;
rank: 340
score: 98.14291381835938
patch: return ; . . return KILL ;
rank: 341
score: 99.37911080025337
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 341
score: 99.22518581814236
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , ) ;
rank: 341
score: 99.22353334780092
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . MAYBE _ LIVE ) ;
rank: 341
score: 98.94724818638393
patch: return node . get CaMeL Parent CaMeL Node ( ) . KILL ;
rank: 341
score: 98.90439453125
patch: return n . get CaMeL Name ( ) . equals ( n . get CaMeL String ( ) )
rank: 341
score: 98.60498657226563
patch: return options . KILL . KILL . KILL ;
rank: 341
score: 98.14283243815105
patch: return Double . TRUE ;
rank: 342
score: 99.35710375236742
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( ) ) ;
rank: 342
score: 99.26527163856908
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 342
score: 99.22335654810855
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( false ) ) ;
rank: 342
score: 99.22334369860198
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( child CaMeL Value , variable ) ;
rank: 342
score: 98.94608851841518
patch: if ( Node CaMeL Util . KILL . equals ( this ) )
rank: 342
score: 98.90409712357955
patch: return n . get CaMeL Parent ( ) . get CaMeL Node ( ) . get CaMeL Node ( ; }
rank: 342
score: 98.61039225260417
patch: System . err . println ( $STRING$ + return ) ;
rank: 342
score: 98.6041592684659
patch: return false ; return KILL . KILL . KILL ;
rank: 342
score: 98.14238891601562
patch: return KILL ; }
rank: 343
score: 99.37870065789474
patch: return Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL Parent ( ) ) ;
rank: 343
score: 99.35708155776516
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n . get CaMeL First ( ) ) ;
rank: 343
score: 99.22298177083333
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . READ ;
rank: 343
score: 99.22279116981908
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . KILL ) ;
rank: 343
score: 98.9451904296875
patch: if ( Node CaMeL Util . KILL . is CaMeL Empty ( n ) )
rank: 343
score: 98.9034782858456
patch: return get CaMeL Variable CaMeL Map ( ) . get CaMeL Variable CaMeL Map ( ;
rank: 343
score: 98.60950724283855
patch: System . out . println ( $STRING$ + 0 ) ;
rank: 343
score: 98.60247192382812
patch: return type . KILL . KILL . KILL ;
rank: 343
score: 98.14228166852679
patch: return null ; return null ;
rank: 344
score: 99.22276893028847
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 344
score: 99.22257915296052
patch: throw super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 344
score: 98.94499206542969
patch: throw new Error ( $STRING$ + n . get CaMeL String ( ) ) ;
rank: 344
score: 98.90320405505952
patch: return n . get CaMeL Node ( ) . get CaMeL Parent ( ) . get CaMeL Parent ; }
rank: 344
score: 98.60945347377232
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value ) ;
rank: 344
score: 98.60037570529514
patch: logger . out . println return $STRING$ ;
rank: 344
score: 98.14097086588542
patch: return this . KILL . KILL ; }
rank: 345
score: 99.35679047683189
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL String ( ) , variable ) ;
rank: 345
score: 99.26446174172794
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( child CaMeL Value ) ;
rank: 345
score: 99.22274619654605
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) {
rank: 345
score: 99.22145080566406
patch: return ! is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 345
score: 98.94442313058036
patch: if ( Node CaMeL Util . is CaMeL Name ( n ) )
rank: 345
score: 98.9029541015625
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ) ) . int CaMeL Value ( )
rank: 345
score: 98.60819789341518
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ - 1 ) ;
rank: 345
score: 98.59975363991477
patch: try { return KILL . KILL . KILL ; }
rank: 345
score: 98.14067077636719
patch: return list . KILL . KILL ;
rank: 346
score: 99.37846936677632
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) ) ) ;
rank: 346
score: 99.35668157762096
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Node CaMeL Util . get CaMeL Parent ( ) ) ;
rank: 346
score: 99.22273084852431
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 346
score: 98.94412935697116
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + n ;
rank: 346
score: 98.90269711143092
patch: return Character . to CaMeL Upper CaMeL Case ( n . get CaMeL Line ( ) ) ;
rank: 346
score: 98.60812612680289
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + ) ;
rank: 346
score: 98.5994540127841
patch: return Boolean . value CaMeL Of ( KILL ) ;
rank: 346
score: 98.1402816772461
patch: return node . KILL . KILL ;
rank: 347
score: 99.37842536695075
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . get CaMeL Graph ( ) ) ;
rank: 347
score: 99.356552734375
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Node CaMeL Util . get CaMeL Parent ( ) ) ;
rank: 347
score: 99.26409912109375
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) ) ) ;
rank: 347
score: 99.22263697574013
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) , variable ) ;
rank: 347
score: 99.21958521792763
patch: return scope . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 347
score: 98.9441276999081
patch: if ( n . get CaMeL String ( ) . index CaMeL Of ( $STRING$ ;
rank: 347
score: 98.90264892578125
patch: return n . get CaMeL Value ( ) . trim ( ) . to CaMeL String ( ) ;
rank: 347
score: 98.6070556640625
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; } ;
rank: 347
score: 98.5989501953125
patch: return KILL . get CaMeL Root ( ) ;
rank: 347
score: 98.13987901475694
patch: return KILL . KILL . KILL . from
rank: 348
score: 99.3780850497159
patch: else return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 348
score: 99.3564453125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . n , variable ) ;
rank: 348
score: 99.22261242988782
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( true ) ) ;
rank: 348
score: 99.21810477120536
patch: return ! Node CaMeL Util . is CaMeL Lhs ( n ) ;
rank: 348
score: 98.94298502604167
patch: if ( node . get CaMeL Current CaMeL Node ( ) != null )
rank: 348
score: 98.90242513020833
patch: return n . get CaMeL Symbol ( ) . equals ( n . get CaMeL String ( ) ) ;
rank: 348
score: 98.60642700195312
patch: return null ; } else { return null ;
rank: 348
score: 98.5989481608073
patch: return 0 . KILL ;
rank: 348
score: 98.13977813720703
patch: return . . KILL . KILL ;
rank: 349
score: 99.26355919471153
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) , variable ) ;
rank: 349
score: 99.22216796875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n .
rank: 349
score: 99.21560187088816
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n , variable ) ;
rank: 349
score: 98.94195556640625
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + n ) ;
rank: 349
score: 98.90238813920455
patch: return Boolean . value CaMeL Of ( Boolean . value CaMeL Of ( Boolean . value CaMeL Of ( ; ;
rank: 349
score: 98.60540771484375
patch: throw new Runtime CaMeL Exception . Runtime CaMeL Exception ( $STRING$ ; }
rank: 349
score: 98.59873268821023
patch: return null ; return KILL . KILL . KILL ;
rank: 349
score: 98.13945661272321
patch: return super . . KILL ;
rank: 350
score: 99.35602361505681
patch: return return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 350
score: 99.22216009324596
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 350
score: 99.21512001439145
patch: return Driver . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 350
score: 98.94116928998162
patch: if ( node . get CaMeL Class CaMeL Name ( ) . equals ( $STRING$ ;
rank: 350
score: 98.90238813920455
patch: return parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ( ; }
rank: 350
score: 98.6053936298077
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ;
rank: 350
score: 98.59858842329545
patch: return . KILL . KILL . KILL == KILL ;
rank: 350
score: 98.13920084635417
patch: return this . KILL . KILL . ;
rank: 351
score: 99.37747192382812
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Type ( ) ) ) ;
rank: 351
score: 99.35593959263393
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) )
rank: 351
score: 99.26324784128289
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , variable ) ) ;
rank: 351
score: 99.22197614397321
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 351
score: 98.93956647600446
patch: if ( Node CaMeL Util . is CaMeL Primitive ( n ) )
rank: 351
score: 98.90219261532738
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ) . int CaMeL Value ( ;
rank: 351
score: 98.60477992466518
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ? return ) ;
rank: 351
score: 98.1369400024414
patch: return this + KILL . KILL ;
rank: 352
score: 99.37696126302083
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL First CaMeL Child ( n ) ) ;
rank: 352
score: 99.355927734375
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . READ ) ;
rank: 352
score: 99.263232421875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ) ;
rank: 352
score: 99.22193634815706
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node ) ) ;
rank: 352
score: 99.2138427734375
patch: if ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) )
rank: 352
score: 98.9383316040039
patch: return Boolean . value CaMeL Of ( true ) . boolean CaMeL Value ( ;
rank: 352
score: 98.90192260742188
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + n . get CaMeL Message ( ;
rank: 352
score: 98.13645426432292
patch: if ; return KILL ;
rank: 353
score: 99.3767322358631
patch: return Node CaMeL Util . is CaMeL Name ( n , n . get CaMeL Parent ( ) ) ;
rank: 353
score: 99.3559052438447
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) , n ) ;
rank: 353
score: 99.22193008814102
patch: return Node CaMeL Util . ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 353
score: 98.93782043457031
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + n . ;
rank: 353
score: 98.9015251608456
patch: return Short . value CaMeL Of ( n . get CaMeL String ( ) ) ;
rank: 353
score: 98.60397338867188
patch: throw new Runtime CaMeL Exception ( $STRING$ + id ) ;
rank: 353
score: 98.59613591974431
patch: return return KILL . KILL . KILL == KILL ;
rank: 353
score: 98.13541666666667
patch: return Integer . KILL . KILL . KILL
rank: 354
score: 99.3558682528409
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . ) ;
rank: 354
score: 99.22182791573661
patch: return Control CaMeL Flow CaMeL Graph . ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 354
score: 99.20751235064338
patch: return null . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 354
score: 98.93536376953125
patch: if ( variable . equals ( n . get CaMeL String ( ) ) )
rank: 354
score: 98.90122357536765
patch: return n . get CaMeL Value ( ) . to CaMeL String ( ) ; }
rank: 354
score: 98.60255784254808
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + id ;
rank: 354
score: 98.13227081298828
patch: return KILL ; return KILL ; }
rank: 355
score: 99.26309595352564
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL String ( ) ) ) ;
rank: 355
score: 99.2217266376202
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Variable CaMeL
rank: 355
score: 99.20669216579861
patch: return return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 355
score: 98.93522135416667
patch: throw new Runtime CaMeL Exception ( $STRING$ + n . ;
rank: 355
score: 98.90069221047794
patch: return n . get CaMeL Value ( ) . get CaMeL Value ( ) ; }
rank: 355
score: 98.60243443080357
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ; , false ) ;
rank: 355
score: 98.13139997209821
patch: return $STRING$ ; return null ;
rank: 356
score: 99.35556927849265
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( n ) , variable ) ;
rank: 356
score: 99.26306966145833
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL String ( ) ) ) {
rank: 356
score: 99.22149047851562
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ,
rank: 356
score: 99.20433285361842
patch: return vars . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 356
score: 98.9349365234375
patch: if ( Node CaMeL Util . KILL . KILL . equals ( this ) )
rank: 356
score: 98.90016084558823
patch: return Node CaMeL Util . ; } else { return Node CaMeL Util . KILL ;
rank: 356
score: 98.60201322115384
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ KILL ) ;
rank: 356
score: 98.13119167751736
patch: return KILL . KILL . KILL . .
rank: 357
score: 99.37646484375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Next ( ) ) ) ;
rank: 357
score: 99.26298384232955
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ; }
rank: 357
score: 99.22126988002232
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL . get CaMeL
rank: 357
score: 98.5997314453125
patch: return null ; } else { return null ; }
rank: 357
score: 98.59226989746094
patch: return parent . KILL . KILL ;
rank: 357
score: 98.13105773925781
patch: return KILL . KILL . STATEMENT ;
rank: 358
score: 99.37623322315706
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ) ;
rank: 358
score: 99.2624010917468
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 358
score: 99.22106563683712
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n . get CaMeL Parent ( ) , variable ) ;
rank: 358
score: 99.20320209703948
patch: return list . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 358
score: 98.93437194824219
patch: return n . get CaMeL String ( ) . starts CaMeL With ( $STRING$ ;
rank: 358
score: 98.89983258928571
patch: return parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get CaMeL Parent ; }
rank: 358
score: 98.59923377403847
patch: System . out . println ( $STRING$ ; return null ; }
rank: 358
score: 98.5913418856534
patch: return parent . get CaMeL Node ( ) ; ;
rank: 358
score: 98.13033294677734
patch: return true ; } return KILL ;
rank: 359
score: 99.35483735183189
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . READ , variable ) ;
rank: 359
score: 99.261962890625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL String ( ) ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 359
score: 99.20008850097656
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , ) ;
rank: 359
score: 98.9342269897461
patch: throw new No CaMeL Such CaMeL Method CaMeL Error ( $STRING$ + n ) ;
rank: 359
score: 98.59815470377605
patch: return new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; }
rank: 359
score: 98.5910400390625
patch: return get CaMeL Instance ( ) . KILL ;
rank: 359
score: 98.12985568576389
patch: return KILL . KILL . KILL . IN
rank: 360
score: 99.37596814385776
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Graph ( ) ) ;
rank: 360
score: 99.35454767400569
patch: return n . get CaMeL Node ( ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 360
score: 99.26182725694444
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL Parent ( ) ) ) ;
rank: 360
score: 99.20001220703125
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 360
score: 98.93416922433036
patch: return node . get CaMeL Value ( ) . trim ( ) ;
rank: 360
score: 98.89935980902777
patch: return n . get CaMeL Value ( ) . equals ( n . get CaMeL String ;
rank: 360
score: 98.59813514122597
patch: throw new Runtime CaMeL Exception ( $STRING$ + KILL + $STRING$ ;
rank: 360
score: 98.5909756747159
patch: return new Illegal CaMeL State CaMeL Exception ( ) ;
rank: 360
score: 98.12877061631944
patch: return new ( KILL != null ) ;
rank: 361
score: 99.26136192908653
patch: return this . ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ;
rank: 361
score: 99.22080328525641
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) ;
rank: 361
score: 99.19980197482639
patch: return throw is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 361
score: 98.93406575520834
patch: return Math . abs ( n . get CaMeL String ( ) ) ;
rank: 361
score: 98.89934624565973
patch: return n . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ )
rank: 361
score: 98.5977783203125
patch: throw new Runtime CaMeL Exception ( $STRING$ ? $STRING$ ;
rank: 361
score: 98.59049479166667
patch: else return KILL . KILL . KILL ;
rank: 361
score: 98.12769911024306
patch: return ( Integer ; . false ) ;
rank: 362
score: 99.37578735351562
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph .
rank: 362
score: 99.35430317540323
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) , variable ) ;
rank: 362
score: 99.261328125
patch: return return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 362
score: 99.19910952919408
patch: return module . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 362
score: 98.93399483816964
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( KILL ) ;
rank: 362
score: 98.8985659950658
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ) . double ;
rank: 362
score: 98.59754289899554
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + null ) ;
rank: 362
score: 98.59047241210938
patch: return this . KILL . KILL . null ;
rank: 362
score: 98.127685546875
patch: return $STRING$ . KILL ;
rank: 363
score: 99.26122029622395
patch: ret = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 363
score: 99.220703125
patch: return Node CaMeL Util . ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ;
rank: 363
score: 99.19596782483552
patch: return Generator . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 363
score: 98.89825798483456
patch: return Type . KILL . equals ( n . get CaMeL String ( ) ) ;
rank: 363
score: 98.59728131975446
patch: throw new Runtime CaMeL Exception ( $STRING$ + this . KILL ) ;
rank: 363
score: 98.12744903564453
patch: return KILL . KILL . FUNCTION ;
rank: 364
score: 99.3754638671875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 364
score: 99.3541771673387
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ; }
rank: 364
score: 99.26109375
patch: return this . Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 364
score: 99.19559518914474
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable , variable ) ;
rank: 364
score: 98.93306884765624
patch: return n . get CaMeL String ( ) ;
rank: 364
score: 98.89777289496527
patch: return get CaMeL Value ( ) . equals ( n . get CaMeL String ( ) ;
rank: 364
score: 98.59703979492187
patch: throw new Internal CaMeL Error ( KILL ) ;
rank: 364
score: 98.58872292258523
patch: return get CaMeL State ( ) . KILL KILL ;
rank: 364
score: 98.12614610460069
patch: return Double . KILL . KILL . KILL
rank: 365
score: 99.26095448369566
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( index , variable ) ;
rank: 365
score: 99.19443359375
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node ) ;
rank: 365
score: 98.93209635416666
patch: return ( Node CaMeL Util . KILL . KILL . KILL . KILL ;
rank: 365
score: 98.89761513157895
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 365
score: 98.59618268694196
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + id ) ;
rank: 365
score: 98.58695845170455
patch: return ( KILL . KILL . KILL . KILL ;
rank: 365
score: 98.12479400634766
patch: return KILL . KILL . IN ;
rank: 366
score: 99.35397240423387
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( ) ) ;
rank: 366
score: 99.26056463068181
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! n . get CaMeL Parent ( ) ) ;
rank: 366
score: 99.21980365953948
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( type ) ) ;
rank: 366
score: 99.19273376464844
patch: return throw is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 366
score: 98.93196105957031
patch: return Boolean . value CaMeL Of ( false ) . boolean CaMeL Value ( ;
rank: 366
score: 98.89754231770833
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent ( ) . get ;
rank: 366
score: 98.59611206054687
patch: return ( Node CaMeL Util . KILL ) ;
rank: 366
score: 98.12388610839844
patch: return ; . ; = KILL ;
rank: 367
score: 99.3752670288086
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( n ) ) ;
rank: 367
score: 99.35394472064394
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent CaMeL Node ( ) , variable ) ;
rank: 367
score: 99.26054831112133
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL First CaMeL Child ( n ) , variable ) ;
rank: 367
score: 99.21943721064815
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL } ;
rank: 367
score: 99.19254796645221
patch: = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 367
score: 98.93080049402573
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + n . get CaMeL String ;
rank: 367
score: 98.89715935202206
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Name ( ) )
rank: 367
score: 98.59294782366071
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + scope ) ;
rank: 367
score: 98.58392888849431
patch: return KILL . KILL KILL == KILL . KILL ;
rank: 367
score: 98.12315538194444
patch: return ; = KILL ; return KILL ;
rank: 368
score: 99.3539177389706
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( $STRING$ ) ) ;
rank: 368
score: 99.26038707386364
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n . get CaMeL Parent ( ) ) )
rank: 368
score: 99.21939750339673
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util .
rank: 368
score: 99.19205515008224
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , name ) ;
rank: 368
score: 98.8967052641369
patch: return n . get CaMeL Node ( ) . get CaMeL Value ( ) . get CaMeL Value ( ;
rank: 368
score: 98.5831631747159
patch: return 0 . KILL . KILL . KILL ; }
rank: 368
score: 98.12301974826389
patch: return KILL . KILL . KILL . MAX
rank: 369
score: 99.35388714334239
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( name , n ) ;
rank: 369
score: 99.26035670230263
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL String ( ) ) ) ;
rank: 369
score: 99.2192883613782
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ) ;
rank: 369
score: 99.19204532398896
patch: throw super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 369
score: 98.93046061197917
patch: if ( n . get CaMeL Current CaMeL Node ( ) != null )
rank: 369
score: 98.59205845424107
patch: throw new Runtime CaMeL Exception ( $STRING$ + $STRING$ + $STRING$ ) ;
rank: 369
score: 98.58274536132812
patch: return Boolean . KILL ; } return $STRING$ ;
rank: 369
score: 98.12198638916016
patch: return $STRING$ ; } return null ;
rank: 370
score: 99.37494217722039
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 370
score: 99.26012505425348
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n , n . get CaMeL Parent ( ) ) ;
rank: 370
score: 99.2190005653783
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ref ) ) ;
rank: 370
score: 99.19162884880515
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , $STRING$ ) ;
rank: 370
score: 98.93040466308594
patch: if ( $STRING$ . equals ( n . get CaMeL String ( ) ) )
rank: 370
score: 98.59145883413461
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + KILL ;
rank: 371
score: 99.37484517911585
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , variable ) ) ;
rank: 371
score: 99.2188784950658
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node , variable ) ) ;
rank: 371
score: 99.1912612915039
patch: return throw is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 371
score: 98.9300178079044
patch: if ( n . get CaMeL Type ( ) == Node CaMeL Util . KILL ;
rank: 371
score: 98.59132893880208
patch: throw new Runtime CaMeL Exception ( $STRING$ + null ) ;
rank: 371
score: 98.12126159667969
patch: return ( Double ; . $NUMBER$ ;
rank: 372
score: 99.37476870888158
patch: return Node CaMeL Util . is CaMeL Lhs ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 372
score: 99.25990923713235
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) , variable ) ;
rank: 372
score: 99.21879359654018
patch: return n . get CaMeL Parent ( ) . Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 372
score: 98.92985316685268
patch: return KILL . contains ( n . get CaMeL String ( ) ;
rank: 372
score: 98.89457775297619
patch: return n . get CaMeL Parent ( ) . get CaMeL Value ( ) . get CaMeL Value ( ;
rank: 372
score: 98.59083909254808
patch: System . out . println ( $STRING$ + ; return null ;
rank: 372
score: 98.58052368164063
patch: return children . KILL . KILL . KILL ;
rank: 372
score: 98.12108503069196
patch: return ; = return KILL ;
rank: 373
score: 99.35332892922794
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) , variable ) ;
rank: 373
score: 99.2597427368164
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 373
score: 99.21835327148438
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 373
score: 99.18872788373162
patch: throw super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 373
score: 98.92958984375
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + n ;
rank: 373
score: 98.89434455422794
patch: return n . get CaMeL Parent ( ) . get CaMeL Value ( ) ; }
rank: 373
score: 98.59056745256696
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + next ) ;
rank: 373
score: 98.58027787642045
patch: return KILL . KILL . KILL . KILL KILL ;
rank: 373
score: 98.12096405029297
patch: return ; = ; = this ;
rank: 374
score: 99.35327888257575
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . get CaMeL Cfg ( ) ) ;
rank: 374
score: 99.25966925370066
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) ) ) ;
rank: 374
score: 99.2177734375
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 374
score: 99.18376329210069
patch: result = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 374
score: 98.92945861816406
patch: if ( n . get CaMeL String ( ) . equals ( $STRING$ ) ;
rank: 374
score: 98.8940185546875
patch: return name . equals ( n . get CaMeL String ( ) ) ;
rank: 374
score: 98.58968411959134
patch: if ( parent . get CaMeL Property CaMeL Type ( ) ;
rank: 374
score: 98.57962375217014
patch: System . out . println ( $STRING$ ;
rank: 374
score: 98.12095133463542
patch: return KILL . KILL . ; . ;
rank: 375
score: 99.35283833165323
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 375
score: 99.21748570033482
patch: if ( Node CaMeL Util . ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) {
rank: 375
score: 99.18104463465073
patch: return n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 375
score: 98.92937360491071
patch: if ( Node CaMeL Util . KILL . equals ( n ) ;
rank: 375
score: 98.58933668870192
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value ;
rank: 375
score: 98.57914733886719
patch: return KILL . KILL == KILL ;
rank: 375
score: 98.12025451660156
patch: return Float . KILL . KILL ;
rank: 376
score: 99.37454223632812
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 376
score: 99.35283660888672
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( n ) ) ;
rank: 376
score: 99.25924584173387
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Node ( n ) ) ;
rank: 376
score: 99.21715914818549
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 376
score: 99.180419921875
patch: return null . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 376
score: 98.92921447753906
patch: if ( Node CaMeL Util . KILL . KILL . equals ( node ) )
rank: 376
score: 98.89284153988487
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ) . value ;
rank: 376
score: 98.58809720552884
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + node ;
rank: 376
score: 98.57882690429688
patch: return false ; } return KILL . KILL ;
rank: 376
score: 98.11854553222656
patch: return KILL . KILL . KILL (
rank: 377
score: 99.37444911858974
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( , variable ) ) ;
rank: 377
score: 99.35212311921296
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) )
rank: 377
score: 99.258935546875
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ) ;
rank: 377
score: 99.21690538194444
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . READ } ;
rank: 377
score: 99.17975212545956
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , name ) ;
rank: 377
score: 98.9272232055664
patch: if ( Node CaMeL Util . KILL . & Node CaMeL Util . KILL )
rank: 377
score: 98.5859375
patch: return KILL . KILL . return KILL . KILL ;
rank: 377
score: 98.5766934481534
patch: return true ; return KILL . KILL . KILL ;
rank: 377
score: 98.11631774902344
patch: return KILL . KILL . false ;
rank: 378
score: 99.3739875344669
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n , variable ) ;
rank: 378
score: 99.35188094429348
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node , n ) ;
rank: 378
score: 99.21656212439903
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . } ;
rank: 378
score: 99.17973776424633
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( name , variable ) ;
rank: 378
score: 98.89249674479167
patch: return n . get CaMeL Node ( ) . get CaMeL Parent ( ) . get CaMeL Node ( ;
rank: 378
score: 98.58563232421875
patch: throw new Illegal CaMeL State CaMeL Exception return $STRING$ ; }
rank: 378
score: 98.57637162642045
patch: return parent . KILL . KILL . KILL ; ;
rank: 378
score: 98.11630249023438
patch: return KILL . KILL . refs ;
rank: 379
score: 99.37383848248106
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . get CaMeL String ( ) ) ;
rank: 379
score: 99.35159400201613
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) ) ) ;
rank: 379
score: 99.21650548135081
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL . get CaMeL Node ( ) ) ;
rank: 379
score: 99.17967313878677
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , 0 ) ;
rank: 379
score: 98.92622375488281
patch: System . out . println ( $STRING$ + n . get CaMeL String ( ;
rank: 379
score: 98.58433180588942
patch: throw new Runtime CaMeL Exception ( $STRING$ + this . KILL ;
rank: 379
score: 98.57167746803977
patch: return super . KILL KILL KILL KILL . KILL ;
rank: 379
score: 98.11583794487848
patch: return KILL . KILL ; return / ;
rank: 380
score: 99.37352775804925
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Cfg ( ) , variable ) ;
rank: 380
score: 99.25824159564394
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill . return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL String ( ) ) ;
rank: 380
score: 99.21647397933468
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL . get CaMeL Parent ( ) ) ;
rank: 380
score: 99.17963005514706
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , false ) ;
rank: 380
score: 98.9261962890625
patch: if ( node . get CaMeL Current CaMeL Node ( ) == null )
rank: 380
score: 98.58303833007812
patch: System . err . println ( $STRING$ ; return false ;
rank: 380
score: 98.57157592773437
patch: return get CaMeL Result ( ) . KILL ;
rank: 380
score: 98.11566162109375
patch: return KILL . KILL . TRUE ; }
rank: 381
score: 99.17766370271382
patch: return callback . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 381
score: 98.9261833639706
patch: if ( Node CaMeL Util . KILL . KILL . length ( ) == 0 )
rank: 381
score: 98.89168294270833
patch: return n . get CaMeL Parent ( ) . get CaMeL Value ( ) . equals ;
rank: 381
score: 98.5829569498698
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ KILL ;
rank: 381
score: 98.57087846235795
patch: return super . KILL . KILL . KILL ; ;
rank: 381
score: 98.1150131225586
patch: return this ; } return KILL ;
rank: 382
score: 99.351015625
patch: return n . get CaMeL Parent ( ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 382
score: 99.25809518914474
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL First CaMeL Child ( n . get CaMeL Parent ( ) ) ) ;
rank: 382
score: 99.1776123046875
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , $STRING$ ) ;
rank: 382
score: 98.92605356069711
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ; }
rank: 382
score: 98.89141845703125
patch: return parent . get CaMeL Parent ( ) . get CaMeL Parent ( ) ;
rank: 382
score: 98.58205344460227
patch: throw new Illegal CaMeL State CaMeL Exception ( ; }
rank: 382
score: 98.11442057291667
patch: return KILL . KILL . KILL ; .
rank: 383
score: 99.17705977590461
patch: return null . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ;
rank: 383
score: 98.92588297526042
patch: return node . get CaMeL Parent CaMeL Node ( ) ;
rank: 383
score: 98.89109293619792
patch: return n . get CaMeL Boolean CaMeL Value ( ) ;
rank: 383
score: 98.57985617897727
patch: result = KILL . KILL . KILL . KILL ;
rank: 383
score: 98.57066761363636
patch: return KILL . KILL . KILL ; break ; }
rank: 383
score: 98.1142578125
patch: return true ; return $STRING$ ;
rank: 384
score: 99.25700577445652
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( name , variable ) ;
rank: 384
score: 99.17573627672698
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , $STRING$ ) ;
rank: 384
score: 98.92471078725961
patch: return value . equals ( Node CaMeL Util . KILL ) ;
rank: 384
score: 98.89051577919408
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . value ;
rank: 384
score: 98.57920143821023
patch: { return KILL . KILL . KILL . KILL ;
rank: 384
score: 98.57013617621527
patch: finally { return KILL . KILL ; }
rank: 384
score: 98.11380767822266
patch: / * return KILL . KILL ;
rank: 385
score: 99.37251790364583
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL
rank: 385
score: 99.35001220703126
patch: state = Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 385
score: 99.25666246916118
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) )
rank: 385
score: 99.21590847439236
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 385
score: 99.17498016357422
patch: evaluated = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 385
score: 98.92392578125
patch: return node . get CaMeL Value ( ) ;
rank: 385
score: 98.89011928013393
patch: return get CaMeL Value ( ) . to CaMeL String ( ) ;
rank: 385
score: 98.56903076171875
patch: return Integer . get CaMeL Instance ( ) ;
rank: 385
score: 98.1133544921875
patch: return - KILL ;
rank: 386
score: 99.25663618607955
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 386
score: 99.21578176398026
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , variable ) ) ;
rank: 386
score: 99.17433794806985
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( type , variable ) ;
rank: 386
score: 98.91957194010416
patch: return Integer . value CaMeL Of ( n . get CaMeL String ( ;
rank: 386
score: 98.89003392269737
patch: return n . get CaMeL Value ( ) . replace CaMeL All ( $STRING$ , $STRING$ ) ;
rank: 386
score: 98.57745971679688
patch: { throw new Runtime CaMeL Exception ( $STRING$ ;
rank: 386
score: 98.11304473876953
patch: return KILL ; ; return KILL ;
rank: 387
score: 99.25660615808823
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ) ;
rank: 387
score: 99.21575927734375
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . KILL ;
rank: 387
score: 99.17429486443015
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , true ) ;
rank: 387
score: 98.9190673828125
patch: if ( Node CaMeL Util . KILL . contains ( n ) )
rank: 387
score: 98.8894775390625
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . ; }
rank: 387
score: 98.57739868164063
patch: throw new Runtime CaMeL Exception ( ; , ;
rank: 387
score: 98.56859130859375
patch: return super . KILL KILL KILL KILL ) ;
rank: 387
score: 98.1121826171875
patch: return KILL ; return return KILL ;
rank: 388
score: 99.2565234375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n , variable ) ;
rank: 388
score: 99.21553955078124
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 388
score: 99.17412366365132
patch: return variable . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 388
score: 98.91905517578125
patch: return KILL . get CaMeL Value ( ) ;
rank: 388
score: 98.88921508789062
patch: if ( Node CaMeL Util . is CaMeL Qualified CaMeL Name ( n . get CaMeL String ( ;
rank: 388
score: 98.57681978665866
patch: if ( node . get CaMeL Property CaMeL Type ( ) ;
rank: 388
score: 98.56700303819444
patch: return 0 ; return KILL . KILL ;
rank: 388
score: 98.112060546875
patch: return Double . EMPTY ;
rank: 389
score: 99.34970555160984
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL , n . get CaMeL Parent ( ) ) ;
rank: 389
score: 99.256494140625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable , variable ) ;
rank: 389
score: 99.21523030598958
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ; }
rank: 389
score: 99.17233758223684
patch: return function . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 389
score: 98.91904296875
patch: throw new Error ( $STRING$ + n . get CaMeL String ( ) ;
rank: 389
score: 98.8887939453125
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) . equals ;
rank: 389
score: 98.57598322088069
patch: throw new Illegal CaMeL State CaMeL Exception return KILL ;
rank: 389
score: 98.56644694010417
patch: return Boolean . EMPTY ;
rank: 389
score: 98.11116245814732
patch: return Integer . . 1 ;
rank: 390
score: 99.34957238399622
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable )
rank: 390
score: 99.25645926339286
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill . return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 390
score: 99.214609375
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . MAYBE _ LIVE ) ;
rank: 390
score: 99.17025596217105
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , 0 ) ;
rank: 390
score: 98.918701171875
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }
rank: 390
score: 98.8887451171875
patch: if ( Node CaMeL Util . is CaMeL Escaped ( n . get CaMeL String ( ) ) )
rank: 390
score: 98.57588958740234
patch: return null ; } else if ;
rank: 390
score: 98.56642844460227
patch: return KILL . KILL . KILL ; } else {
rank: 390
score: 98.11097717285156
patch: return null ; . return KILL ;
rank: 391
score: 99.37162449048913
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n , variable ) ) ;
rank: 391
score: 99.34925497731855
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 391
score: 99.21366550611413
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) )
rank: 391
score: 99.17019171463816
patch: return n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ;
rank: 391
score: 98.91747029622395
patch: throw new Illegal CaMeL State CaMeL Exception ( ) ; }
rank: 391
score: 98.88825141059027
patch: return n . get CaMeL Value ( ) + n . get CaMeL Value ( ) ;
rank: 391
score: 98.57566615513393
patch: throw new Runtime CaMeL Exception ;
rank: 391
score: 98.56577370383523
patch: return Node CaMeL Util . get CaMeL Instance ( ;
rank: 392
score: 99.25602213541667
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . n , n . get CaMeL String ( ) ) ;
rank: 392
score: 99.21357654389881
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . MAYBE _ LIVE ) ;
rank: 392
score: 99.16948784722223
patch: return ! is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 392
score: 98.88819580078125
patch: return n . get CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . ; }
rank: 392
score: 98.5751483623798
patch: System . err . println ( $STRING$ ) ; return null ;
rank: 392
score: 98.5656005859375
patch: return ) . KILL . KILL . KILL ;
rank: 392
score: 98.11028180803571
patch: return this ; return $STRING$ ;
rank: 393
score: 99.25539202008929
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) )
rank: 393
score: 99.21351207386364
patch: return get CaMeL Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ;
rank: 393
score: 98.91649280894886
patch: switch ( n . get CaMeL Type ( ) ;
rank: 393
score: 98.88790690104166
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ) ; }
rank: 393
score: 98.57494099934895
patch: throw new Runtime CaMeL Exception ( $STRING$ + ; . ;
rank: 393
score: 98.5640380859375
patch: return ref . KILL . KILL . KILL ;
rank: 393
score: 98.10986328125
patch: return T . KILL . KILL ;
rank: 394
score: 99.37108764648437
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ) ;
rank: 394
score: 99.34838025323276
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ;
rank: 394
score: 99.21319580078125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . ) ;
rank: 394
score: 99.16778205422794
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , null ) ;
rank: 394
score: 98.91606794084821
patch: } else if ( Node CaMeL Util . KILL . equals ( ;
rank: 394
score: 98.5740966796875
patch: throw new Runtime CaMeL Exception ( $STRING$ + 1 ;
rank: 394
score: 98.56394264914773
patch: return parent . KILL . KILL . KILL . ;
rank: 394
score: 98.10963948567708
patch: return KILL . KILL . KILL . MIN
rank: 395
score: 99.3709716796875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 395
score: 99.25515625
patch: try { return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ;
rank: 395
score: 99.21255859375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . n ) ;
rank: 395
score: 99.16695363898026
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node , variable ) ;
rank: 395
score: 98.91551106770834
patch: if ( n . get CaMeL Current CaMeL Node ( ) == null )
rank: 395
score: 98.88605346679688
patch: if ( Node CaMeL Util . ; else throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 395
score: 98.57355205829327
patch: System . err . println ( $STRING$ ; return null ; }
rank: 395
score: 98.10862223307292
patch: return KILL . KILL . EMPTY ; }
rank: 396
score: 99.37088775634766
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL First ( n ) ) ;
rank: 396
score: 99.34707179214016
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . n , n . get CaMeL Parent ( ) ) ;
rank: 396
score: 99.25488999310662
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( index , variable ) ;
rank: 396
score: 99.21221923828125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Control CaMeL Flow CaMeL
rank: 396
score: 99.16616981907895
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , false ) ;
rank: 396
score: 98.91484723772321
patch: if ( Node CaMeL Util . KILL . KILL . matches ( ;
rank: 396
score: 98.88557514391448
patch: return n . get CaMeL Value ( ) . equals ( n . get CaMeL Boolean ( ;
rank: 396
score: 98.57317645733173
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ : $STRING$ ;
rank: 396
score: 98.10785522460938
patch: return . KILL ;
rank: 397
score: 99.37067057291667
patch: return Node CaMeL Util . is CaMeL Lhs ( n , n ) ;
rank: 397
score: 99.25487655248398
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) )
rank: 397
score: 99.21162923177083
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . } ;
rank: 397
score: 99.1661148071289
patch: result = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 397
score: 98.9146728515625
patch: if ( Node CaMeL Util . is CaMeL Active ( n ) )
rank: 397
score: 98.88526826746323
patch: return n . get CaMeL Node ( ) . get CaMeL Value ( ) ; }
rank: 397
score: 98.57286580403645
patch: throw new Illegal CaMeL Argument CaMeL Exception return $STRING$ ; }
rank: 397
score: 98.55836070667614
patch: return get CaMeL Runtime ( ) . KILL KILL ;
rank: 397
score: 98.10730743408203
patch: return KILL . KILL . $STRING$ ;
rank: 398
score: 99.37005293996711
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Type ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 398
score: 99.21088698814656
patch: return n . get CaMeL Parent ( ) . Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 398
score: 99.16563585069444
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable , ) ;
rank: 398
score: 98.91426304408482
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ; }
rank: 398
score: 98.10702514648438
patch: return ; = null ;
rank: 399
score: 99.36997919497283
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL String ( ) ) ) ;
rank: 399
score: 99.2546053799716
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n )
rank: 399
score: 99.21036202566964
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ) ;
rank: 399
score: 99.16429379111842
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , this ) ;
rank: 399
score: 98.91373988560268
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + n . ;
rank: 399
score: 98.88414916992187
patch: return n . get CaMeL Parent ( ) . equals ( n . get CaMeL String ( ) ;
rank: 399
score: 98.57227672230114
patch: throw new Runtime CaMeL Exception ( $STRING$ + id ;
rank: 399
score: 98.10700988769531
patch: return refs . KILL . KILL ;
rank: 400
score: 99.36993197737068
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) ) ;
rank: 400
score: 99.346435546875
patch: return n . get CaMeL Cfg ( ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 400
score: 99.25431082589286
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) , variable ) ;
rank: 400
score: 99.16424239309211
patch: return children . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 400
score: 98.9128926595052
patch: this . throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 400
score: 98.57134399414062
patch: throw new Runtime CaMeL Exception ( $STRING$ , ;
rank: 400
score: 98.10682896205357
patch: return KILL . return $STRING$ ;
rank: 401
score: 99.36989113136575
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( name , n . get CaMeL Parent ( ) ) ;
rank: 401
score: 99.2540283203125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ; }
rank: 401
score: 99.20984903971355
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph .
rank: 401
score: 99.16414602179276
patch: try { return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 401
score: 98.91213754507211
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ; }
rank: 401
score: 98.88290066189236
patch: return Short . value CaMeL Of ( n . get CaMeL String ( ) ) . ;
rank: 401
score: 98.5711337002841
patch: throw get CaMeL Runtime ( ) . return KILL ;
rank: 401
score: 98.55604553222656
patch: return Boolean . get ( ) ;
rank: 401
score: 98.10636683872768
patch: return scope . KILL KILL ;
rank: 402
score: 99.36986678685898
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Graph ( ) . get CaMeL First CaMeL Child ( ) ) ;
rank: 402
score: 99.34615325927734
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , Node CaMeL Util . get CaMeL Parent ( n ) ) ;
rank: 402
score: 99.2539312900641
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 402
score: 99.20981917842742
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL Instance ( ) ) ;
rank: 402
score: 99.16409301757812
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ; }
rank: 402
score: 98.9118182842548
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + ; }
rank: 402
score: 98.88282121930804
patch: return get CaMeL Value ( ) . get CaMeL Value ( ) ;
rank: 402
score: 98.57040405273438
patch: try { return KILL . KILL . KILL . KILL ;
rank: 402
score: 98.55504760742187
patch: return KILL KILL . KILL . KILL ; }
rank: 402
score: 98.10571967230902
patch: return KILL . KILL . KILL . FALSE
rank: 403
score: 99.36971958705357
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 403
score: 99.34604027157738
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( index ) ;
rank: 403
score: 99.25358812736742
patch: return Control CaMeL Flow CaMeL Graph . super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 403
score: 99.16399825246711
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 403
score: 98.88264295789931
patch: return String . value CaMeL Of ( n . get CaMeL String ( ) ) ; }
rank: 403
score: 98.57018103966347
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; } else
rank: 403
score: 98.10557047526042
patch: return ; = $STRING$ ;
rank: 404
score: 99.3693911903783
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( 0 ) ) ;
rank: 404
score: 99.34598094019397
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 404
score: 99.25339577414773
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable )
rank: 404
score: 99.20943648726852
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . KILL } ;
rank: 404
score: 99.16361919202302
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , true ) ;
rank: 404
score: 98.90828080610795
patch: throw new Runtime CaMeL Exception ( $STRING$ + n ;
rank: 404
score: 98.5699129971591
patch: throw new Runtime CaMeL Exception ( $STRING$ KILL ) ;
rank: 404
score: 98.55216064453126
patch: throw new Runtime CaMeL Exception ( node ) ;
rank: 404
score: 98.10511779785156
patch: return System . . . . ;
rank: 405
score: 99.34580993652344
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) ) ;
rank: 405
score: 99.20915876116071
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ( Node CaMeL
rank: 405
score: 99.16319173177084
patch: if ( Node CaMeL Util . is CaMeL Lhs ( variable ) ) {
rank: 405
score: 98.90663248697916
patch: if ( variable . equals ( n . get CaMeL String ( ) ;
rank: 405
score: 98.88239203559027
patch: return n . get CaMeL Value ( ) . get CaMeL Value ( ) . get ;
rank: 405
score: 98.56924203725961
patch: throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ + $STRING$ ;
rank: 405
score: 98.5521240234375
patch: } else { return KILL . KILL ; }
rank: 405
score: 98.10501861572266
patch: return super . KILL return $STRING$ ;
rank: 406
score: 99.36919403076172
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Graph ( n ) ) ;
rank: 406
score: 99.34517785274622
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent CaMeL Node ( ) ) ;
rank: 406
score: 99.20907738095238
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( next ) ;
rank: 406
score: 99.1626708984375
patch: throw is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 406
score: 98.90625939002403
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; }
rank: 406
score: 98.88233642578125
patch: return KILL . get CaMeL Value ( ) . equals ( n . get CaMeL String ( ) ;
rank: 406
score: 98.56736403245192
patch: throw new Runtime CaMeL Exception . Exception ( $STRING$ + $STRING$ ;
rank: 406
score: 98.10432942708333
patch: throw KILL . KILL ;
rank: 407
score: 99.36912777549342
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL String ( n . get CaMeL Parent ( ) ) ) ;
rank: 407
score: 99.25319310238487
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 407
score: 99.20906888521634
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Control CaMeL
rank: 407
score: 99.16244506835938
patch: result = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 407
score: 98.90532892400569
patch: return Boolean . value CaMeL Of ( true ) ;
rank: 407
score: 98.565673828125
patch: System . out . println ( $STRING$ + ; return KILL ;
rank: 407
score: 98.55165793678977
patch: return false . KILL . KILL . KILL ; }
rank: 407
score: 98.10403103298611
patch: return KILL ; } if return KILL ;
rank: 408
score: 99.3690655048077
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) , ) ;
rank: 408
score: 99.20893916377315
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE } ;
rank: 408
score: 98.90458540482955
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; }
rank: 408
score: 98.88034057617188
patch: return Node CaMeL Util . ; } else { return Node CaMeL Util . ;
rank: 408
score: 98.56488506610577
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ? ; }
rank: 408
score: 98.10359954833984
patch: return KILL . KILL . max ;
rank: 409
score: 99.16067270132211
patch: return Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 409
score: 98.904052734375
patch: if ( Node CaMeL Util . is CaMeL Constant ( n ) )
rank: 409
score: 98.87888697574013
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ) . KILL ;
rank: 409
score: 98.56442260742188
patch: throw new Runtime CaMeL Exception ( $STRING$ , return ) ;
rank: 409
score: 98.55017700195313
patch: return null ; } return KILL . KILL ;
rank: 409
score: 98.10284423828125
patch: return KILL . FALSE . KILL ;
rank: 410
score: 99.2528125
patch: this . return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 410
score: 99.16065889246323
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n , variable ) ) {
rank: 410
score: 98.90340576171874
patch: return value . to CaMeL String ( ) ;
rank: 410
score: 98.8764419555664
patch: return n . get CaMeL Value ( ) + Node CaMeL Util . KILL ;
rank: 410
score: 98.5644022623698
patch: throw new Runtime CaMeL Exception ( $STRING$ + value ) ;
rank: 410
score: 98.10126495361328
patch: return KILL . KILL . println ;
rank: 411
score: 99.34272766113281
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 411
score: 99.25220444623162
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n . get CaMeL Parent ( ) ) ) {
rank: 411
score: 98.89993722098214
patch: if ( Node CaMeL Util . is CaMeL Qualified CaMeL Name ( ;
rank: 411
score: 98.5631573016827
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + return ;
rank: 411
score: 98.54887251420455
patch: return ( ) . KILL . KILL . KILL ;
rank: 411
score: 98.09965209960937
patch: return ; . ;
rank: 412
score: 99.3679443359375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) . variable ) ;
rank: 412
score: 99.34245499320652
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , $STRING$ ) ;
rank: 412
score: 99.20809936523438
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . ) ;
rank: 412
score: 99.1589584350586
patch: evaluated = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 412
score: 98.89988356370192
patch: if ( n . get CaMeL Value ( ) == null )
rank: 412
score: 98.56280517578125
patch: throw new Runtime CaMeL Exception . KILL ) ;
rank: 412
score: 98.54842529296874
patch: return KILL . KILL != KILL . KILL ;
rank: 412
score: 98.09905242919922
patch: return true . KILL . KILL ;
rank: 413
score: 99.36781377377717
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( child CaMeL Value , variable ) ;
rank: 413
score: 99.34229255445075
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 413
score: 99.25196533203125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( . get CaMeL String ( ) ) ;
rank: 413
score: 99.15711975097656
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) .
rank: 413
score: 98.89869791666666
patch: if ( node . get CaMeL First CaMeL Child ( ) == null )
rank: 413
score: 98.5625751201923
patch: System . err . println ( $STRING$ + ; return null ;
rank: 413
score: 98.5483731356534
patch: return null . KILL KILL . KILL . KILL ;
rank: 413
score: 98.09832763671875
patch: return KILL ; } if return $STRING$ ;
rank: 414
score: 99.3677978515625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( variable ) ) ;
rank: 414
score: 99.34221281828704
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) )
rank: 414
score: 99.25193737399194
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) : null ;
rank: 414
score: 99.20804268973214
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 414
score: 99.15607048483456
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , node ) ;
rank: 414
score: 98.89842006138393
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + n ) ;
rank: 414
score: 98.87248792146382
patch: return n . get CaMeL Node ( ) . get CaMeL Parent CaMeL Node ( ) . ;
rank: 414
score: 98.56234036959134
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + type ;
rank: 414
score: 98.09762912326389
patch: return KILL . KILL . EMPTY . ;
rank: 415
score: 99.36750594429348
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , null ) ;
rank: 415
score: 99.34210759943181
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . n . get CaMeL Parent ( ) ) ;
rank: 415
score: 99.15591251148896
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , 1 ) ;
rank: 415
score: 98.89808872767857
patch: if ( Node CaMeL Util . is CaMeL Interface ( n ) )
rank: 415
score: 98.87220110212054
patch: return name . equals ( n . get CaMeL String ( ) ;
rank: 415
score: 98.56209309895833
patch: System . out . println ( $STRING$ + type ) ;
rank: 415
score: 98.54758522727273
patch: return get CaMeL Root CaMeL Node ( ) ; ;
rank: 415
score: 98.09726291232639
patch: return KILL . KILL . KILL . this
rank: 416
score: 99.36726022273936
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ) ;
rank: 416
score: 99.25167713994566
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( id , n . get CaMeL Parent ( ) ) ;
rank: 416
score: 99.20778401692708
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . } ;
rank: 416
score: 99.155224609375
patch: throw is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 416
score: 98.89793178013393
patch: if ( Node CaMeL Util . KILL . equals ( node ) ;
rank: 416
score: 98.87191611842105
patch: return Double . value CaMeL Of ( n . get CaMeL Value ( ) ) . Double ;
rank: 416
score: 98.56058959960937
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ;
rank: 416
score: 98.5465975674716
patch: return $STRING$ . KILL . KILL . KILL ; }
rank: 416
score: 98.09720284598214
patch: return this . return KILL ;
rank: 417
score: 99.34172453703704
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . KILL , variable ) ;
rank: 417
score: 99.25162109375
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) { }
rank: 417
score: 99.20761213631465
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Instance ( ) ) ;
rank: 417
score: 99.15521599264706
patch: return scope . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 417
score: 98.89712727864584
patch: if ( node . get CaMeL First CaMeL Child ( ) != null )
rank: 417
score: 98.87165270353618
patch: return Integer . value CaMeL Of ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 417
score: 98.54623413085938
patch: return get CaMeL Graph ( ) . KILL ;
rank: 417
score: 98.09706115722656
patch: return KILL . . return KILL ;
rank: 418
score: 99.20750378024194
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . Control CaMeL Flow CaMeL Graph . Node ) ;
rank: 418
score: 99.15399848090277
patch: return = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 418
score: 98.89599609375
patch: if ( Node CaMeL Util . is CaMeL Na CaMeL N ( ;
rank: 418
score: 98.87162700452302
patch: return Short . value CaMeL Of ( n . get CaMeL String ( ) ) . value ;
rank: 418
score: 98.5591328938802
patch: throw new Runtime CaMeL Exception ( new Runtime CaMeL Exception ;
rank: 418
score: 98.5461758700284
patch: return node . get CaMeL Node ( ) ; ;
rank: 418
score: 98.0965576171875
patch: return ( Integer ; . KILL ) ;
rank: 419
score: 99.36702827785327
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Graph ( ) ;
rank: 419
score: 99.20641637731481
patch: return Control CaMeL Flow CaMeL Graph . KILL . KILL . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 419
score: 99.15355727251838
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , this ) ;
rank: 419
score: 98.89544122869319
patch: return Boolean . value CaMeL Of ( false ) ;
rank: 419
score: 98.87126079358552
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) . ;
rank: 419
score: 98.55611478365384
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + 0 ;
rank: 419
score: 98.54604270241477
patch: return KILL . . KILL . KILL . KILL ;
rank: 419
score: 98.0963363647461
patch: return KILL . KILL . EXPRESSION ;
rank: 420
score: 99.3410977450284
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) * /
rank: 420
score: 99.25125254755434
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , null ) ;
rank: 420
score: 99.20633250269397
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL Instance ( ) ) ;
rank: 420
score: 99.15257263183594
patch: state = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 420
score: 98.89501953125
patch: return - 1 ;
rank: 420
score: 98.87069498697916
patch: return n . get CaMeL Parent ( ) . get CaMeL Value ( ;
rank: 420
score: 98.55560772235577
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + id ;
rank: 420
score: 98.54443359375
patch: else { return KILL . KILL ; }
rank: 420
score: 98.0953598022461
patch: return ; . ; = $STRING$ ;
rank: 421
score: 99.3668571920956
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Node ( n ) , variable ) ;
rank: 421
score: 99.34095348011364
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) , variable ) ;
rank: 421
score: 99.20627357219827
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n . get CaMeL Parent ( ) ) ;
rank: 421
score: 99.15207806755515
patch: return Node CaMeL Util . KILL ( n . get CaMeL Parent ( ) ) ;
rank: 421
score: 98.89456881009616
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }
rank: 421
score: 98.87031824448529
patch: return n . get CaMeL Parent ( ) . get CaMeL Node ( ) ; }
rank: 421
score: 98.55499737079327
patch: if ( n . get CaMeL Property CaMeL Type ( ) ;
rank: 421
score: 98.54119318181819
patch: return get CaMeL Instance ( ) . KILL KILL ;
rank: 421
score: 98.09523228236607
patch: return KILL . EMPTY KILL ;
rank: 422
score: 99.36678059895833
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 422
score: 99.25104314630681
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) , variable ) ;
rank: 422
score: 99.20624831627156
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE } ;
rank: 422
score: 99.15168313419117
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( $STRING$ , variable ) ;
rank: 422
score: 98.89454868861607
patch: return Node CaMeL Util . KILL && Node CaMeL Util . KILL ;
rank: 422
score: 98.87020670572916
patch: return n . get CaMeL Value ( ) . get CaMeL Value ( ;
rank: 422
score: 98.55448091947116
patch: throw new Runtime CaMeL Exception ( $STRING$ + id + $STRING$ ;
rank: 422
score: 98.5406982421875
patch: return super . KILL . KILL == KILL ;
rank: 422
score: 98.09516143798828
patch: return ; = ; = true ;
rank: 423
score: 99.34090169270833
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) , n ) ;
rank: 423
score: 99.25090225883152
patch: ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ;
rank: 423
score: 99.20616861979167
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 423
score: 99.1514892578125
patch: return return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 423
score: 98.89251302083333
patch: report CaMeL Error ( $STRING$ + n . get CaMeL String ( ) ;
rank: 423
score: 98.55323204627403
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null ;
rank: 423
score: 98.5390869140625
patch: return Strings . KILL . KILL . KILL ;
rank: 423
score: 98.09440104166667
patch: return KILL . KILL ; ; } ;
rank: 424
score: 99.36667994449013
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL String ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 424
score: 99.250751953125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) , variable ) ;
rank: 424
score: 99.20580240885417
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ,
rank: 424
score: 98.86942545572917
patch: return n . get CaMeL Value ( ) . equals CaMeL Ignore CaMeL Case ( $STRING$ )
rank: 424
score: 98.552734375
patch: System . out . println ( KILL ) ; return null ;
rank: 424
score: 98.53857421875
patch: return KILL . KILL KILL KILL KILL ;
rank: 424
score: 98.0943832397461
patch: return KILL . KILL . START ;
rank: 425
score: 99.36665271577381
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( false ) ;
rank: 425
score: 99.34016557173295
patch: ret = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 425
score: 99.25072479248047
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 425
score: 99.20577870244566
patch: return get CaMeL Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 425
score: 99.15141745174633
patch: return callback . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 425
score: 98.89104817708333
patch: if ( Node CaMeL Util . KILL . KILL . KILL . KILL )
rank: 425
score: 98.86941189236111
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent ( ) . ; }
rank: 425
score: 98.53783069957386
patch: return this . KILL . get CaMeL Instance ( ;
rank: 425
score: 98.09384155273438
patch: return ; . . = KILL ;
rank: 426
score: 99.3665745511968
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Name ( n ) ) ) ;
rank: 426
score: 99.34010314941406
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL Node ( n ) , variable ) ;
rank: 426
score: 99.250546875
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) )
rank: 426
score: 99.2054912860577
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL Variable CaMeL
rank: 426
score: 99.14993106617646
patch: return declarations . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 426
score: 98.89051310221355
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ;
rank: 426
score: 98.86894989013672
patch: if ( n . get CaMeL Type ( ) != Node CaMeL Util . ;
rank: 426
score: 98.55091349283855
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; }
rank: 426
score: 98.5365323153409
patch: return KILL . KILL . . KILL . KILL ;
rank: 426
score: 98.09096272786458
patch: return Double . KILL . KILL ; }
rank: 427
score: 99.36634318033855
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( n ) ) ) ;
rank: 427
score: 99.20541616586539
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL . } ;
rank: 427
score: 99.1491470336914
patch: return new is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 427
score: 98.86866760253906
patch: return Short . value CaMeL Of ( n . get CaMeL Value ( ) ;
rank: 427
score: 98.5359375
patch: return true ; } return KILL . KILL ;
rank: 427
score: 98.09041341145833
patch: return ( Integer ; . next ) ;
rank: 428
score: 99.36629231770833
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , null ) ;
rank: 428
score: 99.33964206861413
patch: return n . get CaMeL Cfg ( ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 428
score: 99.24932861328125
patch: return ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 428
score: 99.20534035011575
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . MAYBE _ LIVE ) ;
rank: 428
score: 99.14911247702206
patch: if ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) {
rank: 428
score: 98.88923863002232
patch: if ( Node CaMeL Util . KILL . equals ( ; ) {
rank: 428
score: 98.86814778645834
patch: return n . get CaMeL Parent ( ) . get CaMeL Node ( ;
rank: 428
score: 98.55059814453125
patch: throw new Runtime CaMeL Exception ( this ) ;
rank: 428
score: 98.09023030598958
patch: return Math . TRUE ;
rank: 429
score: 99.36623216711956
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n ) , variable ) ;
rank: 429
score: 99.2052734375
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL } ;
rank: 429
score: 99.14818617876838
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( 1 , variable ) ;
rank: 429
score: 98.88859340122768
patch: return node . KILL . KILL . KILL . KILL . KILL ;
rank: 429
score: 98.55031174879808
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $NUMBER$ ;
rank: 429
score: 98.5347900390625
patch: return Character . KILL . KILL . KILL ;
rank: 429
score: 98.08999633789062
patch: return ANNOTATION . KILL . KILL ;
rank: 430
score: 99.33918108258929
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ;
rank: 430
score: 99.20484754774306
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL
rank: 430
score: 99.14543321397569
patch: return || is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 430
score: 98.88667805989583
patch: if ( n . get CaMeL Symbol ( ) . equals ( $STRING$ ;
rank: 430
score: 98.86651290090461
patch: if ( Node CaMeL Util . is CaMeL Anonymous ( n . get CaMeL Parent ( ) ;
rank: 430
score: 98.53477894176136
patch: return KILL . KILL . KILL . . . ;
rank: 430
score: 98.08972930908203
patch: return KILL . KILL ; ; ;
rank: 431
score: 99.33908081054688
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ( Node ) n . get CaMeL First CaMeL Child ( ) ) ;
rank: 431
score: 99.20435384114583
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 431
score: 99.14519186580883
patch: return Boolean . is CaMeL Lhs ( n . get CaMeL Parent ( ) ) ;
rank: 431
score: 98.8861083984375
patch: if ( Node CaMeL Util . KILL . KILL . equals ( ; ;
rank: 431
score: 98.8664779663086
patch: return Short . value CaMeL Of ( n . get CaMeL String ( ) ;
rank: 431
score: 98.54997035435268
patch: return null ; } else {
rank: 431
score: 98.53373579545455
patch: return 0 . KILL . KILL . KILL . ;
rank: 431
score: 98.08941650390625
patch: return null ; return this ;
rank: 432
score: 99.36505909455128
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ) ;
rank: 432
score: 99.2482379415761
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( id , variable ) ;
rank: 432
score: 99.20431518554688
patch: return n . get CaMeL First CaMeL Child ( ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 432
score: 99.14470757378473
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ,
rank: 432
score: 98.8857421875
patch: throw new No CaMeL Such CaMeL Method CaMeL Error ( $STRING$ + n ;
rank: 432
score: 98.54925067608173
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $STRING$ ;
rank: 432
score: 98.5337246981534
patch: logger . out . println return KILL . KILL ;
rank: 432
score: 98.08868408203125
patch: return KILL . KILL ; . ;
rank: 433
score: 99.33845288825758
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Control CaMeL Flow CaMeL Graph . get CaMeL Node ( ) ) ;
rank: 433
score: 99.24814305160984
patch: return Control CaMeL Flow CaMeL Graph . KILL . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 433
score: 99.20355224609375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ,
rank: 433
score: 99.14376068115234
patch: return return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 433
score: 98.88486153738839
patch: if ( n . get CaMeL String ( ) . equals ( ;
rank: 433
score: 98.86576573988971
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent ( ) . ;
rank: 433
score: 98.5479736328125
patch: throw new Illegal CaMeL Argument CaMeL Exception return KILL ;
rank: 433
score: 98.53345947265625
patch: return KILL . KILL ; } return null ;
rank: 433
score: 98.08790418836806
patch: return this . KILL . KILL . KILL
rank: 434
score: 99.36475670855978
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Parent ( ) ) ) ;
rank: 434
score: 99.3382235440341
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( ) ) ;
rank: 434
score: 99.20348700161638
patch: return Node CaMeL Util . ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL
rank: 434
score: 99.1436767578125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) }
rank: 434
score: 98.88351876395089
patch: throw new Class CaMeL Not CaMeL Found CaMeL Exception ( $STRING$ + ;
rank: 434
score: 98.86455335115132
patch: return Node CaMeL Util . ; } else { return Node CaMeL Util . KILL . KILL ;
rank: 434
score: 98.54782104492188
patch: System . err . println ( $STRING$ + 1 ) ;
rank: 434
score: 98.53325059678819
patch: return KILL . KILL KILL == KILL ;
rank: 434
score: 98.08769989013672
patch: return KILL . KILL KILL ; }
rank: 435
score: 99.33809204101563
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable )
rank: 435
score: 99.20306803385417
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . Control CaMeL Flow CaMeL Graph . get CaMeL
rank: 435
score: 99.14133588005515
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n + $STRING$ ) ;
rank: 435
score: 98.88321940104167
patch: return node . get CaMeL Value ( ) . equals ( $STRING$ ) ;
rank: 435
score: 98.86423211348684
patch: return n . get CaMeL Parent ( ) . get CaMeL Value ( ) . equals ( ;
rank: 435
score: 98.54722243088942
patch: System . out . println ( $STRING$ + return ( String ;
rank: 435
score: 98.53264825994319
patch: return null . KILL . KILL . KILL . ;
rank: 435
score: 98.08725411551339
patch: return Math . KILL KILL ;
rank: 436
score: 99.36439273231908
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Cfg ( n . get CaMeL Parent ( ) ) ) ;
rank: 436
score: 99.33802625868056
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . READ ) ;
rank: 436
score: 99.20302170973558
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 436
score: 99.13996438419117
patch: return KILL . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 436
score: 98.882470703125
patch: if ( node . get CaMeL Parent CaMeL Node ( ) != null )
rank: 436
score: 98.86393737792969
patch: if ( Node CaMeL Util . is CaMeL Upper CaMeL Case ( n ) )
rank: 436
score: 98.54637732872597
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + KILL ;
rank: 436
score: 98.53226318359376
patch: return KILL . KILL KILL KILL . KILL ;
rank: 436
score: 98.087158203125
patch: return new ( KILL ) ;
rank: 437
score: 99.2029559795673
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL . get CaMeL
rank: 437
score: 99.1383056640625
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( $STRING$ ) ;
rank: 437
score: 98.88125813802084
patch: if ( Node CaMeL Util . KILL ; Node CaMeL Util . KILL )
rank: 437
score: 98.54552283653847
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ; , $STRING$ ;
rank: 437
score: 98.5318270596591
patch: else return KILL . KILL . KILL ; } ;
rank: 437
score: 98.08616638183594
patch: return KILL . KILL . declaration ;
rank: 438
score: 99.3375934103261
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) : null ;
rank: 438
score: 99.20242513020834
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL
rank: 438
score: 99.13676452636719
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ; }
rank: 438
score: 98.88030450994319
patch: throw new Runtime CaMeL Exception ( $STRING$ + ; }
rank: 438
score: 98.54537963867188
patch: throw new Runtime CaMeL Exception ( $STRING$ + node ) ;
rank: 438
score: 98.5315185546875
patch: return Node CaMeL Util . KILL . null ;
rank: 438
score: 98.08226182725694
patch: return KILL . KILL . KILL . else
rank: 439
score: 99.36398315429688
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL First CaMeL Child ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 439
score: 99.24697477921195
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , name ) ;
rank: 439
score: 99.13571346507354
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( id , variable ) ;
rank: 439
score: 98.88023024338942
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + n ;
rank: 439
score: 98.86278618706598
patch: if ( n . get CaMeL String ( ) . equals CaMeL Ignore CaMeL Case ( ;
rank: 439
score: 98.54518636067708
patch: System . err . println ( $STRING$ ; break ; }
rank: 439
score: 98.52971801757812
patch: return super . get CaMeL Node ( ) ;
rank: 439
score: 98.08162434895833
patch: return ( Integer ; . $NUMBER$ / ;
rank: 440
score: 99.36386108398438
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Name ( n ) ) ;
rank: 440
score: 99.33668154761905
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( KILL ) ;
rank: 440
score: 99.13526916503906
patch: return new is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 440
score: 98.87910679408482
patch: if ( Node CaMeL Util . KILL . KILL . contains ( ;
rank: 440
score: 98.54506613991477
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ; ;
rank: 440
score: 98.52930797230114
patch: return n . get CaMeL Node ( ) ; ;
rank: 440
score: 98.08132595486111
patch: if ( return ) { return KILL ;
rank: 441
score: 99.33600725446429
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( key ) ;
rank: 441
score: 99.20191243489583
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) ;
rank: 441
score: 99.13275909423828
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( , variable ) ;
rank: 441
score: 98.8787109375
patch: if ( $STRING$ . equals ( n . get CaMeL String ( ) ;
rank: 441
score: 98.8614566200658
patch: return n . get CaMeL Function CaMeL Value ( ) . get CaMeL Value ( ) ; }
rank: 441
score: 98.54481858473558
patch: throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + value ;
rank: 441
score: 98.52928466796875
patch: return 1 . KILL . KILL . KILL ;
rank: 441
score: 98.08091905381944
patch: return ( Integer ; . - 1 ;
rank: 442
score: 99.33592688519022
patch: else { return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 442
score: 99.2460428873698
patch: super . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n . get CaMeL Parent ( ) ) ;
rank: 442
score: 99.201513671875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ) ;
rank: 442
score: 99.13238884420956
patch: state is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 442
score: 98.87720540364583
patch: if ( n . get CaMeL First CaMeL Child ( ) != null )
rank: 442
score: 98.860595703125
patch: return n . get CaMeL String ( ) . trim ( ) . trim ( ) ;
rank: 442
score: 98.54283650716145
patch: throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }
rank: 442
score: 98.52926025390624
patch: return this . KILL . KILL == KILL ;
rank: 442
score: 98.07985432942708
patch: return Double . FALSE ;
rank: 443
score: 99.3632175611413
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) , variable ) ;
rank: 443
score: 99.20146122685185
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL . get CaMeL Parent ( ) ) ;
rank: 443
score: 99.13233184814453
patch: state = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 443
score: 98.87623697916666
patch: if ( n . get CaMeL First CaMeL Child ( ) == null )
rank: 443
score: 98.54203287760417
patch: throw new Illegal CaMeL Argument CaMeL Exception . Error ( ;
rank: 443
score: 98.52899724786931
patch: break KILL . KILL . KILL . KILL ; ;
rank: 443
score: 98.07901763916016
patch: return super . KILL KILL KILL ;
rank: 444
score: 99.36314086914062
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ; }
rank: 444
score: 99.33503861860795
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable )
rank: 444
score: 99.24512736002605
patch: return return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 444
score: 99.201416015625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ) ;
rank: 444
score: 99.13181966145834
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( name ) ;
rank: 444
score: 98.87471516927083
patch: if ( n . get CaMeL String CaMeL Value ( ) == null )
rank: 444
score: 98.86001747532895
patch: return node . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 444
score: 98.54105631510417
patch: throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ * ;
rank: 444
score: 98.52627563476562
patch: return Boolean . KILL ; } return false ;
rank: 444
score: 98.07843780517578
patch: return KILL . KILL . KILL /
rank: 445
score: 99.36305541992188
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 445
score: 99.334853515625
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Node ( ) ) ;
rank: 445
score: 99.24484345407197
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n . get CaMeL Parent ( n ) ) ;
rank: 445
score: 99.13179779052734
patch: return = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 445
score: 98.85934787326389
patch: if ( n . get CaMeL Value CaMeL Type ( ) == Node CaMeL Util . ;
rank: 445
score: 98.54071599786931
patch: throw new Runtime CaMeL Exception ( Boolean . FALSE ;
rank: 445
score: 98.5256103515625
patch: return Boolean . KILL ; } return null ;
rank: 445
score: 98.0781962076823
patch: return KILL return KILL ;
rank: 446
score: 99.36292802526596
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Node ( n ) ) ) ;
rank: 446
score: 99.33479110054348
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) : null ;
rank: 446
score: 99.20118297230114
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) )
rank: 446
score: 99.13128662109375
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ,
rank: 446
score: 98.53783162434895
patch: throw new Runtime CaMeL Exception ( $STRING$ , $STRING$ ) ;
rank: 446
score: 98.52549438476562
patch: return KILL . KILL . . ( ) ;
rank: 446
score: 98.07817840576172
patch: return Double . KILL . EMPTY ;
rank: 447
score: 99.36277369449013
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( child CaMeL Value ) ) ;
rank: 447
score: 99.33427290482955
patch: ret = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 447
score: 99.24357836174242
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 447
score: 99.20112941576087
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ref , variable ) ;
rank: 447
score: 99.13071576286765
patch: if ( variable . equals ( n . get CaMeL Parent ( ) ) ) {
rank: 447
score: 98.8675067608173
patch: if ( Node CaMeL Util . KILL . KILL . KILL ;
rank: 447
score: 98.85871438419117
patch: return n . get CaMeL Type ( ) . equals ( Node CaMeL Util . ;
rank: 447
score: 98.5371981534091
patch: return return Boolean . value CaMeL Of ( ) ;
rank: 447
score: 98.52509765625
patch: return null ; ;
rank: 447
score: 98.07754177517361
patch: return Integer . KILL . KILL ; }
rank: 448
score: 99.3624737079327
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( null ) ) ;
rank: 448
score: 99.33409052309783
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , null ) ;
rank: 448
score: 99.20054408482143
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( true ) ;
rank: 448
score: 99.12977600097656
patch: return = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 448
score: 98.86594645182292
patch: return node . get CaMeL Parent ( ) . KILL ;
rank: 448
score: 98.85835774739583
patch: return Integer . parse CaMeL Int ( n . get CaMeL String ( ;
rank: 448
score: 98.53709920247395
patch: System . out . println ( $STRING$ + 1 ) ;
rank: 448
score: 98.5244873046875
patch: return get CaMeL Type ( ) . KILL ;
rank: 448
score: 98.07748074001736
patch: return KILL . KILL . KILL + KILL
rank: 449
score: 99.33368210565476
patch: return ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 449
score: 99.24308268229167
patch: return Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL String ( ) ) ;
rank: 449
score: 99.1297607421875
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( next , variable ) ;
rank: 449
score: 98.86570387620192
patch: switch ( n . get CaMeL Value CaMeL Type ( ) )
rank: 449
score: 98.85833740234375
patch: return Long . value CaMeL Of ( n . get CaMeL Value ( ) ;
rank: 449
score: 98.53663126627605
patch: throw new Runtime CaMeL Exception ( $STRING$ + ; ) ;
rank: 449
score: 98.52317810058594
patch: return this . KILL . null ;
rank: 449
score: 98.076904296875
patch: return KILL . . KILL ; }
rank: 450
score: 99.36240022078805
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Parent ( ) ) ) ;
rank: 450
score: 99.333251953125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( id , n ) ;
rank: 450
score: 99.2427275686553
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Parent CaMeL Node ( n ) ) ;
rank: 450
score: 99.20036069808468
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL
rank: 450
score: 99.12943761488971
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , type ) ;
rank: 450
score: 98.86476487379808
patch: return value CaMeL Of ( n . get CaMeL String ( ;
rank: 450
score: 98.85818820529514
patch: if ( n . get CaMeL Type ( ) . equals ( Node CaMeL Util . ;
rank: 450
score: 98.53464577414773
patch: throw new Internal CaMeL Error ( $STRING$ + $STRING$ ;
rank: 450
score: 98.52315266927083
patch: return Boolean . get ( KILL ) ;
rank: 450
score: 98.07621765136719
patch: return KILL . KILL ; return ;
rank: 451
score: 99.36223582732372
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ) ;
rank: 451
score: 99.33292289402173
patch: else { return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 451
score: 99.24259440104167
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n , n . get CaMeL String ( ) ) ;
rank: 451
score: 99.20031156994048
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) )
rank: 451
score: 99.12928009033203
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n ;
rank: 451
score: 98.86461530412946
patch: if ( Node CaMeL Util . is CaMeL Letter ( n ) )
rank: 451
score: 98.85775596217105
patch: return n . get CaMeL Result ( ) . get CaMeL Value ( ) . equals ( ;
rank: 451
score: 98.53391520182292
patch: throw new Illegal CaMeL State CaMeL Exception . Error ( ;
rank: 451
score: 98.52305297851562
patch: break KILL . KILL . KILL . KILL ;
rank: 451
score: 98.07545776367188
patch: return KILL . ;
rank: 452
score: 99.2417984008789
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ) ;
rank: 452
score: 99.1273552389706
patch: RHS is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 452
score: 98.86451067243304
patch: if ( Node CaMeL Util . KILL . is CaMeL Empty ( ;
rank: 452
score: 98.857421875
patch: return n . get CaMeL Node ( ) . get CaMeL Value ( ;
rank: 452
score: 98.53350275213069
patch: System . out . println ( $STRING$ + return ;
rank: 452
score: 98.07537841796875
patch: return KILL . KILL ; .
rank: 453
score: 99.36187744140625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Class ( ) ) ) ;
rank: 453
score: 99.3319781759511
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , $STRING$ ) ;
rank: 453
score: 99.19976251775569
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util .
rank: 453
score: 98.85723114013672
patch: while ( n . get CaMeL Type ( ) == Node CaMeL Util . ;
rank: 453
score: 98.53298950195312
patch: throw new Runtime CaMeL Exception ( $STRING$ + next ) ;
rank: 453
score: 98.51876220703124
patch: return Node CaMeL Util . KILL == KILL ;
rank: 453
score: 98.07461208767361
patch: return scope . KILL . KILL ; ;
rank: 454
score: 99.36184853001645
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Class ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 454
score: 99.24125339673913
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , false ) ;
rank: 454
score: 99.19969641644022
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . n ) ;
rank: 454
score: 99.12647247314453
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , null ) ;
rank: 454
score: 98.85719700863487
patch: return parent . get CaMeL Parent ( ) . get CaMeL Parent CaMeL Node ( ) ; }
rank: 454
score: 98.5325419108073
patch: throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ ; }
rank: 454
score: 98.51871948242187
patch: return parent . get CaMeL Root ( ) ;
rank: 454
score: 98.07362365722656
patch: return KILL . KILL . LOCAL ;
rank: 455
score: 99.3310546875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ;
rank: 455
score: 99.19928850446429
patch: || Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 455
score: 99.12335564108456
patch: if ( variable . equals ( n . get CaMeL String ( ) ) ) {
rank: 455
score: 98.85683371803977
patch: return n . get CaMeL Value ( ) ; }
rank: 455
score: 98.5306396484375
patch: throw new Illegal CaMeL Argument CaMeL Exception ( null ;
rank: 455
score: 98.51422729492188
patch: return get CaMeL Node ( ) . KILL ;
rank: 455
score: 98.07289123535156
patch: return KILL . KILL . KILL }
rank: 456
score: 99.36149434840425
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Parent ( variable ) ) ) ;
rank: 456
score: 99.240859375
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) : null ;
rank: 456
score: 99.1990379050926
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . READ } ;
rank: 456
score: 99.12299346923828
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n + ) ;
rank: 456
score: 98.85690542367789
patch: if ( n . get CaMeL Node ( ) == null )
rank: 456
score: 98.85666375411184
patch: return n . get CaMeL Value ( ) . equals ( Node CaMeL Util . KILL ) ;
rank: 456
score: 98.52960759943181
patch: return KILL . return KILL . KILL . KILL ;
rank: 456
score: 98.5131591796875
patch: return nodes . KILL . KILL . KILL ;
rank: 456
score: 98.0727767944336
patch: return KILL . KILL . n ;
rank: 457
score: 99.3304951985677
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) * /
rank: 457
score: 99.19872259324596
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 457
score: 99.12188313802083
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( type ) ;
rank: 457
score: 98.8567606608073
patch: return Boolean . TRUE ; } return Boolean . TRUE ;
rank: 457
score: 98.85643717447917
patch: return Node CaMeL Util . KILL . get CaMeL Value ( n ) ;
rank: 457
score: 98.52902560763889
patch: if ( ! null ) return null ;
rank: 457
score: 98.51113552517361
patch: return KILL . KILL KILL & KILL ;
rank: 457
score: 98.07155064174107
patch: return Double . . 1 ;
rank: 458
score: 99.36105346679688
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( ) ) , variable ) ;
rank: 458
score: 99.33009935461956
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( type , variable ) ;
rank: 458
score: 99.24053192138672
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Parent ( n ) ) )
rank: 458
score: 99.19865171370968
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL . get CaMeL String ( ) ) ;
rank: 458
score: 99.12126922607422
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , n ) ;
rank: 458
score: 98.85376739501953
patch: throw new Error ( $STRING$ ) ;
rank: 458
score: 98.52900390625
patch: throw new Internal CaMeL Error ( null ) ;
rank: 458
score: 98.07128228081598
patch: throw new Runtime CaMeL Exception ( null ;
rank: 459
score: 99.36077880859375
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Method ( ) ) ) ;
rank: 459
score: 99.33001999627976
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , $STRING$ ) ;
rank: 459
score: 99.24025560461956
patch: try { return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 459
score: 99.19809065193965
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . n . get CaMeL Parent ( ) ) ;
rank: 459
score: 99.12017463235294
patch: throw is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 459
score: 98.5289639559659
patch: throw new Illegal CaMeL Argument CaMeL Exception ( KILL ;
rank: 459
score: 98.07021077473958
patch: return KILL . KILL . KILL . debug
rank: 460
score: 99.36070838341347
patch: else return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ) ;
rank: 460
score: 99.2401631673177
patch: super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First ( ) ) ;
rank: 460
score: 99.11981201171875
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n + variable ) ;
rank: 460
score: 98.85314069475446
patch: if ( Node CaMeL Util . is CaMeL Anonymous ( n ) )
rank: 460
score: 98.8529522235577
patch: if ( n . get CaMeL Node ( ) != null )
rank: 460
score: 98.5278653231534
patch: throw new Runtime CaMeL Exception ( $STRING$ + KILL ;
rank: 460
score: 98.50648328993056
patch: System . out . println return $STRING$ ;
rank: 460
score: 98.06920708550348
patch: throw new Runtime CaMeL Exception ( KILL ;
rank: 461
score: 99.19790504092262
patch: return Node CaMeL Util . is CaMeL Lhs ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 461
score: 99.11505889892578
patch: super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 461
score: 98.85269869290866
patch: if ( n . get CaMeL String ( ) == null )
rank: 461
score: 98.52587280273437
patch: throw new Runtime CaMeL Exception ( $STRING$ KILL ;
rank: 461
score: 98.50567626953125
patch: return get CaMeL Symbol ( ) . KILL ;
rank: 461
score: 98.0684814453125
patch: return System . . . . . ;
rank: 462
score: 99.36062622070312
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Root ( ) ) ) ;
rank: 462
score: 99.23982238769531
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL First CaMeL Child ( ) ) ; }
rank: 462
score: 99.1148910522461
patch: return . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 462
score: 98.52338201349431
patch: throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ ;
rank: 462
score: 98.50543212890625
patch: return parent . KILL . KILL . EMPTY ;
rank: 462
score: 98.06789143880208
patch: return ( Integer ; . $NUMBER$ KILL ;
rank: 463
score: 99.36061128656915
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( ) ) ) ;
rank: 463
score: 99.32796577785327
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , false ) ;
rank: 463
score: 99.23975349195075
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Parent ( n ) , variable ) ;
rank: 463
score: 99.19783266129032
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Current CaMeL Node ( ) ) ;
rank: 463
score: 99.11207490808823
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , $NUMBER$ ) ;
rank: 463
score: 98.8494364420573
patch: if ( Node CaMeL Util . KILL . contains ( ;
rank: 463
score: 98.844921875
patch: return Integer . value CaMeL Of ( n . get CaMeL Value ( ;
rank: 463
score: 98.06606038411458
patch: return ; . . ;
rank: 464
score: 99.23951212565105
patch: && ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ;
rank: 464
score: 99.11051177978516
patch: super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 464
score: 98.84799429086539
patch: if ( n . get CaMeL Value ( ) != null )
rank: 464
score: 98.84483427159927
patch: switch ( n . get CaMeL Type ( ) . get CaMeL Id ( ) )
rank: 464
score: 98.52222789417614
patch: return ( Node CaMeL Util . KILL ) ) ;
rank: 464
score: 98.49971923828124
patch: return super . KILL . KILL . null ;
rank: 464
score: 98.06515502929688
patch: return new ( ; .
rank: 465
score: 99.36029730902777
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( parent , n . get CaMeL Parent ( ) ) ;
rank: 465
score: 99.23942057291667
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . n , variable ) ;
rank: 465
score: 99.19742838541667
patch: return Node CaMeL Util . Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 465
score: 99.10979352678571
patch: Node variable = n . get CaMeL First CaMeL Child ( ) ;
rank: 465
score: 98.8474872295673
patch: if ( Node CaMeL Util . KILL . contains ( ; )
rank: 465
score: 98.84310913085938
patch: if ( Node CaMeL Util . is CaMeL Na CaMeL N ( n ) ;
rank: 465
score: 98.5218838778409
patch: throw new Runtime CaMeL Exception ( $STRING$ + 0 ;
rank: 465
score: 98.4995849609375
patch: return super . KILL KILL KILL KILL KILL ;
rank: 465
score: 98.06514485677083
patch: return KILL . KILL . KILL . NO
rank: 466
score: 99.360205078125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL
rank: 466
score: 99.32556683084239
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( next , variable ) ;
rank: 466
score: 99.23880137567934
patch: ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 466
score: 99.19723195043103
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . KILL . get CaMeL First CaMeL Child ( ) ) ;
rank: 466
score: 99.10911458333334
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( parent ) ;
rank: 466
score: 98.8471210186298
patch: if ( Node CaMeL Util . KILL . equals ( ; else
rank: 466
score: 98.84270833333333
patch: return n . get CaMeL Variable CaMeL Map ( ) . get ( ;
rank: 466
score: 98.51889870383523
patch: this . return null ; } else return null ;
rank: 466
score: 98.06405639648438
patch: return Long . KILL ;
rank: 467
score: 99.3601786295573
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Instance ( ) ) ) ;
rank: 467
score: 99.324814453125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n , variable ) ;
rank: 467
score: 99.23867652529762
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) )
rank: 467
score: 99.10688999720982
patch: return ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 467
score: 98.846875
patch: return node . get CaMeL Parent ( ) ;
rank: 467
score: 98.8426513671875
patch: return node . get CaMeL Node ( ) . get CaMeL Node ( ) ;
rank: 467
score: 98.49725952148438
patch: return mode . KILL . KILL . KILL ;
rank: 467
score: 98.06354631696429
patch: return return Integer . TRUE ;
rank: 468
score: 99.32463272758152
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( index , variable ) ;
rank: 468
score: 99.19619140625
patch: return n . get CaMeL Parent ( ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ;
rank: 468
score: 99.105615234375
patch: return Control CaMeL Flow CaMeL Graph . READ ;
rank: 468
score: 98.8466084798177
patch: return node . get CaMeL First CaMeL Child ( ) ;
rank: 468
score: 98.840576171875
patch: return Long . value CaMeL Of ( n . get CaMeL Value ( ) ) ;
rank: 468
score: 98.51678466796875
patch: if ( this . KILL ; return null ;
rank: 468
score: 98.06278991699219
patch: return 0 . KILL . KILL ;
rank: 469
score: 99.36005316840277
patch: return Control CaMeL Flow CaMeL Graph . get CaMeL Graph ( ) . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 469
score: 99.32452101934524
patch: return ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) ;
rank: 469
score: 99.2376125169837
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( $STRING$ , n . get CaMeL Parent ( ) ) ;
rank: 469
score: 99.19600246263587
patch: return get CaMeL Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 469
score: 99.10520717075893
patch: return || Node CaMeL Util . is CaMeL Lhs ( n ) ;
rank: 469
score: 98.84649188701923
patch: throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + ; }
rank: 469
score: 98.5167569247159
patch: return KILL . KILL . KILL . return KILL ;
rank: 469
score: 98.49555206298828
patch: return get CaMeL Node ( ) ;
rank: 469
score: 98.0623779296875
patch: return KILL . KILL . KILL . NULL
rank: 470
score: 99.36005108173077
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ) ) ;
rank: 470
score: 99.2367633322011
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Root ( ) ) ;
rank: 470
score: 99.1959737141927
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL Variable CaMeL
rank: 470
score: 99.10448500689338
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n + n ) ;
rank: 470
score: 98.8423321063702
patch: if ( Node CaMeL Util . KILL . equals ( n ;
rank: 470
score: 98.84046427408855
patch: return n . get CaMeL Function CaMeL Value ( ) ;
rank: 470
score: 98.51497025923295
patch: throw new Illegal CaMeL State CaMeL Exception ( ; ;
rank: 470
score: 98.49413299560547
patch: return parent . KILL . null ;
rank: 470
score: 98.06235080295139
patch: return Node CaMeL Util . KILL ; ;
rank: 471
score: 99.2364169034091
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Parent ( ) ) ;
rank: 471
score: 99.1025390625
patch: state = Node CaMeL Util . is CaMeL Lhs ( n ) ;
rank: 471
score: 98.84232584635417
patch: return value CaMeL Of ( Node CaMeL Util . KILL ;
rank: 471
score: 98.51434881036931
patch: throw new Runtime CaMeL Exception ( $STRING$ + return ;
rank: 471
score: 98.493359375
patch: return KILL . get CaMeL Property ( ) ;
rank: 471
score: 98.06168619791667
patch: return KILL ; } ;
rank: 472
score: 99.35898951480263
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Value ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 472
score: 99.32390030570652
patch: return Node CaMeL Util . is CaMeL Lhs ( n , Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ) ;
rank: 472
score: 99.23626708984375
patch: result = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 472
score: 99.1021369485294
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n , n ) ) {
rank: 472
score: 98.8414815266927
patch: throw new No CaMeL Such CaMeL Method CaMeL Error ( ;
rank: 472
score: 98.83878580729167
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent ( ;
rank: 472
score: 98.4922607421875
patch: throw new Runtime CaMeL Exception ( ) ; }
rank: 472
score: 98.06108856201172
patch: return ; . return KILL ; }
rank: 473
score: 99.3583251953125
patch: Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 473
score: 99.32309358016305
patch: return n . get CaMeL Node ( ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 473
score: 99.23550016983695
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Name ( n , n . get CaMeL Parent ( ) ) ;
rank: 473
score: 99.194931640625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ( Node CaMeL Util . get CaMeL
rank: 473
score: 99.10172765395221
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , false ) ;
rank: 473
score: 98.83868408203125
patch: if ( Node CaMeL Util . is CaMeL Var ( n , ;
rank: 473
score: 98.83795166015625
patch: throw new Null CaMeL Pointer CaMeL Exception ( 1 ) ;
rank: 473
score: 98.50933283025569
patch: throw new Runtime CaMeL Exception . Error ( $STRING$ ;
rank: 473
score: 98.06089274088542
patch: return KILL . ; _
rank: 474
score: 99.32279459635417
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 474
score: 99.23487807765152
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . is CaMeL Lhs ( n , variable ) ) ;
rank: 474
score: 99.1939109519676
patch: if ( Node CaMeL Util . ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) )
rank: 474
score: 99.09996032714844
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n ) )
rank: 474
score: 98.83814239501953
patch: if ( Node CaMeL Util . is CaMeL Assignable CaMeL From ( n , ;
rank: 474
score: 98.83788123497597
patch: if ( Node CaMeL Util . KILL . contains ( ; ;
rank: 474
score: 98.50911254882813
patch: if ( this . return ; return null ;
rank: 474
score: 98.49163140190973
patch: return parent . KILL KILL . KILL ;
rank: 475
score: 99.32275390625
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 475
score: 99.2340790719697
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ) ;
rank: 475
score: 99.09991096047794
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( null , variable ) ;
rank: 475
score: 98.83799743652344
patch: if ( Node CaMeL Util . is CaMeL Var CaMeL Declaration ( n , ;
rank: 475
score: 98.83419095552884
patch: throw new Class CaMeL Not CaMeL Found CaMeL Exception ( $STRING$ ;
rank: 475
score: 98.50902210582386
patch: return null ; } else return KILL . KILL ;
rank: 475
score: 98.49049886067708
patch: logger . out . println return KILL ;
rank: 475
score: 98.06062534877232
patch: return Double . KILL KILL ;
rank: 476
score: 99.35716796875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( child CaMeL Value , variable ) ;
rank: 476
score: 99.23404947916667
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , variable ) ;
rank: 476
score: 99.09942985983456
patch: return Node CaMeL Util . KILL ( n . get CaMeL String ( ) ) ;
rank: 476
score: 98.83738798253677
patch: return get CaMeL Value ( ) . equals ( n . get CaMeL String ( ;
rank: 476
score: 98.83297964242789
patch: switch ( n . get CaMeL Type ( ) ) { ;
rank: 476
score: 98.50892639160156
patch: / * * / return null ;
rank: 476
score: 98.06053924560547
patch: return ( Integer ; . KILL ;
rank: 477
score: 99.09784807477679
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 477
score: 98.82919311523438
patch: return node . get CaMeL Current CaMeL Node ( ) ;
rank: 477
score: 98.06050109863281
patch: return KILL . KILL . round ;
rank: 478
score: 99.35655721028645
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Result ( ) ) ) ;
rank: 478
score: 99.19247436523438
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 478
score: 99.09477233886719
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ,
rank: 478
score: 98.82355291193181
patch: return KILL . KILL . KILL . KILL ) ;
rank: 478
score: 98.48518676757813
patch: break . KILL . KILL . KILL ; }
rank: 478
score: 98.06027221679688
patch: return super . return ( ; .
rank: 479
score: 99.32189410665761
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n + $STRING$ ) ;
rank: 479
score: 99.23334030877976
patch: return is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL Parent ( ) ) ;
rank: 479
score: 99.19245711616848
patch: return Node CaMeL Util . KILL . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 479
score: 99.09088897705078
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 479
score: 98.83689970128677
patch: return n . get CaMeL Parent ( ) . get CaMeL Parent ( ) ; }
rank: 479
score: 98.48482937282986
patch: return return KILL . KILL == KILL ;
rank: 479
score: 98.05987548828125
patch: return KILL . KILL . abs ;
rank: 480
score: 99.3218005952381
patch: return ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ) ;
rank: 480
score: 99.2332179857337
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( null , n . get CaMeL Parent ( ) ) ;
rank: 480
score: 99.192431640625
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util .
rank: 480
score: 99.09083557128906
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable )
rank: 480
score: 98.83673565204327
patch: return n . get CaMeL Property ( Node CaMeL Util . ;
rank: 480
score: 98.8212421123798
patch: return KILL . equals ( n . get CaMeL String ( ;
rank: 480
score: 98.50554865056819
patch: throw new Runtime CaMeL Exception ( $STRING$ + type ;
rank: 480
score: 98.48433430989583
patch: break KILL . KILL . KILL ; }
rank: 480
score: 98.05838448660714
patch: return System . . KILL ;
rank: 481
score: 99.23288892663044
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , node ) ;
rank: 481
score: 99.19161101310483
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 481
score: 99.08942057291667
patch: = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 481
score: 98.83631134033203
patch: if ( n . get CaMeL Function CaMeL Name ( ) . equals ( ;
rank: 481
score: 98.81561834161931
patch: return KILL . get CaMeL Value ( node ) ;
rank: 481
score: 98.47730102539063
patch: return KILL . KILL KILL . KILL ; }
rank: 481
score: 98.05838448660714
patch: return $STRING$ ; return this ;
rank: 482
score: 99.321611328125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , Node CaMeL Util . get CaMeL String ( ) ) ;
rank: 482
score: 99.23232634171195
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( key , n . get CaMeL Parent ( ) ) ;
rank: 482
score: 99.19128870081019
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . n ) ;
rank: 482
score: 99.08848470052084
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ;
rank: 482
score: 98.83439127604167
patch: return n . get CaMeL Value ( ) . equals ( n ) ;
rank: 482
score: 98.81278170072116
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + n ;
rank: 482
score: 98.50066528320312
patch: System . out . println ( KILL ) ;
rank: 482
score: 98.47630615234375
patch: return return KILL . KILL . KILL ; }
rank: 482
score: 98.05799865722656
patch: return Integer . KILL . EMPTY ;
rank: 483
score: 99.35504705255681
patch: type = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 483
score: 99.32071586277173
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) + variable ;
rank: 483
score: 99.0855712890625
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n ) )
rank: 483
score: 98.8337890625
patch: return Symbol . KILL . equals ( n . get CaMeL String ( ;
rank: 483
score: 98.81072998046875
patch: return node . get CaMeL Value ( ) . KILL ;
rank: 483
score: 98.49948120117188
patch: this . return null ;
rank: 483
score: 98.05779418945312
patch: return new ) ;
rank: 484
score: 98.83169320913461
patch: return n . get CaMeL Value ( ) . equals ( ;
rank: 484
score: 98.80723987926136
patch: if ( Node CaMeL Util . KILL . equals ;
rank: 484
score: 98.49884588068181
patch: throw new Runtime CaMeL Exception ( KILL . KILL ;
rank: 484
score: 98.47423299153645
patch: return Boolean . TRUE ;
rank: 484
score: 98.05674235026042
patch: return scope . KILL . KILL . ;
rank: 485
score: 99.23074340820312
patch: return Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL Parent ( ) )
rank: 485
score: 99.0749267578125
patch: = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 485
score: 98.8314437866211
patch: if ( Node CaMeL Util . is CaMeL Qualified CaMeL Name ( n , ;
rank: 485
score: 98.4976806640625
patch: throw new Null CaMeL Pointer CaMeL Exception ( ;
rank: 485
score: 98.47370910644531
patch: return super . KILL . null ;
rank: 485
score: 98.05596160888672
patch: return KILL . KILL . value ;
rank: 486
score: 99.35437774658203
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Type ( n ) ) ;
rank: 486
score: 99.3203125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ( Node ) n ) ;
rank: 486
score: 99.07394205729166
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( id ) ;
rank: 486
score: 98.83061667049633
patch: return n . get CaMeL Variable CaMeL Map ( ) . get ( n ) ;
rank: 486
score: 98.79941813151042
patch: return value CaMeL Of ( node ) ;
rank: 486
score: 98.49707709418402
patch: return null ; } else return null ;
rank: 486
score: 98.05484008789062
patch: return Math . FALSE ;
rank: 487
score: 99.35437381628788
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , Node CaMeL Util . n . get CaMeL Parent ( ) ) ;
rank: 487
score: 99.19031943044355
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 487
score: 99.07255336216518
patch: set CaMeL Name ( n . get CaMeL String ( ) ) ;
rank: 487
score: 98.82996544471153
patch: return Node CaMeL Util . KILL . equals ( n ) ;
rank: 487
score: 98.79909261067708
patch: return Boolean . TRUE ; } return Boolean . FALSE ;
rank: 487
score: 98.49636008522727
patch: throw new Illegal CaMeL State CaMeL Exception ( KILL ;
rank: 487
score: 98.47120971679688
patch: return System . get CaMeL Node ( ) ;
rank: 487
score: 98.05433654785156
patch: return KILL ; return $STRING$ ; }
rank: 488
score: 99.35418146306819
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! variable ) ;
rank: 488
score: 99.19010679183468
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n . get CaMeL String ( ) ) ;
rank: 488
score: 99.0680419921875
patch: return is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 488
score: 98.82938878676471
patch: return node . get CaMeL Parent ( ) . get CaMeL Value ( ) ; }
rank: 488
score: 98.494873046875
patch: throw new Runtime CaMeL Exception ( $STRING$ + node ;
rank: 488
score: 98.47107611762152
patch: return ( return KILL . null ) ;
rank: 488
score: 98.05358208550348
patch: return super . KILL . KILL ; }
rank: 489
score: 99.353759765625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg
rank: 489
score: 99.31937839673913
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , 1 ) ;
rank: 489
score: 99.22784133184524
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 489
score: 99.05856119791666
patch: if ( Node CaMeL Util . is CaMeL Name ( n ) ) {
rank: 489
score: 98.82795715332031
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + node ) ;
rank: 489
score: 98.79331461588542
patch: return node . KILL . get CaMeL Value ( ) ;
rank: 489
score: 98.4930191040039
patch: return ; } else return null ;
rank: 489
score: 98.47100219726562
patch: return . KILL . KILL . KILL ; }
rank: 489
score: 98.05324300130208
patch: return ( Integer ; ;
rank: 490
score: 99.35355377197266
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL String ( $STRING$ ) ) ;
rank: 490
score: 99.31924040421195
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , true ) ;
rank: 490
score: 99.1900390625
patch: return Node CaMeL Util . Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 490
score: 99.05821814903847
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( child
rank: 490
score: 98.82784016927083
patch: return n . get CaMeL Type ( ) == Node CaMeL Util . ;
rank: 490
score: 98.79051624644886
patch: return KILL . get CaMeL Value ( n ) ;
rank: 490
score: 98.47020721435547
patch: return get CaMeL Symbol ( ) ;
rank: 490
score: 98.04972839355469
patch: return $NUMBER$ . KILL . KILL ;
rank: 491
score: 99.31807454427083
patch: state = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ;
rank: 491
score: 99.18993236400463
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL
rank: 491
score: 99.05411202566964
patch: return && Node CaMeL Util . is CaMeL Lhs ( n ) ;
rank: 491
score: 98.8259048461914
patch: return Symbol . KILL . equals ( n . get CaMeL String ( ) )
rank: 491
score: 98.79044966264205
patch: return System . get CaMeL Property ( $STRING$ ) ;
rank: 491
score: 98.48853648792614
patch: throw new Runtime CaMeL Exception ( $STRING$ + value ;
rank: 491
score: 98.4699462890625
patch: return null ; KILL = KILL . KILL ;
rank: 491
score: 98.04954310825893
patch: return 0 ; return KILL ;
rank: 492
score: 99.35235206117021
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 492
score: 99.31747834578805
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , 0 ) ;
rank: 492
score: 99.189091796875
patch: return Control CaMeL Flow CaMeL Graph . KILL . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ;
rank: 492
score: 99.05004069010417
patch: return is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 492
score: 98.79027210582386
patch: switch ( node . get CaMeL Type ( ) )
rank: 492
score: 98.48822576349431
patch: throw new Runtime CaMeL Exception ( $STRING$ + null ;
rank: 492
score: 98.46871337890624
patch: return exp . KILL . KILL . KILL ;
rank: 492
score: 98.04906548394098
patch: return KILL . KILL . KILL . MOD
rank: 493
score: 99.35219134706439
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n , n . get CaMeL Parent ( ) ) ;
rank: 493
score: 99.3174358865489
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , false ) ;
rank: 493
score: 99.04960414341518
patch: Node n = n . get CaMeL First CaMeL Child ( ) ;
rank: 493
score: 98.48768615722656
patch: } else { return null ; }
rank: 493
score: 98.04738362630208
patch: return KILL . KILL . KILL . INVALID
rank: 494
score: 99.18830078125
patch: boolean is CaMeL Lhs = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 494
score: 99.04942975725446
patch: return super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 494
score: 98.82540893554688
patch: if ( n . get CaMeL Qualified CaMeL Name ( ) . equals ( ;
rank: 494
score: 98.78915066189236
patch: return KILL . get CaMeL Value ( ;
rank: 494
score: 98.48492986505681
patch: throw new Runtime CaMeL Exception ( $STRING$ ; } ;
rank: 494
score: 98.46811930338542
patch: return this . return KILL . KILL ;
rank: 494
score: 98.04732259114583
patch: return null . KILL ;
rank: 495
score: 99.316650390625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( 1 , variable ) ;
rank: 495
score: 99.21829659598214
patch: return Control CaMeL Flow CaMeL Graph . KILL . get ( n . get CaMeL Parent ( ) ) ;
rank: 495
score: 99.186904296875
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . n , variable ) ;
rank: 495
score: 99.04872639973958
patch: switch ( n . get CaMeL Parent ( ) ) {
rank: 495
score: 98.7847188313802
patch: return n . get CaMeL String ( ) + $STRING$ ;
rank: 495
score: 98.4840420809659
patch: throw new Runtime CaMeL Exception ( $STRING$ + ; ;
rank: 495
score: 98.46723937988281
patch: return get CaMeL Type ( ) ;
rank: 495
score: 98.04469299316406
patch: return KILL . KILL ; KILL ;
rank: 496
score: 99.31663977581522
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL Node ( ) , variable ) ;
rank: 496
score: 99.18548583984375
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent ) ) {
rank: 496
score: 99.04775390625
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n
rank: 496
score: 98.82511080228366
patch: return n . get CaMeL String ( ) . equals ( ;
rank: 496
score: 98.78265935724431
patch: return KILL . get CaMeL Value ( this ) ;
rank: 496
score: 98.48076837713069
patch: if ( ! KILL . is CaMeL Empty ( ;
rank: 496
score: 98.46706136067708
patch: logger . out . println KILL ) ;
rank: 496
score: 98.04433186848958
patch: return KILL . KILL . KILL . NEGATIVE
rank: 497
score: 99.21754150390625
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable )
rank: 497
score: 99.18539826766305
patch: if ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL
rank: 497
score: 99.04453125
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n ) ) .
rank: 497
score: 98.77842203776042
patch: return n . get CaMeL Value ( ) . KILL ;
rank: 497
score: 98.47565252130681
patch: { throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 497
score: 98.4665283203125
patch: finally { return KILL . KILL ; } }
rank: 497
score: 98.04432024274554
patch: return Integer . KILL ; ;
rank: 498
score: 99.35122680664062
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 498
score: 99.31613026494566
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( 0 , variable ) ;
rank: 498
score: 99.18513671875
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . READ } ;
rank: 498
score: 99.0445048014323
patch: switch ( n . get CaMeL String ( ) ) {
rank: 498
score: 98.47265625
patch: if ( false ) return null ;
rank: 498
score: 98.46582709418402
patch: return this ; return KILL . KILL ;
rank: 498
score: 98.04109191894531
patch: / ; = KILL . KILL ;
rank: 499
score: 99.31601350203805
patch: state = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ; }
rank: 499
score: 99.184765625
patch: return get CaMeL Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 499
score: 99.043701171875
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) }
rank: 499
score: 98.82143729073661
patch: if ( Node CaMeL Util . is CaMeL Var ( n ) )
rank: 499
score: 98.4657974243164
patch: return get CaMeL Result ( ) ;
rank: 500
score: 99.35115559895833
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Name ( ) ) ) ;
rank: 500
score: 99.31559244791667
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( )
rank: 500
score: 99.21584185431985
patch: return is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ;
rank: 500
score: 99.04273332868304
patch: return ! Node CaMeL Util . is CaMeL Lhs ( variable ) ;
rank: 500
score: 98.82082693917411
patch: return $STRING$ + n . get CaMeL String ( ) + $STRING$ ;
rank: 500
score: 98.77462768554688
patch: if ( Node CaMeL Util . is CaMeL None ( ;
rank: 500
score: 98.47031471946023
patch: System . err . println ( $STRING$ + return ;
rank: 500
score: 98.46561889648437
patch: return KILL . KILL . KILL != KILL ;
rank: 500
score: 98.03828648158482
patch: return Integer . KILL KILL ;
rank: 501
score: 99.35086495535714
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( name , variable ) ;
rank: 501
score: 99.3155859375
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n ) ) ;
rank: 501
score: 99.04173177083334
patch: return Integer . length ( n . get CaMeL Parent ( ) ) ;
rank: 501
score: 98.46891479492187
patch: throw get CaMeL State ( ) . KILL ;
rank: 501
score: 98.46542019314236
patch: return 1 ; return KILL . KILL ;
rank: 501
score: 98.03690338134766
patch: return KILL . KILL . . KILL
rank: 502
score: 99.35053253173828
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL String ( ) ) ;
rank: 502
score: 99.03463309151786
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ,
rank: 502
score: 98.7685546875
patch: return parent . get CaMeL Parent CaMeL Node ( ) ;
rank: 502
score: 98.465966796875
patch: throw new Illegal CaMeL Argument CaMeL Exception . ;
rank: 502
score: 98.03675333658855
patch: return ; = ; .
rank: 503
score: 99.3149944802989
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( index , n ) ;
rank: 503
score: 99.183134765625
patch: return Node CaMeL Util . Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 503
score: 98.81721714564732
patch: return get CaMeL Result ( ) . get CaMeL Value ( ) ;
rank: 503
score: 98.76450602213542
patch: throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ + ;
rank: 503
score: 98.46444702148438
patch: return null ; } else { throw null ;
rank: 503
score: 98.46384006076389
patch: return super . KILL KILL KILL KILL ;
rank: 504
score: 99.35041577888258
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL First ( ) , variable ) ;
rank: 504
score: 99.20598288143383
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ref , variable ) ;
rank: 504
score: 99.1826504794034
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ; }
rank: 504
score: 99.029052734375
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n ,
rank: 504
score: 98.81604875837054
patch: if ( Node CaMeL Util . is CaMeL Forward ( n ) )
rank: 504
score: 98.76302083333333
patch: System . out . println ( $STRING$ + n ) ;
rank: 504
score: 98.4636563387784
patch: System . out . println ( $STRING$ ; return ;
rank: 504
score: 98.46334228515624
patch: return $NUMBER$ . KILL . KILL . KILL ;
rank: 504
score: 98.03388977050781
patch: return KILL . KILL . MIN ;
rank: 505
score: 99.350185546875
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . n ) ;
rank: 505
score: 99.31410283627717
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) ;
rank: 505
score: 99.18185424804688
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL
rank: 505
score: 99.02224295479911
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( child CaMeL
rank: 505
score: 98.81170654296875
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( ) ; }
rank: 505
score: 98.75935668945313
patch: System . out . println ( $STRING$ ) ;
rank: 505
score: 98.4627352627841
patch: throw new Runtime CaMeL Exception ( $STRING$ ? ; }
rank: 505
score: 98.46187744140624
patch: else return KILL . KILL . KILL . ;
rank: 505
score: 98.0319595336914
patch: return KILL . KILL . error ;
rank: 506
score: 99.18162777549342
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent ) ;
rank: 506
score: 99.01738630022321
patch: switch ( n . get CaMeL First CaMeL Child ( ) ) {
rank: 506
score: 98.46235795454545
patch: throw new Runtime CaMeL Exception ( $STRING$ + parent ;
rank: 506
score: 98.46187337239583
patch: return this . KILL KILL . KILL ;
rank: 506
score: 98.02946254185268
patch: return new Integer return null ;
rank: 507
score: 99.20079888237848
patch: super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ;
rank: 507
score: 99.01004732572116
patch: = Node CaMeL Util . is CaMeL Lhs ( n ) ;
rank: 507
score: 98.75203857421874
patch: return node . get CaMeL Result ( ) ;
rank: 507
score: 98.4609042080966
patch: System . out . println ( $STRING$ + KILL ;
rank: 507
score: 98.02861022949219
patch: return KILL . KILL . NOT ;
rank: 508
score: 99.312880859375
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ) ;
rank: 508
score: 99.00771262428977
patch: state = Control CaMeL Flow CaMeL Graph . KILL ;
rank: 508
score: 98.80946568080357
patch: if ( Node CaMeL Util . is CaMeL None ( n ) )
rank: 508
score: 98.75157470703125
patch: if ( node == null ) return null ;
rank: 508
score: 98.45888943142361
patch: } return KILL . KILL . KILL ;
rank: 508
score: 98.0274887084961
patch: return KILL . . . KILL ;
rank: 509
score: 99.34806315104167
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( child CaMeL Value ) ;
rank: 509
score: 98.80711146763393
patch: if ( Node CaMeL Util . is CaMeL Escaped ( n ) )
rank: 509
score: 98.75124289772727
patch: if ( Node CaMeL Util . KILL != null )
rank: 509
score: 98.459814453125
patch: throw get CaMeL Runtime ( ) . return ;
rank: 509
score: 98.4582748413086
patch: return parent . return ( ) ;
rank: 509
score: 98.02694266183036
patch: return this . return $STRING$ ;
rank: 510
score: 99.3125508626302
patch: return return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 510
score: 98.99777657645089
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n ) &&
rank: 510
score: 98.80596923828125
patch: return n . get CaMeL String CaMeL Value ( ) + $STRING$ ;
rank: 510
score: 98.744775390625
patch: return null . to CaMeL String ( ) ;
rank: 510
score: 98.45831298828125
patch: if ( return ; return null ;
rank: 510
score: 98.45665740966797
patch: return get CaMeL State ( ) ;
rank: 510
score: 98.02614920479911
patch: return KILL ; . KILL ;
rank: 511
score: 99.34800720214844
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL String ( n , n ) ) ;
rank: 511
score: 99.19664001464844
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) + null ;
rank: 511
score: 99.17930908203125
patch: return n . get CaMeL Parent ( ) . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 511
score: 98.9966328938802
patch: if ( n . is CaMeL Lhs ( ) ) {
rank: 511
score: 98.74407404119319
patch: return ( Node CaMeL Util . KILL . KILL ;
rank: 511
score: 98.456884765625
patch: throw new Runtime CaMeL Exception ( $STRING$ : ;
rank: 511
score: 98.0250015258789
patch: return KILL . KILL . KILL *
rank: 512
score: 99.34780738467262
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , 0 ) ;
rank: 512
score: 99.19550238715277
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable ) ; }
rank: 512
score: 98.99319893973214
patch: if ( n . get CaMeL Parent ( ) != null ) {
rank: 512
score: 98.74325561523438
patch: throw new Exception ( $STRING$ ) ;
rank: 512
score: 98.45658111572266
patch: return return null ; } else {
rank: 512
score: 98.45289916992188
patch: return get CaMeL Root ( ) . KILL ;
rank: 512
score: 98.02405657087054
patch: return 0 ; return $STRING$ ;
rank: 513
score: 99.34779296875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . READ ) ;
rank: 513
score: 98.99226888020833
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 513
score: 98.74317515980114
patch: return value . starts CaMeL With ( $STRING$ ) ;
rank: 513
score: 98.4540127840909
patch: System . out . println ( $STRING$ + name ;
rank: 513
score: 98.02342878069196
patch: return Integer . KILL . ;
rank: 514
score: 99.34719848632812
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . get CaMeL First CaMeL Child ( n ) , variable ) ;
rank: 514
score: 98.98804728190105
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ;
rank: 514
score: 98.740673828125
patch: return n . get CaMeL Result ( ) ;
rank: 514
score: 98.45390181107955
patch: throw new Runtime CaMeL Exception ( $STRING$ + this ;
rank: 514
score: 98.45132107204861
patch: Node CaMeL Util . return ( ) ;
rank: 514
score: 98.02199300130208
patch: return code . KILL ;
rank: 515
score: 99.34713745117188
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Constructor ( ) ) ) ;
rank: 515
score: 99.31087239583333
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n )
rank: 515
score: 99.17724609375
patch: if ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL
rank: 515
score: 98.9624356356534
patch: return ! Control CaMeL Flow CaMeL Graph . KILL ;
rank: 515
score: 98.80185372488839
patch: return n . get CaMeL Value ( ) . equals ( n ;
rank: 515
score: 98.7372713955966
patch: throw new Illegal CaMeL Access CaMeL Exception ( ) ;
rank: 515
score: 98.45355779474431
patch: throw new Runtime CaMeL Exception ( $STRING$ + scope ;
rank: 515
score: 98.4500732421875
patch: break KILL . KILL . KILL . ;
rank: 515
score: 98.02178192138672
patch: return KILL . return KILL ; }
rank: 516
score: 99.34699813179348
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ref , variable ) ;
rank: 516
score: 99.30995396205357
patch: state = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable )
rank: 516
score: 99.189453125
patch: return n . get CaMeL First CaMeL Child ( ) ;
rank: 516
score: 98.9613749186198
patch: return Control CaMeL Flow CaMeL Graph . KILL . READ ;
rank: 516
score: 98.02144077845982
patch: return null ; return true ;
rank: 517
score: 99.34696197509766
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Name ( n ) ) ;
rank: 517
score: 99.3097613790761
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , true ) ;
rank: 517
score: 98.95579944957386
patch: if ( is CaMeL Lhs ( n ) ) {
rank: 517
score: 98.79832240513393
patch: if ( Node CaMeL Util . is CaMeL Assignable CaMeL From ( ;
rank: 517
score: 98.45014953613281
patch: if ( null == return null ;
rank: 517
score: 98.44967990451389
patch: return null . KILL KILL . KILL ;
rank: 517
score: 98.0205790201823
patch: return false . KILL ;
rank: 518
score: 99.34611002604167
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ref , variable ) ;
rank: 518
score: 98.95083383413461
patch: return Control CaMeL Flow CaMeL Graph . KILL ; } else {
rank: 518
score: 98.73198908025569
patch: return Node CaMeL Util . KILL . equals ( ;
rank: 518
score: 98.44808349609374
patch: break . KILL . KILL . KILL . ;
rank: 518
score: 98.44578857421875
patch: throw new Illegal CaMeL State CaMeL Exception . ;
rank: 518
score: 98.01889038085938
patch: return KILL . KILL . parse ;
rank: 519
score: 99.18781195746527
patch: ret = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 519
score: 99.17526112432066
patch: if ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent ) ) {
rank: 519
score: 98.94944069602273
patch: return Control CaMeL Flow CaMeL Graph . KILL ; }
rank: 519
score: 98.4459228515625
patch: return parent . return KILL . KILL ;
rank: 519
score: 98.44085083007812
patch: return null ; } else if return null ;
rank: 519
score: 98.01858084542411
patch: return ; . KILL KILL ;
rank: 520
score: 99.3080523947011
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n + $STRING$ ) ;
rank: 520
score: 98.94826096754808
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 520
score: 98.44525824652777
patch: throw new Runtime CaMeL Exception return ) ;
rank: 520
score: 98.44041224888393
patch: return return Boolean . EMPTY ;
rank: 520
score: 98.01817103794643
patch: return return Double . TRUE ;
rank: 521
score: 99.34505208333333
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n . get CaMeL Parent ( ) ) ) ;
rank: 521
score: 99.18351665296052
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable , null ) ;
rank: 521
score: 99.17454223632812
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ,
rank: 521
score: 98.94711538461539
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = null ;
rank: 521
score: 98.79471261160714
patch: return int CaMeL Value = n . get CaMeL String ( ) ;
rank: 521
score: 98.43970489501953
patch: return null ; } / * /
rank: 521
score: 98.0172119140625
patch: return new ) . KILL ;
rank: 522
score: 99.3064453125
patch: state = Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 522
score: 99.17308508831522
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util .
rank: 522
score: 98.94309488932292
patch: switch ( n . get CaMeL Node ( ) ) {
rank: 522
score: 98.44340006510417
patch: if new ) return KILL . KILL ;
rank: 522
score: 98.01448277064732
patch: return Integer . . $NUMBER$ ;
rank: 523
score: 99.3448828125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( get CaMeL String ( ) ) ;
rank: 523
score: 99.30589758831522
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) + $STRING$ ;
rank: 523
score: 98.94146259014423
patch: return ! Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 523
score: 98.44285888671875
patch: return false ; ;
rank: 523
score: 98.43864135742187
patch: throw new Illegal CaMeL Access CaMeL Exception ( ;
rank: 523
score: 98.01422882080078
patch: return KILL ; } if KILL .
rank: 524
score: 99.30561755952381
patch: return ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 524
score: 98.93907752403847
patch: return Node CaMeL Util . KILL ( n , variable ) ;
rank: 524
score: 98.71718528053977
patch: return ( Node CaMeL Util . KILL ) KILL ;
rank: 524
score: 98.44239501953125
patch: return parent . get CaMeL Property ( ) ;
rank: 524
score: 98.01213073730469
patch: return new ( Double . KILL ;
rank: 525
score: 99.34423828125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n . get CaMeL String ( ) ) ;
rank: 525
score: 99.17741124770221
patch: return is CaMeL Lhs ( n , n . get CaMeL Parent ( ) ) ;
rank: 525
score: 99.17183254076087
patch: return Control CaMeL Flow CaMeL Graph . KILL . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 525
score: 98.9333163174716
patch: variable = n . get CaMeL Parent ( ) ;
rank: 525
score: 98.78992571149554
patch: return Node CaMeL Util . ; } return Node CaMeL Util . ;
rank: 525
score: 98.717041015625
patch: switch ( n . get CaMeL Type ( ; )
rank: 525
score: 98.44200303819444
patch: System . err . println ( $STRING$ ;
rank: 525
score: 98.43786010742187
patch: throw new Illegal CaMeL State CaMeL Exception return ;
rank: 525
score: 98.01185825892857
patch: if return Integer . KILL ;
rank: 526
score: 99.3440653483073
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . get CaMeL Parent ( n ) ) ) ;
rank: 526
score: 99.30415675951087
patch: return n . get CaMeL Parent ( ) . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 526
score: 99.1715671705163
patch: return Control CaMeL Flow CaMeL Graph . KILL . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 526
score: 98.9306640625
patch: variable = n . get CaMeL First CaMeL Child ( ) ;
rank: 526
score: 98.716796875
patch: if ( Node CaMeL Util . KILL == false )
rank: 526
score: 98.44149344308036
patch: else return KILL . KILL ;
rank: 526
score: 98.43163299560547
patch: return null ; } } else {
rank: 526
score: 98.01165771484375
patch: if ; { return $STRING$ ; }
rank: 527
score: 99.3439432779948
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph . get CaMeL Scope ( ) ) ) ;
rank: 527
score: 99.302734375
patch: return n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL String ( ) ) ;
rank: 527
score: 99.17653937088816
patch: return Node CaMeL Util . is CaMeL Name ( n . get CaMeL String ( ) ) ;
rank: 527
score: 99.17142917798913
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . n ) ;
rank: 527
score: 98.9259784405048
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( (
rank: 527
score: 98.78691755022321
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ , ;
rank: 527
score: 98.712890625
patch: return $STRING$ + n . get CaMeL String ( ;
rank: 527
score: 98.44124145507813
patch: return KILL . KILL . KILL . ; :
rank: 527
score: 98.4310073852539
patch: / * * / return KILL ;
rank: 527
score: 98.01154436383929
patch: return $STRING$ ; return true ;
rank: 528
score: 99.17586477179276
patch: return Node CaMeL Util . is CaMeL Name ( n . get CaMeL Parent ( ) ) ;
rank: 528
score: 98.9225741299716
patch: return Node CaMeL Util . KILL ( n ) ;
rank: 528
score: 98.4391357421875
patch: return KILL KILL KILL . KILL . KILL ;
rank: 528
score: 98.43015747070312
patch: System . err . println ( KILL ) ;
rank: 528
score: 98.01096888950893
patch: return ( Integer ; . ;
rank: 529
score: 98.9193866436298
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n
rank: 529
score: 98.78424541766827
patch: return Character . to CaMeL Upper CaMeL Case ( $STRING$ ) ;
rank: 529
score: 98.71209161931819
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ; ;
rank: 529
score: 98.43818969726563
patch: return false ; } else { return KILL ;
rank: 529
score: 98.4289794921875
patch: if ( ! Boolean . is CaMeL Empty ;
rank: 529
score: 98.01034545898438
patch: return vars . KILL ;
rank: 530
score: 99.34376061480978
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( is CaMeL Name ) ;
rank: 530
score: 99.29674711681548
patch: = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 530
score: 98.90896371694711
patch: return Node CaMeL Util . get CaMeL Name ( n ) ;
rank: 530
score: 98.78389798677884
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }
rank: 530
score: 98.71137830946181
patch: if ( Node CaMeL Util . KILL ;
rank: 530
score: 98.43621148003473
patch: return KILL KILL . KILL == KILL ;
rank: 530
score: 98.42841186523438
patch: throw new Runtime CaMeL Exception ( $STRING$ { ;
rank: 530
score: 98.00657435825893
patch: return Double . . $NUMBER$ ;
rank: 531
score: 99.17378957648026
patch: this . return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 531
score: 99.1672130766369
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node , variable ) ;
rank: 531
score: 98.907958984375
patch: if ( variable . is CaMeL Lhs ( ) ) {
rank: 531
score: 98.7803243001302
patch: return n . get CaMeL Value ( ) + $STRING$ ;
rank: 531
score: 98.43350219726562
patch: result . return KILL . KILL ;
rank: 531
score: 98.42744954427083
patch: this . return KILL ;
rank: 531
score: 98.00653076171875
patch: return KILL . KILL . ; ,
rank: 532
score: 99.29604085286458
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ( Node ) variable ) ;
rank: 532
score: 98.90555513822116
patch: return ( String ) Control CaMeL Flow CaMeL Graph . KILL ;
rank: 532
score: 98.78029087611607
patch: if ( Node CaMeL Util . is CaMeL Empty ( n ) )
rank: 532
score: 98.69930013020833
patch: return Node CaMeL Util . KILL ; }
rank: 532
score: 98.432861328125
patch: return null . KILL . null ;
rank: 532
score: 98.42331368582589
patch: return return Boolean . TRUE ;
rank: 532
score: 98.00436401367188
patch: return 1 . KILL . KILL ;
rank: 533
score: 99.29571533203125
patch: state = Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , n ) ;
rank: 533
score: 99.16935649671052
patch: return Node CaMeL Util . KILL ( n , n . get CaMeL Parent ( ) ) ;
rank: 533
score: 99.16624145507812
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . get CaMeL
rank: 533
score: 98.9051846590909
patch: state = n . get CaMeL Parent ( ) ;
rank: 533
score: 98.7786865234375
patch: if ( Node CaMeL Util . is CaMeL Defined ( n ) )
rank: 533
score: 98.69887473366477
patch: return Integer . value CaMeL Of ( node ) ;
rank: 533
score: 98.43261040581598
patch: return super . KILL KILL . null ;
rank: 533
score: 98.42060546875
patch: return null ; } else { return KILL ;
rank: 533
score: 98.0042495727539
patch: return KILL . KILL . . .
rank: 534
score: 99.34184337797619
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( value ) ;
rank: 534
score: 99.29544067382812
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ) ;
rank: 534
score: 98.90446333451705
patch: return Control CaMeL Flow CaMeL Graph . READ ) ;
rank: 534
score: 98.77734375
patch: if ( Node CaMeL Util . is CaMeL Const ( n ) )
rank: 534
score: 98.4323974609375
patch: return true ; } else { return KILL ;
rank: 534
score: 98.41775512695312
patch: this . return null ; } / * /
rank: 534
score: 98.00370279947917
patch: return Float . KILL ;
rank: 535
score: 98.9033203125
patch: return is CaMeL Lhs ( n , variable ) ;
rank: 535
score: 98.69534912109376
patch: if ( n . get CaMeL String ( ;
rank: 535
score: 98.417626953125
patch: return null ; }
rank: 535
score: 98.00102996826172
patch: return ; . KILL . KILL ;
rank: 536
score: 99.34022588315217
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( child CaMeL Value ) ;
rank: 536
score: 99.29510498046875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n )
rank: 536
score: 99.16593424479167
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ; }
rank: 536
score: 99.1646395596591
patch: if ( Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) )
rank: 536
score: 98.90150803786058
patch: return Control CaMeL Flow CaMeL Graph . READ ; } else {
rank: 536
score: 98.69407958984375
patch: return node . to CaMeL String ( ) ;
rank: 536
score: 98.41694471571181
patch: if ( ! null ; return null ;
rank: 536
score: 98.00094604492188
patch: return KILL . KILL ; ; .
rank: 537
score: 99.34017333984374
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ;
rank: 537
score: 99.16457201086956
patch: return Control CaMeL Flow CaMeL Graph . KILL . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 537
score: 99.16162787543402
patch: return Control CaMeL Flow CaMeL Graph . KILL + n . get CaMeL Parent ( ) ;
rank: 537
score: 98.89784934303977
patch: result = Control CaMeL Flow CaMeL Graph . KILL ;
rank: 537
score: 98.77294921875
patch: if ( Node CaMeL Util . is CaMeL Var ( ;
rank: 537
score: 98.41608276367188
patch: throw new Runtime CaMeL Exception ( $STRING$ * ;
rank: 537
score: 97.99948120117188
patch: return ; . . / / /
rank: 538
score: 99.3398946126302
patch: this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n . get CaMeL Parent ( ) ) ;
rank: 538
score: 99.16417875744048
patch: || Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 538
score: 98.89700317382812
patch: warn ( n . get CaMeL String ( ) ) ;
rank: 538
score: 98.77253941127232
patch: return Double . value CaMeL Of ( n . get CaMeL Value ;
rank: 538
score: 98.69176136363636
patch: switch ( n . get CaMeL Symbol ( ) )
rank: 538
score: 98.429443359375
patch: else { return KILL . KILL ;
rank: 538
score: 98.41543579101562
patch: return KILL ; } else { return KILL ;
rank: 538
score: 97.99863688151042
patch: return KILL . NONE ;
rank: 539
score: 98.89527476917614
patch: if ( variable . equals ( variable ) ) {
rank: 539
score: 98.76980356069711
patch: return $STRING$ . equals ( n . get CaMeL String ( ;
rank: 539
score: 98.69105113636364
patch: switch ( node . get CaMeL Type ( ) ;
rank: 539
score: 98.42935180664062
patch: return null ; KILL = null ;
rank: 539
score: 98.41488647460938
patch: throw new Illegal CaMeL Argument CaMeL Exception ; }
rank: 539
score: 97.99638366699219
patch: if ; { return KILL ; }
rank: 540
score: 99.16356312144886
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 540
score: 98.87999378551136
patch: return Node CaMeL Util . KILL ( variable ) ;
rank: 540
score: 98.76885516826923
patch: return n . get CaMeL Name ( ) . equals ( ;
rank: 540
score: 98.68707953559027
patch: throw new Assertion CaMeL Error ( $STRING$ ;
rank: 540
score: 97.99562581380208
patch: KILL ; return KILL ;
rank: 541
score: 99.29378255208333
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n + $STRING$ ) ;
rank: 541
score: 99.15530556126645
patch: return ( Control CaMeL Flow CaMeL Graph ) n . get CaMeL First CaMeL Child ( ) ;
rank: 541
score: 98.87691040039063
patch: return Node CaMeL Util . MAYBE _ LIVE ;
rank: 541
score: 98.68369750976562
patch: return KILL . to CaMeL String ( ) ;
rank: 541
score: 98.41263427734376
patch: throw new Internal CaMeL Error ( $STRING$ ; }
rank: 541
score: 97.99534388950893
patch: return ( ) + KILL ;
rank: 542
score: 99.16290283203125
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util .
rank: 542
score: 99.15117331112133
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , index ) ;
rank: 542
score: 98.8762715657552
patch: switch ( n . get CaMeL Name ( ) ) {
rank: 542
score: 98.7646484375
patch: return n . get CaMeL Parent CaMeL Node ( ) ;
rank: 542
score: 98.6827392578125
patch: if ( Node CaMeL Util . KILL . KILL ;
rank: 542
score: 98.42719116210938
patch: if ( return ) return KILL . KILL ;
rank: 542
score: 98.41198120117187
patch: throw new Runtime CaMeL Exception ( $STRING$ return ;
rank: 542
score: 97.99481201171875
patch: return Double . KILL ; ;
rank: 543
score: 99.33824091372283
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , 0 ) ;
rank: 543
score: 98.86852010091145
patch: Node variable = n . get CaMeL Parent ( ) ;
rank: 543
score: 98.76387532552083
patch: throw new Class CaMeL Cast CaMeL Exception ( $STRING$ ) ;
rank: 543
score: 98.68245072798295
patch: if ( Node CaMeL Util . KILL == null )
rank: 543
score: 98.42694769965277
patch: throw new Runtime CaMeL Exception ( 1 ;
rank: 543
score: 98.41090698242188
patch: try { return KILL . KILL . KILL ;
rank: 543
score: 97.9917704264323
patch: return . . KILL ;
rank: 544
score: 99.33787899925595
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( this , variable ) ;
rank: 544
score: 99.16199261209239
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE } ;
rank: 544
score: 99.15066688939145
patch: Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL Parent ( ) )
rank: 544
score: 98.86829630533855
patch: return Control CaMeL Flow CaMeL Graph . KILL . KILL ;
rank: 544
score: 98.76289672851563
patch: return n . get CaMeL Parent ( ) ;
rank: 544
score: 98.68128119574652
patch: return value CaMeL Of ( n ) ;
rank: 544
score: 98.42294311523438
patch: return get CaMeL Instance ( ) ;
rank: 544
score: 98.41089477539063
patch: throw new Runtime CaMeL Exception . KILL ( ;
rank: 544
score: 97.9904276529948
patch: return KILL . . ;
rank: 545
score: 98.8670987215909
patch: return super . is CaMeL Lhs ( n ) ;
rank: 545
score: 98.76143973214286
patch: return n . get CaMeL Value ( ) ; } return null ;
rank: 545
score: 98.42280578613281
patch: return false ; return - 1 ;
rank: 545
score: 97.99022827148437
patch: return $STRING$ ; ;
rank: 546
score: 98.86174982244319
patch: state = n . get CaMeL String ( ) ;
rank: 546
score: 98.75820922851562
patch: if ( Node CaMeL Util . is CaMeL Primitive ( ;
rank: 546
score: 98.68016468394886
patch: return value CaMeL Of ( value CaMeL Of ( ;
rank: 546
score: 98.42257351345486
patch: return get CaMeL Root CaMeL Node ( ;
rank: 546
score: 98.4075439453125
patch: throw new Illegal CaMeL State CaMeL Exception ; }
rank: 546
score: 97.98967633928571
patch: return * Integer . KILL ;
rank: 547
score: 99.28631591796875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( child CaMeL
rank: 547
score: 99.1601229580966
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) ;
rank: 547
score: 99.14909811580883
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , parent ) ;
rank: 547
score: 98.860107421875
patch: variable = n . get CaMeL String ( ) ;
rank: 547
score: 98.67840021306819
patch: if ( Node CaMeL Util . KILL == KILL )
rank: 547
score: 97.9864730834961
patch: return KILL . . KILL ; ;
rank: 548
score: 99.3357421875
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL First ( ) ) ;
rank: 548
score: 99.14732601768092
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable , $STRING$ ) ;
rank: 548
score: 98.8600186434659
patch: return Boolean . is CaMeL Lhs ( n ) ;
rank: 548
score: 98.67151557074652
patch: throw new Assertion CaMeL Error ( ) ;
rank: 548
score: 98.42001342773438
patch: return false ; } return null ;
rank: 548
score: 98.40082465277777
patch: return null ; } catch return null ;
rank: 548
score: 97.9858907063802
patch: return $NUMBER$ . KILL ;
rank: 549
score: 99.282763671875
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ;
rank: 549
score: 99.15671608664773
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Control CaMeL Flow CaMeL Graph .
rank: 549
score: 98.85762532552083
patch: return Control CaMeL Flow CaMeL Graph . KILL ; } }
rank: 549
score: 98.75364332932692
patch: throw new No CaMeL Such CaMeL Method CaMeL Exception ( ; }
rank: 549
score: 98.6693603515625
patch: if ( Position . KILL . equals ( ;
rank: 549
score: 98.41921997070312
patch: break KILL . KILL . KILL ;
rank: 549
score: 98.40011935763889
patch: result = KILL . KILL . KILL ;
rank: 549
score: 97.98477172851562
patch: return Integer . ; _
rank: 550
score: 99.15641061883224
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . n ) ;
rank: 550
score: 98.85038248697917
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n
rank: 550
score: 98.6689208984375
patch: return KILL != null ? KILL . KILL ;
rank: 550
score: 98.41878255208333
patch: return Boolean . class ;
rank: 550
score: 98.39898071289062
patch: throw new Illegal CaMeL Argument CaMeL Exception return ;
rank: 550
score: 97.98233032226562
patch: return / * KILL - KILL ;
rank: 551
score: 99.1560391512784
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent ) ;
rank: 551
score: 99.14602481617646
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( key , variable ) ;
rank: 551
score: 98.84869939630681
patch: return Control CaMeL Flow CaMeL Graph . READ ; }
rank: 551
score: 98.75250713641827
patch: return n . get CaMeL Boolean CaMeL Value ( ) ; }
rank: 551
score: 98.668896484375
patch: return value . get CaMeL Value ( ) ;
rank: 551
score: 98.41835530598958
patch: return this . KILL . KILL KILL ;
rank: 551
score: 98.39852905273438
patch: return return ; } return null ;
rank: 551
score: 97.9796142578125
patch: return ( Double ; ;
rank: 552
score: 99.14497644761029
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , name ) ;
rank: 552
score: 98.8465067545573
patch: try { return Control CaMeL Flow CaMeL Graph . KILL ;
rank: 552
score: 98.41709391276042
patch: return KILL . get CaMeL Instance ( ;
rank: 552
score: 98.39720323350694
patch: throw new Runtime CaMeL Exception . $STRING$ ;
rank: 552
score: 97.97882952008929
patch: return ; = KILL ; ;
rank: 553
score: 99.15509711371527
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph .
rank: 553
score: 99.14297250600961
patch: node = n . get CaMeL First CaMeL Child ( ) ;
rank: 553
score: 98.83219401041667
patch: return Control CaMeL Flow CaMeL Graph . READ . READ ;
rank: 553
score: 98.7506103515625
patch: return Character . to CaMeL Lower CaMeL Case ( $STRING$ ) ;
rank: 553
score: 98.66789027622768
patch: if ( node != null )
rank: 553
score: 98.39617919921875
patch: return KILL . KILL ; } / * /
rank: 553
score: 97.9786148071289
patch: return ; = ; = ; .
rank: 554
score: 99.15490191915761
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . KILL ) ;
rank: 554
score: 98.83185369318181
patch: n = n . get CaMeL Parent ( ) ;
rank: 554
score: 98.41385650634766
patch: return true ; } return null ;
rank: 554
score: 97.97597249348958
patch: return KILL ; KILL ;
rank: 555
score: 99.33292643229167
patch: ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) ;
rank: 555
score: 99.1388168334961
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) : null ;
rank: 555
score: 98.83052201704545
patch: return Integer . is CaMeL Lhs ( n ) ;
rank: 555
score: 98.74684836647727
patch: return Node CaMeL Util . KILL . KILL . ;
rank: 555
score: 98.41334533691406
patch: return false ; } return false ;
rank: 555
score: 97.97235870361328
patch: if ; { return null ; }
rank: 556
score: 98.8289286295573
patch: return ( Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 556
score: 98.74657185872395
patch: if ( Node CaMeL Util . ; } return null ;
rank: 556
score: 98.66136585582386
patch: return n . get CaMeL String CaMeL Value ( ;
rank: 556
score: 98.394287109375
patch: throw new Runtime CaMeL Exception ( ; ;
rank: 557
score: 99.331025390625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n , n . get CaMeL First CaMeL Child ( ) ) ;
rank: 557
score: 99.15376613451087
patch: if ( ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent ) )
rank: 557
score: 99.13201545266544
patch: return list . get ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 557
score: 98.8277920809659
patch: evaluated = Control CaMeL Flow CaMeL Graph . KILL ;
rank: 557
score: 98.74469463641827
patch: return Node CaMeL Util . KILL . KILL . KILL . ;
rank: 557
score: 98.4128646850586
patch: return true ; } return false ;
rank: 557
score: 97.96991729736328
patch: return KILL . KILL . EMPTY Variable
rank: 558
score: 99.32989211309524
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( 0 ) ;
rank: 558
score: 99.27327045641448
patch: return n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ) ;
rank: 558
score: 99.15269403872283
patch: try { ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 558
score: 99.1313117532169
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( false , variable ) ;
rank: 558
score: 98.81693892045455
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ;
rank: 558
score: 98.74291053185097
patch: return variable . equals ( n . get CaMeL String ( ;
rank: 558
score: 98.41280110677083
patch: return parent . KILL KILL . null ;
rank: 558
score: 98.3934326171875
patch: throw new Runtime CaMeL Exception return KILL ;
rank: 558
score: 97.96977887834821
patch: return ; . KILL . ;
rank: 559
score: 99.15202985491071
patch: if ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ) {
rank: 559
score: 98.81487482244319
patch: evaluated = n . get CaMeL String ( ) ;
rank: 559
score: 98.66064453125
patch: return node . get CaMeL Parent CaMeL Node ( ;
rank: 559
score: 98.41277313232422
patch: return true ; return - 1 ;
rank: 559
score: 98.38589477539062
patch: if ( false ; return null ;
rank: 559
score: 97.96913146972656
patch: return KILL . . KILL . ;
rank: 560
score: 99.14971633184524
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) {
rank: 560
score: 98.80551979758523
patch: return return Control CaMeL Flow CaMeL Graph . KILL ;
rank: 560
score: 98.41203477647569
patch: return $STRING$ . KILL KILL KILL KILL ;
rank: 560
score: 98.38458251953125
patch: this . return KILL . KILL ;
rank: 560
score: 97.96900939941406
patch: return KILL . KILL . next Variable
rank: 561
score: 99.32743503736413
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n , variable ) ;
rank: 561
score: 98.79782936789773
patch: state = n . get CaMeL Name ( ) ;
rank: 561
score: 98.73142496744792
patch: return null ; } else return Node CaMeL Util . ;
rank: 561
score: 98.65283813476563
patch: System . err . println ( $STRING$ ) ;
rank: 561
score: 97.9678726196289
patch: return ; = . . . ;
rank: 562
score: 99.26849686472039
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( child
rank: 562
score: 99.14964657738095
patch: throw Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 562
score: 99.12739832261029
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( children , variable ) ;
rank: 562
score: 98.79689719460227
patch: evaluated = n . get CaMeL Parent ( ) ;
rank: 562
score: 98.64783935546875
patch: throw new Internal CaMeL Error ( $STRING$ + ;
rank: 562
score: 98.41101837158203
patch: return KILL ; return - 1 ;
rank: 562
score: 98.37733968098958
patch: } else { return KILL . KILL ;
rank: 562
score: 97.96707153320312
patch: return ; . return $STRING$ ; }
rank: 563
score: 99.32657877604167
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( Node CaMeL Util . KILL ;
rank: 563
score: 99.26520096628289
patch: state . return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 563
score: 99.12674289279514
patch: { return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 563
score: 98.79535466974431
patch: return = Control CaMeL Flow CaMeL Graph . KILL ;
rank: 563
score: 98.41095648871527
patch: return ! KILL . KILL . KILL ;
rank: 563
score: 97.96280924479167
patch: return KILL ; break ;
rank: 564
score: 99.126220703125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( current , variable ) ;
rank: 564
score: 98.79462224786931
patch: return Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 564
score: 98.72257486979167
patch: return n . get CaMeL Qualified CaMeL Name ( ) ;
rank: 564
score: 98.643359375
patch: if ( Node CaMeL Util . KILL ) {
rank: 564
score: 98.41046142578125
patch: return null . KILL KILL KILL KILL ;
rank: 564
score: 98.3755874633789
patch: return null ; } else { ;
rank: 564
score: 97.96107482910156
patch: return KILL KILL . KILL ; }
rank: 565
score: 99.32556733630952
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( null , variable ) ;
rank: 565
score: 99.14834449404762
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( content ) ;
rank: 565
score: 99.1254021139706
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , id ) ;
rank: 565
score: 98.79078258167614
patch: return Boolean . is CaMeL Lhs ( variable ) ;
rank: 565
score: 98.71886097301136
patch: return Node CaMeL Util . ; } return null ;
rank: 565
score: 98.63235812717014
patch: return node . get CaMeL Value ( ;
rank: 565
score: 98.37537231445313
patch: throw new Runtime CaMeL Exception . Exception ( ;
rank: 565
score: 97.96037292480469
patch: return $NUMBER$ ;
rank: 566
score: 98.78589976917614
patch: return is CaMeL Lhs ( n , n ) ;
rank: 566
score: 98.63121880425348
patch: return n . get CaMeL String ( ;
rank: 566
score: 98.40548706054688
patch: return new return ( return ) ;
rank: 566
score: 98.37449137369792
patch: throw new Null CaMeL Pointer CaMeL Exception ;
rank: 566
score: 97.95913260323661
patch: return / KILL . KILL ;
rank: 567
score: 99.14615885416667
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Control CaMeL Flow CaMeL Graph . n ) ;
rank: 567
score: 99.12445746527777
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ) ;
rank: 567
score: 98.716552734375
patch: Node CaMeL Util . return null ; } return null ;
rank: 567
score: 98.63009982638889
patch: throw new Internal CaMeL Error ( ) ;
rank: 567
score: 97.95864868164062
patch: return KILL . MAX ;
rank: 568
score: 98.77423773871527
patch: return is CaMeL Lhs ( n ) ;
rank: 568
score: 98.71346028645833
patch: return n . get CaMeL Value ( ) . equals ;
rank: 568
score: 98.6280029296875
patch: return KILL . is CaMeL Empty ( ) ;
rank: 568
score: 98.40190887451172
patch: return Boolean . EMPTY . KILL ;
rank: 568
score: 98.371728515625
patch: this . return null ; } else if ;
rank: 568
score: 97.95833333333333
patch: if ; return null ;
rank: 569
score: 99.32361949573864
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , n ;
rank: 569
score: 99.14497205946181
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . } ;
rank: 569
score: 98.7737149325284
patch: return this . is CaMeL Lhs ( n ) ;
rank: 569
score: 98.71045939127605
patch: return this . KILL . get CaMeL Value ( ) ;
rank: 569
score: 98.40185546875
patch: return Strings . KILL . KILL ;
rank: 569
score: 97.95740618024554
patch: return KILL . . . ;
rank: 570
score: 99.25386127672698
patch: Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node )
rank: 570
score: 99.14335552014802
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ref ) ;
rank: 570
score: 99.12215423583984
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( [ ] ) ;
rank: 570
score: 98.77323774857955
patch: state = Control CaMeL Flow CaMeL Graph . READ ;
rank: 570
score: 98.626220703125
patch: if ( node == null )
rank: 570
score: 98.36785278320312
patch: return new Illegal CaMeL State CaMeL Exception ( ;
rank: 570
score: 97.95738983154297
patch: return KILL . KILL . ; (
rank: 571
score: 98.76699829101562
patch: if ( n != null ) {
rank: 571
score: 98.70530192057292
patch: return Node CaMeL Util . KILL . equals ( n ;
rank: 571
score: 98.62491861979167
patch: return Boolean . value CaMeL Of ( ;
rank: 571
score: 98.40019226074219
patch: if ( return ) return null ;
rank: 571
score: 98.36582438151042
patch: this . return null ; } else {
rank: 571
score: 97.95644705636161
patch: return Double . KILL . ;
rank: 572
score: 99.3222423735119
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , false ) ;
rank: 572
score: 99.25129780016448
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = n . get CaMeL Parent ( ) ;
rank: 572
score: 99.14178757440476
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( column ) ;
rank: 572
score: 98.7645751953125
patch: = n . get CaMeL Parent ( ) ;
rank: 572
score: 98.7052510579427
patch: return null ; } return Node CaMeL Util . KILL ;
rank: 572
score: 98.62348022460938
patch: if ( node != null ) return node ;
rank: 572
score: 98.40007781982422
patch: return props . KILL . KILL ;
rank: 572
score: 98.36515977647569
patch: { return KILL . KILL . KILL ;
rank: 572
score: 97.95619710286458
patch: return Visitor . KILL ;
rank: 573
score: 99.32114045516305
patch: return Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL First CaMeL Child ( ) , variable ) ;
rank: 573
score: 99.11916775173611
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( child CaMeL Value ) ; }
rank: 573
score: 98.70497824928977
patch: return Integer . value CaMeL Of ( n ) ;
rank: 573
score: 98.6233642578125
patch: throw new Assertion CaMeL Error ( $STRING$ + ;
rank: 573
score: 98.36288888113839
patch: return ; } return null ;
rank: 573
score: 97.95529610770089
patch: return this . KILL ; ;
rank: 574
score: 99.32108764648437
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , ) ;
rank: 574
score: 99.14070638020833
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( module ) ;
rank: 574
score: 99.11829331341912
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( column , variable ) ;
rank: 574
score: 98.76004028320312
patch: return Control CaMeL Flow CaMeL Graph . null ;
rank: 574
score: 98.70449829101562
patch: if ( Node CaMeL Util . is CaMeL Anonymous ( ;
rank: 574
score: 98.39899444580078
patch: return Character . KILL . KILL ;
rank: 574
score: 98.36264377170139
patch: throw new Runtime CaMeL Exception ( ; }
rank: 574
score: 97.95466831752232
patch: return super . KILL . ;
rank: 575
score: 99.139404296875
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util .
rank: 575
score: 99.11725323016827
patch: parent = n . get CaMeL First CaMeL Child ( ) ;
rank: 575
score: 98.75496049360795
patch: state = n . get CaMeL Node ( ) ;
rank: 575
score: 98.70187612680289
patch: return declarations [ 0 ] . get CaMeL Value ( ) ;
rank: 575
score: 98.62037353515625
patch: return this ; } else { return this ;
rank: 575
score: 98.36225721571181
patch: return return Node CaMeL Util . KILL ;
rank: 575
score: 97.95376586914062
patch: return ( Integer ; . - ;
rank: 576
score: 99.31920855978261
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( null , variable ) ;
rank: 576
score: 99.13916015625
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( namespace ) ;
rank: 576
score: 98.75280151367187
patch: return n . get CaMeL Name ( ) ;
rank: 576
score: 98.70095590444711
patch: return n . get CaMeL String CaMeL Value ( ) ; }
rank: 576
score: 98.39605712890625
patch: return 1 . KILL ;
rank: 576
score: 98.36212158203125
patch: return null ; } } return null ;
rank: 576
score: 97.95245361328125
patch: return ( Integer ; . $NUMBER$ /
rank: 577
score: 99.13533742804276
patch: return Node CaMeL Util . is CaMeL Lhs ( Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 577
score: 99.11497497558594
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , variable )
rank: 577
score: 98.74993341619319
patch: return Math . is CaMeL Lhs ( n ) ;
rank: 577
score: 98.39569091796875
patch: return false ; KILL = null ;
rank: 577
score: 97.95215606689453
patch: return null ; return KILL ; }
rank: 578
score: 99.31830124627976
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( current ) ;
rank: 578
score: 99.13389756944444
patch: return Control CaMeL Flow CaMeL Graph . KILL + n . get CaMeL String ( ) ;
rank: 578
score: 99.11051177978516
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) + false ;
rank: 578
score: 98.73777077414773
patch: return ( Boolean ) Node CaMeL Util . KILL ;
rank: 578
score: 98.69521262428977
patch: return n . get CaMeL Node ( ) ; }
rank: 578
score: 98.39434814453125
patch: return Boolean . NULL ;
rank: 578
score: 97.95169503348214
patch: return new ( KILL ; .
rank: 579
score: 99.11011460248162
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( true , variable ) ;
rank: 579
score: 98.73764870383523
patch: else return Control CaMeL Flow CaMeL Graph . KILL ;
rank: 579
score: 98.69344075520833
patch: if ( Node CaMeL Util . ; else return null ;
rank: 579
score: 98.61150512695312
patch: return KILL . get CaMeL Result ( ) ;
rank: 579
score: 98.35420227050781
patch: return null ; } return true ;
rank: 579
score: 97.95105743408203
patch: return KILL . KILL ; . .
rank: 580
score: 99.10915240119485
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , value ) ;
rank: 580
score: 98.73723810369319
patch: return Node CaMeL Util . MAYBE _ LIVE ) ;
rank: 580
score: 98.693359375
patch: if ( Node CaMeL Util . is CaMeL Call ( ;
rank: 580
score: 98.61068115234374
patch: if ( Node CaMeL Util . KILL ( ;
rank: 580
score: 98.39297146267361
patch: return get CaMeL Current CaMeL Node ( ;
rank: 580
score: 97.95083618164062
patch: return true . KILL ;
rank: 581
score: 99.3162333170573
patch: return Node CaMeL Util . is CaMeL Lhs ( Node CaMeL Util . get CaMeL First CaMeL Child ( n ) ) ;
rank: 581
score: 99.12918429904514
patch: return n . get CaMeL Parent ( ) . Control CaMeL Flow CaMeL Graph . KILL ;
rank: 581
score: 98.73569557883523
patch: return Integer . is CaMeL Lhs ( variable ) ;
rank: 581
score: 98.6917215983073
patch: if ( Node CaMeL Util . ; else if ( ;
rank: 581
score: 98.39289093017578
patch: return null . KILL KILL KILL ;
rank: 581
score: 98.35321044921875
patch: return null ; } else ;
rank: 581
score: 97.95039585658482
patch: return KILL ; . KILL .
rank: 582
score: 99.12183295355902
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ,
rank: 582
score: 98.73565118963069
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill .
rank: 582
score: 98.68833414713542
patch: return n . get CaMeL Value ( ) + 1 ;
rank: 582
score: 98.38815743582589
patch: return false ; return null ;
rank: 582
score: 98.35319519042969
patch: return KILL ; } else if ;
rank: 582
score: 97.94956970214844
patch: return ; = KILL ; return ;
rank: 583
score: 98.73357599431819
patch: ret = Control CaMeL Flow CaMeL Graph . KILL ;
rank: 583
score: 98.68782552083333
patch: return this . ; } else { return this . ;
rank: 583
score: 98.60563354492187
patch: return n . get CaMeL Symbol ( ) ;
rank: 583
score: 98.3881327311198
patch: return KILL . null ;
rank: 583
score: 98.35272894965277
patch: return KILL ; } else return KILL ;
rank: 583
score: 97.94773356119792
patch: if ; = KILL ;
rank: 584
score: 99.31508382161458
patch: else return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n , variable ) ;
rank: 584
score: 98.73297674005681
patch: n = Control CaMeL Flow CaMeL Graph . KILL ;
rank: 584
score: 98.6871846516927
patch: if ( Node CaMeL Util . is CaMeL Forward ( ;
rank: 584
score: 98.605224609375
patch: return - 1 . 0 ;
rank: 584
score: 98.35272894965277
patch: return KILL . KILL ; } else {
rank: 584
score: 97.94569396972656
patch: return KILL ; return null ; }
rank: 585
score: 99.31481352306548
patch: return Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL Node ( ) ) ;
rank: 585
score: 99.11627197265625
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . KILL ;
rank: 585
score: 99.10197897518383
patch: break is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 585
score: 98.7314786044034
patch: variable = n . get CaMeL Node ( ) ;
rank: 585
score: 98.68163045247395
patch: return n . get CaMeL Value ( ) . value ;
rank: 585
score: 98.60487874348958
patch: return Node CaMeL Util . KILL ( ;
rank: 585
score: 98.38788519965277
patch: LOG . out . println ( $STRING$ ;
rank: 585
score: 98.34181213378906
patch: return KILL ; } / * /
rank: 585
score: 97.94430541992188
patch: return KILL . value ;
rank: 586
score: 99.31454613095238
patch: return Node CaMeL Util . is CaMeL Lhs ( variable , n . get CaMeL Parent ( ) ) ;
rank: 586
score: 99.11613633897569
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . n ;
rank: 586
score: 99.10161276424633
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( module , variable ) ;
rank: 586
score: 98.71860961914062
patch: return ! is CaMeL Lhs ( n ) ;
rank: 586
score: 98.67901611328125
patch: return n . get CaMeL Value ( ) != null ;
rank: 586
score: 98.3393325805664
patch: { return null ; } else {
rank: 586
score: 97.942138671875
patch: return ; = true ;
rank: 587
score: 99.22764756944444
patch: cx . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 587
score: 99.11552991365132
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ( Node CaMeL
rank: 587
score: 99.10107421875
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( list , variable ) ;
rank: 587
score: 98.677978515625
patch: return get CaMeL Value ( ) . trim ( ) ;
rank: 587
score: 98.38603210449219
patch: if ( return ) return KILL ;
rank: 587
score: 98.33695983886719
patch: return KILL ; } return false ;
rank: 587
score: 97.94191196986607
patch: return new ) . this ;
rank: 588
score: 99.09914981617646
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) {
rank: 588
score: 98.71552068536931
patch: if ( variable . equals ( n ) ) {
rank: 588
score: 98.67682439630681
patch: return n . get CaMeL Parent ( ) ; }
rank: 588
score: 98.60210571289062
patch: return System . get CaMeL Property ( $STRING$ ;
rank: 588
score: 98.38450622558594
patch: return Boolean . KILL . null ;
rank: 588
score: 97.94092559814453
patch: return . KILL . KILL ; }
rank: 589
score: 99.09849638097427
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , key ) ;
rank: 589
score: 98.7149991122159
patch: if ( is CaMeL Lhs ( variable ) ) {
rank: 589
score: 98.67583618164062
patch: return Node CaMeL Util . KILL . equals ;
rank: 589
score: 98.3326416015625
patch: if ( ; else return null ;
rank: 589
score: 97.93940080915179
patch: return System . . . ;
rank: 590
score: 99.10441758897569
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( Node CaMeL Util . ) ;
rank: 590
score: 99.09774959788604
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( KILL , variable ) ;
rank: 590
score: 98.71286843039773
patch: return new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 590
score: 98.67578125
patch: return null ; } return Node CaMeL Util . ;
rank: 590
score: 98.59991455078125
patch: if ( node != null ) {
rank: 590
score: 98.38384331597223
patch: if return KILL . KILL == KILL ;
rank: 590
score: 98.33009847005208
patch: return null ; } else { break ;
rank: 590
score: 97.93876429966518
patch: if ; { return ; .
rank: 591
score: 99.22265625
patch: state . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 591
score: 99.10409206814236
patch: return Control CaMeL Flow CaMeL Graph . KILL + Control CaMeL Flow CaMeL Graph . KILL ;
rank: 591
score: 98.71249389648438
patch: if ( variable . equals ( ) ) {
rank: 591
score: 98.67331764914773
patch: return n . get CaMeL String ( ) ; }
rank: 591
score: 98.32678985595703
patch: return null ; } else break ;
rank: 591
score: 97.9382553100586
patch: return Double . KILL . ; _
rank: 592
score: 98.71241344105114
patch: return ~ Control CaMeL Flow CaMeL Graph . KILL ;
rank: 592
score: 98.59438747829861
patch: if ( Node CaMeL Util . KILL )
rank: 592
score: 98.3265151977539
patch: return null ; } else { }
rank: 592
score: 97.9378433227539
patch: return return Integer . KILL ; }
rank: 593
score: 99.10387505425348
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ;
rank: 593
score: 99.09257238051471
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , KILL ) ;
rank: 593
score: 98.70961692116477
patch: result = Control CaMeL Flow CaMeL Graph . READ ;
rank: 593
score: 98.67146809895833
patch: if ( Node CaMeL Util . is CaMeL Function ( ;
rank: 593
score: 98.38050333658855
patch: if ( return ) {
rank: 593
score: 98.3260269165039
patch: throw new Internal CaMeL Error ( ;
rank: 593
score: 97.93685150146484
patch: return null ; return $STRING$ ; }
rank: 594
score: 99.31002646998355
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( name ) ;
rank: 594
score: 99.10252549913194
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 594
score: 99.09209846047794
patch: return n . get CaMeL String ( n . get CaMeL String ( ) ) ;
rank: 594
score: 98.708984375
patch: if ( Node CaMeL Util . is CaMeL Lhs (
rank: 594
score: 98.66986638849431
patch: return n . get CaMeL Result ( ) ; }
rank: 594
score: 98.32390485491071
patch: / * * return KILL ;
rank: 594
score: 97.9315185546875
patch: return Double . MAX . ; _
rank: 595
score: 99.22003173828125
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node , variable ) ;
rank: 595
score: 99.10103567023026
patch: return ! Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 595
score: 98.707958984375
patch: return Control CaMeL Flow CaMeL Graph . false ;
rank: 595
score: 98.58442993164063
patch: throw new Null CaMeL Pointer CaMeL Exception ; }
rank: 595
score: 98.3194808959961
patch: return null ; } return false ;
rank: 595
score: 97.93064371744792
patch: return this + KILL ;
rank: 596
score: 99.09886410361842
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( id ) ;
rank: 596
score: 99.09091186523438
patch: node = Node CaMeL Util . get CaMeL First CaMeL Child ( n ) ;
rank: 596
score: 98.7052734375
patch: return Control CaMeL Flow CaMeL Graph . true ;
rank: 596
score: 98.58143310546875
patch: if ( node != null && node . ;
rank: 596
score: 98.3180923461914
patch: if return null ; return null ;
rank: 596
score: 97.9294942220052
patch: return ; return KILL ;
rank: 597
score: 99.09841437088816
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( (
rank: 597
score: 99.0895767211914
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , FUNCTION ;
rank: 597
score: 98.69912719726562
patch: if ( variable != null ) {
rank: 597
score: 98.58032989501953
patch: return this ; } return this ;
rank: 597
score: 98.37650299072266
patch: return 0 . KILL . null ;
rank: 597
score: 97.92893473307292
patch: return Integer . NONE ;
rank: 598
score: 99.21715590533088
patch: ! is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 598
score: 99.09483506944444
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ,
rank: 598
score: 99.08927648207721
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( start , variable ) ;
rank: 598
score: 98.68903198242188
patch: return Control CaMeL Flow CaMeL Graph . FALSE ;
rank: 598
score: 98.57817993164062
patch: return Boolean . value CaMeL Of ( true ;
rank: 598
score: 98.37303924560547
patch: return return KILL . KILL KILL ;
rank: 598
score: 98.3148193359375
patch: return null ; } catch ;
rank: 598
score: 97.92854309082031
patch: return $STRING$ ; return KILL ; }
rank: 599
score: 99.30684204101563
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ; }
rank: 599
score: 99.21610514322917
patch: RHS . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 599
score: 98.68549194335938
patch: = n . get CaMeL String ( ) ;
rank: 599
score: 98.37237548828125
patch: return false ; return true ;
rank: 599
score: 98.31473795572917
patch: throw get CaMeL Runtime ( ) . ;
rank: 599
score: 97.92778669084821
patch: return System . . . .
rank: 600
score: 99.09380139802632
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( next ) ;
rank: 600
score: 99.08572208180146
patch: return is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable , variable ) ;
rank: 600
score: 98.65828247070313
patch: return n . get CaMeL Var ( ) ;
rank: 600
score: 98.57547607421876
patch: this . return KILL . KILL . KILL ;
rank: 600
score: 98.37093680245536
patch: finally { return null ; }
rank: 600
score: 98.31271362304688
patch: return ; } else return KILL ;
rank: 600
score: 97.92575073242188
patch: return $STRING$ ; return $STRING$ ; }
rank: 601
score: 99.3032757302989
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( parent , n ) ;
rank: 601
score: 99.21455652573529
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n , n ) ;
rank: 601
score: 99.09230041503906
patch: return Node CaMeL Util . KILL + Control CaMeL Flow CaMeL Graph . KILL ;
rank: 601
score: 99.08397001378677
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( input , variable ) ;
rank: 601
score: 98.67250569661458
patch: return declarations . get ( variable ) ;
rank: 601
score: 98.65594482421875
patch: if ( Node CaMeL Util . is CaMeL Defined ( ;
rank: 601
score: 98.36862182617188
patch: return Integer . KILL . 1 ;
rank: 601
score: 98.31207275390625
patch: throw get CaMeL Runtime ( ;
rank: 602
score: 99.09108072916666
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ( Node CaMeL
rank: 602
score: 98.57343207465277
patch: return ( Node CaMeL Util . KILL ;
rank: 602
score: 98.36856079101562
patch: return false ; } return true ;
rank: 602
score: 98.31174723307292
patch: return null ; } if return null ;
rank: 602
score: 97.9255599975586
patch: return Integer . KILL . ; _
rank: 603
score: 99.30282738095238
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) )
rank: 603
score: 99.08160041360294
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( 0 , variable ) ;
rank: 603
score: 98.66848754882812
patch: if ( Node CaMeL Util == null ) {
rank: 603
score: 98.57105712890625
patch: return node . get CaMeL Type ( ) ;
rank: 603
score: 98.36852264404297
patch: return Boolean . KILL ; break ;
rank: 603
score: 97.92530314127605
patch: return KILL . KILL Variable
rank: 604
score: 99.30255998883929
patch: return Node CaMeL Util . is CaMeL Name ( n . get CaMeL First CaMeL Child ( ) ) ;
rank: 604
score: 99.21386000689338
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , true ) ;
rank: 604
score: 99.08124138327206
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( property , variable ) ;
rank: 604
score: 98.66287231445312
patch: if ( Node CaMeL Util != null ) {
rank: 604
score: 98.6525166829427
patch: return n . get CaMeL Parent ( ) . ; }
rank: 604
score: 98.56967599051339
patch: return value CaMeL Of ( ;
rank: 604
score: 98.36736297607422
patch: return true ; } return true ;
rank: 604
score: 98.30792999267578
patch: return get CaMeL Parent ( ) ;
rank: 604
score: 97.92506917317708
patch: return Double . NONE ;
rank: 605
score: 99.30125025699013
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( parent ) ;
rank: 605
score: 99.08599853515625
patch: return Node CaMeL Util . KILL : Control CaMeL Flow CaMeL Graph . KILL ;
rank: 605
score: 99.08053385416666
patch: return list . get ( n . get CaMeL Parent ( ) ) ;
rank: 605
score: 98.6595458984375
patch: = Control CaMeL Flow CaMeL Graph . KILL ;
rank: 605
score: 98.5695068359375
patch: return node . get CaMeL Name ( ) ;
rank: 605
score: 98.30789620535714
patch: return return Boolean . FALSE ;
rank: 606
score: 99.07970473345588
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( namespace , variable ) ;
rank: 606
score: 98.65574340820312
patch: return Control CaMeL Flow CaMeL Graph . READ }
rank: 606
score: 98.64525257457386
patch: node = node . get CaMeL Parent ( ) ;
rank: 606
score: 98.36639404296875
patch: return true ; } return $STRING$ ;
rank: 606
score: 98.30523681640625
patch: return null ; } else return KILL ;
rank: 606
score: 97.92174530029297
patch: return 1 ;
rank: 607
score: 99.30082370923913
patch: return ( Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL First CaMeL Child ( ) ) ) ;
rank: 607
score: 99.07844094669117
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( vars , variable ) ;
rank: 607
score: 98.6452303799716
patch: return Node CaMeL Util . KILL [ 0 ] ;
rank: 607
score: 98.36611938476562
patch: return parent . KILL ;
rank: 607
score: 98.30220540364583
patch: } else return null ;
rank: 607
score: 97.91785685221355
patch: return KILL . 0 ;
rank: 608
score: 99.07734231387867
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( content , variable ) ;
rank: 608
score: 98.65480041503906
patch: if ( n == null ) {
rank: 608
score: 98.5676025390625
patch: if ( Scope . KILL . equals ( ;
rank: 608
score: 98.36580657958984
patch: return false ; } return $STRING$ ;
rank: 608
score: 98.30135345458984
patch: if ( true ) return null ;
rank: 608
score: 97.91749572753906
patch: return KILL . KILL . EMPTY .
rank: 609
score: 99.29692150297619
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node , n ) ;
rank: 609
score: 99.21210394965277
patch: r . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 609
score: 99.07612879136029
patch: return n . get CaMeL Node ( n . get CaMeL Parent ( ) ) ;
rank: 609
score: 99.07477678571429
patch: boolean is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 609
score: 98.65042724609376
patch: return Control CaMeL Flow CaMeL Graph . KILL }
rank: 609
score: 98.56731567382812
patch: return Node CaMeL Util . KILL . match ;
rank: 609
score: 98.36474609375
patch: return null . KILL KILL ;
rank: 609
score: 98.30011858258929
patch: throw new Error ( $STRING$ ;
rank: 609
score: 97.91730499267578
patch: return super . KILL KILL ; }
rank: 610
score: 99.07426901424633
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( scope , variable ) ;
rank: 610
score: 98.64715576171875
patch: return Boolean . FALSE ;
rank: 610
score: 98.63975524902344
patch: return this ; } return null ;
rank: 610
score: 98.56709594726563
patch: throw new Assertion CaMeL Error ( $STRING$ ; }
rank: 610
score: 98.29771423339844
patch: } else { return KILL ; }
rank: 610
score: 97.91683197021484
patch: return KILL . KILL . out Variable
rank: 611
score: 99.29612426757812
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ; }
rank: 611
score: 99.21201578776042
patch: v . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 611
score: 99.07257758246527
patch: return Node CaMeL Util . KILL + Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 611
score: 98.64066772460937
patch: return Control CaMeL Flow CaMeL Graph . NONE ;
rank: 611
score: 98.63365173339844
patch: return n ; } return null ;
rank: 611
score: 98.5666259765625
patch: return Boolean . value CaMeL Of ( false ;
rank: 611
score: 98.36238098144531
patch: return KILL . KILL KILL ; ;
rank: 611
score: 98.2972640991211
patch: if ( ! null ; break ;
rank: 611
score: 97.91537475585938
patch: return KILL . KILL . KILL =
rank: 612
score: 99.29449172247024
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , true ) ;
rank: 612
score: 99.07326372931985
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( locale , variable ) ;
rank: 612
score: 99.07201470269098
patch: return Control CaMeL Flow CaMeL Graph . KILL : Control CaMeL Flow CaMeL Graph . KILL ;
rank: 612
score: 98.63336736505681
patch: return this . KILL . get ( n ) ;
rank: 612
score: 98.56158447265625
patch: return get CaMeL Parent CaMeL Node ( ) ;
rank: 612
score: 98.36114501953125
patch: return true ; return true ;
rank: 612
score: 98.29655456542969
patch: throw new Runtime CaMeL Exception ; }
rank: 612
score: 97.9146728515625
patch: return ? KILL . KILL ;
rank: 613
score: 99.29423595610119
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , this ) ;
rank: 613
score: 99.07304831112133
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , parent ) ;
rank: 613
score: 98.63396538628473
patch: state = Node CaMeL Util . KILL ;
rank: 613
score: 98.62858072916667
patch: return n . get CaMeL Value ( ;
rank: 613
score: 98.36012486049107
patch: return false ; return false ;
rank: 613
score: 98.29598659939236
patch: return null ; } return return null ;
rank: 613
score: 97.91417439778645
patch: return KILL . true ;
rank: 614
score: 99.29393717447917
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( variable ) ;
rank: 614
score: 99.07289225260416
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( index ) ;
rank: 614
score: 98.62720836292614
patch: return n . get CaMeL Property ( $STRING$ ) ;
rank: 614
score: 98.29347059461806
patch: return KILL ; } else return null ;
rank: 614
score: 97.91356549944196
patch: return Double . . . ;
rank: 615
score: 99.06298065185547
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill (
rank: 615
score: 98.63298797607422
patch: if ( variable == null ) {
rank: 615
score: 98.55976213727679
patch: return this . return null ;
rank: 615
score: 98.35848999023438
patch: return Integer . KILL . 0 ;
rank: 615
score: 98.29182434082031
patch: if ( ! return return ) ;
rank: 615
score: 97.9073486328125
patch: return ; . return null ; }
rank: 616
score: 99.29224795386905
patch: return Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL Next ( ) ) ;
rank: 616
score: 99.20703843060662
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill 1 ( n , variable ) ;
rank: 616
score: 98.63006591796875
patch: return n . get CaMeL Cfg ( ) ;
rank: 616
score: 98.62207794189453
patch: return Double . Na CaMeL N ;
rank: 616
score: 98.35812377929688
patch: return KILL . KILL - KILL ;
rank: 616
score: 98.29133605957031
patch: return null ; return null ; }
rank: 616
score: 97.90681457519531
patch: return false ; return KILL ; }
rank: 617
score: 99.20464680989583
patch: is CaMeL Lhs ( n , n . get CaMeL Parent ( ) )
rank: 617
score: 99.06021118164062
patch: return Node CaMeL Util . KILL + n . get CaMeL String ( ) ;
rank: 617
score: 98.60796440972223
patch: return is CaMeL Lhs ( variable ) ;
rank: 617
score: 98.55563354492188
patch: System . out . println ( $STRING$ + ;
rank: 617
score: 98.3577880859375
patch: return true ; return null ;
rank: 617
score: 98.29091796875
patch: return return false ;
rank: 617
score: 97.9061991373698
patch: return T . KILL ;
rank: 618
score: 99.29130626860119
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( parent , n ) ;
rank: 618
score: 99.05857220818015
patch: boolean is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 618
score: 98.61719859730114
patch: return Node CaMeL Util . KILL . contains ( ;
rank: 618
score: 98.60642700195312
patch: return Control CaMeL Flow CaMeL Graph . class ;
rank: 618
score: 98.55205620659723
patch: return get CaMeL Value ( node ) ;
rank: 618
score: 98.3575668334961
patch: return true ; KILL = null ;
rank: 618
score: 98.28861083984376
patch: / * * /
rank: 618
score: 97.90518188476562
patch: return KILL return $STRING$ ;
rank: 619
score: 99.29072498139881
patch: = Node CaMeL Util . is CaMeL Lhs ( n , n . get CaMeL Parent ( ) ) ;
rank: 619
score: 99.06470540364583
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( this ) ;
rank: 619
score: 98.60380249023437
patch: try { return Node CaMeL Util . KILL ;
rank: 619
score: 98.54973493303571
patch: this . return - 1 ;
rank: 619
score: 98.35736083984375
patch: return filter . KILL . KILL ;
rank: 619
score: 98.28838239397321
patch: if ( ; return null ;
rank: 619
score: 97.90451049804688
patch: return Compiler . KILL ;
rank: 620
score: 99.28843470982143
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , name ) ;
rank: 620
score: 99.063330078125
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Name ( n ) ;
rank: 620
score: 98.59892442491319
patch: evaluated = Node CaMeL Util . KILL ;
rank: 620
score: 98.54962768554688
patch: if ( Node CaMeL Util . equals ( ;
rank: 620
score: 98.35735321044922
patch: return Boolean . KILL . 0 ;
rank: 620
score: 98.28495788574219
patch: if ( ; return return null ;
rank: 620
score: 97.9038798014323
patch: return Character . KILL ;
rank: 621
score: 99.28789992559524
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( $STRING$ , variable ) ;
rank: 621
score: 98.57679443359375
patch: if ( n == null ) return null ;
rank: 621
score: 98.35672607421876
patch: return true ; ;
rank: 621
score: 98.28240203857422
patch: return null ; } / * ;
rank: 621
score: 97.90271759033203
patch: return KILL . KILL . KILL ||
rank: 622
score: 99.2877197265625
patch: this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 622
score: 99.04826354980469
patch: return Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 622
score: 98.6126708984375
patch: return n . get CaMeL Parent ( ) . ;
rank: 622
score: 98.57179090711806
patch: result = Node CaMeL Util . KILL ;
rank: 622
score: 98.28086635044643
patch: this . return null ; }
rank: 622
score: 97.90060424804688
patch: return return KILL . KILL ; }
rank: 623
score: 98.55595567491319
patch: return declarations . get ( n ) ;
rank: 623
score: 98.35625348772321
patch: return Boolean . KILL KILL ;
rank: 623
score: 98.28071594238281
patch: return KILL ; } } else {
rank: 623
score: 97.90032196044922
patch: return ( Integer ; . next )
rank: 624
score: 99.28623744419643
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( variable ) )
rank: 624
score: 98.55243682861328
patch: return KILL . KILL . READ ;
rank: 624
score: 98.35469055175781
patch: return options . KILL . KILL ;
rank: 624
score: 98.27921549479167
patch: { return null ; }
rank: 624
score: 97.90012613932292
patch: return ; = 0 ;
rank: 625
score: 99.28574916294643
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( type , variable ) ;
rank: 625
score: 99.059814453125
patch: return Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ; }
rank: 625
score: 98.60276100852273
patch: if ( Node CaMeL Util . ; else break ;
rank: 625
score: 98.54635959201389
patch: return throw Node CaMeL Util . KILL ;
rank: 625
score: 98.53721618652344
patch: return node . KILL ( ) ;
rank: 625
score: 98.2790298461914
patch: return null ; } } if ;
rank: 625
score: 97.89849853515625
patch: return ; . break ;
rank: 626
score: 99.28519112723214
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , 1 ) ;
rank: 626
score: 98.53595648871527
patch: return value CaMeL Of ( KILL ) ;
rank: 626
score: 98.53465440538194
patch: return refs . get ( variable ) ;
rank: 626
score: 98.35387166341145
patch: if ( return ) ;
rank: 626
score: 98.27809143066406
patch: / * * return KILL ; }
rank: 626
score: 97.8980712890625
patch: return ( Integer ; . . )
rank: 627
score: 99.19587976792279
patch: return n . get CaMeL Cfg ( n . get CaMeL Parent ( ) ) ;
rank: 627
score: 99.05458286830357
patch: set CaMeL String ( n . get CaMeL String ( ) ) ;
rank: 627
score: 98.59672407670455
patch: return Node CaMeL Util . KILL . KILL ( ;
rank: 627
score: 98.53309631347656
patch: return Factory . MAYBE _ LIVE ;
rank: 627
score: 98.53187391493056
patch: throw new Unsupported CaMeL Operation CaMeL Exception ;
rank: 627
score: 98.2764892578125
patch: return null ; } else return ;
rank: 627
score: 97.89593505859375
patch: return KILL = KILL ;
rank: 628
score: 98.53169759114583
patch: return get CaMeL Value ( n ) ;
rank: 628
score: 98.52139621310764
patch: return Control CaMeL Flow CaMeL Graph . ;
rank: 628
score: 98.35372924804688
patch: return false ; return false ; }
rank: 628
score: 98.27608489990234
patch: this . return null ; } else
rank: 628
score: 97.8955810546875
patch: return $STRING$ ; }
rank: 629
score: 99.28215589021382
patch: return Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL First ( ) ) ;
rank: 629
score: 99.1953125
patch: return n . get CaMeL Parent ( ) . is CaMeL Lhs ( ) ;
rank: 629
score: 99.05248209635417
patch: return list . get ( n . get CaMeL String ( ) ) ;
rank: 629
score: 98.59367231889205
patch: if ( Node CaMeL Util . ; return n ;
rank: 629
score: 98.5314229329427
patch: return node . KILL ;
rank: 629
score: 98.35338677300348
patch: return $STRING$ . KILL KILL . KILL ;
rank: 629
score: 98.275146484375
patch: return null ; } / * * /
rank: 629
score: 97.89516775948661
patch: return KILL ; return / ;
rank: 630
score: 99.19252642463235
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , 0 ) ;
rank: 630
score: 99.05152180989583
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ) ;
rank: 630
score: 98.5919522372159
patch: return n . get CaMeL Function CaMeL Value ( ;
rank: 630
score: 98.51145426432292
patch: return compare ( n , variable ) ;
rank: 630
score: 98.35289001464844
patch: return this . KILL . EMPTY ;
rank: 630
score: 98.27450561523438
patch: / * * * return KILL ;
rank: 630
score: 97.89510091145833
patch: return count . KILL ;
rank: 631
score: 99.2789242393092
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ref ) ;
rank: 631
score: 98.5917635830966
patch: return Node CaMeL Util . KILL ( n , ;
rank: 631
score: 98.52572292751736
patch: return value . to CaMeL String ( ;
rank: 631
score: 98.3511962890625
patch: return KILL KILL KILL . KILL ;
rank: 631
score: 98.27433776855469
patch: if ( ! null ) break ;
rank: 631
score: 97.89460100446429
patch: return new ( return ; .
rank: 632
score: 99.27485094572368
patch: return Node CaMeL Util . is CaMeL Lhs ( n . get CaMeL String ( ) ) ;
rank: 632
score: 99.18993422564338
patch: return variable . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 632
score: 98.59002130681819
patch: return String . value CaMeL Of ( n ) ;
rank: 632
score: 98.50649685329861
patch: return = Node CaMeL Util . KILL ;
rank: 632
score: 98.3511734008789
patch: return false ; return true ; }
rank: 632
score: 98.27336120605469
patch: / * * / break ; }
rank: 632
score: 97.89261881510417
patch: return Double . MAX ;
rank: 633
score: 99.04383263221153
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ++ ;
rank: 633
score: 98.5867032137784
patch: throw new Internal CaMeL Error ( $STRING$ ) ; }
rank: 633
score: 98.50777180989583
patch: switch ( Node CaMeL Util . KILL )
rank: 633
score: 98.50491672092014
patch: return Factory . MAYBE _ LIVE ) ;
rank: 633
score: 98.270751953125
patch: * * * / return null ;
rank: 633
score: 97.89220174153645
patch: return null ; KILL ;
rank: 634
score: 99.03131103515625
patch: return is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ;
rank: 634
score: 98.58662553267045
patch: return get CaMeL Value ( ) . equals ( ;
rank: 634
score: 98.50115966796875
patch: if ( node == null ) {
rank: 634
score: 98.49875217013889
patch: return get CaMeL Cfg ( n ) ;
rank: 634
score: 98.26938883463542
patch: return null ; } ;
rank: 634
score: 97.89070434570313
patch: return new null ;
rank: 635
score: 99.18658806295956
patch: else is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ;
rank: 635
score: 99.04080403645834
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( false ) ;
rank: 635
score: 99.03060150146484
patch: return Node CaMeL Util . equals ( Control CaMeL Flow CaMeL Graph . KILL ;
rank: 635
score: 98.58559841579861
patch: return this . ; } return null ;
rank: 635
score: 98.48588053385417
patch: return Factory . KILL ;
rank: 635
score: 98.34959411621094
patch: return KILL . KILL != KILL ;
rank: 635
score: 98.26887512207031
patch: / * * * return null ;
rank: 635
score: 97.8894551595052
patch: return 0 . 0 ;
rank: 636
score: 99.04043782552084
patch: return names . get ( n . get CaMeL String ( ) ) ;
rank: 636
score: 99.02740478515625
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) . KILL ;
rank: 636
score: 98.50027126736111
patch: return KILL . to CaMeL String ( ;
rank: 636
score: 98.48516845703125
patch: return is CaMeL Lhs ( n )
rank: 636
score: 98.34932708740234
patch: return Integer . KILL . null ;
rank: 636
score: 98.26728820800781
patch: / * * * / break ;
rank: 636
score: 97.88929966517857
patch: return new ( ; . ;
rank: 637
score: 98.5785245028409
patch: return Double . value CaMeL Of ( n ) ;
rank: 637
score: 98.48065185546875
patch: return Illegal CaMeL Argument CaMeL Exception
rank: 637
score: 98.3492202758789
patch: return super . KILL KILL ) ;
rank: 637
score: 98.26310221354167
patch: break ;
rank: 637
score: 97.888916015625
patch: return ( Double ; . ;
rank: 638
score: 99.17950080422794
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable ) ; }
rank: 638
score: 99.0392578125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( true ) ;
rank: 638
score: 98.5755948153409
patch: return Factory . get CaMeL Instance ( ) . ;
rank: 638
score: 98.49622938368056
patch: return KILL . is CaMeL Local ( ;
rank: 638
score: 98.47456190321181
patch: return ~ Node CaMeL Util . KILL ;
rank: 638
score: 98.34913635253906
patch: return ) . KILL . KILL ;
rank: 638
score: 98.26097106933594
patch: } else { if return null ;
rank: 638
score: 97.88754708426339
patch: return KILL . FALSE ; ;
rank: 639
score: 99.17775591681985
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node , n ) ;
rank: 639
score: 99.03754534040179
patch: throw is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 639
score: 98.57529518821023
patch: return n . get CaMeL Value ( ) ) ;
rank: 639
score: 98.34794616699219
patch: return true ; return true ; }
rank: 639
score: 98.25986056857639
patch: return KILL ; } } return null ;
rank: 639
score: 97.88686116536458
patch: return Double . ; _
rank: 640
score: 99.03614095052083
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( KILL ) ;
rank: 640
score: 98.57383510044643
patch: return Node CaMeL Util . ;
rank: 640
score: 98.49161783854167
patch: return node . get CaMeL Parent ( ;
rank: 640
score: 98.47001817491319
patch: if ( Node CaMeL Util . is CaMeL
rank: 640
score: 98.34769112723214
patch: return Boolean . KILL ; ;
rank: 640
score: 98.25678846571181
patch: if ( ! return ; return null ;
rank: 640
score: 97.88670857747395
patch: return / + KILL ;
rank: 641
score: 99.17555147058823
patch: state . return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 641
score: 98.56908069957386
patch: return n . get CaMeL Node ( ) . ;
rank: 641
score: 98.48975372314453
patch: return get CaMeL Value ( ) ;
rank: 641
score: 98.46615600585938
patch: return Node CaMeL Util . READ ;
rank: 641
score: 98.25646100725446
patch: / * * return null ;
rank: 642
score: 99.03509928385417
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( key ) ;
rank: 642
score: 99.01931583180146
patch: return super . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( n ) ;
rank: 642
score: 98.56794877485795
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ; }
rank: 642
score: 98.48822021484375
patch: return null ; } else if ( ;
rank: 642
score: 98.45839436848958
patch: return get CaMeL Name ( n ) ;
rank: 642
score: 98.25617980957031
patch: if ( KILL ; return null ;
rank: 642
score: 97.88646443684895
patch: return ; . . .
rank: 643
score: 99.02601975661058
patch: return Node CaMeL Util . is CaMeL Name ( n ) ;
rank: 643
score: 98.5655746459961
patch: Node CaMeL Util . return null ;
rank: 643
score: 98.45716010199652
patch: ret = Node CaMeL Util . KILL ;
rank: 643
score: 98.34452056884766
patch: return type . KILL . KILL ;
rank: 643
score: 98.25495910644531
patch: return ; , * * * /
rank: 643
score: 97.8860371907552
patch: return 0 . 1 ;
rank: 644
score: 98.44478352864583
patch: return decode ( n , variable ) ;
rank: 644
score: 97.88587443033855
patch: return Math . EMPTY ;
rank: 645
score: 98.56480823863636
patch: return n . get CaMeL Boolean CaMeL Value ( ;
rank: 645
score: 98.48183186848958
patch: return KILL . is CaMeL Constant ( ;
rank: 645
score: 98.34286499023438
patch: return true ; return false ; }
rank: 645
score: 98.25154622395833
patch: if ( this . KILL == null ;
rank: 645
score: 97.88572184244792
patch: if KILL = KILL ;
rank: 646
score: 99.17194366455078
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill 1 ( variable ) ;
rank: 646
score: 99.0151008157169
patch: if ( Node CaMeL Util . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node (
rank: 646
score: 98.56230163574219
patch: return Node CaMeL Util . ; }
rank: 646
score: 98.48016357421875
patch: if ( node != null && ;
rank: 646
score: 98.4345703125
patch: return Control CaMeL Flow CaMeL Graph . }
rank: 646
score: 98.34235491071429
patch: return true ; return false ;
rank: 646
score: 97.884765625
patch: return refs . KILL ;
rank: 647
score: 99.01825358072917
patch: return Node CaMeL Util . is CaMeL Lhs ( variable , variable ) ;
rank: 647
score: 99.01506042480469
patch: return n . is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( ) ;
rank: 647
score: 98.56126819957386
patch: if ( Node CaMeL Util . ; return null ;
rank: 647
score: 98.47959899902344
patch: return value CaMeL Of ( node ;
rank: 647
score: 98.42901611328125
patch: return Boolean . EMPTY ; }
rank: 647
score: 98.34011404854911
patch: return 0 . KILL KILL ;
rank: 647
score: 98.24788665771484
patch: return KILL . KILL ; } else
rank: 647
score: 97.88230387369792
patch: return KILL KILL KILL ;
rank: 648
score: 99.2444580078125
patch: return Node CaMeL Util . is CaMeL Name ( n , variable ) ;
rank: 648
score: 99.01791178385416
patch: return names . get ( n . get CaMeL Parent ( ) ) ;
rank: 648
score: 98.47900390625
patch: return KILL . equals ( this ) ;
rank: 648
score: 98.42682647705078
patch: return Node CaMeL Util . FALSE ;
rank: 648
score: 98.3388900756836
patch: return Boolean . KILL ; } ;
rank: 648
score: 98.24626922607422
patch: / * * return null ; }
rank: 648
score: 97.88163248697917
patch: / * return KILL ;
rank: 649
score: 99.0158447265625
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable
rank: 649
score: 99.01001790364583
patch: return Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ; } else {
rank: 649
score: 98.556689453125
patch: return n . get CaMeL Next ( ) ;
rank: 649
score: 98.47887420654297
patch: throw new Error ( $STRING$ + ;
rank: 649
score: 98.42381591796875
patch: return throw null ;
rank: 649
score: 98.24492536272321
patch: / * * * * /
rank: 650
score: 99.16592227711396
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , 1 ) ;
rank: 650
score: 99.01410319010417
patch: return is CaMeL Name ( n . get CaMeL String ( ) ) ;
rank: 650
score: 98.55506480823864
patch: if ( ; return Node CaMeL Util . ; }
rank: 650
score: 98.47816297743056
patch: return KILL . hash CaMeL Code ( ;
rank: 650
score: 98.42253875732422
patch: return Node CaMeL Util . class ;
rank: 650
score: 98.33735656738281
patch: return $STRING$ . KILL KILL KILL ;
rank: 650
score: 98.24365997314453
patch: return KILL . KILL . return ;
rank: 650
score: 97.87937709263393
patch: return ; . . KILL ;
rank: 651
score: 99.012451171875
patch: return declarations . get ( n . get CaMeL String ( ) ) ;
rank: 651
score: 98.55327814275569
patch: return n . get CaMeL Var ( ) ; }
rank: 651
score: 98.47768147786458
patch: return KILL . KILL [ 0 ] ;
rank: 651
score: 98.24344482421876
patch: return return true ;
rank: 651
score: 97.87889607747395
patch: return Generator . KILL ;
rank: 652
score: 99.010498046875
patch: return children . get ( n . get CaMeL String ( ) ) ;
rank: 652
score: 98.55143432617187
patch: return Node CaMeL Util . KILL ( n ;
rank: 652
score: 98.4117660522461
patch: return get CaMeL Name ( ) ;
rank: 652
score: 98.24335394965277
patch: if ( ! null == return null ;
rank: 652
score: 97.87870279947917
patch: return ; = this ;
rank: 653
score: 99.16190338134766
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ) ;
rank: 653
score: 99.0089111328125
patch: return n . get CaMeL First ( ) ;
rank: 653
score: 98.54730779474431
patch: return this . value . equals ( n ) ;
rank: 653
score: 98.41067504882812
patch: = Node CaMeL Util . KILL ;
rank: 653
score: 98.331787109375
patch: return parent . KILL KILL KILL ;
rank: 653
score: 98.24310302734375
patch: } else if return null ;
rank: 653
score: 97.87785121372768
patch: return Integer . KILL ; }
rank: 654
score: 99.1612319946289
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ; break ;
rank: 654
score: 99.00847981770833
patch: return Control CaMeL Flow CaMeL Graph . KILL ( n , variable ) ;
rank: 654
score: 98.9983139038086
patch: return Control CaMeL Flow CaMeL Graph . KILL . KILL . KILL . READ ;
rank: 654
score: 98.54534357244319
patch: if ( Node CaMeL Util . ; return this ;
rank: 654
score: 98.40399169921875
patch: return Node CaMeL Util . KILL }
rank: 654
score: 98.33162689208984
patch: return false ; return null ; }
rank: 654
score: 98.24238804408482
patch: return null ; } break ;
rank: 654
score: 97.87748209635417
patch: return return - 1 ;
rank: 655
score: 99.16106100643383
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = Node CaMeL Util . KILL ;
rank: 655
score: 99.006396484375
patch: return is CaMeL String ( n . get CaMeL String ( ) ) ;
rank: 655
score: 98.99755859375
patch: return Node CaMeL Util . equals ( Control CaMeL Flow CaMeL Graph . KILL ) ;
rank: 655
score: 98.54436700994319
patch: return Node CaMeL Util . KILL . get ( ;
rank: 655
score: 98.45671844482422
patch: report CaMeL Error ( $STRING$ ) ;
rank: 655
score: 98.33047049386161
patch: return this . KILL KILL ;
rank: 655
score: 98.24232700892857
patch: return KILL ; } else {
rank: 655
score: 97.87641252790179
patch: return * KILL . KILL ;
rank: 656
score: 99.0054219563802
patch: return Control CaMeL Flow CaMeL Graph . KILL + null ;
rank: 656
score: 98.45655059814453
patch: throw new Throwable ( $STRING$ ) ;
rank: 656
score: 98.3296890258789
patch: return new short [ 0 ] ;
rank: 656
score: 98.23961530412946
patch: } else { return null ;
rank: 656
score: 97.87635294596355
patch: return $STRING$ + KILL ;
rank: 657
score: 99.15818158318015
patch: return Node CaMeL Util . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( child
rank: 657
score: 99.00123009314903
patch: return n . get CaMeL First CaMeL Child ( ) ; }
rank: 657
score: 98.5420809659091
patch: return Node CaMeL Util . ; } else { ;
rank: 657
score: 98.45587158203125
patch: if ( n . get CaMeL Node ;
rank: 657
score: 98.39347330729167
patch: return null ; } }
rank: 657
score: 97.87471923828124
patch: return ( ) ;
rank: 658
score: 99.22736467633929
patch: return Node CaMeL Util . is CaMeL Lhs ( n ) ; }
rank: 658
score: 98.99434407552083
patch: super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 658
score: 98.54190402560764
patch: return Double . value CaMeL Of ( ;
rank: 658
score: 98.45545111762152
patch: return node . get CaMeL Symbol ( ;
rank: 658
score: 98.3871561686198
patch: return Boolean . null ;
rank: 658
score: 98.32621547154018
patch: else { return null ; }
rank: 658
score: 98.23502894810268
patch: { return KILL . KILL ;
rank: 658
score: 97.87394496372768
patch: return new $STRING$ . this ;
rank: 659
score: 99.15615844726562
patch: return n . get CaMeL Parent ( ) . get CaMeL Cfg ( ) ;
rank: 659
score: 98.99806431361607
patch: return n . get CaMeL Parent ( ) . next ( ) ;
rank: 659
score: 98.53968505859375
patch: return exp . get CaMeL Value ( ) ;
rank: 659
score: 98.45408121744792
patch: return null ; } return - 1 ;
rank: 659
score: 98.37264251708984
patch: return new Boolean ( false ) ;
rank: 659
score: 98.32605743408203
patch: finally { return KILL . KILL ;
rank: 659
score: 98.23434448242188
patch: / * * * / * /
rank: 660
score: 98.53965065696023
patch: return node . get CaMeL Parent ( ) . ;
rank: 660
score: 98.45186360677083
patch: return n . get CaMeL Node ( ;
rank: 660
score: 98.23275320870536
patch: return get CaMeL Runtime ( ;
rank: 660
score: 97.8705546061198
patch: return KILL ; . ;
rank: 661
score: 98.98831176757812
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n . get CaMeL
rank: 661
score: 98.5375244140625
patch: return this . KILL . get ( ) ;
rank: 661
score: 98.45112440321181
patch: return get CaMeL Parent CaMeL Node ( ;
rank: 661
score: 98.3575948079427
patch: return Runtime . KILL ;
rank: 661
score: 98.22999572753906
patch: try { return KILL . KILL ;
rank: 661
score: 97.87032645089286
patch: return super . KILL ; ;
rank: 662
score: 98.99193464006696
patch: return null ; } return Control CaMeL Flow CaMeL Graph . KILL ;
rank: 662
score: 98.45020294189453
patch: return null ; } return this ;
rank: 662
score: 98.35714721679688
patch: return new Integer ( variable ) ;
rank: 662
score: 98.32256317138672
patch: return site . KILL . KILL ;
rank: 662
score: 98.22816467285156
patch: if ( ; return null ; }
rank: 662
score: 97.86974225725446
patch: return ( $STRING$ - ; .
rank: 663
score: 98.98486328125
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( READ ;
rank: 663
score: 98.53523393110795
patch: return KILL . get CaMeL Value ( ) ; }
rank: 663
score: 98.44882202148438
patch: return this . return - 1 ;
rank: 663
score: 98.35591125488281
patch: return Node CaMeL Util . TRUE ;
rank: 663
score: 98.32243516710069
patch: return System . get CaMeL Instance ( ;
rank: 663
score: 98.22408294677734
patch: return return false ; } else {
rank: 664
score: 99.219091796875
patch: return Node CaMeL Util . is CaMeL Lhs ( n , null ) ;
rank: 664
score: 99.15411017922794
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( $NUMBER$ , variable ) ;
rank: 664
score: 98.5342129794034
patch: synchronized ( this ) { return this . ; }
rank: 664
score: 98.3556416829427
patch: return KILL . READ ;
rank: 664
score: 98.2238998413086
patch: if ( return ; / * /
rank: 664
score: 97.86541748046875
patch: return KILL ; } if ;
rank: 665
score: 99.15255737304688
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill 1 ( n ) ;
rank: 665
score: 98.98326873779297
patch: if ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ) {
rank: 665
score: 98.53331409801136
patch: return Node CaMeL Util . KILL . decode ( ;
rank: 665
score: 98.44160291883681
patch: return null . to CaMeL String ( ;
rank: 665
score: 98.35050455729167
patch: return Boolean . NO ;
rank: 665
score: 98.22020721435547
patch: { return KILL . KILL ; }
rank: 665
score: 97.86484781901042
patch: return ( null ) ;
rank: 666
score: 98.98040771484375
patch: return Node CaMeL Util . Control CaMeL Flow CaMeL Graph . KILL ;
rank: 666
score: 98.97735126201923
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( }
rank: 666
score: 98.34835815429688
patch: return this . KILL . READ ;
rank: 666
score: 98.32062530517578
patch: return get CaMeL Scope ( ) ;
rank: 666
score: 98.21984100341797
patch: / * * * * * /
rank: 666
score: 97.8617655436198
patch: return Integer . 0 ;
rank: 667
score: 99.20922088623047
patch: return Control CaMeL Flow CaMeL Graph . KILL : Node CaMeL Util . KILL ;
rank: 667
score: 98.97796630859375
patch: System . out . println ( n . get CaMeL String ( ) ) ;
rank: 667
score: 98.43803405761719
patch: return super . KILL ( ) ;
rank: 667
score: 98.3443603515625
patch: return new Boolean ( true ) ;
rank: 667
score: 98.31963239397321
patch: return $STRING$ . KILL KILL ;
rank: 667
score: 97.86083984375
patch: return KILL . ; .
rank: 668
score: 99.20713177849265
patch: return Node CaMeL Util . is CaMeL Lhs ( Node CaMeL Util . KILL ) ;
rank: 668
score: 99.14967447916666
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n , variable )
rank: 668
score: 98.97618103027344
patch: return Node CaMeL Util . is CaMeL Lhs ( Node CaMeL Util . get CaMeL
rank: 668
score: 98.95662747896634
patch: pos = n . get CaMeL First CaMeL Child ( ) ;
rank: 668
score: 98.43641662597656
patch: return value . trim ( ) ;
rank: 668
score: 98.33184051513672
patch: warn ( n , variable ) ;
rank: 668
score: 98.2127456665039
patch: return KILL . KILL ; } }
rank: 668
score: 97.86021931966145
patch: return KILL ; return ;
rank: 669
score: 98.9715576171875
patch: if ( Node CaMeL Util . is CaMeL Lhs ( n , variable ) )
rank: 669
score: 98.51668548583984
patch: if ( Node CaMeL Util . ;
rank: 669
score: 98.43562316894531
patch: return value CaMeL Of . KILL ;
rank: 669
score: 98.33083670479911
patch: return Boolean . FALSE ; }
rank: 669
score: 98.31848822699652
patch: try { return KILL . KILL ; }
rank: 669
score: 98.21070861816406
patch: return ; , / * * /
rank: 669
score: 97.85973103841145
patch: return $STRING$ ; } ;
rank: 670
score: 99.14930725097656
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 670
score: 98.4343490600586
patch: return this . filter . KILL ;
rank: 670
score: 98.32330322265625
patch: return Node CaMeL Util . NONE ;
rank: 670
score: 98.2089111328125
patch: { return null ;
rank: 670
score: 97.8580322265625
patch: if return KILL ;
rank: 671
score: 99.14913177490234
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n + $STRING$ ) ;
rank: 671
score: 98.50830688476563
patch: return Node CaMeL Util . ; } else {
rank: 671
score: 98.42864227294922
patch: return KILL == KILL . KILL ;
rank: 671
score: 98.32256317138672
patch: return Boolean . Factory . KILL ;
rank: 671
score: 97.85711059570312
patch: return KILL ; .
rank: 672
score: 98.96944173177083
patch: return Control CaMeL Flow CaMeL Graph . KILL ; } else
rank: 672
score: 98.50808376736111
patch: return n . ; } return null ;
rank: 672
score: 98.31150309244792
patch: return Boolean . true ;
rank: 672
score: 98.20438058035714
patch: return null ; } return ;
rank: 672
score: 97.8558349609375
patch: return Math . NONE ;
rank: 673
score: 98.96590423583984
patch: return n . get CaMeL Parent ( ) . get CaMeL String ( ) ;
rank: 673
score: 98.94266451322116
patch: p = n . get CaMeL First CaMeL Child ( ) ;
rank: 673
score: 98.42826080322266
patch: if ( node != null ) ;
rank: 673
score: 98.31564670138889
patch: return KILL . KILL KILL KILL ; }
rank: 673
score: 98.20395333426339
patch: / * * / * /
rank: 673
score: 97.85575648716518
patch: return ( double ; . ;
rank: 674
score: 99.14456939697266
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) * /
rank: 674
score: 98.9642562866211
patch: return Node CaMeL Util . KILL + n . get CaMeL Parent ( ) ;
rank: 674
score: 98.50278727213542
patch: return super . ; } return null ;
rank: 674
score: 98.42745535714286
patch: return KILL . equals ( ;
rank: 674
score: 98.30443572998047
patch: set CaMeL Name ( variable ) ;
rank: 674
score: 98.19991629464286
patch: throw new Exception ( $STRING$ ;
rank: 674
score: 97.85186767578125
patch: return ; . KILL . .
rank: 675
score: 99.1992546530331
patch: return ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ) ;
rank: 675
score: 99.14329618566177
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , node ) ;
rank: 675
score: 98.95976257324219
patch: return Node CaMeL Util . KILL ? Control CaMeL Flow CaMeL Graph . KILL ;
rank: 675
score: 98.93482384314903
patch: count = n . get CaMeL First CaMeL Child ( ) ;
rank: 675
score: 98.31216430664062
patch: return super . KILL == KILL ;
rank: 675
score: 98.3025410970052
patch: return Boolean . TYPE ;
rank: 675
score: 97.84914725167411
patch: return KILL . KILL ; KILL
rank: 676
score: 98.95841979980469
patch: return n . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ,
rank: 676
score: 98.42340766059027
patch: throw new Error ( $STRING$ + n ;
rank: 676
score: 98.31204986572266
patch: return 0 . KILL KILL KILL ;
rank: 676
score: 98.30123901367188
patch: return Boolean . Runtime . KILL ;
rank: 676
score: 98.19895717075893
patch: if ( ) return null ;
rank: 676
score: 97.84895833333333
patch: return ; . ; .
rank: 677
score: 98.9568115234375
patch: super . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ,
rank: 677
score: 98.49918212890626
patch: return Double . value CaMeL Of ( n ;
rank: 677
score: 98.42257254464286
patch: return this ; return this ;
rank: 677
score: 98.31102752685547
patch: return null ; KILL = KILL ;
rank: 677
score: 98.3011474609375
patch: Kill ( n , variable ) ;
rank: 677
score: 98.19841918945312
patch: return return ) ;
rank: 677
score: 97.84872436523438
patch: / ; = KILL ;
rank: 678
score: 99.19564819335938
patch: is CaMeL Lhs ( n , n . get CaMeL Parent ( ) ) ;
rank: 678
score: 98.9519775390625
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( return ) ;
rank: 678
score: 98.9264667217548
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( )
rank: 678
score: 98.420654296875
patch: switch ( n . get CaMeL Type ;
rank: 678
score: 98.19740513392857
patch: / * / return KILL ;
rank: 678
score: 97.84862263997395
patch: return super . ; .
rank: 679
score: 99.19369942801339
patch: return Node CaMeL Util . is CaMeL Lhs ( n , n ;
rank: 679
score: 99.14122817095588
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill $NUMBER$ ( n , variable ) ;
rank: 679
score: 98.95188395182292
patch: return Control CaMeL Flow CaMeL Graph . KILL ; break ;
rank: 679
score: 98.41583251953125
patch: return value CaMeL Of ( n ;
rank: 679
score: 98.30692291259766
patch: return true ; return null ; }
rank: 679
score: 98.29670715332031
patch: return new String ( variable ) ;
rank: 680
score: 99.14039522058823
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ; return null ;
rank: 680
score: 98.91023763020833
patch: return Control CaMeL Flow CaMeL Graph . KILL + false ;
rank: 680
score: 98.41572570800781
patch: return node . clone ( ) ;
rank: 680
score: 98.19690958658855
patch: return null ; } else
rank: 680
score: 97.84819684709821
patch: return ; . return ; .
rank: 681
score: 99.13792509191177
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( name , n ) ;
rank: 681
score: 98.94335065569196
patch: return Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ; } else
rank: 681
score: 98.90672810872395
patch: = n . get CaMeL First CaMeL Child ( ) ;
rank: 681
score: 98.48876953125
patch: return null . get CaMeL Value ( ) ;
rank: 681
score: 98.41405378069196
patch: return super . KILL ( ;
rank: 681
score: 98.2939961751302
patch: return Boolean . false ;
rank: 681
score: 98.19546508789062
patch: / * * * /
rank: 681
score: 97.8475850423177
patch: return return KILL ; }
rank: 682
score: 99.13789636948529
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable , this ) ;
rank: 682
score: 98.94322916666667
patch: this . is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 682
score: 98.4881591796875
patch: return n . get CaMeL Reference ( ) ;
rank: 682
score: 98.41290283203125
patch: return Boolean . value CaMeL Of ;
rank: 682
score: 98.30530548095703
patch: return children . KILL . KILL ;
rank: 682
score: 98.28852844238281
patch: if ( null != n ) {
rank: 682
score: 98.19384765625
patch: if ( return ; break ; }
rank: 682
score: 97.8466796875
patch: return KILL ; return super .
rank: 683
score: 99.13728601792279
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n + 0 ) ;
rank: 683
score: 98.28450012207031
patch: return new Boolean ( null ) ;
rank: 683
score: 98.19334411621094
patch: if ( parent != null ) {
rank: 683
score: 97.84559849330357
patch: return KILL . KILL . EMPTY
rank: 684
score: 98.94295247395833
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ref ) ;
rank: 684
score: 98.48374633789062
patch: switch ( n . get CaMeL Type ( ;
rank: 684
score: 98.30506243024554
patch: try { return null ; }
rank: 684
score: 98.27999877929688
patch: while ( n != null ) {
rank: 684
score: 98.18952941894531
patch: if ; / * * * /
rank: 685
score: 98.94126790364584
patch: boolean is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ;
rank: 685
score: 98.8943583170573
patch: return new Control CaMeL Flow CaMeL Graph ( n ) ;
rank: 685
score: 98.48313395182292
patch: return variable . equals ( n ) ;
rank: 685
score: 98.30430603027344
patch: logger . arraycopy ( KILL ) ;
rank: 685
score: 98.27682495117188
patch: return Boolean . NOT ;
rank: 685
score: 98.18919372558594
patch: throw null ;
rank: 685
score: 97.84385463169643
patch: return ; . . . ;
rank: 686
score: 98.94103190104167
patch: return is CaMeL Entering CaMeL New CaMeL Cfg CaMeL Node ( node ) ;
rank: 686
score: 98.48180541992187
patch: return get CaMeL Value ( ) . equals ;
rank: 686
score: 98.40713500976562
patch: return get CaMeL Value ( ; }
rank: 686
score: 98.18852887834821
patch: / * * / break ;
rank: 686
score: 97.84333147321429
patch: return Double . KILL ; }
rank: 687
score: 98.40530395507812
patch: return value . KILL ( ) ;
rank: 687
score: 98.30245971679688
patch: return Boolean . NONE ;
rank: 687
score: 98.26347133091518
patch: return true ; } else {
rank: 687
score: 98.18797084263393
patch: return null ; } if ;
rank: 687
score: 97.84120686848958
patch: return / * ; .
rank: 688
score: 98.94047328404018
patch: return Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE . KILL ;
rank: 688
score: 98.480615234375
patch: return Integer . value CaMeL Of ( n ;
rank: 688
score: 98.40252685546875
patch: return get CaMeL Value ( ;
rank: 688
score: 98.3008041381836
patch: if new return KILL . KILL ;
rank: 688
score: 98.26338704427083
patch: try { return null ;
rank: 688
score: 98.1859130859375
patch: throw return null ; } else {
rank: 688
score: 97.83969552176339
patch: return this . KILL . ;
rank: 689
score: 99.18287568933823
patch: return ( Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n ) ) ;
rank: 689
score: 98.93811907087054
patch: return Control CaMeL Flow CaMeL Graph . KILL . KILL . KILL ;
rank: 689
score: 98.88023792613636
patch: node = n . get CaMeL Parent ( ) ;
rank: 689
score: 98.48046264648437
patch: return n . get CaMeL Type ( ) ;
rank: 689
score: 98.30027262369792
patch: break KILL . KILL ; } else {
rank: 689
score: 98.24895368303571
patch: return false ; } else {
rank: 689
score: 97.8392842610677
patch: return super . value ;
rank: 690
score: 98.47969563802083
patch: return n . get CaMeL Property ( ;
rank: 690
score: 98.39903259277344
patch: return - 1 . - 1 ;
rank: 690
score: 98.29966735839844
patch: return this . KILL . type ;
rank: 690
score: 98.24783761160714
patch: return LT ( 0 ) ;
rank: 690
score: 98.18397521972656
patch: if ( ! null ) return ;
rank: 690
score: 97.83914184570312
patch: return ; = ; ;
rank: 691
score: 98.93265206473214
patch: boolean is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) {
rank: 691
score: 98.86600748697917
patch: return null + n . get CaMeL String ( ) ;
rank: 691
score: 98.39745330810547
patch: return this . scope . KILL ;
rank: 691
score: 98.29929606119792
patch: Node CaMeL Util . return ( return ;
rank: 691
score: 98.24755859375
patch: return intern ( variable ) ;
rank: 691
score: 98.18370819091797
patch: return return true ; } else {
rank: 691
score: 97.83685302734375
patch: return $STRING$ ; KILL ;
rank: 692
score: 98.86573282877605
patch: return Control CaMeL Flow CaMeL Graph . KILL ( ) ;
rank: 692
score: 98.2418212890625
patch: return Boolean . null ; }
rank: 692
score: 98.18050384521484
patch: / * * * * / /
rank: 692
score: 97.83683558872768
patch: return ; . KILL KILL .
rank: 693
score: 98.85143025716145
patch: return Control CaMeL Flow CaMeL Graph . KILL * false ;
rank: 693
score: 98.46767171223958
patch: return null ; } else { return ;
rank: 693
score: 98.29656982421875
patch: return false ; KILL = KILL ;
rank: 693
score: 98.23392159598214
patch: is CaMeL Lhs ( n )
rank: 693
score: 98.1790771484375
patch: } else { return KILL ;
rank: 693
score: 97.83649553571429
patch: return ; = ; = ;
rank: 694
score: 99.0946044921875
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( variable ) ; }
rank: 694
score: 98.46670532226562
patch: return declarations [ 0 ] . equals ( ;
rank: 694
score: 98.2321268717448
patch: return throw null ; }
rank: 694
score: 98.17829241071429
patch: if ; return null ; }
rank: 694
score: 97.83577473958333
patch: return new return ) ;
rank: 695
score: 99.0903076171875
patch: result = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 695
score: 98.4665283203125
patch: return n . get CaMeL Arg ( ) ;
rank: 695
score: 98.17788696289062
patch: if ; return null ; } else
rank: 695
score: 97.83518763950893
patch: throw KILL . KILL . ;
rank: 696
score: 98.92730712890625
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( node ,
rank: 696
score: 98.84519449869792
patch: return new Control CaMeL Flow CaMeL Graph ( variable ) ;
rank: 696
score: 98.46387396918402
patch: return Integer . value CaMeL Of ( ;
rank: 696
score: 98.17619977678571
patch: return ; , * * /
rank: 696
score: 97.8328145345052
patch: throw KILL . FALSE ;
rank: 697
score: 99.17481282552083
patch: return Node CaMeL Util . is CaMeL Lhs ( n , 0 ) ;
rank: 697
score: 98.92682756696429
patch: return Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE + variable ;
rank: 697
score: 98.84019978841145
patch: return Control CaMeL Flow CaMeL Graph . KILL . class ;
rank: 697
score: 98.45848999023437
patch: return Double . value CaMeL Of ( ; }
rank: 697
score: 98.38455636160714
patch: return - 1 . 1 ;
rank: 697
score: 98.1759033203125
patch: return ; , return null ;
rank: 697
score: 97.83011881510417
patch: return KILL ; KILL .
rank: 698
score: 98.92516217912946
patch: return Control CaMeL Flow CaMeL Graph . KILL . KILL . READ ;
rank: 698
score: 98.455712890625
patch: if ( ; return Node CaMeL Util . ;
rank: 698
score: 98.19859822591145
patch: return this . READ ;
rank: 698
score: 98.17399088541667
patch: return return null ; }
rank: 698
score: 97.83010864257812
patch: return KILL KILL ; }
rank: 699
score: 98.92495930989584
patch: if ( is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) )
rank: 699
score: 98.83132934570312
patch: return Control CaMeL Flow CaMeL Graph . KILL * null ;
rank: 699
score: 98.28990827287946
patch: finally { return false ; }
rank: 699
score: 98.19332449776786
patch: return signum ( n ) ;
rank: 699
score: 98.17278289794922
patch: / * * / / * /
rank: 699
score: 97.82979329427083
patch: return KILL . NULL ;
rank: 700
score: 99.08001239483173
patch: state = Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 700
score: 98.9242412860577
patch: n = n . get CaMeL First CaMeL Child ( ) ;
rank: 700
score: 98.83038330078125
patch: return Control CaMeL Flow CaMeL Graph . KILL + true ;
rank: 700
score: 98.19014195033482
patch: return this ; } else {
rank: 700
score: 98.17073059082031
patch: if ; * * * * /
rank: 700
score: 97.8291015625
patch: return KILL ; ; ;
rank: 701
score: 98.91966029575893
patch: return Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE + n ;
rank: 701
score: 98.82991536458333
patch: return Control CaMeL Flow CaMeL Graph . KILL : null ;
rank: 701
score: 98.45057373046875
patch: return Node CaMeL Util . KILL . get ;
rank: 701
score: 98.1895751953125
patch: return null ; } } }
rank: 701
score: 97.82801310221355
patch: return Boolean . MAX ;
rank: 702
score: 99.07626139322916
patch: state = is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ) ;
rank: 702
score: 98.44759114583333
patch: return Symbol . KILL . equals ( ;
rank: 702
score: 98.36869812011719
patch: throw new Error ( $STRING$ ; }
rank: 702
score: 98.28659057617188
patch: return ref . KILL . KILL ;
rank: 702
score: 98.18934122721355
patch: switch ( variable ) {
rank: 702
score: 98.16489955357143
patch: / * * * / /
rank: 702
score: 97.82591756184895
patch: if ; return $STRING$ ;
rank: 703
score: 98.91062575120192
patch: result = Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE ;
rank: 703
score: 98.82810465494792
patch: throw null + n . get CaMeL String ( ) ;
rank: 703
score: 98.44737413194444
patch: return String . value CaMeL Of ( ;
rank: 703
score: 98.3664779663086
patch: return get CaMeL Symbol ( ; }
rank: 703
score: 98.16162109375
patch: return return return KILL ;
rank: 703
score: 97.82489013671875
patch: return ANNOTATION . KILL ;
rank: 704
score: 99.0722412109375
patch: return ( Node CaMeL Util . is CaMeL Lhs ( n ) ) ;
rank: 704
score: 98.82591663707386
patch: return Control CaMeL Flow CaMeL Graph . KILL 1 ;
rank: 704
score: 98.36515045166016
patch: return value CaMeL Of ( ) ;
rank: 704
score: 98.18563406808036
patch: return Boolean . NOT ; }
rank: 705
score: 98.90731375558036
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ;
rank: 705
score: 98.8246182528409
patch: return Control CaMeL Flow CaMeL Graph . MAYBE _ LIVE
rank: 705
score: 98.36480712890625
patch: return - 1 . 0 ; }
rank: 705
score: 98.28018951416016
patch: return KILL ; return true ; }
rank: 705
score: 98.15835135323661
patch: return null ; } * /
rank: 705
score: 97.81914411272321
patch: return Double . ; . ;
rank: 706
score: 99.15632180606617
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Name ( n , variable ) ;
rank: 706
score: 98.82375081380208
patch: return n . get CaMeL String ( ) + null ;
rank: 706
score: 98.4395751953125
patch: return Node CaMeL Util . KILL ) ;
rank: 706
score: 98.17221505301339
patch: if ( n != null )
rank: 706
score: 98.15648803710937
patch: if return null ;
rank: 706
score: 97.81819661458333
patch: if ; = null ;
rank: 707
score: 99.15013020833334
patch: return Node CaMeL Util . is CaMeL Lhs ( n , false ) ;
rank: 707
score: 99.0506591796875
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = true ;
rank: 707
score: 98.82027180989583
patch: return Control CaMeL Flow CaMeL Graph . KILL - null ;
rank: 707
score: 98.3626220703125
patch: return false ; }
rank: 707
score: 98.27821350097656
patch: else return KILL . KILL KILL ;
rank: 707
score: 98.17083740234375
patch: is CaMeL Lhs = null ;
rank: 707
score: 98.15315464564732
patch: result = KILL . KILL ;
rank: 707
score: 97.8167215983073
patch: return Integer . KILL .
rank: 708
score: 99.14931077223558
patch: return Node CaMeL Util . is CaMeL Name ( variable ) ;
rank: 708
score: 98.90194266183036
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n ,
rank: 708
score: 98.43799438476563
patch: if ( n . get CaMeL Node ( ;
rank: 708
score: 98.36226654052734
patch: return null ; } if ( ;
rank: 708
score: 98.16990443638393
patch: return Factory . KILL ; }
rank: 708
score: 98.14885602678571
patch: / * * ? * /
rank: 708
score: 97.81661987304688
patch: break ; return KILL ;
rank: 709
score: 99.14500075120192
patch: return Node CaMeL Util . is CaMeL Lhs ( node ) ;
rank: 709
score: 99.0358417217548
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = false ;
rank: 709
score: 98.90010288783482
patch: boolean is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n )
rank: 709
score: 98.81575150923295
patch: node = n . get CaMeL First ( ) ;
rank: 709
score: 98.43695746527777
patch: Node CaMeL Util . ; return null ;
rank: 709
score: 98.16504923502605
patch: return Boolean . IN ;
rank: 709
score: 98.14829799107143
patch: / * * ; * /
rank: 709
score: 97.81641496930804
patch: return Integer . . . ;
rank: 710
score: 99.14346313476562
patch: return Node CaMeL Util . is CaMeL Lhs ( n , variable ) ; }
rank: 710
score: 98.89822591145834
patch: boolean is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n ) ;
rank: 710
score: 98.81147904829545
patch: return new Control CaMeL Flow CaMeL Graph ( ) ;
rank: 710
score: 98.4365478515625
patch: return Node CaMeL Util . KILL . contains ;
rank: 710
score: 98.35725620814732
patch: return KILL . contains ( ;
rank: 710
score: 98.27678680419922
patch: finally { return null ; } }
rank: 710
score: 98.162841796875
patch: return synchronized ( this ) ;
rank: 710
score: 98.146484375
patch: return ; , return false ;
rank: 710
score: 97.8148701985677
patch: return Integer . IN ;
rank: 711
score: 99.1412582397461
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL Lhs ( n ) ; }
rank: 711
score: 98.81002807617188
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ++ ;
rank: 711
score: 98.27519880022321
patch: finally { return KILL ; }
rank: 711
score: 98.16047014508929
patch: return Boolean . NO ; }
rank: 711
score: 97.81365966796875
patch: return KILL KILL ; ;
rank: 712
score: 98.8097635904948
patch: else { return Control CaMeL Flow CaMeL Graph . KILL ;
rank: 712
score: 98.4365234375
patch: return Factory . get CaMeL Instance ( ;
rank: 712
score: 98.35321044921875
patch: throw new Runtime CaMeL Exception ( $STRING$
rank: 712
score: 98.15985107421875
patch: return null ; } / *
rank: 712
score: 97.81139119466145
patch: return ( false ; .
rank: 713
score: 98.89007568359375
patch: return Node CaMeL Util . is CaMeL Lhs ( n ,
rank: 713
score: 98.43551974826389
patch: return nodes . get ( n ) ;
rank: 713
score: 98.35299682617188
patch: return KILL != KILL . KILL ;
rank: 713
score: 98.13864571707589
patch: / * * KILL * /
rank: 713
score: 97.81094796316964
patch: return scope . KILL . ;
rank: 714
score: 99.13451385498047
patch: return n . get CaMeL Class ( ) . is CaMeL Lhs ( ) ;
rank: 714
score: 98.43425903320312
patch: return n . get CaMeL Message ( ) ;
rank: 714
score: 98.14892578125
patch: return Boolean . DEFAULT ;
rank: 714
score: 98.13810511997768
patch: this . KILL = null ;
rank: 714
score: 97.80970982142857
patch: return false ; return ; .
rank: 715
score: 99.13276018415179
patch: is CaMeL Lhs ( n . get CaMeL Parent ( ) ) ;
rank: 715
score: 99.01819786658653
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill * /
rank: 715
score: 98.86687762920673
patch: return Control CaMeL Flow CaMeL Graph . KILL . KILL . ;
rank: 715
score: 98.3508071899414
patch: if ( node == null || ;
rank: 715
score: 98.1353759765625
patch: / * / return null ;
rank: 715
score: 97.8095703125
patch: return ( return ) ;
rank: 716
score: 99.13087681361607
patch: return Node CaMeL Util . is CaMeL Lhs ( variable ) ; }
rank: 716
score: 98.85812377929688
patch: return Control CaMeL Flow CaMeL Graph . KILL + variable ;
rank: 716
score: 98.80352228338069
patch: node = n . get CaMeL String ( ) ;
rank: 716
score: 98.26704624720982
patch: return null ; return false ;
rank: 716
score: 98.14353724888393
patch: return null ; } ) ;
rank: 716
score: 98.12986537388393
patch: this . return return KILL ;
rank: 716
score: 97.8086649576823
patch: return ( null ; .
rank: 717
score: 98.8533223470052
patch: return Control CaMeL Flow CaMeL Graph . KILL ; * /
rank: 717
score: 98.80324300130208
patch: return null + n . get CaMeL Parent ( ) ;
rank: 717
score: 98.34766387939453
patch: throw new Exception ( $STRING$ + ;
rank: 717
score: 98.26640319824219
patch: return parent . KILL == KILL ;
rank: 717
score: 98.14252580915179
patch: return Boolean . true ; }
rank: 717
score: 98.12914428710937
patch: { return KILL ;
rank: 717
score: 97.80810546875
patch: return Integer . ; . ;
rank: 718
score: 98.85191932091347
patch: return is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( ;
rank: 718
score: 98.4297103881836
patch: return this . return this . ;
rank: 718
score: 98.34596252441406
patch: throw new Assertion CaMeL Error ( ;
rank: 718
score: 98.12653459821429
patch: if ; return return null ;
rank: 718
score: 97.8076171875
patch: return ; = false ;
rank: 719
score: 99.12424879807692
patch: return Node CaMeL Util . is CaMeL Lhs ( name ) ;
rank: 719
score: 98.99432373046875
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( )
rank: 719
score: 98.80120239257812
patch: return n . to CaMeL String ( ) ;
rank: 719
score: 98.343505859375
patch: return get CaMeL Symbol ( ;
rank: 719
score: 98.26141357421875
patch: return parent . KILL KILL ;
rank: 719
score: 98.13601248604911
patch: return Boolean . TRUE ; }
rank: 719
score: 97.80760846819196
patch: return KILL ; return ; .
rank: 720
score: 99.11975911458333
patch: return Node CaMeL Util . is CaMeL Lhs ( n , 1 ) ;
rank: 720
score: 98.84857732599431
patch: return Control CaMeL Flow CaMeL Graph . KILL false ;
rank: 720
score: 98.7996826171875
patch: parent = n . get CaMeL Parent ( ) ;
rank: 720
score: 98.3350321451823
patch: return value . KILL ;
rank: 720
score: 98.26088169642857
patch: return new return ( ) ;
rank: 720
score: 98.1252950032552
patch: return ; , * /
rank: 720
score: 97.80731201171875
patch: return ( $STRING$ ; .
rank: 721
score: 98.42308044433594
patch: return n ; } return n ;
rank: 721
score: 98.32974243164062
patch: return value CaMeL Of ;
rank: 721
score: 98.13400704520089
patch: return synchronized ( n ) ;
rank: 721
score: 98.12309919084821
patch: if ( return ; break ;
rank: 721
score: 97.80640665690105
patch: return KILL . RIGHT ;
rank: 722
score: 99.11618477957589
patch: result = Node CaMeL Util . is CaMeL Lhs ( n ) ;
rank: 722
score: 98.9780742938702
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill ( n )
rank: 722
score: 98.84794108072917
patch: return Control CaMeL Flow CaMeL Graph . KILL + n ;
rank: 722
score: 98.78596635298295
patch: parent = n . get CaMeL First ( ) ;
rank: 722
score: 98.42283935546875
patch: synchronized ( this ) { return this ; }
rank: 722
score: 98.32693045479911
patch: return KILL $NUMBER$ . KILL ;
rank: 722
score: 98.1336441040039
patch: return n ;
rank: 722
score: 98.12050955636161
patch: return ; , / * /
rank: 722
score: 97.80605061848958
patch: return new Integer ; ;
rank: 723
score: 99.1155517578125
patch: return Node CaMeL Util . is CaMeL Name ( n , n ) ;
rank: 723
score: 98.8422139485677
patch: boolean is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill {
rank: 723
score: 98.7831143465909
patch: return n . get CaMeL First ( ) ; }
rank: 723
score: 98.42044677734376
patch: return n . get CaMeL Root ( ) ;
rank: 723
score: 98.32108851841518
patch: return refs [ 0 ] ;
rank: 723
score: 98.25878034319196
patch: else { return false ; }
rank: 723
score: 98.13217599051339
patch: return intern ( n ) ;
rank: 723
score: 98.12030901227679
patch: this . KILL = KILL ;
rank: 723
score: 97.80382283528645
patch: return false ; return ;
rank: 724
score: 98.96346341646634
patch: is CaMeL Lhs ( n . get CaMeL Parent ( ) )
rank: 724
score: 98.8392666903409
patch: return Control CaMeL Flow CaMeL Graph . KILL true ;
rank: 724
score: 98.77595658735795
patch: return n . get CaMeL Next ( ) ; }
rank: 724
score: 98.41806640625
patch: synchronized ( this ) { return null ; }
rank: 724
score: 98.31678118024554
patch: return KILL [ 0 ] ;
rank: 724
score: 98.25763702392578
patch: return true ; return KILL ; }
rank: 724
score: 98.13037109375
patch: return decode ( variable ) ;
rank: 724
score: 97.80378941127232
patch: return ; . . / /
rank: 725
score: 99.1074951171875
patch: return Node CaMeL Util . is CaMeL Lhs ( n , $STRING$ ) ;
rank: 725
score: 98.83457594651442
patch: return Node CaMeL Util . equals ( n , variable ) ;
rank: 725
score: 98.76719970703125
patch: return Control CaMeL Flow CaMeL Graph . n ;
rank: 725
score: 98.31505584716797
patch: return value CaMeL Of ( ; }
rank: 725
score: 98.12908935546875
patch: return Boolean . false ; }
rank: 725
score: 98.118896484375
patch: if ( ! null ;
rank: 725
score: 97.80301920572917
patch: if KILL = 0 ;
rank: 726
score: 99.10682779947916
patch: return Node CaMeL Util . is CaMeL Lhs ( n , this ) ;
rank: 726
score: 98.95968627929688
patch: state = n . get CaMeL Parent ( ) ; }
rank: 726
score: 98.82100423177083
patch: throw null : Control CaMeL Flow CaMeL Graph . KILL ;
rank: 726
score: 98.76178533380681
patch: { return Control CaMeL Flow CaMeL Graph . KILL ;
rank: 726
score: 98.41342163085938
patch: return null ; } return n ;
rank: 726
score: 98.31383405412946
patch: * / return - 1 ;
rank: 726
score: 98.12348284040179
patch: if ( ! null ) {
rank: 726
score: 97.7992655436198
patch: return . KILL ; }
rank: 727
score: 98.75278542258523
patch: return is CaMeL Name ( n , variable ) ;
rank: 727
score: 98.41109212239583
patch: Node CaMeL Util . return null ; }
rank: 727
score: 98.25587463378906
patch: return ( return || return ) ;
rank: 727
score: 98.12168666294643
patch: return normalize ( n ) ;
rank: 727
score: 97.79678344726562
patch: return Integer . MAX ;
rank: 728
score: 99.10347493489583
patch: return Node CaMeL Util . is CaMeL Lhs ( n , true ) ;
rank: 728
score: 98.95480346679688
patch: return n + n . get CaMeL Parent ( ) ;
rank: 728
score: 98.31000518798828
patch: throw new Exception ( $STRING$ ; }
rank: 728
score: 98.12001037597656
patch: return variable ;
rank: 728
score: 97.79660034179688
patch: return ; . ; }
rank: 729
score: 98.953125
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = n ;
rank: 729
score: 98.40625
patch: return n . get CaMeL Result ( ;
rank: 729
score: 98.30684661865234
patch: if ; this . return null ;
rank: 729
score: 97.79519653320312
patch: return / * 0 ;
rank: 730
score: 99.09158528645834
patch: return variable . equals ( n . get CaMeL Parent ( ) ) ;
rank: 730
score: 98.74137739701705
patch: return n . get CaMeL Name ( ) ; }
rank: 730
score: 98.40580919053819
patch: return Short . value CaMeL Of ( ;
rank: 730
score: 98.3040262858073
patch: return - 1 ; }
rank: 730
score: 98.11704799107143
patch: return resolve ( n ) ;
rank: 730
score: 98.1044921875
patch: / * return null ;
rank: 730
score: 97.79434204101562
patch: return System . . .
rank: 731
score: 98.74121704101563
patch: return Control CaMeL Flow CaMeL Graph . TRUE ;
rank: 731
score: 98.40056694878473
patch: return nodes . get ( node ) ;
rank: 731
score: 98.30147298177083
patch: return filter . KILL ;
rank: 731
score: 98.24851771763393
patch: return KILL KILL . null ;
rank: 731
score: 98.11610630580357
patch: return consume ( n ) ;
rank: 731
score: 98.10408528645833
patch: parent . return null ;
rank: 731
score: 97.79281180245536
patch: return ; = KILL ; .
rank: 732
score: 99.08253696986607
patch: return Node CaMeL Util . is CaMeL Lhs ( n , ) ;
rank: 732
score: 98.78543090820312
patch: return n . get CaMeL Parent ( ) . KILL ;
rank: 732
score: 98.73952414772727
patch: return Node CaMeL Util . MAYBE _ LIVE ; }
rank: 732
score: 98.29819161551339
patch: return - 1 . KILL ;
rank: 732
score: 98.11598423549107
patch: return Illegal CaMeL State CaMeL Exception
rank: 732
score: 97.79239908854167
patch: return Double . IN ;
rank: 733
score: 98.73595081676136
patch: return is CaMeL Lhs ( variable , variable ) ;
rank: 733
score: 98.40004475911458
patch: if ( Node CaMeL Util . ; }
rank: 733
score: 98.23763275146484
patch: return KILL ; return false ; }
rank: 733
score: 98.11592610677083
patch: return signum ( ) ;
rank: 733
score: 97.7908426920573
patch: return KILL . class ;
rank: 734
score: 98.73551025390626
patch: return n . get CaMeL Length ( ) ;
rank: 734
score: 98.39948187934027
patch: return Node CaMeL Util . ; } ;
rank: 734
score: 98.29744466145833
patch: return Symbol . KILL ;
rank: 734
score: 98.10697719029018
patch: for ( ; ; ) {
rank: 734
score: 98.09971110026042
patch: super . return null ;
rank: 734
score: 97.79081217447917
patch: return . KILL KILL ;
rank: 735
score: 99.08053385416666
patch: return Node CaMeL Util . is CaMeL Lhs ( n , $NUMBER$ ) ;
rank: 735
score: 98.77878824869792
patch: return Control CaMeL Flow CaMeL Graph . KILL . EMPTY ;
rank: 735
score: 98.73235529119319
patch: return Control CaMeL Flow CaMeL Graph . KILL KILL ;
rank: 735
score: 98.233056640625
patch: return 0 ; ;
rank: 735
score: 98.09879847935268
patch: return return Integer . EMPTY ;
rank: 735
score: 97.78894653320313
patch: return - $NUMBER$ ;
rank: 736
score: 98.92305131392045
patch: return Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 736
score: 98.77652994791667
patch: return n . get CaMeL Cfg ( ) . KILL ;
rank: 736
score: 98.39392768012152
patch: return Node CaMeL Util . KILL . ;
rank: 736
score: 98.29642159598214
patch: return KILL . get ( ;
rank: 736
score: 98.2327880859375
patch: return null ; return false ; }
rank: 736
score: 98.10469563802083
patch: return Boolean . ERROR ;
rank: 736
score: 98.09720284598214
patch: if ; / * * /
rank: 736
score: 97.78831990559895
patch: return KILL ; ; }
rank: 737
score: 98.91959635416667
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill -- ;
rank: 737
score: 98.39128282335069
patch: return get CaMeL Value ( ) ; }
rank: 737
score: 98.29474748883929
patch: if ( node == null ;
rank: 737
score: 98.10407366071429
patch: if ( variable != null )
rank: 737
score: 97.78810628255208
patch: return KILL . this ;
rank: 738
score: 98.77213541666667
patch: return Control CaMeL Flow CaMeL Graph . KILL + $STRING$ ;
rank: 738
score: 98.724853515625
patch: return Control CaMeL Flow CaMeL Graph . KILL
rank: 738
score: 98.29385375976562
patch: return value ;
rank: 738
score: 98.22982788085938
patch: return false ; } else { ;
rank: 738
score: 98.10294015066964
patch: return n ; } else {
rank: 738
score: 98.09486607142857
patch: if ( ; return KILL ;
rank: 738
score: 97.78695678710938
patch: return ; . return ;
rank: 739
score: 99.07655436197916
patch: return Node CaMeL Util . is CaMeL Lhs ( n , value ) ;
rank: 739
score: 98.7212801846591
patch: return Node CaMeL Util . KILL $NUMBER$ * null ;
rank: 739
score: 98.22962951660156
patch: logger . arraycopy ( $STRING$ ) ;
rank: 739
score: 97.7845458984375
patch: return * return KILL ;
rank: 740
score: 99.07628580729167
patch: return Node CaMeL Util . is CaMeL Lhs ( node , variable ) ;
rank: 740
score: 98.76797485351562
patch: match ( n . get CaMeL String ( ) ) ;
rank: 740
score: 98.7168856534091
patch: return n . get CaMeL Node ( n ) ;
rank: 740
score: 98.2287368774414
patch: return null ; return true ; }
rank: 740
score: 98.09784807477679
patch: is CaMeL Lhs ( variable )
rank: 740
score: 98.09134521484376
patch: throw return null ;
rank: 740
score: 97.78273518880208
patch: return ) . KILL ;
rank: 741
score: 99.07420247395834
patch: return Node CaMeL Util . is CaMeL Lhs ( n , node ) ;
rank: 741
score: 98.76760864257812
patch: return $STRING$ + Control CaMeL Flow CaMeL Graph . KILL ;
rank: 741
score: 98.22589983258929
patch: try { return false ; }
rank: 741
score: 98.09703717912946
patch: return throw ( null ) ;
rank: 741
score: 97.77932739257812
patch: return ; . if ;
rank: 742
score: 99.07410606971153
patch: return Node CaMeL Util . is CaMeL Lhs ( type ) ;
rank: 742
score: 98.90224202473958
patch: return n . get CaMeL Last CaMeL Child ( ) ;
rank: 742
score: 98.76715642755681
patch: return Node CaMeL Util . KILL ; } else {
rank: 742
score: 98.38238525390625
patch: return n . get CaMeL Parent ( ;
rank: 742
score: 98.22551618303571
patch: finally { return $STRING$ ; }
rank: 742
score: 98.09120396205357
patch: return clone ( n ) ;
rank: 742
score: 98.08484758649554
patch: if ( ; / * /
rank: 742
score: 97.77590942382812
patch: return this ; ;
rank: 743
score: 99.07329915364583
patch: return is CaMeL Lhs ( n . get CaMeL Parent ( ) ) ;
rank: 743
score: 98.8973388671875
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill = )
rank: 743
score: 98.09092494419643
patch: return Runtime . KILL ; }
rank: 743
score: 98.0811767578125
patch: if ; * * * /
rank: 743
score: 97.77337646484375
patch: return ; = KILL . ;
rank: 744
score: 98.75520463423295
patch: return Control CaMeL Flow CaMeL Graph . KILL . ;
rank: 744
score: 98.7066162109375
patch: return n . get CaMeL Line ( ) ;
rank: 744
score: 98.37953016493056
patch: return n . get CaMeL Var ( ;
rank: 744
score: 98.08610026041667
patch: return Driver . KILL ;
rank: 744
score: 98.0736592610677
patch: return null ; break ;
rank: 745
score: 99.06343587239583
patch: return Node CaMeL Util . is CaMeL Lhs ( n , name ) ;
rank: 745
score: 98.69987657335069
patch: return Control CaMeL Flow CaMeL Graph . READ
rank: 745
score: 98.22138214111328
patch: finally { return false ; } }
rank: 745
score: 98.08370535714286
patch: return null ; } / /
rank: 745
score: 98.07357788085938
patch: return . ;
rank: 745
score: 97.76648966471355
patch: return function . KILL ;
rank: 746
score: 98.86962890625
patch: return Control CaMeL Flow CaMeL Graph . READ . KILL ;
rank: 746
score: 98.69715576171875
patch: return Node CaMeL Util . KILL $NUMBER$ false ;
rank: 746
score: 98.3762435913086
patch: return boolean CaMeL Value = false ;
rank: 746
score: 98.22101702008929
patch: else { return KILL ; }
rank: 746
score: 98.07970174153645
patch: return throw new null ;
rank: 746
score: 98.0709228515625
patch: return ; , break * /
rank: 746
score: 97.76524861653645
patch: return KILL . NO ;
rank: 747
score: 99.04793607271634
patch: return Node CaMeL Util . is CaMeL Lhs ( $STRING$ ) ;
rank: 747
score: 98.86667887369792
patch: return variable + n . get CaMeL Parent ( ) ;
rank: 747
score: 98.37500678168402
patch: Node CaMeL Util . return null ; ;
rank: 747
score: 98.07725306919643
patch: return Node CaMeL Util . }
rank: 747
score: 98.07052176339286
patch: / * break * * /
rank: 747
score: 97.76425170898438
patch: return ) ;
rank: 748
score: 98.7314120205966
patch: return Control CaMeL Flow CaMeL Graph . KILL ] ;
rank: 748
score: 98.68858753551136
patch: switch ( n . get CaMeL String ( ) )
rank: 748
score: 98.21905517578125
patch: } return KILL . KILL ;
rank: 748
score: 98.07366071428571
patch: if ( ! false ) {
rank: 748
score: 98.0671895345052
patch: return return . KILL ;
rank: 748
score: 97.76290893554688
patch: return new ( KILL ;
rank: 749
score: 98.8652010830966
patch: return n . get CaMeL Cfg ( n ) ;
rank: 749
score: 98.68349609375
patch: return Node CaMeL Util . KILL ( ) ;
rank: 749
score: 98.37403869628906
patch: return boolean CaMeL Value = true ;
rank: 749
score: 98.06700642903645
patch: return return return null ;
rank: 749
score: 97.75938197544643
patch: return super . KILL . .
rank: 750
score: 98.7286709872159
patch: return ( Control CaMeL Flow CaMeL Graph . KILL ;
rank: 750
score: 98.25201416015625
patch: return node . KILL ( ;
rank: 750
score: 98.06727818080357
patch: return switch ( variable ) {
rank: 750
score: 98.06668090820312
patch: return ;
rank: 750
score: 97.75936453683036
patch: return KILL . KILL ; else
rank: 751
score: 98.84670188210227
patch: return n . get CaMeL Cfg ( variable ) ;
rank: 751
score: 98.37272135416667
patch: return Node CaMeL Util . KILL $NUMBER$ ;
rank: 751
score: 98.21471405029297
patch: return false ; return $STRING$ ; }
rank: 751
score: 98.06656319754464
patch: System . out . println ;
rank: 751
score: 97.75679524739583
patch: return Integer . . ;
rank: 752
score: 99.02315579927884
patch: return Node CaMeL Util . is CaMeL Lhs ( parent ) ;
rank: 752
score: 98.69975142045455
patch: expr = n . get CaMeL String ( ) ;
rank: 752
score: 98.6707275390625
patch: return Node CaMeL Util . KILL * null ;
rank: 752
score: 98.24820963541667
patch: return KILL == KILL ;
rank: 752
score: 98.21409388950893
patch: return KILL KILL . 0 ;
rank: 752
score: 98.06399972098214
patch: break * * * * /
rank: 752
score: 98.05996268136161
patch: return switch ( variable ) ;
rank: 752
score: 97.75595092773438
patch: return ( return ; .
rank: 753
score: 98.67035522460938
patch: return n . get CaMeL Code ( ) ;
rank: 753
score: 98.21327209472656
patch: if new ) { return KILL ;
rank: 753
score: 98.06375558035714
patch: throw new Internal CaMeL Error ;
rank: 753
score: 98.05512346540179
patch: return KILL . READ ; }
rank: 753
score: 97.75571114676339
patch: return this . KILL ; }
rank: 754
score: 99.01564378004808
patch: return Node CaMeL Util . is CaMeL Lhs ( this ) ;
rank: 754
score: 98.6905517578125
patch: return Node CaMeL Util . equals ( n ) ;
rank: 754
score: 98.3496322631836
patch: return Float . Na CaMeL N ;
rank: 754
score: 98.24632771809895
patch: this . return this ;
rank: 754
score: 97.7544657389323
patch: return KILL . ; ;
rank: 755
score: 99.01046987680289
patch: return Node CaMeL Util . is CaMeL Lhs ( id ) ;
rank: 755
score: 98.83134321732955
patch: throw Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 755
score: 98.69041137695312
patch: return Node CaMeL Util . KILL ; break ;
rank: 755
score: 98.66243286132813
patch: throw n . get CaMeL String ( ) ;
rank: 755
score: 98.34697129991319
patch: return Node CaMeL Util . decode ( ;
rank: 755
score: 98.06300571986607
patch: / * * return ; }
rank: 755
score: 98.0498046875
patch: return Integer . EMPTY ; }
rank: 755
score: 97.75296020507812
patch: return - KILL ; }
rank: 756
score: 99.0079815204327
patch: return Node CaMeL Util . is CaMeL Lhs ( null ) ;
rank: 756
score: 98.82933349609375
patch: return Node CaMeL Util . READ . KILL ;
rank: 756
score: 98.2398681640625
patch: if ( ; break ; }
rank: 756
score: 98.21133422851562
patch: return Boolean . KILL ; ; }
rank: 756
score: 98.06194196428571
patch: / * return null ; }
rank: 756
score: 98.04686889648437
patch: return true ; }
rank: 756
score: 97.75274658203125
patch: return list . KILL ;
rank: 757
score: 98.68486993963069
patch: result = Node CaMeL Util . MAYBE _ LIVE ;
rank: 757
score: 98.65860595703126
patch: ++ n . get CaMeL String ( ) ;
rank: 757
score: 98.23760986328125
patch: * / return null ;
rank: 757
score: 98.20924595424107
patch: return KILL KILL KILL KILL ;
rank: 757
score: 98.06172398158482
patch: return KILL ; } else ;
rank: 757
score: 98.04656982421875
patch: return Boolean . NOT ) ;
rank: 757
score: 97.75174560546876
patch: return null ; .
rank: 758
score: 98.99784342447917
patch: return Control CaMeL Flow CaMeL Graph . KILL - 1 ;
rank: 758
score: 98.67894398082386
patch: expr = Control CaMeL Flow CaMeL Graph . KILL ;
rank: 758
score: 98.22750854492188
patch: return compiler . KILL ;
rank: 758
score: 98.05766950334821
patch: return KILL ; } return ;
rank: 758
score: 98.04351806640625
patch: return throw null ; } }
rank: 758
score: 97.75105285644531
patch: throw KILL ;
rank: 759
score: 98.99332369290866
patch: return Node CaMeL Util . is CaMeL Lhs ( value ) ;
rank: 759
score: 98.65503607855902
patch: return is CaMeL Name ( n ) ;
rank: 759
score: 98.33958604600694
patch: return n ; } else { return ;
rank: 759
score: 98.22600446428571
patch: return KILL . make ( ;
rank: 759
score: 98.20520891462054
patch: return 1 ; return KILL ;
rank: 759
score: 98.05746023995536
patch: this . return KILL ; }
rank: 759
score: 97.75047607421875
patch: return new false ;
rank: 760
score: 98.99180094401042
patch: return Control CaMeL Flow CaMeL Graph . READ : null ;
rank: 760
score: 98.6662353515625
patch: return Node CaMeL Util . KILL ; } else
rank: 760
score: 98.6541259765625
patch: += n . get CaMeL String ( ) ;
rank: 760
score: 98.33723449707031
patch: return node ; } return null ;
rank: 760
score: 98.22371128627232
patch: expr = KILL . KILL ;
rank: 760
score: 98.05584716796875
patch: return return null ; } else
rank: 760
score: 98.0272725423177
patch: return Long . EMPTY ;
rank: 760
score: 97.74676513671875
patch: return super . return ;
rank: 761
score: 98.22339477539063
patch: return this ; }
rank: 761
score: 98.2032241821289
patch: finally { return KILL ; } }
rank: 761
score: 98.05494035993304
patch: * * * * * /
rank: 761
score: 97.74654715401786
patch: return ; . . KILL .
rank: 762
score: 98.98792442908653
patch: = Node CaMeL Util . is CaMeL Lhs ( variable ) ;
rank: 762
score: 98.64830932617187
patch: return n . get CaMeL Key ( ) ;
rank: 762
score: 98.20227813720703
patch: return ( ( Node CaMeL Util ;
rank: 762
score: 98.05106026785714
patch: { return null ; } }
rank: 762
score: 98.0237325032552
patch: return new null ; }
rank: 762
score: 97.74413045247395
patch: return / * $STRING$ ;
rank: 763
score: 98.64503173828125
patch: ++ n . get CaMeL Parent ( ) ;
rank: 763
score: 98.32746039496527
patch: return this . KILL . get ( ;
rank: 763
score: 98.21824428013393
patch: return - 1 . $NUMBER$ ;
rank: 763
score: 97.74362182617188
patch: return KILL . KILL .
rank: 764
score: 98.98075045072116
patch: return Node CaMeL Util . is CaMeL Lhs ( false ) ;
rank: 764
score: 98.78673206676136
patch: return return Control CaMeL Flow CaMeL Graph . READ ;
rank: 764
score: 98.32472059461806
patch: switch ; case Node CaMeL Util . ;
rank: 764
score: 98.21771240234375
patch: return node ;
rank: 764
score: 98.19725690569196
patch: return Boolean . KILL ; }
rank: 764
score: 98.01495361328125
patch: return Boolean . STRING ;
rank: 764
score: 97.7418721516927
patch: return / + ; .
rank: 765
score: 98.97705078125
patch: return Node CaMeL Util . is CaMeL Lhs ( key ) ;
rank: 765
score: 98.63809814453126
patch: return Node CaMeL Util . KILL * false ;
rank: 765
score: 98.63796164772727
patch: expr = n . get CaMeL Parent ( ) ;
rank: 765
score: 98.21580287388393
patch: * / return null ; }
rank: 765
score: 98.19646344866071
patch: return ! KILL . KILL ;
rank: 765
score: 98.01486206054688
patch: return Boolean . UNKNOWN ;
rank: 765
score: 97.7384765625
patch: if return $STRING$ ;
rank: 766
score: 98.7785977450284
patch: if ( n . get CaMeL Parent ( ) !=
rank: 766
score: 98.21449788411458
patch: return Type . KILL ;
rank: 766
score: 98.19584437779018
patch: return false . KILL KILL ;
rank: 766
score: 98.04617309570312
patch: return return this ;
rank: 766
score: 97.73827107747395
patch: return ; . ; ;
rank: 767
score: 98.97515869140625
patch: return Node CaMeL Util . is CaMeL Lhs ( n ;
rank: 767
score: 98.63627485795455
patch: node = n . get CaMeL Node ( ) ;
rank: 767
score: 98.632421875
patch: return n . get CaMeL Id ( ) ;
rank: 767
score: 98.21305629185268
patch: return - $NUMBER$ . 0 ;
rank: 767
score: 98.04307338169643
patch: / * / break ; }
rank: 767
score: 97.99940999348958
patch: return Boolean . LINE ;
rank: 767
score: 97.7372538248698
patch: return KILL . out ;
rank: 768
score: 98.95918782552083
patch: return Control CaMeL Flow CaMeL Graph . KILL : KILL ;
rank: 768
score: 98.771484375
patch: return n . get CaMeL Parent ( ) ) ;
rank: 768
score: 98.31549072265625
patch: if ( Node CaMeL Util . ; ;
rank: 768
score: 98.19147600446429
patch: else { return $STRING$ ; }
rank: 768
score: 98.04246012369792
patch: return KILL ; } else
rank: 768
score: 97.99416097005208
patch: return System . false ;
rank: 768
score: 97.73708089192708
patch: return ; . KILL KILL
rank: 769
score: 98.76675415039062
patch: return Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;
rank: 769
score: 98.63079223632812
patch: return Control CaMeL Flow CaMeL Graph . EMPTY ;
rank: 769
score: 98.20844377790179
patch: this . return - KILL ;
rank: 769
score: 97.99375406901042
patch: return Runtime . READ ;
rank: 769
score: 97.7358907063802
patch: return Integer . ; .
rank: 770
score: 98.62905883789062
patch: return n . get CaMeL In ( ) ;
rank: 770
score: 98.62281494140625
patch: return Illegal CaMeL Argument CaMeL Exception . KILL ;
rank: 770
score: 98.30545043945312
patch: Node CaMeL Util . return this ;
rank: 770
score: 98.18688092912946
patch: return this ; return null ;
rank: 770
score: 98.03844342912946
patch: } else { / * /
rank: 770
score: 97.98587036132812
patch: ret . return null ;
rank: 770
score: 97.73079223632813
patch: return - ] ;
rank: 771
score: 98.62180786132812
patch: = n . get CaMeL First ( ) ;
rank: 771
score: 98.19605509440105
patch: return n . KILL ;
rank: 771
score: 98.18136160714286
patch: return parent . return KILL ;
rank: 771
score: 98.03712972005208
patch: { return KILL ; }
rank: 771
score: 97.98471069335938
patch: return Boolean . code ;
rank: 771
score: 97.72666422526042
patch: return ( true ; .
rank: 772
score: 98.93385823567708
patch: return variable + n . get CaMeL String ( ) ;
rank: 772
score: 98.61858575994319
patch: head = n . get CaMeL Parent ( ) ;
rank: 772
score: 98.1789042154948
patch: return Boolean . 0 ;
rank: 772
score: 98.03627522786458
patch: if ( ! return ;
rank: 772
score: 97.98439534505208
patch: return this . true ;
rank: 772
score: 97.72635904947917
patch: return Double . . ;
rank: 773
score: 98.93287150065105
patch: return Control CaMeL Flow CaMeL Graph . READ : KILL ;
rank: 773
score: 98.751708984375
patch: / * / return Node CaMeL Util . KILL ;
rank: 773
score: 98.61799926757813
patch: return Node CaMeL Util . KILL + n ;
rank: 774
score: 98.74956720525569
patch: else { return Node CaMeL Util . KILL ; }
rank: 774
score: 98.29971313476562
patch: if ( ; else if ( ;
rank: 774
score: 98.19439697265625
patch: if ( Position . KILL )
rank: 774
score: 98.1746826171875
patch: if new ) return KILL ;
rank: 774
score: 98.03241838727679
patch: { return null ; } else
rank: 774
score: 97.7252197265625
patch: return ( Boolean ; ;
rank: 775
score: 98.74934525923295
patch: return Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;
rank: 775
score: 98.61624145507812
patch: return Node CaMeL Util . KILL != null ;
rank: 775
score: 98.60692749023437
patch: return Node CaMeL Util . KILL : null ;
rank: 775
score: 98.29741753472223
patch: return this ; } else return null ;
rank: 775
score: 98.18963623046875
patch: if ( node != null ;
rank: 775
score: 98.02797154017857
patch: / * return KILL ; }
rank: 776
score: 98.74854125976563
patch: else { return Node CaMeL Util . KILL ;
rank: 776
score: 98.5984619140625
patch: return Control CaMeL Flow CaMeL Graph . get CaMeL
rank: 776
score: 98.287353515625
patch: return null return null ;
rank: 776
score: 98.18927873883929
patch: return $STRING$ . equals ( ;
rank: 776
score: 98.17181396484375
patch: return return KILL . null ;
rank: 776
score: 98.02536010742188
patch: break * * /
rank: 776
score: 97.96022542317708
patch: return Strings . KILL ;
rank: 776
score: 97.72458902994792
patch: return null ; KILL .
rank: 777
score: 98.6141357421875
patch: return Node CaMeL Util . KILL > null ;
rank: 777
score: 98.59246826171875
patch: return Node CaMeL Util . KILL + variable ;
rank: 777
score: 98.18687947591145
patch: * / return KILL ;
rank: 777
score: 97.95433553059895
patch: return System . true ;
rank: 777
score: 97.72146606445312
patch: return $STRING$ ; return ;
rank: 778
score: 98.61043701171874
patch: return $STRING$ . get CaMeL String ( ) ;
rank: 778
score: 98.58927001953126
patch: return Node CaMeL Util . KILL ; * /
rank: 778
score: 98.28285725911458
patch: return n . get ;
rank: 778
score: 98.18526785714286
patch: return KILL . KILL ) ;
rank: 778
score: 98.16860961914062
patch: return options . KILL ;
rank: 778
score: 98.02101353236607
patch: if ( ; * * /
rank: 778
score: 97.72011311848958
patch: return false ; KILL ;
rank: 779
score: 98.58513793945312
patch: return Node CaMeL Util . KILL + $STRING$ ;
rank: 779
score: 98.28143310546875
patch: return Node CaMeL Util . get ;
rank: 779
score: 97.95045979817708
patch: return Float . EMPTY ;
rank: 779
score: 97.71913655598958
patch: return return $STRING$ ; }
rank: 780
score: 98.91127707741477
patch: return Control CaMeL Flow CaMeL Graph . READ : ;
rank: 780
score: 98.2808837890625
patch: return null ; } return node ;
rank: 780
score: 98.16762288411458
patch: result . return KILL ;
rank: 780
score: 97.94699096679688
patch: throw ( null ) ;
rank: 780
score: 97.7190653483073
patch: return false ; } ;
rank: 781
score: 98.01536342075893
patch: if ( return return ) ;
rank: 781
score: 97.94315592447917
patch: return this . variable ;
rank: 781
score: 97.7188720703125
patch: return ; + ; .
rank: 782
score: 98.58307647705078
patch: return n . get ( ) ;
rank: 782
score: 98.56023491753473
patch: return n . get CaMeL Parent ( )
rank: 782
score: 98.16598510742188
patch: return ( false ) ;
rank: 782
score: 98.01313127790179
patch: super . return null ; }
rank: 782
score: 97.9407958984375
patch: else { return null ;
rank: 783
score: 98.57110595703125
patch: return Node CaMeL Util . KILL 1 ;
rank: 783
score: 98.17715454101562
patch: return Scope . KILL ;
rank: 783
score: 98.01140485491071
patch: / * * / if ;
rank: 783
score: 97.7172119140625
patch: return * KILL ;
rank: 784
score: 98.55167643229167
patch: return Node CaMeL Util . KILL false ;
rank: 784
score: 98.54691569010417
patch: return is CaMeL Name ( variable ) ;
rank: 784
score: 98.15664236886161
patch: break KILL . KILL ; }
rank: 784
score: 98.009033203125
patch: * * * * /
rank: 784
score: 97.7136739095052
patch: return / * KILL ;
rank: 785
score: 98.679541015625
patch: return Control CaMeL Flow CaMeL Graph . READ _
rank: 785
score: 98.54652709960938
patch: return Control CaMeL Flow CaMeL Graph != null ;
rank: 785
score: 98.52077907986111
patch: return is CaMeL String ( n ) ;
rank: 785
score: 98.26582336425781
patch: return declarations [ 0 ] . ;
rank: 785
score: 98.16827392578125
patch: if ( scope != null )
rank: 785
score: 98.00648716517857
patch: return null ; break ; }
rank: 785
score: 97.70986938476562
patch: return $STRING$ .
rank: 786
score: 98.89473470052083
patch: return Control CaMeL Flow CaMeL Graph . KILL : n ;
rank: 786
score: 98.26416015625
patch: return n . get CaMeL Value ;
rank: 786
score: 98.16798618861607
patch: throw new Throwable ( ) ;
rank: 786
score: 98.15574428013393
patch: logger . arraycopy ( ) ;
rank: 786
score: 98.0031026204427
patch: if ; / * /
rank: 786
score: 97.93203735351562
patch: return new throw null ;
rank: 786
score: 97.709326171875
patch: return $STRING$ ; .
rank: 787
score: 98.88998413085938
patch: return Control CaMeL Flow CaMeL Graph . READ : READ ;
rank: 787
score: 98.54279242621527
patch: return Node CaMeL Util . KILL true ;
rank: 787
score: 98.49926079644098
patch: return Control CaMeL Flow CaMeL Graph . MAYBE
rank: 787
score: 98.16477748325893
patch: return KILL . trim ( ;
rank: 787
score: 97.99972534179688
patch: / * * / /
rank: 787
score: 97.93056233723958
patch: return Boolean . err ;
rank: 787
score: 97.70604451497395
patch: return ( String ; ;
rank: 788
score: 98.49860975477431
patch: return Node CaMeL Util . KILL == null
rank: 788
score: 97.9994140625
patch: * * * /
rank: 788
score: 97.92969767252605
patch: if ( variable ) {
rank: 789
score: 98.88714044744319
patch: return Control CaMeL Flow CaMeL Graph . KILL : ;
rank: 789
score: 98.66952514648438
patch: return Node CaMeL Util . READ . READ ;
rank: 789
score: 98.5396728515625
patch: return Node CaMeL Util . is CaMeL Lhs (
rank: 789
score: 98.25084686279297
patch: return n . get CaMeL Node ;
rank: 789
score: 98.16210065569196
patch: return KILL . & KILL ;
rank: 789
score: 98.14188929966518
patch: return ) . KILL KILL ;
rank: 789
score: 97.98716227213542
patch: if ( ; break ;
rank: 789
score: 97.92893473307292
patch: return Integer . class ;
rank: 789
score: 97.70570882161458
patch: return 0 . ; .
rank: 790
score: 98.24853515625
patch: return super . KILL ( n ;
rank: 790
score: 98.16209193638393
patch: if ( value == null )
rank: 790
score: 98.134765625
patch: if this . return KILL ;
rank: 790
score: 97.9853515625
patch: if . return null ;
rank: 790
score: 97.92850341796876
patch: throw new null ;
rank: 790
score: 97.70562133789062
patch: return return 0 ;
rank: 791
score: 98.66720581054688
patch: if ( n . get CaMeL Parent ( )
rank: 791
score: 98.47830539279514
patch: return names . get ( variable ) ;
rank: 791
score: 98.24581146240234
patch: Node CaMeL Util . return ( ;
rank: 791
score: 98.15971156529018
patch: return KILL . matches ( ;
rank: 791
score: 98.12901088169643
patch: return node . KILL KILL ;
rank: 791
score: 97.98361206054688
patch: if ; * * /
rank: 791
score: 97.9272969563802
patch: return consume ( ) ;
rank: 791
score: 97.7045186360677
patch: return true ; return ;
rank: 792
score: 98.66010199652777
patch: is CaMeL Lhs ( n , variable )
rank: 792
score: 98.2418212890625
patch: if ( ; } return null ;
rank: 792
score: 98.12799072265625
patch: return exp . KILL ;
rank: 792
score: 97.70382690429688
patch: if ; { if ;
rank: 793
score: 98.658349609375
patch: = Control CaMeL Flow CaMeL Graph . READ ;
rank: 793
score: 98.47598605685764
patch: return list . get ( n ) ;
rank: 793
score: 98.15238444010417
patch: return KILL && KILL ;
rank: 793
score: 98.12195841471355
patch: return type . KILL ;
rank: 793
score: 97.98096720377605
patch: break * * * /
rank: 793
score: 97.7029520670573
patch: return KILL . . .
rank: 794
score: 98.85457763671874
patch: is CaMeL Variable CaMeL Read CaMeL Before CaMeL Kill
rank: 794
score: 98.47252061631944
patch: return get CaMeL Node ( n ) ;
rank: 794
score: 98.22957763671874
patch: return this . ;
rank: 794
score: 98.12084089006696
patch: return ( ) . KILL ;
rank: 794
score: 97.97808837890625
patch: / * break * /
rank: 794
score: 97.9250996907552
patch: return T . READ ;
rank: 794
score: 97.70205078125
patch: return KILL ; KILL
rank: 795
score: 98.65188598632812
patch: return n . is CaMeL Lhs ( ) ;
rank: 795
score: 98.22468566894531
patch: Node CaMeL Util . return KILL ;
rank: 795
score: 98.14949544270833
patch: return - 1 ; ;
rank: 795
score: 98.1206766764323
patch: return ( true ) ;
rank: 795
score: 97.976318359375
patch: if ( ; * /
rank: 795
score: 97.69844563802083
patch: return KILL ; . .
rank: 796
score: 98.850732421875
patch: is CaMeL Lhs ( n , variable ) ;
rank: 796
score: 98.1494649251302
patch: this . return false ;
rank: 796
score: 98.11541748046875
patch: else { return KILL ;
rank: 796
score: 97.9746602376302
patch: / * ; * /
rank: 796
score: 97.91650390625
patch: return State . KILL ;
rank: 796
score: 97.69488525390625
patch: return new $STRING$ ;
rank: 797
score: 98.6460693359375
patch: return n . get CaMeL Depth ( ) ;
rank: 797
score: 98.44212341308594
patch: return Node CaMeL Util . n ;
rank: 797
score: 98.42120361328125
patch: return Node CaMeL Util . KILL ] ;
rank: 797
score: 98.14939662388393
patch: return KILL . create ( ;
rank: 797
score: 98.11118861607143
patch: return 0 . KILL ; }
rank: 797
score: 97.96738688151042
patch: return return null ; ;
rank: 797
score: 97.91363525390625
patch: return Boolean . ALL ;
rank: 797
score: 97.69447835286458
patch: return ; + KILL ;
rank: 798
score: 98.8404873934659
patch: p = n . get CaMeL Parent ( ) ;
rank: 798
score: 98.63880615234375
patch: return Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 798
score: 98.41469319661458
patch: if ( false ) {
rank: 798
score: 98.2185287475586
patch: return n ; } else { ;
rank: 798
score: 98.14845784505208
patch: return Position . KILL ;
rank: 798
score: 97.96705118815105
patch: return return ( Boolean ;
rank: 798
score: 97.6940205891927
patch: if ; return ; .
rank: 799
score: 98.8400545987216
patch: pos = n . get CaMeL Parent ( ) ;
rank: 799
score: 98.63621215820312
patch: return Node CaMeL Util . KILL ; } }
rank: 799
score: 98.41434733072917
patch: System . out . println ( ) ;
rank: 799
score: 98.14338030133929
patch: return children [ 0 ] ;
rank: 799
score: 97.96480102539063
patch: / * * ;
rank: 799
score: 97.69301350911458
patch: return KILL . IN ;
rank: 800
score: 98.83425071022727
patch: name = n . get CaMeL String ( ) ;
rank: 800
score: 98.6349365234375
patch: state . return Node CaMeL Util . KILL ;
rank: 800
score: 98.20150320870536
patch: Node CaMeL Util . return ;
rank: 800
score: 97.90364583333333
patch: return this . false ;
rank: 801
score: 98.62533569335938
patch: state = Node CaMeL Util . KILL ; }
rank: 801
score: 98.14210728236607
patch: return - 1 ; } else
rank: 801
score: 98.101318359375
patch: return props . KILL ;
rank: 801
score: 97.9549560546875
patch: if ; * /
rank: 801
score: 97.9021484375
patch: throw null ; }
rank: 801
score: 97.6914571126302
patch: return return KILL ; ;
rank: 802
score: 98.62285698784723
patch: return Node CaMeL Util . READ ) ;
rank: 802
score: 98.39131164550781
patch: return n . trim ( ) ;
rank: 802
score: 97.90182495117188
patch: return Boolean . SET ;
rank: 802
score: 97.69008382161458
patch: return KILL ; ; .
rank: 803
score: 98.62139214409723
patch: is CaMeL Lhs ( n , n )
rank: 803
score: 98.36358642578125
patch: if ( true ) {
rank: 803
score: 98.09769112723214
patch: return Boolean . EMPTY ; ;
rank: 803
score: 97.9498291015625
patch: this . break ;
rank: 803
score: 97.9007568359375
patch: return true ; } }
rank: 803
score: 97.68870035807292
patch: return null ; return ;
rank: 804
score: 98.36776733398438
patch: return Node CaMeL Util . this ;
rank: 804
score: 98.18300083705357
patch: return null return null ; }
rank: 804
score: 98.14126150948661
patch: return KILL . match ( ;
rank: 804
score: 98.09477887834821
patch: return type . KILL KILL ;
rank: 804
score: 97.90027872721355
patch: return false ; } }
rank: 804
score: 97.6875
patch: return Double . KILL .
rank: 805
score: 97.94552612304688
patch: / * / break ;
rank: 805
score: 97.89174397786458
patch: return Boolean . EQ ;
rank: 805
score: 97.68552652994792
patch: return KILL . ; }
rank: 806
score: 98.358154296875
patch: return null ; } } break ;
rank: 806
score: 98.3306376139323
patch: throw null : $STRING$ ;
rank: 806
score: 98.08544921875
patch: return get CaMeL Type ( ;
rank: 806
score: 97.9412841796875
patch: / * ? * /
rank: 806
score: 97.89129638671875
patch: return Boolean != null ;
rank: 806
score: 97.68471272786458
patch: return ; = . ;
rank: 807
score: 97.94073486328125
patch: return ; ;
rank: 807
score: 97.88838704427083
patch: return Boolean . READ ;
rank: 807
score: 97.68470255533855
patch: return ; = return ;
rank: 808
score: 98.33543395996094
patch: return null ; } else { else
rank: 808
score: 98.3170878092448
patch: return MAYBE _ LIVE ;
rank: 808
score: 98.13173130580357
patch: return value . KILL ( ;
rank: 808
score: 98.08201090494792
patch: finally { return KILL ;
rank: 808
score: 97.93247477213542
patch: return KILL ; } }
rank: 808
score: 97.88782348632813
patch: return ! null ;
rank: 808
score: 97.68345947265625
patch: return / KILL ;
rank: 809
score: 98.13043212890625
patch: return child CaMeL Value ;
rank: 809
score: 97.93142700195312
patch: this . return ; ;
rank: 809
score: 97.88345336914062
patch: return FALSE ;
rank: 809
score: 97.68164672851563
patch: return return $NUMBER$ ;
rank: 810
score: 98.32943725585938
patch: return is CaMeL Lhs ( ) ;
rank: 810
score: 98.30541229248047
patch: return Control CaMeL Flow CaMeL Graph .
rank: 810
score: 97.88136800130208
patch: return this . null ;
rank: 810
score: 97.68152872721355
patch: return new ? ) ;
rank: 811
score: 98.31974792480469
patch: return n . next ( ) ;
rank: 811
score: 97.92550659179688
patch: continue * * /
rank: 811
score: 97.88104248046875
patch: return clock . KILL ;
rank: 811
score: 97.67967732747395
patch: return ; = ; _
rank: 812
score: 98.80101429332386
patch: return Control CaMeL Flow CaMeL Graph . READ 1 ;
rank: 812
score: 98.52543809678819
patch: else return Node CaMeL Util . KILL ;
rank: 812
score: 98.31733703613281
patch: return Node CaMeL Util != null ;
rank: 812
score: 98.30023956298828
patch: return n . MAYBE _ LIVE ;
rank: 812
score: 98.07599487304688
patch: else return KILL ;
rank: 812
score: 97.92232259114583
patch: return return false ; }
rank: 812
score: 97.87691243489583
patch: return Context . KILL ;
rank: 812
score: 97.67861938476562
patch: return scope . KILL Variable
rank: 813
score: 98.07456461588542
patch: return mode . KILL ;
rank: 813
score: 97.9163818359375
patch: } return null ;
rank: 813
score: 97.87443033854167
patch: return Boolean . WARNING ;
rank: 813
score: 97.6754862467448
patch: return $STRING$ ; . ;
rank: 814
score: 98.07278878348214
patch: return get CaMeL State ( ;
rank: 814
score: 97.91258748372395
patch: return ; } if ;
rank: 814
score: 97.67024739583333
patch: return $STRING$ ; KILL .
rank: 815
score: 98.495849609375
patch: return Illegal CaMeL Argument CaMeL Exception ;
rank: 815
score: 98.07020060221355
patch: if ( return ) .
rank: 815
score: 97.907470703125
patch: } else { if ;
rank: 815
score: 97.86844889322917
patch: return Boolean . RIGHT ;
rank: 815
score: 97.66991170247395
patch: return super . . .
rank: 816
score: 98.79767400568181
patch: type = n . get CaMeL String ( ) ;
rank: 816
score: 98.30316162109375
patch: return is CaMeL Empty ( ) ;
rank: 816
score: 98.26414489746094
patch: return Node CaMeL Util . EMPTY ;
rank: 816
score: 97.8682861328125
patch: return code . READ ;
rank: 816
score: 97.66868082682292
patch: return new ? null ;
rank: 817
score: 98.79523259943181
patch: type = n . get CaMeL Parent ( ) ;
rank: 817
score: 98.48927815755208
patch: { return Node CaMeL Util . KILL ;
rank: 817
score: 98.3004638671875
patch: return n ; }
rank: 817
score: 98.11048235212054
patch: return n . get ; }
rank: 817
score: 98.0897216796875
patch: return double CaMeL Value ;
rank: 817
score: 97.89814453125
patch: return return 1 ;
rank: 817
score: 97.86766560872395
patch: return Integer . TYPE ;
rank: 817
score: 97.66722412109375
patch: return new ) .
rank: 818
score: 98.47542317708333
patch: state = Node CaMeL Util . READ ;
rank: 818
score: 98.10650634765625
patch: return super . ;
rank: 818
score: 98.06427001953125
patch: if new ( return ) ;
rank: 818
score: 97.86717732747395
patch: return code . true ;
rank: 819
score: 98.08463541666667
patch: return 1 . 0 ;
rank: 819
score: 98.06241861979167
patch: return KILL . KILL KILL
rank: 819
score: 97.86153157552083
patch: return Integer . true ;
rank: 819
score: 97.66102294921875
patch: return new true ;
rank: 820
score: 98.77735484730114
patch: return Control CaMeL Flow CaMeL Graph . KILL $NUMBER$ ;
rank: 820
score: 98.45602756076389
patch: expression = Node CaMeL Util . KILL ;
rank: 820
score: 98.09713309151786
patch: return declarations [ 0 ] ;
rank: 820
score: 98.084228515625
patch: * / return this ;
rank: 820
score: 97.89472045898438
patch: if ( return ;
rank: 820
score: 97.85955810546875
patch: if ( variable .
rank: 820
score: 97.6602783203125
patch: return ; . . /
rank: 821
score: 98.24306815011161
patch: return null ; } } else
rank: 821
score: 98.08071899414062
patch: return KILL . match ;
rank: 821
score: 98.0604248046875
patch: return ( return ; ?
rank: 821
score: 97.88932291666667
patch: return ; , return ;
rank: 821
score: 97.8564453125
patch: init ( n ) ;
rank: 821
score: 97.65878295898438
patch: return this ; } ;
rank: 822
score: 98.2224629720052
patch: return null . null ;
rank: 822
score: 98.078369140625
patch: return nodes . KILL ;
rank: 822
score: 97.88698323567708
patch: throw return null ; }
rank: 822
score: 97.84925333658855
patch: return Callback . KILL ;
rank: 822
score: 97.65721638997395
patch: return new ) ; }
rank: 823
score: 98.07797241210938
patch: expr . return null ;
rank: 823
score: 97.8843994140625
patch: / * * / ;
rank: 823
score: 97.84630330403645
patch: return null . READ ;
rank: 824
score: 98.24314880371094
patch: super . equals ( n ) ;
rank: 824
score: 98.08462960379464
patch: this . return this . ;
rank: 824
score: 98.07682291666667
patch: return KILL . equals ;
rank: 824
score: 98.0510965983073
patch: return 0 . null ;
rank: 824
score: 97.88437906901042
patch: / * * * ;
rank: 824
score: 97.84377034505208
patch: return null ; * /
rank: 825
score: 98.08110700334821
patch: do { return null ; }
rank: 825
score: 98.0752665201823
patch: * / return false ;
rank: 825
score: 97.87973022460938
patch: continue * * * /
rank: 825
score: 97.8407470703125
patch: return null ) ;
rank: 826
score: 98.23871612548828
patch: return Node CaMeL Util . get CaMeL
rank: 826
score: 98.07786342075893
patch: return Math . max ( ;
rank: 826
score: 98.04006958007812
patch: return Integer . NULL ;
rank: 827
score: 98.16945975167411
patch: return Node CaMeL Util . READ
rank: 827
score: 97.87679443359374
patch: return . . ;
rank: 827
score: 97.83243815104167
patch: return System . READ ;
rank: 827
score: 97.64767456054688
patch: return Boolean . ; _
rank: 828
score: 98.07478841145833
patch: return this return this ;
rank: 828
score: 98.0331319173177
patch: return Boolean . type ;
rank: 828
score: 97.87623087565105
patch: return ; } else {
rank: 828
score: 97.6433817545573
patch: return ( Integer ; ?
rank: 829
score: 98.32372283935547
patch: return Illegal CaMeL State CaMeL Exception ;
rank: 829
score: 98.22329711914062
patch: return Node CaMeL Util . FUNCTION ;
rank: 829
score: 98.0745849609375
patch: return variable . equals ( ;
rank: 829
score: 97.87286376953125
patch: return return ( return ;
rank: 829
score: 97.82775115966797
patch: return TRUE ;
rank: 830
score: 98.69222412109374
patch: return Control CaMeL Flow CaMeL Graph . is CaMeL
rank: 830
score: 98.06207275390625
patch: return KILL . false ;
rank: 830
score: 98.0270284016927
patch: return return KILL KILL ;
rank: 830
score: 97.87026977539062
patch: / * throw null ;
rank: 830
score: 97.81920369466145
patch: break ; } else {
rank: 830
score: 97.64206949869792
patch: return new ? KILL ;
rank: 831
score: 98.30693054199219
patch: return new String ( n ) ;
rank: 831
score: 98.2041015625
patch: return $STRING$ ; } else {
rank: 831
score: 97.86976928710938
patch: break return null ;
rank: 831
score: 97.64190673828125
patch: return super . KILL Variable
rank: 832
score: 98.06403459821429
patch: finally { return this ; }
rank: 832
score: 98.05047607421875
patch: if ( n . ;
rank: 832
score: 97.86478678385417
patch: return return true ; }
rank: 832
score: 97.63856201171875
patch: return ; . .
rank: 833
score: 98.04986572265625
patch: synchronized ( this ) {
rank: 833
score: 97.85608520507813
patch: } return KILL ;
rank: 833
score: 97.7964375813802
patch: throw Runtime CaMeL Exception ;
rank: 834
score: 98.04388427734375
patch: return KILL . get ;
rank: 834
score: 98.0155537923177
patch: return ! return KILL ;
rank: 834
score: 97.85562133789062
patch: / * * return ;
rank: 835
score: 98.65684814453125
patch: return Control CaMeL Flow CaMeL Graph . current ;
rank: 835
score: 98.17796979631696
patch: return new ( variable ) ;
rank: 835
score: 98.04182942708333
patch: return - - 1 ;
rank: 835
score: 98.01303100585938
patch: return ref . KILL ;
rank: 835
score: 97.8551025390625
patch: if ( ! null )
rank: 835
score: 97.7930196126302
patch: return this ; } }
rank: 836
score: 98.65667724609375
patch: return Control CaMeL Flow CaMeL Graph . KILL :
rank: 836
score: 98.11270577566964
patch: return Node CaMeL Util . KILL
rank: 836
score: 98.01195271809895
patch: return ( ) KILL ;
rank: 836
score: 97.8535868326823
patch: / * * ? /
rank: 836
score: 97.6308822631836
patch: return scope ;
rank: 837
score: 98.64996337890625
patch: return n . get CaMeL Long ( ) ;
rank: 837
score: 98.03704833984375
patch: return float CaMeL Value ;
rank: 837
score: 97.84912109375
patch: if return false ;
rank: 837
score: 97.79090372721355
patch: throw this . KILL ;
rank: 837
score: 97.63037109375
patch: return KILL ; } .
rank: 838
score: 98.63282606336806
patch: return variable . equals ( variable ) ;
rank: 838
score: 98.14832560221355
patch: throw null : n ;
rank: 838
score: 98.03613891601563
patch: return - false ;
rank: 838
score: 98.01039632161458
patch: return KILL . type ;
rank: 838
score: 97.84310913085938
patch: / * KILL * /
rank: 838
score: 97.62708536783855
patch: return new void ; .
rank: 839
score: 98.11689104352679
patch: if ( n . get CaMeL
rank: 839
score: 98.03597005208333
patch: return KILL : KILL ;
rank: 839
score: 98.02557373046875
patch: return Node CaMeL Util ;
rank: 839
score: 97.77083333333333
patch: return Factory . READ ;
rank: 839
score: 97.62460327148438
patch: return Math . ; _
rank: 840
score: 98.60755072699652
patch: result = Node CaMeL Util . READ ;
rank: 840
score: 98.08302525111607
patch: set CaMeL String ( ) ;
rank: 840
score: 98.03475952148438
patch: return false ; } else
rank: 840
score: 97.76509602864583
patch: return scope . READ ;
rank: 840
score: 97.62282307942708
patch: return new double ; .
rank: 841
score: 98.08142961774554
patch: return null . null ; }
rank: 841
score: 98.0772705078125
patch: return FUNCTION . KILL ;
rank: 841
score: 98.03338623046875
patch: return boolean CaMeL Value ;
rank: 841
score: 98.0076904296875
patch: return parent ; ;
rank: 841
score: 97.83922729492187
patch: / / * /
rank: 841
score: 97.7650858561198
patch: return Boolean . Runtime ;
rank: 841
score: 97.61194864908855
patch: return ( - 1 ;
rank: 842
score: 98.07139369419643
patch: return new ( n ) ;
rank: 842
score: 98.03231811523438
patch: for ( ; ; )
rank: 842
score: 98.00717163085938
patch: result . return null ;
rank: 842
score: 98.00712367466518
patch: return get CaMeL Var ( ;
rank: 842
score: 97.8351318359375
patch: if ; break ;
rank: 842
score: 97.762939453125
patch: return / / * /
rank: 843
score: 98.57736545138889
patch: return Node CaMeL Util . READ ; }
rank: 843
score: 98.06722005208333
patch: throw ( false ) ;
rank: 843
score: 98.03026326497395
patch: if ( node . ;
rank: 843
score: 98.00609588623047
patch: return type ;
rank: 843
score: 98.00557454427083
patch: return this . ; }
rank: 843
score: 97.83360799153645
patch: return ; , break ;
rank: 843
score: 97.76157633463542
patch: return this . n ;
rank: 844
score: 98.04220581054688
patch: return true ; } else
rank: 844
score: 97.8280741373698
patch: this . return ; }
rank: 844
score: 97.75670166015625
patch: return / * /
rank: 844
score: 97.60514526367187
patch: KILL return KILL ;
rank: 845
score: 98.06733049665179
patch: return parse ( n ) ;
rank: 845
score: 98.04025268554688
patch: return n ; } else
rank: 845
score: 98.02373504638672
patch: if ( ;
rank: 845
score: 98.00276402064732
patch: return this . return this ;
rank: 845
score: 97.82663981119792
patch: / * / * /
rank: 845
score: 97.60420735677083
patch: return KILL ; if ;
rank: 846
score: 98.52498372395833
patch: throw is CaMeL Lhs ( n ) ;
rank: 846
score: 98.03941853841145
patch: throw null : ) ;
rank: 846
score: 97.997802734375
patch: return null ; ; ;
rank: 846
score: 97.81376139322917
patch: if ( return return ;
rank: 846
score: 97.75360107421875
patch: throw null ; } }
rank: 846
score: 97.59947713216145
patch: return KILL . EMPTY .
rank: 847
score: 98.02313995361328
patch: return READ ;
rank: 847
score: 97.81251017252605
patch: this . break ; }
rank: 847
score: 97.75172119140625
patch: return throw true ;
rank: 848
score: 98.04229736328125
patch: ret = null ;
rank: 848
score: 98.01751708984375
patch: return n != null ;
rank: 848
score: 97.75098876953125
patch: else return null ;
rank: 848
score: 97.59458414713542
patch: return / ; = ;
rank: 849
score: 98.01662190755208
patch: throw ( true ) ;
rank: 849
score: 98.01514689127605
patch: return KILL . INSTANCEOF ;
rank: 849
score: 97.81033325195312
patch: return return ;
rank: 849
score: 97.74766235351562
patch: return KILL . }
rank: 849
score: 97.59193929036458
patch: / * return ; .
rank: 850
score: 98.0088623046875
patch: state = n ;
rank: 850
score: 97.99291120256696
patch: return Symbol . KILL . ;
rank: 850
score: 97.58889770507812
patch: return this ; return ;
rank: 851
score: 98.01393636067708
patch: return variable . KILL ;
rank: 851
score: 97.73743693033855
patch: is CaMeL Lhs ( )
rank: 851
score: 97.58854166666667
patch: return new KILL ; .
rank: 852
score: 98.00002034505208
patch: return n ; } }
rank: 852
score: 97.58750406901042
patch: return ; . . *
rank: 853
score: 98.01959228515625
patch: try { throw null ;
rank: 853
score: 98.0044657389323
patch: return this . value ;
rank: 853
score: 97.97039794921875
patch: return short CaMeL Value ;
rank: 853
score: 97.80196126302083
patch: / / * * /
rank: 853
score: 97.73372395833333
patch: if ( ( variable .
rank: 853
score: 97.57332763671874
patch: return ; = ;
rank: 854
score: 97.97039794921875
patch: if null return KILL ;
rank: 854
score: 97.95200602213542
patch: return n + null ;
rank: 854
score: 97.79400634765625
patch: throw return KILL ;
rank: 854
score: 97.7286865234375
patch: return throw false ;
rank: 854
score: 97.572509765625
patch: return new Double ; .
rank: 855
score: 98.01565115792411
patch: switch ( n . get CaMeL
rank: 855
score: 98.00418090820312
patch: return $STRING$ + node ;
rank: 855
score: 98.00309244791667
patch: return Node . KILL ;
rank: 855
score: 97.96337890625
patch: return n . ; }
rank: 855
score: 97.94913736979167
patch: return FUNCTION . READ ;
rank: 855
score: 97.79276529947917
patch: { if ; * /
rank: 855
score: 97.72725830078124
patch: return System . }
rank: 855
score: 97.57202758789063
patch: KILL = KILL ;
rank: 856
score: 98.412841796875
patch: throw Node CaMeL Util . KILL ;
rank: 856
score: 98.0028076171875
patch: this . return value ;
rank: 856
score: 97.96272786458333
patch: return ( return KILL ;
rank: 856
score: 97.94685872395833
patch: fail ( $STRING$ ) ;
rank: 856
score: 97.7808329264323
patch: / * break ; }
rank: 856
score: 97.71567789713542
patch: return KILL . } }
rank: 856
score: 97.57023111979167
patch: return ( ( Integer ;
rank: 857
score: 97.99843052455357
patch: switch ( Node CaMeL Util .
rank: 857
score: 97.9665018717448
patch: return null + variable ;
rank: 857
score: 97.94744873046875
patch: return n . ;
rank: 857
score: 97.77996826171875
patch: / * * ; /
rank: 857
score: 97.71002197265625
patch: evaluated = null ;
rank: 857
score: 97.56947021484375
patch: return ( $STRING$ ;
rank: 858
score: 98.3857650756836
patch: is CaMeL Lhs ( n ) ;
rank: 858
score: 97.99504743303571
patch: return MAYBE _ LIVE ; }
rank: 858
score: 97.99281819661458
patch: return KILL != KILL ;
rank: 858
score: 97.96026000976562
patch: return 1 ; ;
rank: 858
score: 97.94595336914062
patch: if ; return n ;
rank: 858
score: 97.77908325195312
patch: if ( ; return ;
rank: 858
score: 97.70170288085937
patch: return variable ; }
rank: 858
score: 97.56884765625
patch: return this .
rank: 859
score: 97.9928487141927
patch: throw null : null ;
rank: 859
score: 97.98606363932292
patch: return children . KILL ;
rank: 859
score: 97.95094807942708
patch: return name . KILL ;
rank: 859
score: 97.90854899088542
patch: return n + variable ;
rank: 859
score: 97.77761840820312
patch: { return true ; }
rank: 859
score: 97.70110473632812
patch: throw throw null ;
rank: 859
score: 97.56837768554688
patch: return * $STRING$ ;
rank: 860
score: 97.95074462890625
patch: finally { return null ;
rank: 860
score: 97.94387817382812
patch: this ; return null ;
rank: 860
score: 97.77119140625
patch: ? return null ;
rank: 860
score: 97.69832153320313
patch: result = null ;
rank: 860
score: 97.56604614257813
patch: return null ; KILL
rank: 861
score: 98.36212921142578
patch: throw is CaMeL Variable CaMeL Read CaMeL
rank: 861
score: 97.98458862304688
patch: return $STRING$ ; } else
rank: 861
score: 97.97749837239583
patch: return KILL = true ;
rank: 861
score: 97.77035522460938
patch: return return ; }
rank: 861
score: 97.6955078125
patch: return = null ;
rank: 861
score: 97.56411743164062
patch: return ; . . KILL
rank: 862
score: 98.35989379882812
patch: init ( n , variable ) ;
rank: 862
score: 97.98392740885417
patch: return n ; break ;
rank: 862
score: 97.94849395751953
patch: return parent ;
rank: 862
score: 97.76922607421875
patch: return null KILL ;
rank: 862
score: 97.67108154296875
patch: dispose ( ) ;
rank: 862
score: 97.5410385131836
patch: return name ;
rank: 863
score: 98.33739471435547
patch: is CaMeL Lhs ( variable ) ;
rank: 863
score: 97.9765625
patch: return $STRING$ + n ;
rank: 863
score: 97.9457295735677
patch: return site . KILL ;
rank: 863
score: 97.93414306640625
patch: return super . ; }
rank: 863
score: 97.87112426757812
patch: return variable ; } }
rank: 863
score: 97.76616821289062
patch: if ( false ;
rank: 863
score: 97.659326171875
patch: state = null ;
rank: 863
score: 97.53911590576172
patch: return super ;
rank: 864
score: 98.33111572265625
patch: case Node CaMeL Util . KILL ;
rank: 864
score: 97.97526041666667
patch: this . return true ;
rank: 864
score: 97.97031947544643
patch: return variable ; } else {
rank: 864
score: 97.8675028483073
patch: throw ( this ) ;
rank: 864
score: 97.65678100585937
patch: return throw this ;
rank: 864
score: 97.53536987304688
patch: throw KILL . ;
rank: 865
score: 97.95933024088542
patch: return n . READ ;
rank: 865
score: 97.86243693033855
patch: return is CaMeL Lhs ;
rank: 865
score: 97.74955444335937
patch: this . continue ;
rank: 865
score: 97.65599365234375
patch: reset ( ) ;
rank: 865
score: 97.52941284179687
patch: return false ; .
rank: 866
score: 98.27839878627232
patch: sb . next ( ) ;
rank: 866
score: 97.96302286783855
patch: return KILL = false ;
rank: 866
score: 97.91898600260417
patch: return this return null ;
rank: 866
score: 97.9164326985677
patch: return this . FUNCTION ;
rank: 867
score: 97.9627685546875
patch: return KILL ( ) ;
rank: 867
score: 97.94715372721355
patch: return Node CaMeL Util .
rank: 867
score: 97.93837483723958
patch: return false ; ; ;
rank: 867
score: 97.91349283854167
patch: return node . get ;
rank: 867
score: 97.74794921875
patch: { return ; ;
rank: 867
score: 97.63641967773438
patch: return code . }
rank: 867
score: 97.5025390625
patch: return $STRING$ ; KILL
rank: 868
score: 97.74666748046874
patch: if return this ;
rank: 868
score: 97.48194122314453
patch: if ; {
rank: 869
score: 97.93345133463542
patch: return $STRING$ ; ; ;
rank: 869
score: 97.91073608398438
patch: throw new return null ;
rank: 869
score: 97.89034016927083
patch: ret = null ; }
rank: 869
score: 97.74571990966797
patch: / * /
rank: 869
score: 97.62640380859375
patch: return ! false ;
rank: 869
score: 97.47786712646484
patch: return / ;
rank: 870
score: 97.93326822916667
patch: return true ; } ;
rank: 870
score: 97.83473714192708
patch: else { return variable ;
rank: 870
score: 97.62576904296876
patch: if ( variable ,
rank: 870
score: 97.4755859375
patch: return super .
rank: 871
score: 97.95365397135417
patch: return KILL . compare ;
rank: 871
score: 97.83317565917969
patch: throw true ;
rank: 871
score: 97.73287963867188
patch: return ; , ;
rank: 871
score: 97.62054443359375
patch: return value ; }
rank: 872
score: 97.95169067382812
patch: return this ; } else
rank: 872
score: 97.93092041015625
patch: return type ; ;
rank: 872
score: 97.90906778971355
patch: return $STRING$ ; break ;
rank: 872
score: 97.72991943359375
patch: this . return ;
rank: 872
score: 97.6187255859375
patch: return new Boolean ;
rank: 872
score: 97.46917724609375
patch: throw $STRING$ ;
rank: 873
score: 98.19188581194196
patch: buf . next ( ) ;
rank: 873
score: 97.9515889485677
patch: return KILL . EQ ;
rank: 873
score: 97.92701416015625
patch: throw ( ) ;
rank: 873
score: 97.89896647135417
patch: return null ; ; }
rank: 873
score: 97.8941141764323
patch: return true ; break ;
rank: 873
score: 97.86961873372395
patch: return false ; break ;
rank: 873
score: 97.82450358072917
patch: else { return n ;
rank: 873
score: 97.71397094726562
patch: } else if ;
rank: 873
score: 97.46300048828125
patch: return $STRING$ KILL ;
rank: 874
score: 97.92652384440105
patch: return new return KILL ;
rank: 874
score: 97.85690307617188
patch: return null - null ;
rank: 874
score: 97.712939453125
patch: throw return false ;
rank: 874
score: 97.60751342773438
patch: return this ) ;
rank: 874
score: 97.460888671875
patch: return 0 ; }
rank: 875
score: 98.18265206473214
patch: sb . run ( ) ;
rank: 875
score: 97.94826253255208
patch: return KILL & KILL ;
rank: 875
score: 97.92637125651042
patch: if new return KILL ;
rank: 875
score: 97.8445332845052
patch: evaluated . return null ;
rank: 875
score: 97.7068603515625
patch: if return true ;
rank: 875
score: 97.594482421875
patch: init ( ) ;
rank: 875
score: 97.45805053710937
patch: return ( Integer ;
rank: 876
score: 97.94654337565105
patch: return KILL || KILL ;
rank: 876
score: 97.79977416992188
patch: throw ( $STRING$ ) ;
rank: 876
score: 97.70234985351563
patch: expr = null ;
rank: 876
score: 97.45738525390625
patch: return this KILL ;
rank: 877
score: 97.83371988932292
patch: return null . false ;
rank: 877
score: 97.69734954833984
patch: return ; }
rank: 877
score: 97.56925048828126
patch: evaluated = variable ;
rank: 878
score: 97.94160766601563
patch: return KILL 1 ;
rank: 878
score: 97.79445393880208
patch: return n . get CaMeL
rank: 878
score: 97.69618530273438
patch: * * * ;
rank: 878
score: 97.56626586914062
patch: state = variable ;
rank: 878
score: 97.44085693359375
patch: return ; _
rank: 879
score: 97.86207071940105
patch: return Token . KILL ;
rank: 879
score: 97.69407958984375
patch: return ; * /
rank: 879
score: 97.54287109375
patch: throw new ) ;
rank: 879
score: 97.43839263916016
patch: return null .
rank: 880
score: 98.11124093191964
patch: return variable ( variable ) ;
rank: 880
score: 97.91527303059895
patch: return true ; KILL ;
rank: 880
score: 97.8607177734375
patch: if ; return this ;
rank: 880
score: 97.77763061523437
patch: return n ) ;
rank: 880
score: 97.5375732421875
patch: return super . }
rank: 881
score: 97.937255859375
patch: return node != null ;
rank: 881
score: 97.85886637369792
patch: do { return null ;
rank: 881
score: 97.42950439453125
patch: return true ; .
rank: 882
score: 97.93692016601562
patch: return node . value ;
rank: 882
score: 97.68634643554688
patch: break return KILL ;
rank: 882
score: 97.42096557617188
patch: if return 0 ;
rank: 883
score: 97.9355977376302
patch: boolean KILL = false ;
rank: 883
score: 97.9034932454427
patch: else { return $STRING$ ;
rank: 883
score: 97.8302978515625
patch: if ( false )
rank: 883
score: 97.73319498697917
patch: return n + n ;
rank: 883
score: 97.68446044921875
patch: break * * ;
rank: 883
score: 97.52528686523438
patch: Node CaMeL Util .
rank: 883
score: 97.41903076171874
patch: return * ; .
rank: 884
score: 97.9330546061198
patch: return KILL - KILL ;
rank: 884
score: 97.9022216796875
patch: switch ( return ) ;
rank: 884
score: 97.83155314127605
patch: return declarations . KILL ;
rank: 884
score: 97.68057861328126
patch: / * break ;
rank: 885
score: 97.93081665039062
patch: } else if ( ;
rank: 885
score: 97.80143229166667
patch: return $STRING$ + variable ;
rank: 885
score: 97.71183471679687
patch: return READ ) ;
rank: 885
score: 97.67239990234376
patch: continue / * /
rank: 885
score: 97.51742553710938
patch: throw false ;
rank: 885
score: 97.41604614257812
patch: return T ;
rank: 886
score: 97.8242899576823
patch: this ; return this ;
rank: 886
score: 97.6676025390625
patch: } else * /
rank: 886
score: 97.50549926757813
patch: return ! variable ;
rank: 886
score: 97.41201171875
patch: throw new KILL ;
rank: 887
score: 97.92234293619792
patch: return KILL . REGEXP ;
rank: 887
score: 97.89419555664062
patch: return node ; ;
rank: 887
score: 97.81897989908855
patch: return new CaMeL Name ;
rank: 887
score: 97.79955037434895
patch: return KILL + null ;
rank: 887
score: 97.66244506835938
patch: break - 1 ;
rank: 887
score: 97.501025390625
patch: return TRUE ; }
rank: 887
score: 97.40964965820312
patch: throw KILL KILL ;
rank: 888
score: 97.89314778645833
patch: finally { return $STRING$ ;
rank: 888
score: 97.81553141276042
patch: throw null * * /
rank: 888
score: 97.79850260416667
patch: throw null ; break ;
rank: 888
score: 97.65061645507812
patch: return ( Boolean ;
rank: 888
score: 97.4976806640625
patch: is CaMeL Lhs .
rank: 889
score: 98.03211466471355
patch: init ( variable ) ;
rank: 889
score: 97.8131591796875
patch: throw new ; }
rank: 889
score: 97.80106608072917
patch: throw false : $STRING$ ;
rank: 889
score: 97.79311116536458
patch: return null ; false ;
rank: 889
score: 97.69572143554687
patch: return return n ;
rank: 889
score: 97.65020751953125
patch: expr = KILL ;
rank: 889
score: 97.49089050292969
patch: throw this ;
rank: 890
score: 97.91595458984375
patch: return int CaMeL Value ;
rank: 890
score: 97.88795979817708
patch: if ( return KILL ;
rank: 890
score: 97.81252034505208
patch: Node CaMeL Util . ;
rank: 890
score: 97.64877319335938
patch: } else break ;
rank: 890
score: 97.4836654663086
patch: return level ;
rank: 891
score: 97.63958740234375
patch: break KILL * /
rank: 891
score: 97.46603393554688
patch: return FALSE ; }
rank: 892
score: 97.91366577148438
patch: return KILL . NOT ;
rank: 892
score: 97.88455200195312
patch: break KILL . KILL ;
rank: 892
score: 97.6443603515625
patch: fail ( ) ;
rank: 892
score: 97.636669921875
patch: continue * * ;
rank: 892
score: 97.38880004882813
patch: return new this ;
rank: 893
score: 97.91005452473958
patch: return get CaMeL Value ;
rank: 893
score: 97.636181640625
patch: return . ) ;
rank: 893
score: 97.6244140625
patch: if ( n !=
rank: 893
score: 97.43770141601563
patch: break / * /
rank: 893
score: 97.3816162109375
patch: return ( Double ;
rank: 894
score: 97.9080810546875
patch: return KILL != null ;
rank: 894
score: 97.77015177408855
patch: return $STRING$ ; } }
rank: 894
score: 97.63170166015625
patch: return ; } else
rank: 894
score: 97.43472900390626
patch: return null } }
rank: 894
score: 97.38143310546874
patch: return new $STRING$ .
rank: 895
score: 97.90702311197917
patch: this . return 0 ;
rank: 895
score: 97.8822530110677
patch: try { return false ;
rank: 895
score: 97.75267333984375
patch: depth = null ;
rank: 895
score: 97.4220703125
patch: break } else {
rank: 895
score: 97.37939453125
patch: KILL . KILL .
rank: 896
score: 97.8812255859375
patch: if ( return $NUMBER$ ;
rank: 896
score: 97.79982503255208
patch: return n ; } ;
rank: 896
score: 97.76641845703125
patch: if ( true )
rank: 896
score: 97.6261474609375
patch: ( return null ;
rank: 896
score: 97.40521240234375
patch: return null . }
rank: 896
score: 97.37063598632812
patch: return ? $STRING$ ;
rank: 897
score: 97.87925211588542
patch: if ( return ) ?
rank: 897
score: 97.79042561848958
patch: return true return true ;
rank: 897
score: 97.76315307617188
patch: return variable ; break ;
rank: 897
score: 97.62591552734375
patch: continue return null ;
rank: 897
score: 97.40191650390625
patch: return null }
rank: 897
score: 97.363720703125
patch: return false ; KILL
rank: 898
score: 97.89443969726562
patch: return - true ;
rank: 898
score: 97.87823486328125
patch: return false ; ; }
rank: 898
score: 97.71200561523438
patch: = null ;
rank: 898
score: 97.62402954101563
patch: / * return ;
rank: 898
score: 97.57769775390625
patch: variable = n ;
rank: 898
score: 97.39816284179688
patch: break ; } }
rank: 898
score: 97.3581298828125
patch: return $STRING$ . ;
rank: 899
score: 97.89378865559895
patch: return KILL . matches ;
rank: 899
score: 97.8926289876302
patch: error ( $STRING$ ) ;
rank: 899
score: 97.784423828125
patch: return node . ;
rank: 899
score: 97.75316365559895
patch: if ( ! false )
rank: 899
score: 97.621044921875
patch: return return return ;
rank: 899
score: 97.57352294921876
patch: return return variable ;
rank: 899
score: 97.39769897460937
patch: throw true ; }
rank: 899
score: 97.35535278320313
patch: return return ; .
rank: 900
score: 97.89117431640625
patch: return init . KILL ;
rank: 900
score: 97.75150553385417
patch: match ( n ) ;
rank: 900
score: 97.67702026367188
patch: node = null ;
rank: 900
score: 97.61802978515625
patch: return ( String ;
rank: 900
score: 97.5646728515625
patch: return variable * /
rank: 900
score: 97.39134216308594
patch: return INSTANCEOF ;
rank: 901
score: 97.8741455078125
patch: else { return false ;
rank: 901
score: 97.77243041992188
patch: return variable . equals ;
rank: 901
score: 97.6174072265625
patch: if . * /
rank: 901
score: 97.56248168945312
patch: state = true ;
rank: 901
score: 97.33450927734376
patch: return this ; .
rank: 902
score: 97.88035074869792
patch: return KILL == null ;
rank: 902
score: 97.61716918945312
patch: { return ; }
rank: 902
score: 97.55228881835937
patch: state = KILL ;
rank: 902
score: 97.38076782226562
patch: is CaMeL Lhs _
rank: 902
score: 97.31822509765625
patch: return - ; .
rank: 903
score: 97.8787333170573
patch: * / if ( ;
rank: 903
score: 97.87195841471355
patch: return variable + variable ;
rank: 903
score: 97.87172444661458
patch: return true ; ; ;
rank: 903
score: 97.76108805338542
patch: this . return node ;
rank: 903
score: 97.73111979166667
patch: try {
rank: 903
score: 97.615380859375
patch: * return null ;
rank: 903
score: 97.37689971923828
patch: break ; }
rank: 904
score: 97.87501017252605
patch: if ( this . ;
rank: 904
score: 97.87046305338542
patch: finally { return false ;
rank: 904
score: 97.86942545572917
patch: warn ( $STRING$ ) ;
rank: 904
score: 97.76026407877605
patch: / ; return null ;
rank: 904
score: 97.73055013020833
patch: return n ; * /
rank: 904
score: 97.63831787109375
patch: count = null ;
rank: 904
score: 97.37343139648438
patch: return / / *
rank: 904
score: 97.2956298828125
patch: if ; { ;
rank: 905
score: 97.86612955729167
patch: return $STRING$ ; ; }
rank: 905
score: 97.61165161132813
patch: return . $NUMBER$ ;
rank: 905
score: 97.37224731445312
patch: for ( Node child
rank: 905
score: 97.28121337890624
patch: return this ; KILL
rank: 906
score: 97.8603515625
patch: return 0 ; KILL ;
rank: 906
score: 97.75311279296875
patch: return ASSIGN . KILL ;
rank: 906
score: 97.60816650390625
patch: return KILL ) ;
rank: 906
score: 97.53101806640625
patch: return n 1 ;
rank: 906
score: 97.37020111083984
patch: return errors ;
rank: 907
score: 97.86300659179688
patch: return KILL . make ;
rank: 907
score: 97.7177734375
patch: return old CaMeL Name ;
rank: 907
score: 97.60985107421875
patch: found = null ;
rank: 907
score: 97.60452270507812
patch: { return this ;
rank: 907
score: 97.36560821533203
patch: return COLON ;
rank: 907
score: 97.27397918701172
patch: return n .
rank: 908
score: 97.86031087239583
patch: return KILL . contains ;
rank: 908
score: 97.84815063476563
patch: return $NUMBER$ ; ;
rank: 908
score: 97.71401977539062
patch: return variable ; } else
rank: 908
score: 97.60379638671876
patch: return ; } ;
rank: 908
score: 97.36127471923828
patch: return success ;
rank: 908
score: 97.27080078125
patch: return true ; KILL
rank: 909
score: 97.59913330078125
patch: return null KILL }
rank: 909
score: 97.5175048828125
patch: state = false ;
rank: 909
score: 97.2679672241211
patch: return function ;
rank: 910
score: 97.84468994140624
patch: return ) ; ;
rank: 910
score: 97.80523681640625
patch: log ( $STRING$ ) ;
rank: 910
score: 97.73802693684895
patch: return null return this ;
rank: 910
score: 97.59337158203125
patch: return return . ;
rank: 910
score: 97.56862182617188
patch: repaint ( ) ;
rank: 910
score: 97.32968139648438
patch: return EOF ;
rank: 911
score: 97.81361694335938
patch: return node ; }
rank: 911
score: 97.69840494791667
patch: throw null : variable ;
rank: 911
score: 97.5829833984375
patch: if ; return ;
rank: 911
score: 97.48978881835937
patch: close ( ) ;
rank: 911
score: 97.24923706054688
patch: return KILL .
rank: 912
score: 97.83790079752605
patch: return ( return return ;
rank: 912
score: 97.722412109375
patch: / return null ;
rank: 912
score: 97.63402709960937
patch: throw null * /
rank: 912
score: 97.58269653320312
patch: return . ; }
rank: 912
score: 97.48572998046875
patch: return ; } }
rank: 912
score: 97.30914306640625
patch: return counter ;
rank: 913
score: 97.80885009765625
patch: return KILL $NUMBER$ ;
rank: 913
score: 97.71923828125
patch: / * return this ;
rank: 913
score: 97.58200073242188
patch: / * * ?
rank: 913
score: 97.58054809570312
patch: result = n ;
rank: 913
score: 97.552685546875
patch: normal = null ;
rank: 913
score: 97.30790710449219
patch: } else {
rank: 913
score: 97.2103500366211
patch: return vars ;
rank: 914
score: 97.82978820800781
patch: return id ;
rank: 914
score: 97.7863057454427
patch: return variable + null ;
rank: 914
score: 97.71859741210938
patch: return node . ; }
rank: 914
score: 97.57424926757812
patch: pop ( ) ;
rank: 914
score: 97.57228393554688
patch: { return true ;
rank: 914
score: 97.54625244140625
patch: throw false ; }
rank: 914
score: 97.46142578125
patch: fail ( $STRING$ ;
rank: 914
score: 97.29915618896484
patch: return exp ;
rank: 914
score: 97.20555877685547
patch: return code ;
rank: 915
score: 97.6931660970052
patch: this return null ; }
rank: 915
score: 97.54518432617188
patch: b = null ;
rank: 915
score: 97.46115112304688
patch: throw new Variable CaMeL
rank: 915
score: 97.2943115234375
patch: return VERBOSE ;
rank: 915
score: 97.18608856201172
patch: return Double ;
rank: 916
score: 97.768115234375
patch: return KILL ( ;
rank: 916
score: 97.689111328125
patch: this return null ;
rank: 916
score: 97.56716918945312
patch: { break ; }
rank: 916
score: 97.54279174804688
patch: flush ( ) ;
rank: 916
score: 97.45151977539062
patch: n = n ;
rank: 916
score: 97.2893295288086
patch: return EQ ;
rank: 916
score: 97.179443359375
patch: return count ;
rank: 917
score: 97.80026245117188
patch: break KILL ;
rank: 917
score: 97.68863932291667
patch: / return null ; }
rank: 917
score: 97.561767578125
patch: result = KILL ;
rank: 917
score: 97.53070068359375
patch: result = true ;
rank: 917
score: 97.44815063476562
patch: state = READ ;
rank: 917
score: 97.27919006347656
patch: return break ;
rank: 917
score: 97.14825439453125
patch: return Integer ;
rank: 918
score: 97.52745971679687
patch: result = false ;
rank: 918
score: 97.2685546875
patch: return OTHER ;
rank: 918
score: 97.13978576660156
patch: return node .
rank: 919
score: 97.78748779296875
patch: return name ; ;
rank: 919
score: 97.75218505859375
patch: if ( ; }
rank: 919
score: 97.68424479166667
patch: if ( node != ;
rank: 919
score: 97.53806559244792
patch: continue ;
rank: 919
score: 97.13874816894531
patch: return KILL Variable
rank: 920
score: 97.78644409179688
patch: return ! KILL ;
rank: 920
score: 97.53641357421876
patch: { return false ;
rank: 920
score: 97.52046508789063
patch: result = $STRING$ ;
rank: 920
score: 97.46724243164063
patch: return null ; else
rank: 920
score: 97.435791015625
patch: evaluated = n ;
rank: 920
score: 97.21737670898438
patch: return / /
rank: 920
score: 97.13014221191406
patch: return parent .
rank: 921
score: 97.73270263671876
patch: synchronized ( this )
rank: 921
score: 97.65887451171875
patch: revalidate ( ) ;
rank: 921
score: 97.48280029296875
patch: context = null ;
rank: 921
score: 97.2151107788086
patch: return VAR ;
rank: 921
score: 97.11666870117188
patch: throw super .
rank: 922
score: 97.7251708984375
patch: if ( node ;
rank: 922
score: 97.64130859375
patch: return n ; ;
rank: 922
score: 97.5287109375
patch: if return ; }
rank: 922
score: 97.45985107421875
patch: if ( n .
rank: 922
score: 97.4283203125
patch: return type ; }
rank: 922
score: 97.20931243896484
patch: return COMMA ;
rank: 922
score: 97.10828399658203
patch: break ; ;
rank: 923
score: 97.721435546875
patch: return - ; }
rank: 923
score: 97.52835083007812
patch: continue * /
rank: 923
score: 97.08875274658203
patch: return ref ;
rank: 924
score: 97.7619873046875
patch: return - $STRING$ ;
rank: 924
score: 97.72129516601562
patch: for ( ; )
rank: 924
score: 97.524462890625
patch: / * ? /
rank: 924
score: 97.4080078125
patch: return READ ; }
rank: 924
score: 97.20295715332031
patch: return ceil ;
rank: 925
score: 97.760693359375
patch: if new ) {
rank: 925
score: 97.7067138671875
patch: switch ( node )
rank: 925
score: 97.441162109375
patch: n = null ;
rank: 925
score: 97.41371459960938
patch: / * * *
rank: 925
score: 97.40767669677734
patch: return FUNCTION ;
rank: 925
score: 97.20246124267578
patch: return ALL ;
rank: 926
score: 97.57779541015626
patch: . return null ;
rank: 926
score: 97.51025390625
patch: / * break /
rank: 926
score: 97.42696533203124
patch: try { try {
rank: 926
score: 97.37832641601562
patch: else return n ;
rank: 926
score: 97.01095581054688
patch: throw ; .
rank: 927
score: 97.75580444335938
patch: return ( 1 ;
rank: 927
score: 97.5534423828125
patch: return parent . ;
rank: 927
score: 97.5074462890625
patch: / / * ;
rank: 927
score: 97.18218994140625
patch: return used ;
rank: 927
score: 97.01039123535156
patch: return VOID ;
rank: 928
score: 97.68668212890626
patch: if ( ; ;
rank: 928
score: 97.50069580078124
patch: } / * /
rank: 928
score: 97.00465393066406
patch: return KILL KILL
rank: 929
score: 97.6846923828125
patch: return - 0 ;
rank: 929
score: 97.4953125
patch: if ( true ;
rank: 929
score: 97.37291870117187
patch: { return n ;
rank: 929
score: 97.17390441894531
patch: return new ;
rank: 930
score: 97.52425537109374
patch: if ( n ;
rank: 930
score: 97.48992156982422
patch: / * ;
rank: 930
score: 97.42066040039063
patch: interrupt ( ) ;
rank: 930
score: 97.36941528320312
patch: return / / /
rank: 930
score: 97.16804504394531
patch: return LE ;
rank: 930
score: 96.97734832763672
patch: return true .
rank: 931
score: 97.7429443359375
patch: if ( return )
rank: 931
score: 97.5143814086914
patch: return resolve ;
rank: 931
score: 97.48947143554688
patch: * * /
rank: 931
score: 97.41948852539062
patch: invalidate ( ) ;
rank: 931
score: 97.39133911132812
patch: return ) ; }
rank: 931
score: 97.35887451171875
patch: return n * /
rank: 931
score: 97.16515350341797
patch: return level .
rank: 931
score: 96.9710693359375
patch: if KILL .
rank: 932
score: 97.48831176757812
patch: break * /
rank: 932
score: 97.34315185546875
patch: RHS = n ;
rank: 932
score: 96.95557403564453
patch: return continue ;
rank: 933
score: 97.4828369140625
patch: return KILL KILL }
rank: 933
score: 97.372265625
patch: indent ( ) ;
rank: 933
score: 97.16050720214844
patch: return DELIMITER ;
rank: 933
score: 96.94829559326172
patch: return false .
rank: 934
score: 97.47088623046875
patch: return null . ;
rank: 934
score: 97.31607666015626
patch: for ( Node )
rank: 934
score: 97.15625762939453
patch: if ( !
rank: 934
score: 96.93708038330078
patch: return key ;
rank: 935
score: 97.7269287109375
patch: break KILL KILL ;
rank: 935
score: 97.64537811279297
patch: return - ;
rank: 935
score: 97.4653076171875
patch: return exp . ;
rank: 935
score: 97.25120544433594
patch: else break ;
rank: 935
score: 97.14903259277344
patch: return Boolean ;
rank: 935
score: 96.93170166015625
patch: return ANNOTATION ;
rank: 936
score: 97.72369384765625
patch: return id ; ;
rank: 936
score: 97.64033203125
patch: * / break ;
rank: 936
score: 97.54644165039062
patch: return ( Control CaMeL
rank: 936
score: 97.347314453125
patch: throw null ) ;
rank: 936
score: 97.14594268798828
patch: return mode ;
rank: 936
score: 96.91683959960938
patch: return Math ;
rank: 937
score: 97.41702270507812
patch: this . ;
rank: 937
score: 97.35010986328125
patch: = null ; }
rank: 937
score: 97.34522705078125
patch: try { else {
rank: 937
score: 96.91244506835938
patch: return this Variable
rank: 938
score: 97.68783569335938
patch: break true ;
rank: 938
score: 97.4414794921875
patch: switch ( n ;
rank: 938
score: 97.35302734375
patch: } else ;
rank: 938
score: 97.13459014892578
patch: return BANG ;
rank: 938
score: 96.91026306152344
patch: return ; {
rank: 939
score: 97.6825439453125
patch: return 0 . ;
rank: 939
score: 97.61895751953125
patch: return value ; ;
rank: 939
score: 97.4411865234375
patch: / return KILL ;
rank: 939
score: 97.34010823567708
patch: / ;
rank: 939
score: 97.33981323242188
patch: return Boolean ; }
rank: 939
score: 96.91010284423828
patch: return sum ;
rank: 940
score: 97.43812255859375
patch: return declarations [ ;
rank: 941
score: 97.60841674804688
patch: return KILL * /
rank: 941
score: 97.33183288574219
patch: if return ;
rank: 941
score: 97.12318420410156
patch: return THIS ;
rank: 941
score: 96.90351867675781
patch: KILL ; ;
rank: 942
score: 97.66183471679688
patch: break true ; }
rank: 942
score: 97.12215423583984
patch: return CONTINUE ;
rank: 942
score: 96.90076446533203
patch: throw null .
rank: 943
score: 97.30171203613281
patch: if . ;
rank: 943
score: 97.12309265136719
patch: return init ;
rank: 943
score: 96.8987045288086
patch: if ; .
rank: 944
score: 97.59358520507813
patch: return return value ;
rank: 944
score: 97.30948486328126
patch: found = true ;
rank: 944
score: 97.25212097167969
patch: normal != null
rank: 944
score: 96.89824676513672
patch: return list ;
rank: 945
score: 97.64551391601563
patch: return ( return ;
rank: 945
score: 97.39218139648438
patch: return Factory . ;
rank: 945
score: 97.23271942138672
patch: = false ;
rank: 945
score: 97.09791564941406
patch: return System .
rank: 945
score: 96.89382934570312
patch: return names ;
rank: 946
score: 97.56760864257812
patch: return . value ;
rank: 946
score: 97.38553466796876
patch: return ( Node ;
rank: 946
score: 97.28577270507813
patch: node = n ;
rank: 946
score: 97.26261901855469
patch: continue false ;
rank: 946
score: 97.0941162109375
patch: return description ;
rank: 946
score: 96.88719177246094
patch: return type .
rank: 947
score: 97.615576171875
patch: ( null ) ;
rank: 947
score: 97.37581176757813
patch: return make . ;
rank: 947
score: 97.28541259765625
patch: result = variable ;
rank: 947
score: 97.0882797241211
patch: return RIGHT ;
rank: 947
score: 96.87792205810547
patch: throw this .
rank: 948
score: 97.60510864257813
patch: break . KILL ;
rank: 948
score: 97.54524536132813
patch: return value ( ;
rank: 948
score: 97.36915283203125
patch: while ( ; )
rank: 948
score: 97.25892333984375
patch: end ( ) ;
rank: 948
score: 97.25685119628906
patch: break * ;
rank: 948
score: 97.1783676147461
patch: return EMPTY ;
rank: 948
score: 97.0533218383789
patch: return changed ;
rank: 948
score: 96.87757873535156
patch: System . ;
rank: 949
score: 97.59674072265625
patch: return ( KILL ;
rank: 949
score: 97.43635864257813
patch: evaluated = KILL ;
rank: 949
score: 97.25606689453124
patch: start ( ) ;
rank: 949
score: 97.06488037109375
patch: return / *
rank: 949
score: 97.04081726074219
patch: = n ;
rank: 949
score: 96.87258911132812
patch: return ; =
rank: 950
score: 97.58761596679688
patch: return parent ; }
rank: 950
score: 97.36576843261719
patch: return * /
rank: 950
score: 97.24559326171875
patch: suspend ( ) ;
rank: 950
score: 97.06258392333984
patch: break } }
rank: 950
score: 97.03055572509766
patch: return make ;
rank: 950
score: 96.8631591796875
patch: return column ;
rank: 951
score: 97.5622314453125
patch: return 0 ; .
rank: 951
score: 97.2384765625
patch: expr = n ;
rank: 951
score: 97.21767171223958
patch: if ;
rank: 951
score: 97.1637954711914
patch: throw n ;
rank: 951
score: 97.0433578491211
patch: return DOT ;
rank: 951
score: 97.02730305989583
patch: break .
rank: 951
score: 96.8630142211914
patch: return refs ;
rank: 952
score: 97.350927734375
patch: return variable . ;
rank: 952
score: 97.21401977539062
patch: break false ;
rank: 952
score: 97.16212463378906
patch: return children ;
rank: 952
score: 97.04046630859375
patch: return EOL ;
rank: 952
score: 97.00919342041016
patch: for ( int
rank: 952
score: 96.85921478271484
patch: return name .
rank: 953
score: 97.208740234375
patch: continue * ;
rank: 953
score: 97.02793884277344
patch: return } }
rank: 953
score: 96.84867858886719
patch: return ; *
rank: 954
score: 97.35219319661458
patch: * /
rank: 954
score: 97.2083740234375
patch: continue true ;
rank: 954
score: 96.84481811523438
patch: throw 0 ;
rank: 955
score: 97.34793090820312
patch: return NULL ;
rank: 955
score: 97.32796630859374
patch: return resolve ( ;
rank: 955
score: 97.20716857910156
patch: * * ;
rank: 955
score: 96.98854064941406
patch: if ( )
rank: 956
score: 97.32030029296875
patch: return Context . ;
rank: 956
score: 97.18658447265625
patch: } if ;
rank: 956
score: 96.95700073242188
patch: / /
rank: 956
score: 96.83038330078125
patch: return STATEMENT ;
rank: 957
score: 97.32367706298828
patch: return filter ;
rank: 957
score: 96.93950653076172
patch: if ( }
rank: 957
score: 96.82981872558594
patch: return function .
rank: 958
score: 97.2127456665039
patch: throw variable ;
rank: 958
score: 97.16044616699219
patch: if ; ;
rank: 958
score: 96.98802947998047
patch: / * else
rank: 958
score: 96.93633270263672
patch: continue ; }
rank: 958
score: 96.82518005371094
patch: return logger ;
rank: 959
score: 97.36881256103516
patch: if KILL ;
rank: 959
score: 97.28947448730469
patch: return switch ;
rank: 959
score: 96.982177734375
patch: return READ _
rank: 959
score: 96.92581939697266
patch: return synchronized (
rank: 959
score: 96.8249282836914
patch: return ; ?
rank: 960
score: 97.34660339355469
patch: int * /
rank: 960
score: 97.15510559082031
patch: / / ;
rank: 960
score: 96.81198120117188
patch: KILL ; KILL
rank: 961
score: 97.25639343261719
patch: return declaration ;
rank: 961
score: 96.97602844238281
patch: break READ ;
rank: 961
score: 96.81100463867188
patch: / ; ;
rank: 962
score: 97.22726440429688
patch: return match ;
rank: 962
score: 97.17362976074219
patch: return ASSIGN ;
rank: 962
score: 96.9649658203125
patch: return variable }
rank: 962
score: 96.90412902832031
patch: for ( else
rank: 962
score: 96.80401611328125
patch: break ; .
rank: 963
score: 97.22179412841797
patch: switch ( ;
rank: 963
score: 97.0893325805664
patch: break . }
rank: 963
score: 97.04685974121094
patch: return declarations ;
rank: 963
score: 96.89978790283203
patch: return Variable CaMeL
rank: 963
score: 96.80034637451172
patch: = KILL ;
rank: 964
score: 97.07274627685547
patch: return property ;
rank: 964
score: 96.83251953125
patch: if ( variable
rank: 964
score: 96.79752349853516
patch: throw new {
rank: 964
score: 96.72483317057292
patch: else {
rank: 965
score: 97.0716781616211
patch: return ; )
rank: 965
score: 96.92662811279297
patch: return child CaMeL
rank: 965
score: 96.7814712524414
patch: throw new ;
rank: 965
score: 96.69302368164062
patch: break ?
rank: 966
score: 97.08911895751953
patch: throw value ;
rank: 966
score: 97.03787994384766
patch: = true ;
rank: 966
score: 96.77555084228516
patch: final Node CaMeL
rank: 966
score: 96.68280029296875
patch: System .
rank: 967
score: 97.0571517944336
patch: } return ;
rank: 967
score: 96.90200805664062
patch: / / /
rank: 967
score: 96.77355194091797
patch: return UNKNOWN ;
rank: 967
score: 96.66604614257812
patch: return {
rank: 968
score: 97.27381896972656
patch: ( null )
rank: 968
score: 97.09556579589844
patch: return visit ;
rank: 968
score: 97.03388214111328
patch: break KILL }
rank: 968
score: 96.89859771728516
patch: = variable ;
rank: 968
score: 96.59014892578125
patch: break }
rank: 968
score: 96.18088785807292
patch: KILL ;
rank: 969
score: 97.02437591552734
patch: normal == null
rank: 969
score: 96.9237060546875
patch: * ;
rank: 969
score: 96.89498138427734
patch: for ( )
rank: 969
score: 96.7491455078125
patch: throw null :
rank: 969
score: 96.5386454264323
patch: return }
rank: 969
score: 95.94710286458333
patch: KILL .
rank: 970
score: 97.04388427734375
patch: return namespace ;
rank: 970
score: 96.89939371744792
patch: { ;
rank: 970
score: 96.74358367919922
patch: / * }
rank: 970
score: 96.51165771484375
patch: if (
rank: 971
score: 97.02542114257812
patch: return Control CaMeL
rank: 971
score: 96.97593688964844
patch: return ( ;
rank: 971
score: 96.896728515625
patch: break KILL
rank: 971
score: 96.74200439453125
patch: try { else
rank: 971
score: 95.51016998291016
patch: KILL
rank: 972
score: 97.22161102294922
patch: if null ;
rank: 972
score: 97.00731658935547
patch: return current ;
rank: 972
score: 96.85526529947917
patch: } else
rank: 972
score: 96.41970825195312
patch: / *
rank: 972
score: 95.44142150878906
patch: ret
rank: 973
score: 96.84159851074219
patch: return n }
rank: 973
score: 96.71751403808594
patch: return variable CaMeL
rank: 973
score: 96.60848999023438
patch: } ;
rank: 973
score: 96.40342203776042
patch: Assert .
rank: 973
score: 94.89124298095703
patch: result
rank: 974
score: 96.98432922363281
patch: / / }
rank: 974
score: 96.83590698242188
patch: state ( )
rank: 974
score: 96.69868469238281
patch: return Runtime CaMeL
rank: 974
score: 96.37870279947917
patch: code .
rank: 974
score: 94.54295349121094
patch: do
rank: 975
score: 96.98655700683594
patch: . break ;
rank: 975
score: 96.54256184895833
patch: n .
rank: 975
score: 96.37080891927083
patch: RHS .
rank: 975
score: 96.28769938151042
patch: this ;
rank: 975
score: 94.48096466064453
patch: tree
rank: 976
score: 97.21002197265625
patch: throw ) ;
rank: 976
score: 96.35933430989583
patch: Asserts .
rank: 976
score: 96.26001993815105
patch: continue KILL
rank: 976
score: 94.35497283935547
patch: v
rank: 977
score: 97.10828399658203
patch: return KILL )
rank: 977
score: 96.97883605957031
patch: += null ;
rank: 977
score: 96.94149780273438
patch: return BOTH ;
rank: 977
score: 96.79083251953125
patch: Cfg .
rank: 977
score: 96.34246826171875
patch: ret .
rank: 977
score: 96.28917439778645
patch: this .
rank: 977
score: 96.25789388020833
patch: else ;
rank: 977
score: 94.20305633544922
patch: code
rank: 978
score: 96.90548706054688
patch: String [ :
rank: 978
score: 96.32286580403645
patch: Not .
rank: 978
score: 96.20961507161458
patch: case null
rank: 978
score: 94.1823959350586
patch: node
rank: 979
score: 96.9371109008789
patch: return NAME ;
rank: 979
score: 96.90422058105469
patch: { break ;
rank: 979
score: 96.76807403564453
patch: return FUNCTION )
rank: 979
score: 96.30235799153645
patch: } }
rank: 979
score: 96.177490234375
patch: if null
rank: 979
score: 94.1751708984375
patch: expr
rank: 980
score: 96.93238067626953
patch: return consume ;
rank: 980
score: 96.91786193847656
patch: is CaMeL Variable
rank: 980
score: 96.85658264160156
patch: / * *
rank: 980
score: 96.50301106770833
patch: return n
rank: 980
score: 96.2916030883789
patch: return
rank: 980
score: 96.16837565104167
patch: case ;
rank: 980
score: 96.12842814127605
patch: do {
rank: 980
score: 94.07733917236328
patch: token
rank: 981
score: 97.17469024658203
patch: case null ;
rank: 981
score: 96.25106811523438
patch: for (
rank: 981
score: 96.15963745117188
patch: ; ;
rank: 981
score: 96.05641682942708
patch: context .
rank: 981
score: 93.96478271484375
patch: try
rank: 982
score: 93.95263671875
patch: buffer
rank: 983
score: 97.16128540039062
patch: if false ;
rank: 983
score: 96.78990681966145
patch: t .
rank: 983
score: 96.37636311848958
patch: break _
rank: 983
score: 96.20574951171875
patch: break :
rank: 983
score: 96.09743245442708
patch: ? ;
rank: 983
score: 96.0096944173177
patch: result ;
rank: 983
score: 93.87625122070312
patch: n
rank: 984
score: 97.15786743164062
patch: int * ;
rank: 984
score: 96.8983383178711
patch: / return ;
rank: 984
score: 96.46958414713542
patch: ret ;
rank: 984
score: 96.31117757161458
patch: break false
rank: 984
score: 96.1651611328125
patch: do .
rank: 984
score: 96.07688395182292
patch: layout .
rank: 984
score: 93.77812194824219
patch: parent
rank: 985
score: 96.89388275146484
patch: return GT ;
rank: 985
score: 96.0745340983073
patch: Liveness ;
rank: 985
score: 93.76727294921875
patch: }
rank: 986
score: 96.14731852213542
patch: state .
rank: 986
score: 95.98270670572917
patch: s .
rank: 986
score: 95.73428344726562
patch: ;
rank: 986
score: 93.66770935058594
patch: sb
rank: 987
score: 97.12939453125
patch: case 0 ;
rank: 987
score: 96.88005065917969
patch: return abs ;
rank: 987
score: 96.16731770833333
patch: break MAYBE
rank: 987
score: 96.12363688151042
patch: continue ?
rank: 987
score: 95.95492553710938
patch: result {
rank: 987
score: 95.33908081054688
patch: {
rank: 987
score: 93.66412353515625
patch: comp
rank: 988
score: 97.10616302490234
patch: int * *
rank: 988
score: 96.40854899088542
patch: return KILL
rank: 988
score: 96.09773763020833
patch: continue .
rank: 988
score: 95.91923014322917
patch: l .
rank: 988
score: 94.69404602050781
patch: ?
rank: 988
score: 93.63069152832031
patch: t
rank: 989
score: 96.1781514485677
patch: return null
rank: 989
score: 96.08444213867188
patch: Liveness .
rank: 989
score: 93.61338806152344
patch: block
rank: 990
score: 96.87568664550781
patch: else
rank: 990
score: 96.75604248046875
patch: cfw . ;
rank: 990
score: 96.21665445963542
patch: return variable
rank: 990
score: 96.08290608723958
patch: Entering .
rank: 990
score: 95.89133707682292
patch: cached .
rank: 990
score: 94.36807250976562
patch: layout
rank: 990
score: 93.5963363647461
patch: var
rank: 991
score: 96.25297037760417
patch: loop .
rank: 991
score: 96.04032389322917
patch: return READ
rank: 991
score: 95.94931030273438
patch: break left
rank: 991
score: 95.89010620117188
patch: e .
rank: 991
score: 93.5797119140625
patch: @
rank: 992
score: 96.1097412109375
patch: throw (
rank: 992
score: 95.91297912597656
patch: break
rank: 992
score: 94.27830505371094
patch: type
rank: 992
score: 93.54714965820312
patch: count
rank: 993
score: 96.2088114420573
patch: http :
rank: 993
score: 96.16737874348958
patch: z .
rank: 993
score: 95.78163655598958
patch: found .
rank: 993
score: 94.15560913085938
patch: text
rank: 994
score: 95.95100911458333
patch: throw new
rank: 994
score: 95.77927652994792
patch: head .
rank: 994
score: 95.19667053222656
patch: .
rank: 994
score: 94.14144134521484
patch: found
rank: 994
score: 93.495849609375
patch: dim
rank: 995
score: 96.01851399739583
patch: while ;
rank: 995
score: 94.81846618652344
patch: continue
rank: 995
score: 94.6457290649414
patch: --
rank: 995
score: 94.57695007324219
patch: throw
rank: 995
score: 93.47978210449219
patch: word
rank: 996
score: 94.01339721679688
patch: )
rank: 996
score: 93.46676635742188
patch: owner
rank: 997
score: 94.28524780273438
patch: _
rank: 997
score: 93.43917846679688
patch: list
rank: 998
score: 95.091552734375
patch: *
rank: 998
score: 94.25814819335938
patch: !
rank: 998
score: 94.1669692993164
patch: :
rank: 998
score: 93.98019409179688
patch: true
rank: 998
score: 93.3906478881836
patch: val
rank: 999
score: 94.59416198730469
patch: /
rank: 999
score: 93.38838958740234
patch: z
