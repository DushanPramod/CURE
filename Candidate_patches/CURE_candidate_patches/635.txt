rank: 1
score: 99.91637420654297
patch: out . write ( ch ) ;
rank: 1
score: 98.81303100585937
patch: get > i >
rank: 1
score: 98.4632568359375
patch: void
rank: 1
score: 98.30740356445312
patch: public public set
rank: 1
score: 98.0186055501302
patch: > i > i
rank: 1
score: 97.94493865966797
patch: public
rank: 2
score: 99.68320875901442
patch: out . write ( ch . to CaMeL String ( ) ;
rank: 2
score: 99.60120646158855
patch: void out ( ) ;
rank: 2
score: 99.59552001953125
patch: out . write . write ( ch ) ;
rank: 2
score: 99.56214735243056
patch: public out . write ( ch ) ;
rank: 2
score: 99.49700055803571
patch: out . write ( ) ;
rank: 2
score: 98.68965657552083
patch: get >
rank: 2
score: 98.39222717285156
patch: public Exception Exception
rank: 2
score: 98.26385498046875
patch: public public public
rank: 2
score: 97.91541544596355
patch: > length > i
rank: 3
score: 99.573974609375
patch: out . write ( ch ) throws IO CaMeL Exception ;
rank: 3
score: 99.54463958740234
patch: out . write ( value ) ;
rank: 3
score: 99.52581787109375
patch: out . write ( ch , ) ;
rank: 3
score: 99.49008517795139
patch: public out . write ( $STRING$ ) ;
rank: 3
score: 99.47956000434027
patch: out . write ( byte ch ) ;
rank: 3
score: 98.6547139485677
patch: for >
rank: 3
score: 98.22561645507812
patch: public Exception State
rank: 3
score: 98.20383707682292
patch: public public
rank: 3
score: 97.70977783203125
patch: get > i > i
rank: 3
score: 97.67153930664062
patch: public void
rank: 4
score: 99.51491873604911
patch: out . write ( ch . get CaMeL Bytes ( ) ) ;
rank: 4
score: 99.47752028245192
patch: out . write ( ch . get ( ch ) ) ;
rank: 4
score: 99.46210271661931
patch: out . write ( byte [ ] ch ) ;
rank: 4
score: 99.45365142822266
patch: out . write ( str ) ;
rank: 4
score: 98.60626831054688
patch: add > i >
rank: 4
score: 98.19259643554688
patch: public public add
rank: 4
score: 98.18339538574219
patch: public Exception null
rank: 4
score: 97.69107055664062
patch: > i > Index
rank: 4
score: 96.97113037109375
patch: protected
rank: 5
score: 99.50484212239583
patch: out . write ( ch ) throws IO CaMeL Exception {
rank: 5
score: 99.45994215745192
patch: out . write ( ch ) . write ( ch ) ;
rank: 5
score: 99.4517822265625
patch: out . write ( ch , 0 , ch . length ) ;
rank: 5
score: 99.4178466796875
patch: public void out ( ) ;
rank: 5
score: 98.59371948242188
patch: get > ]
rank: 5
score: 98.13404337565105
patch: public set
rank: 5
score: 98.05541229248047
patch: public null Exception
rank: 5
score: 97.65414428710938
patch: > catch >
rank: 5
score: 96.90570068359375
patch: public public void
rank: 6
score: 99.4754150390625
patch: out . write ( ch . get CaMeL Bytes ( int i ) ;
rank: 6
score: 99.44810133713942
patch: public out . write ( ch ) throws IO CaMeL Exception ;
rank: 6
score: 99.40442657470703
patch: out . write ( $STRING$ ) ;
rank: 6
score: 98.56467692057292
patch: add >
rank: 6
score: 98.06827545166016
patch: public synchronized <UNK>
rank: 6
score: 97.93401336669922
patch: public Exception Error
rank: 6
score: 97.64771728515625
patch: > i >
rank: 6
score: 96.89913940429688
patch: protected void
rank: 7
score: 99.46780734592014
patch: out out . write ( ch ) ;
rank: 7
score: 99.4326171875
patch: public abstract out . write ( ch ) ;
rank: 7
score: 99.37688598632812
patch: public out . write ( byte ch ) ;
rank: 7
score: 98.52600860595703
patch: private get >
rank: 7
score: 98.05670928955078
patch: public public get
rank: 7
score: 97.93199157714844
patch: public State State
rank: 7
score: 97.62884521484375
patch: > i > else
rank: 7
score: 96.87330118815105
patch: private void
rank: 8
score: 99.44778006417411
patch: out . write ( ch . to CaMeL String ( ) ) ;
rank: 8
score: 99.42329237196181
patch: void out . write ( ch ) ;
rank: 8
score: 99.41904703776042
patch: public out . write ( byte [ ] ch ) ;
rank: 8
score: 99.39608764648438
patch: public out . write ( ) ;
rank: 8
score: 98.45024108886719
patch: private for >
rank: 8
score: 98.04313659667969
patch: public public <UNK>
rank: 8
score: 97.90869140625
patch: public Exception
rank: 8
score: 97.62619018554688
patch: > catch > i
rank: 8
score: 96.86763000488281
patch: private
rank: 9
score: 99.43180629185268
patch: out . write . write ( ch ) throws IO CaMeL Exception ;
rank: 9
score: 99.41109466552734
patch: out . write ( name ) ;
rank: 9
score: 99.4036865234375
patch: out . write ( ch , int ch ) ;
rank: 9
score: 99.37736372514205
patch: out . write ( byte [ ] str ) ;
rank: 9
score: 99.35736083984375
patch: out . write ( ] ch ) ;
rank: 9
score: 98.402685546875
patch: private public get >
rank: 9
score: 98.0413818359375
patch: public add
rank: 9
score: 97.81865692138672
patch: public Exception Stack
rank: 9
score: 97.62540690104167
patch: > length > length
rank: 9
score: 96.54765319824219
patch: public synchronized void
rank: 10
score: 99.40027465820313
patch: public out . write ( String ch ) ;
rank: 10
score: 99.39158121744792
patch: public out . write ( ch ) throws IO CaMeL Exception
rank: 10
score: 99.35511474609375
patch: out . write ( ch ) ; ) ;
rank: 10
score: 98.375390625
patch: put > i >
rank: 10
score: 98.02339680989583
patch: public get
rank: 10
score: 97.81784057617188
patch: public Error Exception
rank: 10
score: 97.59220377604167
patch: catch > catch >
rank: 10
score: 96.43876139322917
patch: >
rank: 11
score: 99.43074798583984
patch: out . write ( ch ) {
rank: 11
score: 99.3995869954427
patch: out . write ( ch ) write ( ch ) ;
rank: 11
score: 99.38719831194196
patch: out . write ( ) throws out . write ( $STRING$ ) ;
rank: 11
score: 99.35415649414062
patch: out . write ( byte ) ;
rank: 11
score: 98.35740966796875
patch: get > arraycopy >
rank: 11
score: 98.02005004882812
patch: public public run
rank: 11
score: 97.70777893066406
patch: public State Stack
rank: 11
score: 97.58472696940105
patch: > catch > >
rank: 11
score: 96.43809509277344
patch: Null
rank: 12
score: 99.42464773995536
patch: out . write ( ch . get CaMeL Id ( ) ) ;
rank: 12
score: 99.38411458333333
patch: out . write ( String ch ) ;
rank: 12
score: 99.3528564453125
patch: out . write ( ch . ch ) ;
rank: 12
score: 99.34986572265625
patch: public out . write ( String str ) ;
rank: 12
score: 98.3543472290039
patch: private add >
rank: 12
score: 97.69956970214844
patch: public Exception Runtime
rank: 12
score: 97.57745361328125
patch: > size > i
rank: 12
score: 96.42575073242188
patch: public private void
rank: 13
score: 99.39171424278847
patch: out out . write ( ch ) throws IO CaMeL Exception ;
rank: 13
score: 99.38330950055804
patch: public out . write ( String ch ) throws IO CaMeL Exception ;
rank: 13
score: 99.34309217664931
patch: out . write ( ch ) ) ;
rank: 13
score: 99.3262469951923
patch: public out . write ( ch . get ( ch ) ;
rank: 13
score: 98.3412353515625
patch: for > i >
rank: 13
score: 97.98927307128906
patch: public public synchronized
rank: 13
score: 97.69381713867188
patch: public State null
rank: 13
score: 97.5711161295573
patch: > i catch >
rank: 13
score: 96.42366790771484
patch: public protected void
rank: 14
score: 99.38883150540866
patch: out . write ( ch . hash CaMeL Code ( ) ;
rank: 14
score: 99.38239080255681
patch: out . write ( ) throws IO CaMeL Exception ;
rank: 14
score: 99.3104756673177
patch: out . write ( ch . get ( ch ) ;
rank: 14
score: 98.34083251953125
patch: private public public public
rank: 14
score: 97.96844482421875
patch: public add >
rank: 14
score: 97.68232727050781
patch: out
rank: 14
score: 97.5511474609375
patch: > i
rank: 14
score: 96.38254801432292
patch: public Not
rank: 15
score: 99.38585611979167
patch: out . write ( ch . get CaMeL Input CaMeL Stream ( ) ;
rank: 15
score: 99.37407575334821
patch: out . write ( ) throws out . write ( ch ) ;
rank: 15
score: 99.32752990722656
patch: out . write ( out ) ;
rank: 15
score: 99.30897013346355
patch: public out . write ( char [ ] ch ) ;
rank: 15
score: 99.27272542317708
patch: public void write ( int str ) ;
rank: 15
score: 98.32239379882813
patch: private public add >
rank: 15
score: 97.9571762084961
patch: public public Stack
rank: 15
score: 97.6771240234375
patch: public Exception Null
rank: 15
score: 97.54759724934895
patch: clear > i > i
rank: 15
score: 96.35597229003906
patch: public abstract void
rank: 16
score: 99.37811279296875
patch: out . write ( ch . get CaMeL Name ( ) ) ;
rank: 16
score: 99.3709004720052
patch: out . write ( ch , ch . length ) ;
rank: 16
score: 99.32724609375
patch: public out . write ( ] ch ) ;
rank: 16
score: 99.30646430121527
patch: String . [ ] out ( ) ;
rank: 16
score: 99.26057739257813
patch: public synchronized out . write ( ch ) ;
rank: 16
score: 98.3070068359375
patch: get > Index
rank: 16
score: 97.91404724121094
patch: public public close
rank: 16
score: 97.60997772216797
patch: out State State
rank: 16
score: 97.5428466796875
patch: > length > ]
rank: 16
score: 96.33709716796875
patch: I
rank: 17
score: 99.3681640625
patch: out . write ( String ch ) throws IO CaMeL Exception ;
rank: 17
score: 99.32716200086806
patch: public out . write ( byte ) ;
rank: 17
score: 99.2463711825284
patch: public abstract out . write ( String ch ) ;
rank: 17
score: 98.3032455444336
patch: protected for >
rank: 17
score: 97.58123779296875
patch: public null null
rank: 17
score: 97.54065958658855
patch: > length > Index
rank: 17
score: 96.32838439941406
patch: public static void
rank: 18
score: 99.37239990234374
patch: out . write ( ch [ ] ) ;
rank: 18
score: 99.36270480685764
patch: out . write ( int ch ) ;
rank: 18
score: 99.29679048978366
patch: out . write ( value ) . write ( ch ) ;
rank: 18
score: 98.2970458984375
patch: private public for >
rank: 18
score: 97.88265991210938
patch: public run
rank: 18
score: 97.5752182006836
patch: private Exception Exception
rank: 18
score: 97.5333760579427
patch: catch > i >
rank: 19
score: 99.37128557477679
patch: out . write . write ( ch ) throws IO CaMeL Exception {
rank: 19
score: 99.29502516526442
patch: public out . write ( out . write ( ch ) ;
rank: 19
score: 99.23046875
patch: public out . write ( int str ) ;
rank: 19
score: 98.257373046875
patch: get > catch >
rank: 19
score: 97.82225036621094
patch: public public log
rank: 19
score: 97.54200744628906
patch: public null Error
rank: 19
score: 97.53036499023438
patch: > catch > else
rank: 19
score: 96.28880310058594
patch: protected public void
rank: 20
score: 99.36764962332589
patch: out . write ( ch . get CaMeL Value ( ) ) ;
rank: 20
score: 99.309423828125
patch: out . out . write ( ch ) ;
rank: 20
score: 99.29235229492187
patch: out . write ( ch + 1 ) ;
rank: 20
score: 99.230224609375
patch: public abstract out . write ( ) ;
rank: 20
score: 98.24879150390625
patch: private private get >
rank: 20
score: 97.53767395019531
patch: public Error null
rank: 20
score: 97.51528930664062
patch: > iterator > i
rank: 20
score: 96.25123596191406
patch: public public Not
rank: 21
score: 99.36320277622768
patch: out . write . ch . out . write ( ch ) ;
rank: 21
score: 99.35207693917411
patch: out . write ( ch ) out . write ( ch ) ;
rank: 21
score: 99.2969637784091
patch: out . write ( ch . write ( ) ;
rank: 21
score: 99.29042405348558
patch: out . write ( str ) . write ( ch ) ;
rank: 21
score: 99.22865804036458
patch: int out ( ) ;
rank: 21
score: 98.244140625
patch: add > ]
rank: 21
score: 97.77007293701172
patch: public public while
rank: 21
score: 97.52765655517578
patch: public null State
rank: 21
score: 97.5138916015625
patch: log > catch
rank: 21
score: 96.24568176269531
patch: Not
rank: 22
score: 99.28390502929688
patch: out . write ( ch ) . write ( ) ;
rank: 22
score: 99.2776870727539
patch: out . write ( ) ) ;
rank: 22
score: 99.22567313058036
patch: private void out ( ) ;
rank: 22
score: 98.2413330078125
patch: private protected get >
rank: 22
score: 97.74981689453125
patch: public public print
rank: 22
score: 97.50936889648438
patch: catch > length >
rank: 22
score: 96.23052215576172
patch: private public void
rank: 23
score: 99.34619954427083
patch: out out . write ( ch . to CaMeL String ( ) ) ;
rank: 23
score: 99.3378573330966
patch: out . write ( ch , ch . ) ;
rank: 23
score: 99.27557842548077
patch: out . write ( ch . to CaMeL Integer ( ) ;
rank: 23
score: 99.27274780273437
patch: out . write ( ch ) throws ) ;
rank: 23
score: 99.22269112723214
patch: public int out ( ) ;
rank: 23
score: 98.23080444335938
patch: private public public
rank: 23
score: 97.73775482177734
patch: public public boolean
rank: 23
score: 97.50839233398438
patch: @ Exception Exception
rank: 23
score: 97.48546346028645
patch: get > length > i
rank: 23
score: 96.20644124348958
patch: abstract void
rank: 24
score: 99.34255545479911
patch: out . write ( out . to CaMeL String ( ) ) ;
rank: 24
score: 99.33071899414062
patch: out . write ( byte [ ] ch , ) ;
rank: 24
score: 99.27529296875
patch: out . write ( ch . size ) ;
rank: 24
score: 99.27105034722223
patch: out . write ( ch ch ) ;
rank: 24
score: 99.2176513671875
patch: public static out . write ( String ch ) ;
rank: 24
score: 97.73717498779297
patch: public public private
rank: 24
score: 97.50028991699219
patch: out State Exception
rank: 24
score: 97.48128255208333
patch: > i > null
rank: 24
score: 96.1290283203125
patch: [ >
rank: 25
score: 99.34078979492188
patch: out . write ( ch ) { return ch ; }
rank: 25
score: 99.33049982244319
patch: out . write ( char ch [ ] ) ;
rank: 25
score: 99.26910400390625
patch: out . write ( ch . get ( ) ) ;
rank: 25
score: 99.26825629340277
patch: public out . write ( out ) ;
rank: 25
score: 99.20926513671876
patch: public void write ( final String ch ) ;
rank: 25
score: 98.2162353515625
patch: set > i >
rank: 25
score: 97.72306060791016
patch: public run >
rank: 25
score: 97.4986572265625
patch: public Error State
rank: 25
score: 97.46323649088542
patch: > next > i
rank: 25
score: 96.12446594238281
patch: fail > >
rank: 26
score: 99.33867536272321
patch: public out . write ( ch . get CaMeL Bytes ( ) ;
rank: 26
score: 99.26122436523437
patch: public out . write ( String name ) ;
rank: 26
score: 99.2493563565341
patch: public out . write ( ch ) throws ) ;
rank: 26
score: 99.20640733506944
patch: out . write ( byte str ) ;
rank: 26
score: 98.20829010009766
patch: get > i
rank: 26
score: 97.66727701822917
patch: public close
rank: 26
score: 97.48861694335938
patch: public Exception Not
rank: 26
score: 97.46225992838542
patch: > i > out
rank: 26
score: 96.11257934570312
patch: public is
rank: 27
score: 99.33812604631696
patch: public out . write ( int ch ) throws IO CaMeL Exception ;
rank: 27
score: 99.32515092329545
patch: out . write ( char [ ] ch ) ;
rank: 27
score: 99.25582885742188
patch: public out . write ( int [ ] ch ) ;
rank: 27
score: 99.24857788085937
patch: public out . write ( $STRING$ ) ) ;
rank: 27
score: 99.2057772549716
patch: out . write ( int str . length ) ;
rank: 27
score: 98.20276489257813
patch: run > i >
rank: 27
score: 97.65815734863281
patch: public public Thread
rank: 27
score: 97.47181701660156
patch: public Null Exception
rank: 27
score: 97.45252482096355
patch: > i > length
rank: 27
score: 96.10812377929688
patch: public void throws
rank: 28
score: 99.33720703125
patch: out . write ( ch . to CaMeL Char CaMeL Array ( ) ;
rank: 28
score: 99.31861572265625
patch: out . write ( ch , ch ) ;
rank: 28
score: 99.25355021158855
patch: public out . write ( String [ ] ch ) ;
rank: 28
score: 99.24241129557292
patch: public out . write ( str ) ;
rank: 28
score: 99.19769287109375
patch: int out . write ( ch ) ;
rank: 28
score: 98.20240478515625
patch: private public run >
rank: 28
score: 97.64958953857422
patch: public public int
rank: 28
score: 97.46537017822266
patch: public Error Error
rank: 28
score: 97.4474385579427
patch: > length > catch
rank: 28
score: 96.08740234375
patch: public new
rank: 29
score: 99.330712890625
patch: out . write ( ch . get CaMeL Bytes ( $STRING$ ) ) ;
rank: 29
score: 99.314404296875
patch: out . write ( ch , int ) ;
rank: 29
score: 99.2412353515625
patch: out . write ( ch . write ) ;
rank: 29
score: 99.19461822509766
patch: void out . write ( ) ;
rank: 29
score: 98.19998779296876
patch: protected public add >
rank: 29
score: 97.62545776367188
patch: public public Runnable
rank: 29
score: 97.4445088704427
patch: log > case catch
rank: 29
score: 97.42861938476562
patch: public Exception Runnable
rank: 29
score: 96.08059692382812
patch: Nullable
rank: 30
score: 99.33060128348214
patch: out . write ( ch ) throws ch . close ( ) ;
rank: 30
score: 99.31156412760417
patch: Object out . write ( ch ) ;
rank: 30
score: 99.24966195913461
patch: public void out ( ch . to CaMeL String ( ) ;
rank: 30
score: 99.24083251953125
patch: out . write ( ch , this ) ;
rank: 30
score: 99.19341486150569
patch: out . write ( byte [ ] value ) ;
rank: 30
score: 98.1985107421875
patch: remove > i >
rank: 30
score: 97.62526448567708
patch: public Stack
rank: 30
score: 97.44265747070312
patch: try > i > i
rank: 30
score: 97.42192840576172
patch: private Exception State
rank: 30
score: 96.07911682128906
patch: get
rank: 31
score: 99.32759312220982
patch: public synchronized out . write ( ch ) throws IO CaMeL Exception ;
rank: 31
score: 99.31068004261364
patch: out . write ( byte ch [ ] ) ;
rank: 31
score: 99.24554443359375
patch: public out . write ( byte [ ] out ) ;
rank: 31
score: 99.2378817471591
patch: public out . write ( byte $NUMBER$ ] ) ;
rank: 31
score: 99.19169108072917
patch: public void write ( String str ) ;
rank: 31
score: 98.1900634765625
patch: protected add >
rank: 31
score: 97.61965942382812
patch: public synchronized
rank: 31
score: 97.43672688802083
patch: add > i > i
rank: 31
score: 97.42108917236328
patch: out State null
rank: 31
score: 96.07868957519531
patch: $NUMBER$ >
rank: 32
score: 99.3245380108173
patch: out . write ( ch . get CaMeL Bytes ( ) ;
rank: 32
score: 99.3055752840909
patch: public abstract out . write ( int ch ) ;
rank: 32
score: 99.24295043945312
patch: out . write ( ch . clone ( ) ) ;
rank: 32
score: 99.22735595703125
patch: public out . write ( $STRING$ ) {
rank: 32
score: 99.19046359592014
patch: out . write ( byte [ ) ;
rank: 32
score: 98.185498046875
patch: do > i >
rank: 32
score: 97.60938262939453
patch: public set >
rank: 32
score: 97.4364013671875
patch: > catch > Index
rank: 32
score: 97.41761779785156
patch: private State State
rank: 32
score: 96.07289632161458
patch: public boolean
rank: 33
score: 99.32294170673077
patch: out out . write ( ch ) throws IO CaMeL Exception {
rank: 33
score: 99.30190805288461
patch: public out . write ( ch ) throws IO CaMeL Exception {
rank: 33
score: 99.2068359375
patch: out . write ( ch . out ) ;
rank: 33
score: 98.17987060546875
patch: get > ] >
rank: 33
score: 97.60589599609375
patch: public public protected
rank: 33
score: 97.43539428710938
patch: > i > catch
rank: 33
score: 97.40013122558594
patch: out null Exception
rank: 34
score: 99.30177525111607
patch: out . write ( ch ) ; ch . close ( ) ;
rank: 34
score: 99.23839314778645
patch: out . write ( ch . trim ( ) ) ;
rank: 34
score: 99.20284423828124
patch: out . write ( byte $NUMBER$ ] ) ;
rank: 34
score: 99.18931995738636
patch: out . write ( byte [ ] out ) ;
rank: 34
score: 98.16767883300781
patch: private run >
rank: 34
score: 97.58995056152344
patch: public synchronized public
rank: 34
score: 97.41712443033855
patch: catch > i case
rank: 34
score: 97.38958740234375
patch: public Exception err
rank: 35
score: 99.31881948617789
patch: out . write ( ch . char [ ] chars ) ;
rank: 35
score: 99.23727651742789
patch: out . append ( ch . to CaMeL String ( ) ;
rank: 35
score: 99.19957386363636
patch: out . write ( ch . write ch ) ;
rank: 35
score: 98.16486206054688
patch: protected public for >
rank: 35
score: 97.58917236328125
patch: public public try
rank: 35
score: 97.41328938802083
patch: set > i > i
rank: 35
score: 97.38105010986328
patch: public Runnable Exception
rank: 35
score: 96.03738403320312
patch: < <UNK> <UNK>
rank: 36
score: 99.31862229567308
patch: out . write ( ch , int ch . length ) ;
rank: 36
score: 99.29972330729167
patch: public out . write ( ) throws IO CaMeL Exception ;
rank: 36
score: 99.2369854266827
patch: write . write ( ch . to CaMeL String ( ) ;
rank: 36
score: 99.1937588778409
patch: public out . write ( ch . ch ) ;
rank: 36
score: 99.18647003173828
patch: int out . write ( ) ;
rank: 36
score: 98.16386108398437
patch: has > i >
rank: 36
score: 97.57316589355469
patch: out >
rank: 36
score: 97.41168212890625
patch: > arraycopy > >
rank: 36
score: 97.38078308105469
patch: out null State
rank: 36
score: 95.96817016601562
patch: protected synchronized void
rank: 37
score: 99.2977066040039
patch: public out . write ( ch )
rank: 37
score: 99.23555501302083
patch: final out . write ( ch ) ;
rank: 37
score: 99.19331665039063
patch: out . write ( ch . ( ) ;
rank: 37
score: 99.18635389539931
patch: public void write ( String ch ) ;
rank: 37
score: 98.15106201171875
patch: protected get >
rank: 37
score: 97.56723022460938
patch: public public next
rank: 37
score: 97.40974934895833
patch: catch > arraycopy >
rank: 37
score: 97.37281036376953
patch: protected Exception Exception
rank: 37
score: 95.95482635498047
patch: > >
rank: 38
score: 99.31820242745536
patch: out . write ( ch [ ] ) throws IO CaMeL Exception ;
rank: 38
score: 99.2976806640625
patch: public out . write ( int ch ) ;
rank: 38
score: 99.23480224609375
patch: String out . write ( ch ) ;
rank: 38
score: 99.19215223524306
patch: public out . write ( this ) ;
rank: 38
score: 98.14345703125
patch: println > i >
rank: 38
score: 97.56291198730469
patch: public public for
rank: 38
score: 97.40470377604167
patch: > exit > i
rank: 38
score: 97.36817169189453
patch: public State Exception
rank: 38
score: 95.94313049316406
patch: private synchronized void
rank: 39
score: 99.31797960069444
patch: public out . write ( ch ) {
rank: 39
score: 99.29340955946181
patch: out . write ( char ch ) ;
rank: 39
score: 99.234033203125
patch: out . write ( ch . length ) ;
rank: 39
score: 99.18494262695313
patch: public out . write ( String str ) {
rank: 39
score: 99.17256303267045
patch: write ( ) out . write ( ch ) ;
rank: 39
score: 98.14284057617188
patch: protected public get >
rank: 39
score: 97.55277252197266
patch: public public remove
rank: 39
score: 97.39229329427083
patch: put > i > i
rank: 39
score: 97.35919952392578
patch: private Exception null
rank: 39
score: 95.9283218383789
patch: encode > >
rank: 40
score: 99.31658935546875
patch: public out . write ( long ch ) throws IO CaMeL Exception ;
rank: 40
score: 99.28945922851562
patch: out . write ( out . write ( ch ) ;
rank: 40
score: 99.22415865384616
patch: out . write ( ch . char [ ] ch ) ;
rank: 40
score: 99.17619977678571
patch: protected void out ( ) ;
rank: 40
score: 99.16745827414773
patch: out . write ( ch . ( ) ) ;
rank: 40
score: 98.14044189453125
patch: get > out >
rank: 40
score: 97.5435791015625
patch: public public is
rank: 40
score: 97.38956705729167
patch: catch > > i
rank: 40
score: 97.35563659667969
patch: public Runnable State
rank: 41
score: 99.31627546037946
patch: out . write ( ch )
rank: 41
score: 99.28943980823864
patch: public void out ( ) throws IO CaMeL Exception ;
rank: 41
score: 99.1761474609375
patch: void out ( out ) ;
rank: 41
score: 99.16190185546876
patch: out . write ( byte ch ch ) ;
rank: 41
score: 98.13981628417969
patch: protected public public
rank: 41
score: 97.53903198242188
patch: public try >
rank: 41
score: 97.38668823242188
patch: log > catch >
rank: 41
score: 97.35127258300781
patch: private null Exception
rank: 41
score: 95.91973876953125
patch: static void
rank: 42
score: 99.3116963704427
patch: public abstract out . write . write ( ch ) ;
rank: 42
score: 99.22384033203124
patch: out . write ( ch + $STRING$ ) ;
rank: 42
score: 99.15280151367188
patch: out . write ( chars ) ;
rank: 42
score: 98.11043090820313
patch: protected public public public
rank: 42
score: 97.52980041503906
patch: public private <UNK>
rank: 42
score: 97.38527425130208
patch: catch > i catch
rank: 42
score: 97.3289794921875
patch: public Runtime Exception
rank: 42
score: 95.9052734375
patch: public final void
rank: 43
score: 99.31153971354166
patch: public out . write . write ( ch ) throws IO CaMeL Exception ;
rank: 43
score: 99.28620062934027
patch: synchronized out . write ( ch ) ;
rank: 43
score: 99.22350056966145
patch: void out ( ch . to CaMeL String ( ) ;
rank: 43
score: 99.17310248480902
patch: out . write ( String str ) ;
rank: 43
score: 99.14956665039062
patch: public out . write ( ch ) ) ;
rank: 43
score: 98.08680419921875
patch: private public put >
rank: 43
score: 97.529296875
patch: public public System
rank: 43
score: 97.38272094726562
patch: > i case >
rank: 43
score: 97.32891082763672
patch: public Exception IO
rank: 43
score: 95.89998372395833
patch: Properties )
rank: 44
score: 99.27684607872597
patch: out . write ( ) throws out . write ( ) ;
rank: 44
score: 99.2190673828125
patch: public out . write ( Object ch ) ;
rank: 44
score: 99.17100016276042
patch: private out . write ( ch ) ;
rank: 44
score: 99.14912109375
patch: public out . write ( byte 1 ) ;
rank: 44
score: 98.08585357666016
patch: put > ]
rank: 44
score: 97.52903747558594
patch: public private public
rank: 44
score: 97.38019409179688
patch: > i case
rank: 44
score: 97.3136215209961
patch: public Exception Illegal
rank: 44
score: 95.87180582682292
patch: make >
rank: 45
score: 99.30727914663461
patch: protected out . write ( ch ) throws IO CaMeL Exception ;
rank: 45
score: 99.27564348493304
patch: public out . write ( String str ) throws IO CaMeL Exception ;
rank: 45
score: 99.217041015625
patch: private out . write ( byte [ ] ch ) ;
rank: 45
score: 99.14869273792614
patch: out . write ( out . write ( ) ;
rank: 45
score: 98.07733154296875
patch: private public
rank: 45
score: 97.52366638183594
patch: public public if
rank: 45
score: 97.37947591145833
patch: log > case else
rank: 45
score: 97.30088806152344
patch: protected State State
rank: 45
score: 95.86875406901042
patch: synchronized void
rank: 46
score: 99.306494140625
patch: out . write ( ch . clone ( ) throws IO CaMeL Exception ;
rank: 46
score: 99.16904994419643
patch: public void out ( ) {
rank: 46
score: 99.14300537109375
patch: out . write ( ch + ch ) ;
rank: 46
score: 98.07205200195312
patch: synchronized get >
rank: 46
score: 97.50621795654297
patch: public get >
rank: 46
score: 97.3730977376302
patch: catch > i ++
rank: 46
score: 97.27541097005208
patch: public Error
rank: 47
score: 99.30577674278847
patch: private out . write ( ch ) throws IO CaMeL Exception ;
rank: 47
score: 99.27346462673611
patch: out . write ( ch ) ; ;
rank: 47
score: 99.1427889737216
patch: public out . write ( ch . out ) ;
rank: 47
score: 98.07049560546875
patch: protected public run >
rank: 47
score: 97.49217987060547
patch: public static <UNK>
rank: 47
score: 97.36732991536458
patch: > i > case
rank: 47
score: 97.27381896972656
patch: public Exception catch
rank: 48
score: 99.30498860677083
patch: out . write ( ch ) { out . write ( ch ) ;
rank: 48
score: 99.27293043870192
patch: public out . write ( String ch ) throws IO CaMeL Exception
rank: 48
score: 99.16758422851562
patch: out . write ( byte str ch ) ;
rank: 48
score: 99.14267578125
patch: public out . write ( Float ch ) ;
rank: 48
score: 98.06594848632812
patch: get > >
rank: 48
score: 97.47667694091797
patch: public public check
rank: 48
score: 97.36655680338542
patch: > i > arraycopy
rank: 48
score: 97.25398254394531
patch: / State Exception
rank: 48
score: 95.83177185058594
patch: map >
rank: 49
score: 99.3022216796875
patch: public final out . write ( ch . get CaMeL Bytes ( ) ;
rank: 49
score: 99.2729159268466
patch: out . write ( ch , - 1 ) ;
rank: 49
score: 99.21243286132812
patch: String . [ ] out ( ch ) ;
rank: 49
score: 99.16447230747768
patch: void out ( ch ) ;
rank: 49
score: 99.14213423295455
patch: public out . out . write ( ch ) ;
rank: 49
score: 98.06502075195313
patch: get > next >
rank: 49
score: 97.47666931152344
patch: public public String
rank: 49
score: 97.35652669270833
patch: > catch > catch
rank: 49
score: 97.25155639648438
patch: out State Stack
rank: 49
score: 95.83047485351562
patch: public void {
rank: 50
score: 99.30059814453125
patch: out . write . write . ch ( ch ) ;
rank: 50
score: 99.26761627197266
patch: out . write ( ch , ;
rank: 50
score: 99.20978252704327
patch: public out . write ( ch . write [ ] ) ;
rank: 50
score: 99.16357421875
patch: out . write ( char [ ] str ) ;
rank: 50
score: 99.14177911931819
patch: public out . write ( $STRING$ ) throws ) ;
rank: 50
score: 98.04814453125
patch: get > finally >
rank: 50
score: 97.47629801432292
patch: public while
rank: 50
score: 97.34783935546875
patch: clear > length > i
rank: 50
score: 97.24954223632812
patch: public null
rank: 50
score: 95.83004760742188
patch: private abstract void
rank: 51
score: 99.29652506510416
patch: out out . write ( ch . get CaMeL Bytes ( ) ) ;
rank: 51
score: 99.16303846571181
patch: out . write ( byte ( ) ;
rank: 51
score: 99.13750542534723
patch: out . write ( ch out ) ;
rank: 51
score: 98.04591064453125
patch: update > i >
rank: 51
score: 97.346435546875
patch: > i > >
rank: 51
score: 97.24311065673828
patch: public Runnable null
rank: 51
score: 95.82942199707031
patch: protected abstract void
rank: 52
score: 99.29644775390625
patch: out . write . ch . write ( ch ) ;
rank: 52
score: 99.26236979166667
patch: public void out ( ch ) throws IO CaMeL Exception ;
rank: 52
score: 99.20526592548077
patch: out . write ( ch . to CaMeL Object ( ) ;
rank: 52
score: 99.13433283025569
patch: out . write ( ch ) ; } ) ;
rank: 52
score: 98.0412353515625
patch: add > arraycopy >
rank: 52
score: 97.47319030761719
patch: public synchronized get
rank: 52
score: 97.34279378255208
patch: get > i > Index
rank: 52
score: 97.24211120605469
patch: public Error Stack
rank: 52
score: 95.8239517211914
patch: run >
rank: 53
score: 99.29579380580357
patch: out . write ( ch . get CaMeL Length ( ) ) ;
rank: 53
score: 99.2618408203125
patch: public out . write ( ) throws out . write ( ) ;
rank: 53
score: 99.16178131103516
patch: public int write ( ch ) ;
rank: 53
score: 99.13337707519531
patch: write . write ( ch ) ;
rank: 53
score: 98.04007568359376
patch: protected protected get >
rank: 53
score: 97.46939086914062
patch: public public append
rank: 53
score: 97.33628336588542
patch: > length > size
rank: 53
score: 97.24179077148438
patch: out null null
rank: 53
score: 95.81339518229167
patch: public Illegal
rank: 54
score: 99.294189453125
patch: public abstract out . write ( ch [ ] ) ;
rank: 54
score: 99.2606201171875
patch: public out . write ( ch , ) ;
rank: 54
score: 99.20356889204545
patch: out . write ( ch . get . ) ;
rank: 54
score: 99.16077769886364
patch: out . write ( byte [ ] chars ) ;
rank: 54
score: 99.13300432477679
patch: out . write ( ch ;
rank: 54
score: 98.03607177734375
patch: protected private get >
rank: 54
score: 97.4638671875
patch: public finally >
rank: 54
score: 97.33359781901042
patch: catch > > else
rank: 54
score: 97.23148345947266
patch: public Exception Thread
rank: 54
score: 95.81161499023438
patch: iterator >
rank: 55
score: 99.29343872070312
patch: public synchronized out . write ( ch ) {
rank: 55
score: 99.2596768465909
patch: public out . write . write ( ch ) ;
rank: 55
score: 99.13099500868056
patch: out . write ( byte 1 ) ;
rank: 55
score: 98.02306518554687
patch: try > i >
rank: 55
score: 97.44833374023438
patch: Buffer
rank: 55
score: 97.33118896484375
patch: catch > >
rank: 55
score: 97.22600555419922
patch: public Exception run
rank: 56
score: 99.2926737467448
patch: out . write ( ch . write ( ch ) ;
rank: 56
score: 99.2569580078125
patch: out . write ( char ) ;
rank: 56
score: 99.20139567057292
patch: out . write ( ch . char [ ] ) ;
rank: 56
score: 99.15800258091518
patch: public int write ( ) ;
rank: 56
score: 98.0215072631836
patch: private put >
rank: 56
score: 97.44829559326172
patch: public synchronized set
rank: 56
score: 97.32204182942708
patch: initialize > i > i
rank: 56
score: 97.22540283203125
patch: public Exception Out
rank: 56
score: 95.8034159342448
patch: public Null
rank: 57
score: 99.2924072265625
patch: out . write ( ch . out . to CaMeL String ( ) ;
rank: 57
score: 99.14940795898437
patch: public abstract out . write ( $STRING$ ) ;
rank: 57
score: 98.02063598632813
patch: private synchronized get >
rank: 57
score: 97.43405151367188
patch: public protected public
rank: 57
score: 97.32171630859375
patch: > i > ++
rank: 57
score: 97.2145284016927
patch: out State
rank: 57
score: 95.79652404785156
patch: protected private void
rank: 58
score: 99.29186139787946
patch: public out . write ( int ch ) throws IO CaMeL Exception {
rank: 58
score: 99.25422807173295
patch: public out . write ( byte [ ] ch )
rank: 58
score: 99.12858072916667
patch: . out . write ( ch ) ;
rank: 58
score: 98.01913452148438
patch: add > >
rank: 58
score: 97.43209838867188
patch: public final <UNK>
rank: 58
score: 97.31971232096355
patch: > length > null
rank: 58
score: 97.20964813232422
patch: / null Exception
rank: 58
score: 95.78108215332031
patch: name >
rank: 59
score: 99.28975132533482
patch: out . write ( ch [ ] ) throws IO CaMeL Exception {
rank: 59
score: 99.14659288194444
patch: public void write ( int ch ) ;
rank: 59
score: 99.12815163352273
patch: public out . write ( byte ch ch ) ;
rank: 59
score: 98.01419677734376
patch: private get > >
rank: 59
score: 97.42729187011719
patch: public public put
rank: 59
score: 97.3191426595052
patch: > i > size
rank: 59
score: 97.20677185058594
patch: public null Null
rank: 59
score: 95.77784729003906
patch: while > >
rank: 60
score: 99.19800743689903
patch: out . write ( ch . get CaMeL Name ( ) ;
rank: 60
score: 99.146240234375
patch: void out ( ) . write ( ch ) ;
rank: 60
score: 98.00963745117187
patch: protected get > ]
rank: 60
score: 97.42280578613281
patch: public private get
rank: 60
score: 97.31493123372395
patch: catch > case >
rank: 60
score: 97.20663452148438
patch: public State Runtime
rank: 61
score: 99.19749866832386
patch: out . write ( ch [ 0 ] ) ;
rank: 61
score: 99.12627563476562
patch: public final out . write ( ch ) ;
rank: 61
score: 97.98377990722656
patch: synchronized for >
rank: 61
score: 97.41744232177734
patch: public private set
rank: 61
score: 97.313720703125
patch: > catch > null
rank: 61
score: 97.20524597167969
patch: public public Exception
rank: 61
score: 95.7649917602539
patch: protected protected void
rank: 62
score: 99.28712815504808
patch: out . write ( ch . get CaMeL Buffer ( ) ;
rank: 62
score: 99.24842325846355
patch: public out . write ( char ch [ ] ) ;
rank: 62
score: 99.14237670898437
patch: public static out . write ( ch ) ;
rank: 62
score: 99.12291370738636
patch: public out . write ( byte $NUMBER$ ] ) {
rank: 62
score: 97.98223266601562
patch: private protected for >
rank: 62
score: 97.41658020019531
patch: public public long
rank: 62
score: 97.31028238932292
patch: add > length > i
rank: 62
score: 97.2027816772461
patch: private Exception Error
rank: 62
score: 95.75502014160156
patch: private private void
rank: 63
score: 99.2829833984375
patch: out . write ( ch . get CaMeL Output CaMeL Stream ( ) ;
rank: 63
score: 99.23859112079327
patch: out . write ( byte [ ] ch , int ) ;
rank: 63
score: 99.19560102982955
patch: public static out . write ( int ch ) ;
rank: 63
score: 99.12089399857955
patch: out . write ( byte ( ] ch ) ;
rank: 63
score: 97.98052978515625
patch: get > arraycopy
rank: 63
score: 97.41575622558594
patch: public public register
rank: 63
score: 97.30794270833333
patch: > length > case
rank: 63
score: 97.1913833618164
patch: out null >
rank: 64
score: 99.282373046875
patch: out . write ( ch . out . write ( $STRING$ ) ) ;
rank: 64
score: 99.19130295973558
patch: out . write ( ch ) out . write ( ) ;
rank: 64
score: 99.13922729492188
patch: public out . write ( String ch ) {
rank: 64
score: 99.1196533203125
patch: public out . write ( byte ch ) {
rank: 64
score: 97.97960815429687
patch: private protected add >
rank: 64
score: 97.40983581542969
patch: public public starts
rank: 64
score: 97.30113728841145
patch: > length > else
rank: 64
score: 97.18806457519531
patch: private null State
rank: 65
score: 99.28235677083333
patch: out . write ( ch ) ; out . write ( ch ) ;
rank: 65
score: 99.19109637920673
patch: out . write ( ch . to CaMeL Boolean ( ) ;
rank: 65
score: 99.137939453125
patch: private out . write ( ) ;
rank: 65
score: 97.97898864746094
patch: println > ]
rank: 65
score: 97.39066314697266
patch: public public static
rank: 65
score: 97.29805908203124
patch: > arraycopy >
rank: 65
score: 97.16432189941406
patch: public $STRING$ Exception
rank: 65
score: 95.74026489257812
patch: public delete
rank: 66
score: 99.28036063058036
patch: @ Override out . write ( ch ) throws IO CaMeL Exception ;
rank: 66
score: 99.23326526988636
patch: . . . out . write ( ch ) ;
rank: 66
score: 99.1903076171875
patch: public static out . write ( byte [ ] ch ) ;
rank: 66
score: 99.1174087524414
patch: out . write ( write ) ;
rank: 66
score: 97.97371215820313
patch: private add > >
rank: 66
score: 97.38925170898438
patch: public void <UNK>
rank: 66
score: 97.29482014973958
patch: > catch > length
rank: 66
score: 97.16018676757812
patch: public Runtime State
rank: 66
score: 95.7313944498698
patch: public private
rank: 67
score: 99.279345703125
patch: out . write ( ch . intern ( ) throws IO CaMeL Exception ;
rank: 67
score: 99.23310546875
patch: public out . write ( ch . ) ;
rank: 67
score: 99.1278963955966
patch: int . . out . write ( ch ) ;
rank: 67
score: 99.11610921223958
patch: out . write ( ch ) ; .
rank: 67
score: 97.96968994140624
patch: add > catch >
rank: 67
score: 97.37901306152344
patch: public Stack <UNK>
rank: 67
score: 97.29198201497395
patch: write > i > i
rank: 67
score: 97.15695190429688
patch: protected null Exception
rank: 67
score: 95.72727966308594
patch: private protected void
rank: 68
score: 99.27760532924107
patch: public out . write ( char ch ) throws IO CaMeL Exception ;
rank: 68
score: 99.23229041466347
patch: out . write ( ch . write ( ch ) ) ;
rank: 68
score: 99.1849365234375
patch: public out . write ( String value ) ;
rank: 68
score: 99.12587668678977
patch: public static out . write ( String str ) ;
rank: 68
score: 99.1158114346591
patch: out . write ( ch ) ; ) ) ;
rank: 68
score: 97.9678466796875
patch: private get > ]
rank: 68
score: 97.36585998535156
patch: public public !
rank: 68
score: 97.284912109375
patch: for > i > i
rank: 68
score: 97.15419514973958
patch: private Exception
rank: 69
score: 99.27396065848214
patch: out . write ( ch . get CaMeL Buffer ( ) ) ;
rank: 69
score: 99.23176879882813
patch: public void out . write ( ch ) ;
rank: 69
score: 99.18234252929688
patch: out . write ( ch . equals ( ch ) ;
rank: 69
score: 99.12574351917614
patch: public out . write ( System . out ) ;
rank: 69
score: 99.11207164417614
patch: public out . write ( byte [ ] ) ;
rank: 69
score: 97.96581420898437
patch: on > i >
rank: 69
score: 97.36328125
patch: public log >
rank: 69
score: 97.28035481770833
patch: catch > > Index
rank: 69
score: 97.15237426757812
patch: protected Exception State
rank: 69
score: 95.72145589192708
patch: public protected
rank: 70
score: 99.2736083984375
patch: out . write ( ch ) throws out . write ( ch ) ;
rank: 70
score: 99.22832641601562
patch: @ Override out . write ( ch ) ;
rank: 70
score: 99.1806640625
patch: String . [ ] out . write ( ch ) ;
rank: 70
score: 99.10877227783203
patch: public out . write ( ) {
rank: 70
score: 97.96495361328125
patch: get > length >
rank: 70
score: 97.3560791015625
patch: public public double
rank: 70
score: 97.27768961588542
patch: > arraycopy > i
rank: 70
score: 97.150634765625
patch: public null Runtime
rank: 70
score: 95.71974182128906
patch: public abstract <UNK>
rank: 71
score: 99.27302769252232
patch: out . write ( ch ) throws out . close ( ) ;
rank: 71
score: 99.22419877485795
patch: out . write ( ch , int length ) ;
rank: 71
score: 99.17987060546875
patch: out . write ( ( byte [ ] ch ) ;
rank: 71
score: 99.10666232638889
patch: protected out . write ( ch ) ;
rank: 71
score: 97.96024169921876
patch: Default > arraycopy >
rank: 71
score: 97.35162353515625
patch: public public catch
rank: 71
score: 97.27500406901042
patch: > catch > arraycopy
rank: 71
score: 97.14881896972656
patch: public null Not
rank: 71
score: 95.71724446614583
patch: public long
rank: 72
score: 99.27142888849431
patch: out . write ( ch . trim ( ) ;
rank: 72
score: 99.22067599826389
patch: out . write ( ( ch ) ;
rank: 72
score: 99.17901611328125
patch: out . write ( ch , ch . size ) ;
rank: 72
score: 99.12489013671875
patch: private out . write ( String str ) ;
rank: 72
score: 97.95968627929688
patch: add > out >
rank: 72
score: 97.34994506835938
patch: arraycopy >
rank: 72
score: 97.27451578776042
patch: if > i > i
rank: 72
score: 97.14592742919922
patch: public Null null
rank: 72
score: 95.71620686848958
patch: public IO
rank: 73
score: 99.27079264322917
patch: public abstract out . write ( ch . get CaMeL Bytes ( ) ;
rank: 73
score: 99.17696439302884
patch: private out . write ( ch . get ( ch ) ;
rank: 73
score: 99.12448120117188
patch: private out . write ( String ch ) ;
rank: 73
score: 99.1014404296875
patch: public ) out . write ( ch ) ;
rank: 73
score: 97.9552734375
patch: add > ] >
rank: 73
score: 97.34736633300781
patch: public public finally
rank: 73
score: 97.27025349934895
patch: set > length > i
rank: 73
score: 97.14479064941406
patch: @ null Exception
rank: 73
score: 95.71601867675781
patch: public protected Not
rank: 74
score: 99.27060171274039
patch: out . write ( ch . char [ ] str ) ;
rank: 74
score: 99.22035725911458
patch: out . write ( char [ ] ch , ) ;
rank: 74
score: 99.17622884114583
patch: public out . write ( name ) ;
rank: 74
score: 99.10108100043402
patch: public out . write ( ch ) throws
rank: 74
score: 97.95156860351562
patch: put > ] >
rank: 74
score: 97.33987426757812
patch: public log
rank: 74
score: 97.2698262532552
patch: > catch > case
rank: 74
score: 97.14381408691406
patch: private null null
rank: 74
score: 95.705078125
patch: void <UNK>
rank: 75
score: 99.26913016183036
patch: out . write ( ch . get CaMeL Message ( ) ) ;
rank: 75
score: 99.21942693536931
patch: out . write ( ch , int i ) ;
rank: 75
score: 99.12200927734375
patch: public void write ( ch ) ;
rank: 75
score: 99.09972381591797
patch: out . write ( this ) ;
rank: 75
score: 97.95079345703125
patch: read > i >
rank: 75
score: 97.33786010742188
patch: public public State
rank: 75
score: 97.26539103190105
patch: > length catch >
rank: 75
score: 97.139404296875
patch: protected Exception null
rank: 75
score: 95.70436096191406
patch: public public Null
rank: 76
score: 99.26876395089286
patch: public out . write ( ch . get CaMeL Bytes ( ) {
rank: 76
score: 99.21904962713069
patch: out . write ( ch , int count ) ;
rank: 76
score: 99.12162642045455
patch: boolean . . out . write ( ch ) ;
rank: 76
score: 99.09670188210227
patch: out . write ( byte $NUMBER$ ] ch ) ;
rank: 76
score: 97.33701578776042
patch: public print
rank: 76
score: 97.26332600911458
patch: > length > arraycopy
rank: 76
score: 97.13072204589844
patch: void State State
rank: 76
score: 95.70409138997395
patch: public to
rank: 77
score: 99.26727701822917
patch: out . write ( ch . get CaMeL Bytes ( ch ) ) ;
rank: 77
score: 99.2159932454427
patch: out . write ( byte ) throws IO CaMeL Exception ;
rank: 77
score: 99.1750996907552
patch: public out . write ( float [ ] ch ) ;
rank: 77
score: 99.12139892578125
patch: public void out ( out ) ;
rank: 77
score: 99.09518093532986
patch: public out . write ( ) { ;
rank: 77
score: 97.94462890625
patch: clear > i >
rank: 77
score: 97.33658599853516
patch: public protected <UNK>
rank: 77
score: 97.26193237304688
patch: try > length > i
rank: 77
score: 97.1288833618164
patch: public Null Error
rank: 77
score: 95.70265197753906
patch: drop > >
rank: 78
score: 99.26640181107955
patch: out . write ( ch . intern ( ) ;
rank: 78
score: 99.11942749023437
patch: void out . write ( String str ) ;
rank: 78
score: 99.09409005301339
patch: write ( ] ch ) ;
rank: 78
score: 97.9422607421875
patch: append > i >
rank: 78
score: 97.33113098144531
patch: public protected set
rank: 78
score: 97.26129150390625
patch: > catch > out
rank: 78
score: 97.1238505045573
patch: void State
rank: 78
score: 95.7010498046875
patch: public synchronized Not
rank: 79
score: 99.26600999098558
patch: out . write ( ch . get CaMeL Length ( ) ;
rank: 79
score: 99.17283935546875
patch: out . write ( ch + 0 ) ;
rank: 79
score: 97.93992614746094
patch: add > i
rank: 79
score: 97.33102416992188
patch: public public do
rank: 79
score: 97.25232950846355
patch: > i > ]
rank: 79
score: 97.12249755859375
patch: public Exception Unsupported
rank: 79
score: 95.70104217529297
patch: println > >
rank: 80
score: 99.26540305397727
patch: out . write ( ch ) throws IO CaMeL Exception
rank: 80
score: 99.1722920735677
patch: out . write ( ch + $STRING$ + ch ) ;
rank: 80
score: 99.11798773871527
patch: public synchronized out . write ( ) ;
rank: 80
score: 99.08748779296874
patch: out . write ( out . ch ) ;
rank: 80
score: 97.93792724609375
patch: add > Index
rank: 80
score: 97.329833984375
patch: public public Object
rank: 80
score: 97.25222778320312
patch: > i > err
rank: 80
score: 97.12046813964844
patch: public State err
rank: 80
score: 95.69911193847656
patch: Map
rank: 81
score: 99.2650390625
patch: out . write ( Char CaMeL Sequence ch ) throws IO CaMeL Exception ;
rank: 81
score: 99.21111591045673
patch: out . write ( int ch ) throws IO CaMeL Exception ;
rank: 81
score: 99.1710205078125
patch: public out . write ( String int 1 ) ;
rank: 81
score: 99.0869140625
patch: public out . write ( $STRING$ ) { ;
rank: 81
score: 97.9379150390625
patch: protected get > catch
rank: 81
score: 97.32594299316406
patch: public public current
rank: 81
score: 97.25099690755208
patch: > i != i
rank: 81
score: 97.11725616455078
patch: public Exception out
rank: 82
score: 99.2647235576923
patch: private out . write ( ch ) throws IO CaMeL Exception {
rank: 82
score: 99.21079664963942
patch: out . write ( String str ) throws IO CaMeL Exception ;
rank: 82
score: 99.11756591796875
patch: public abstract out . write ( out ) ;
rank: 82
score: 99.08327026367188
patch: public out . write ( long ch ) ;
rank: 82
score: 97.93660888671874
patch: private private for >
rank: 82
score: 97.32510375976562
patch: Set public <UNK>
rank: 82
score: 97.24240112304688
patch: > length >
rank: 82
score: 97.11162567138672
patch: public Null State
rank: 82
score: 95.68072509765625
patch: public public new
rank: 83
score: 99.26436941964286
patch: public out . write ( String ch ) throws IO CaMeL Exception {
rank: 83
score: 99.21059945913461
patch: out . write ( ch , ) throws IO CaMeL Exception ;
rank: 83
score: 99.16855197482639
patch: boolean out . write ( ch ) ;
rank: 83
score: 99.11699676513672
patch: public abstract void out ( ) ;
rank: 83
score: 99.07851340553977
patch: out . write ( ch . . ch ) ;
rank: 83
score: 97.93357543945312
patch: synchronized get > catch
rank: 83
score: 97.32386016845703
patch: public boolean <UNK>
rank: 83
score: 97.2403564453125
patch: > i > Stack
rank: 83
score: 97.11148071289062
patch: public Exception arraycopy
rank: 83
score: 95.67981974283855
patch: public equals
rank: 84
score: 99.2637469951923
patch: out . write ( long ch ) throws IO CaMeL Exception ;
rank: 84
score: 99.21007361778847
patch: public out . write ( byte ) throws IO CaMeL Exception ;
rank: 84
score: 99.16814716045673
patch: out . write ( ch . to CaMeL String ch ) ;
rank: 84
score: 99.1150390625
patch: out . write ( byte ( ch ) ;
rank: 84
score: 97.9288330078125
patch: protected get > Index
rank: 84
score: 97.3216781616211
patch: public abstract get
rank: 84
score: 97.2315673828125
patch: > length > out
rank: 84
score: 97.10626220703125
patch: @ Exception null
rank: 84
score: 95.67906188964844
patch: protected static void
rank: 85
score: 99.26370239257812
patch: write . write ( ch ) throws IO CaMeL Exception ;
rank: 85
score: 99.20973036024306
patch: out . write ( ch . ) ;
rank: 85
score: 99.16611735026042
patch: protected out . write ( byte [ ] ch ) ;
rank: 85
score: 99.113916015625
patch: void out . write ( byte ch ) ;
rank: 85
score: 99.07786976207386
patch: public out . write . write ( byte ) ;
rank: 85
score: 97.92469787597656
patch: > ]
rank: 85
score: 97.23088073730469
patch: > Index
rank: 85
score: 97.10324096679688
patch: / Exception Exception
rank: 86
score: 99.26332785866477
patch: out . write ( ch . clone ( ) ;
rank: 86
score: 99.11353648792614
patch: final { out . write ( ch ) ; }
rank: 86
score: 97.92430419921875
patch: private public public protected
rank: 86
score: 97.31627400716145
patch: public for
rank: 86
score: 97.23049926757812
patch: update > i > i
rank: 86
score: 97.10303497314453
patch: out State Error
rank: 86
score: 95.67713165283203
patch: public public Illegal
rank: 87
score: 99.26197102864583
patch: out . write ( ch . out . to CaMeL String ( ) )
rank: 87
score: 99.20729758522727
patch: public out . write ( ch , int ch )
rank: 87
score: 99.16398481889205
patch: out . write ( ch [ 1 ] ) ;
rank: 87
score: 99.10796508789062
patch: out . write ( byte byte ch ) ;
rank: 87
score: 97.92380777994792
patch: protected public
rank: 87
score: 97.31214141845703
patch: public protected get
rank: 87
score: 97.2301025390625
patch: > catch > size
rank: 87
score: 97.09542846679688
patch: public err Exception
rank: 87
score: 95.67403157552083
patch: public try
rank: 88
score: 99.26116943359375
patch: public out . write ( ch . to CaMeL String ( ) ;
rank: 88
score: 99.16380004882812
patch: out . write ( ch ) return ch ;
rank: 88
score: 99.10761108398438
patch: write . write . write ( ch ) ;
rank: 88
score: 97.92328491210938
patch: get > err >
rank: 88
score: 97.3116455078125
patch: public Thread
rank: 88
score: 97.21820068359375
patch: > length > >
rank: 88
score: 97.0926742553711
patch: public State Error
rank: 88
score: 95.66981506347656
patch: ch >
rank: 89
score: 99.25958251953125
patch: public synchronized out . write ( ch ) throws IO CaMeL Exception {
rank: 89
score: 99.20633544921876
patch: out . write ( write ( ch ) ;
rank: 89
score: 99.16240900213069
patch: out . write ( String [ ] ch ) ;
rank: 89
score: 99.102783203125
patch: out . write ( new byte [ ] ) ;
rank: 89
score: 99.07487349076705
patch: public out . write ( ch . write ) ;
rank: 89
score: 97.92101440429687
patch: async > i >
rank: 89
score: 97.30735270182292
patch: public Runnable
rank: 89
score: 97.21413167317708
patch: catch > out >
rank: 89
score: 97.09088134765625
patch: private State Stack
rank: 89
score: 95.66117095947266
patch: assign > >
rank: 90
score: 99.25885479266827
patch: out . write ( ch . hash CaMeL Code ( ) {
rank: 90
score: 99.20626126802884
patch: . . . * / out . write ( ch ) ;
rank: 90
score: 99.16236029730902
patch: public void out ( String ch ) ;
rank: 90
score: 99.10066223144531
patch: public static void out ( ) ;
rank: 90
score: 99.07257634943181
patch: public final out . write ( byte ch ) ;
rank: 90
score: 97.91525268554688
patch: private private add >
rank: 90
score: 97.30687713623047
patch: public public Map
rank: 90
score: 97.2117411295573
patch: get > i > catch
rank: 90
score: 97.08576202392578
patch: public State out
rank: 91
score: 99.25746256510416
patch: public final out . write ( ch . get CaMeL Bytes ( ) {
rank: 91
score: 99.20498657226562
patch: public out . write ( ch , int ch ) ;
rank: 91
score: 99.16002197265625
patch: public out . write ( int value ) ;
rank: 91
score: 99.09904649522569
patch: public void out . write ( ) ;
rank: 91
score: 99.07229275173611
patch: public out . write ( ) ) ;
rank: 91
score: 97.91349487304687
patch: replace > i >
rank: 91
score: 97.30528259277344
patch: public public notify
rank: 91
score: 97.20113118489583
patch: > size > Index
rank: 91
score: 97.08328247070312
patch: public null Runnable
rank: 92
score: 99.2564453125
patch: out . write ( ch . write ( ) throws IO CaMeL Exception ;
rank: 92
score: 99.1591796875
patch: void out . write ( byte [ ] ch ) ;
rank: 92
score: 99.09739685058594
patch: public void write ( out ) ;
rank: 92
score: 99.07191051136364
patch: public out . write ( out . ch ) ;
rank: 92
score: 97.91168212890625
patch: protected run >
rank: 92
score: 97.30287170410156
patch: public synchronized add
rank: 92
score: 97.19698079427083
patch: get > i > length
rank: 92
score: 97.08231353759766
patch: public null Stack
rank: 92
score: 95.65750885009766
patch: select > >
rank: 93
score: 99.25450032552084
patch: out . write ( ch . substring ( ch . length ) ) ;
rank: 93
score: 99.20387961647727
patch: public out . write ( ch [ ] ) ;
rank: 93
score: 99.15846604567308
patch: out . write ( name ) . write ( ch ) ;
rank: 93
score: 99.09688720703124
patch: private abstract out . write ( ch ) ;
rank: 93
score: 99.0714111328125
patch: out . write ( ch ) ; }
rank: 93
score: 97.90873413085937
patch: protected public put >
rank: 93
score: 97.2997817993164
patch: public public Writer
rank: 93
score: 97.19156901041667
patch: get > i catch >
rank: 93
score: 97.07949829101562
patch: out null Stack
rank: 93
score: 95.65644073486328
patch: public private Not
rank: 94
score: 99.25387234157986
patch: out . write write ( ch ) ;
rank: 94
score: 99.20245361328125
patch: out . write ( ch , byte [ ] ch )
rank: 94
score: 99.15712327223558
patch: out . write ( ch . equals ( ch ) ) ;
rank: 94
score: 99.0947265625
patch: void write ( int str ) ;
rank: 94
score: 99.07023481889205
patch: public out . write ( $STRING$ ) ; ) ;
rank: 94
score: 97.90863037109375
patch: for > >
rank: 94
score: 97.29966735839844
patch: public contains >
rank: 94
score: 97.19141642252605
patch: load > i > i
rank: 94
score: 97.07872009277344
patch: out Exception State
rank: 94
score: 95.6531982421875
patch: private static void
rank: 95
score: 99.252197265625
patch: out . write ( ch . get CaMeL Bytes ( ) )
rank: 95
score: 99.15625
patch: public out . write ( byte [ ] ch ) {
rank: 95
score: 99.07022094726562
patch: out . write ( ch , out ) ;
rank: 95
score: 97.90565795898438
patch: private get > catch
rank: 95
score: 97.29757690429688
patch: public public out
rank: 95
score: 97.19105021158855
patch: > i > 0
rank: 95
score: 97.06358846028645
patch: public State
rank: 96
score: 99.2011249248798
patch: out . write ( ch , byte [ ] ch ) ;
rank: 96
score: 99.15569390190973
patch: out . write ( ch + ) ;
rank: 96
score: 99.09182739257812
patch: public void write ( final String str ) ;
rank: 96
score: 99.0694580078125
patch: write . out . write ( ch ) ;
rank: 96
score: 97.90169677734374
patch: invoke > i >
rank: 96
score: 97.04290771484375
patch: private Runtime State
rank: 97
score: 99.25026041666666
patch: out out . write ( ch . get CaMeL Id ( ) ) ;
rank: 97
score: 99.19931030273438
patch: out . write ( ch , out . length ) ;
rank: 97
score: 99.15288751775569
patch: public static out . write ( int value ) ;
rank: 97
score: 99.06766764322917
patch: public out . write ( chars ) ;
rank: 97
score: 97.89906005859375
patch: private public protected public
rank: 97
score: 97.29127502441406
patch: public synchronized synchronized
rank: 97
score: 97.1851806640625
patch: > i catch
rank: 97
score: 97.03527069091797
patch: private Exception Stack
rank: 97
score: 95.64202880859375
patch: make > >
rank: 98
score: 99.25026041666666
patch: public out . write ( ch . get CaMeL Bytes ( int i )
rank: 98
score: 99.15108235677083
patch: public out . write ( String char CaMeL Value ) ;
rank: 98
score: 99.08943684895833
patch: out . write ( Integer ch ) ;
rank: 98
score: 99.0661288174716
patch: public out . write ( byte $NUMBER$ ch ) ;
rank: 98
score: 97.89769897460937
patch: protected public catch >
rank: 98
score: 97.28199768066406
patch: public static public
rank: 98
score: 97.18477376302083
patch: invoke > i > i
rank: 98
score: 97.02892303466797
patch: public Error Runtime
rank: 99
score: 99.1941426595052
patch: out . write ( ch , byte [ ] ) ;
rank: 99
score: 99.148486328125
patch: out . write ( ch + $NUMBER$ ) ;
rank: 99
score: 99.0893887606534
patch: out . write ( byte [ ] i ) ;
rank: 99
score: 99.06392415364583
patch: public out . write ( byte ; .
rank: 99
score: 97.89539794921875
patch: private public catch >
rank: 99
score: 97.28079223632812
patch: public public equals
rank: 99
score: 97.18057250976562
patch: > i > index
rank: 99
score: 97.02830505371094
patch: @ Exception Error
rank: 99
score: 95.62872314453125
patch: flush > >
rank: 100
score: 99.24843924386161
patch: out . write ( ch . get CaMeL Type ( ) ) ;
rank: 100
score: 99.19310413707386
patch: out . write ( Char CaMeL Sequence ch ) ;
rank: 100
score: 99.14833762428977
patch: public static out . write ( Object ch ) ;
rank: 100
score: 99.06101684570312
patch: out . write ( ch ) . out ;
rank: 100
score: 97.89512939453125
patch: clone > i >
rank: 100
score: 97.27938079833984
patch: public private add
rank: 100
score: 97.18017578125
patch: get > length > length
rank: 100
score: 97.01757049560547
patch: public Error Null
rank: 101
score: 99.248291015625
patch: out . write ( ch . char ch . char CaMeL Count ) ;
rank: 101
score: 99.19183349609375
patch: public out . write ( ch $NUMBER$ ) ;
rank: 101
score: 99.14686936598558
patch: out . write ( ch . get CaMeL Id ( ) ;
rank: 101
score: 99.08743896484376
patch: public abstract void write ( String ch ) ;
rank: 101
score: 99.05863813920455
patch: public out . write ( out ) throws ) ;
rank: 101
score: 97.89310913085937
patch: protected protected add >
rank: 101
score: 97.2743911743164
patch: public public Hash
rank: 101
score: 97.17917887369792
patch: hash > i > i
rank: 101
score: 97.01397705078125
patch: public Exception new
rank: 101
score: 95.62066650390625
patch: public do
rank: 102
score: 99.19140625
patch: out . write ( ch , int ch , ) ;
rank: 102
score: 99.14671912560097
patch: out . write ( str . to CaMeL String ( ) ;
rank: 102
score: 99.08580433238636
patch: public abstract out . write ( String str ) ;
rank: 102
score: 99.0584383877841
patch: out ( ) out . write ( ch ) ;
rank: 102
score: 97.8910400390625
patch: private get > Index
rank: 102
score: 97.17720540364583
patch: > next > Index
rank: 102
score: 97.01333618164062
patch: public err State
rank: 102
score: 95.60940551757812
patch: Found > >
rank: 103
score: 99.24664306640625
patch: public out . write ( String str ) throws IO CaMeL Exception {
rank: 103
score: 99.1912372295673
patch: public out . write ( ch . write ( ch ) ;
rank: 103
score: 99.14578247070312
patch: out . write ( ch . write ( ) ) ;
rank: 103
score: 99.08428276909723
patch: out . write ( Integer str ) ;
rank: 103
score: 99.05820534446023
patch: out . write ( ch . . out ) ;
rank: 103
score: 97.88693237304688
patch: synchronized add >
rank: 103
score: 97.17327880859375
patch: > count > i
rank: 103
score: 97.0133056640625
patch: out null Error
rank: 103
score: 95.60746256510417
patch: save >
rank: 104
score: 99.08329264322917
patch: boolean out ( ) ;
rank: 104
score: 97.88472747802734
patch: run > ]
rank: 104
score: 97.26922607421875
patch: public out >
rank: 104
score: 97.17287190755208
patch: catch > > null
rank: 104
score: 97.01081085205078
patch: public Exception Internal
rank: 104
score: 95.60472106933594
patch: Nullable public void
rank: 105
score: 99.2448486328125
patch: public out . write ( ch . out . to CaMeL String ( )
rank: 105
score: 99.18906471946023
patch: public out . write ( ch , int ) ;
rank: 105
score: 99.14403279622395
patch: public out . write ( String byte CaMeL Value ) ;
rank: 105
score: 99.08136541193181
patch: public synchronized out . write ( String ch ) ;
rank: 105
score: 99.05561659071181
patch: out . write ( Float ch ) ;
rank: 105
score: 97.88023681640625
patch: protected protected for >
rank: 105
score: 97.16973876953125
patch: > length > ++
rank: 105
score: 97.00333404541016
patch: protected Exception Error
rank: 105
score: 95.60237630208333
patch: has >
rank: 106
score: 99.24414934430804
patch: public out . write ( ch . get CaMeL Id ( ) ;
rank: 106
score: 99.1887451171875
patch: out . write ( ch , int ch )
rank: 106
score: 99.1430155436198
patch: private out . write ( char [ ] ch ) ;
rank: 106
score: 99.081103515625
patch: abstract . out . write ( ch ) ;
rank: 106
score: 99.05481635199652
patch: out . write ( ) ; ) ;
rank: 106
score: 97.879443359375
patch: Data > i >
rank: 106
score: 97.26906331380208
patch: public remove
rank: 106
score: 97.16907755533855
patch: clear > i > Index
rank: 106
score: 97.00243377685547
patch: protected null State
rank: 106
score: 95.60121663411458
patch: public Abstract
rank: 107
score: 99.24386596679688
patch: public synchronized out . write ( ch [ ] ) {
rank: 107
score: 99.0808837890625
patch: protected out . write ( String str ) ;
rank: 107
score: 99.05396185980902
patch: public out . write ( $STRING$ ) throws
rank: 107
score: 97.87618408203124
patch: private public append >
rank: 107
score: 97.26815032958984
patch: finally >
rank: 107
score: 97.16720581054688
patch: get > length > ]
rank: 107
score: 97.00144958496094
patch: @ Error Exception
rank: 107
score: 95.5980453491211
patch: abstract public void
rank: 108
score: 99.24379185267857
patch: out . write ( ch ) throws out . write ( ) ;
rank: 108
score: 99.18677775065105
patch: public out . write ( byte ch [ ] ) ;
rank: 108
score: 99.07775200737848
patch: public static out . write ( ) ;
rank: 108
score: 99.05322265625
patch: public out . write ( byte ch ) { ;
rank: 108
score: 97.87528076171876
patch: get > length ]
rank: 108
score: 97.26339721679688
patch: public public Array
rank: 108
score: 97.16666666666667
patch: get > length > Index
rank: 108
score: 96.99730682373047
patch: protected State Stack
rank: 108
score: 95.59665934244792
patch: public String
rank: 109
score: 99.18590291341145
patch: public out . write ( ch . ch . ) ;
rank: 109
score: 99.1422119140625
patch: out . append ( ch ) ;
rank: 109
score: 99.07534450954861
patch: write . write ( byte ch ) ;
rank: 109
score: 99.05291137695312
patch: out . write ( ch . null ) ;
rank: 109
score: 97.87196044921875
patch: document > i >
rank: 109
score: 97.25772094726562
patch: print
rank: 109
score: 97.16664632161458
patch: > finally > i
rank: 109
score: 96.99482727050781
patch: @ Exception State
rank: 109
score: 95.59520467122395
patch: Found >
rank: 110
score: 99.1852518717448
patch: public out . write ( ) throws IO CaMeL Exception {
rank: 110
score: 99.07489568536931
patch: public abstract abstract out . write ( ch ) ;
rank: 110
score: 99.05160183376736
patch: out . . write ( ch ) ;
rank: 110
score: 97.25570678710938
patch: public close >
rank: 110
score: 97.1658426920573
patch: log > case case
rank: 110
score: 96.98919677734375
patch: public Exception No
rank: 110
score: 95.58978271484375
patch: this >
rank: 111
score: 99.24305943080357
patch: public out . write ( long ch ) throws IO CaMeL Exception {
rank: 111
score: 99.1844012920673
patch: public abstract out . write ( ) throws IO CaMeL Exception ;
rank: 111
score: 99.14188639322917
patch: out . write ( ch . size ( ) ) ;
rank: 111
score: 99.07402954101562
patch: public int out . write ( ch ) ;
rank: 111
score: 99.051416015625
patch: out . write ( ] ] ch ) ;
rank: 111
score: 97.86629486083984
patch: do > ]
rank: 111
score: 97.25215657552083
patch: public System
rank: 111
score: 97.16542561848958
patch: stop > i > i
rank: 111
score: 96.98877716064453
patch: protected null null
rank: 112
score: 99.24208286830357
patch: out . write ( ch ) throws ch . write ( ) ;
rank: 112
score: 99.18404134114583
patch: public out . write ( String ch ) throws ) ;
rank: 112
score: 99.14157339242789
patch: protected out . write ( ch . get ( ch ) ;
rank: 112
score: 99.07296752929688
patch: void out . write ( String ch ) ;
rank: 112
score: 99.05044216579861
patch: write . write ( ] ch ) ;
rank: 112
score: 97.8636962890625
patch: add > finally >
rank: 112
score: 97.2515157063802
patch: public <UNK>
rank: 112
score: 97.16459350585937
patch: catch > length
rank: 112
score: 96.9869155883789
patch: public State Type
rank: 112
score: 95.58929443359375
patch: println >
rank: 113
score: 99.24119215745192
patch: out . write write ( ch ) throws IO CaMeL Exception ;
rank: 113
score: 99.18264535757211
patch: public out . write ( char ) throws IO CaMeL Exception ;
rank: 113
score: 99.07073364257812
patch: void out . write ( int str ) ;
rank: 113
score: 97.86312255859374
patch: synchronized get > ]
rank: 113
score: 97.25077056884766
patch: public synchronized run
rank: 113
score: 97.1629130045573
patch: get > size > i
rank: 113
score: 96.97804260253906
patch: private Error Exception
rank: 113
score: 95.58900960286458
patch: public Object
rank: 114
score: 99.2409912109375
patch: out out . write ( ch . get CaMeL Name ( ) ) ;
rank: 114
score: 99.1826171875
patch: public out . write ( String str ) throws IO CaMeL Exception
rank: 114
score: 99.13880504261364
patch: public void out . write ( String ch ) ;
rank: 114
score: 99.06984641335227
patch: public static out . write ( String ch ) {
rank: 114
score: 97.8589111328125
patch: get > iterator >
rank: 114
score: 97.24401092529297
patch: public public clear
rank: 114
score: 97.16163126627605
patch: remove > i > i
rank: 114
score: 96.97459920247395
patch: protected Exception
rank: 114
score: 95.58821614583333
patch: public if
rank: 115
score: 99.24076625279018
patch: public out . write ( ch . get CaMeL Name ( ) ;
rank: 115
score: 99.1824199969952
patch: public abstract out . write ( byte [ ] ch ) ;
rank: 115
score: 99.04947509765626
patch: out . write ( ch , $STRING$ ) ;
rank: 115
score: 97.85779571533203
patch: for > ]
rank: 115
score: 97.15951538085938
patch: catch > i
rank: 115
score: 96.96178436279297
patch: void State Exception
rank: 116
score: 99.24019368489583
patch: public out . write ( ch . get CaMeL Bytes ( ch ) ;
rank: 116
score: 99.1798807779948
patch: out . write ( ch , ch . ch ) ;
rank: 116
score: 99.13663736979167
patch: public static out . write ( ch [ ] ) ;
rank: 116
score: 99.06831665039063
patch: protected out . write ( String ch ) ;
rank: 116
score: 99.04926091974431
patch: public synchronized out . write ( byte ch ) ;
rank: 116
score: 97.856689453125
patch: final for >
rank: 116
score: 97.2330093383789
patch: public static get
rank: 116
score: 97.1580098470052
patch: clear > catch > >
rank: 116
score: 96.96063232421875
patch: void State null
rank: 117
score: 99.23836844308036
patch: public out . write ( ch . to CaMeL String ( ) {
rank: 117
score: 99.17970969460227
patch: out . write ( ch , byte ch ) ;
rank: 117
score: 99.13653564453125
patch: out . write ( ch , value ) ;
rank: 117
score: 99.06812133789063
patch: void out . write ( int ch ) ;
rank: 117
score: 99.04832874644886
patch: public out . write . write ( $STRING$ ) ;
rank: 117
score: 97.8526123046875
patch: local > i >
rank: 117
score: 97.23239135742188
patch: public abstract public
rank: 117
score: 97.15784708658855
patch: > size > length
rank: 117
score: 96.95801544189453
patch: public State arraycopy
rank: 118
score: 99.23729654947917
patch: out . write ( ch . clone ( ) throws IO CaMeL Exception {
rank: 118
score: 99.17965932992789
patch: public void out . write ( ch ) throws IO CaMeL Exception
rank: 118
score: 99.13610076904297
patch: out . write ( key ) ;
rank: 118
score: 99.04669744318181
patch: out . write ( ch ) . ( ) ;
rank: 118
score: 97.8508544921875
patch: protected public protected public
rank: 118
score: 97.23045349121094
patch: catch >
rank: 118
score: 96.94926452636719
patch: public Runtime null
rank: 118
score: 95.58251953125
patch: ignore > >
rank: 119
score: 99.23598069411058
patch: out . write ( int ch ) throws IO CaMeL Exception {
rank: 119
score: 99.17861599392361
patch: public void out ( ) { ; }
rank: 119
score: 99.1348125751202
patch: out . write ( ch . get CaMeL Class ( ) ;
rank: 119
score: 99.06712646484375
patch: public static out . write ( $STRING$ ) ;
rank: 119
score: 99.04661254882812
patch: out . write ( byte ch ) ) ;
rank: 119
score: 97.84893798828125
patch: private protected run >
rank: 119
score: 97.22847747802734
patch: public public values
rank: 119
score: 97.14845784505208
patch: > i : Stack
rank: 119
score: 96.9434814453125
patch: synchronized State State
rank: 119
score: 95.58102416992188
patch: public public IO
rank: 120
score: 99.1785888671875
patch: out . write ( out . to CaMeL String ( ) ;
rank: 120
score: 99.06565638950893
patch: public boolean write ( ) ;
rank: 120
score: 99.04316850142045
patch: public out . write ( byte ch ) ) ;
rank: 120
score: 97.84852294921875
patch: protected get > i
rank: 120
score: 97.14727783203125
patch: log > length >
rank: 120
score: 96.93730926513672
patch: public Runnable Error
rank: 121
score: 99.23487200055804
patch: out out . write ( ch . to CaMeL String ( ) ;
rank: 121
score: 99.17794189453124
patch: void out ( ) throws IO CaMeL Exception ;
rank: 121
score: 99.1323993389423
patch: out . write ( ch ) . write ( ) ) ;
rank: 121
score: 99.06523980034723
patch: abstract out . write ( ch ) ;
rank: 121
score: 99.04259643554687
patch: out . write ( ch + ] ) ;
rank: 121
score: 97.848486328125
patch: protected synchronized get >
rank: 121
score: 97.22454833984375
patch: public append >
rank: 121
score: 97.1436258951823
patch: > next > ]
rank: 121
score: 96.92665100097656
patch: public err null
rank: 122
score: 99.23443196614583
patch: out . write ( ch . to CaMeL Char CaMeL Array ( ) {
rank: 122
score: 99.176611328125
patch: out . write ( ch , byte ) ;
rank: 122
score: 99.0425048828125
patch: public final out . write ( $STRING$ ) ;
rank: 122
score: 97.84534912109375
patch: write > i >
rank: 122
score: 97.22301228841145
patch: public next
rank: 122
score: 97.14315795898438
patch: catch > next >
rank: 122
score: 96.92494201660156
patch: public Runtime Error
rank: 122
score: 95.5700174967448
patch: public clear
rank: 123
score: 99.23282564603366
patch: protected out . write ( ch ) throws IO CaMeL Exception {
rank: 123
score: 99.17204145951705
patch: @ Override public out . write ( ch ) ;
rank: 123
score: 99.12959428267045
patch: public abstract out . write ( int value ) ;
rank: 123
score: 99.06038041548295
patch: boolean . . out . write ( $STRING$ ) ;
rank: 123
score: 99.0418368252841
patch: public out . write ( byte 1 ] ) ;
rank: 123
score: 97.84519653320312
patch: put > arraycopy >
rank: 123
score: 97.22296142578125
patch: public private synchronized
rank: 123
score: 97.14225260416667
patch: > catch > Stack
rank: 123
score: 96.92416381835938
patch: static null Exception
rank: 123
score: 95.56810506184895
patch: fail >
rank: 124
score: 99.23214518229166
patch: out . write ( ch . get CaMeL Bytes ( String str ) ;
rank: 124
score: 99.17167833116319
patch: public abstract void out ( ch ) ;
rank: 124
score: 99.12911987304688
patch: out . write ( str , 0 , ch ) ;
rank: 124
score: 99.05813937717014
patch: public int out . write ( ) ;
rank: 124
score: 99.0418368252841
patch: public out . write ( byte [ ] ch ,
rank: 124
score: 97.83934936523437
patch: request > i >
rank: 124
score: 97.21748352050781
patch: public for >
rank: 124
score: 97.14037068684895
patch: get > i > null
rank: 124
score: 96.9235610961914
patch: public ( Exception
rank: 125
score: 99.23167067307692
patch: public out . write ( ch . get CaMeL Bytes ( )
rank: 125
score: 99.17111440805289
patch: public out . write ( ch ) throws ch . ) ;
rank: 125
score: 99.1285400390625
patch: out . write ( value ) . write ( ) ;
rank: 125
score: 99.05765991210937
patch: public static void write ( String ch ) ;
rank: 125
score: 99.04127086292614
patch: public out . write ( ch ) ; ) ;
rank: 125
score: 97.83665161132812
patch: for > arraycopy >
rank: 125
score: 97.21510314941406
patch: private public set
rank: 125
score: 97.14024861653645
patch: catch > > Stack
rank: 125
score: 96.9154281616211
patch: public Exception :
rank: 125
score: 95.56305694580078
patch: * { <UNK>
rank: 126
score: 99.1275126139323
patch: boolean out . write ( byte [ ] ch ) ;
rank: 126
score: 99.05736194957386
patch: void out . write ( System . out ) ;
rank: 126
score: 99.04068603515626
patch: public out . write ( byte out ) ;
rank: 126
score: 97.83592224121094
patch: private public private
rank: 126
score: 97.21398162841797
patch: public private run
rank: 126
score: 97.14000447591145
patch: > iterator > Index
rank: 126
score: 96.91130065917969
patch: public State Null
rank: 126
score: 95.56192016601562
patch: < <UNK>
rank: 127
score: 99.23125813802083
patch: public synchronized out . write ( ch . get CaMeL Bytes ( ) ;
rank: 127
score: 99.16885141225961
patch: public out . write ( ch ) throws Interrupted CaMeL Exception ;
rank: 127
score: 99.05722878196023
patch: out . write ( byte str [ ] ) ;
rank: 127
score: 99.04023881392045
patch: public out . write ( ch , this ) ;
rank: 127
score: 97.83531494140625
patch: root > i >
rank: 127
score: 97.20948791503906
patch: public public abstract
rank: 127
score: 97.13924153645833
patch: catch > i else
rank: 127
score: 96.91016387939453
patch: private null Error
rank: 128
score: 99.23104248046874
patch: out . write . write ( ch ) {
rank: 128
score: 99.16788423978366
patch: out . write ( ch , ch . ch . ) ;
rank: 128
score: 99.12628728693181
patch: public static out . write ( String name ) ;
rank: 128
score: 99.05558638139205
patch: abstract { out . write ( ch ) ; }
rank: 128
score: 99.0385971069336
patch: public out . write ( ch ;
rank: 128
score: 97.8335693359375
patch: protected private for >
rank: 128
score: 97.20789337158203
patch: public public to
rank: 128
score: 97.13512166341145
patch: has > i > i
rank: 128
score: 96.90803527832031
patch: public Runnable Stack
rank: 128
score: 95.55614471435547
patch: public delete >
rank: 129
score: 99.23040771484375
patch: public final out . write ( ch ) throws IO CaMeL Exception ;
rank: 129
score: 99.1677754720052
patch: public void write ( ch ) throws IO CaMeL Exception ;
rank: 129
score: 99.05538940429688
patch: public void write ( int String ch ) ;
rank: 129
score: 99.0365478515625
patch: public out . write ( ch ) { ;
rank: 129
score: 97.8335205078125
patch: protected get > arraycopy
rank: 129
score: 97.20314025878906
patch: public public init
rank: 129
score: 97.13498942057292
patch: get > catch > i
rank: 129
score: 96.90398406982422
patch: public run State
rank: 130
score: 99.22980143229167
patch: out . write ( ch . write ( ) throws IO CaMeL Exception {
rank: 130
score: 99.1240985576923
patch: out . write ( ch . substring ( 1 ) ) ;
rank: 130
score: 99.05487670898438
patch: public void write ( int Integer ch ) ;
rank: 130
score: 99.03614501953125
patch: out . write ( ch . . ) ;
rank: 130
score: 97.83243408203126
patch: process > i >
rank: 130
score: 97.1997299194336
patch: public public create
rank: 130
score: 97.13428751627605
patch: catch > > >
rank: 130
score: 96.90381622314453
patch: out State Runtime
rank: 131
score: 99.22928873697917
patch: out . write ( Char CaMeL Sequence ch ) throws IO CaMeL Exception {
rank: 131
score: 99.16571044921875
patch: out . write ( ch . out . ch ) ;
rank: 131
score: 99.05475725446429
patch: public boolean out ( ) ;
rank: 131
score: 99.03594970703125
patch: out . write ( ch ) throws
rank: 131
score: 97.83051147460938
patch: push > i >
rank: 131
score: 97.19816080729167
patch: Set <UNK>
rank: 131
score: 97.13395182291667
patch: > i : else
rank: 131
score: 96.90225219726562
patch: public null IO
rank: 131
score: 95.5410385131836
patch: protected public Not
rank: 132
score: 99.2292010967548
patch: out . write ( ch ) throws ( IO CaMeL Exception {
rank: 132
score: 99.1655742938702
patch: out . write ( out . write ( ch ) ) ;
rank: 132
score: 99.05413208007812
patch: public void write ( final Integer ch ) ;
rank: 132
score: 99.03590698242188
patch: public out . write ( byte $NUMBER$ ) ;
rank: 132
score: 97.82848358154297
patch: final get >
rank: 132
score: 97.19754028320312
patch: public protected add
rank: 132
score: 97.1328125
patch: for > i catch >
rank: 132
score: 96.89643859863281
patch: protected Runtime State
rank: 132
score: 95.5409164428711
patch: public for <UNK>
rank: 133
score: 99.22882952008929
patch: out . write ( ch ) ; out . close ( ) ;
rank: 133
score: 99.1654764811198
patch: public out . write ( ch , ch . ) ;
rank: 133
score: 99.05370221819196
patch: public void write ( ) ;
rank: 133
score: 99.03523084852431
patch: ) out . write ( ch ) ;
rank: 133
score: 97.82596435546876
patch: private for > >
rank: 133
score: 97.19609069824219
patch: public public last
rank: 133
score: 97.13004557291667
patch: catch > i --
rank: 133
score: 96.89026641845703
patch: public Exception Throwable
rank: 134
score: 99.22842407226562
patch: public out . flush ( ) throws IO CaMeL Exception ;
rank: 134
score: 99.16326904296875
patch: out . write ( Character ch ) ;
rank: 134
score: 99.05186462402344
patch: protected out . write ( ) ;
rank: 134
score: 99.0351229580966
patch: out . ; out . write ( ch ) ;
rank: 134
score: 97.82465209960938
patch: protected private add >
rank: 134
score: 97.12945556640625
patch: > iterator > length
rank: 134
score: 96.89007568359375
patch: public Exception Writer
rank: 134
score: 95.53394317626953
patch: public void throw
rank: 135
score: 99.16253662109375
patch: void out . write ( ) throws IO CaMeL Exception ;
rank: 135
score: 99.12062581380208
patch: out . write ( value ) write ( ch ) ;
rank: 135
score: 99.05013427734374
patch: protected abstract out . write ( ch ) ;
rank: 135
score: 99.03505637428977
patch: ch . write ( ch . write ( ) ;
rank: 135
score: 97.8233642578125
patch: final get > catch
rank: 135
score: 97.12877400716145
patch: for > length > i
rank: 135
score: 96.8885498046875
patch: protected Error Exception
rank: 136
score: 99.22698102678571
patch: write . write ( ch . get CaMeL Bytes ( ) ) ;
rank: 136
score: 99.12005145733173
patch: private void out ( ch . to CaMeL String ( ) ;
rank: 136
score: 99.04975128173828
patch: public void out ( ch ) ;
rank: 136
score: 99.03424835205078
patch: public out ( Exception ch ) ;
rank: 136
score: 97.82289428710938
patch: add > next >
rank: 136
score: 97.18797302246094
patch: private synchronized <UNK>
rank: 136
score: 96.8779296875
patch: public null Illegal
rank: 136
score: 95.52359008789062
patch: public flush >
rank: 137
score: 99.22691127232143
patch: out . write . ch . write . write ( ch ) ;
rank: 137
score: 99.16180419921875
patch: public out . write ( char ch ) ;
rank: 137
score: 99.11973266601562
patch: String out . write ( String ch ) ;
rank: 137
score: 99.04833374023437
patch: public private out . write ( ch ) ;
rank: 137
score: 99.0321273803711
patch: public out . write ( byte ;
rank: 137
score: 97.82222493489583
patch: do >
rank: 137
score: 97.12775268554688
patch: catch > else
rank: 137
score: 96.87735748291016
patch: public Exception exit
rank: 137
score: 95.52198282877605
patch: Linked >
rank: 138
score: 99.22669270833333
patch: out . write ( ch . intern ( ) throws IO CaMeL Exception {
rank: 138
score: 99.11873779296874
patch: out . write ( ch . start ) ;
rank: 138
score: 99.04732937282986
patch: void out . write ( out ) ;
rank: 138
score: 97.17530059814453
patch: private public <UNK>
rank: 138
score: 97.12774658203125
patch: clear > i > length
rank: 138
score: 96.86212158203125
patch: public Runtime Stack
rank: 138
score: 95.5191650390625
patch: public XML
rank: 139
score: 99.22630964006696
patch: out . write ( ch ) throws Illegal CaMeL Argument CaMeL Exception ;
rank: 139
score: 99.11824340820313
patch: public out . write ( String out ) ;
rank: 139
score: 99.04639543805804
patch: public int out ( ) {
rank: 139
score: 97.81986083984376
patch: flush > i >
rank: 139
score: 97.1262919108073
patch: catch > > catch
rank: 139
score: 96.85647583007812
patch: out err State
rank: 140
score: 99.2257568359375
patch: public out . write . write ( ch ) throws IO CaMeL Exception {
rank: 140
score: 99.16038004557292
patch: out . write ( ch , ch . write ) ;
rank: 140
score: 99.11768517127403
patch: public static out . write ( int [ ] ch ) ;
rank: 140
score: 99.04582075639205
patch: public out . write ( int byte = 0 ;
rank: 140
score: 99.02964477539062
patch: public out . write ( byte ) ) ;
rank: 140
score: 97.81945190429687
patch: private public remove >
rank: 140
score: 97.17018127441406
patch: get > else
rank: 140
score: 97.123974609375
patch: catch > catch
rank: 140
score: 96.85415649414062
patch: public Error Not
rank: 141
score: 99.22560471754808
patch: out . write ( long ch ) throws IO CaMeL Exception {
rank: 141
score: 99.15946138822116
patch: out . write ( ch , 0 , ch . ) ;
rank: 141
score: 99.11761944110577
patch: out . write ( ch . get CaMeL Message ( ) ;
rank: 141
score: 99.04285430908203
patch: boolean out . write ( ) ;
rank: 141
score: 97.81925659179687
patch: insert > i >
rank: 141
score: 97.16798400878906
patch: Set synchronized <UNK>
rank: 141
score: 97.1236572265625
patch: > size > ]
rank: 141
score: 96.85244750976562
patch: public Exception (
rank: 141
score: 95.50397491455078
patch: void <UNK> <UNK>
rank: 142
score: 99.22447916666667
patch: public out . write ( ch . get CaMeL Input CaMeL Stream ( )
rank: 142
score: 99.11760919744319
patch: public void out ( ch . flush ( ) ;
rank: 142
score: 99.04227023654514
patch: out . write ( byte value ) ;
rank: 142
score: 99.02756569602273
patch: out . write ( byte ch ) throws ) ;
rank: 142
score: 97.8175048828125
patch: Data >
rank: 142
score: 97.16249084472656
patch: public public start
rank: 142
score: 97.1217753092448
patch: catch > iterator >
rank: 142
score: 96.84971618652344
patch: public Null Stack
rank: 142
score: 95.5001220703125
patch: private void throws
rank: 143
score: 99.22405133928571
patch: public out . write ( ch . hash CaMeL Code ( ) {
rank: 143
score: 99.1577860514323
patch: out . write ( ch , 0 , ch ) ;
rank: 143
score: 99.04216851128473
patch: public void write ( int name ) ;
rank: 143
score: 99.02732155539773
patch: out . write ( in . write ( ) ;
rank: 143
score: 97.81627807617187
patch: properties > i >
rank: 143
score: 97.12172444661458
patch: if > length > i
rank: 143
score: 96.84707641601562
patch: private Exception Runtime
rank: 143
score: 95.4984639485677
patch: public check
rank: 144
score: 99.22393798828125
patch: out . write ( ch ) throws out . flush ( ) ;
rank: 144
score: 99.0416592684659
patch: out . write ( int byte [ ] ) ;
rank: 144
score: 99.02702026367187
patch: ch . write ( ch . ch ) ;
rank: 144
score: 97.15421295166016
patch: public protected synchronized
rank: 144
score: 97.11783599853516
patch: > null
rank: 144
score: 96.8431625366211
patch: public $STRING$ null
rank: 145
score: 99.22369384765625
patch: public int out . write ( ch ) throws IO CaMeL Exception ;
rank: 145
score: 99.15693803267045
patch: public abstract out . write ( ch , ) ;
rank: 145
score: 99.1152852376302
patch: String out . write ( char [ ] ch ) ;
rank: 145
score: 99.02550159801136
patch: public out . write ( byte + ch ) ;
rank: 145
score: 97.81474609375
patch: private public new >
rank: 145
score: 97.15343475341797
patch: public public contains
rank: 145
score: 97.11279296875
patch: > run > catch
rank: 145
score: 96.8385009765625
patch: public Exception Type
rank: 146
score: 99.22313581194196
patch: protected out . write ( ch . get CaMeL Bytes ( ) ;
rank: 146
score: 99.1557147686298
patch: out . write ( ch , int out . length ) ;
rank: 146
score: 99.11465454101562
patch: public out . write ( ch . write ch ) ;
rank: 146
score: 99.02488403320312
patch: . . out . write ( ch ) ;
rank: 146
score: 97.81397247314453
patch: get > catch
rank: 146
score: 97.15269470214844
patch: public list >
rank: 146
score: 97.11227416992188
patch: put > length > i
rank: 146
score: 96.82963562011719
patch: public State Thread
rank: 146
score: 95.4925537109375
patch: ( (
rank: 147
score: 99.22250600961539
patch: out . write ( ch . out . write ( ) ;
rank: 147
score: 99.1128438313802
patch: public out . write ( char [ ] out ) ;
rank: 147
score: 99.02449035644531
patch: out . write ( $NUMBER$ ) ;
rank: 147
score: 97.81392822265624
patch: synchronized get > arraycopy
rank: 147
score: 97.15191650390625
patch: Stack
rank: 147
score: 97.11088053385417
patch: > exit > ]
rank: 147
score: 96.82962036132812
patch: synchronized null Exception
rank: 147
score: 95.48973846435547
patch: public public delete
rank: 148
score: 99.2223876953125
patch: out . write ( ch . trim ( ) throws IO CaMeL Exception ;
rank: 148
score: 99.15461869673295
patch: out . write ( ch , int size ) ;
rank: 148
score: 99.0353759765625
patch: out . write ( new byte [ ] ;
rank: 148
score: 99.02376098632813
patch: public out . write ( Writer ch ) ;
rank: 148
score: 97.81084594726562
patch: protected add > >
rank: 148
score: 97.151123046875
patch: public public read
rank: 148
score: 97.1098124186198
patch: get > out > i
rank: 148
score: 96.82566833496094
patch: abstract Exception Exception
rank: 148
score: 95.48792266845703
patch: ( ( <UNK>
rank: 149
score: 99.22170188210227
patch: public int out ( ) throws IO CaMeL Exception ;
rank: 149
score: 99.15390249399039
patch: out . write ( ch . ch . ch . ) ;
rank: 149
score: 99.11118570963542
patch: public out . write ( double [ ] ch ) ;
rank: 149
score: 99.03459930419922
patch: public private void out ( ) ;
rank: 149
score: 99.02290482954545
patch: public out . write ( this ) throws ) ;
rank: 149
score: 97.80535278320312
patch: close > i >
rank: 149
score: 97.15109252929688
patch: public public ends
rank: 149
score: 97.10978190104167
patch: > next > else
rank: 149
score: 96.82319641113281
patch: synchronized Exception Exception
rank: 149
score: 95.48408508300781
patch: delete > >
rank: 150
score: 99.22081502278645
patch: out . write ( ch ) throws Interrupted CaMeL Exception ;
rank: 150
score: 99.1532733623798
patch: out . write ( char [ ] ch , int ) ;
rank: 150
score: 99.11060680042614
patch: out . write ( float [ ] ch ) ;
rank: 150
score: 99.03322928292411
patch: write . write ( ) ;
rank: 150
score: 99.02144775390624
patch: public out . write ( ] out ) ;
rank: 150
score: 97.80452880859374
patch: execute > i >
rank: 150
score: 97.10843912760417
patch: catch > > out
rank: 150
score: 96.82228088378906
patch: public Exception public
rank: 150
score: 95.48075866699219
patch: public < void
rank: 151
score: 99.15235314002403
patch: out . write ( ch . out . ch . ) ;
rank: 151
score: 99.10890549879808
patch: public static out . write ( char [ ] ch ) ;
rank: 151
score: 99.03322531960227
patch: public abstract out . write ( byte ch ) ;
rank: 151
score: 99.021435546875
patch: out . write ( ch , true ) ;
rank: 151
score: 97.8045166015625
patch: I > for >
rank: 151
score: 97.14321899414062
patch: } print
rank: 151
score: 97.1068827311198
patch: > size > else
rank: 151
score: 96.82111358642578
patch: void State Stack
rank: 151
score: 95.47771453857422
patch: protected void throws
rank: 152
score: 99.22029622395833
patch: out . write ( ch ) { return out ; }
rank: 152
score: 99.10850172776442
patch: out . write ( ch . get ( value ) ) ;
rank: 152
score: 99.03322143554688
patch: public out . write ( String $STRING$ ) ;
rank: 152
score: 99.02021928267045
patch: out . write ( byte ch . $NUMBER$ ) ;
rank: 152
score: 97.80411376953126
patch: private protected public public
rank: 152
score: 97.10659790039062
patch: run > i > i
rank: 152
score: 96.81865692138672
patch: public Exception finally
rank: 152
score: 95.47282409667969
patch: save > >
rank: 153
score: 99.22019740513393
patch: public out . write ( ch . hash CaMeL Code ( ) ;
rank: 153
score: 99.15120849609374
patch: out . write ( Byte ( ch ) ;
rank: 153
score: 99.10781625600961
patch: out . write ( ch ) . write ( 0 ) ;
rank: 153
score: 99.03269264914773
patch: int . . out . write ( $STRING$ ) ;
rank: 153
score: 99.02010091145833
patch: public out ( ) ;
rank: 153
score: 97.80338745117187
patch: handler > i >
rank: 153
score: 97.1295674641927
patch: public int
rank: 153
score: 97.10255940755208
patch: > out > out
rank: 153
score: 96.81491088867188
patch: @ State Exception
rank: 153
score: 95.47271728515625
patch: boolean
rank: 154
score: 99.22005789620536
patch: @ Override out . write ( ch ) throws IO CaMeL Exception {
rank: 154
score: 99.15101036658653
patch: public synchronized out . write ( ch ) throws IO CaMeL Exception
rank: 154
score: 99.1074951171875
patch: out . write ( name + $STRING$ ) ;
rank: 154
score: 99.03079986572266
patch: void write ( int byte ) ;
rank: 154
score: 99.01980590820312
patch: public out . write ( ch ch ) ;
rank: 154
score: 97.8009765625
patch: private public public private
rank: 154
score: 97.12787628173828
patch: public protected run
rank: 154
score: 97.10244750976562
patch: > iterator > else
rank: 154
score: 96.81383514404297
patch: public err Error
rank: 154
score: 95.47266642252605
patch: final void
rank: 155
score: 99.2198974609375
patch: out . write write ( ch . get CaMeL Bytes ( ) ) ;
rank: 155
score: 99.1502352627841
patch: public void out ( ch ) throws IO CaMeL Exception
rank: 155
score: 99.10591634114583
patch: out . write ( str ) write ( ch ) ;
rank: 155
score: 99.03066184303977
patch: out . write ( byte [ 1 ] ) ;
rank: 155
score: 99.01951904296875
patch: out . write ( ( ] ch ) ;
rank: 155
score: 97.80082194010417
patch: set >
rank: 155
score: 97.12290954589844
patch: private public get
rank: 155
score: 97.10174560546875
patch: get > i > size
rank: 155
score: 96.81275939941406
patch: out State Null
rank: 155
score: 95.46540832519531
patch: is
rank: 156
score: 99.21973673502605
patch: out . write ( ch . char [ ] str )
rank: 156
score: 99.14784071180556
patch: public out . write ( int ch )
rank: 156
score: 99.10562838040866
patch: public out . write ( int char [ ] ch ) ;
rank: 156
score: 99.02863159179688
patch: public void write . write ( ch ) ;
rank: 156
score: 99.01833089192708
patch: out . write ( $STRING$ ) ) ;
rank: 156
score: 97.79927062988281
patch: final add >
rank: 156
score: 97.12168884277344
patch: public Writer <UNK>
rank: 156
score: 97.10108184814453
patch: > length
rank: 156
score: 96.81077575683594
patch: public Error Runnable
rank: 156
score: 95.46437072753906
patch: VM
rank: 157
score: 99.2196553548177
patch: write . write ( ch ) throws IO CaMeL Exception {
rank: 157
score: 99.14774263822116
patch: out . write ( ) throws out . flush ( ) ;
rank: 157
score: 99.10547892252605
patch: out . write ( ch + 0 + ch ) ;
rank: 157
score: 99.02809143066406
patch: public boolean write ( ch ) ;
rank: 157
score: 99.01817737926136
patch: out . write ( ch . new ( ) ;
rank: 157
score: 97.79778442382812
patch: Default > catch >
rank: 157
score: 97.12167358398438
patch: public synchronized close
rank: 157
score: 97.09912109375
patch: clear > length > length
rank: 157
score: 96.81076049804688
patch: static Exception Exception
rank: 158
score: 99.21922889122597
patch: out . write ( ch . to CaMeL String ( ) )
rank: 158
score: 99.14486929086539
patch: public out . write ( ch , ) throws IO CaMeL Exception
rank: 158
score: 99.10540161132812
patch: out . write ( ch , 0 ) ;
rank: 158
score: 99.02735731336806
patch: public private out . write ( ) ;
rank: 158
score: 99.0181551846591
patch: out . write ( ch . write ( ) .
rank: 158
score: 97.79403686523438
patch: private public protected
rank: 158
score: 97.11983489990234
patch: public public write
rank: 158
score: 97.09779866536458
patch: > out > i
rank: 158
score: 96.8045883178711
patch: public State catch
rank: 158
score: 95.45833333333333
patch: public Array
rank: 159
score: 99.1444091796875
patch: public out . write ( ch ) throws )
rank: 159
score: 99.10512473366477
patch: public final out . write ( String ch ) ;
rank: 159
score: 99.02616743607955
patch: void out ( ) . write ( str ) ;
rank: 159
score: 99.01723904079861
patch: public out . write ( byte ) {
rank: 159
score: 97.79326171875
patch: I > add >
rank: 159
score: 97.11937713623047
patch: public public final
rank: 159
score: 97.09696451822917
patch: log > arraycopy >
rank: 159
score: 96.79953002929688
patch: void null State
rank: 160
score: 99.21666541466347
patch: public abstract out . write ( ch . clone ( ) ;
rank: 160
score: 99.1441650390625
patch: public abstract void out . write ( ch ) ;
rank: 160
score: 99.104638671875
patch: out . write ( ch . value ) ;
rank: 160
score: 99.02447509765625
patch: void write ( String ch ) ;
rank: 160
score: 99.01642400568181
patch: public out . write ( ] ] ch ) ;
rank: 160
score: 97.79237060546875
patch: protected put > ]
rank: 160
score: 97.11634063720703
patch: public Map <UNK>
rank: 160
score: 97.09452311197917
patch: log > > catch
rank: 160
score: 96.79521179199219
patch: protected Exception Stack
rank: 160
score: 95.4579366048177
patch: public static
rank: 161
score: 99.215185546875
patch: out . write ( ch . get CaMeL Bytes ( String name ) ;
rank: 161
score: 99.14326171875
patch: out . write ( ch , ch . ;
rank: 161
score: 99.10370427911931
patch: public out . write ( String int $NUMBER$ ) ;
rank: 161
score: 99.02352294921874
patch: public static out . write ( out ) ;
rank: 161
score: 97.79144897460938
patch: private run > >
rank: 161
score: 97.09356689453125
patch: clear > length > ]
rank: 161
score: 97.07916259765625
patch: public starts
rank: 161
score: 96.79411315917969
patch: private Exception Null
rank: 161
score: 95.45646667480469
patch: public iterator >
rank: 162
score: 99.21516927083333
patch: public out . write ( char ch [ ] ) {
rank: 162
score: 99.14253743489583
patch: public out . write ( ch , int length ) ;
rank: 162
score: 99.10342407226562
patch: out . write ( ch . name ) ;
rank: 162
score: 99.02283935546875
patch: public void write ( int byte $NUMBER$ ) ;
rank: 162
score: 99.01544867621527
patch: public out . write ( ] ) ;
rank: 162
score: 97.78846435546875
patch: protected run > ]
rank: 162
score: 97.09341430664062
patch: catch > > arraycopy
rank: 162
score: 96.79335021972656
patch: out Exception null
rank: 163
score: 99.21364182692308
patch: out . write ( char ch ) throws IO CaMeL Exception ;
rank: 163
score: 99.14195667613636
patch: public out . write ( char [ ] ch )
rank: 163
score: 99.10242716471355
patch: String out . write ( byte [ ] ch ) ;
rank: 163
score: 99.022216796875
patch: private synchronized out . write ( ch ) ;
rank: 163
score: 99.0142822265625
patch: public out . write ( byte 1 ch ) ;
rank: 163
score: 97.78582763671875
patch: get > > i
rank: 163
score: 97.09157307942708
patch: initialize > length > i
rank: 163
score: 97.06022644042969
patch: catch
rank: 163
score: 96.78895568847656
patch: public null run
rank: 164
score: 99.21360677083334
patch: out . write ( ch . ch . long CaMeL Value ( ) ;
rank: 164
score: 99.1410400390625
patch: void out . write ( ch , ) ;
rank: 164
score: 99.02175071022727
patch: / ; void out . write ( ch ) ;
rank: 164
score: 97.78556518554687
patch: private public private public
rank: 164
score: 97.08673095703125
patch: case > i >
rank: 164
score: 96.7878189086914
patch: / State Error
rank: 164
score: 95.45091247558594
patch: private public Not
rank: 165
score: 99.21279296875
patch: out . write ( ch . char 1 ) throws IO CaMeL Exception ;
rank: 165
score: 99.14053109975961
patch: out . write ( write ( ) throws IO CaMeL Exception ;
rank: 165
score: 99.10178444602273
patch: out . write ( ch . write $NUMBER$ ) ;
rank: 165
score: 99.02141655815973
patch: out . write ( byte name ) ;
rank: 165
score: 99.01406028053977
patch: out . write ( ch , int 1 ) ;
rank: 165
score: 97.78110961914062
patch: hash > i >
rank: 165
score: 97.08577473958333
patch: > out > null
rank: 165
score: 97.03314208984375
patch: public append
rank: 165
score: 96.78685760498047
patch: public Exception $STRING$
rank: 165
score: 95.44588470458984
patch: public load >
rank: 166
score: 99.2111083984375
patch: out . write ( out . get CaMeL Bytes ( int i ) ;
rank: 166
score: 99.13866077769886
patch: public Object out ( ) throws IO CaMeL Exception ;
rank: 166
score: 99.10074869791667
patch: public out . write ( byte [ ] str ) ;
rank: 166
score: 99.02088623046875
patch: public out . write ( int name ) ;
rank: 166
score: 99.0128173828125
patch: out . write ( byte ch . ch ) ;
rank: 166
score: 97.78106689453125
patch: main > i >
rank: 166
score: 97.08413696289062
patch: append > i > i
rank: 166
score: 96.78002166748047
patch: public Exception ch
rank: 167
score: 99.21083577473958
patch: out . write ( ch . char [ ] ch )
rank: 167
score: 99.13486735026042
patch: out . write ( ch , out . write ) ;
rank: 167
score: 99.01992458767361
patch: public int write ( int str ) ;
rank: 167
score: 99.01185913085938
patch: public out . write ( ] ch ) {
rank: 167
score: 97.78084106445313
patch: private private run >
rank: 167
score: 97.08277384440105
patch: add > catch > >
rank: 167
score: 96.77264404296875
patch: public public null
rank: 167
score: 95.44381713867188
patch: public E
rank: 168
score: 99.1347147623698
patch: public abstract void out ( ) throws IO CaMeL Exception ;
rank: 168
score: 99.0990498860677
patch: String out . write ( String [ ] ch ) ;
rank: 168
score: 99.0198974609375
patch: private out . write ( System . out ) ;
rank: 168
score: 99.01148570667614
patch: public out . write . write ( str ) ;
rank: 168
score: 97.77987060546874
patch: private final get >
rank: 168
score: 97.08139038085938
patch: > length > index
rank: 168
score: 96.77024841308594
patch: out Error State
rank: 169
score: 99.13417405348558
patch: public out . write ( ch . out . ch ) ;
rank: 169
score: 99.09884643554688
patch: public void out ( ) { ;
rank: 169
score: 99.01947576349431
patch: void out ( ) . write ( $STRING$ ) ;
rank: 169
score: 99.01103071732955
patch: out . write ( ch , * / ) ;
rank: 169
score: 97.77957153320312
patch: private run > ]
rank: 169
score: 97.00082397460938
patch: has
rank: 169
score: 96.7701416015625
patch: public Exception Number
rank: 169
score: 95.44086456298828
patch: < public void
rank: 170
score: 99.20970662434895
patch: public synchronized out . write . write ( ch ) {
rank: 170
score: 99.13396661931819
patch: public abstract out . write ( char ch ) ;
rank: 170
score: 99.09767659505208
patch: out . write ( ) . write ( ch ) ;
rank: 170
score: 99.01898803710938
patch: public static void write ( String str ) ;
rank: 170
score: 99.0101318359375
patch: private out . write ( $STRING$ ) ;
rank: 170
score: 97.77685546875
patch: protected for > >
rank: 170
score: 97.0806172688802
patch: has > length > i
rank: 170
score: 96.76766967773438
patch: private State Type
rank: 170
score: 95.43745422363281
patch: String
rank: 171
score: 99.20961100260416
patch: public abstract out . write ( ch . get CaMeL Length ( ) ;
rank: 171
score: 99.13390174278847
patch: out . write ( ) throws ch . read ( ) ;
rank: 171
score: 99.09724564985795
patch: out . write ( Integer [ ] ch ) ;
rank: 171
score: 99.01831665039063
patch: public out . write ( int ch ) {
rank: 171
score: 99.00746848366477
patch: out . write ( ch ) . out ) ;
rank: 171
score: 97.77661895751953
patch: set > ]
rank: 171
score: 97.08036295572917
patch: case > catch >
rank: 171
score: 96.98027038574219
patch: Next
rank: 171
score: 96.76597595214844
patch: public public Error
rank: 172
score: 99.20803000710227
patch: public out . write ( ch [ ] ) {
rank: 172
score: 99.1332674893466
patch: public out . write ( ch , ch ) ;
rank: 172
score: 99.01772238991477
patch: out . write ( byte [ * / ) ;
rank: 172
score: 99.006787109375
patch: public out . write ( byte [ ) ;
rank: 172
score: 97.77562255859375
patch: protected public private public
rank: 172
score: 97.07902018229167
patch: > exit > Index
rank: 172
score: 96.979736328125
patch: finally
rank: 172
score: 96.76403045654297
patch: private Null Exception
rank: 172
score: 95.43686930338542
patch: encode >
rank: 173
score: 99.20790318080357
patch: out . write ( ch . get CaMeL Long ( ) ) ;
rank: 173
score: 99.13147911658653
patch: public out . write ( ch ) { return ch ; }
rank: 173
score: 99.09632286658653
patch: out . write ( ch ) . write ( $NUMBER$ ) ;
rank: 173
score: 99.00577392578126
patch: public out . write ( ch . out ;
rank: 173
score: 97.772021484375
patch: get > equals >
rank: 173
score: 97.07614135742188
patch: finally > catch >
rank: 173
score: 96.96971638997395
patch: public register
rank: 173
score: 96.76348876953125
patch: public $STRING$ State
rank: 174
score: 99.20759800502232
patch: public final out . write ( ch . get CaMeL Bytes ( )
rank: 174
score: 99.09614701704545
patch: public static out . write ( String value ) ;
rank: 174
score: 99.01686789772727
patch: public out . write ( final String ch ) ;
rank: 174
score: 99.00575949928977
patch: write . write ( byte [ ] ch ) ;
rank: 174
score: 97.76962890625
patch: private get > arraycopy
rank: 174
score: 97.07398478190105
patch: add > length > length
rank: 174
score: 96.961181640625
patch: public current
rank: 174
score: 96.7633056640625
patch: public State Index
rank: 175
score: 99.13081190321181
patch: public out . write ( ch . ;
rank: 175
score: 99.09531656901042
patch: public static out . write ( ch . out ) ;
rank: 175
score: 99.01610717773437
patch: public int write ( final String ch ) ;
rank: 175
score: 99.00564575195312
patch: out . write ( byte $NUMBER$ ch ) ;
rank: 175
score: 97.76838684082031
patch: remove > ]
rank: 175
score: 97.07379150390625
patch: > i > Out
rank: 175
score: 96.94706217447917
patch: public double
rank: 175
score: 96.76182556152344
patch: public Exception EMPTY
rank: 175
score: 95.42716471354167
patch: public list
rank: 176
score: 99.09486897786458
patch: public out . write ( short [ ] ch ) ;
rank: 176
score: 99.0155362215909
patch: private abstract out . write ( String ch ) ;
rank: 176
score: 99.0056396484375
patch: public write . write ( ] ch ) ;
rank: 176
score: 97.76829833984375
patch: add > err >
rank: 176
score: 97.0717264811198
patch: > i > next
rank: 176
score: 96.76022338867188
patch: out null Runtime
rank: 176
score: 95.42633056640625
patch: public increment
rank: 177
score: 99.20646449497768
patch: public out . write ( out . to CaMeL String ( ) ;
rank: 177
score: 99.12828650841347
patch: out . write ( out . write ( char ch ) ;
rank: 177
score: 99.09440104166667
patch: out . write ( ch ) write ( value ) ;
rank: 177
score: 99.0152254971591
patch: out . write ( byte [ ] name ) ;
rank: 177
score: 99.00392844460227
patch: public out . write ( out . out ) ;
rank: 177
score: 97.7673828125
patch: Default > i >
rank: 177
score: 97.07166544596355
patch: > i > iterator
rank: 177
score: 96.75604248046875
patch: public Runnable Runtime
rank: 178
score: 99.2053466796875
patch: out . write ( ch . get CaMeL Chars ( int i ) ;
rank: 178
score: 99.0146484375
patch: public private out . write ( String ch ) ;
rank: 178
score: 99.0037109375
patch: private out . write ( byte ch ) ;
rank: 178
score: 97.07156372070312
patch: run > length > i
rank: 178
score: 96.93328857421875
patch: public put
rank: 178
score: 96.75245666503906
patch: public Thread Exception
rank: 178
score: 95.42134094238281
patch: public abstract Not
rank: 179
score: 99.20506068638393
patch: public out . write ( ch . get CaMeL Buffer ( ) ;
rank: 179
score: 99.12778883713942
patch: public out . write ( byte [ ] ch , ) ;
rank: 179
score: 99.0939190204327
patch: out . write ( ch . get CaMeL Parent ( ) ;
rank: 179
score: 99.01420454545455
patch: public static out . write ( boolean ch ) ;
rank: 179
score: 97.76572875976562
patch: synchronized private get >
rank: 179
score: 97.070556640625
patch: write > length > i
rank: 179
score: 96.92897542317708
patch: null >
rank: 179
score: 96.7486801147461
patch: out null Null
rank: 179
score: 95.41785430908203
patch: equals >
rank: 180
score: 99.20443960336539
patch: final out . write ( ch ) throws IO CaMeL Exception ;
rank: 180
score: 99.1274883563702
patch: out . write ( ch , int char CaMeL Count ) ;
rank: 180
score: 99.09389241536458
patch: public void . write ( byte [ ] ch ) ;
rank: 180
score: 99.01361694335938
patch: private out . write ( int ch ) ;
rank: 180
score: 99.00215287642045
patch: out . write ( ] [ ] ch ) ;
rank: 180
score: 97.765185546875
patch: encode > i >
rank: 180
score: 97.06953938802083
patch: invoke > length > i
rank: 180
score: 96.74795532226562
patch: out ch State
rank: 181
score: 99.20443725585938
patch: out . write ( ch . hash CaMeL Code ( )
rank: 181
score: 99.0931865985577
patch: private out . write ( out . write ( ch ) ;
rank: 181
score: 99.01259155273438
patch: void out . write ( byte [ ) ;
rank: 181
score: 99.00154252485795
patch: public out . write ( byte ch $NUMBER$ ) ;
rank: 181
score: 97.76476440429687
patch: synchronized get > Index
rank: 181
score: 97.06936645507812
patch: > next > catch
rank: 181
score: 96.8978780110677
patch: public Hash
rank: 181
score: 96.73963165283203
patch: out Exception Exception
rank: 182
score: 99.20441080729167
patch: final out . write ( ch . get CaMeL Bytes ( ) ) ;
rank: 182
score: 99.12586558948864
patch: out . write ( ch , int value ) ;
rank: 182
score: 99.00135040283203
patch: out . write ( ch ) .
rank: 182
score: 97.764306640625
patch: protected public append >
rank: 182
score: 97.0692138671875
patch: get > i > arraycopy
rank: 182
score: 96.8771260579427
patch: public notify
rank: 182
score: 96.73907470703125
patch: / null Error
rank: 183
score: 99.20432942708334
patch: out . write ( ch ) throws out . write ( $STRING$ ) ;
rank: 183
score: 99.09305826822917
patch: out . write ( ch . to CaMeL String ) ;
rank: 183
score: 99.01224190848214
patch: public private out ( ) ;
rank: 183
score: 99.00093217329545
patch: out . write ( byte ch ) ; ) ;
rank: 183
score: 97.76024780273437
patch: private public while >
rank: 183
score: 97.06825764973958
patch: clear > i > catch
rank: 183
score: 96.87326049804688
patch: List <UNK>
rank: 183
score: 96.73001861572266
patch: public null Out
rank: 183
score: 95.41150919596355
patch: public copy
rank: 184
score: 99.20384870256696
patch: out . write ( ch . to CaMeL String ( ) ) {
rank: 184
score: 99.1245829264323
patch: out . write ( ( ) throws IO CaMeL Exception ;
rank: 184
score: 99.092138671875
patch: out . write ( ch . key ) ;
rank: 184
score: 99.011474609375
patch: void out . write ( $STRING$ ) ;
rank: 184
score: 98.99983354048295
patch: out . write ( out . write ch ) ;
rank: 184
score: 97.75966796875
patch: can > i >
rank: 184
score: 97.0674540201823
patch: > iterator > ]
rank: 184
score: 96.86966959635417
patch: public values
rank: 184
score: 96.72926330566406
patch: out State err
rank: 185
score: 99.2037862141927
patch: out . write ( ch . format . ch ) ;
rank: 185
score: 99.12432391826923
patch: static out . write ( ch ) throws IO CaMeL Exception ;
rank: 185
score: 99.09208170572917
patch: public static out . write ( ch . write ) ;
rank: 185
score: 99.0107666015625
patch: public static void write ( int ch ) ;
rank: 185
score: 98.99927867542614
patch: public void out . write ( byte ch ) ;
rank: 185
score: 97.75848999023438
patch: protected protected run >
rank: 185
score: 97.06719970703125
patch: public clear > i >
rank: 185
score: 96.7281723022461
patch: private null Stack
rank: 185
score: 95.40809122721355
patch: public find
rank: 186
score: 99.20364379882812
patch: public synchronized out . write ( ch [ ] ) ;
rank: 186
score: 99.12420099431819
patch: out . write ( ch , byte value ) ;
rank: 186
score: 99.0102206143466
patch: public public out . write ( String ch ) ;
rank: 186
score: 98.99891967773438
patch: out . write ( ch , false ) ;
rank: 186
score: 97.75611877441406
patch: put > i
rank: 186
score: 97.0665791829427
patch: get > i > else
rank: 186
score: 96.72769165039062
patch: public $STRING$ Error
rank: 187
score: 99.20266723632812
patch: out . write ( ch [ ] ) {
rank: 187
score: 99.08974045973558
patch: out . write ( ch . get ( str ) ) ;
rank: 187
score: 99.010107421875
patch: final . out . write ( ch ) ;
rank: 187
score: 98.99617143110795
patch: out . write ( byte ch . null ) ;
rank: 187
score: 97.75601196289062
patch: add > length >
rank: 187
score: 97.0637715657552
patch: add > i > catch
rank: 187
score: 96.7256088256836
patch: public Error IO
rank: 188
score: 99.20262993706598
patch: out . write . write ( ch )
rank: 188
score: 99.12359064275569
patch: public void out ( ) throws IO CaMeL Exception {
rank: 188
score: 99.0893085186298
patch: public abstract out . write ( int [ ] ch ) ;
rank: 188
score: 99.0098388671875
patch: public out . write ( String i ) ;
rank: 188
score: 98.99554998224431
patch: public public out . write ( byte ch ) ;
rank: 188
score: 97.754638671875
patch: private put > >
rank: 188
score: 97.06153361002605
patch: > length > iterator
rank: 188
score: 96.85489908854167
patch: public catch
rank: 188
score: 96.72335052490234
patch: protected null Error
rank: 188
score: 95.40213012695312
patch: open > >
rank: 189
score: 99.20181710379464
patch: public out . write ( ch . get CaMeL Value ( ) ;
rank: 189
score: 99.12249077690973
patch: out . write ( ch $NUMBER$ ) ;
rank: 189
score: 99.08920288085938
patch: int out . write ( byte [ ] ch ) ;
rank: 189
score: 99.00931125217014
patch: private void out . write ( ) ;
rank: 189
score: 98.99540571732955
patch: public out . write ( ch ) } ) ;
rank: 189
score: 97.7490966796875
patch: local > arraycopy >
rank: 189
score: 97.06058756510417
patch: hash > length > i
rank: 189
score: 96.8524169921875
patch: private get
rank: 189
score: 96.72029113769531
patch: / Error Exception
rank: 190
score: 99.12209250710227
patch: out . write ( ch , int ( ) ;
rank: 190
score: 99.08901541573661
patch: public static out ( ) ;
rank: 190
score: 99.00917746803977
patch: public out . write ( System . ch ) ;
rank: 190
score: 97.74859619140625
patch: script > i >
rank: 190
score: 97.0592041015625
patch: try > i > Index
rank: 190
score: 96.7134017944336
patch: out $STRING$ State
rank: 190
score: 95.40049235026042
patch: delete >
rank: 191
score: 99.12032063802083
patch: public void out ( out ) throws IO CaMeL Exception ;
rank: 191
score: 99.08748372395833
patch: public void out ( ch . write [ ] ) ;
rank: 191
score: 99.00876686789773
patch: public void out . write ( int str ) ;
rank: 191
score: 98.99486194957386
patch: public out . write ( ch ) throws ) {
rank: 191
score: 97.74717407226562
patch: synchronized add > >
rank: 191
score: 97.05898030598958
patch: clear > i > ++
rank: 191
score: 96.84456380208333
patch: public !
rank: 191
score: 96.7129898071289
patch: public Exception Clone
rank: 192
score: 99.198974609375
patch: out . write ( ch . flush ( ) throws IO CaMeL Exception ;
rank: 192
score: 99.11963907877605
patch: public out . write ( ch ) { ) ; }
rank: 192
score: 99.08669026692708
patch: void out . write ( char [ ] ch ) ;
rank: 192
score: 99.00873357599431
patch: public void out . write ( String str ) ;
rank: 192
score: 98.99481756036931
patch: out . write ( byte 1 ] ch ) ;
rank: 192
score: 97.74623107910156
patch: get > length
rank: 192
score: 97.05880737304688
patch: catch > > size
rank: 192
score: 96.84368896484375
patch: public contains
rank: 193
score: 99.19882638113839
patch: out . write ( ch . hash CaMeL Code ( ) ) ;
rank: 193
score: 99.11930338541667
patch: out . write ( String ch ) throws IO CaMeL Exception
rank: 193
score: 99.08633188100961
patch: public out . write ( String int [ ] ch ) ;
rank: 193
score: 99.00751953125
patch: public void out . write ( out ) ;
rank: 193
score: 98.99473876953125
patch: out . write ( ch ( ch ) ;
rank: 193
score: 97.74393920898437
patch: private synchronized for >
rank: 193
score: 97.05734252929688
patch: > finally > catch
rank: 193
score: 96.82926432291667
patch: next
rank: 193
score: 96.70803833007812
patch: public run Stack
rank: 193
score: 95.39554850260417
patch: load >
rank: 194
score: 99.19849571814903
patch: public write . write ( ch ) throws IO CaMeL Exception ;
rank: 194
score: 99.00666155133929
patch: void write ( ch ) ;
rank: 194
score: 98.99461059570312
patch: out . write ( byte $NUMBER$ 1 ) ;
rank: 194
score: 97.7411376953125
patch: setup > i >
rank: 194
score: 97.0570780436198
patch: clear > length > Index
rank: 194
score: 96.82804361979167
patch: public finally
rank: 194
score: 96.70799255371094
patch: * State Exception
rank: 194
score: 95.39518229166667
patch: private boolean
rank: 195
score: 99.1980712890625
patch: public out . write ( ch . write ( ch . next ) ;
rank: 195
score: 99.11879660866477
patch: out . write ( ch , Object ch ) ;
rank: 195
score: 99.08411254882813
patch: out . write ( ch + value ) ;
rank: 195
score: 99.00659790039063
patch: public abstract out . write ( this ) ;
rank: 195
score: 98.99324951171874
patch: out . write ( $STRING$ ) ; ) ;
rank: 195
score: 97.73978881835937
patch: my > i >
rank: 195
score: 97.05503336588542
patch: catch > > length
rank: 195
score: 96.77815755208333
patch: public create
rank: 195
score: 96.70097351074219
patch: out Exception Stack
rank: 195
score: 95.39476776123047
patch: public synchronized boolean
rank: 196
score: 99.19803873697917
patch: out . write ( ch . char i ) throws IO CaMeL Exception ;
rank: 196
score: 99.11868990384616
patch: out . write ( ) throws out . IO CaMeL Exception ;
rank: 196
score: 99.083740234375
patch: public abstract out . write ( int i ) ;
rank: 196
score: 99.0035400390625
patch: void write ( int ch ) ;
rank: 196
score: 98.99279022216797
patch: . . write ( ch ) ;
rank: 196
score: 97.735498046875
patch: private public replace >
rank: 196
score: 97.0535888671875
patch: > iterator > catch
rank: 196
score: 96.69922637939453
patch: java State State
rank: 196
score: 95.39077758789062
patch: public iterator
rank: 197
score: 99.19782366071429
patch: public out . write ( ch . get CaMeL Length ( ) ;
rank: 197
score: 99.11852088341347
patch: public out . write ( String ) throws IO CaMeL Exception ;
rank: 197
score: 99.0836181640625
patch: out . write ( ch . equals ( $STRING$ ) ) ;
rank: 197
score: 98.989990234375
patch: out . write ( write ch ) ;
rank: 197
score: 97.73424682617187
patch: run > ] >
rank: 197
score: 97.05330403645833
patch: insert > i > i
rank: 197
score: 96.69920349121094
patch: synchronized Exception State
rank: 197
score: 95.39047241210938
patch: open >
rank: 198
score: 99.19688197544643
patch: out out . write ( ch . hash CaMeL Code ( ) ;
rank: 198
score: 99.11672973632812
patch: out . write ( ch , int ch $NUMBER$ ) ;
rank: 198
score: 99.08347389914773
patch: / * ] out . write ( ch ) ;
rank: 198
score: 98.9899658203125
patch: public out . write ( ] ch ) throws
rank: 198
score: 97.73338012695312
patch: can > catch >
rank: 198
score: 97.05010986328125
patch: get > length > catch
rank: 198
score: 96.7551778157552
patch: public Map
rank: 198
score: 96.69719696044922
patch: public null err
rank: 198
score: 95.38693237304688
patch: org <UNK> <UNK>
rank: 199
score: 99.19519981971153
patch: out . write ( ch ) { write ( ch ) ;
rank: 199
score: 99.1161358173077
patch: public out . write ( ch ) throws Interrupted CaMeL Exception {
rank: 199
score: 99.08319561298077
patch: out . write ( ch . to CaMeL Char ( ) ;
rank: 199
score: 98.9888028231534
patch: public boolean out . write ( ] ch ) ;
rank: 199
score: 97.73168334960937
patch: get > while >
rank: 199
score: 97.05002848307292
patch: log > case >
rank: 199
score: 96.7540995279948
patch: public Writer
rank: 199
score: 96.69691467285156
patch: public null Unsupported
rank: 199
score: 95.38421630859375
patch: public public Abstract
rank: 200
score: 99.19507707868304
patch: public boolean out . write ( ch ) throws IO CaMeL Exception ;
rank: 200
score: 99.11549886067708
patch: public out . write ( ch ) throws ch . )
rank: 200
score: 99.08245849609375
patch: Object out ( ch . to CaMeL String ( ) ;
rank: 200
score: 99.00154876708984
patch: private void out ( out ) ;
rank: 200
score: 98.98832563920455
patch: out . write ( byte $NUMBER$ $NUMBER$ ] ) ;
rank: 200
score: 97.7315673828125
patch: put > Index
rank: 200
score: 97.04982503255208
patch: > catch > ]
rank: 200
score: 96.74845377604167
patch: public ends
rank: 200
score: 96.69498443603516
patch: public Error Illegal
rank: 201
score: 99.19469342912946
patch: out . write ( ch ) throws Not CaMeL Implemented CaMeL Exception ;
rank: 201
score: 99.11532931857639
patch: public out . write ( char ) ;
rank: 201
score: 99.08214314778645
patch: protected out . write ( char [ ] ch ) ;
rank: 201
score: 99.00145374644886
patch: private static out . write ( String ch ) ;
rank: 201
score: 98.98771362304687
patch: out . write ( this . ch ) ;
rank: 201
score: 97.73035888671875
patch: protected put > i
rank: 201
score: 97.04551188151042
patch: insert > length > i
rank: 201
score: 96.74285888671875
patch: public last
rank: 201
score: 96.69485473632812
patch: void Exception State
rank: 202
score: 99.19452776227679
patch: public out . write ( ch . get CaMeL Bytes ( ) )
rank: 202
score: 99.11461046006944
patch: out [ ] write ( ch ) ;
rank: 202
score: 99.08085801866319
patch: public out . write ( String ) ;
rank: 202
score: 99.00003662109376
patch: out . write ( System . out ) ;
rank: 202
score: 98.98737250434027
patch: protected out . write ( $STRING$ ) ;
rank: 202
score: 97.72383880615234
patch: static get >
rank: 202
score: 97.04545084635417
patch: > catch > iterator
rank: 202
score: 96.72566731770833
patch: private set
rank: 202
score: 96.69256591796875
patch: public protected Exception
rank: 202
score: 95.37962849934895
patch: public Int
rank: 203
score: 99.08065185546874
patch: out . write ( ch . in ) ;
rank: 203
score: 98.99964599609375
patch: public abstract void write ( int str ) ;
rank: 203
score: 98.98711603338069
patch: out . write ( ch . . $NUMBER$ ) ;
rank: 203
score: 97.72138061523438
patch: Default > next >
rank: 203
score: 97.0439961751302
patch: catch > ch >
rank: 203
score: 96.72522989908855
patch: public start
rank: 203
score: 96.689208984375
patch: @ Exception Null
rank: 203
score: 95.3786112467448
patch: protected boolean
rank: 204
score: 99.19369070870536
patch: public out . write ( char ch ) throws IO CaMeL Exception {
rank: 204
score: 99.11385404146634
patch: public static out . write ( ch ) throws IO CaMeL Exception
rank: 204
score: 99.0805419921875
patch: public static out . write ( byte ) ;
rank: 204
score: 98.99863503196023
patch: out . write ( int str . size ) ;
rank: 204
score: 98.98664994673295
patch: out . write ( ch . write out ) ;
rank: 204
score: 97.71954956054688
patch: private get > i
rank: 204
score: 97.04384358723958
patch: add > length > ]
rank: 204
score: 96.71785481770833
patch: Stack <UNK>
rank: 204
score: 96.68408203125
patch: private Runtime Stack
rank: 204
score: 95.37358093261719
patch: show ( <UNK>
rank: 205
score: 99.19322858537946
patch: protected out . write ( String ch ) throws IO CaMeL Exception ;
rank: 205
score: 99.1129901592548
patch: out . write ( Character ch ) throws IO CaMeL Exception ;
rank: 205
score: 99.08002178485577
patch: void out . write ( ch . get ( ch ) ;
rank: 205
score: 98.99859064275569
patch: void write ( int byte [ ] ch ) ;
rank: 205
score: 98.98652787642045
patch: public out . write ( ch ) throws ch ;
rank: 205
score: 97.71849975585937
patch: println > arraycopy >
rank: 205
score: 97.04239908854167
patch: null > catch >
rank: 205
score: 96.70371500651042
patch: public trim
rank: 205
score: 96.68254852294922
patch: public null catch
rank: 206
score: 99.19193812779018
patch: out . write ( ch ) throws ch . read ( ) ;
rank: 206
score: 99.11244895241477
patch: public out . write ( ) throws IO CaMeL Exception
rank: 206
score: 99.07887620192308
patch: write . write ( ch . get ( ch ) ) ;
rank: 206
score: 98.98648681640626
patch: out . write ( byte + ch ) ;
rank: 206
score: 97.71785888671874
patch: factory > arraycopy >
rank: 206
score: 97.0421142578125
patch: > i > finally
rank: 206
score: 96.70149739583333
patch: i
rank: 206
score: 96.68067932128906
patch: public null Thread
rank: 207
score: 99.07862345377605
patch: public out . write ( ch . write $NUMBER$ ) ;
rank: 207
score: 97.7168701171875
patch: final get > arraycopy
rank: 207
score: 97.03746541341145
patch: > length > next
rank: 207
score: 96.69873046875
patch: public parse
rank: 207
score: 96.67726135253906
patch: out err null
rank: 207
score: 95.36771392822266
patch: $NUMBER$ <UNK>
rank: 208
score: 99.19140625
patch: out . write ( ch . char [ ] Char CaMeL Sequence ) ;
rank: 208
score: 99.10957845052083
patch: public out . write ( String ch )
rank: 208
score: 99.07861328125
patch: public static out . write ( ch . write ch ) ;
rank: 208
score: 98.99688720703125
patch: out . write ( byte ch ) {
rank: 208
score: 98.98555755615234
patch: public out . write . ) ;
rank: 208
score: 97.71682739257812
patch: refresh > i >
rank: 208
score: 97.0365498860677
patch: > length > err
rank: 208
score: 96.69662475585938
patch: Value
rank: 208
score: 96.67220306396484
patch: public private Exception
rank: 208
score: 95.36599731445312
patch: load > >
rank: 209
score: 99.19131469726562
patch: out . write ( ch . to CaMeL String ( )
rank: 209
score: 99.10878342848558
patch: public final out . write ( ch ) throws IO CaMeL Exception
rank: 209
score: 98.99671519886364
patch: out . write ( byte [ ] write ) ;
rank: 209
score: 98.98541259765625
patch: out . write ( byte $NUMBER$ ) ;
rank: 209
score: 97.71497802734375
patch: activate > i >
rank: 209
score: 97.03543090820312
patch: > exit > length
rank: 209
score: 96.67361450195312
patch: Map <UNK>
rank: 209
score: 96.67042541503906
patch: public State Internal
rank: 209
score: 95.3658447265625
patch: Unique >
rank: 210
score: 99.19095052083334
patch: public final out . write ( ch . to CaMeL String ( ) ;
rank: 210
score: 99.10802112926136
patch: out . write ( Char CaMeL Sequence str ) ;
rank: 210
score: 99.07779634915866
patch: int out . write ( ch , ch . length ) ;
rank: 210
score: 98.99610053168402
patch: out . write ( int str ) ;
rank: 210
score: 98.98525168678977
patch: public out . write ( ch . ( ) ;
rank: 210
score: 97.71299438476562
patch: put > out >
rank: 210
score: 97.03535970052083
patch: catch > > case
rank: 210
score: 96.67159016927083
patch: public read
rank: 210
score: 96.669677734375
patch: public Exception Interrupted
rank: 210
score: 95.36427815755208
patch: search >
rank: 211
score: 99.1077880859375
patch: protected out . write ( ch ) throws IO CaMeL Exception
rank: 211
score: 99.07584635416667
patch: static out . write ( byte [ ] ch ) ;
rank: 211
score: 98.9959716796875
patch: out . write ( byte out . ch ) ;
rank: 211
score: 98.98419744318181
patch: out . write ( ch ) ; . out ;
rank: 211
score: 97.71090087890624
patch: trim > i >
rank: 211
score: 97.03256225585938
patch: get > i > ]
rank: 211
score: 96.66726684570312
patch: public Runnable Null
rank: 211
score: 96.66160074869792
patch: Util print
rank: 212
score: 99.1058349609375
patch: public out . write ( ch . ) throws ) ;
rank: 212
score: 98.99583604600694
patch: public void write ( int byte ) ;
rank: 212
score: 97.71079711914062
patch: get > size >
rank: 212
score: 97.0316874186198
patch: case > arraycopy >
rank: 212
score: 96.66716003417969
patch: All State State
rank: 212
score: 96.65379842122395
patch: public out
rank: 212
score: 95.36216227213542
patch: protected Not
rank: 213
score: 99.19027273995536
patch: protected out . write ( ch . get CaMeL Bytes ( ) {
rank: 213
score: 99.10565863715277
patch: out . write ( final ch ) ;
rank: 213
score: 99.07490678267045
patch: public static out . write ( long ch ) ;
rank: 213
score: 98.99531860351563
patch: private void out . write ( ch ) ;
rank: 213
score: 97.70966796875
patch: get > > Index
rank: 213
score: 97.03141276041667
patch: log > catch catch
rank: 213
score: 96.66531372070312
patch: private State 0
rank: 213
score: 96.64137776692708
patch: else
rank: 214
score: 99.19022042410714
patch: private out . write ( int ch ) throws IO CaMeL Exception {
rank: 214
score: 99.10558064778645
patch: public out . write ( ch , int count ) ;
rank: 214
score: 99.07483849158653
patch: protected void out ( ch . to CaMeL String ( ) ;
rank: 214
score: 98.99530029296875
patch: public out . write ( int str ) {
rank: 214
score: 98.98247736150569
patch: out . write ( ch . . . ) ;
rank: 214
score: 97.708984375
patch: next > i >
rank: 214
score: 97.03102620442708
patch: > length > 0
rank: 214
score: 96.66104125976562
patch: @ Exception Not
rank: 214
score: 96.63909912109375
patch: arraycopy
rank: 215
score: 99.10446999289773
patch: out . write ( ) throws ch . ) ;
rank: 215
score: 98.99530029296875
patch: public synchronized out . write ( $STRING$ ) ;
rank: 215
score: 98.98228149414062
patch: public public out . write ( $STRING$ ) ;
rank: 215
score: 97.70738525390625
patch: By > arraycopy >
rank: 215
score: 97.02958170572917
patch: remove > length > i
rank: 215
score: 96.65699768066406
patch: private null Runtime
rank: 215
score: 95.35794067382812
patch: public public increment
rank: 216
score: 99.18961007254464
patch: public out . write ( ch . char [ ] chars ) ;
rank: 216
score: 99.10445149739583
patch: public out . write ( ch ) throws out . )
rank: 216
score: 99.07400512695312
patch: public out . write ( ch . get ( ) ;
rank: 216
score: 98.99467637803819
patch: public void write ( int i ) ;
rank: 216
score: 98.9821444424716
patch: public out . write . write ( this ) ;
rank: 216
score: 97.70630645751953
patch: private append >
rank: 216
score: 97.02923583984375
patch: catch > equals >
rank: 216
score: 96.65657806396484
patch: protected Null Exception
rank: 216
score: 96.63232421875
patch: public replace
rank: 216
score: 95.35598754882812
patch: public new >
rank: 217
score: 99.18955078125
patch: out . write ( ch ) throws ( Illegal CaMeL State CaMeL Exception {
rank: 217
score: 99.1037930575284
patch: out . write ( ch , long ch ) ;
rank: 217
score: 99.07381184895833
patch: final out . write ( byte [ ] ch ) ;
rank: 217
score: 98.9815185546875
patch: out . write ( str ) ; ) ;
rank: 217
score: 97.7062744140625
patch: abstract get > i
rank: 217
score: 97.02923583984375
patch: > catch > err
rank: 217
score: 96.65644836425781
patch: / Runtime Exception
rank: 217
score: 96.62745157877605
patch: add
rank: 217
score: 95.35169474283855
patch: public flush
rank: 218
score: 99.10366586538461
patch: public void out . write ( ) throws IO CaMeL Exception ;
rank: 218
score: 99.0726826985677
patch: public out . write ( Object [ ] ch ) ;
rank: 218
score: 98.9944091796875
patch: public boolean write ( final String ch ) ;
rank: 218
score: 98.98139038085938
patch: out . write ( ch ) throws ch ;
rank: 218
score: 97.70479125976563
patch: delete > i >
rank: 218
score: 97.02767944335938
patch: get > catch > >
rank: 218
score: 96.65628814697266
patch: static Error Exception
rank: 218
score: 96.6272684733073
patch: Exception
rank: 218
score: 95.35064697265625
patch: private synchronized
rank: 219
score: 99.18929617745536
patch: out . write ( ch . out . write ( $STRING$ ) ;
rank: 219
score: 99.10350623497597
patch: public out . write ( int ch ) throws IO CaMeL Exception
rank: 219
score: 99.0726318359375
patch: out . write ( ch . get ( 0 ) ) ;
rank: 219
score: 98.99364624023437
patch: public abstract void write ( int ch ) ;
rank: 219
score: 97.70274658203125
patch: set > arraycopy >
rank: 219
score: 97.02555338541667
patch: set > i > Index
rank: 219
score: 96.6554946899414
patch: public Error Internal
rank: 219
score: 96.62650553385417
patch: get ]
rank: 219
score: 95.34991455078125
patch: public public list
rank: 220
score: 99.18907063802084
patch: out . write ( ch ) throws ( Illegal CaMeL State CaMeL Exception ;
rank: 220
score: 99.1019999186198
patch: public out . write ( ) { return out ; }
rank: 220
score: 99.07145182291667
patch: public out . write ( long [ ] ch ) ;
rank: 220
score: 98.99335271661931
patch: protected out . write ( System . out ) ;
rank: 220
score: 98.9794588955966
patch: out . write . write ( ] ch ) ;
rank: 220
score: 97.70242309570312
patch: private public next >
rank: 220
score: 97.0245869954427
patch: catch > 0 >
rank: 220
score: 96.65187581380208
patch: out Stack
rank: 220
score: 96.62211100260417
patch: protected get
rank: 220
score: 95.34516143798828
patch: public decode >
rank: 221
score: 99.188720703125
patch: out . write ( Char CaMeL Sequence str ) throws IO CaMeL Exception ;
rank: 221
score: 99.10175030048077
patch: out . write ( byte ch ) throws IO CaMeL Exception ;
rank: 221
score: 99.07136674360795
patch: out . write ( ch . char 1 ) ;
rank: 221
score: 98.99248657226562
patch: final out . write ( byte ch ) ;
rank: 221
score: 98.9791259765625
patch: out . write ( ) write ( ch ) ;
rank: 221
score: 97.7019271850586
patch: println > Index
rank: 221
score: 97.0233866373698
patch: get > length > >
rank: 221
score: 96.65115356445312
patch: public State exit
rank: 221
score: 96.6198221842448
patch: private add
rank: 222
score: 99.18853759765625
patch: out . write ( ch . to CaMeL Char CaMeL Array ( )
rank: 222
score: 99.10150146484375
patch: public out . write ( ch ) { return out ;
rank: 222
score: 98.9779940518466
patch: public out . write ( $STRING$ ) throws ) {
rank: 222
score: 97.70111083984375
patch: get > > catch
rank: 222
score: 97.02333577473958
patch: finally > i catch
rank: 222
score: 96.65071614583333
patch: public Runtime
rank: 222
score: 95.34322357177734
patch: search > >
rank: 223
score: 99.18802897135417
patch: out . write ( ch . char [ ] chars )
rank: 223
score: 99.07044677734375
patch: public void out ( ) { return ; }
rank: 223
score: 98.99184841579861
patch: public void write ( int value ) ;
rank: 223
score: 98.97763061523438
patch: public void out . write ( $STRING$ ) ;
rank: 223
score: 97.69929809570313
patch: for > catch >
rank: 223
score: 97.02327473958333
patch: > finally > else
rank: 223
score: 96.65068054199219
patch: private State null
rank: 223
score: 96.60633341471355
patch: public clone
rank: 224
score: 99.18722534179688
patch: out . write ( ch ) throws Interrupted CaMeL Exception {
rank: 224
score: 98.99171142578125
patch: out . write ( ( byte ch ) ;
rank: 224
score: 98.977392578125
patch: public out . write ( Integer ch ) ;
rank: 224
score: 97.69816589355469
patch: protected public private
rank: 224
score: 97.02081298828125
patch: add > length > Index
rank: 224
score: 96.64949798583984
patch: public Error Thread
rank: 225
score: 99.18677571614583
patch: out . write ( ch . char $NUMBER$ ) throws IO CaMeL Exception ;
rank: 225
score: 99.10036399147727
patch: out . write ( ch , int start ) ;
rank: 225
score: 99.06843397352431
patch: Iterator out . write ( ch ) ;
rank: 225
score: 98.99168812144886
patch: void out . write ( System . ch ) ;
rank: 225
score: 98.97629616477273
patch: public out . write ( str ) throws ) ;
rank: 225
score: 97.69805908203125
patch: private remove >
rank: 225
score: 97.0206298828125
patch: > next > null
rank: 225
score: 96.5995381673177
patch: abstract get
rank: 225
score: 95.33170318603516
patch: has > >
rank: 226
score: 99.186767578125
patch: private out . write ( ch ) {
rank: 226
score: 99.10008655894886
patch: out . write ( String ch ) throws ) ;
rank: 226
score: 98.99118381076389
patch: public boolean write ( int str ) ;
rank: 226
score: 98.97525024414062
patch: out . write ( ch ) . ch ;
rank: 226
score: 97.69744262695312
patch: get > min >
rank: 226
score: 96.64622497558594
patch: public Error err
rank: 226
score: 96.59823608398438
patch: public sleep
rank: 226
score: 95.3297348022461
patch: Properties ) >
rank: 227
score: 99.18647984095982
patch: out . write ( ch . write ( ch . ch ) ;
rank: 227
score: 99.10005696614583
patch: public void out ( ) throws IO CaMeL Exception { ;
rank: 227
score: 98.9909335049716
patch: public out . write ( System . class ) ;
rank: 227
score: 98.97483995225694
patch: write ( ] [ ] ch ) ;
rank: 227
score: 97.69609985351562
patch: Default > while >
rank: 227
score: 97.01954142252605
patch: > contains > public
rank: 227
score: 96.64558410644531
patch: public State iterator
rank: 227
score: 95.32954406738281
patch: private delete >
rank: 228
score: 99.18618977864584
patch: out . write ( ch . get CaMeL Line CaMeL Number ( ) ;
rank: 228
score: 99.099853515625
patch: public synchronized out . write ( ) throws IO CaMeL Exception ;
rank: 228
score: 99.06683819110577
patch: out . write ( ch ) . write ( value ) ;
rank: 228
score: 98.98912464488636
patch: public abstract out . write ( int str ) ;
rank: 228
score: 98.97461547851563
patch: public final out . write ( byte ) ;
rank: 228
score: 97.6957763671875
patch: abstract get > ]
rank: 228
score: 97.01954142252605
patch: add > i > length
rank: 228
score: 96.64495086669922
patch: @ null Error
rank: 228
score: 96.57217407226562
patch: public Boolean
rank: 229
score: 99.18609064275569
patch: public out . write ( char ch [ ] )
rank: 229
score: 99.09984334309895
patch: public out . write ( ch . out . ) ;
rank: 229
score: 98.988818359375
patch: out . write ( byte [ ] ) ;
rank: 229
score: 98.97406616210938
patch: out . write ( byte . $NUMBER$ ) ;
rank: 229
score: 97.69312744140625
patch: schedule > i >
rank: 229
score: 97.01912434895833
patch: > exit > catch
rank: 229
score: 96.63996887207031
patch: private Runnable Exception
rank: 229
score: 96.5635757446289
patch: null
rank: 229
score: 95.32855224609375
patch: protected synchronized
rank: 230
score: 99.18597881610577
patch: synchronized out . write ( ch ) throws IO CaMeL Exception ;
rank: 230
score: 99.0982666015625
patch: public out . write ( String name , ch ) ;
rank: 230
score: 99.06630295973558
patch: out . write ( ch ) ch . write ( ) ;
rank: 230
score: 98.97365112304688
patch: public out . write . write ( ) ;
rank: 230
score: 97.69178466796875
patch: reset > i >
rank: 230
score: 97.01824951171875
patch: return > catch >
rank: 230
score: 96.63838195800781
patch: final State State
rank: 230
score: 96.55780029296875
patch: ]
rank: 231
score: 99.18583984375
patch: protected abstract out . write ( ch . get CaMeL Bytes ( ) ;
rank: 231
score: 99.0969707782452
patch: out . write ( final ch ) throws IO CaMeL Exception ;
rank: 231
score: 99.06588040865384
patch: out . write ( ch . get CaMeL Value ( ) ;
rank: 231
score: 98.988037109375
patch: void out ( ch . write ( $STRING$ ) ;
rank: 231
score: 98.97294921875
patch: public out out . write ( ch ) ;
rank: 231
score: 97.69020385742188
patch: private protected put >
rank: 231
score: 97.0179443359375
patch: > out catch >
rank: 231
score: 96.63766479492188
patch: public Null Runtime
rank: 231
score: 96.557373046875
patch: public size
rank: 231
score: 95.32468668619792
patch: public Long
rank: 232
score: 99.18505859375
patch: private out . write ( ch . get CaMeL Bytes ( ) ;
rank: 232
score: 99.09682210286458
patch: public abstract out . write . write . ch ) ;
rank: 232
score: 99.06548602764423
patch: public out . write ( int double [ ] ch ) ;
rank: 232
score: 98.98778076171875
patch: public int write . write ( ch ) ;
rank: 232
score: 98.97242320667614
patch: public out . write ( byte ; . ) ;
rank: 232
score: 97.68961181640626
patch: synchronized public get >
rank: 232
score: 97.01785278320312
patch: add > i > Index
rank: 232
score: 96.63616943359375
patch: private Error State
rank: 232
score: 96.54989624023438
patch: append >
rank: 232
score: 95.32321166992188
patch: static public void
rank: 233
score: 99.18477689302884
patch: out . write ( ch . char [ ] chars ) {
rank: 233
score: 99.09670188210227
patch: out . write ( ch , boolean ch ) ;
rank: 233
score: 99.06493123372395
patch: public out . write ( ch . write ( ) ;
rank: 233
score: 98.98683860085227
patch: public void write ( String byte CaMeL Value ) ;
rank: 233
score: 98.97174627130681
patch: public out . write ( $STRING$ ) { ) ;
rank: 233
score: 97.68876953125
patch: I > run >
rank: 233
score: 97.0177510579427
patch: > out > Stack
rank: 233
score: 96.63571166992188
patch: / State State
rank: 233
score: 95.31685638427734
patch: public public XML
rank: 234
score: 99.18470052083333
patch: public final out . write ( ch . get CaMeL Bytes ( ) )
rank: 234
score: 99.09647310697116
patch: out . write ( ch , 0 , ch . length )
rank: 234
score: 99.06434122721355
patch: out . write ( ch . read ( ) ) ;
rank: 234
score: 98.9863037109375
patch: public synchronized out . write ( out ) ;
rank: 234
score: 98.971728515625
patch: protected out . write ( byte ch ) ;
rank: 234
score: 97.68818664550781
patch: private while >
rank: 234
score: 97.0169677734375
patch: > run > case
rank: 234
score: 96.63492584228516
patch: public new Exception
rank: 234
score: 96.54864501953125
patch: private run
rank: 234
score: 95.31246948242188
patch: matches > >
rank: 235
score: 99.18465847439236
patch: public abstract void write ( ch ) ;
rank: 235
score: 99.063720703125
patch: out . write ( ch , 0 , 1 ) ;
rank: 235
score: 98.98609924316406
patch: public int write ( out ) ;
rank: 235
score: 98.97166859019886
patch: out . write ( ] ch ) throws ) ;
rank: 235
score: 97.68793334960938
patch: protected protected public public
rank: 235
score: 97.01687622070312
patch: transform > i > i
rank: 235
score: 96.63410949707031
patch: out State out
rank: 235
score: 96.54801940917969
patch: Util
rank: 235
score: 95.31097412109375
patch: < >
rank: 236
score: 99.18438313802083
patch: out . write ( ch . char ch ) throws IO CaMeL Exception ;
rank: 236
score: 99.09508338341347
patch: public out . write ( ch ) { return out ; }
rank: 236
score: 99.063330078125
patch: public out . write ( int i ) ;
rank: 236
score: 98.98599853515626
patch: out . write ( byte byte i ) ;
rank: 236
score: 98.97095336914063
patch: out . ch . write ( ch ) ;
rank: 236
score: 97.68768920898438
patch: pop > i >
rank: 236
score: 97.01632690429688
patch: add > i > >
rank: 236
score: 96.6334228515625
patch: @ State State
rank: 236
score: 95.30943806966145
patch: ch
rank: 237
score: 99.1843505859375
patch: out . write ( ch , ch . get CaMeL Length ( ) ;
rank: 237
score: 99.0947265625
patch: public out . write ( String str ) throws ) ;
rank: 237
score: 99.06320425180289
patch: public static out . write ( Object [ ] ch ) ;
rank: 237
score: 98.98585510253906
patch: void out ( String ch ) ;
rank: 237
score: 98.9697598544034
patch: public out . write ( ch ) return ch ;
rank: 237
score: 97.68714904785156
patch: protected put >
rank: 237
score: 97.0156758626302
patch: try > i catch >
rank: 237
score: 96.62779235839844
patch: private Error Error
rank: 237
score: 96.54087320963542
patch: public compare
rank: 237
score: 95.30915069580078
patch: run > >
rank: 238
score: 99.18429361979166
patch: public out . write ( ch . out . write ( $STRING$ ) ;
rank: 238
score: 99.0939053622159
patch: public out . write ( ch , int length )
rank: 238
score: 99.06137084960938
patch: out . write ( ch . get . ch ) ;
rank: 238
score: 98.98583984375
patch: public abstract synchronized out . write ( ch ) ;
rank: 238
score: 97.68565063476562
patch: protected public new >
rank: 238
score: 96.62530517578125
patch: @ Exception Runtime
rank: 238
score: 95.30902862548828
patch: public synchronized new
rank: 239
score: 99.18406325120192
patch: out . write write ( ch ) throws IO CaMeL Exception {
rank: 239
score: 99.06131998697917
patch: out . write ( ch , 0 , $NUMBER$ ) ;
rank: 239
score: 98.98572387695313
patch: public public out . write ( ch ) ;
rank: 239
score: 97.68282470703124
patch: I > get >
rank: 239
score: 97.00954182942708
patch: > i > offset
rank: 239
score: 96.62489318847656
patch: public run null
rank: 239
score: 96.53604125976562
patch: / ]
rank: 239
score: 95.30889129638672
patch: abstract synchronized void
rank: 240
score: 99.18308803013393
patch: protected out . write ( int ch ) throws IO CaMeL Exception ;
rank: 240
score: 99.09371948242188
patch: Object out ( ) throws IO CaMeL Exception ;
rank: 240
score: 99.06118774414062
patch: public static out . write ( ch . ch ) ;
rank: 240
score: 98.98479669744319
patch: out . write ( byte ch ch ch ) ;
rank: 240
score: 97.68252563476562
patch: final get > while
rank: 240
score: 97.00831095377605
patch: > length >= i
rank: 240
score: 96.62455749511719
patch: non null State
rank: 240
score: 95.30815887451172
patch: public abstract boolean
rank: 241
score: 99.18228585379464
patch: out . write . ch . out . write ( $STRING$ ) ;
rank: 241
score: 99.09352805397727
patch: out . write ( write ( char ch ) ;
rank: 241
score: 99.06083170572917
patch: out . write ( ch + 0 , ch ) ;
rank: 241
score: 97.68248901367187
patch: protected private run >
rank: 241
score: 97.0081787109375
patch: > size > catch
rank: 241
score: 96.62322998046875
patch: / err Exception
rank: 241
score: 96.52726236979167
patch: set
rank: 241
score: 95.30815887451172
patch: clear > >
rank: 242
score: 99.1822509765625
patch: public out . write ( ch [ ] ) throws IO CaMeL Exception ;
rank: 242
score: 99.09326171875
patch: out . write ( String value ) throws IO CaMeL Exception ;
rank: 242
score: 98.98229302300348
patch: out . write ( double ch ) ;
rank: 242
score: 98.96856134588069
patch: out . write ( byte $NUMBER$ ] 1 ) ;
rank: 242
score: 97.67764282226562
patch: if > i >
rank: 242
score: 97.00717163085938
patch: > i = public
rank: 242
score: 96.62227630615234
patch: private null Null
rank: 242
score: 96.5182393391927
patch: get i
rank: 242
score: 95.30784098307292
patch: protected is
rank: 243
score: 99.18179757254464
patch: public abstract out . write ( ch . write ( ch ) ;
rank: 243
score: 99.0926513671875
patch: out . write ( ch , byte [ ] value )
rank: 243
score: 99.060302734375
patch: public out . write ( ch . close ( ) ;
rank: 243
score: 98.98191139914773
patch: public out . write ( int byte ch ) ;
rank: 243
score: 98.96784973144531
patch: ch . write ( ch ) ;
rank: 243
score: 97.67691650390626
patch: factory > for >
rank: 243
score: 97.00663248697917
patch: setup > i > i
rank: 243
score: 96.6221923828125
patch: public null new
rank: 243
score: 96.50897216796875
patch: public write
rank: 243
score: 95.30442301432292
patch: if >
rank: 244
score: 99.09250112680289
patch: out . write ( String name ) throws IO CaMeL Exception ;
rank: 244
score: 99.06022135416667
patch: int out . write ( char [ ] ch ) ;
rank: 244
score: 98.98178100585938
patch: ; void out . write ( ch ) ;
rank: 244
score: 98.96776234019886
patch: out . write ( ch ) ) ; ) ;
rank: 244
score: 97.00621541341145
patch: add > catch > i
rank: 244
score: 96.62150573730469
patch: public Null Null
rank: 244
score: 96.49955240885417
patch: return
rank: 245
score: 99.181689453125
patch: out . write ( ch ) throws ( Illegal CaMeL Argument CaMeL Exception ;
rank: 245
score: 99.09244995117187
patch: public out . write write ( ch ) ;
rank: 245
score: 99.05966186523438
patch: out . write ( ( int [ ] ch ) ;
rank: 245
score: 98.96749267578124
patch: private out . write ( ] ch ) ;
rank: 245
score: 97.67611083984374
patch: put > catch >
rank: 245
score: 97.00608317057292
patch: > catch > index
rank: 245
score: 96.6204833984375
patch: public err Stack
rank: 245
score: 96.4952901204427
patch: public init
rank: 245
score: 95.30252075195312
patch: public static Not
rank: 246
score: 99.09195556640626
patch: synchronized void out . write ( ch ) ;
rank: 246
score: 99.05768377130681
patch: out . write ( long [ ] ch ) ;
rank: 246
score: 98.9779052734375
patch: public void write ( int str . length ) ;
rank: 246
score: 98.9674560546875
patch: public out . write ( byte ; ) ;
rank: 246
score: 97.6736083984375
patch: local > catch >
rank: 246
score: 97.00511678059895
patch: read > i > i
rank: 246
score: 96.62025451660156
patch: java State Stack
rank: 246
score: 96.48472086588542
patch: public load
rank: 247
score: 99.18060772235577
patch: out . write ( ch . to CaMeL String ( ) {
rank: 247
score: 99.0902432528409
patch: out . write ( ch , int write ) ;
rank: 247
score: 99.0569559733073
patch: out . write ( ch . substring ( ) ) ;
rank: 247
score: 97.6730712890625
patch: protected public remove >
rank: 247
score: 97.0048828125
patch: > out > catch
rank: 247
score: 96.61881256103516
patch: non Exception State
rank: 247
score: 96.47219848632812
patch: public return
rank: 247
score: 95.29615783691406
patch: public reverse >
rank: 248
score: 99.1805752840909
patch: public abstract void write . write ( ch ) ;
rank: 248
score: 99.09011840820312
patch: public out . write ( int ch ) throws ch ;
rank: 248
score: 99.0562744140625
patch: public out . write ( byte [ ] chars ) ;
rank: 248
score: 98.96630859375
patch: public out . write ( $STRING$ ) out ) ;
rank: 248
score: 97.6723876953125
patch: for > out >
rank: 248
score: 97.0044453938802
patch: validate > i > i
rank: 248
score: 96.61859130859375
patch: * null Exception
rank: 248
score: 95.2960205078125
patch: replace > >
rank: 249
score: 99.18002115885416
patch: public abstract out . write ( ch . to CaMeL String ( ) ;
rank: 249
score: 99.0895663174716
patch: public boolean out ( ) throws IO CaMeL Exception ;
rank: 249
score: 98.96597629123264
patch: out . write ( byte ) ) ;
rank: 249
score: 97.67018432617188
patch: keys > i >
rank: 249
score: 97.00216674804688
patch: public put > i >
rank: 249
score: 96.6183090209961
patch: public EMPTY Exception
rank: 249
score: 96.44866943359375
patch: contains >
rank: 249
score: 95.29401397705078
patch: public static boolean
rank: 250
score: 99.17967122395834
patch: out . write ( ch , int i ) throws IO CaMeL Exception ;
rank: 250
score: 99.0532735188802
patch: synchronized out . write ( byte [ ] ch ) ;
rank: 250
score: 98.97670288085938
patch: / ) out . write ( ch ) ;
rank: 250
score: 98.96549479166667
patch: public out ( ) {
rank: 250
score: 97.66942749023437
patch: get > ] arraycopy
rank: 250
score: 97.00161743164062
patch: catch > i >=
rank: 250
score: 96.61785125732422
patch: synchronized Exception null
rank: 250
score: 96.44826253255208
patch: protected set
rank: 250
score: 95.29298400878906
patch: protected final void
rank: 251
score: 99.17921956380208
patch: public final out . write ( ch [ ] ) {
rank: 251
score: 99.052978515625
patch: out . write ( to CaMeL String ( ) ;
rank: 251
score: 98.97612970525569
patch: out . write ( ch , private ( ) ;
rank: 251
score: 98.96516557173295
patch: public out ) out . write ( ch ) ;
rank: 251
score: 97.6689453125
patch: set > catch >
rank: 251
score: 97.00020345052083
patch: > hash > i
rank: 251
score: 96.61689758300781
patch: @ Exception Stack
rank: 251
score: 96.43153889973958
patch: public fill
rank: 251
score: 95.29144287109375
patch: abstract abstract void
rank: 252
score: 99.17869215745192
patch: out . write ( char ch ) throws IO CaMeL Exception {
rank: 252
score: 99.05192427201705
patch: out . write ( double [ ] ch ) ;
rank: 252
score: 98.9759854403409
patch: write . write . write ( byte ch ) ;
rank: 252
score: 98.9650545987216
patch: out . write ( byte ch . ( ) ;
rank: 252
score: 97.6688232421875
patch: update > ]
rank: 252
score: 97.00002034505208
patch: > exit > else
rank: 252
score: 96.61628723144531
patch: private public Exception
rank: 252
score: 95.2869364420573
patch: public T
rank: 253
score: 99.17831856863839
patch: public out . write ( ch . get CaMeL Buffer ( ) {
rank: 253
score: 99.08739624023437
patch: out . write ( ( int ch ) ;
rank: 253
score: 99.05095880681819
patch: out . write ( ch ) return ch ) ;
rank: 253
score: 98.97525024414062
patch: public out . write ( byte str ) ;
rank: 253
score: 98.96497192382813
patch: public out . write ( byte write ) ;
rank: 253
score: 97.66768188476563
patch: private public public run
rank: 253
score: 96.99887084960938
patch: catch > i :
rank: 253
score: 96.6152114868164
patch: public Error new
rank: 253
score: 95.2861836751302
patch: public map
rank: 254
score: 99.17824009486607
patch: out . out . write ( ch ) throws IO CaMeL Exception ;
rank: 254
score: 99.08711751302083
patch: out . write ( char ch [ ] , ) ;
rank: 254
score: 99.05063698508523
patch: public static out . write ( float ch ) ;
rank: 254
score: 98.9750244140625
patch: protected out . write ( int str ) ;
rank: 254
score: 98.9647549715909
patch: out . write ( ch ) . } ) ;
rank: 254
score: 97.66695556640624
patch: in > i >
rank: 254
score: 96.99809265136719
patch: > catch
rank: 254
score: 96.61520385742188
patch: void null null
rank: 254
score: 96.41482543945312
patch: Util finally
rank: 255
score: 99.08705647786458
patch: out . write ( ch , int ch 1 ) ;
rank: 255
score: 99.04961547851562
patch: out . write ( 0 , ch ) ;
rank: 255
score: 98.97489711216518
patch: private int out ( ) ;
rank: 255
score: 98.96459350585937
patch: out . write ( out . ( ) ;
rank: 255
score: 97.66593017578126
patch: Later > catch >
rank: 255
score: 96.99425252278645
patch: get > i > case
rank: 255
score: 96.61515808105469
patch: private State Index
rank: 255
score: 96.41239420572917
patch: next >
rank: 255
score: 95.28429412841797
patch: public public E
rank: 256
score: 99.17801106770834
patch: out . write ( ch ) { return write ( ch ) ; }
rank: 256
score: 99.0863037109375
patch: out . write ( ) throws ) ;
rank: 256
score: 99.04890272352431
patch: public String [ ] out ( ) ;
rank: 256
score: 98.97467041015625
patch: protected out . write ( int ch ) ;
rank: 256
score: 98.96452192826705
patch: public out . write ( out . ( ) ;
rank: 256
score: 97.66546630859375
patch: do > >
rank: 256
score: 96.99307250976562
patch: apply > i > i
rank: 256
score: 96.61308288574219
patch: protected State null
rank: 256
score: 96.40050506591797
patch: System
rank: 256
score: 95.28353118896484
patch: public abstract synchronized
rank: 257
score: 99.17780010516827
patch: out . write ( ch . get CaMeL Type ( ) ;
rank: 257
score: 99.0859375
patch: public synchronized void out . write ( ch ) ;
rank: 257
score: 99.04856363932292
patch: public void out ( ch . write ( str ) ;
rank: 257
score: 98.97430419921875
patch: public abstract void write ( String str ) ;
rank: 257
score: 98.96251220703125
patch: public out . write ( byte ; . ;
rank: 257
score: 97.66503295898437
patch: bind > i >
rank: 257
score: 96.99137369791667
patch: clear > i > else
rank: 257
score: 96.61296081542969
patch: public Exception XML
rank: 257
score: 95.28321075439453
patch: private final void
rank: 258
score: 99.17744663783482
patch: out . write . write ( ch ) { return ch ; }
rank: 258
score: 99.085009765625
patch: public void out ( ) { ; ; }
rank: 258
score: 99.04856178977273
patch: public synchronized out . write ( int ch ) ;
rank: 258
score: 98.96199174360795
patch: public out . write ( byte - 1 ) ;
rank: 258
score: 97.662109375
patch: message > i >
rank: 258
score: 96.9910888671875
patch: > i > exit
rank: 258
score: 96.61078643798828
patch: void null Exception
rank: 258
score: 96.39404296875
patch: Value <UNK>
rank: 258
score: 95.28289794921875
patch: clear >
rank: 259
score: 99.17710658482143
patch: out . write ( ch . out . to CaMeL String ( )
rank: 259
score: 99.08437278053977
patch: out . write ( ch , char ch ) ;
rank: 259
score: 99.04856178977273
patch: public static out . write ( int i ) ;
rank: 259
score: 98.97405133928571
patch: private void out ( ) {
rank: 259
score: 98.96195845170455
patch: out . write ( ch . null ( ) ;
rank: 259
score: 97.655029296875
patch: add > arraycopy
rank: 259
score: 96.99072265625
patch: load > length > i
rank: 259
score: 96.60822296142578
patch: private Error null
rank: 260
score: 99.17708042689732
patch: out . write ( ch , out . write ( ch ) ;
rank: 260
score: 99.08418412642045
patch: out . write ( char [ ] value ) ;
rank: 260
score: 98.97394476996527
patch: private abstract out . write ( ) ;
rank: 260
score: 97.65414428710938
patch: has > ]
rank: 260
score: 96.99010213216145
patch: > catch > next
rank: 260
score: 96.60659790039062
patch: public Exception TRUE
rank: 260
score: 96.38438924153645
patch: private <UNK>
rank: 260
score: 95.27995300292969
patch: sleep > >
rank: 261
score: 99.17666829427084
patch: out . write ( ch . write ( Char CaMeL Sequence str ) ;
rank: 261
score: 99.047607421875
patch: public static out . write ( int int ch ) ;
rank: 261
score: 98.96165161132812
patch: public out . write ( double ch ) ;
rank: 261
score: 96.98924763997395
patch: > out > else
rank: 261
score: 96.60574340820312
patch: out err Exception
rank: 261
score: 96.3831278483073
patch: public err
rank: 261
score: 95.27720642089844
patch: private abstract <UNK>
rank: 262
score: 99.17655436197917
patch: public out . out . write ( ch ) throws IO CaMeL Exception ;
rank: 262
score: 99.0838153545673
patch: out . write ( ch , ch . read ( ) ;
rank: 262
score: 99.04568481445312
patch: void out . write ( String [ ] ch ) ;
rank: 262
score: 98.97384643554688
patch: out . write ( ch ; null ) ;
rank: 262
score: 98.96119273792614
patch: out . write ( ch , int $NUMBER$ ) ;
rank: 262
score: 96.98743693033855
patch: > i > starts
rank: 262
score: 96.60562133789062
patch: public new State
rank: 262
score: 96.37919108072917
patch: public stop
rank: 262
score: 95.27633666992188
patch: public Throwable
rank: 263
score: 99.17653111049107
patch: out . write ( ch . write ( ch . format ) ;
rank: 263
score: 99.08371206430289
patch: public out . write ( ch . char [ ] ch )
rank: 263
score: 99.0454989346591
patch: public void out ( ch . close ( ) ;
rank: 263
score: 98.9734774502841
patch: public out . write ( final String str ) ;
rank: 263
score: 98.95990545099431
patch: out . write ( ch , byte $NUMBER$ ) ;
rank: 263
score: 96.98722330729167
patch: log > i > i
rank: 263
score: 96.60517883300781
patch: void State Error
rank: 263
score: 95.27178955078125
patch: public synchronized String
rank: 264
score: 99.17644391741071
patch: out . write ( ch . write ( ch . next ) ;
rank: 264
score: 99.04518821022727
patch: String . [ ] out ( ) { ; }
rank: 264
score: 98.97302924262152
patch: public void write ( Object ch ) ;
rank: 264
score: 97.62581634521484
patch: protected public protected
rank: 264
score: 96.98574829101562
patch: > next > length
rank: 264
score: 96.60395812988281
patch: private Exception Not
rank: 264
score: 96.37440999348958
patch: public trace
rank: 264
score: 95.27066040039062
patch: public Iterable >
rank: 265
score: 99.17572021484375
patch: out . write ( ch . get CaMeL Chars ( ) ) ;
rank: 265
score: 99.0831298828125
patch: out . write ( ch , int chars . length ) ;
rank: 265
score: 99.04510498046875
patch: public out . write ( byte [ ] in ) ;
rank: 265
score: 98.97139195033482
patch: public String out ( ) ;
rank: 265
score: 98.95942826704545
patch: out . write ( Float [ ] ch ) ;
rank: 265
score: 97.6229019165039
patch: private catch >
rank: 265
score: 96.98523966471355
patch: > i : public
rank: 265
score: 96.60384368896484
patch: protected State Type
rank: 265
score: 96.36865234375
patch: Util catch
rank: 266
score: 99.17568359375
patch: public final out . write ( ch . to CaMeL String ( ) {
rank: 266
score: 99.08289683948864
patch: out . write ( ch . ch . ) ;
rank: 266
score: 99.04463704427083
patch: out . write ( 0 , ch . length ) ;
rank: 266
score: 98.97123718261719
patch: private abstract void out ( ) ;
rank: 266
score: 98.95938110351562
patch: public out . write ( ) ; ) ;
rank: 266
score: 97.61731719970703
patch: private set >
rank: 266
score: 96.98424072265625
patch: clear > catch >
rank: 266
score: 96.60343170166016
patch: abstract Exception State
rank: 266
score: 96.36429850260417
patch: private close
rank: 266
score: 95.27002716064453
patch: < synchronized void
rank: 267
score: 99.1754619891827
patch: final out . write ( ch ) throws IO CaMeL Exception {
rank: 267
score: 99.04445393880208
patch: out . write ( name ) write ( ch ) ;
rank: 267
score: 98.97005615234374
patch: out . write ( [ 1 ] ) ;
rank: 267
score: 98.95896218039773
patch: public out . write . write ( out ) ;
rank: 267
score: 97.61509704589844
patch: for > i
rank: 267
score: 96.984130859375
patch: get > i : public
rank: 267
score: 96.6026382446289
patch: synchronized State Stack
rank: 267
score: 96.36419677734375
patch: get :
rank: 268
score: 99.17509242466518
patch: private out . write ( int ch ) throws IO CaMeL Exception ;
rank: 268
score: 99.08181527944711
patch: public abstract out . write ( char [ ] ch ) ;
rank: 268
score: 98.9589614868164
patch: write . write ( $STRING$ ) ;
rank: 268
score: 97.5985107421875
patch: get > next
rank: 268
score: 96.60161590576172
patch: / Exception Error
rank: 268
score: 96.3628438313802
patch: public code
rank: 268
score: 95.26634979248047
patch: public public copy
rank: 269
score: 99.17429896763393
patch: out . write ( ch . get CaMeL Bytes ( ch ) ;
rank: 269
score: 99.04356892903645
patch: String out . write ( int [ ] ch ) ;
rank: 269
score: 98.9691162109375
patch: public static out . write ( String str ) {
rank: 269
score: 98.95849609375
patch: out . write ( byte ch $NUMBER$ ) ;
rank: 269
score: 97.59474182128906
patch: protected append >
rank: 269
score: 96.97503662109375
patch: log > null
rank: 269
score: 96.59959411621094
patch: * Exception Exception
rank: 269
score: 95.26219940185547
patch: sort > >
rank: 270
score: 99.17416178385416
patch: out . write ( ch . get CaMeL Input CaMeL Stream ( ) {
rank: 270
score: 98.95794067382812
patch: public synchronized out . write ( byte ) ;
rank: 270
score: 96.97360229492188
patch: > else
rank: 270
score: 96.59862518310547
patch: public Error Out
rank: 270
score: 96.35542805989583
patch: Set public
rank: 270
score: 95.26200866699219
patch: Default
rank: 271
score: 99.07970174153645
patch: out . write ( ch ) ; ch . ) ;
rank: 271
score: 98.96842817826705
patch: out . write ( ch , String str ) ;
rank: 271
score: 97.58925374348958
patch: Default >
rank: 271
score: 96.5958023071289
patch: protected Exception Runtime
rank: 271
score: 96.3408711751302
patch: public Safe
rank: 271
score: 95.26139068603516
patch: Null >
rank: 272
score: 99.174072265625
patch: public out . write ( ch . hash CaMeL Code ( )
rank: 272
score: 99.07853560014205
patch: public void out ( ch . out ( ) ;
rank: 272
score: 99.04184977213542
patch: int out . write ( int [ ] ch ) ;
rank: 272
score: 98.968017578125
patch: public void write ( int byte ch ) ;
rank: 272
score: 97.58486938476562
patch: clear > ]
rank: 272
score: 96.59465026855469
patch: public Exception log
rank: 272
score: 96.34073893229167
patch: log
rank: 273
score: 99.17398274739584
patch: protected out . write . write ( ch ) throws IO CaMeL Exception ;
rank: 273
score: 99.07810465494792
patch: public abstract out . write ( ch , int ) ;
rank: 273
score: 99.04129028320312
patch: out . write ( ch ) write ( out ) ;
rank: 273
score: 98.9562655362216
patch: public ) . out . write ( ch ) ;
rank: 273
score: 97.58221435546875
patch: protected catch >
rank: 273
score: 96.93272705078125
patch: get > i catch
rank: 273
score: 96.59339904785156
patch: protected null Stack
rank: 273
score: 95.25939178466797
patch: equals > >
rank: 274
score: 99.17390950520833
patch: out . write ( ch ) { return out . write ( ) ;
rank: 274
score: 99.07797241210938
patch: public out . write ( byte [ ] value ) ;
rank: 274
score: 99.04081217447917
patch: final out . write ( char [ ] ch ) ;
rank: 274
score: 98.96550958806819
patch: public void out . write ( int ch ) ;
rank: 274
score: 98.9552001953125
patch: out . write ( byte out ) ;
rank: 274
score: 97.58110046386719
patch: private replace >
rank: 274
score: 96.59172058105469
patch: out State arraycopy
rank: 274
score: 96.33048502604167
patch: public parent
rank: 274
score: 95.25870768229167
patch: < void
rank: 275
score: 99.173828125
patch: out . write ( ch ) ; out . flush ( ) ;
rank: 275
score: 99.07737379807692
patch: / * package * / out . write ( ch ) ;
rank: 275
score: 99.04041544596355
patch: Object out . write ( byte [ ] ch ) ;
rank: 275
score: 98.96535237630208
patch: public void write ( String name ) ;
rank: 275
score: 98.95393202039931
patch: out . write ( long ch ) ;
rank: 275
score: 97.58097076416016
patch: private clear >
rank: 275
score: 96.92957763671875
patch: > out >
rank: 275
score: 96.59042358398438
patch: @ Exception Runnable
rank: 276
score: 99.1737811748798
patch: void out . write ( ch ) throws IO CaMeL Exception ;
rank: 276
score: 99.07672119140625
patch: out . write ( ch . ch . ch ) ;
rank: 276
score: 99.04036458333333
patch: out . write ( ch . length + 1 ) ;
rank: 276
score: 98.96531168619792
patch: void write ( ) ;
rank: 276
score: 98.95303344726562
patch: out . write . write ( $STRING$ ) ;
rank: 276
score: 97.57455444335938
patch: set > Index
rank: 276
score: 96.921728515625
patch: catch > case
rank: 276
score: 96.58790588378906
patch: public Exception Index
rank: 276
score: 96.32835896809895
patch: protected add
rank: 276
score: 95.25399017333984
patch: public public T
rank: 277
score: 99.03988647460938
patch: out . write ( ch + ch + 1 ) ;
rank: 277
score: 98.96505737304688
patch: void . write ( ch ) ;
rank: 277
score: 97.5736592610677
patch: remove >
rank: 277
score: 96.91619873046875
patch: catch > Index
rank: 277
score: 96.32651774088542
patch: public Security
rank: 277
score: 95.25381469726562
patch: public map >
rank: 278
score: 99.17351825420673
patch: public out . write ( ch . to CaMeL String ( )
rank: 278
score: 99.07636052911931
patch: public abstract out . write ( ch ) ; ;
rank: 278
score: 99.03936212713069
patch: public void out ( write ( String ch ) ;
rank: 278
score: 98.96504350142045
patch: out . write ( byte str ch ch ) ;
rank: 278
score: 98.95260620117188
patch: public out ( Exception ch ) {
rank: 278
score: 97.56954956054688
patch: run > Index
rank: 278
score: 96.90335083007812
patch: > size
rank: 278
score: 96.58592987060547
patch: abstract Exception null
rank: 279
score: 99.1732647235577
patch: out . write ( ch $NUMBER$ ) throws IO CaMeL Exception ;
rank: 279
score: 99.03928629557292
patch: public String CaMeL Buffer . write ( String ch ) ;
rank: 279
score: 98.95245361328125
patch: public final out . write ( ) ;
rank: 279
score: 97.56763458251953
patch: get > while
rank: 279
score: 96.9010498046875
patch: > size >
rank: 279
score: 96.58590698242188
patch: protected Error null
rank: 279
score: 96.3208719889323
patch: public Clone
rank: 279
score: 95.25179290771484
patch: public public compile
rank: 280
score: 99.17216796875
patch: public out . write ( ch ) { return ch . out ; }
rank: 280
score: 99.07436301491477
patch: public out . write ( ch ) { ; }
rank: 280
score: 99.038525390625
patch: public void out ( ? > ch ) ;
rank: 280
score: 98.96451416015626
patch: out . write ( ch , public ) ;
rank: 280
score: 98.9515869140625
patch: out . write ( ch ) ; ) {
rank: 280
score: 97.56646728515625
patch: invoke > ]
rank: 280
score: 96.89243774414062
patch: > i else
rank: 280
score: 96.58580525716145
patch: @ Exception
rank: 280
score: 96.32012939453125
patch: public in
rank: 280
score: 95.25031280517578
patch: public public Int
rank: 281
score: 99.17197963169643
patch: public out . write ( out . to CaMeL String ( ) {
rank: 281
score: 99.03794167258523
patch: out . write ( ch . write 1 ) ;
rank: 281
score: 98.9642333984375
patch: out . write ( byte [ ] byte ) ;
rank: 281
score: 98.94954223632813
patch: public boolean out . write ( $STRING$ ) ;
rank: 281
score: 97.56378936767578
patch: try > ]
rank: 281
score: 96.89108276367188
patch: > i ++
rank: 281
score: 96.58356475830078
patch: private Exception Runnable
rank: 281
score: 95.249755859375
patch: contains > >
rank: 282
score: 99.17130533854167
patch: out . write ( ch ) throws IO CaMeL Exception { return out ;
rank: 282
score: 99.07358805338542
patch: public boolean out ( ch ) throws IO CaMeL Exception ;
rank: 282
score: 99.03762817382812
patch: String . [ ] write ( ch ) ;
rank: 282
score: 98.96366373697917
patch: final out . write ( str ) ;
rank: 282
score: 98.94952947443181
patch: public out . out . write ( $STRING$ ) ;
rank: 282
score: 97.56234741210938
patch: close > ]
rank: 282
score: 96.58336385091145
patch: static Exception
rank: 282
score: 95.24922943115234
patch: public private boolean
rank: 283
score: 99.17122708834134
patch: out . write ( ch ) throws ( IO CaMeL Exception ;
rank: 283
score: 99.07229379507211
patch: public abstract out . write ( ch , ch . ) ;
rank: 283
score: 99.03749593098958
patch: out . write ( ch . get . out ) ;
rank: 283
score: 98.96339925130208
patch: public int write ( String ch ) ;
rank: 283
score: 97.55902099609375
patch: put >
rank: 283
score: 96.58277893066406
patch: synchronized null State
rank: 283
score: 96.31601969401042
patch: public wait
rank: 283
score: 95.24800872802734
patch: public XML >
rank: 284
score: 99.17085484095982
patch: protected out . write ( int ch ) throws IO CaMeL Exception {
rank: 284
score: 99.07222123579545
patch: public out . write ( String ch ) throws )
rank: 284
score: 99.03599039713542
patch: out . write ( ch . wrap ( ) ) ;
rank: 284
score: 98.94920654296875
patch: public out . write ( byte ch ) throws
rank: 284
score: 97.55886840820312
patch: get > index
rank: 284
score: 96.8857421875
patch: > out
rank: 284
score: 96.57332356770833
patch: out null
rank: 284
score: 96.31419881184895
patch: append
rank: 285
score: 99.07091346153847
patch: public out . write ( out . write . ch ) ;
rank: 285
score: 99.0354512532552
patch: private out . write ( String [ ] ch ) ;
rank: 285
score: 98.96329752604167
patch: public void out ( int i ) ;
rank: 285
score: 98.94914106889205
patch: public out . write ( $STRING$ ) { ; }
rank: 285
score: 97.55503845214844
patch: println > i
rank: 285
score: 96.87665405273438
patch: try > catch >
rank: 285
score: 96.57221984863281
patch: public State 0
rank: 285
score: 96.30623372395833
patch: Set set
rank: 286
score: 99.17066243489583
patch: public out . write ( ch . get CaMeL Bytes ( $STRING$ ) )
rank: 286
score: 99.07088529146634
patch: public out . write ( String name ) throws IO CaMeL Exception
rank: 286
score: 99.03512234157986
patch: public void out ( Object ch ) ;
rank: 286
score: 98.96263292100694
patch: write . write ( String ch ) ;
rank: 286
score: 98.94883034446023
patch: private out . write ( ch ) throws ) ;
rank: 286
score: 97.5487060546875
patch: abstract get >
rank: 286
score: 96.57101440429688
patch: public State Illegal
rank: 286
score: 95.24555969238281
patch: abstract protected void
rank: 287
score: 99.17060546875
patch: public abstract out . write ( ch . get CaMeL Buffer ( ) ;
rank: 287
score: 99.07062237079327
patch: public out . write ( char [ ] ch , ) ;
rank: 287
score: 98.96124877929688
patch: void out ( ) ; null ; null }
rank: 287
score: 98.9482177734375
patch: out . write ( byte 1 ch ) ;
rank: 287
score: 96.86213989257813
patch: > next >
rank: 287
score: 96.57098388671875
patch: private State out
rank: 287
score: 96.29875183105469
patch: Manager
rank: 287
score: 95.24540201822917
patch: protected new
rank: 288
score: 99.17052205403645
patch: out . write . write . Byte ( ch ) ;
rank: 288
score: 99.0703125
patch: private out . write ( ch ) throws IO CaMeL Exception
rank: 288
score: 99.03496704101562
patch: public out . write ( String key ) ;
rank: 288
score: 98.961181640625
patch: public out . write ( String byte = 0 ;
rank: 288
score: 98.9480868252841
patch: public out . write ( out ) } ) ;
rank: 288
score: 97.53425598144531
patch: private do >
rank: 288
score: 96.86107177734375
patch: log > case
rank: 288
score: 96.56919860839844
patch: public Runtime Runtime
rank: 288
score: 95.24459075927734
patch: synchronized public void
rank: 289
score: 99.06986490885417
patch: public void out ( ch ) throws IO CaMeL Exception {
rank: 289
score: 99.03480360243056
patch: public out . write ( int ) ;
rank: 289
score: 98.96096462673611
patch: public void write . write ( ) ;
rank: 289
score: 98.94808349609374
patch: out . write ( byte [ ] ch ,
rank: 289
score: 97.53238677978516
patch: private new >
rank: 289
score: 96.86030883789063
patch: finally > i
rank: 289
score: 96.56777954101562
patch: public > Exception
rank: 289
score: 96.29569498697917
patch: public Tree
rank: 290
score: 99.16991077769886
patch: out . write ( ch , long max ) ;
rank: 290
score: 99.03469848632812
patch: out . write ( ch , 0 , 0 ) ;
rank: 290
score: 98.96082153320313
patch: out . write ( final byte ch ) ;
rank: 290
score: 98.94743208451705
patch: write . write ( ] [ ] ch ) ;
rank: 290
score: 97.53147888183594
patch: run > i
rank: 290
score: 96.85172119140626
patch: log > length
rank: 290
score: 96.56639862060547
patch: final Exception Exception
rank: 290
score: 96.29311116536458
patch: Util next
rank: 290
score: 95.24302673339844
patch: expand > >
rank: 291
score: 99.16958618164062
patch: @ Override out . write . write ( ch ) ;
rank: 291
score: 99.06861572265625
patch: public void out ( ) throws IO CaMeL Exception
rank: 291
score: 99.033447265625
patch: out . write ( ch ) return ( ch ) ;
rank: 291
score: 98.94712136008523
patch: public out . ch . write ( ch ) ;
rank: 291
score: 97.53092447916667
patch: private protected
rank: 291
score: 96.5656509399414
patch: public Exception Override
rank: 292
score: 99.16896565755208
patch: public abstract void write ( ) throws IO CaMeL Exception ;
rank: 292
score: 99.068603515625
patch: public out . write ( char [ ] value ) ;
rank: 292
score: 99.0324198404948
patch: public final out . write ( ch [ ] ) ;
rank: 292
score: 98.96014404296875
patch: int . . write ( ch ) ;
rank: 292
score: 98.94635687934027
patch: public out . write . ch ) ;
rank: 292
score: 97.5293960571289
patch: async > ]
rank: 292
score: 96.79308471679687
patch: get > i ++
rank: 292
score: 96.56133270263672
patch: public Exception trace
rank: 292
score: 96.28781127929688
patch: protected run
rank: 292
score: 95.24063873291016
patch: initialize > >
rank: 293
score: 99.1689453125
patch: out . write ( ch , int SIZE ) ;
rank: 293
score: 99.06837047230114
patch: public out . write ( ch , int count )
rank: 293
score: 99.03164672851562
patch: out . write ( ch ) out . out ) ;
rank: 293
score: 98.96010520241477
patch: private void write ( int str . length ) ;
rank: 293
score: 98.9461669921875
patch: out . write ( ] out ) ;
rank: 293
score: 97.52644348144531
patch: private protected public
rank: 293
score: 96.79090118408203
patch: > arraycopy
rank: 293
score: 96.56130981445312
patch: protected Runnable Exception
rank: 293
score: 96.28402709960938
patch: Buffer <UNK>
rank: 294
score: 99.06833902994792
patch: void out . write ( ch , int ch ) ;
rank: 294
score: 99.0316162109375
patch: boolean out . write ( char [ ] ch ) ;
rank: 294
score: 98.9585693359375
patch: void out . write ( int byte ) ;
rank: 294
score: 97.52432250976562
patch: handle > ]
rank: 294
score: 96.7906494140625
patch: log > else
rank: 294
score: 96.5584945678711
patch: protected Error State
rank: 294
score: 96.28062947591145
patch: Util >
rank: 295
score: 99.16837565104167
patch: public synchronized out . write ( ch . get CaMeL Bytes ( ) {
rank: 295
score: 99.06789926382211
patch: public out . write ( ch . out . ch . )
rank: 295
score: 98.95848388671875
patch: public out . write ( boolean str ) ;
rank: 295
score: 98.94580688476563
patch: public final out . write ( out ) ;
rank: 295
score: 97.51719665527344
patch: I > public
rank: 295
score: 96.7812744140625
patch: if > catch >
rank: 295
score: 96.55821228027344
patch: @ Error null
rank: 295
score: 96.271728515625
patch: Util else
rank: 295
score: 95.23503875732422
patch: if > >
rank: 296
score: 99.16817220052083
patch: public synchronized out . write . write ( ch ) ;
rank: 296
score: 99.06693725585937
patch: public out . write ( boolean ch ) ;
rank: 296
score: 99.0311279296875
patch: public void out ( String value ) ;
rank: 296
score: 98.95780639648437
patch: protected synchronized out . write ( ch ) ;
rank: 296
score: 97.51624298095703
patch: protected while >
rank: 296
score: 96.77974853515624
patch: try > length >
rank: 296
score: 96.55728912353516
patch: public EMPTY State
rank: 296
score: 96.26947021484375
patch: Writer
rank: 296
score: 95.23257446289062
patch: Properties ) {
rank: 297
score: 99.16765485491071
patch: public out . write ( Object ch ) throws IO CaMeL Exception ;
rank: 297
score: 99.03070746527777
patch: public out . write ( value ) ;
rank: 297
score: 98.95756530761719
patch: void write ( String str ) ;
rank: 297
score: 97.50721740722656
patch: private public synchronized
rank: 297
score: 96.77618408203125
patch: > while >
rank: 297
score: 96.55528259277344
patch: public ( Error
rank: 297
score: 96.26025390625
patch: public abstract
rank: 297
score: 95.23219299316406
patch: public public Unsupported
rank: 298
score: 99.16658841646634
patch: out . write ( ch ) throws IO CaMeL Exception { }
rank: 298
score: 99.06543646918402
patch: out . write ( String name ) ;
rank: 298
score: 99.02991739908855
patch: public out . write ( out . write ( ) ;
rank: 298
score: 98.95737915039062
patch: out . write ( this . value ) ;
rank: 298
score: 98.94467995383523
patch: out . write ( ch . out . ) ;
rank: 298
score: 97.49727376302083
patch: try >
rank: 298
score: 96.77429962158203
patch: > Stack
rank: 298
score: 96.55513000488281
patch: public Error out
rank: 298
score: 96.24669392903645
patch: public Bit
rank: 298
score: 95.2311503092448
patch: public Process
rank: 299
score: 99.16623942057292
patch: public out . flush ( ) throws IO CaMeL Exception {
rank: 299
score: 99.06513061523438
patch: public Object out . write ( ch ) ;
rank: 299
score: 99.0288798014323
patch: public abstract out . write ( int int 0 ) ;
rank: 299
score: 98.9569091796875
patch: void out . write ( final String ch ) ;
rank: 299
score: 98.94438032670455
patch: public out out . write ( byte ch ) ;
rank: 299
score: 97.49685668945312
patch: clone > ]
rank: 299
score: 96.77057495117188
patch: > iterator >
rank: 299
score: 96.55487060546875
patch: synchronized Exception
rank: 299
score: 96.24641927083333
patch: public intern
rank: 300
score: 99.16605050223214
patch: private out . write ( ch . get CaMeL Bytes ( ) {
rank: 300
score: 99.06507364908855
patch: out . write ( ch , char [ ] ) ;
rank: 300
score: 98.95657687717014
patch: out . write ( byte byte ) ;
rank: 300
score: 98.94424438476562
patch: public out . write ( final out ) ;
rank: 300
score: 96.7682876586914
patch: > case
rank: 300
score: 95.23004150390625
patch: select >
rank: 301
score: 99.16552734375
patch: out . write . write ( ch [ ] ) ;
rank: 301
score: 99.06423117897727
patch: out . write ( ch , byte [ ) ;
rank: 301
score: 99.02808634440105
patch: out . write ( 0 + ch . length ) ;
rank: 301
score: 98.95641479492187
patch: public out . write ( ) ; null ;
rank: 301
score: 97.48137664794922
patch: flush > ]
rank: 301
score: 96.76697998046875
patch: catch > size
rank: 301
score: 96.55471801757812
patch: protected Exception Null
rank: 301
score: 96.23648071289062
patch: public disable
rank: 301
score: 95.22852325439453
patch: public * {
rank: 302
score: 99.165283203125
patch: public out . write ( ch . char [ ] chars ) {
rank: 302
score: 99.0639315518466
patch: out . write ( ch , short ch ) ;
rank: 302
score: 99.02806507457386
patch: public out . write ( String int 0 ) ;
rank: 302
score: 98.95607299804688
patch: public out . write ( String Character ) ;
rank: 302
score: 98.94344329833984
patch: out . write ( byte ch ;
rank: 302
score: 97.48037719726562
patch: private read >
rank: 302
score: 96.7627197265625
patch: catch > arraycopy
rank: 302
score: 96.55333709716797
patch: abstract Error Exception
rank: 302
score: 95.22807312011719
patch: protected abstract <UNK>
rank: 303
score: 99.16513296274039
patch: out . write ( ch . char ch [ ] ) ;
rank: 303
score: 99.02785422585227
patch: private out . write ( ch [ ] ) ;
rank: 303
score: 98.9424715909091
patch: out . write ( ch write ( ch ) ;
rank: 303
score: 96.55207824707031
patch: public State IO
rank: 303
score: 96.2282002766927
patch: public FINAL
rank: 303
score: 95.22784423828125
patch: public public iterator
rank: 304
score: 99.16419328962054
patch: out . write ( ch . key ) throws IO CaMeL Exception ;
rank: 304
score: 99.02757679332386
patch: out . write ( ch ) write ( ) ;
rank: 304
score: 98.9423495205966
patch: public out . write ( byte ) throws ) ;
rank: 304
score: 97.47898864746094
patch: handler > ]
rank: 304
score: 96.7486328125
patch: public clear > i
rank: 304
score: 96.55193328857422
patch: final null Exception
rank: 304
score: 96.22462972005208
patch: Buffer >
rank: 304
score: 95.2271499633789
patch: < Not <UNK>
rank: 305
score: 99.16389683314732
patch: out . write ( ch ) { return ch . out ; }
rank: 305
score: 99.02732340494792
patch: out . write ( ch . delete ( ) ) ;
rank: 305
score: 98.95563354492188
patch: protected void out . write ( ch ) ;
rank: 305
score: 98.94229125976562
patch: public out . write ( $STRING$ ch ) ;
rank: 305
score: 97.47715759277344
patch: get > size
rank: 305
score: 96.74424438476562
patch: finally > length
rank: 305
score: 96.55181121826172
patch: public State Out
rank: 305
score: 96.22104899088542
patch: has else
rank: 305
score: 95.22682189941406
patch: public clear >
rank: 306
score: 99.16386195591518
patch: public long out . write ( ch ) throws IO CaMeL Exception ;
rank: 306
score: 99.0631103515625
patch: out . write ( ch , ch . value ) ;
rank: 306
score: 98.9552001953125
patch: out . write ( byte ( $STRING$ ) ;
rank: 306
score: 98.94212646484375
patch: out . write ( out ) ; ) ;
rank: 306
score: 96.7365966796875
patch: > exit >
rank: 306
score: 96.55155181884766
patch: protected Runtime Stack
rank: 306
score: 96.22067260742188
patch: Util add
rank: 307
score: 99.16383579799107
patch: public out . write ( ch . get CaMeL Message ( ) ;
rank: 307
score: 99.06284743088942
patch: public out . write ( ch , byte [ ] ch )
rank: 307
score: 99.0271728515625
patch: boolean out . write ( String ch ) ;
rank: 307
score: 98.94211647727273
patch: public final out . write ( byte ch ) {
rank: 307
score: 97.47349548339844
patch: protected protected public
rank: 307
score: 96.7320068359375
patch: catch > null
rank: 307
score: 96.5510482788086
patch: out Runtime Exception
rank: 308
score: 99.16261509486607
patch: protected out . write ( String ch ) throws IO CaMeL Exception {
rank: 308
score: 99.062744140625
patch: public out . write ( char [ ] chars ) ;
rank: 308
score: 99.02679443359375
patch: public out . write ( char [ ] str ) ;
rank: 308
score: 98.95319475446429
patch: public int write ( ) {
rank: 308
score: 98.9413330078125
patch: out . write ( out . write ) ;
rank: 308
score: 97.46945190429688
patch: println > arraycopy
rank: 308
score: 96.55055236816406
patch: public Error run
rank: 308
score: 96.21895345052083
patch: Set add
rank: 308
score: 95.22505187988281
patch: public synchronized is
rank: 309
score: 99.06226524939903
patch: out . write ( ch , out . write ( ch )
rank: 309
score: 97.46505737304688
patch: private write >
rank: 309
score: 96.55049896240234
patch: public Throwable Exception
rank: 309
score: 96.21306610107422
patch: Model
rank: 309
score: 95.22229766845703
patch: > throws
rank: 310
score: 99.06222534179688
patch: out . write ( ch , char [ ] value )
rank: 310
score: 99.0248514811198
patch: out . write ( ch . get . ) ) ;
rank: 310
score: 98.95269165039062
patch: public out . write ( float ch ) ;
rank: 310
score: 98.94014892578124
patch: public out . write ( Float out ) ;
rank: 310
score: 97.46307373046875
patch: open > ]
rank: 310
score: 96.7138916015625
patch: append > i
rank: 310
score: 96.55012512207031
patch: < State Exception
rank: 310
score: 96.21246337890625
patch: ++
rank: 310
score: 95.22186279296875
patch: public throw
rank: 311
score: 99.02481079101562
patch: public out . write ( String long CaMeL Value ) ;
rank: 311
score: 98.952392578125
patch: public void write ( int byte = 0 ;
rank: 311
score: 98.93963068181819
patch: public write . out . write ( ch ) ;
rank: 311
score: 97.46247100830078
patch: remove > Index
rank: 311
score: 96.71213989257812
patch: > i --
rank: 311
score: 96.55004119873047
patch: public State finally
rank: 311
score: 96.20836385091145
patch: State <UNK>
rank: 311
score: 95.22138977050781
patch: protected delete >
rank: 312
score: 99.16019112723214
patch: out . write ( ch . get CaMeL Bytes ( ) ) {
rank: 312
score: 99.06209622896634
patch: public out . write ( String value ) throws IO CaMeL Exception
rank: 312
score: 99.02454630533855
patch: out . write ( ch , 0 , value ) ;
rank: 312
score: 98.93950805664062
patch: protected out . write ( ] ch ) ;
rank: 312
score: 97.46238708496094
patch: can > ]
rank: 312
score: 96.71015014648438
patch: > length catch
rank: 312
score: 96.54617309570312
patch: @ Null Exception
rank: 312
score: 96.20584106445312
patch: Class print
rank: 312
score: 95.22117614746094
patch: synchronized
rank: 313
score: 99.16011868990384
patch: out . write ( ch . char [ ] ch , ;
rank: 313
score: 99.06157977764423
patch: public abstract out . write ( ch , int ch ) ;
rank: 313
score: 99.0242919921875
patch: public out . write ( int int 1 ) ;
rank: 313
score: 98.95152698863636
patch: void out . write ( int byte ch ) ;
rank: 313
score: 98.93866644965277
patch: out . write ( ch ) throws ;
rank: 313
score: 97.45768737792969
patch: final run >
rank: 313
score: 96.5460205078125
patch: / null State
rank: 313
score: 96.19872029622395
patch: abstract set
rank: 313
score: 95.22103881835938
patch: @
rank: 314
score: 99.15878731863839
patch: protected out . write ( long ch ) throws IO CaMeL Exception ;
rank: 314
score: 99.06123860677083
patch: out . write ( byte ch [ ] , ) ;
rank: 314
score: 99.02403675426136
patch: out . write ( ch . char [ ) ;
rank: 314
score: 98.95145670572917
patch: void out . write ( str ) ;
rank: 314
score: 97.45680236816406
patch: put > arraycopy
rank: 314
score: 96.6763671875
patch: catch > out
rank: 314
score: 96.54413604736328
patch: @ Error Error
rank: 314
score: 95.22016143798828
patch: public protected boolean
rank: 315
score: 99.02395629882812
patch: public void out ( ch . write ) ;
rank: 315
score: 98.95133056640626
patch: public abstract out . write ( name ) ;
rank: 315
score: 98.93848266601563
patch: out . write ( out . out ) ;
rank: 315
score: 97.4560546875
patch: on > ]
rank: 315
score: 96.67427978515624
patch: case > else
rank: 315
score: 96.5436782836914
patch: synchronized null null
rank: 315
score: 96.1883036295573
patch: public value
rank: 315
score: 95.21983337402344
patch: public public map
rank: 316
score: 99.06007893880208
patch: out . write ( ch , ch . name ) ;
rank: 316
score: 99.02247314453125
patch: out . write ( ch . replace ) ;
rank: 316
score: 98.9512051669034
patch: public int write ( out . write ( ) ;
rank: 316
score: 98.93825073242188
patch: out ( ) . write ( ch ) ;
rank: 316
score: 97.45537567138672
patch: wait > ]
rank: 316
score: 96.6720458984375
patch: return > i
rank: 316
score: 96.54325103759766
patch: private Runtime null
rank: 316
score: 96.17990112304688
patch: private Stack
rank: 317
score: 99.05996704101562
patch: out . write ( char ) throws IO CaMeL Exception ;
rank: 317
score: 98.95110321044922
patch: final out . write ( ) ;
rank: 317
score: 98.9380770596591
patch: out . write ( ch , byte 1 ) ;
rank: 317
score: 97.45170593261719
patch: static add >
rank: 317
score: 96.66967163085937
patch: exit > i
rank: 317
score: 96.542236328125
patch: out err Stack
rank: 317
score: 96.17832438151042
patch: public identity
rank: 317
score: 95.21670532226562
patch: private is
rank: 318
score: 99.05971069335938
patch: out . write ( byte [ ] ch )
rank: 318
score: 99.0216064453125
patch: String . [ ] write ( String ch ) ;
rank: 318
score: 98.95103624131944
patch: void out ( ch ; null ) ;
rank: 318
score: 98.9375
patch: public out . write ( write ) ;
rank: 318
score: 97.4499282836914
patch: protected remove >
rank: 318
score: 96.66943359375
patch: for > length >
rank: 318
score: 96.5418930053711
patch: public null Internal
rank: 318
score: 96.17718505859375
patch: Value print
rank: 318
score: 95.21627807617188
patch: ignore >
rank: 319
score: 99.15664672851562
patch: out . write . write . Long ( ch ) ;
rank: 319
score: 99.05946702223558
patch: out . write ( ch , int ch , ch ) ;
rank: 319
score: 99.02129516601562
patch: int out . write ( String ch ) ;
rank: 319
score: 98.95100708007813
patch: public static out . write ( this ) ;
rank: 319
score: 98.9368008700284
patch: out . write ( Float . . . ) ;
rank: 319
score: 97.44892120361328
patch: Instance > >
rank: 319
score: 96.667724609375
patch: catch > ]
rank: 319
score: 96.5407206217448
patch: void Stack
rank: 319
score: 96.17495727539062
patch: public as
rank: 319
score: 95.2146708170573
patch: public Integer
rank: 320
score: 99.05816095525569
patch: public out . write ( ch , byte ) ;
rank: 320
score: 99.02085182883523
patch: out . write ( short [ ] ch ) ;
rank: 320
score: 98.95027299360795
patch: out . write ( byte * / ch ) ;
rank: 320
score: 98.93610229492188
patch: public write ( byte [ ] ch ) ;
rank: 320
score: 96.66281127929688
patch: catch > iterator
rank: 320
score: 96.5392837524414
patch: static Exception State
rank: 320
score: 96.1691182454427
patch: public exit
rank: 320
score: 95.21302032470703
patch: 
rank: 321
score: 99.1563251201923
patch: out . write . write ( ) throws IO CaMeL Exception ;
rank: 321
score: 99.05781693892045
patch: out . write ( ch , 0 , ) ;
rank: 321
score: 99.01908365885417
patch: private out . write ( int [ ] ch ) ;
rank: 321
score: 98.94976251775569
patch: public static out . write ( int ch ) {
rank: 321
score: 98.93608262803819
patch: public void out ( Exception ch ) ;
rank: 321
score: 97.44649505615234
patch: Data > >
rank: 321
score: 96.53899383544922
patch: protected Error Error
rank: 321
score: 96.16285196940105
patch: public Unsupported
rank: 321
score: 95.21180725097656
patch: public synchronized protected
rank: 322
score: 99.01749674479167
patch: public out . write ( char [ ] ch ) {
rank: 322
score: 98.94951837713069
patch: out . write ( byte byte ch ch ) ;
rank: 322
score: 98.93532492897727
patch: public out . write ( $STRING$ ) return ch ;
rank: 322
score: 97.43998718261719
patch: remove > i
rank: 322
score: 96.65424194335938
patch: case > i
rank: 322
score: 96.53863525390625
patch: public Exception IS
rank: 322
score: 96.16249593098958
patch: get Exception
rank: 322
score: 95.21109008789062
patch: public synchronized Illegal
rank: 323
score: 99.05764770507812
patch: public out . write ( ch , int i ) ;
rank: 323
score: 99.01724853515626
patch: out . write ( value ) return ch ;
rank: 323
score: 98.94906955295139
patch: public int write . write ( ) ;
rank: 323
score: 98.9345370205966
patch: out . write ( ch ) throws ch ) ;
rank: 323
score: 97.43574523925781
patch: do > Index
rank: 323
score: 96.65328979492188
patch: > i null
rank: 323
score: 96.53788757324219
patch: public State Writer
rank: 323
score: 96.16229248046875
patch: private while
rank: 323
score: 95.21063995361328
patch: public public flush
rank: 324
score: 99.15444113991477
patch: public String out ( ) throws IO CaMeL Exception ;
rank: 324
score: 99.05718439275569
patch: public final out . write ( int ch ) ;
rank: 324
score: 99.0170565518466
patch: out . write ( ch . char $NUMBER$ ) ;
rank: 324
score: 98.94900512695312
patch: out . write ( byte ( ) ) ;
rank: 324
score: 98.93432006835937
patch: out . write ( byte ) ; ) ;
rank: 324
score: 97.42835235595703
patch: process > ]
rank: 324
score: 96.6495361328125
patch: > i ;
rank: 324
score: 96.53593444824219
patch: protected public Exception
rank: 324
score: 96.16056315104167
patch: public Package
rank: 324
score: 95.20457458496094
patch: append > >
rank: 325
score: 99.15386090959821
patch: public out . write ( int i ) throws IO CaMeL Exception ;
rank: 325
score: 99.05687537560097
patch: public synchronized out . write ( ) throws IO CaMeL Exception {
rank: 325
score: 99.01542154947917
patch: out . write ( str ) . write ( ) ;
rank: 325
score: 98.94891357421875
patch: private out . write ( String str ) {
rank: 325
score: 98.93321644176136
patch: public out . write ( byte ch ch ) {
rank: 325
score: 96.5338134765625
patch: Hashtable State State
rank: 325
score: 96.15896606445312
patch: public class
rank: 326
score: 99.15373011997768
patch: out . write ( ch . out . write ( ch ) ;
rank: 326
score: 99.01539103190105
patch: out . write ( name + $STRING$ + ch ) ;
rank: 326
score: 98.948388671875
patch: boolean . out . write ( ch ) ;
rank: 326
score: 98.93317205255681
patch: write . write ( out . write ( ) ;
rank: 326
score: 97.42671966552734
patch: do > i
rank: 326
score: 96.64646606445312
patch: get > i case
rank: 326
score: 96.52619934082031
patch: public ( Not
rank: 326
score: 96.1586201985677
patch: public available
rank: 326
score: 95.19947814941406
patch: store > >
rank: 327
score: 99.15316433376736
patch: protected out . write ( ch ) {
rank: 327
score: 99.0560791015625
patch: out . write ( ch , char ) ;
rank: 327
score: 99.01520330255681
patch: public void out . write ( String name ) ;
rank: 327
score: 98.94830877130681
patch: out . write ( char [ ] chars ) ;
rank: 327
score: 98.93284098307292
patch: public write . write ( ch ) ;
rank: 327
score: 97.42556762695312
patch: request > ]
rank: 327
score: 96.64297485351562
patch: run > catch
rank: 327
score: 96.52537536621094
patch: private Exception IO
rank: 327
score: 95.1973876953125
patch: Ruby >
rank: 328
score: 99.15294538225446
patch: protected synchronized out . write ( ch ) throws IO CaMeL Exception ;
rank: 328
score: 98.93272816051136
patch: out . write ( byte [ ] ch , {
rank: 328
score: 97.42511749267578
patch: private trim >
rank: 328
score: 96.63366088867187
patch: clear > length >
rank: 328
score: 96.52330017089844
patch: public null No
rank: 328
score: 96.1519775390625
patch: get ++
rank: 328
score: 95.19733428955078
patch: public wait >
rank: 329
score: 99.05560302734375
patch: out . write ( ( char ch [ ] ) ;
rank: 329
score: 99.0140047940341
patch: out . write ( int [ ] ch ) ;
rank: 329
score: 98.946875
patch: out . write ( final String ch ) ;
rank: 329
score: 98.9322265625
patch: public out . write ( Float ch ) {
rank: 329
score: 96.63314208984374
patch: initialize > catch >
rank: 329
score: 96.52189636230469
patch: public State ch
rank: 329
score: 96.15096028645833
patch: abstract run
rank: 329
score: 95.19723510742188
patch: public public Throwable
rank: 330
score: 99.15238131009616
patch: out . write ( ch . char [ ] str ) {
rank: 330
score: 99.05540114182692
patch: public out . write ( ch . ) { return out ;
rank: 330
score: 99.0136962890625
patch: out . write ( ch , 1 ) ;
rank: 330
score: 98.946484375
patch: public out . write ( byte value ) ;
rank: 330
score: 98.93205122514205
patch: out . write ( ] ch ) ; ) ;
rank: 330
score: 97.41841125488281
patch: abstract for >
rank: 330
score: 96.6296142578125
patch: finally > catch
rank: 330
score: 96.52128601074219
patch: public Runtime Null
rank: 330
score: 96.14816284179688
patch: get else
rank: 330
score: 95.19438171386719
patch: * { >
rank: 331
score: 99.15235392252605
patch: public out . write ( Char CaMeL Sequence ch ) ;
rank: 331
score: 99.05515700120192
patch: public out . write ( String ch ) throws ch . )
rank: 331
score: 99.0131327311198
patch: public static out . write ( final int ch ) ;
rank: 331
score: 98.93185424804688
patch: write ( out . write ( ch ) ;
rank: 331
score: 97.41510009765625
patch: Instance >
rank: 331
score: 96.52079010009766
patch: public null (
rank: 331
score: 96.1480484008789
patch: size
rank: 331
score: 95.19074249267578
patch: public protected Illegal
rank: 332
score: 99.15218098958333
patch: out . write . out . write ( ch ) ;
rank: 332
score: 99.01282755533855
patch: out . write ( ch + char [ ] ) ;
rank: 332
score: 98.94581434461806
patch: public boolean write ( String ch ) ;
rank: 332
score: 98.93177379261364
patch: public out . write ( byte . $NUMBER$ ) ;
rank: 332
score: 97.41448211669922
patch: next > ]
rank: 332
score: 96.52000427246094
patch: public new null
rank: 332
score: 96.14022827148438
patch: File
rank: 332
score: 95.18865966796875
patch: < abstract void
rank: 333
score: 99.15195875901442
patch: boolean out . write ( ch ) throws IO CaMeL Exception ;
rank: 333
score: 99.01168484157986
patch: out . write ( value ) ) ;
rank: 333
score: 98.9457120028409
patch: public void write . write ( int str ) ;
rank: 333
score: 98.93106842041016
patch: out . write ( ] ) ;
rank: 333
score: 97.4129867553711
patch: execute > ]
rank: 333
score: 96.62125854492187
patch: public for > i
rank: 333
score: 96.51937103271484
patch: @ null null
rank: 333
score: 96.13800048828125
patch: public key
rank: 333
score: 95.18820190429688
patch: private Not
rank: 334
score: 99.05359825721153
patch: out . write ( ch , char [ ] ch ) ;
rank: 334
score: 99.01151899857955
patch: public abstract out . write ( String value ) ;
rank: 334
score: 98.94560411241319
patch: public public out . write ( ) ;
rank: 334
score: 98.93093039772727
patch: out . write ( ch . write ( ch ;
rank: 334
score: 97.40963745117188
patch: synchronized run >
rank: 334
score: 96.61919403076172
patch: > err
rank: 334
score: 96.51910400390625
patch: <= State State
rank: 334
score: 95.18559265136719
patch: ( ( Not
rank: 335
score: 99.053466796875
patch: public static out . write ( ch , int ch )
rank: 335
score: 99.01123046875
patch: private void out ( ch . get ( ch ) ;
rank: 335
score: 98.94554985894098
patch: public int write ( int ch ) ;
rank: 335
score: 98.93074951171874
patch: public out . write ( write ch ) ;
rank: 335
score: 97.40904998779297
patch: private close >
rank: 335
score: 96.61860961914063
patch: has > catch >
rank: 335
score: 96.51481628417969
patch: @ null State
rank: 335
score: 96.1318868001302
patch: Util i
rank: 335
score: 95.18390655517578
patch: public protected new
rank: 336
score: 99.15019008091518
patch: public out . write ( ch . char [ ] str ) ;
rank: 336
score: 99.0520907315341
patch: void out ( ch ) throws IO CaMeL Exception ;
rank: 336
score: 99.01121937144886
patch: public out . write ( name [ ] ) ;
rank: 336
score: 98.94554554332386
patch: public private out . write ( int ch ) ;
rank: 336
score: 98.93063693576389
patch: out . write . write ( ) ;
rank: 336
score: 97.40846252441406
patch: write > ]
rank: 336
score: 96.61331787109376
patch: > length case
rank: 336
score: 96.5133056640625
patch: public Exception ==
rank: 336
score: 96.13151041666667
patch: public Auto
rank: 336
score: 95.18206787109375
patch: public compile
rank: 337
score: 99.14914957682292
patch: public out . write ( ch . clone ( ) ;
rank: 337
score: 99.05201212565105
patch: public out . write ( out . write ( ch )
rank: 337
score: 98.945068359375
patch: void out . write ( long ch ) ;
rank: 337
score: 98.9297103881836
patch: out . write ( Float ) ;
rank: 337
score: 97.40755462646484
patch: protected replace >
rank: 337
score: 96.61141967773438
patch: public add > public
rank: 337
score: 96.50951385498047
patch: / out Exception
rank: 337
score: 96.12346649169922
patch: Thread
rank: 337
score: 95.18128204345703
patch: private void <UNK>
rank: 338
score: 99.14871651785714
patch: out . write ( ch ) throws Illegal CaMeL State CaMeL Exception ;
rank: 338
score: 99.05179537259616
patch: out . write ( byte [ ] ch , ch ) ;
rank: 338
score: 99.0108309659091
patch: public void out . write ( Object ch ) ;
rank: 338
score: 98.94469604492187
patch: public void write ( int String str ) ;
rank: 338
score: 98.92948150634766
patch: out . write ( byte ; .
rank: 338
score: 97.40678405761719
patch: append > ]
rank: 338
score: 96.61005859375
patch: exit > length
rank: 338
score: 96.50927734375
patch: public EMPTY null
rank: 338
score: 96.122314453125
patch: null :
rank: 338
score: 95.1810302734375
patch: verify > >
rank: 339
score: 99.14817301432292
patch: out . write ( ch . char -- ch ) ;
rank: 339
score: 99.05153401692708
patch: . . . * out . write ( ch ) ;
rank: 339
score: 99.0101318359375
patch: public out . write ( int start ) ;
rank: 339
score: 98.92915482954545
patch: out . write ( ch . . write ) ;
rank: 339
score: 97.40348052978516
patch: read > ]
rank: 339
score: 96.60972900390625
patch: do > catch >
rank: 339
score: 96.50907897949219
patch: private State err
rank: 340
score: 99.05081176757812
patch: out . write ( ch , byte [ ] chars )
rank: 340
score: 99.00942993164062
patch: out . write ( str , 0 , value ) ;
rank: 340
score: 98.94287109375
patch: void out ( int ch ) ;
rank: 340
score: 97.3989028930664
patch: set > i
rank: 340
score: 96.6091552734375
patch: public for > >
rank: 340
score: 96.508056640625
patch: public Thread State
rank: 340
score: 96.12129720052083
patch: has ]
rank: 341
score: 99.147705078125
patch: out . write ( write ( ch ) throws IO CaMeL Exception ;
rank: 341
score: 99.05067952473958
patch: public out . write ( ch , byte ch ) ;
rank: 341
score: 99.00803444602273
patch: static out . write ( ch [ ] ) ;
rank: 341
score: 97.39583333333333
patch: protected protected
rank: 341
score: 96.6081298828125
patch: catch catch >
rank: 341
score: 96.50611877441406
patch: static null null
rank: 341
score: 96.11376953125
patch: Vector <UNK>
rank: 341
score: 95.17982482910156
patch: abstract static void
rank: 342
score: 99.14745483398437
patch: out . write ( ch . char ) ;
rank: 342
score: 99.05049954927884
patch: out . write ( ch , int start , int length )
rank: 342
score: 98.94263305664063
patch: public out . write ( int byte ) ;
rank: 342
score: 98.92876642400569
patch: out . write ( ch . ch ) ) ;
rank: 342
score: 97.39408365885417
patch: private private
rank: 342
score: 96.50583902994792
patch: private Error
rank: 342
score: 95.17868041992188
patch: public matches
rank: 343
score: 99.05028187144886
patch: out . write ( String ch , ch ) ;
rank: 343
score: 99.00724653764205
patch: public out . write ( int char $NUMBER$ ) ;
rank: 343
score: 98.94254927201705
patch: public abstract out . write ( final ch ) ;
rank: 343
score: 98.92861106178977
patch: write ( ch . get CaMeL Bytes ( ) ;
rank: 343
score: 97.38761901855469
patch: private arraycopy >
rank: 343
score: 96.60306396484376
patch: clear > i
rank: 343
score: 96.50519561767578
patch: out State catch
rank: 343
score: 96.10542805989583
patch: public insert
rank: 344
score: 99.14717923677884
patch: out . write ( ch . substring ( $NUMBER$ ) ) ;
rank: 344
score: 99.05019309303977
patch: out . write ( byte out [ ] ) ;
rank: 344
score: 99.00710227272727
patch: public out . write ( int int 0 ) ;
rank: 344
score: 98.9419833096591
patch: public out . write ( int byte [ ) ;
rank: 344
score: 98.92847290039063
patch: public out . write ( byte ) { ;
rank: 344
score: 97.3866195678711
patch: add > catch
rank: 344
score: 96.50430297851562
patch: synchronized State null
rank: 344
score: 96.09637451171875
patch: synchronized get
rank: 344
score: 95.17674255371094
patch: abstract private void
rank: 345
score: 99.14678083147321
patch: public void out . write ( ch ) throws IO CaMeL Exception ;
rank: 345
score: 99.04979451497395
patch: protected void out ( ch ) throws IO CaMeL Exception ;
rank: 345
score: 98.94161987304688
patch: public boolean write ( out ) ;
rank: 345
score: 98.92798961292614
patch: public out . write ( byte - $NUMBER$ ) ;
rank: 345
score: 97.38571166992188
patch: local > ]
rank: 345
score: 96.59844970703125
patch: > i public
rank: 345
score: 96.50372314453125
patch: void Runtime State
rank: 345
score: 96.09368896484375
patch: Array
rank: 345
score: 95.17626190185547
patch: public public reverse
rank: 346
score: 99.14645385742188
patch: public out . write ( ch . intern ( ) ;
rank: 346
score: 99.04941969651442
patch: out . write ( ch , byte [ ] value ) ;
rank: 346
score: 99.00696910511364
patch: public abstract out . write ( String name ) ;
rank: 346
score: 98.9410888671875
patch: public out . write ( String chars ) ;
rank: 346
score: 98.92783425071023
patch: out . write ( byte [ ] ch ) throws
rank: 346
score: 96.59788818359375
patch: case > null
rank: 346
score: 96.50282287597656
patch: private Exception err
rank: 346
score: 96.09340413411458
patch: public all
rank: 346
score: 95.17405700683594
patch: this > >
rank: 347
score: 99.14639282226562
patch: out . write . ch ( ch ) ;
rank: 347
score: 99.04905192057292
patch: out . write ( ch 1 , ch $NUMBER$ ) ;
rank: 347
score: 99.00679154829545
patch: out . write ( byte [ ] ch ) {
rank: 347
score: 98.9408203125
patch: this . out . write ( ch ) ;
rank: 347
score: 98.92742309570312
patch: ( ) out . write ( ch ) ;
rank: 347
score: 97.38524627685547
patch: static for >
rank: 347
score: 96.59476928710937
patch: > else <UNK>
rank: 347
score: 96.50263977050781
patch: private Null null
rank: 347
score: 96.092529296875
patch: abstract add
rank: 348
score: 99.14637102399554
patch: out . write ( ch ) throws IO CaMeL Exception { ) ;
rank: 348
score: 99.0487772623698
patch: out . write ( ch , ch . ( ) ;
rank: 348
score: 98.94062943892045
patch: void out ( ch . write ( ch ) ;
rank: 348
score: 96.5904296875
patch: > case >
rank: 348
score: 96.50225830078125
patch: out null <UNK>
rank: 348
score: 96.0848897298177
patch: public resolve
rank: 349
score: 99.14603969029018
patch: private out . write ( String ch ) throws IO CaMeL Exception ;
rank: 349
score: 99.04859337439903
patch: out . write ( ch , int ch , int length )
rank: 349
score: 99.00654740767045
patch: public abstract out . write ( int name ) ;
rank: 349
score: 98.94030083550348
patch: private out . write ( out ) ;
rank: 349
score: 98.9264803799716
patch: public out . write ( byte [ ] ) {
rank: 349
score: 97.36993408203125
patch: assert > ]
rank: 349
score: 96.08446248372395
patch: Util set
rank: 349
score: 95.16924285888672
patch: public public matches
rank: 350
score: 99.1459073153409
patch: out . write ( ch . char i ) ;
rank: 350
score: 99.04853057861328
patch: out . write ( ch . ;
rank: 350
score: 99.0064697265625
patch: public synchronized out . write ( ch . out ) ;
rank: 350
score: 98.9263028231534
patch: public final out . write ( byte 1 ) ;
rank: 350
score: 97.36949157714844
patch: update > Index
rank: 350
score: 96.49916076660156
patch: public Exception System
rank: 350
score: 96.08013916015625
patch: public Internal
rank: 350
score: 95.16880798339844
patch: public protected private
rank: 351
score: 99.14542061941964
patch: public out . write ( long value ) throws IO CaMeL Exception ;
rank: 351
score: 99.04832874644886
patch: out . write ( ch , ) ; ) ;
rank: 351
score: 99.00601196289062
patch: public abstract out . write ( byte ) ;
rank: 351
score: 98.93904113769531
patch: int . . write ( ) ;
rank: 351
score: 97.36774444580078
patch: replace > ]
rank: 351
score: 96.58417510986328
patch: > index
rank: 351
score: 96.49530029296875
patch: out out Exception
rank: 351
score: 96.07808430989583
patch: Set close
rank: 351
score: 95.167724609375
patch: public abstract is
rank: 352
score: 99.1448974609375
patch: out . write ( ch . write ( chars ) ;
rank: 352
score: 99.0476786295573
patch: public out . write ( byte ) throws IO CaMeL Exception
rank: 352
score: 99.00563557942708
patch: out . write ( ch + 0 + value ) ;
rank: 352
score: 98.9382568359375
patch: void out . write ( int value ) ;
rank: 352
score: 97.36388397216797
patch: add > length
rank: 352
score: 96.58222045898438
patch: return > else
rank: 352
score: 96.49505615234375
patch: out State IO
rank: 352
score: 95.16305541992188
patch: public synchronized private
rank: 353
score: 99.04759803185097
patch: public out . write ( ch . out . write ) ;
rank: 353
score: 99.00514914772727
patch: public out . write ( int char 1 ) ;
rank: 353
score: 98.93797718394886
patch: public synchronized out . write ( String str ) ;
rank: 353
score: 97.36297607421875
patch: private clone >
rank: 353
score: 96.58209838867188
patch: null > else
rank: 353
score: 96.49327087402344
patch: out State Thread
rank: 353
score: 96.07401529947917
patch: get catch
rank: 353
score: 95.16304016113281
patch: protected void <UNK>
rank: 354
score: 99.14301006610577
patch: public out . write ( out . to CaMeL String ( )
rank: 354
score: 99.0050760904948
patch: public out . write ( int int ] ch ) ;
rank: 354
score: 98.93762885199652
patch: private void write ( int ch ) ;
rank: 354
score: 98.92515869140625
patch: out . write ( byte 1 ] ) ;
rank: 354
score: 97.35700225830078
patch: log > ]
rank: 354
score: 96.58209838867188
patch: for > i catch
rank: 354
score: 96.49104309082031
patch: write null Exception
rank: 354
score: 96.07373046875
patch: has i
rank: 354
score: 95.162353515625
patch: public public throw
rank: 355
score: 99.14255934495192
patch: out . write . write ( ch . clone ( ) ;
rank: 355
score: 99.04694281684027
patch: out . write ( Byte ch ) ;
rank: 355
score: 99.00466918945312
patch: public void out ( ch . write ( out ) ;
rank: 355
score: 98.92512650923295
patch: public out . write ( $STRING$ ) ) ) ;
rank: 355
score: 97.3544921875
patch: private private public
rank: 355
score: 96.48953247070312
patch: / Exception null
rank: 355
score: 96.06996663411458
patch: public Out
rank: 355
score: 95.16170501708984
patch: public read >
rank: 356
score: 99.14241849459134
patch: out . write ( String ch ) throws IO CaMeL Exception {
rank: 356
score: 99.04592895507812
patch: public int write ( ch ) throws IO CaMeL Exception ;
rank: 356
score: 99.00453694661458
patch: public out . write ( String double CaMeL Value ) ;
rank: 356
score: 98.93686930338542
patch: void write ( int byte ch ) ;
rank: 356
score: 98.92461603338069
patch: out . write ( ch ch ) ; ) ;
rank: 356
score: 97.35401153564453
patch: set > >
rank: 356
score: 96.48905181884766
patch: public err Runtime
rank: 356
score: 96.06418863932292
patch: public Interrupted
rank: 356
score: 95.1593526204427
patch: to
rank: 357
score: 99.0447998046875
patch: public out . write ( ch . byte [ ] ch )
rank: 357
score: 99.003662109375
patch: public out . write ( String [ ] str ) ;
rank: 357
score: 98.9359130859375
patch: public void out . write ( int byte ) ;
rank: 357
score: 97.35221099853516
patch: close > i
rank: 357
score: 96.578564453125
patch: public for catch >
rank: 357
score: 96.48812103271484
patch: void err State
rank: 357
score: 96.06292724609375
patch: public char
rank: 357
score: 95.15924835205078
patch: public synchronized long
rank: 358
score: 99.14206764914773
patch: out . write ( ) throws IO CaMeL Exception {
rank: 358
score: 99.04465895432692
patch: public out . write ( byte ) throws IO CaMeL Exception {
rank: 358
score: 99.00344848632812
patch: public out . write ( String [ ] out ) ;
rank: 358
score: 98.9340087890625
patch: final abstract out . write ( ch ) ;
rank: 358
score: 98.92427368164063
patch: public out . write ( final ch ) ;
rank: 358
score: 97.35118103027344
patch: private protected private
rank: 358
score: 96.57817993164062
patch: initialize > i >
rank: 358
score: 96.48680877685547
patch: abstract Error null
rank: 359
score: 99.14176722935268
patch: out . write ( ch . char [ ] ch , ) ;
rank: 359
score: 99.044580078125
patch: out . write ( String ch , ) ;
rank: 359
score: 99.00330607096355
patch: private out . write ( byte [ ] out ) ;
rank: 359
score: 98.93394775390625
patch: out . write ( byte ; null ) ;
rank: 359
score: 97.34800720214844
patch: push > ]
rank: 359
score: 96.57548828125
patch: catch > ++
rank: 359
score: 96.48600006103516
patch: void $STRING$ State
rank: 359
score: 96.05970255533855
patch: protected close
rank: 360
score: 99.14148821149554
patch: public out . write ( long i ) throws IO CaMeL Exception ;
rank: 360
score: 99.00254128196023
patch: public static out . write ( byte [ ) ;
rank: 360
score: 98.9232510653409
patch: out . write ( ch . ) ; ) ;
rank: 360
score: 96.57410888671875
patch: set > length >
rank: 360
score: 96.48332214355469
patch: public Exception create
rank: 360
score: 96.05572509765625
patch: public child
rank: 360
score: 95.15703582763672
patch: close > >
rank: 361
score: 99.14134870256696
patch: public out . write ( ch . ) throws IO CaMeL Exception ;
rank: 361
score: 99.00246360085227
patch: public void out ( write ( Object ch ) ;
rank: 361
score: 98.93289184570312
patch: protected out ( ) ;
rank: 361
score: 97.34375762939453
patch: synchronized public public
rank: 361
score: 96.57181396484376
patch: return > length
rank: 361
score: 96.48235321044922
patch: public Exception iterator
rank: 361
score: 96.05408732096355
patch: public directory
rank: 361
score: 95.156982421875
patch: index
rank: 362
score: 99.14129638671875
patch: out . write ( ch . ch ) throws IO CaMeL Exception ;
rank: 362
score: 99.04287719726562
patch: public out . write ( ch , int size ) ;
rank: 362
score: 99.00209554036458
patch: public out . write ( int [ ] out ) ;
rank: 362
score: 98.93267822265625
patch: public out . write ( String value ) {
rank: 362
score: 98.92229614257812
patch: public out . write ( ch out ) ;
rank: 362
score: 97.34310913085938
patch: activate > ]
rank: 362
score: 96.57154541015625
patch: > count >
rank: 362
score: 96.48196411132812
patch: public run Exception
rank: 362
score: 96.05045572916667
patch: public offset
rank: 362
score: 95.15677897135417
patch: expected >
rank: 363
score: 99.14116559709821
patch: out . write ( ch ) throws Not CaMeL Implemented CaMeL Exception {
rank: 363
score: 99.04277886284723
patch: public out . write ( String str )
rank: 363
score: 98.93267211914062
patch: private void write ( final String ch ) ;
rank: 363
score: 97.34310913085938
patch: fire > ]
rank: 363
score: 96.57061157226562
patch: case > catch
rank: 363
score: 96.48069763183594
patch: void Exception Exception
rank: 363
score: 96.04917399088542
patch: size >
rank: 363
score: 95.15480041503906
patch: public private Illegal
rank: 364
score: 99.14104669744319
patch: public out . write . write ( ch ) {
rank: 364
score: 99.04170365767045
patch: out . write ( ch , Object value ) ;
rank: 364
score: 99.0010098544034
patch: public abstract out . write ( Object ch ) ;
rank: 364
score: 98.93229536576705
patch: public boolean write ( out . write ( ) ;
rank: 364
score: 98.92217407226562
patch: public out . write ( ch ) throws ;
rank: 364
score: 97.34201049804688
patch: put > catch
rank: 364
score: 96.48045349121094
patch: public Null Not
rank: 364
score: 96.04860432942708
patch: public keep
rank: 364
score: 95.1546630859375
patch: public public load
rank: 365
score: 99.14102877103366
patch: public out . write ( ch . write ( ch ) {
rank: 365
score: 99.0416768391927
patch: public abstract out . write ( ch , ch ) ;
rank: 365
score: 99.0008877840909
patch: public out . write ( int int $NUMBER$ ) ;
rank: 365
score: 98.93208451704545
patch: protected static out . write ( String ch ) ;
rank: 365
score: 98.92200927734375
patch: . . write . write ( ch ) ;
rank: 365
score: 97.3416748046875
patch: protected set >
rank: 365
score: 96.5652587890625
patch: insert > length >
rank: 365
score: 96.47907257080078
patch: final null null
rank: 365
score: 96.04164632161458
patch: public final
rank: 365
score: 95.15406036376953
patch: public abstract Array
rank: 366
score: 99.14084097055289
patch: Object out . write ( ch ) throws IO CaMeL Exception ;
rank: 366
score: 99.0415790264423
patch: out . write ( ch , byte [ ] out ) ;
rank: 366
score: 99.0008544921875
patch: out . write ( ch + name ) ;
rank: 366
score: 98.9319091796875
patch: out . write ( byte - i ) ;
rank: 366
score: 98.92037353515624
patch: public out out . write ( $STRING$ ) ;
rank: 366
score: 97.33875274658203
patch: private log >
rank: 366
score: 96.5580810546875
patch: log > i
rank: 366
score: 96.47897338867188
patch: void null Stack
rank: 366
score: 96.04071044921875
patch: Set run
rank: 367
score: 99.13984898158482
patch: out . write ( ch ) throws Illegal CaMeL Argument CaMeL Exception {
rank: 367
score: 98.93155517578126
patch: public abstract out . write ( str ) ;
rank: 367
score: 98.9198486328125
patch: public public out . write ( byte ) ;
rank: 367
score: 97.33673858642578
patch: if > ]
rank: 367
score: 96.55731201171875
patch: close > catch >
rank: 367
score: 96.47857666015625
patch: protected State 0
rank: 367
score: 96.04048665364583
patch: Util return
rank: 368
score: 98.91961059570312
patch: public out . write ( byte . ) ;
rank: 368
score: 97.33655548095703
patch: new catch >
rank: 368
score: 96.54806518554688
patch: log > ++
rank: 368
score: 96.47834777832031
patch: / Exception State
rank: 368
score: 96.03936767578125
patch: Value arraycopy
rank: 368
score: 95.15144348144531
patch: public synchronized Object
rank: 369
score: 99.13926478794643
patch: protected out . write ( String str ) throws IO CaMeL Exception ;
rank: 369
score: 98.999755859375
patch: public abstract out . write ( int 0 ) ;
rank: 369
score: 98.93125
patch: public out . write ( Integer str ) ;
rank: 369
score: 98.91907848011364
patch: public out . write ( $STRING$ ) out . ;
rank: 369
score: 97.33578491210938
patch: protected public synchronized
rank: 369
score: 96.54581298828126
patch: public put > i
rank: 369
score: 96.47772216796875
patch: @ State Error
rank: 369
score: 96.03851318359375
patch: list >
rank: 369
score: 95.1512451171875
patch: write > >
rank: 370
score: 99.03944749098558
patch: public out . write ( ch ) { return ) ; }
rank: 370
score: 98.9996670809659
patch: public static out . write ( int name ) ;
rank: 370
score: 98.93084106445312
patch: out . write ( ch , private ) ;
rank: 370
score: 98.91841343470982
patch: public out ( ) { ;
rank: 370
score: 97.33425903320312
patch: public catch >
rank: 370
score: 96.54156494140625
patch: > print
rank: 370
score: 96.47756958007812
patch: private Exception Illegal
rank: 370
score: 96.0377705891927
patch: Utilities public
rank: 371
score: 99.13895089285714
patch: public final out . write ( ch ) throws IO CaMeL Exception {
rank: 371
score: 99.03917439778645
patch: public out . write ( ch . char ch ) ;
rank: 371
score: 98.99958939985795
patch: public out . write ( ch . start ) ;
rank: 371
score: 98.9305419921875
patch: private out . write ( int byte = 0 ;
rank: 371
score: 98.91827392578125
patch: out . write ( char $NUMBER$ ] ) ;
rank: 371
score: 97.33419799804688
patch: private try >
rank: 371
score: 96.54064331054687
patch: hash > catch >
rank: 371
score: 96.47671508789062
patch: public arraycopy Exception
rank: 371
score: 95.14958190917969
patch: public private new
rank: 372
score: 99.13880504261364
patch: private out . write ( ch [ ] ) {
rank: 372
score: 99.0387714092548
patch: public void out ( ) { write ( ch ) ; }
rank: 372
score: 98.99958038330078
patch: public static out ( ) { ;
rank: 372
score: 98.9303970336914
patch: synchronized out . write ( ) ;
rank: 372
score: 98.91805013020833
patch: out . write ( chars ch ) ;
rank: 372
score: 97.3273696899414
patch: protected clear >
rank: 372
score: 96.5390625
patch: has > i catch
rank: 372
score: 96.47660064697266
patch: public null arraycopy
rank: 372
score: 96.03755696614583
patch: public Word
rank: 373
score: 99.13858468191964
patch: public out . write ( ch . out . write ( ) ;
rank: 373
score: 99.03873697916667
patch: public out . write ( String name ) throws ) ;
rank: 373
score: 98.99943033854167
patch: out . write ( ch + 1 , ch ) ;
rank: 373
score: 98.92963324652777
patch: public int write ( String str ) ;
rank: 373
score: 98.91759033203125
patch: out . write . write ( out ) ;
rank: 373
score: 97.32646179199219
patch: close > Index
rank: 373
score: 96.53718872070313
patch: > run >
rank: 373
score: 96.47628021240234
patch: out arraycopy State
rank: 373
score: 96.0354512532552
patch: exists >
rank: 373
score: 95.14739990234375
patch: sort >
rank: 374
score: 99.13821847098214
patch: private out . write ( long ch ) throws IO CaMeL Exception ;
rank: 374
score: 99.03854370117188
patch: out . write ( ch , out . read ( )
rank: 374
score: 98.92898123604911
patch: final void out ( ) ;
rank: 374
score: 98.9170150756836
patch: public out . close ( ) ;
rank: 374
score: 97.32585144042969
patch: schedule > ]
rank: 374
score: 96.53611450195312
patch: exit > catch
rank: 374
score: 96.47615051269531
patch: public Runnable err
rank: 374
score: 96.0342508951823
patch: public index
rank: 374
score: 95.14639282226562
patch: public private private
rank: 375
score: 99.03838556463069
patch: public out . write ( ch , char ) ;
rank: 375
score: 98.9985018643466
patch: public out . write ( int int ch ) ;
rank: 375
score: 98.92860412597656
patch: protected void out ( out ) ;
rank: 375
score: 98.9169034090909
patch: public out . write ( out . write ) ;
rank: 375
score: 97.32557678222656
patch: main > ]
rank: 375
score: 96.47543334960938
patch: public Error arraycopy
rank: 375
score: 96.03102620442708
patch: public content
rank: 375
score: 95.14604949951172
patch: public public Boolean
rank: 376
score: 99.1371561686198
patch: private synchronized out . write ( ch [ ] ) {
rank: 376
score: 99.037353515625
patch: public out . write ( String ( int ch ) ;
rank: 376
score: 98.99822443181819
patch: final out . write ( ch [ ] ) ;
rank: 376
score: 98.92859564887152
patch: static void write ( String ch ) ;
rank: 376
score: 97.3255386352539
patch: remove > >
rank: 376
score: 96.53338623046875
patch: > > public
rank: 376
score: 96.47467041015625
patch: protected null Runtime
rank: 376
score: 96.02958170572917
patch: public byte
rank: 376
score: 95.1458969116211
patch: protected void {
rank: 377
score: 98.99800618489583
patch: out . write ( ch . equals ( $STRING$ ) ;
rank: 377
score: 98.92851118607955
patch: out . write ( byte [ / ] ) ;
rank: 377
score: 98.91640625
patch: public out . write ( this ) ) ;
rank: 377
score: 97.32459259033203
patch: protected protected private
rank: 377
score: 96.53255004882813
patch: log > arraycopy
rank: 377
score: 96.46937561035156
patch: static Exception null
rank: 377
score: 96.02811686197917
patch: public lock
rank: 377
score: 95.14363098144531
patch: public protected protected
rank: 378
score: 99.13662283761161
patch: private out . write ( ch . to CaMeL String ( ) {
rank: 378
score: 98.99761962890625
patch: public out . write ( String start ) ;
rank: 378
score: 98.92847900390625
patch: int . . out . write ( ) ;
rank: 378
score: 98.91625366210937
patch: out . write ( ch , str ) ;
rank: 378
score: 97.3211441040039
patch: refresh > ]
rank: 378
score: 96.53217163085938
patch: for > i case
rank: 378
score: 96.46910858154297
patch: synchronized Error Exception
rank: 378
score: 96.02716064453125
patch: get finally
rank: 379
score: 98.99566095525569
patch: public synchronized out . write ( Object ch ) ;
rank: 379
score: 98.928173828125
patch: private out . write ( String value ) ;
rank: 379
score: 98.9161709872159
patch: public out . write ( ) ) } ) ;
rank: 379
score: 97.32077026367188
patch: add > next
rank: 379
score: 96.53019714355469
patch: > iterator
rank: 379
score: 96.46685791015625
patch: void ch State
rank: 379
score: 96.02520751953125
patch: entry >
rank: 379
score: 95.14278157552083
patch: assign >
rank: 380
score: 98.92775268554688
patch: private out . write ( String ch ) {
rank: 380
score: 98.91383056640625
patch: out . write . write ( str ) ;
rank: 380
score: 97.31773376464844
patch: synchronized set >
rank: 380
score: 96.524072265625
patch: has > length >
rank: 380
score: 96.46670532226562
patch: private null Not
rank: 380
score: 96.02449544270833
patch: Iterator <UNK>
rank: 380
score: 95.14122772216797
patch: public public Process
rank: 381
score: 99.13496616908482
patch: void out . write ( ch . to CaMeL String ( ) ;
rank: 381
score: 99.03530883789062
patch: public out . write ( ch , char ch ) ;
rank: 381
score: 98.9952163696289
patch: out . append ( $STRING$ ) ;
rank: 381
score: 98.92724609375
patch: public out . write ( int byte $NUMBER$ ) ;
rank: 381
score: 98.91342163085938
patch: public out . write ( out . ) ;
rank: 381
score: 96.5239013671875
patch: write > catch >
rank: 381
score: 96.46580505371094
patch: out Runtime State
rank: 381
score: 95.14115397135417
patch: public reverse
rank: 382
score: 98.99507279829545
patch: out . write ( char [ ] out ) ;
rank: 382
score: 98.92714621803977
patch: public abstract out . write ( int byte ) ;
rank: 382
score: 98.91158447265624
patch: out . write ( byte ] ch ) ;
rank: 382
score: 97.31599426269531
patch: show > ]
rank: 382
score: 96.52261352539062
patch: remove > catch >
rank: 382
score: 96.46234893798828
patch: protected State out
rank: 382
score: 96.01870727539062
patch: public native
rank: 382
score: 95.140625
patch: iterator
rank: 383
score: 99.13453979492188
patch: public final out . write ( ch ) {
rank: 383
score: 98.994287109375
patch: public abstract out . write ( int ) ;
rank: 383
score: 98.926318359375
patch: void out . write ( int name ) ;
rank: 383
score: 98.91098361545139
patch: out . write ( ch ) . ;
rank: 383
score: 97.31256103515625
patch: final put >
rank: 383
score: 96.52114868164062
patch: setup > catch >
rank: 383
score: 96.46124267578125
patch: private Runnable State
rank: 383
score: 96.01637776692708
patch: State
rank: 383
score: 95.14031219482422
patch: public protected Null
rank: 384
score: 99.13446044921875
patch: public out . write ( ch $NUMBER$ ) throws IO CaMeL Exception ;
rank: 384
score: 99.03448486328125
patch: public String write ( ch ) throws IO CaMeL Exception ;
rank: 384
score: 98.92628987630208
patch: void . write ( String ch ) ;
rank: 384
score: 98.9107177734375
patch: out . write ( $STRING$ ) throws ) ;
rank: 384
score: 97.31184387207031
patch: try > >
rank: 384
score: 96.520263671875
patch: insert > catch >
rank: 384
score: 96.45899963378906
patch: final null State
rank: 384
score: 96.01470947265625
patch: public compute
rank: 384
score: 95.13958740234375
patch: public synchronized equals
rank: 385
score: 99.13427734375
patch: public out . write ( ch . char ch [ ] ) ;
rank: 385
score: 99.03396606445312
patch: public out . write ( Char CaMeL Sequence str ) ;
rank: 385
score: 98.9929911295573
patch: public out . write ( ch . read ( ) ;
rank: 385
score: 98.926123046875
patch: public out . write ( String byte ) ;
rank: 385
score: 98.91008911132812
patch: public out . write ( out ) ) ;
rank: 385
score: 97.30814615885417
patch: update >
rank: 385
score: 96.45802307128906
patch: void Exception null
rank: 385
score: 95.13901774088542
patch: initialize >
rank: 386
score: 99.13405064174107
patch: out . write ( ch . get CaMeL Input CaMeL Stream ( )
rank: 386
score: 99.03394775390625
patch: public out . write ( ch 1 ) ;
rank: 386
score: 98.99258422851562
patch: public boolean out ( ) { ;
rank: 386
score: 98.92579345703125
patch: void out . write ( byte str ) ;
rank: 386
score: 98.9080322265625
patch: public out . write ( byte 1 ) {
rank: 386
score: 97.30388641357422
patch: load > ]
rank: 386
score: 96.45741271972656
patch: public Enum State
rank: 386
score: 96.0081787109375
patch: private int
rank: 387
score: 99.0337158203125
patch: public abstract out . write ( char ) ;
rank: 387
score: 98.99220581054688
patch: private out . write ( String name ) ;
rank: 387
score: 98.92402954101563
patch: public void write ( final String value ) ;
rank: 387
score: 98.90766143798828
patch: out . write ( in ) ;
rank: 387
score: 97.30116271972656
patch: private public run
rank: 387
score: 96.51455078125
patch: if > length >
rank: 387
score: 96.4571533203125
patch: private State iterator
rank: 387
score: 95.13764953613281
patch: public abstract String
rank: 388
score: 99.133544921875
patch: public write . write ( ch . get CaMeL Bytes ( ) ;
rank: 388
score: 99.03346761067708
patch: void out . write ( ch , ch . ) ;
rank: 388
score: 98.923828125
patch: public void write ( $STRING$ ) ;
rank: 388
score: 98.90631103515625
patch: public out . write ( str ) {
rank: 388
score: 97.2904764811198
patch: protected private
rank: 388
score: 96.514013671875
patch: catch > 0
rank: 388
score: 96.45635986328125
patch: public : Exception
rank: 388
score: 96.00661214192708
patch: private Runnable
rank: 389
score: 99.03340657552083
patch: @ Override public out . write ( ch $NUMBER$ ) ;
rank: 389
score: 98.99139404296875
patch: String out ( ) ;
rank: 389
score: 98.9236572265625
patch: public private out . write ( out ) ;
rank: 389
score: 97.28988647460938
patch: write > i
rank: 389
score: 96.51370849609376
patch: > finally >
rank: 389
score: 96.45496368408203
patch: protected $STRING$ Exception
rank: 389
score: 96.00644938151042
patch: public interrupt
rank: 390
score: 99.13260323660714
patch: out . write . write ( ch ) throws Interrupted CaMeL Exception ;
rank: 390
score: 99.03321422230114
patch: public void write ( ch ) throws IO CaMeL Exception
rank: 390
score: 98.99137573242187
patch: public static out . write ( char ) ;
rank: 390
score: 98.90559692382813
patch: public ch . write ( ] ch ) ;
rank: 390
score: 96.51334228515626
patch: clear > out >
rank: 390
score: 96.454833984375
patch: private $STRING$ Exception
rank: 390
score: 96.0061543782552
patch: Class finally
rank: 391
score: 99.13239397321429
patch: out . write ( ch . char ch . char CaMeL Count )
rank: 391
score: 99.03275553385417
patch: out . write ( boolean ch ) ;
rank: 391
score: 98.99005126953125
patch: public void out ( ch [ ] ) ;
rank: 391
score: 98.92302911931819
patch: void . write ( byte [ ] ch ) ;
rank: 391
score: 98.90558471679688
patch: public out . out . write ( ) ;
rank: 391
score: 97.28803253173828
patch: script > ]
rank: 391
score: 96.51307983398438
patch: for catch >
rank: 391
score: 96.4524154663086
patch: public null :
rank: 391
score: 95.13479614257812
patch: * { void
rank: 392
score: 99.13223970853366
patch: out . write ( ch . get CaMeL Chars ( ) ;
rank: 392
score: 98.98998006184895
patch: public static void write ( String char CaMeL Value ) ;
rank: 392
score: 98.922607421875
patch: void out ( out ch ) ;
rank: 392
score: 98.90551147460937
patch: public out . write ( chars ch ) ;
rank: 392
score: 97.28639221191406
patch: has > i
rank: 392
score: 96.51275024414062
patch: has > i case
rank: 392
score: 96.45222473144531
patch: public null Throwable
rank: 392
score: 96.0029805501302
patch: System >
rank: 392
score: 95.13394165039062
patch: private void {
rank: 393
score: 99.13161892361111
patch: out out . write ( ch ) {
rank: 393
score: 99.03250122070312
patch: public out . write ( int ch ) throws ) ;
rank: 393
score: 98.98983764648438
patch: out . write ( name ) . write ( ) ;
rank: 393
score: 98.92256303267045
patch: / ; void out . write ( byte ) ;
rank: 393
score: 98.90547688802083
patch: public out . write ( byte ch ;
rank: 393
score: 97.28527069091797
patch: iterator > ]
rank: 393
score: 96.51180419921874
patch: finally > else
rank: 393
score: 96.4515380859375
patch: public Exception Safe
rank: 393
score: 96.00145467122395
patch: public $STRING$
rank: 393
score: 95.13371276855469
patch: public public highest
rank: 394
score: 99.13129534040179
patch: out . write ( ch . write ( ch . value ) ;
rank: 394
score: 99.03173828125
patch: Object out . write ( ch , ) ;
rank: 394
score: 98.989501953125
patch: public out . write ( int 0 ) ;
rank: 394
score: 98.92232937282986
patch: protected void out . write ( ) ;
rank: 394
score: 98.90506998697917
patch: public out . write ( final ) ;
rank: 394
score: 97.28426361083984
patch: private next >
rank: 394
score: 96.45016479492188
patch: private Exception Thread
rank: 394
score: 95.99880981445312
patch: public format
rank: 395
score: 99.13094075520833
patch: out . write ( ch ) throws ( ch ) ;
rank: 395
score: 98.92190551757812
patch: void out ( int i ) ;
rank: 395
score: 98.90471801757812
patch: public int out . write ( $STRING$ ) ;
rank: 395
score: 97.28294372558594
patch: ignore > ]
rank: 395
score: 96.44993591308594
patch: public State Not
rank: 395
score: 95.98933919270833
patch: public length
rank: 395
score: 95.13106282552083
patch: flush >
rank: 396
score: 99.03153170072116
patch: public out . write ( ch ) { ch ) ; }
rank: 396
score: 98.98843044704861
patch: public static void write ( ch ) ;
rank: 396
score: 98.9216796875
patch: public out . write ( int chars ) ;
rank: 396
score: 98.90386352539062
patch: ch . out . write ( ch ) ;
rank: 396
score: 96.50460815429688
patch: for > i ++
rank: 396
score: 96.44945526123047
patch: void State Runtime
rank: 396
score: 95.13055419921875
patch: List
rank: 397
score: 99.13071114676339
patch: private out . write ( String ch ) throws IO CaMeL Exception {
rank: 397
score: 99.03131658380681
patch: public out . write ( ch . ch . )
rank: 397
score: 98.98753773082386
patch: int out . write ( ch [ ] ) ;
rank: 397
score: 98.9037353515625
patch: public out . write ( str ) ) ;
rank: 397
score: 97.27809143066406
patch: encode > ]
rank: 397
score: 96.50391845703125
patch: > Number >
rank: 397
score: 96.44928741455078
patch: scanpos State Exception
rank: 397
score: 95.98426310221355
patch: Util Exception
rank: 397
score: 95.12942504882812
patch: public float
rank: 398
score: 99.13058706430289
patch: out . write ( ch . char [ ] str , ;
rank: 398
score: 99.03127034505208
patch: public int out ( ch ) throws IO CaMeL Exception ;
rank: 398
score: 98.98703835227273
patch: out . write ( ch + 0 ch ) ;
rank: 398
score: 98.9207430752841
patch: void out . write ( System . ; ) ;
rank: 398
score: 97.27674865722656
patch: setup > ]
rank: 398
score: 96.44869232177734
patch: protected State Index
rank: 398
score: 95.98350016276042
patch: Set synchronized
rank: 398
score: 95.12902069091797
patch: public private protected
rank: 399
score: 99.13007061298077
patch: out . write ( ch , out . write ( ) ;
rank: 399
score: 99.03121243990384
patch: public out . write ( ch . ) throws IO CaMeL Exception
rank: 399
score: 98.98690795898438
patch: public void out ( ? > out ) ;
rank: 399
score: 98.90255737304688
patch: out . write ( byte ch out ) ;
rank: 399
score: 96.50162353515626
patch: case > Index
rank: 399
score: 96.44820404052734
patch: non State State
rank: 399
score: 95.98209635416667
patch: Queue >
rank: 399
score: 95.12452697753906
patch: public insert >
rank: 400
score: 98.98635864257812
patch: public static out . write ( int char $NUMBER$ ) ;
rank: 400
score: 98.91998291015625
patch: out . write ( byte ( $NUMBER$ ) ;
rank: 400
score: 98.90247802734375
patch: public out . write ( ch ) } ;
rank: 400
score: 97.27497863769531
patch: protected read >
rank: 400
score: 96.50069427490234
patch: > exit
rank: 400
score: 96.44781494140625
patch: public null out
rank: 400
score: 95.9720458984375
patch: has :
rank: 400
score: 95.12439727783203
patch: public sleep >
rank: 401
score: 99.03097534179688
patch: out [ ] write ( ) throws IO CaMeL Exception ;
rank: 401
score: 98.98614501953125
patch: out . write ( length ) ;
rank: 401
score: 98.91940646701389
patch: public void out ( int str ) ;
rank: 401
score: 98.90206298828124
patch: public out . write ch ( ch ) ;
rank: 401
score: 97.2735595703125
patch: println > catch
rank: 401
score: 96.49986572265625
patch: catch > err
rank: 401
score: 96.44635009765625
patch: public Exception Map
rank: 401
score: 95.97174072265625
patch: public substring
rank: 401
score: 95.12429809570312
patch: iterator > >
rank: 402
score: 99.12964806189903
patch: synchronized out . write ( ch ) throws IO CaMeL Exception {
rank: 402
score: 99.0304842862216
patch: out . write ( String ( int ch ) ;
rank: 402
score: 98.91901312934027
patch: void write . write ( ch ) ;
rank: 402
score: 98.90143500434027
patch: public void out ( ] ch ) ;
rank: 402
score: 97.27318572998047
patch: put > length
rank: 402
score: 96.49677124023438
patch: > out public
rank: 402
score: 96.44605255126953
patch: public Thread null
rank: 402
score: 95.9712422688802
patch: public name
rank: 402
score: 95.12040201822917
patch: drop >
rank: 403
score: 99.12937233664773
patch: out . write ( ch , int max ) ;
rank: 403
score: 99.03020770733173
patch: public abstract out . write ( ch , int length ) ;
rank: 403
score: 98.91778564453125
patch: private void out ( ch ) ;
rank: 403
score: 98.89951578776042
patch: out . out . write ( ) ;
rank: 403
score: 97.2728983561198
patch: Input >
rank: 403
score: 96.4967529296875
patch: > >= catch
rank: 403
score: 96.44375610351562
patch: public Exception case
rank: 403
score: 95.1199951171875
patch: < abstract <UNK>
rank: 404
score: 99.12910600142045
patch: out . write ( ch ) { return ch ;
rank: 404
score: 99.03017953725961
patch: public void out ( ) { out ( $STRING$ ) ; }
rank: 404
score: 98.91776529947917
patch: protected void write ( int str ) ;
rank: 404
score: 97.27254231770833
patch: local >
rank: 404
score: 96.496142578125
patch: clear > arraycopy >
rank: 404
score: 96.44371032714844
patch: abstract null Exception
rank: 404
score: 95.97076416015625
patch: Utilities void
rank: 404
score: 95.11961364746094
patch: include > >
rank: 405
score: 99.1290283203125
patch: public boolean write ( ch ) throws IO CaMeL Exception ;
rank: 405
score: 99.03013102213542
patch: public out . write ( String ch ) throws ch ;
rank: 405
score: 98.91770717075893
patch: void write ( out ) ;
rank: 405
score: 97.27161407470703
patch: private protected protected
rank: 405
score: 96.49591064453125
patch: > size case
rank: 405
score: 96.4429931640625
patch: private Null State
rank: 405
score: 95.9697977701823
patch: public US
rank: 405
score: 95.115234375
patch: public evaluate
rank: 406
score: 99.12788529829545
patch: out out . write ( ch [ ] ) ;
rank: 406
score: 99.03012917258523
patch: out . write ( ch , boolean write ) ;
rank: 406
score: 98.91738059303977
patch: void out . write ( int byte [ ) ;
rank: 406
score: 98.89798583984376
patch: public out . write ( byte ch ; .
rank: 406
score: 97.26939392089844
patch: private flush >
rank: 406
score: 96.49393310546876
patch: > length !=
rank: 406
score: 96.44086456298828
patch: protected Runtime null
rank: 406
score: 95.96925862630208
patch: public Number
rank: 406
score: 95.11260986328125
patch: expand >
rank: 407
score: 99.12729317801339
patch: out . write ( ch . write ( ch . key ) ;
rank: 407
score: 98.98460896809895
patch: write . write ( ch . get ( ch ) ;
rank: 407
score: 98.89763793945312
patch: public out . write ( $STRING$ ) out ;
rank: 407
score: 97.26921081542969
patch: private start >
rank: 407
score: 96.49201049804688
patch: null > catch
rank: 407
score: 96.44051106770833
patch: void null
rank: 407
score: 95.9686279296875
patch: public count
rank: 407
score: 95.1124267578125
patch: private new
rank: 408
score: 99.12699672154018
patch: public out . write ( byte ch ) throws IO CaMeL Exception ;
rank: 408
score: 99.02979532877605
patch: public out . write ( ch . out . ch )
rank: 408
score: 98.98406427556819
patch: public static out . write ( int start ) ;
rank: 408
score: 98.91628689236111
patch: public abstract void write ( out ) ;
rank: 408
score: 98.89746704101563
patch: out . ; . write ( ch ) ;
rank: 408
score: 97.26824951171875
patch: protected private public
rank: 408
score: 96.49134521484375
patch: > equals >
rank: 408
score: 96.4396743774414
patch: public Exception Unknown
rank: 408
score: 95.966796875
patch: Util out
rank: 408
score: 95.11183675130208
patch: while >
rank: 409
score: 99.12698800223214
patch: public out . write ( ch . char [ ] str ) {
rank: 409
score: 99.02957857572116
patch: out . write ( ch , int ch , int ) ;
rank: 409
score: 98.9840087890625
patch: public boolean out . write ( String ch ) ;
rank: 409
score: 98.89736328125
patch: out . write ( ch ) ; ) }
rank: 409
score: 97.266357421875
patch: for > Index
rank: 409
score: 96.48896484375
patch: log > iterator
rank: 409
score: 96.43763732910156
patch: public State Number
rank: 409
score: 95.96668497721355
patch: abstract public
rank: 409
score: 95.11114501953125
patch: store >
rank: 410
score: 98.98385620117188
patch: public void out ( ch . get ( ch ) ;
rank: 410
score: 98.915283203125
patch: final void write ( ch ) ;
rank: 410
score: 98.89710828993056
patch: public out . write ( this ) {
rank: 410
score: 97.26617431640625
patch: trim > ]
rank: 410
score: 96.48558349609375
patch: run > catch >
rank: 410
score: 96.4371337890625
patch: To Exception State
rank: 410
score: 95.96604410807292
patch: System print
rank: 410
score: 95.10894775390625
patch: replace >
rank: 411
score: 99.12659563337054
patch: protected synchronized out . write ( ch ) throws IO CaMeL Exception {
rank: 411
score: 99.02874200994319
patch: out . write ( ) throws Interrupted CaMeL Exception ;
rank: 411
score: 98.98277791341145
patch: public out . write ( String . . . ) ;
rank: 411
score: 98.91512451171874
patch: private out . write ( int str ) ;
rank: 411
score: 98.89689331054687
patch: public void out . write ( byte ) ;
rank: 411
score: 97.26565551757812
patch: substring > ]
rank: 411
score: 96.43707275390625
patch: public catch Exception
rank: 411
score: 95.96469116210938
patch: Next >
rank: 412
score: 99.12618314302884
patch: public out . write ( ch . char [ ] chars )
rank: 412
score: 99.02821702223558
patch: public out . write ( ch . ch . ch . )
rank: 412
score: 98.91508653428819
patch: protected out . write ( out ) ;
rank: 412
score: 97.26466369628906
patch: handler > i
rank: 412
score: 96.43653869628906
patch: protected null Null
rank: 412
score: 95.10226440429688
patch: TYPE
rank: 413
score: 99.12594839242789
patch: out . write ( ch ) throws IO CaMeL Exception { ;
rank: 413
score: 99.0281982421875
patch: out . write ( ch , char [ ] ch )
rank: 413
score: 98.98259943181819
patch: public void out ( String [ ] ch ) ;
rank: 413
score: 98.91501193576389
patch: void write ( int String ch ) ;
rank: 413
score: 98.89573838975694
patch: out . write ( ch . out ;
rank: 413
score: 97.26278686523438
patch: update > i
rank: 413
score: 96.43587493896484
patch: public Null Runnable
rank: 413
score: 95.9622090657552
patch: Collection <UNK>
rank: 414
score: 99.12583571213942
patch: out . write . write ( ) throws IO CaMeL Exception {
rank: 414
score: 99.02777569110577
patch: out . write ( ch , 0 , ch 1 ) ;
rank: 414
score: 98.91324869791667
patch: write . write ( String str ) ;
rank: 414
score: 98.89518229166667
patch: public out . write ( key ) ;
rank: 414
score: 97.26173400878906
patch: protected new >
rank: 414
score: 96.4786865234375
patch: update > catch >
rank: 414
score: 96.43399810791016
patch: else Exception Exception
rank: 414
score: 95.1005350748698
patch: public }
rank: 415
score: 99.12556675502232
patch: public out . write ( ch . char [ ] ch ) ;
rank: 415
score: 99.0272928873698
patch: public out . write ( ) throws ch . ) ;
rank: 415
score: 98.91309703480114
patch: private static out . write ( String str ) ;
rank: 415
score: 98.8951416015625
patch: private out . write ( byte ) ;
rank: 415
score: 97.2594223022461
patch: run > arraycopy
rank: 415
score: 96.47755126953125
patch: case > Stack
rank: 415
score: 96.43394470214844
patch: protected Runnable State
rank: 415
score: 95.96044921875
patch: Util Stack
rank: 415
score: 95.09605916341145
patch: show >
rank: 416
score: 99.12551645132211
patch: out . write ( ch $NUMBER$ ) throws IO CaMeL Exception {
rank: 416
score: 99.02660023082386
patch: out . write ( Char CaMeL Sequence value ) ;
rank: 416
score: 98.98157848011364
patch: public static out . write ( int key ) ;
rank: 416
score: 98.91281467013889
patch: public void write ( double ch ) ;
rank: 416
score: 98.89411010742188
patch: public out . write ( Double ch ) ;
rank: 416
score: 97.25891876220703
patch: arraycopy > >
rank: 416
score: 96.47734375
patch: hash > i
rank: 416
score: 96.43305969238281
patch: public Exception !=
rank: 416
score: 95.96021525065105
patch: private for
rank: 417
score: 99.12513146033653
patch: out . write ( out . to CaMeL String ( ) )
rank: 417
score: 98.98148970170455
patch: public void out ( byte [ ] ch ) ;
rank: 417
score: 98.9127197265625
patch: out . write ( Boolean ch ) ;
rank: 417
score: 98.893701171875
patch: public out . write ( new ch ) ;
rank: 417
score: 97.25869750976562
patch: root > ]
rank: 417
score: 96.47718505859375
patch: get > i --
rank: 417
score: 96.43222045898438
patch: out State Illegal
rank: 417
score: 95.95296223958333
patch: public random
rank: 417
score: 95.0904541015625
patch: Single >
rank: 418
score: 99.02591959635417
patch: public out . write ( ch ) throws Interrupted CaMeL Exception
rank: 418
score: 98.98099365234376
patch: Object out . write ( String ch ) ;
rank: 418
score: 98.91262478298611
patch: private void write ( String ch ) ;
rank: 418
score: 97.25466918945312
patch: protected synchronized public
rank: 418
score: 96.47636108398437
patch: catch > index
rank: 418
score: 96.43220520019531
patch: synchronized Exception Error
rank: 418
score: 95.94854736328125
patch: Utilities get
rank: 419
score: 99.12442016601562
patch: public out . write ( ch . clone ( ) {
rank: 419
score: 99.02569025213069
patch: out . write ( ch , String ch ) ;
rank: 419
score: 98.91261121961806
patch: static void write ( int ch ) ;
rank: 419
score: 98.89312133789062
patch: public write . out . write ( ) ;
rank: 419
score: 97.25198364257812
patch: perform > ]
rank: 419
score: 96.47506103515624
patch: set > out >
rank: 419
score: 96.43087005615234
patch: public State run
rank: 419
score: 95.07919311523438
patch: include >
rank: 420
score: 99.12388392857143
patch: private synchronized out . write ( ch ) throws IO CaMeL Exception {
rank: 420
score: 99.02567545572917
patch: out . write ( ch , ch . ) ) ;
rank: 420
score: 98.8929443359375
patch: public out . write ( byte [ ] ;
rank: 420
score: 97.25179290771484
patch: hash > ]
rank: 420
score: 96.4737060546875
patch: ch catch >
rank: 420
score: 96.4306640625
patch: public Throwable State
rank: 420
score: 95.94749959309895
patch: has Exception
rank: 421
score: 99.12387520926339
patch: private synchronized out . write ( ch ) throws IO CaMeL Exception ;
rank: 421
score: 99.025146484375
patch: public out . write ( char out [ ] ) ;
rank: 421
score: 98.98024680397727
patch: public out . write ( ch . length ) ;
rank: 421
score: 98.91121215820313
patch: public void write ( int byte [ ) ;
rank: 421
score: 98.89259643554688
patch: out . write ( byte 1 1 ) ;
rank: 421
score: 97.25167846679688
patch: start > ]
rank: 421
score: 96.47310791015624
patch: > i Not
rank: 421
score: 96.42924499511719
patch: out 0 Exception
rank: 421
score: 95.94625854492188
patch: synchronized public
rank: 422
score: 99.12305559430804
patch: private out . write ( long ch ) throws IO CaMeL Exception {
rank: 422
score: 99.02504660866477
patch: out . write ( ch , float ch ) ;
rank: 422
score: 98.97982788085938
patch: public out . write ( byte . . . ) ;
rank: 422
score: 98.91092936197917
patch: public boolean write ( String str ) ;
rank: 422
score: 98.89252319335938
patch: public final out . write ( this ) ;
rank: 422
score: 96.4723388671875
patch: clear > case >
rank: 422
score: 96.42832946777344
patch: static null Error
rank: 422
score: 95.94566345214844
patch: equals
rank: 422
score: 95.05357869466145
patch: Write >
rank: 423
score: 99.1219482421875
patch: out . write ( ch ) { return write ( ch ) ;
rank: 423
score: 98.9795254794034
patch: public out . write ( int double $NUMBER$ ) ;
rank: 423
score: 98.9101806640625
patch: public out . write ( long str ) ;
rank: 423
score: 98.8921875
patch: out . write ( $STRING$ + ch ) ;
rank: 423
score: 97.2483901977539
patch: private synchronized public
rank: 423
score: 96.47219848632812
patch: call > catch >
rank: 423
score: 96.42514038085938
patch: @ Error State
rank: 423
score: 95.94549560546875
patch: Set get
rank: 424
score: 99.12124633789062
patch: private abstract out . write ( ch [ ] ) ;
rank: 424
score: 99.024658203125
patch: public void out ( ch ) throws ch . ) ;
rank: 424
score: 98.9794588955966
patch: void out ( ch . get ( ch ) ;
rank: 424
score: 98.90922037760417
patch: void out ( ch + $STRING$ ) ;
rank: 424
score: 98.89215087890625
patch: public out . write ( out ;
rank: 424
score: 97.2481918334961
patch: protected public run
rank: 424
score: 96.47207641601562
patch: load > catch >
rank: 424
score: 96.42339324951172
patch: public Error Unsupported
rank: 424
score: 95.94523111979167
patch: Set >
rank: 424
score: 95.05324300130208
patch: unmodifiable >
rank: 425
score: 99.12101527622768
patch: public out . write ( ch . get CaMeL Type ( ) ;
rank: 425
score: 99.02463942307692
patch: public out . write ( ch $NUMBER$ ) throws IO CaMeL Exception
rank: 425
score: 98.97931586371527
patch: out . write ( ch ) } ;
rank: 425
score: 98.90913221571181
patch: out . write ( char [ ) ;
rank: 425
score: 98.89207763671875
patch: public final out . write ( str ) ;
rank: 425
score: 97.24783325195312
patch: running > ]
rank: 425
score: 96.42251586914062
patch: out State Internal
rank: 425
score: 95.9450174967448
patch: Buffer arraycopy
rank: 426
score: 99.02437337239583
patch: private out . write ( ) throws IO CaMeL Exception ;
rank: 426
score: 98.9783935546875
patch: public abstract out . write ( ch . out ) ;
rank: 426
score: 98.90842507102273
patch: public out . write ( out ; null ) ;
rank: 426
score: 98.8905258178711
patch: public write ( ] ch ) ;
rank: 426
score: 97.24734497070312
patch: field > >
rank: 426
score: 96.4705322265625
patch: return > catch
rank: 426
score: 96.422119140625
patch: <= null Exception
rank: 426
score: 95.94417317708333
patch: public AWT
rank: 427
score: 99.12022047776442
patch: public out . write ( ch . char [ ] str )
rank: 427
score: 99.0239969889323
patch: private void out ( ch ) throws IO CaMeL Exception ;
rank: 427
score: 98.9783935546875
patch: out . write ( ch , 0 , i ) ;
rank: 427
score: 98.90825805664062
patch: out ( ) ;
rank: 427
score: 98.890087890625
patch: out . write ( in . ch ) ;
rank: 427
score: 97.24512481689453
patch: refresh > i
rank: 427
score: 96.4681640625
patch: > length ==
rank: 427
score: 96.42189025878906
patch: out Null State
rank: 427
score: 95.9415283203125
patch: private remove
rank: 427
score: 95.05091349283855
patch: public (
rank: 428
score: 99.02349384014423
patch: public void out ( ch ) throws IO CaMeL Exception { ;
rank: 428
score: 98.97796630859375
patch: out . write ( ch . get CaMeL End ) ;
rank: 428
score: 98.90775553385417
patch: out . write ( str ch ) ;
rank: 428
score: 98.89006890190973
patch: out . write ( out ) ) ;
rank: 428
score: 97.24469757080078
patch: reset > ]
rank: 428
score: 96.42082977294922
patch: public Error catch
rank: 428
score: 95.94054158528645
patch: public Class
rank: 428
score: 95.04982503255208
patch: void >
rank: 429
score: 99.11981670673077
patch: out . write ( ch . char [ ] ch ) {
rank: 429
score: 99.02298990885417
patch: protected out . write ( ) throws IO CaMeL Exception ;
rank: 429
score: 98.9071533203125
patch: boolean . . out . write ( ) ;
rank: 429
score: 98.89000244140625
patch: out . write ( ch , name ) ;
rank: 429
score: 97.24464416503906
patch: post > ]
rank: 429
score: 96.460205078125
patch: log > size
rank: 429
score: 96.42034149169922
patch: static null State
rank: 429
score: 95.93612670898438
patch: List public
rank: 429
score: 95.04922485351562
patch: public START
rank: 430
score: 99.022216796875
patch: out . write ( String value ) ;
rank: 430
score: 98.9768310546875
patch: public out . write ( int key ) ;
rank: 430
score: 98.90711466471355
patch: private out ( ) ;
rank: 430
score: 98.88966878255208
patch: public out write ( ] ch ) ;
rank: 430
score: 97.24369812011719
patch: get > Array
rank: 430
score: 95.93582153320312
patch: Utilities synchronized
rank: 431
score: 99.11924050071023
patch: public abstract boolean out . write ( ch ) ;
rank: 431
score: 99.02220662434895
patch: public out . write ( String str , ch ) ;
rank: 431
score: 98.9068270596591
patch: public static out . write ( int str ) ;
rank: 431
score: 97.24205780029297
patch: try > i
rank: 431
score: 96.45983276367187
patch: catch > Stack
rank: 431
score: 96.41896057128906
patch: private State arraycopy
rank: 431
score: 95.93351236979167
patch: public wrap
rank: 432
score: 99.11903599330357
patch: protected out . write ( long ch ) throws IO CaMeL Exception {
rank: 432
score: 98.97566731770833
patch: public static out . write ( ch . start ) ;
rank: 432
score: 98.88884887695312
patch: public out . write ( Throwable ch ) ;
rank: 432
score: 97.24136352539062
patch: Gui >
rank: 432
score: 96.41896057128906
patch: Sorted State State
rank: 432
score: 95.93143717447917
patch: public ensure
rank: 433
score: 99.11884014423077
patch: out . write . write ( ch ) throws IO CaMeL Exception
rank: 433
score: 99.0216573079427
patch: out . write ( ch , out . write ( )
rank: 433
score: 98.97555541992188
patch: public out . write ( String ch , ch ) ;
rank: 433
score: 98.90564643012152
patch: protected abstract out . write ( ) ;
rank: 433
score: 98.88845825195312
patch: public out . write ( ) { ) ;
rank: 433
score: 97.24036407470703
patch: configure > ]
rank: 433
score: 96.41678619384766
patch: static Error null
rank: 433
score: 95.93076578776042
patch: null ]
rank: 433
score: 95.04534912109375
patch: public ch
rank: 434
score: 99.11759730747768
patch: public final out . write ( ch . to CaMeL String ( )
rank: 434
score: 99.02159705528847
patch: public out . write ( String ch ) { return out ;
rank: 434
score: 98.97554524739583
patch: public out . write ( Character ) ;
rank: 434
score: 98.90563286675348
patch: void out ( ) ; null ) ;
rank: 434
score: 98.88680691189236
patch: public ) . write ( ch ) ;
rank: 434
score: 97.24005889892578
patch: properties > ]
rank: 434
score: 96.4535888671875
patch: catch > next
rank: 434
score: 96.41659545898438
patch: write State Exception
rank: 434
score: 95.92576090494792
patch: Util arraycopy
rank: 434
score: 95.03874969482422
patch: Collection
rank: 435
score: 99.1169100674716
patch: out . write ( ch . char ch ) ;
rank: 435
score: 99.02117450420673
patch: public out . write ( byte [ ] ch , int )
rank: 435
score: 98.97508655894886
patch: out . write ( Long [ ] ch ) ;
rank: 435
score: 98.90562744140625
patch: public out . write ( byte name ) ;
rank: 435
score: 98.88675944010417
patch: public out ( ) out ( ) {
rank: 435
score: 97.23921203613281
patch: handler > Index
rank: 435
score: 96.44913482666016
patch: case public
rank: 435
score: 96.41547393798828
patch: public Throwable null
rank: 435
score: 95.9244384765625
patch: public Byte
rank: 436
score: 99.11641148158482
patch: private out . write ( ch . to CaMeL String ( ) ;
rank: 436
score: 98.97450561523438
patch: public out . write ( int 1 ) ;
rank: 436
score: 98.88653564453125
patch: public out . write ( $STRING$ ) . ;
rank: 436
score: 97.23497009277344
patch: private in >
rank: 436
score: 96.44659423828125
patch: > replace >
rank: 436
score: 96.41470336914062
patch: Value State State
rank: 436
score: 95.92423502604167
patch: public false
rank: 436
score: 95.03750610351562
patch: name
rank: 437
score: 99.11635178786058
patch: void out . write ( ch ) throws IO CaMeL Exception {
rank: 437
score: 99.02069091796875
patch: out . write ( ( char ch ) ;
rank: 437
score: 98.905029296875
patch: void . write ( byte ch ) ;
rank: 437
score: 98.88570149739583
patch: public out . write ( ) { public
rank: 437
score: 97.233642578125
patch: private public for
rank: 437
score: 96.41352844238281
patch: public == Exception
rank: 437
score: 95.91916910807292
patch: Util append
rank: 437
score: 95.03664143880208
patch: Main >
rank: 438
score: 99.11622837611607
patch: protected out . write ( String str ) throws IO CaMeL Exception {
rank: 438
score: 99.02001342773437
patch: out . write ( ch , int length )
rank: 438
score: 98.90451882102273
patch: out . write ( byte [ ] command ) ;
rank: 438
score: 97.2326151529948
patch: Invalid >
rank: 438
score: 96.44168701171876
patch: log > Not
rank: 438
score: 96.41331481933594
patch: / State null
rank: 438
score: 95.91768391927083
patch: has arraycopy
rank: 439
score: 99.01975504557292
patch: public out . write ( ch . write ( ch )
rank: 439
score: 98.97357788085938
patch: public int out ( ch [ ] ) ;
rank: 439
score: 98.90441284179687
patch: void out ( int byte [ ] ) ;
rank: 439
score: 98.88469848632812
patch: out . write ( ) ) } ) ;
rank: 439
score: 96.41305541992188
patch: out null Not
rank: 439
score: 95.91748046875
patch: Util ]
rank: 439
score: 95.02951049804688
patch: matches >
rank: 440
score: 99.11582728794643
patch: public out . write ( ch . char ch [ ] ) {
rank: 440
score: 98.97313232421875
patch: out . write ( ch . format ) ;
rank: 440
score: 98.88466186523438
patch: out . write ( str ) throws ) ;
rank: 440
score: 97.23182678222656
patch: set > arraycopy
rank: 440
score: 96.43575439453124
patch: add > i catch
rank: 440
score: 96.41288757324219
patch: static Error State
rank: 440
score: 95.91707356770833
patch: public break
rank: 440
score: 95.02791341145833
patch: verify >
rank: 441
score: 99.11476643880208
patch: public out . write ( ch . trim ( ) ;
rank: 441
score: 99.01964393028847
patch: out . write ( ch , int ch , int size )
rank: 441
score: 98.90413411458333
patch: out . write ( byte i ) ;
rank: 441
score: 98.8839599609375
patch: out . write ( byte ) throws ) ;
rank: 441
score: 97.23089599609375
patch: change > ]
rank: 441
score: 96.433056640625
patch: hash > length >
rank: 441
score: 96.41229248046875
patch: / Null Exception
rank: 441
score: 95.91688028971355
patch: private starts
rank: 442
score: 99.01923162286931
patch: out . write ( ch , Integer ch ) ;
rank: 442
score: 98.97231038411458
patch: public out . write ( ch . write [ ) ;
rank: 442
score: 98.9040771484375
patch: void out . write ( System . ) ;
rank: 442
score: 97.23075866699219
patch: can > catch
rank: 442
score: 96.43162231445312
patch: setup > length >
rank: 442
score: 96.41212463378906
patch: out null err
rank: 442
score: 95.91184488932292
patch: public enable
rank: 442
score: 95.02079264322917
patch: execute >
rank: 443
score: 99.11412556966145
patch: out . write ( ch . key [ ] ) ;
rank: 443
score: 98.97223455255681
patch: public synchronized out . write ( int value ) ;
rank: 443
score: 98.90394422743056
patch: static void write ( String str ) ;
rank: 443
score: 98.8828857421875
patch: public out . write ( ] 1 ) ;
rank: 443
score: 97.23057047526042
patch: document >
rank: 443
score: 96.4308837890625
patch: log > finally
rank: 443
score: 96.41207122802734
patch: All null State
rank: 443
score: 95.0164082845052
patch: public short
rank: 444
score: 99.11376014122597
patch: public out . write ( ch . format . out ) {
rank: 444
score: 98.971923828125
patch: public out . write ( int double 1 ) ;
rank: 444
score: 98.90327962239583
patch: public boolean write ( int ch ) ;
rank: 444
score: 98.88277859157986
patch: out . write ( byte ch ) throws
rank: 444
score: 96.43004150390625
patch: update > length >
rank: 444
score: 96.41063690185547
patch: protected State err
rank: 444
score: 95.9090576171875
patch: Class catch
rank: 444
score: 95.01413981119792
patch: protected while
rank: 445
score: 99.11349923270089
patch: public out . write ( ch . get CaMeL Name ( ) {
rank: 445
score: 99.01898662860577
patch: public out . write ( ch . write ( ch . )
rank: 445
score: 98.90296088324652
patch: out . write ( String str ) {
rank: 445
score: 98.88161892361111
patch: public out . write ( Float ) ;
rank: 445
score: 97.22654724121094
patch: format > ]
rank: 445
score: 96.42659912109374
patch: append > Index
rank: 445
score: 96.41040802001953
patch: protected Exception Not
rank: 445
score: 95.90403238932292
patch: protected <UNK>
rank: 446
score: 99.11346435546875
patch: protected out . write ( ch . to CaMeL String ( ) {
rank: 446
score: 98.97149658203125
patch: public static out . write ( int char 1 ) ;
rank: 446
score: 98.90263536241319
patch: public void write ( int $STRING$ ) ;
rank: 446
score: 98.88151041666667
patch: public final out . write ( ) {
rank: 446
score: 97.22587585449219
patch: abstract add >
rank: 446
score: 96.40943908691406
patch: public $STRING$ Null
rank: 446
score: 95.90334065755208
patch: private log
rank: 446
score: 95.01075236002605
patch: write >
rank: 447
score: 98.97132364908855
patch: out . write ( ch . get CaMeL Id ) ;
rank: 447
score: 98.90214029947917
patch: public boolean out . write ( ) ;
rank: 447
score: 98.88077392578126
patch: out . write ( out ) throws ) ;
rank: 447
score: 97.22560628255208
patch: root >
rank: 447
score: 96.42597198486328
patch: > 0
rank: 447
score: 96.40796661376953
patch: out ch Stack
rank: 447
score: 95.00596110026042
patch: download >
rank: 448
score: 99.1125957782452
patch: public out . write ( ch . format . out ) ;
rank: 448
score: 99.0169208233173
patch: out . write ( ch , char [ ] value ) ;
rank: 448
score: 98.97128295898438
patch: out . write ( chars [ ] ) ;
rank: 448
score: 98.87994384765625
patch: out . write ( ch ( ) ;
rank: 448
score: 96.42576599121094
patch: > next
rank: 448
score: 96.40765380859375
patch: @ State null
rank: 448
score: 95.89547729492188
patch: private Thread
rank: 448
score: 95.00581868489583
patch: true >
rank: 449
score: 99.1124267578125
patch: public out . write ( out . write ( ch ) {
rank: 449
score: 99.0167236328125
patch: public void out ( ) { out ( ) ; }
rank: 449
score: 98.97127685546874
patch: public static out . write ( int ) ;
rank: 449
score: 98.90147816051136
patch: public static out . write ( double ch ) ;
rank: 449
score: 98.87978515625
patch: out . write ( ch ) } ) ;
rank: 449
score: 97.22369384765625
patch: Sorted >
rank: 449
score: 96.4052505493164
patch: private Null Error
rank: 449
score: 95.89436848958333
patch: protected Stack
rank: 450
score: 99.1123934659091
patch: public abstract out . write ( long ch ) ;
rank: 450
score: 98.97090657552083
patch: out . write ( ch . get CaMeL Name ) ;
rank: 450
score: 98.90138753255208
patch: public byte [ ] out ( ) ;
rank: 450
score: 97.22311401367188
patch: invoke > Index
rank: 450
score: 96.3998031616211
patch: public Runnable Not
rank: 450
score: 95.89398193359375
patch: length ]
rank: 450
score: 95.00396728515625
patch: trim >
rank: 451
score: 98.90128580729167
patch: void . write ( int ch ) ;
rank: 451
score: 97.22157287597656
patch: pop > ]
rank: 451
score: 96.42258911132812
patch: try > out >
rank: 451
score: 96.3990478515625
patch: @ Exception IO
rank: 451
score: 95.89337158203125
patch: public i
rank: 451
score: 94.9996337890625
patch: abstract
rank: 452
score: 99.1107177734375
patch: public out . close ( ) throws IO CaMeL Exception ;
rank: 452
score: 99.0161465731534
patch: out . write ( ch , ( ch ) ;
rank: 452
score: 98.96973673502605
patch: public static void out ( ) throws IO CaMeL Exception ;
rank: 452
score: 98.90044403076172
patch: void write . write ( ) ;
rank: 452
score: 98.87752956814236
patch: out . write ( -- ch ) ;
rank: 452
score: 97.22075653076172
patch: do > arraycopy
rank: 452
score: 96.41917114257812
patch: do > length >
rank: 452
score: 96.39785766601562
patch: VM null State
rank: 453
score: 99.11068289620536
patch: final out . write ( ch . get CaMeL Bytes ( ) )
rank: 453
score: 99.01612437855114
patch: public out . write ( ch , int value )
rank: 453
score: 98.96970621744792
patch: public out . write ( Object ) ;
rank: 453
score: 98.90011257595486
patch: void write ( final String ch ) ;
rank: 453
score: 98.87748413085937
patch: out . write ( ch , / ) ;
rank: 453
score: 97.22013346354167
patch: read >
rank: 453
score: 96.41824951171876
patch: initialize > length >
rank: 453
score: 96.39583587646484
patch: out State Out
rank: 453
score: 95.89269002278645
patch: abstract close
rank: 454
score: 99.11063058035714
patch: out . write ( out . to CaMeL String ( ) ) {
rank: 454
score: 99.0155029296875
patch: out . write ( ch , - $NUMBER$ ) ;
rank: 454
score: 98.89991344105114
patch: public static out . write ( byte ch ) ;
rank: 454
score: 98.87700805664062
patch: public out out . write ( byte ) ;
rank: 454
score: 96.41334228515625
patch: get > exit >
rank: 454
score: 96.39579772949219
patch: public Writer Exception
rank: 454
score: 95.89107259114583
patch: Argument <UNK>
rank: 454
score: 94.99403889973958
patch: process >
rank: 455
score: 99.11021205357143
patch: public out . write ( ch . get CaMeL Bytes ( ch )
rank: 455
score: 99.01537068684895
patch: public out . write ( ch , int write ) ;
rank: 455
score: 98.96959431966145
patch: public void out ( ch . write ( byte ) ;
rank: 455
score: 98.89952392578125
patch: public int write ( out ; null ) ;
rank: 455
score: 98.875927734375
patch: out . write ( ch , max ) ;
rank: 455
score: 97.21731567382812
patch: document > ]
rank: 455
score: 96.4124755859375
patch: > else >
rank: 455
score: 96.3935775756836
patch: public Number Exception
rank: 455
score: 95.88456217447917
patch: Class add
rank: 456
score: 99.11008126395089
patch: out . write ( out . get CaMeL Bytes ( ch ) ;
rank: 456
score: 99.01492074819711
patch: public void out ( ) { out ( ch ) ; }
rank: 456
score: 98.9690274325284
patch: String . [ ] . write ( ch ) ;
rank: 456
score: 98.89940534319196
patch: protected int out ( ) ;
rank: 456
score: 98.87575073242188
patch: out . write ( ch ) ; . .
rank: 456
score: 96.4124267578125
patch: initialize > arraycopy >
rank: 456
score: 96.39350891113281
patch: @ Runnable Exception
rank: 456
score: 95.8803202311198
patch: throw
rank: 456
score: 94.98848470052083
patch: public no
rank: 457
score: 99.0144930752841
patch: public out . write ( String ( ch ) ;
rank: 457
score: 98.96848366477273
patch: public out . write ( String int i ) ;
rank: 457
score: 98.89912923177083
patch: public void out ( int ch ) ;
rank: 457
score: 98.87564697265626
patch: public out . write ( ch ) ; }
rank: 457
score: 97.21393585205078
patch: dispose > ]
rank: 457
score: 96.39321899414062
patch: public Exception PI
rank: 457
score: 95.8777567545573
patch: Util log
rank: 457
score: 94.98429870605469
patch: clear
rank: 458
score: 99.01414137620192
patch: public out . write ( ch . char [ ] value )
rank: 458
score: 98.96810302734374
patch: out . write ( [ ] ch ) ;
rank: 458
score: 98.89840698242188
patch: public out . write ( String name ) {
rank: 458
score: 98.87430419921876
patch: out . write ( ch , key ) ;
rank: 458
score: 97.21341705322266
patch: constructor > ]
rank: 458
score: 96.41142578125
patch: add > else
rank: 458
score: 96.39310455322266
patch: out null IO
rank: 458
score: 94.98257446289062
patch: int
rank: 459
score: 99.10941256009616
patch: public write . write ( ch ) throws IO CaMeL Exception {
rank: 459
score: 98.96629028320312
patch: final out . write ( String ch ) ;
rank: 459
score: 98.89823404947917
patch: final void write ( String ch ) ;
rank: 459
score: 98.87394883897569
patch: public out ( ) out ( ) ;
rank: 459
score: 97.2105941772461
patch: open > i
rank: 459
score: 96.4080078125
patch: log > Stack
rank: 459
score: 96.3928451538086
patch: final Exception State
rank: 459
score: 95.8724136352539
patch: while
rank: 460
score: 99.10938371930804
patch: public out . write ( ch ) { return out . out ;
rank: 460
score: 99.01357797475961
patch: Object out ( ) throws Clone CaMeL Not CaMeL Supported CaMeL Exception
rank: 460
score: 98.89812360491071
patch: final void write ( ) ;
rank: 460
score: 98.87284545898437
patch: public boolean out ( ) out ( ) ;
rank: 460
score: 96.40743408203124
patch: invoke > catch >
rank: 460
score: 96.39283752441406
patch: out State Type
rank: 460
score: 95.86869303385417
patch: private try
rank: 461
score: 99.10894220525569
patch: out . write ( ch ) { return out ;
rank: 461
score: 98.96484375
patch: out . write ( String . . . ) ;
rank: 461
score: 98.89808959960938
patch: void out ( ) . write ( ) ;
rank: 461
score: 98.87232123480902
patch: ch . write ( ] ch ) ;
rank: 461
score: 97.20986938476562
patch: get > finally
rank: 461
score: 96.40728759765625
patch: log > equals
rank: 461
score: 96.39031982421875
patch: private Exception Out
rank: 461
score: 95.86495971679688
patch: Set void
rank: 461
score: 94.97328694661458
patch: protected Illegal
rank: 462
score: 99.10883037860577
patch: out . write ( ch ) throws IO CaMeL Exception ; ;
rank: 462
score: 99.01319469105114
patch: out . write ( String ch , int ) ;
rank: 462
score: 98.96431477864583
patch: out . write ( ch . get ( out ) ;
rank: 462
score: 98.89645724826389
patch: out . write ( short ch ) ;
rank: 462
score: 98.87199096679687
patch: public out . write ( char 1 ) ;
rank: 462
score: 97.20951080322266
patch: get > out
rank: 462
score: 96.40512084960938
patch: run > length >
rank: 462
score: 96.38980102539062
patch: private Runnable null
rank: 462
score: 95.8646748860677
patch: public split
rank: 463
score: 99.10850172776442
patch: protected out . write ( ch . get CaMeL Bytes ( )
rank: 463
score: 99.01296997070312
patch: public out . write ( ch ) throws ) { ;
rank: 463
score: 98.9628573330966
patch: public void out ( String char CaMeL Value ) ;
rank: 463
score: 98.896435546875
patch: public void out ( ) != null ) ;
rank: 463
score: 98.87163696289062
patch: out . write ( ch ) ; . ;
rank: 463
score: 97.20866394042969
patch: catalog > >
rank: 463
score: 96.40401611328124
patch: list > i
rank: 463
score: 96.38967895507812
patch: out Thread State
rank: 464
score: 99.01239013671875
patch: public out . write ( ) throws ) ;
rank: 464
score: 98.96234130859375
patch: out . write ( ch . get ) ;
rank: 464
score: 98.8963114420573
patch: int write ( ) ;
rank: 464
score: 98.87129516601563
patch: out . write ( ch . ( ) .
rank: 464
score: 97.20782470703125
patch: property > ]
rank: 464
score: 96.40342407226562
patch: out catch >
rank: 464
score: 96.38798522949219
patch: out null out
rank: 464
score: 95.86142985026042
patch: if
rank: 465
score: 99.01230690696023
patch: void out . write ( ch , ch ) ;
rank: 465
score: 98.96229553222656
patch: Object . write ( ch ) ;
rank: 465
score: 98.8951644897461
patch: private static void out ( ) ;
rank: 465
score: 98.87122260199652
patch: out out . write ( $STRING$ ) ;
rank: 465
score: 97.20442962646484
patch: insert > ]
rank: 465
score: 96.40183715820312
patch: > min >
rank: 465
score: 96.38386535644531
patch: public Null IO
rank: 465
score: 95.86140950520833
patch: public Type
rank: 465
score: 94.96836344401042
patch: protected delete
rank: 466
score: 99.0117938701923
patch: public out . write . write ( byte [ ] ch )
rank: 466
score: 98.894921875
patch: private static out . write ( ch ) ;
rank: 466
score: 97.20396423339844
patch: flush > i
rank: 466
score: 96.40078735351562
patch: finally > arraycopy
rank: 466
score: 96.383056640625
patch: private Error Stack
rank: 466
score: 95.86104329427083
patch: Class next
rank: 466
score: 94.96682739257812
patch: run
rank: 467
score: 99.0115234375
patch: public boolean out . write ( ch ) ;
rank: 467
score: 98.89487711588542
patch: public void write ( String value ) ;
rank: 467
score: 98.87052001953126
patch: public out ( Exception [ ] ch ) ;
rank: 467
score: 97.20237731933594
patch: synchronized put >
rank: 467
score: 96.39525756835937
patch: > hash >
rank: 467
score: 96.3794937133789
patch: private null Runnable
rank: 467
score: 95.85776774088542
patch: size :
rank: 468
score: 99.01134033203125
patch: synchronized out . write ( ch , ) ;
rank: 468
score: 98.960986328125
patch: out . write ( ch , $NUMBER$ ) ;
rank: 468
score: 98.8943359375
patch: void out . write ( ) ; null ;
rank: 468
score: 98.87022094726562
patch: public out . write ( T ch ) ;
rank: 468
score: 97.20235443115234
patch: exit > ]
rank: 468
score: 96.39523315429688
patch: next > i
rank: 468
score: 96.37893676757812
patch: out null arraycopy
rank: 468
score: 95.84794108072917
patch: Value out
rank: 468
score: 94.96239217122395
patch: begin >
rank: 469
score: 99.1074551669034
patch: out . write ( ch . clone ( ) {
rank: 469
score: 99.01132202148438
patch: public out . write ( ch , int value ) ;
rank: 469
score: 98.96053059895833
patch: void out ( ch . get ( ch ) ) ;
rank: 469
score: 98.89424896240234
patch: protected abstract void out ( ) ;
rank: 469
score: 98.86991577148437
patch: out . write ( ch ) ; } ;
rank: 469
score: 97.20213317871094
patch: async > i
rank: 469
score: 96.39368286132813
patch: stop > catch >
rank: 469
score: 96.37870788574219
patch: out null Runnable
rank: 469
score: 95.8472900390625
patch: Next else
rank: 470
score: 99.10721261160714
patch: protected out . write ( ch . to CaMeL String ( ) ;
rank: 470
score: 99.01109822591145
patch: public void out . write ( byte [ ] ch )
rank: 470
score: 98.96030680338542
patch: . . . write ( ch ) ;
rank: 470
score: 98.89419216579861
patch: protected void write ( String ch ) ;
rank: 470
score: 98.86967468261719
patch: out . write . ch ) ;
rank: 470
score: 97.20207214355469
patch: Names > >
rank: 470
score: 96.393603515625
patch: > append >
rank: 470
score: 96.37755584716797
patch: out $STRING$ null
rank: 470
score: 95.84724934895833
patch: private String
rank: 471
score: 99.10694298377403
patch: out write . write ( ch ) throws IO CaMeL Exception ;
rank: 471
score: 99.0110751065341
patch: . . out out . write ( ch ) ;
rank: 471
score: 98.96021728515625
patch: out . write ( value + 1 ) ;
rank: 471
score: 98.869384765625
patch: public out . write ( str ) { ;
rank: 471
score: 97.20191446940105
patch: main >
rank: 471
score: 96.392431640625
patch: assert > catch >
rank: 471
score: 96.37669372558594
patch: / catch Exception
rank: 471
score: 94.95457458496094
patch: do
rank: 472
score: 99.10682262073864
patch: public abstract int out . write ( ch ) ;
rank: 472
score: 98.89271240234375
patch: public out . write ( System . ) ;
rank: 472
score: 98.86936645507812
patch: public out . write ( ] $NUMBER$ ) ;
rank: 472
score: 97.20172882080078
patch: instance > ]
rank: 472
score: 96.39033203125
patch: load > i >
rank: 472
score: 96.37645467122395
patch: private null
rank: 472
score: 95.83896891276042
patch: public max
rank: 472
score: 94.9536641438802
patch: public decode
rank: 473
score: 99.10634068080357
patch: out . write ( ch , int start , int length ) ;
rank: 473
score: 99.01039817116477
patch: out . write ( String name , ch ) ;
rank: 473
score: 98.95932839133523
patch: public static void write ( ch [ ] ) ;
rank: 473
score: 98.892236328125
patch: public out . write ( ) ; null }
rank: 473
score: 98.8692138671875
patch: out . . . write ( ch ) ;
rank: 473
score: 96.38770751953125
patch: for catch > >
rank: 473
score: 96.37477111816406
patch: public Thread Error
rank: 473
score: 94.94549560546875
patch: public highest
rank: 474
score: 99.106201171875
patch: out . out . write . write ( ch ) ;
rank: 474
score: 99.01020951704545
patch: public out . write ( ch , byte ch )
rank: 474
score: 98.95880889892578
patch: out . write ( 0 ) ;
rank: 474
score: 98.869140625
patch: out . write ( ] ch ) ) ;
rank: 474
score: 97.19908905029297
patch: private format >
rank: 474
score: 96.38749389648437
patch: case > length
rank: 474
score: 96.37358093261719
patch: public : null
rank: 474
score: 95.8358154296875
patch: public hash
rank: 475
score: 99.01019897460938
patch: out . write ( ch , int count )
rank: 475
score: 98.95852661132812
patch: private out . write ( byte [ ] ch ) {
rank: 475
score: 97.19581604003906
patch: get > iterator
rank: 475
score: 96.38710327148438
patch: > i !=
rank: 475
score: 96.37318420410156
patch: public null Writer
rank: 475
score: 94.93900553385417
patch: public free
rank: 476
score: 99.10479181463069
patch: out out . write . write ( ch ) ;
rank: 476
score: 98.95849609375
patch: out . write ( str ) return ch ;
rank: 476
score: 98.89065890842014
patch: void out . write ( byte ) ;
rank: 476
score: 98.8678466796875
patch: out . write ( ch ch ch ) ;
rank: 476
score: 97.1941146850586
patch: parameters > ]
rank: 476
score: 96.38453369140625
patch: case > arraycopy
rank: 476
score: 96.37195587158203
patch: out Error null
rank: 476
score: 95.82847086588542
patch: public Unknown
rank: 477
score: 98.95769653320312
patch: public String [ ] out ( ) { ;
rank: 477
score: 98.89063856336806
patch: protected void write ( int ch ) ;
rank: 477
score: 98.86774359809027
patch: public ch . write ( $STRING$ ) ;
rank: 477
score: 97.19359588623047
patch: clear > Index
rank: 477
score: 96.38336791992188
patch: try > i catch
rank: 477
score: 96.37096405029297
patch: All State Stack
rank: 477
score: 95.827880859375
patch: Value else
rank: 478
score: 99.10455322265625
patch: public int out . write ( ch ) throws IO CaMeL Exception {
rank: 478
score: 99.00997585720486
patch: out . write ( char value ) ;
rank: 478
score: 98.9575927734375
patch: boolean . . . write ( ch ) ;
rank: 478
score: 98.89043634588069
patch: out . write ( byte [ ] Character ) ;
rank: 478
score: 97.19348907470703
patch: upload > ]
rank: 478
score: 96.36930847167969
patch: out Error Stack
rank: 478
score: 95.82608032226562
patch: Utilities set
rank: 479
score: 99.10416957310268
patch: public out . write ( ch . get CaMeL Length ( ) {
rank: 479
score: 99.00962136008523
patch: public out . write ( ch . char ) ;
rank: 479
score: 98.9570821126302
patch: public static out . write ( String int 1 ) ;
rank: 479
score: 98.89034016927083
patch: public int . . write ( ) ;
rank: 479
score: 97.19140625
patch: clone > Index
rank: 479
score: 96.38248901367187
patch: > i protected
rank: 479
score: 96.36869049072266
patch: public Override Exception
rank: 479
score: 95.82579040527344
patch: println
rank: 480
score: 98.95697631835938
patch: String out . write ( int 1 ) ;
rank: 480
score: 98.86687469482422
patch: out . write ( ch ; .
rank: 480
score: 97.19036865234375
patch: refresh > Index
rank: 480
score: 96.3675537109375
patch: @ Exception Illegal
rank: 480
score: 95.82460530598958
patch: private System
rank: 481
score: 99.10364786783855
patch: out . write ( ch . str [ ] ) ;
rank: 481
score: 99.0083719889323
patch: out . write ( ch , char [ ] chars )
rank: 481
score: 98.95682373046876
patch: public void write ( ch [ ] ) ;
rank: 481
score: 98.88865356445312
patch: void out ( ch . write ( ) ;
rank: 481
score: 97.18718719482422
patch: logger > ]
rank: 481
score: 96.38115234375
patch: validate > catch >
rank: 481
score: 96.36678314208984
patch: private State get
rank: 481
score: 94.92154947916667
patch: protected long
rank: 482
score: 99.10354379507211
patch: public out . write ( ch . get CaMeL Buffer ( )
rank: 482
score: 98.95611572265625
patch: out . write ( str , ch ) ;
rank: 482
score: 98.8885009765625
patch: protected static out . write ( ch ) ;
rank: 482
score: 98.86681518554687
patch: public out . write ( $STRING$ ) ; .
rank: 482
score: 97.18714904785156
patch: main > i
rank: 482
score: 96.36582946777344
patch: protected Exception Runnable
rank: 482
score: 94.92135620117188
patch: public EMPTY
rank: 483
score: 99.1034423828125
patch: public out . write ( ch [ ] )
rank: 483
score: 99.00834517045455
patch: out . write ( ) throws out . ) ;
rank: 483
score: 98.95538884943181
patch: public void out ( ch . clear ( ) ;
rank: 483
score: 98.88802083333333
patch: out . write ( char str ) ;
rank: 483
score: 98.86605495876736
patch: public write . write ( $STRING$ ) ;
rank: 483
score: 97.18709564208984
patch: protected private private
rank: 483
score: 96.375439453125
patch: if > out >
rank: 483
score: 96.36528015136719
patch: out State Not
rank: 483
score: 95.81772867838542
patch: public delegate
rank: 483
score: 94.9197489420573
patch: selected >
rank: 484
score: 99.10342843191964
patch: out . out . write ( ch ) throws IO CaMeL Exception {
rank: 484
score: 99.00787353515625
patch: public static out . write ( byte [ ] ch )
rank: 484
score: 98.954345703125
patch: out . write ( name + 1 ) ;
rank: 484
score: 98.88768853081598
patch: public void write ( final ch ) ;
rank: 484
score: 98.86538696289062
patch: out . write ( ch ) ; } .
rank: 484
score: 97.1851094563802
patch: Update >
rank: 484
score: 96.37495727539063
patch: public add > protected
rank: 484
score: 96.3630599975586
patch: public Number State
rank: 484
score: 95.81223551432292
patch: Value next
rank: 484
score: 94.9189961751302
patch: Open >
rank: 485
score: 99.10329367897727
patch: out . write ( ch . format ( ) ;
rank: 485
score: 99.00786884014423
patch: public void out . write ( byte [ ] ch ) ;
rank: 485
score: 98.95369262695313
patch: protected out . write ( String name ) ;
rank: 485
score: 98.8649658203125
patch: out . write ( byte . ch ) ;
rank: 485
score: 97.18507385253906
patch: notify > ]
rank: 485
score: 96.37235107421876
patch: > contains >
rank: 485
score: 96.3625259399414
patch: out null Illegal
rank: 485
score: 95.8118896484375
patch: while print
rank: 485
score: 94.91733805338542
patch: My >
rank: 486
score: 99.103125
patch: out . write ( ch . next ) ;
rank: 486
score: 98.95286976207386
patch: public void out ( ch . interrupt ( ) ;
rank: 486
score: 98.88610161675348
patch: public void write ( byte ch ) ;
rank: 486
score: 98.86380004882812
patch: public final out . write ( ch ) throws
rank: 486
score: 97.18220520019531
patch: log > Index
rank: 486
score: 96.36090850830078
patch: private Exception out
rank: 486
score: 94.9156494140625
patch: $NUMBER$
rank: 487
score: 98.88602023654514
patch: public void write ( int chars ) ;
rank: 487
score: 98.86137084960937
patch: out . write ( byte $NUMBER$ ] ) {
rank: 487
score: 97.18192291259766
patch: protected protected protected
rank: 487
score: 96.37230224609375
patch: return > Index
rank: 487
score: 96.36053466796875
patch: public XML Exception
rank: 487
score: 95.81109619140625
patch: values >
rank: 487
score: 94.91541544596355
patch: private delete
rank: 488
score: 98.95252990722656
patch: out . add ( ch ) ;
rank: 488
score: 98.88590494791667
patch: private static out . write ( ) ;
rank: 488
score: 98.86060926649306
patch: out . write ( ch ; ) ;
rank: 488
score: 97.18124389648438
patch: final set >
rank: 488
score: 96.36416625976562
patch: > Out
rank: 488
score: 96.3603515625
patch: public ( null
rank: 488
score: 95.81086730957031
patch: current
rank: 488
score: 94.91387939453125
patch: this
rank: 489
score: 99.10146077473958
patch: out . write . write . write ( ch ) ;
rank: 489
score: 99.0073575106534
patch: Object out . write ( ch , ch ) ;
rank: 489
score: 98.95250355113636
patch: public static out . write ( String key ) ;
rank: 489
score: 98.88470458984375
patch: void out ( out ; null ) ;
rank: 489
score: 98.85933430989583
patch: out . write ( char 1 ) ;
rank: 489
score: 97.1807632446289
patch: clone > i
rank: 489
score: 96.35980224609375
patch: out State Runnable
rank: 489
score: 96.35845947265625
patch: case
rank: 489
score: 95.8098856608073
patch: null i
rank: 490
score: 99.10143025716145
patch: out . write . write ( ch . ch ) ;
rank: 490
score: 98.9520263671875
patch: public out . write ( char [ ) ;
rank: 490
score: 98.88447709517045
patch: out . write ( byte [ ] String ) ;
rank: 490
score: 97.18047332763672
patch: for > arraycopy
rank: 490
score: 96.35968017578125
patch: public Error Writer
rank: 490
score: 95.8087158203125
patch: Value finally
rank: 490
score: 94.91038004557292
patch: public POSITIVE
rank: 491
score: 99.10124860491071
patch: public out . write ( Character ch ) throws IO CaMeL Exception ;
rank: 491
score: 98.95120239257812
patch: public out . write ( int [ ] ch ) {
rank: 491
score: 98.88429478236607
patch: public protected out ( ) ;
rank: 491
score: 98.85905626085069
patch: public out . write ( $NUMBER$ ) ;
rank: 491
score: 97.17774200439453
patch: try > Index
rank: 491
score: 96.35880279541016
patch: abstract null null
rank: 491
score: 96.32406616210938
patch: > count
rank: 491
score: 95.80799357096355
patch: abstract boolean
rank: 491
score: 94.90675862630208
patch: org >
rank: 492
score: 99.10069056919643
patch: out . write ( ch . out . write ( ) ) ;
rank: 492
score: 99.00569974459134
patch: public out . write ( String str ) throws ch . )
rank: 492
score: 98.95102945963542
patch: boolean . . write ( ch ) ;
rank: 492
score: 98.85860866970486
patch: out . write ( ch write ) ;
rank: 492
score: 97.17765808105469
patch: select > ]
rank: 492
score: 96.35787963867188
patch: private Exception run
rank: 492
score: 96.32212829589844
patch: > starts
rank: 492
score: 95.80604044596355
patch: abstract <UNK>
rank: 492
score: 94.90280151367188
patch: Logging >
rank: 493
score: 99.00553755326705
patch: public void out ( ) throws Interrupted CaMeL Exception ;
rank: 493
score: 98.9504150390625
patch: out . write ( ( int 1 ) ;
rank: 493
score: 98.88136121961806
patch: private synchronized out . write ( ) ;
rank: 493
score: 98.85803900824652
patch: public out . write ( start ) ;
rank: 493
score: 97.17666625976562
patch: delete > ]
rank: 493
score: 96.35750579833984
patch: public PI Exception
rank: 493
score: 95.80303955078125
patch: Error
rank: 494
score: 99.100341796875
patch: out . write . ( ch ) throws IO CaMeL Exception ;
rank: 494
score: 98.94939575195312
patch: public out . write ( Long ch ) ;
rank: 494
score: 98.88093872070313
patch: private abstract out . write ( out ) ;
rank: 494
score: 98.857421875
patch: protected out . write ( byte ) ;
rank: 494
score: 97.17404174804688
patch: Operation > >
rank: 494
score: 96.35739135742188
patch: / null Null
rank: 494
score: 96.29800415039062
patch: > while
rank: 494
score: 95.80283610026042
patch: List set
rank: 494
score: 94.89926147460938
patch: XML >
rank: 495
score: 99.10011509486607
patch: public out . write ( ch . get CaMeL Id ( ) {
rank: 495
score: 99.00523885091145
patch: public abstract out . write ( int ch ) ; ;
rank: 495
score: 98.94805353338069
patch: public out . write ( int byte 1 ) ;
rank: 495
score: 98.88065185546876
patch: public out . write ( int value ) {
rank: 495
score: 98.85685221354167
patch: public out . write ( out ) throws
rank: 495
score: 97.17399597167969
patch: validate > ]
rank: 495
score: 96.35701751708984
patch: public $STRING$ Runtime
rank: 495
score: 95.80115763346355
patch: } public
rank: 495
score: 94.89794921875
patch: map
rank: 496
score: 99.00474196213942
patch: out . write ( ) { write ( ch ) ; }
rank: 496
score: 98.94549560546875
patch: out . write ( ch . format ( ch ) ;
rank: 496
score: 98.88057454427083
patch: out . write ( double str ) ;
rank: 496
score: 98.85604248046874
patch: private out . write ( ch ) ) ;
rank: 496
score: 97.17245483398438
patch: alloc > ]
rank: 496
score: 96.35700988769531
patch: public Runnable Runnable
rank: 496
score: 96.28985595703125
patch: > offset
rank: 496
score: 95.79649861653645
patch: public Validate
rank: 497
score: 99.09969656808036
patch: out . write ( write ( ch ) throws IO CaMeL Exception {
rank: 497
score: 99.00410600142045
patch: public out . write ( byte [ ] value )
rank: 497
score: 98.88045501708984
patch: protected void out ( ch ) ;
rank: 497
score: 97.1715316772461
patch: add > while
rank: 497
score: 96.35643768310547
patch: public Error No
rank: 498
score: 99.0994873046875
patch: out . write ( ch ) { flush ( ) ;
rank: 498
score: 99.00404866536458
patch: public final out . write ( byte [ ] ch )
rank: 498
score: 98.88031005859375
patch: out . write ( byte ) ; null ;
rank: 498
score: 98.85468139648438
patch: public out . write ( Writer out ) ;
rank: 498
score: 97.1686782836914
patch: open > Index
rank: 498
score: 96.3563232421875
patch: All State null
rank: 498
score: 96.26667785644531
patch: get > null
rank: 498
score: 94.88931274414062
patch: new
rank: 499
score: 99.09868512834821
patch: out . write . ch . out . write ( ch ) {
rank: 499
score: 98.8802157315341
patch: public int . . out . write ( ) ;
rank: 499
score: 98.85430908203125
patch: out . write ( start ) ;
rank: 499
score: 97.16839599609375
patch: my >
rank: 499
score: 96.3559799194336
patch: public err Null
rank: 499
score: 95.7937723795573
patch: Value i
rank: 499
score: 94.88821411132812
patch: clone >
rank: 500
score: 99.003173828125
patch: out . write ( ch , ch . length )
rank: 500
score: 98.94378662109375
patch: public out . write ( byte [ ] out ) {
rank: 500
score: 98.8797607421875
patch: public private out ( ) { }
rank: 500
score: 98.85359700520833
patch: public out . write ( throw ) ;
rank: 500
score: 97.16486358642578
patch: println > length
rank: 500
score: 96.35324096679688
patch: public Exception do
rank: 500
score: 96.24259185791016
patch: case >
rank: 500
score: 95.7930908203125
patch: public sz
rank: 501
score: 99.09864298502605
patch: public out . write ( byte ch [ ] ) {
rank: 501
score: 99.00261896306819
patch: out . write ( ch , Short ch ) ;
rank: 501
score: 98.94375
patch: public out . write ( Object ch ) {
rank: 501
score: 98.87972683376736
patch: public void write ( int Character ) ;
rank: 501
score: 97.16474151611328
patch: acquire > ]
rank: 501
score: 96.35099792480469
patch: out null Thread
rank: 501
score: 96.23394012451172
patch: = public
rank: 501
score: 95.79005940755208
patch: private print
rank: 501
score: 94.88441975911458
patch: public swap
rank: 502
score: 99.09839739118304
patch: public void out . write ( ch ) throws IO CaMeL Exception {
rank: 502
score: 99.00240071614583
patch: public Object out ( ch ) throws IO CaMeL Exception ;
rank: 502
score: 98.85063171386719
patch: public out . write . out ;
rank: 502
score: 97.16403198242188
patch: flush > Index
rank: 502
score: 96.35088348388672
patch: final Error Exception
rank: 503
score: 99.09717735877403
patch: out . write . ch . out . write ( ) ;
rank: 503
score: 99.00234750600961
patch: out . write ( ch , out . read ( ) )
rank: 503
score: 98.87924533420139
patch: out . write ( float ch ) ;
rank: 503
score: 98.85040893554688
patch: out . write ( byte ch ( ) ;
rank: 503
score: 97.16360473632812
patch: conf > ]
rank: 503
score: 96.35087585449219
patch: out PI State
rank: 503
score: 95.78595733642578
patch: Message
rank: 503
score: 94.87516276041667
patch: protected if
rank: 504
score: 99.0968729654948
patch: private out . write ( ) throws IO CaMeL Exception {
rank: 504
score: 99.0023193359375
patch: public out . write write ( ch ) throws IO CaMeL Exception
rank: 504
score: 98.87908257378473
patch: out . write ( byte Character ) ;
rank: 504
score: 98.85005493164063
patch: public public out . write ( $STRING$ ) {
rank: 504
score: 97.16115315755208
patch: properties >
rank: 504
score: 95.7855224609375
patch: public concat
rank: 504
score: 94.87513224283855
patch: private long
rank: 505
score: 99.00185139973958
patch: public out . write ( ch , Object ch ) ;
rank: 505
score: 98.94202677408855
patch: public out . write ( String [ ] ch ) {
rank: 505
score: 98.8783846768466
patch: public synchronized out . write ( String ch ) {
rank: 505
score: 98.84952799479167
patch: out . write ( ch + ch ;
rank: 505
score: 97.15985107421875
patch: get > substring
rank: 505
score: 96.34873962402344
patch: out State run
rank: 505
score: 96.21891784667969
patch: > last
rank: 505
score: 95.77931722005208
patch: log >
rank: 505
score: 94.8714599609375
patch: protected Null
rank: 506
score: 99.0963846842448
patch: public abstract write . write . write ( ch ) ;
rank: 506
score: 99.00150553385417
patch: public String out ( ch ) throws IO CaMeL Exception ;
rank: 506
score: 98.87761773003473
patch: long out . write ( ch ) ;
rank: 506
score: 98.848388671875
patch: public out . write ( new ) ;
rank: 506
score: 96.34786987304688
patch: public State get
rank: 506
score: 95.77364095052083
patch: length >
rank: 506
score: 94.86962890625
patch: Mock >
rank: 507
score: 99.00143432617188
patch: public out . write ( ) throws Interrupted CaMeL Exception ;
rank: 507
score: 98.94132080078126
patch: public void out ( String ch ) { ;
rank: 507
score: 98.87730102539062
patch: out . write ( new byte ch ) ;
rank: 507
score: 97.15819295247395
patch: keys >
rank: 507
score: 96.3460922241211
patch: public Null Illegal
rank: 507
score: 94.86807250976562
patch: New >
rank: 508
score: 99.09499289772727
patch: public synchronized out . write ( ch [ ] )
rank: 508
score: 99.00133260091145
patch: out . write ( String ch , int ch ) ;
rank: 508
score: 98.87660910866477
patch: void out . write ( System . write ) ;
rank: 508
score: 97.15800476074219
patch: my > ]
rank: 508
score: 96.34562683105469
patch: protected Runnable null
rank: 508
score: 96.19669342041016
patch: > run
rank: 508
score: 95.76966349283855
patch: Debug print
rank: 509
score: 99.00023475060097
patch: out . write ( ch , byte [ ] chars ) ;
rank: 509
score: 98.94087727864583
patch: out . write ( ch . get ( str ) ;
rank: 509
score: 98.87646484375
patch: public void out . write ( byte [ ) ;
rank: 509
score: 98.84671359592014
patch: out . write ( new ch ) ;
rank: 509
score: 97.15744018554688
patch: remove > arraycopy
rank: 509
score: 96.34349822998047
patch: public Exception FALSE
rank: 509
score: 96.19477844238281
patch: > equals
rank: 509
score: 95.76883951822917
patch: length :
rank: 509
score: 94.85374959309895
patch: public USER
rank: 510
score: 99.09455702039931
patch: out . write . ( ch ) ;
rank: 510
score: 99.00016276041667
patch: out . write ( ch , byte [ ] out )
rank: 510
score: 98.93972778320312
patch: out . write ( ch , start ) ;
rank: 510
score: 98.8751220703125
patch: private void write ( ) ;
rank: 510
score: 98.84575059678819
patch: out . write ( ] ch ) throws
rank: 510
score: 97.15739440917969
patch: ctx > ]
rank: 510
score: 96.34329223632812
patch: static Exception Error
rank: 510
score: 96.1749496459961
patch: if > i
rank: 510
score: 95.7687479654948
patch: public instanceof
rank: 510
score: 94.85347493489583
patch: I >
rank: 511
score: 99.00014241536458
patch: public out . write ( ch , - 1 ) ;
rank: 511
score: 98.93965454101563
patch: public out . write ( int $NUMBER$ ) ;
rank: 511
score: 98.8748291015625
patch: public static void write ( int str ) ;
rank: 511
score: 98.84543185763889
patch: public out . write ( $STRING$ ) )
rank: 511
score: 97.15443420410156
patch: activate > Index
rank: 511
score: 96.34302520751953
patch: abstract Runnable Exception
rank: 511
score: 95.76621500651042
patch: null else
rank: 511
score: 94.84855143229167
patch: release >
rank: 512
score: 98.93922008167614
patch: public void out ( ch . write $NUMBER$ ) ;
rank: 512
score: 98.8746337890625
patch: protected out . write ( String str ) {
rank: 512
score: 98.845361328125
patch: public out . write ( ) { ; }
rank: 512
score: 97.1533432006836
patch: private private private
rank: 512
score: 96.34262084960938
patch: private Exception new
rank: 512
score: 95.7658182779948
patch: message >
rank: 512
score: 94.84834798177083
patch: show (
rank: 513
score: 98.99993341619319
patch: public out . write ( ch ) { ) ;
rank: 513
score: 98.93900146484376
patch: public static out write ( int value ) ;
rank: 513
score: 98.8743896484375
patch: private void out ( int i ) ;
rank: 513
score: 98.84527587890625
patch: write . out . write ( ) ;
rank: 513
score: 97.15304565429688
patch: begin > ]
rank: 513
score: 96.34170532226562
patch: private Exception Internal
rank: 513
score: 94.84464518229167
patch: gly >
rank: 514
score: 99.0932284268466
patch: out . write . write ( ch ) ; ;
rank: 514
score: 98.9998446377841
patch: out . write ( write ( int ch ) ;
rank: 514
score: 98.84465196397569
patch: public out . write ( this ) throws
rank: 514
score: 97.15277862548828
patch: can > arraycopy
rank: 514
score: 96.34083557128906
patch: public Character State
rank: 514
score: 96.15299987792969
patch: > finally
rank: 514
score: 95.76389567057292
patch: Class set
rank: 514
score: 94.84206136067708
patch: Nullable public
rank: 515
score: 99.09312947591145
patch: out . write ( out . to CaMeL String ( )
rank: 515
score: 98.99961344401042
patch: public out . write ( out . write ch ) ;
rank: 515
score: 98.93896484375
patch: int out . write ( int ch ) ;
rank: 515
score: 98.87356228298611
patch: private int out . write ( ) ;
rank: 515
score: 98.8438232421875
patch: public final out . write ( $STRING$ ) {
rank: 515
score: 97.15155029296875
patch: join > ]
rank: 515
score: 96.34040069580078
patch: Ruby Error Exception
rank: 515
score: 95.7633768717448
patch: List >
rank: 515
score: 94.83400472005208
patch: private Illegal
rank: 516
score: 99.09256998697917
patch: out . write ( ch . format . out ) ;
rank: 516
score: 98.93878728693181
patch: public static out . write ( ch . ) ;
rank: 516
score: 98.87331321022727
patch: public void write ( byte [ ] ch ) ;
rank: 516
score: 98.84312133789062
patch: public write ( ] [ ] ch ) ;
rank: 516
score: 97.15081024169922
patch: can > i
rank: 516
score: 96.34005737304688
patch: synchronized null Error
rank: 516
score: 95.76300048828125
patch: public resume
rank: 517
score: 99.0923563639323
patch: out . write ( ch . get CaMeL Bytes ( )
rank: 517
score: 98.99896240234375
patch: public out . write ( String ch ) { ) ;
rank: 517
score: 98.93795776367188
patch: public out . write ( Character ch ) ;
rank: 517
score: 98.84269409179687
patch: private out . write ( $STRING$ ) ) ;
rank: 517
score: 97.15058898925781
patch: end > ]
rank: 517
score: 96.33965301513672
patch: protected Null null
rank: 517
score: 96.1268081665039
patch: initialize > i
rank: 517
score: 95.7614237467448
patch: private if
rank: 518
score: 99.09175618489583
patch: out . write ( ch [ ] )
rank: 518
score: 98.99895770733173
patch: out . write ( ch , int ch , int count )
rank: 518
score: 98.9375
patch: public void out ( write ( out ) ;
rank: 518
score: 98.87293158637152
patch: write . write ( int ch ) ;
rank: 518
score: 97.14964294433594
patch: namespace > ]
rank: 518
score: 96.33914947509766
patch: public null public
rank: 518
score: 96.12481689453125
patch: > current
rank: 518
score: 95.76125081380208
patch: size ]
rank: 518
score: 94.82584635416667
patch: public switch
rank: 519
score: 99.08998801491477
patch: out . write . write ( ( ch ) ;
rank: 519
score: 98.99808756510417
patch: out . write ( ch , int ch , int )
rank: 519
score: 98.87193714488636
patch: public out . write ( ) ; null * ;
rank: 519
score: 98.8418212890625
patch: public final out . write ( ) { ;
rank: 519
score: 97.14926147460938
patch: force > ]
rank: 519
score: 96.33901977539062
patch: public Runnable catch
rank: 519
score: 95.76097615559895
patch: Of <UNK>
rank: 519
score: 94.82431030273438
patch: $STRING$
rank: 520
score: 99.08928888494319
patch: public abstract Object out . write ( ch ) ;
rank: 520
score: 98.99774639423077
patch: out . write ( byte [ ] ch ) ; ) ;
rank: 520
score: 98.93702697753906
patch: public void out ( write ) ;
rank: 520
score: 98.87152709960938
patch: void write ( int byte [ ] ) ;
rank: 520
score: 98.84166870117187
patch: public out . write ( byte [ ; ,
rank: 520
score: 97.14786529541016
patch: private public Null
rank: 520
score: 96.33870697021484
patch: private null err
rank: 520
score: 95.75840250651042
patch: close
rank: 520
score: 94.81423950195312
patch: report >
rank: 521
score: 99.0892333984375
patch: out . write ( ch . write ( $STRING$ ) ;
rank: 521
score: 98.99747721354167
patch: out . write ( ch 1 ) ;
rank: 521
score: 98.87133110894098
patch: int out . write ( out ) ;
rank: 521
score: 98.84098597935268
patch: out . write ( out ;
rank: 521
score: 97.1467056274414
patch: Data > ]
rank: 521
score: 96.33745574951172
patch: abstract Null Exception
rank: 521
score: 96.11253356933594
patch: clear > length
rank: 521
score: 94.81178792317708
patch: ruby >
rank: 522
score: 99.08913167317708
patch: out . write ( out . write ( $STRING$ ) ;
rank: 522
score: 98.996240234375
patch: out . write ( String ( ch ) ;
rank: 522
score: 98.9366122159091
patch: public abstract out . write ( int double ) ;
rank: 522
score: 98.87093680245536
patch: int . write ( ) ;
rank: 522
score: 97.14570617675781
patch: private protected synchronized
rank: 522
score: 96.33655548095703
patch: public Exception Enum
rank: 522
score: 96.10208129882812
patch: > start
rank: 522
score: 95.75417073567708
patch: Utilities run
rank: 523
score: 99.08792114257812
patch: protected abstract out . write . write ( ch ) ;
rank: 523
score: 98.99588012695312
patch: out . write ( ch ) ; else {
rank: 523
score: 98.93567572699652
patch: public void out ( String name ) ;
rank: 523
score: 98.87060546875
patch: public public void out ( ) ;
rank: 523
score: 98.83976236979167
patch: public out . write . write ) ;
rank: 523
score: 97.14411926269531
patch: drop > ]
rank: 523
score: 96.33349609375
patch: public Exception print
rank: 523
score: 96.0910873413086
patch: <UNK> <UNK>
rank: 523
score: 95.75309244791667
patch: private check
rank: 523
score: 94.8096415201823
patch: token >
rank: 524
score: 98.99574973366477
patch: public void out ( out ) throws IO CaMeL Exception
rank: 524
score: 98.9349698153409
patch: public void out ( ch . start ( ) ;
rank: 524
score: 98.87036895751953
patch: public protected void out ( ) ;
rank: 524
score: 98.83966064453125
patch: public out . write ( $STRING$ ) throws )
rank: 524
score: 97.14262390136719
patch: get > 0
rank: 524
score: 96.33071899414062
patch: public Exception Lookup
rank: 525
score: 99.08753458658855
patch: protected out . write ( ) throws IO CaMeL Exception {
rank: 525
score: 98.93385009765625
patch: public out . write ( int double ) ;
rank: 525
score: 98.87026977539062
patch: int . write ( ch ) ;
rank: 525
score: 98.8389892578125
patch: out . write ( byte write ) ;
rank: 525
score: 97.14102172851562
patch: protected public for
rank: 525
score: 96.33040618896484
patch: public Exception Process
rank: 525
score: 95.75154622395833
patch: get print
rank: 526
score: 98.93370971679687
patch: out . write ( 0 + ch ) ;
rank: 526
score: 98.86966552734376
patch: out . write ( byte [ i ) ;
rank: 526
score: 98.838525390625
patch: public out . write ( ) { ; ;
rank: 526
score: 96.33026123046875
patch: public Runnable IO
rank: 526
score: 96.07864379882812
patch: set > catch
rank: 526
score: 95.75038655598958
patch: <UNK>
rank: 526
score: 94.80076599121094
patch: SQL
rank: 527
score: 98.99398803710938
patch: out . write ( ch , ) ; ;
rank: 527
score: 98.9332784016927
patch: public static void write ( byte [ ] ch ) ;
rank: 527
score: 98.86930708451705
patch: int . . . out . write ( ) ;
rank: 527
score: 98.83829074435764
patch: out . write ( ) ) ) ;
rank: 527
score: 97.13934326171875
patch: clock > ]
rank: 527
score: 95.75014241536458
patch: static get
rank: 527
score: 94.79808553059895
patch: protected String
rank: 528
score: 99.08577104048295
patch: out . write . write . ( ch ) ;
rank: 528
score: 98.99380154079861
patch: public synchronized out . write ( ch )
rank: 528
score: 98.93282741970486
patch: out . write ( str ) ) ;
rank: 528
score: 97.13908386230469
patch: put > >
rank: 528
score: 96.32966613769531
patch: data State Exception
rank: 528
score: 95.7472432454427
patch: public yield
rank: 528
score: 94.79638671875
patch: public constant
rank: 529
score: 99.08482947716347
patch: out . write ( ch . to CaMeL Chars ( ) ;
rank: 529
score: 98.99347393329327
patch: public static out . write ( ) throws IO CaMeL Exception {
rank: 529
score: 98.93215942382812
patch: int out . write ( int value ) ;
rank: 529
score: 98.83741455078125
patch: public protected out . write ( $STRING$ ) ;
rank: 529
score: 97.13887786865234
patch: protected write >
rank: 529
score: 96.32614135742188
patch: synchronized Exception Stack
rank: 529
score: 94.79544067382812
patch: private Null
rank: 530
score: 99.08479447798295
patch: out . write ( ch . next ( ) ;
rank: 530
score: 98.99336381392045
patch: public out . write ( ch , int size )
rank: 530
score: 98.93165283203125
patch: private out . write ( int value ) ;
rank: 530
score: 98.86715359157986
patch: write . write . write ( ) ;
rank: 530
score: 97.138671875
patch: async > Index
rank: 530
score: 96.05601501464844
patch: set > null
rank: 530
score: 95.74571736653645
patch: public exec
rank: 531
score: 99.0846698467548
patch: public out . write ( ch . get CaMeL Message ( )
rank: 531
score: 98.99334247295673
patch: out . write ( ch , 0 , char ch ) ;
rank: 531
score: 98.86627752130681
patch: public void out ( ? $NUMBER$ : 0 ) ;
rank: 531
score: 98.83558959960938
patch: public out . write ( byte $NUMBER$ ] ;
rank: 531
score: 97.13775634765625
patch: private private protected
rank: 531
score: 96.32429504394531
patch: static Null Exception
rank: 531
score: 95.74501546223958
patch: Value catch
rank: 531
score: 94.7941182454427
patch: close >
rank: 532
score: 98.93027565696023
patch: public static out . write ( Object ch ) {
rank: 532
score: 98.86627197265625
patch: private out . write ( int ch ) {
rank: 532
score: 98.8343505859375
patch: write ( byte [ ] ch ) ;
rank: 532
score: 97.13069915771484
patch: expand > ]
rank: 532
score: 96.32406616210938
patch: @ err Exception
rank: 532
score: 96.05172729492188
patch: > Null
rank: 532
score: 95.74463907877605
patch: Util Writer
rank: 532
score: 94.79315185546875
patch: Dynamic >
rank: 533
score: 99.08424729567308
patch: out . write ( ch . get CaMeL Buffer ( ) {
rank: 533
score: 98.93014526367188
patch: out . write ( ch ) = ch ;
rank: 533
score: 98.86566162109375
patch: public void write ( final out ) ;
rank: 533
score: 98.83407931857639
patch: out . write ( ch ) ; )
rank: 533
score: 97.1302261352539
patch: handle > >
rank: 533
score: 96.32344055175781
patch: public default Exception
rank: 533
score: 95.74441528320312
patch: System else
rank: 533
score: 94.78488159179688
patch: throws
rank: 534
score: 99.08364035866477
patch: public final out . write ( ch [ ] )
rank: 534
score: 98.992919921875
patch: out . write ( ch , length ) ;
rank: 534
score: 98.86543782552083
patch: public void out ( String str ) ;
rank: 534
score: 98.83336639404297
patch: out . write ( 1 ) ;
rank: 534
score: 97.12725067138672
patch: bind > ]
rank: 534
score: 96.31966145833333
patch: final Exception
rank: 534
score: 95.74439493815105
patch: Model >
rank: 534
score: 94.77852376302083
patch: $STRING$ >
rank: 535
score: 99.08353678385417
patch: public out . write ( ch . trim ( ) {
rank: 535
score: 98.99265358664773
patch: public abstract out . write ( Byte ch ) ;
rank: 535
score: 98.86518012152777
patch: XML . Runtime . write ( ) ;
rank: 535
score: 96.3084716796875
patch: protected Error
rank: 535
score: 95.74388631184895
patch: init
rank: 536
score: 98.99224090576172
patch: out . write ( out . ;
rank: 536
score: 98.9274658203125
patch: private out . write ( Object ch ) ;
rank: 536
score: 98.86509011008523
patch: public final out . write ( String ch ) {
rank: 536
score: 98.83320448133681
patch: write . write ( $STRING$ ) ) ;
rank: 536
score: 97.12239074707031
patch: assert > >
rank: 536
score: 96.02920532226562
patch: > Char
rank: 536
score: 95.74261474609375
patch: private double
rank: 536
score: 94.77491760253906
patch: org
rank: 537
score: 99.08278245192308
patch: private out . write ( ch . get CaMeL Bytes ( )
rank: 537
score: 98.99119984019886
patch: void out . write ( ch [ ] ) ;
rank: 537
score: 98.863037109375
patch: void . write ( int str ) ;
rank: 537
score: 98.83168029785156
patch: out . write ( ( ) ;
rank: 537
score: 97.12184143066406
patch: Exec > catch
rank: 537
score: 96.21292114257812
patch: protected null
rank: 537
score: 96.02815246582031
patch: != i
rank: 537
score: 95.74053955078125
patch: Util <UNK>
rank: 538
score: 99.08114624023438
patch: out out . write ( ch . trim ( ) ;
rank: 538
score: 98.98973499644886
patch: protected void out ( ) throws IO CaMeL Exception ;
rank: 538
score: 98.9262451171875
patch: String . [ ] write ( out ) ;
rank: 538
score: 98.86301491477273
patch: out . write ( byte [ ) ; null ;
rank: 538
score: 98.83148871527777
patch: public out . write . out ) ;
rank: 538
score: 96.02742004394531
patch: try > length
rank: 538
score: 95.73956298828125
patch: synchronized <UNK>
rank: 539
score: 99.08000044389205
patch: out . write ( ch . trim ( ) {
rank: 539
score: 98.9261474609375
patch: public abstract out . write ( byte [ ) ;
rank: 539
score: 98.8623779296875
patch: out . write ( byte [ ) ) ;
rank: 539
score: 98.83061218261719
patch: out . write ( count ) ;
rank: 539
score: 97.1209716796875
patch: invoke > i
rank: 539
score: 96.1934814453125
patch: private State
rank: 539
score: 96.02709197998047
patch: != Index
rank: 539
score: 95.73911539713542
patch: synchronized set
rank: 539
score: 94.76627604166667
patch: from >
rank: 540
score: 99.07989032451923
patch: public out . write ( ch . get CaMeL Value ( )
rank: 540
score: 98.9891845703125
patch: abstract void out . write ( ch ) ;
rank: 540
score: 98.92557373046876
patch: public out . write ( Object name ) ;
rank: 540
score: 98.86235894097223
patch: final out . write ( value ) ;
rank: 540
score: 98.82975938585069
patch: out . write ( Float out ) ;
rank: 540
score: 97.11985778808594
patch: initialize > ]
rank: 540
score: 94.76509602864583
patch: * {
rank: 541
score: 99.07888559194711
patch: public out . write ( ch . format . ch ) {
rank: 541
score: 98.9890645345052
patch: public out . write ( String ( String str ) ;
rank: 541
score: 98.92451307508681
patch: final out . write ( name ) ;
rank: 541
score: 98.86228434244792
patch: private int write ( int ch ) ;
rank: 541
score: 98.828955078125
patch: public out . write ( out ) } ;
rank: 541
score: 97.11798858642578
patch: can > Index
rank: 541
score: 96.1526590983073
patch: out Exception
rank: 541
score: 96.0087890625
patch: insert > i
rank: 541
score: 95.73769124348958
patch: private equals
rank: 542
score: 99.07855779474431
patch: public out . write ( byte ch [ ] )
rank: 542
score: 98.86196560329861
patch: private void write . write ( ) ;
rank: 542
score: 97.11421966552734
patch: protected next >
rank: 542
score: 95.73682657877605
patch: - else
rank: 543
score: 98.9884033203125
patch: out . write ( byte [ ] ch , int )
rank: 543
score: 98.92360432942708
patch: protected out . write ( byte [ ] ch ) {
rank: 543
score: 98.86160278320312
patch: void out . write ( long str ) ;
rank: 543
score: 98.82596435546876
patch: out . write ( ch ) ; out ;
rank: 543
score: 96.12747192382812
patch: abstract Exception
rank: 543
score: 96.0008773803711
patch: public put >
rank: 543
score: 95.73470306396484
patch: Of
rank: 544
score: 99.07785866477273
patch: out . write ( ch . flush ( ) ;
rank: 544
score: 98.9882303873698
patch: public out . write ( ch ) throws ch ) ;
rank: 544
score: 98.92322887073864
patch: public void out ( Object [ ] ch ) ;
rank: 544
score: 98.86125352647569
patch: private void write ( String str ) ;
rank: 544
score: 98.82484741210938
patch: public out . write ( $STRING$ ) throws ;
rank: 544
score: 97.11268615722656
patch: contents > i
rank: 544
score: 96.12115478515625
patch: / State
rank: 544
score: 95.99698638916016
patch: set > length
rank: 544
score: 95.73043823242188
patch: ? print
rank: 544
score: 94.74310302734375
patch: public case
rank: 545
score: 98.9882100423177
patch: public out . write ( ) throws Interrupted CaMeL Exception {
rank: 545
score: 98.92255859375
patch: out . write ( str , 1 ) ;
rank: 545
score: 98.86106654575893
patch: private boolean out ( ) ;
rank: 545
score: 98.82482147216797
patch: public write . write ( ) ;
rank: 545
score: 97.10911560058594
patch: accept > ]
rank: 545
score: 96.1202901204427
patch: out Runtime
rank: 545
score: 95.73019409179688
patch: public sub
rank: 546
score: 99.07704856178977
patch: public abstract boolean write . write ( ch ) ;
rank: 546
score: 98.98801491477273
patch: out . write ( ch , 0 ch ) ;
rank: 546
score: 98.86085815429688
patch: public out . write ( byte ( ) ;
rank: 546
score: 98.82423095703125
patch: ch . write ( ch . ( ) ;
rank: 546
score: 97.10902404785156
patch: build > ]
rank: 546
score: 95.72769165039062
patch: err >
rank: 546
score: 94.7340799967448
patch: Messaging >
rank: 547
score: 98.9875155362216
patch: public out . write ( write ( ch ) ;
rank: 547
score: 98.92173073508523
patch: out . write ( ch . read ( ) ;
rank: 547
score: 98.86032443576389
patch: void out ( ) != null ) ;
rank: 547
score: 98.82353973388672
patch: public out . write . ch ;
rank: 547
score: 97.10897827148438
patch: port > ]
rank: 547
score: 96.0900166829427
patch: void Exception
rank: 547
score: 95.72486368815105
patch: Utilities add
rank: 547
score: 94.73382568359375
patch: protected for
rank: 548
score: 98.98678588867188
patch: out . write ( String str ) throws IO CaMeL Exception
rank: 548
score: 98.92129177517361
patch: public static void out ( ) { ;
rank: 548
score: 98.85961303710937
patch: abstract . write . write . write ) ;
rank: 548
score: 98.8219970703125
patch: public out ( ) out ( ) { ;
rank: 548
score: 97.10887145996094
patch: write > Index
rank: 548
score: 95.72230021158855
patch: public chars
rank: 548
score: 94.72997029622395
patch: cur >
rank: 549
score: 99.07494178185097
patch: public void write ( int ch ) throws IO CaMeL Exception ;
rank: 549
score: 98.921142578125
patch: public void out ( byte [ ] out ) ;
rank: 549
score: 98.85915798611111
patch: void out ( || out ( ) ;
rank: 549
score: 98.82115342881944
patch: out . write ( ch . write ;
rank: 549
score: 97.10882568359375
patch: Later > catch
rank: 549
score: 96.06441243489583
patch: / Exception
rank: 549
score: 95.98198699951172
patch: stop > i
rank: 549
score: 95.72129313151042
patch: public default
rank: 549
score: 94.72806803385417
patch: protected IO
rank: 550
score: 99.0739237467448
patch: protected out . write ( ch ) { return out ;
rank: 550
score: 98.98654174804688
patch: public out . write ( ch ) { ) ; ;
rank: 550
score: 98.92031860351562
patch: public void out ( ch . flush ( ) { ;
rank: 550
score: 98.820361328125
patch: public out . write ( this ) { ;
rank: 550
score: 97.1083984375
patch: push > i
rank: 550
score: 95.71924845377605
patch: Manager >
rank: 550
score: 94.72782389322917
patch: ps >
rank: 551
score: 99.0733309659091
patch: public synchronized out . write ( long ch ) ;
rank: 551
score: 98.98619384765625
patch: out . write ( ( ch , ) ;
rank: 551
score: 98.91983032226562
patch: out . write ( Character ) ;
rank: 551
score: 98.85898166232639
patch: public abstract void out ( out ) ;
rank: 551
score: 98.82006157769098
patch: public out . write ( in ) ;
rank: 551
score: 95.98065185546875
patch: clear > catch
rank: 551
score: 95.71872965494792
patch: private do
rank: 551
score: 94.725830078125
patch: public not
rank: 552
score: 98.985986328125
patch: abstract out . write ( ch , ) ;
rank: 552
score: 98.85846625434027
patch: out . write ( byte length ) ;
rank: 552
score: 98.81907958984375
patch: out . write ( ch ) . } ;
rank: 552
score: 97.10794067382812
patch: commit > ]
rank: 552
score: 95.718017578125
patch: public type
rank: 553
score: 99.07277610085227
patch: out . flush ( ) throws IO CaMeL Exception ;
rank: 553
score: 98.98560680042614
patch: out . write ( int ch ) throws ch ;
rank: 553
score: 98.91961115056819
patch: public static void out ( ch . write ) ;
rank: 553
score: 98.8575439453125
patch: synchronized out . write ( str ) ;
rank: 553
score: 97.1070556640625
patch: message > ]
rank: 553
score: 95.97898356119792
patch: protected State
rank: 553
score: 95.9784927368164
patch: instanceof public
rank: 553
score: 95.7179463704427
patch: List add
rank: 553
score: 94.72315470377605
patch: db >
rank: 554
score: 99.0720684344952
patch: . . . * / out . write ( ch ) {
rank: 554
score: 98.85747612847223
patch: out . write ( byte * ) ;
rank: 554
score: 97.1043930053711
patch: map > ]
rank: 554
score: 95.96439615885417
patch: synchronized null
rank: 554
score: 95.71688842773438
patch: get arraycopy
rank: 555
score: 99.07120455228366
patch: out . write ( ch . get CaMeL Bytes ( ) {
rank: 555
score: 98.98531494140624
patch: out . write ( char [ ] ) ;
rank: 555
score: 98.85702175564236
patch: write . write ( byte str ) ;
rank: 555
score: 98.81830444335938
patch: public out . write ( $STRING$ ) ) {
rank: 555
score: 97.10404968261719
patch: wait > i
rank: 555
score: 95.97489166259766
patch: > Number
rank: 556
score: 99.07118918678977
patch: public abstract final out . write ( ch ) ;
rank: 556
score: 98.9837646484375
patch: public String out ( ) { return ch ; }
rank: 556
score: 98.9189208984375
patch: out . write ( str , 0 ) ;
rank: 556
score: 98.85694122314453
patch: public int out ( ) { }
rank: 556
score: 98.81822374131944
patch: out . write ( write out ) ;
rank: 556
score: 97.10193634033203
patch: execute > >
rank: 556
score: 95.97478485107422
patch: load > i
rank: 556
score: 95.9538065592448
patch: void Runtime
rank: 556
score: 95.71500651041667
patch: public Locale
rank: 556
score: 94.70906575520833
patch: Empty >
rank: 557
score: 99.07108931107955
patch: protected out . write ( ch [ ] ) {
rank: 557
score: 98.98272705078125
patch: public out . write ( ch , int )
rank: 557
score: 98.9185458096591
patch: public out . write ( String ch ) { ;
rank: 557
score: 98.81795247395833
patch: public out ) write ( $STRING$ ) ;
rank: 557
score: 97.10095977783203
patch: sort > ]
rank: 557
score: 95.96821594238281
patch: != else
rank: 557
score: 95.9506123860677
patch: out out
rank: 557
score: 95.71453857421875
patch: public Character
rank: 558
score: 99.0706035907452
patch: private out . write ( ch . to CaMeL String ( )
rank: 558
score: 98.91776899857955
patch: public out . write ( char [ ] ) ;
rank: 558
score: 98.856201171875
patch: public abstract void write ( final String ch ) ;
rank: 558
score: 98.81756591796875
patch: write ( ] ch ) throws ) ;
rank: 558
score: 97.10076904296875
patch: reset > Index
rank: 558
score: 95.93961588541667
patch: synchronized State
rank: 558
score: 95.7142842610677
patch: method >
rank: 558
score: 94.70547485351562
patch: [
rank: 559
score: 99.07035319010417
patch: out . write ( ch . intern ( ) ) ;
rank: 559
score: 98.98239474826389
patch: public out . write ( char ch )
rank: 559
score: 98.91726684570312
patch: public String . [ ] out ( ) ;
rank: 559
score: 98.85507202148438
patch: public void write . write ( out ) ;
rank: 559
score: 98.81743028428819
patch: public void out ( Exception ch ) {
rank: 559
score: 97.10073852539062
patch: main > Index
rank: 559
score: 95.93376922607422
patch: final
rank: 559
score: 95.71293131510417
patch: private next
rank: 559
score: 94.69775390625
patch: Active >
rank: 560
score: 98.91666666666667
patch: public static out write ( byte [ ] ch ) ;
rank: 560
score: 98.85486518012152
patch: final void write ( int ch ) ;
rank: 560
score: 97.10038757324219
patch: parameter > ]
rank: 560
score: 95.9532241821289
patch: get > case
rank: 560
score: 95.71254475911458
patch: Manager <UNK>
rank: 560
score: 94.6893819173177
patch: protected Array
rank: 561
score: 99.06982421875
patch: private synchronized out . write ( ch [ ] ) ;
rank: 561
score: 98.91580200195312
patch: String . [ ] out ( out ) ;
rank: 561
score: 98.81627061631944
patch: out . write ( ] $NUMBER$ ) ;
rank: 561
score: 97.10020446777344
patch: cache > ]
rank: 562
score: 99.06951434795673
patch: public out . write ( ch . get CaMeL Length ( )
rank: 562
score: 98.98188920454545
patch: public out . write ( ch , int i )
rank: 562
score: 98.85408020019531
patch: public int out ( ch ) ;
rank: 562
score: 98.81475830078125
patch: out . write ( byte ch ) .
rank: 562
score: 97.09543863932292
patch: async >
rank: 562
score: 95.95100402832031
patch: > contains
rank: 562
score: 95.9177754720052
patch: @ Error
rank: 562
score: 95.71055094401042
patch: null Exception
rank: 562
score: 94.6697998046875
patch: result
rank: 563
score: 99.06923606178977
patch: out out . write ( ch + $STRING$ ) ;
rank: 563
score: 98.8538818359375
patch: void write ( int byte [ ] out ) ;
rank: 563
score: 98.81465657552083
patch: out . write ( Double ch ) ;
rank: 563
score: 97.09512329101562
patch: update > arraycopy
rank: 563
score: 95.94959259033203
patch: add > null
rank: 563
score: 95.9174296061198
patch: public :
rank: 563
score: 95.70867919921875
patch: public PI
rank: 563
score: 94.66964721679688
patch: encoding >
rank: 564
score: 99.06881713867188
patch: public out ( ) { this . out ( ) ;
rank: 564
score: 98.97971413352273
patch: out . write ( char out [ ] ) ;
rank: 564
score: 98.91344604492187
patch: synchronized out . write ( String ch ) ;
rank: 564
score: 98.85369110107422
patch: public String write ( ch ) ;
rank: 564
score: 97.09388732910156
patch: date > ]
rank: 564
score: 95.94638061523438
patch: call > catch
rank: 564
score: 95.89947509765625
patch: out Type
rank: 564
score: 95.707763671875
patch: get next
rank: 565
score: 99.06870524088542
patch: out . write ( out ) throws IO CaMeL Exception ;
rank: 565
score: 98.9795809659091
patch: public abstract out . write write ( ch ) ;
rank: 565
score: 98.91296997070313
patch: out . write ( name , ch ) ;
rank: 565
score: 98.85346013849431
patch: public out . write ( String byte $NUMBER$ ) ;
rank: 565
score: 98.81411743164062
patch: public out . write ( out . out ;
rank: 565
score: 97.0933609008789
patch: priority > ]
rank: 565
score: 95.94071960449219
patch: return >
rank: 565
score: 94.66517130533855
patch: output >
rank: 566
score: 99.0685565655048
patch: public out . write ( ch . char ch [ ] )
rank: 566
score: 98.9794034090909
patch: public out . write ( ch . out . )
rank: 566
score: 98.85324435763889
patch: abstract out . write ( str ) ;
rank: 566
score: 97.0901387532552
patch: on >
rank: 566
score: 95.88709513346355
patch: synchronized Error
rank: 566
score: 94.66293334960938
patch: Integer
rank: 567
score: 99.06763634314903
patch: public out . write ( ch . write ( chars ) {
rank: 567
score: 98.91139914772727
patch: public static out . write ( ch [ ) ;
rank: 567
score: 98.85261366102431
patch: out . write ( int byte ) ;
rank: 567
score: 98.81405639648438
patch: public out ( ) throws IO CaMeL Exception ;
rank: 567
score: 97.08985137939453
patch: get > Stack
rank: 567
score: 95.70680745442708
patch: protected Runnable
rank: 567
score: 94.65775553385417
patch: public NULL
rank: 568
score: 98.97838677300348
patch: static out . write ( ch ) ;
rank: 568
score: 98.91085815429688
patch: private void out ( ) { ;
rank: 568
score: 98.85256618923611
patch: public void write ( int out ) ;
rank: 568
score: 98.81402587890625
patch: public public out . write ( this ) ;
rank: 568
score: 95.92143249511719
patch: > }
rank: 568
score: 95.87418619791667
patch: static Error
rank: 568
score: 95.70315551757812
patch: private Array
rank: 568
score: 94.6549784342448
patch: SQL >
rank: 569
score: 99.0672607421875
patch: public out . write ( ch + $STRING$ ) ;
rank: 569
score: 98.97809392755681
patch: public out . write ( Byte ( ch ) ;
rank: 569
score: 98.85197310014205
patch: private static out . write ( String ch ) {
rank: 569
score: 98.81376139322917
patch: out . write ( Writer ch ) ;
rank: 569
score: 97.08740234375
patch: location > ]
rank: 569
score: 95.91983032226562
patch: > Not
rank: 569
score: 95.86171468098958
patch: out Error
rank: 569
score: 95.70137532552083
patch: Out
rank: 570
score: 99.06704477163461
patch: public out . write ( ch . get CaMeL Id ( )
rank: 570
score: 98.97808837890625
patch: out . write ( String ) ;
rank: 570
score: 98.90986772017045
patch: public static out . write ( char [ ) ;
rank: 570
score: 98.851416015625
patch: out . write ( byte * ] ) ;
rank: 570
score: 98.81353759765625
patch: public out . write ( byte ; ) {
rank: 570
score: 97.08734130859375
patch: activate > i
rank: 570
score: 95.91830444335938
patch: > MAX
rank: 570
score: 95.70083618164062
patch: To
rank: 570
score: 94.6541239420573
patch: * throws
rank: 571
score: 99.06672807173295
patch: public int out ( ) throws IO CaMeL Exception {
rank: 571
score: 98.85113525390625
patch: public protected out . write ( ) ;
rank: 571
score: 98.81210666232639
patch: public int write ( ] ch ) ;
rank: 571
score: 97.08621978759766
patch: port > i
rank: 571
score: 95.91826629638672
patch: = protected
rank: 571
score: 95.85872395833333
patch: public arraycopy
rank: 572
score: 99.06665978064903
patch: out . write ( byte ch ) throws IO CaMeL Exception {
rank: 572
score: 98.97760564630681
patch: out . write ( ch , boolean flush ) ;
rank: 572
score: 98.85087446732955
patch: public void write . write ( ) ; null ;
rank: 572
score: 98.80965750558036
patch: out . write ( ) {
rank: 572
score: 95.91809844970703
patch: Sorted catch >
rank: 572
score: 95.69784545898438
patch: public convert
rank: 572
score: 94.64977010091145
patch: Under >
rank: 573
score: 99.06665978064903
patch: out . write . ch . out . write ( ch )
rank: 573
score: 98.85057576497395
patch: boolean write ( ) ;
rank: 573
score: 98.80854797363281
patch: public out ( Exception out ) ;
rank: 573
score: 97.08281707763672
patch: f > ]
rank: 573
score: 95.817626953125
patch: out err
rank: 573
score: 95.69505818684895
patch: public TRUE
rank: 573
score: 94.64269002278645
patch: url >
rank: 574
score: 98.9770174893466
patch: out . write ( String str , ch ) ;
rank: 574
score: 98.90959337022569
patch: public void out ( String out ) ;
rank: 574
score: 98.85044352213542
patch: public void write ( boolean str ) ;
rank: 574
score: 98.80791558159723
patch: . out . write ( $STRING$ ) ;
rank: 574
score: 97.08265686035156
patch: enable > ]
rank: 574
score: 95.90872192382812
patch: > ++
rank: 574
score: 95.8062744140625
patch: out arraycopy
rank: 574
score: 95.69387817382812
patch: System <UNK>
rank: 574
score: 94.64107259114583
patch: public Lookup
rank: 575
score: 99.06559244791667
patch: out . write ( byte ) throws IO CaMeL Exception {
rank: 575
score: 98.97539728338069
patch: public out . write ( byte [ ] chars )
rank: 575
score: 98.90856323242187
patch: out . write ( ch . class ) ;
rank: 575
score: 98.84941948784723
patch: public String write ( String str ) ;
rank: 575
score: 98.80768585205078
patch: write . write ( out ) ;
rank: 575
score: 95.90357971191406
patch: > add
rank: 575
score: 95.80592854817708
patch: @ null
rank: 575
score: 95.69358317057292
patch: public join
rank: 575
score: 94.64090983072917
patch: public Iterable
rank: 576
score: 99.06528727213542
patch: public void write ( ch ) throws IO CaMeL Exception {
rank: 576
score: 98.97527521306819
patch: public out . write ( String ( int ch )
rank: 576
score: 98.90720825195312
patch: . . . . write ( ch ) ;
rank: 576
score: 98.84920247395833
patch: out . write ( Boolean str ) ;
rank: 576
score: 98.80751953125
patch: public out . write ( $STRING$ ) ; }
rank: 576
score: 97.08128865559895
patch: insert >
rank: 576
score: 95.90156555175781
patch: instanceof Stack
rank: 576
score: 95.79521942138672
patch: static
rank: 577
score: 98.84904174804687
patch: public out . write ( long ch ) {
rank: 577
score: 98.80740017361111
patch: out . write . write ch ) ;
rank: 577
score: 97.0806655883789
patch: protected protected synchronized
rank: 577
score: 95.9012451171875
patch: clear > null
rank: 578
score: 99.06491921164773
patch: out . write ( ch , int i ) {
rank: 578
score: 98.807080078125
patch: public ch . out . write ( ) ;
rank: 578
score: 95.89906311035156
patch: for > length
rank: 578
score: 95.76968383789062
patch: static null
rank: 578
score: 95.69007364908855
patch: Not <UNK>
rank: 578
score: 94.627685546875
patch: Big >
rank: 579
score: 98.97350463867187
patch: out . write ( out , ch ) ;
rank: 579
score: 98.84876844618056
patch: protected void write ( String str ) ;
rank: 579
score: 97.07655334472656
patch: on > Index
rank: 579
score: 95.89572143554688
patch: call > null
rank: 579
score: 95.6883036295573
patch: put
rank: 579
score: 94.62454223632812
patch: user >
rank: 580
score: 99.06308218149039
patch: out . write ( ch . out . write ( ) {
rank: 580
score: 98.90485229492188
patch: out . write ( ( Integer ch ) ;
rank: 580
score: 98.84793090820312
patch: out . write ( byte ( byte ) ;
rank: 580
score: 98.80491129557292
patch: out . write ( byte ; ) ;
rank: 580
score: 97.07617950439453
patch: properties > >
rank: 580
score: 95.8873291015625
patch: has > Index
rank: 580
score: 95.7625223795573
patch: void out
rank: 581
score: 99.06243286132812
patch: protected synchronized out . write ( ch ) {
rank: 581
score: 98.97291148792614
patch: public out . write ( ch , ch . )
rank: 581
score: 98.90411376953125
patch: public out . write ( String int ) ;
rank: 581
score: 98.847119140625
patch: public out . write ( Object ( ) ;
rank: 581
score: 98.8040771484375
patch: out . write ( byte . ) ;
rank: 581
score: 97.07469177246094
patch: search > ]
rank: 581
score: 95.76015218098958
patch: void err
rank: 581
score: 95.68712361653645
patch: Next i
rank: 581
score: 94.61616516113281
patch: IO
rank: 582
score: 99.06239827473958
patch: public out . write ( ch ) { return ch ;
rank: 582
score: 98.97285600142045
patch: public out . write ( ch == null ) ;
rank: 582
score: 98.90396118164062
patch: static out . write ( String ch ) ;
rank: 582
score: 98.80281982421874
patch: public out . write ( $STRING$ ) { .
rank: 582
score: 95.88107299804688
patch: if > Index
rank: 582
score: 95.74899291992188
patch: All State
rank: 582
score: 95.68595886230469
patch: contains
rank: 583
score: 99.06231689453125
patch: public out . write ( byte [ ] chars ) {
rank: 583
score: 98.97236772017045
patch: public out . write ( ch + 1 ) ;
rank: 583
score: 98.9036532315341
patch: out . write ( char [ ] ch ) {
rank: 583
score: 98.84623413085937
patch: public void out ( ) ; null ) ;
rank: 583
score: 98.80080159505208
patch: public void write ( ] ch ) ;
rank: 583
score: 97.07243347167969
patch: arraycopy > ]
rank: 583
score: 95.74059041341145
patch: void Error
rank: 583
score: 95.68594360351562
patch: - arraycopy
rank: 583
score: 94.61402384440105
patch: ends
rank: 584
score: 99.06155160757211
patch: public void write ( int ch ) throws IO CaMeL Exception {
rank: 584
score: 98.84578080610795
patch: public out . write ( new byte [ ] ;
rank: 584
score: 98.80079481336806
patch: out . write ( ) { ; }
rank: 584
score: 97.07186889648438
patch: peek > ]
rank: 584
score: 95.87557220458984
patch: = while
rank: 584
score: 95.72096761067708
patch: private Runtime
rank: 584
score: 95.68592325846355
patch: Buffer print
rank: 584
score: 94.60648600260417
patch: sleep >
rank: 585
score: 98.97190163352273
patch: public out . write ( char [ ] chars )
rank: 585
score: 98.90338745117188
patch: public static void write ( String name ) ;
rank: 585
score: 98.80044216579861
patch: public out . write ( $STRING$ ) throw
rank: 585
score: 97.07086181640625
patch: in > ]
rank: 585
score: 95.8696517944336
patch: > ends
rank: 585
score: 95.68452962239583
patch: protected remove
rank: 585
score: 94.60459899902344
patch: }
rank: 586
score: 98.9712801846591
patch: public abstract out . write ( ch . ) ;
rank: 586
score: 98.84565734863281
patch: void out ( int value ) ;
rank: 586
score: 98.80036756727431
patch: out . write ( ] 1 ) ;
rank: 586
score: 97.07068634033203
patch: read > i
rank: 586
score: 95.862548828125
patch: > ch
rank: 586
score: 95.71068318684895
patch: public No
rank: 586
score: 95.67942301432292
patch: debug ]
rank: 586
score: 94.5957743326823
patch: public Entity
rank: 587
score: 99.06128946940105
patch: public final out . write . write ( ch ) {
rank: 587
score: 98.96943803267045
patch: out . write ( String ch ) throws ch ;
rank: 587
score: 98.9027587890625
patch: out . append ( $STRING$ + ch ) ;
rank: 587
score: 98.84545026506696
patch: private int write ( ) ;
rank: 587
score: 97.07042694091797
patch: protected private protected
rank: 587
score: 95.67622884114583
patch: Iterator set
rank: 588
score: 99.06116832386364
patch: out . write ( ch . intern ( ) {
rank: 588
score: 98.96886596679687
patch: private out . write ( ch , ) ;
rank: 588
score: 98.84450073242188
patch: public abstract abstract out . write ( ) ;
rank: 588
score: 97.0696792602539
patch: stop > ]
rank: 588
score: 95.85951232910156
patch: > sleep
rank: 588
score: 95.69728597005208
patch: @ State
rank: 588
score: 95.67582194010417
patch: File print
rank: 588
score: 94.59283447265625
patch: public Inheritable
rank: 589
score: 98.84434000651042
patch: out . write ( Object ( ) ;
rank: 589
score: 98.79637993706598
patch: out . write ( ch , out ;
rank: 589
score: 95.85818481445312
patch: try > catch
rank: 589
score: 95.67403157552083
patch: length i
rank: 589
score: 94.58707682291667
patch: public *
rank: 590
score: 98.96880548650569
patch: public out . write ( ch , char ch )
rank: 590
score: 98.84412299262152
patch: public void write ( final $STRING$ ) ;
rank: 590
score: 98.79561767578124
patch: public out . write ( byte ch ch ,
rank: 590
score: 97.06905110677083
patch: Ignore >
rank: 590
score: 95.67833455403645
patch: void arraycopy
rank: 590
score: 95.67361450195312
patch: Next arraycopy
rank: 590
score: 94.5858154296875
patch: m
rank: 591
score: 99.0591328938802
patch: out . write ( ch . chars [ ] ) ;
rank: 591
score: 98.96787331321023
patch: public out . write ( char [ ] value )
rank: 591
score: 98.90117853338069
patch: public static out . write ( Object [ ) ;
rank: 591
score: 98.84378051757812
patch: private void write ( ch ) ;
rank: 591
score: 98.79465738932292
patch: public out . write ( write ) {
rank: 591
score: 97.06758117675781
patch: contents > Index
rank: 591
score: 95.67079162597656
patch: Data
rank: 591
score: 94.58211263020833
patch: < Not
rank: 592
score: 99.05899752103366
patch: out . write ( ch ) return write ( ch ) ;
rank: 592
score: 98.90082659040179
patch: out . flush ( ) ;
rank: 592
score: 98.7943115234375
patch: public out . write ( str ) throws
rank: 592
score: 97.06744384765625
patch: process > Index
rank: 592
score: 95.83656311035156
patch: > append
rank: 592
score: 95.67057291666667
patch: void set
rank: 592
score: 94.58043416341145
patch: request >
rank: 593
score: 99.05892944335938
patch: out . write ( ch . write ( ch ) {
rank: 593
score: 98.96558227539063
patch: public void out ( ch ) { ; }
rank: 593
score: 98.89983520507812
patch: public static out write ( String ch ) ;
rank: 593
score: 95.6456298828125
patch: void Type
rank: 594
score: 99.0586825284091
patch: out . write ( ch . char value ) ;
rank: 594
score: 98.89806450737848
patch: String out . write ( str ) ;
rank: 594
score: 98.84259033203125
patch: void out ( false ) ;
rank: 594
score: 95.82745361328125
patch: if > length
rank: 594
score: 95.6292215983073
patch: final Error
rank: 594
score: 95.61946105957031
patch: starts
rank: 594
score: 94.56538899739583
patch: private IO
rank: 595
score: 99.05826822916667
patch: protected synchronized out . write ( ch [ ] ) {
rank: 595
score: 98.96425559303977
patch: out . write ( ch , int 0 ) ;
rank: 595
score: 98.89755859375
patch: public out . write ( Object out ) ;
rank: 595
score: 98.84244791666667
patch: out . write ( Integer value ) ;
rank: 595
score: 97.06471252441406
patch: private synchronized private
rank: 595
score: 95.82353210449219
patch: add > out
rank: 595
score: 95.58753967285156
patch: Hash
rank: 595
score: 94.56339518229167
patch: Error >
rank: 596
score: 98.96381971571181
patch: public final out . write ( ch )
rank: 596
score: 98.89705810546874
patch: public static out . write ( value ) ;
rank: 596
score: 98.79182264539931
patch: public boolean write ( ] ch ) ;
rank: 596
score: 97.06396484375
patch: I > private
rank: 596
score: 95.82225036621094
patch: add > case
rank: 596
score: 95.62237548828125
patch: write State
rank: 596
score: 95.56480407714844
patch: Log
rank: 596
score: 94.55998992919922
patch: builder
rank: 597
score: 99.05745442708333
patch: out . write ( ch ) { return out ) ;
rank: 597
score: 98.96180308948864
patch: public out . write ( ch ) { ; ;
rank: 597
score: 98.84221055772569
patch: public out . write ( System ) ;
rank: 597
score: 98.79090711805556
patch: public out . write ( chars ) {
rank: 597
score: 97.06356811523438
patch: scan > ]
rank: 597
score: 95.82182312011719
patch: add > size
rank: 597
score: 95.6212870279948
patch: out Null
rank: 597
score: 95.56327819824219
patch: Operation
rank: 597
score: 94.5597635904948
patch: call >
rank: 598
score: 99.05740121694711
patch: public out ( ) { this . out ( ) ; }
rank: 598
score: 98.96171875
patch: out . write ( ch , int value )
rank: 598
score: 98.89583740234374
patch: public void out ( write ( ch ) ;
rank: 598
score: 98.84157986111111
patch: public String write ( int str ) ;
rank: 598
score: 98.79072401258681
patch: out . write ( T ch ) ;
rank: 598
score: 97.06031799316406
patch: compare > ]
rank: 598
score: 95.82018280029297
patch: public hash >
rank: 598
score: 95.54290008544922
patch: length
rank: 599
score: 99.05736365685097
patch: out . write ( ch ) throws IO CaMeL Exception ; )
rank: 599
score: 98.96109008789062
patch: out . write ( ch , int size )
rank: 599
score: 98.84151458740234
patch: void out ( - 0 ) ;
rank: 599
score: 95.81785583496094
patch: drop > i
rank: 599
score: 94.55752563476562
patch: boolean <UNK>
rank: 600
score: 99.0550537109375
patch: out . write ( ch * / ) ;
rank: 600
score: 98.95946044921875
patch: void out . write ( ch . ) ;
rank: 600
score: 98.895068359375
patch: public out . write ( Boolean ch ) ;
rank: 600
score: 98.84090169270833
patch: public boolean write . write ( ) ;
rank: 600
score: 98.79013061523438
patch: public out . write ( out ) { ;
rank: 600
score: 97.05839538574219
patch: on > i
rank: 600
score: 95.8150634765625
patch: has > length
rank: 600
score: 94.55106608072917
patch: public Verify
rank: 601
score: 99.05498712713069
patch: public long out ( ) throws IO CaMeL Exception ;
rank: 601
score: 98.89438205295139
patch: String . [ ] out ( ) {
rank: 601
score: 98.84068298339844
patch: public ch . write ( ) ;
rank: 601
score: 98.78966522216797
patch: out . write ( SIZE ) ;
rank: 601
score: 97.05643463134766
patch: token > ]
rank: 601
score: 95.50692749023438
patch: Property
rank: 601
score: 94.55013020833333
patch: public inherit
rank: 602
score: 98.84066772460938
patch: public abstract void write ( ) ;
rank: 602
score: 98.78874376085069
patch: public out . write ( byte ) throws
rank: 602
score: 97.04478963216145
patch: can >
rank: 602
score: 95.50012969970703
patch: for
rank: 603
score: 99.0543212890625
patch: public out . write ( char [ ] chars ) {
rank: 603
score: 98.95703125
patch: public out . write ( ch , ;
rank: 603
score: 98.89429931640625
patch: out . write ( ch . split ) ;
rank: 603
score: 98.83993530273438
patch: void out ( out ( ) ;
rank: 603
score: 98.78841824001736
patch: public ch . write ( ch ) ;
rank: 603
score: 97.0343526204427
patch: hash >
rank: 603
score: 95.80477905273438
patch: case protected
rank: 603
score: 95.54502360026042
patch: out catch
rank: 603
score: 95.49543762207031
patch: Debug
rank: 603
score: 94.53988647460938
patch: public package
rank: 604
score: 98.95670166015626
patch: void out . write ( ch $NUMBER$ ) ;
rank: 604
score: 98.893798828125
patch: out . append ( value ) ;
rank: 604
score: 98.83963351779514
patch: private void write ( int str ) ;
rank: 604
score: 98.78790283203125
patch: private out . write ( str ) ;
rank: 604
score: 95.80049896240234
patch: write > length
rank: 604
score: 95.53382873535156
patch: try
rank: 604
score: 95.47581481933594
patch: Plugin
rank: 604
score: 94.53415934244792
patch: org <UNK>
rank: 605
score: 99.05382283528645
patch: write . write . ch . write ( ch ) ;
rank: 605
score: 98.95627663352273
patch: public out . write ( ch , byte value )
rank: 605
score: 98.89374457465277
patch: out . write ( ch [ ) ;
rank: 605
score: 98.78702121310764
patch: public out . write ( out ) {
rank: 605
score: 97.02341715494792
patch: Common >
rank: 605
score: 95.79830169677734
patch: has > null
rank: 605
score: 95.46624755859375
patch: last
rank: 606
score: 98.95612127130681
patch: public void write ( ) throws IO CaMeL Exception ;
rank: 606
score: 98.892822265625
patch: public out ( ) { }
rank: 606
score: 98.83895438058036
patch: void out ( null ) ;
rank: 606
score: 98.78666178385417
patch: out . write ( ) + ) ;
rank: 606
score: 97.01685587565105
patch: Find >
rank: 606
score: 95.52183024088542
patch: protected Runtime
rank: 606
score: 95.46013641357422
patch: element
rank: 607
score: 99.05350952148437
patch: private synchronized out . write ( ch ) {
rank: 607
score: 98.95595974392361
patch: public out . write ( ch , )
rank: 607
score: 98.89280395507812
patch: out . write ( name ) return ch ;
rank: 607
score: 98.83858235677083
patch: public void write ( String $STRING$ ) ;
rank: 607
score: 98.78622097439236
patch: public out . write ( $STRING$ ) return
rank: 607
score: 97.01491292317708
patch: start >
rank: 607
score: 95.51175944010417
patch: final null
rank: 608
score: 98.95576615767045
patch: out . write ( ch , int read ) ;
rank: 608
score: 98.8927001953125
patch: out . write ( $STRING$ , ch ) ;
rank: 608
score: 98.83853759765626
patch: public abstract write . write . write ) ;
rank: 608
score: 98.78616333007812
patch: public out . write ( ch ,
rank: 608
score: 95.51112874348958
patch: out Thread
rank: 608
score: 95.43214416503906
patch: Handler
rank: 609
score: 99.05206768329327
patch: public out . write ( ch . get CaMeL Name ( )
rank: 609
score: 98.95552201704545
patch: public abstract out . write . write ( ) ;
rank: 609
score: 98.89266967773438
patch: public out . write ( String $NUMBER$ ) ;
rank: 609
score: 98.83811732700893
patch: void . write ( ) ;
rank: 609
score: 98.78605821397569
patch: out . write ( out ch ) ;
rank: 609
score: 97.01270548502605
patch: UI >
rank: 609
score: 95.50491333007812
patch: static State
rank: 609
score: 95.41947174072266
patch: Code
rank: 609
score: 94.50994110107422
patch: Hashtable
rank: 610
score: 98.95545654296875
patch: synchronized . out . write ( ch ) ;
rank: 610
score: 98.89132690429688
patch: out . write ( Integer ) ;
rank: 610
score: 98.83802490234375
patch: out . write ( int byte [ ) ;
rank: 610
score: 98.78586154513889
patch: out . write ( ) ; ) {
rank: 610
score: 96.99615478515625
patch: push >
rank: 610
score: 95.78953552246094
patch: > min
rank: 610
score: 95.41658020019531
patch: Type
rank: 610
score: 94.50852457682292
patch: public Virtual
rank: 611
score: 99.05187049278847
patch: out . write ( Byte ch ) throws IO CaMeL Exception {
rank: 611
score: 98.95405717329545
patch: public static out . write ( ch , ) ;
rank: 611
score: 98.8377197265625
patch: private void out . write ( out ) ;
rank: 611
score: 98.7855224609375
patch: out . write ( $STRING$ ch ) ;
rank: 611
score: 96.99166870117188
patch: Add >
rank: 611
score: 95.78776550292969
patch: set > out
rank: 611
score: 95.39958953857422
patch: Service
rank: 611
score: 94.5077412923177
patch: public UTF
rank: 612
score: 98.95379083806819
patch: public out . write ( ch . ) throws )
rank: 612
score: 98.89084694602273
patch: public void out ( char [ ] ch ) ;
rank: 612
score: 98.7845230102539
patch: public out . flush ( ) ;
rank: 612
score: 96.97952270507812
patch: in >
rank: 612
score: 95.78681182861328
patch: != null
rank: 612
score: 95.39701843261719
patch: Size
rank: 612
score: 94.50289916992188
patch: execute <UNK>
rank: 613
score: 99.0517245205966
patch: out . write ( ch , long count ) ;
rank: 613
score: 98.9532137784091
patch: private void out ( ) throws IO CaMeL Exception ;
rank: 613
score: 98.83709161931819
patch: public private out . write ( String ch ) {
rank: 613
score: 96.97677612304688
patch: Containment >
rank: 613
score: 95.78663635253906
patch: / ;
rank: 613
score: 95.39401245117188
patch: All
rank: 613
score: 94.50132242838542
patch: ( >
rank: 614
score: 99.05151977539063
patch: out . write ( ch . str ) ;
rank: 614
score: 98.95274769176136
patch: out . write ( ch , int ) ) ;
rank: 614
score: 98.89012451171875
patch: public String [ ] out ( ch ) ;
rank: 614
score: 98.83641221788194
patch: private private out . write ( ) ;
rank: 614
score: 98.78071424696181
patch: public void out . write ( ) {
rank: 614
score: 96.96994018554688
patch: f >
rank: 614
score: 95.78520202636719
patch: call > case
rank: 614
score: 95.45064290364583
patch: / Error
rank: 614
score: 95.39350891113281
patch: Visible
rank: 614
score: 94.49571990966797
patch: EMPTY
rank: 615
score: 99.0513203938802
patch: out . write ( ch , int ch $NUMBER$ ) {
rank: 615
score: 98.95259232954545
patch: public out . write write ( int ch ) ;
rank: 615
score: 98.8899917602539
patch: out . delete ( ch ) ;
rank: 615
score: 98.83637830946181
patch: public static void write ( out ) ;
rank: 615
score: 98.78023274739583
patch: public out . write ( true ) ;
rank: 615
score: 96.96793619791667
patch: Source >
rank: 615
score: 95.78401184082031
patch: initialize > Index
rank: 615
score: 95.39073181152344
patch: Changed
rank: 615
score: 94.48800659179688
patch: post >
rank: 616
score: 99.05115763346355
patch: out . write ( ch . write ( char ) ;
rank: 616
score: 98.83552769252232
patch: boolean . write ( ) ;
rank: 616
score: 98.77919006347656
patch: public out ( ] ch ) ;
rank: 616
score: 95.78366088867188
patch: run > length
rank: 616
score: 95.44862874348958
patch: / Stack
rank: 616
score: 95.37385559082031
patch: Status
rank: 617
score: 99.0508321126302
patch: out . write ( ch . get CaMeL Buffer ( )
rank: 617
score: 98.95103870738636
patch: public out . write ( String ch , ) ;
rank: 617
score: 98.83483123779297
patch: protected void write ( ch ) ;
rank: 617
score: 98.77911376953125
patch: out . write ( ) out ) ;
rank: 617
score: 96.95894368489583
patch: Mail >
rank: 617
score: 95.77996826171875
patch: > for
rank: 617
score: 95.43961588541667
patch: void Null
rank: 617
score: 95.36042785644531
patch: More
rank: 618
score: 99.05014038085938
patch: out . write ( ch . format . ch ) {
rank: 618
score: 98.88834228515626
patch: public void out ( ) { out ; }
rank: 618
score: 98.83453369140625
patch: protected static void out ( ) ;
rank: 618
score: 98.77906629774306
patch: out ( ) write ( $STRING$ ) ;
rank: 618
score: 96.9557596842448
patch: template >
rank: 618
score: 95.7784194946289
patch: initialize > length
rank: 618
score: 95.4385274251302
patch: add State
rank: 618
score: 94.4783935546875
patch: public >
rank: 619
score: 99.04891967773438
patch: public out . write ( ch . intern ( ) {
rank: 619
score: 98.94995727539063
patch: protected out . write ( ch , ) ;
rank: 619
score: 98.83306274414062
patch: public out . write ( byte [ ) {
rank: 619
score: 98.77851019965277
patch: out . write ( out . ) ;
rank: 619
score: 96.9538065592448
patch: fire >
rank: 619
score: 95.77481079101562
patch: try > null
rank: 620
score: 99.04852294921875
patch: out . write ( ch , long max )
rank: 620
score: 98.83193969726562
patch: private out . write ( byte ch ) {
rank: 620
score: 98.7777328491211
patch: out . write ( ) { ;
rank: 620
score: 95.77473449707031
patch: != catch
rank: 620
score: 95.4163818359375
patch: synchronized Stack
rank: 620
score: 94.46581268310547
patch: Object
rank: 621
score: 99.0477294921875
patch: public synchronized out . write . write ( ch )
rank: 621
score: 98.9494295987216
patch: public out . write ( ch , int write )
rank: 621
score: 98.83130754743304
patch: public int ch ( ) {
rank: 621
score: 98.77720811631944
patch: out . write ( 0 ] ) ;
rank: 621
score: 96.94666544596355
patch: All >
rank: 621
score: 95.41637166341145
patch: } Exception
rank: 621
score: 95.34308624267578
patch: Item
rank: 621
score: 94.46253967285156
patch: <
rank: 622
score: 99.04738362630208
patch: private final out . write ( ch [ ] ) {
rank: 622
score: 98.94886363636364
patch: public static synchronized out . write ( ch ) ;
rank: 622
score: 98.88746337890625
patch: public out . write ( String double ) ;
rank: 622
score: 98.83062065972223
patch: public int write ( ch ch ) ;
rank: 622
score: 98.77534315321181
patch: int out . write ( $STRING$ ) ;
rank: 622
score: 96.94150797526042
patch: filters >
rank: 622
score: 95.41451009114583
patch: void catch
rank: 622
score: 95.33030700683594
patch: Set
rank: 622
score: 94.44969177246094
patch: check
rank: 623
score: 99.0467862215909
patch: out . write ( char ch [ ] ) {
rank: 623
score: 98.88718872070312
patch: public out . write ( int char ) ;
rank: 623
score: 98.8300552368164
patch: public void out ( null ) ;
rank: 623
score: 98.7720718383789
patch: out . write ( new ) ;
rank: 623
score: 96.93629964192708
patch: Current >
rank: 623
score: 95.4095967610677
patch: public Override
rank: 623
score: 95.3240737915039
patch: Component
rank: 623
score: 94.44355010986328
patch: Illegal
rank: 624
score: 98.8298568725586
patch: private int write ( ch ) ;
rank: 624
score: 98.77199300130208
patch: out . write ( byte ch ; .
rank: 624
score: 96.9354248046875
patch: setup >
rank: 624
score: 95.76608276367188
patch: clear > arraycopy
rank: 625
score: 98.88606770833333
patch: boolean out . write ( byte ) ;
rank: 625
score: 98.82943386501736
patch: final void write ( int str ) ;
rank: 625
score: 98.77000596788194
patch: public void out ( ] ch ) {
rank: 625
score: 96.92657470703125
patch: reset >
rank: 625
score: 95.39881388346355
patch: @ Null
rank: 625
score: 95.31736755371094
patch: exists
rank: 625
score: 94.43167114257812
patch: Ruby
rank: 626
score: 99.0465799967448
patch: public out . write ( ch . format ( ) ;
rank: 626
score: 98.88568725585938
patch: public out . write ( String [ ) ;
rank: 626
score: 98.82899693080357
patch: void write ( $STRING$ ) ;
rank: 626
score: 98.76995171440973
patch: public out write ( ] ch ) {
rank: 626
score: 96.92566935221355
patch: Async >
rank: 626
score: 95.30225372314453
patch: Key
rank: 626
score: 94.42242431640625
patch: token
rank: 627
score: 98.94555053710937
patch: final boolean out . write ( ch ) ;
rank: 627
score: 98.88545532226563
patch: public static out . write ( str ) ;
rank: 627
score: 98.82853393554687
patch: void out ( ) ; null ; null ;
rank: 627
score: 98.76949734157986
patch: public out . write ( ) { }
rank: 627
score: 96.91822306315105
patch: script >
rank: 627
score: 95.76132202148438
patch: set > case
rank: 627
score: 95.38455200195312
patch: out Index
rank: 627
score: 95.2950210571289
patch: Context
rank: 627
score: 94.4177754720052
patch: protected abstract
rank: 628
score: 98.94503173828124
patch: out . write ( Character ( ch ) ;
rank: 628
score: 98.88347625732422
patch: out . write ( i ) ;
rank: 628
score: 98.8281982421875
patch: public String . . . . } ) ;
rank: 628
score: 98.76829698350694
patch: protected out . write ( str ) ;
rank: 628
score: 96.91727701822917
patch: synchronized synchronized
rank: 628
score: 95.74811553955078
patch: insert > length
rank: 628
score: 95.38334147135417
patch: synchronized Runtime
rank: 628
score: 95.29428100585938
patch: Level
rank: 629
score: 99.04578653971355
patch: out . write ( ch ) throws ( IO CaMeL Exception
rank: 629
score: 98.88321940104167
patch: Object . . write ( ch ) ;
rank: 629
score: 98.827392578125
patch: protected static out . write ( ) ;
rank: 629
score: 98.76816813151042
patch: public out . write ( out . ;
rank: 629
score: 96.91581217447917
patch: manager >
rank: 629
score: 95.74771881103516
patch: results > i
rank: 629
score: 95.38319905598958
patch: Ruby Exception
rank: 629
score: 94.4066162109375
patch: private abstract
rank: 630
score: 99.04522705078125
patch: out . write ( ch . write ( byte ) ;
rank: 630
score: 98.88233778211806
patch: String . [ ] write ( ) ;
rank: 630
score: 98.82711791992188
patch: void write ( int value ) ;
rank: 630
score: 98.76785278320312
patch: out . write ( ) ; .
rank: 630
score: 95.74676513671875
patch: > TYPE
rank: 630
score: 95.25982666015625
patch: Boolean
rank: 630
score: 94.40135701497395
patch: object >
rank: 631
score: 98.94263805042614
patch: public void out ( ch ) throws ch . )
rank: 631
score: 98.88072509765625
patch: public out . write ( String 0 ) ;
rank: 631
score: 98.82656860351562
patch: protected int write ( ch ) ;
rank: 631
score: 98.76781463623047
patch: . out . write ( ) ;
rank: 631
score: 95.74466705322266
patch: do > catch
rank: 631
score: 95.36663818359375
patch: synchronized Null
rank: 631
score: 94.39126586914062
patch: delete
rank: 632
score: 99.04414876302083
patch: public out . flush ( ) { return out ; }
rank: 632
score: 98.94252707741477
patch: public out . write ( String str ) throws )
rank: 632
score: 98.8802001953125
patch: public static out write ( String name ) ;
rank: 632
score: 98.82601589626736
patch: out . write ( short str ) ;
rank: 632
score: 96.90561930338542
patch: Property >
rank: 632
score: 95.25038146972656
patch: Access
rank: 632
score: 94.39068603515625
patch: protected static
rank: 633
score: 99.04407348632813
patch: out . write ( ch , int i )
rank: 633
score: 98.9423495205966
patch: public void out ( ) throws Interrupted CaMeL Exception {
rank: 633
score: 98.82541910807292
patch: out . write ( byte [ ) {
rank: 633
score: 98.76740180121527
patch: ch . write ( byte ch ) ;
rank: 633
score: 96.90199788411458
patch: cache >
rank: 633
score: 95.73979949951172
patch: > hash
rank: 633
score: 95.35426839192708
patch: final State
rank: 633
score: 95.24736785888672
patch: err
rank: 633
score: 94.39012145996094
patch: Vector
rank: 634
score: 99.04283650716145
patch: public out . write ( ch . flush ( ) ;
rank: 634
score: 98.94187233664773
patch: out . write ( out . write ( ch )
rank: 634
score: 98.87913004557292
patch: private out . write ( name ) ;
rank: 634
score: 96.90179443359375
patch: ctx >
rank: 634
score: 95.73439025878906
patch: != Stack
rank: 634
score: 95.3423563639323
patch: else Exception
rank: 634
score: 95.24320983886719
patch: Queue
rank: 634
score: 94.38839721679688
patch: new >
rank: 635
score: 98.82478332519531
patch: public void out ( $STRING$ ) ;
rank: 635
score: 98.76357693142361
patch: out . write ( name ch ) ;
rank: 635
score: 96.90084838867188
patch: By >
rank: 635
score: 95.23719787597656
patch: remove
rank: 635
score: 94.38104248046875
patch: find
rank: 636
score: 98.94025268554688
patch: out . write ( ) throws IO CaMeL Exception
rank: 636
score: 98.87794078480114
patch: public out ( ) { out = null ; }
rank: 636
score: 98.82446899414063
patch: public out . write ( byte value ) {
rank: 636
score: 96.88967895507812
patch: Mutation >
rank: 636
score: 95.7301254272461
patch: stop > length
rank: 636
score: 95.33054606119792
patch: void Thread
rank: 636
score: 94.3795674641927
patch: logger >
rank: 637
score: 99.04238891601562
patch: out out . write ( ch ) throws IO CaMeL Exception
rank: 637
score: 98.9350341796875
patch: out . write ( ch , ( ) ;
rank: 637
score: 98.87672254774306
patch: public out . write ( byte [ ;
rank: 637
score: 98.82421875
patch: protected void out ( ) {
rank: 637
score: 98.76006401909723
patch: private out . write ( $STRING$ ) {
rank: 637
score: 96.884033203125
patch: synchronized private
rank: 637
score: 95.33046468098958
patch: private err
rank: 638
score: 99.04238059303977
patch: out . write ( ch , long length ) ;
rank: 638
score: 98.87608506944444
patch: String out . write ( name ) ;
rank: 638
score: 98.82362196180556
patch: write . write ( int str ) ;
rank: 638
score: 98.76003689236111
patch: public out . write ( ch ) .
rank: 638
score: 96.86814371744792
patch: m >
rank: 638
score: 95.72626495361328
patch: for > null
rank: 638
score: 95.32970174153645
patch: private Out
rank: 638
score: 95.17120361328125
patch: trim
rank: 638
score: 94.35529327392578
patch: replace
rank: 639
score: 99.04100952148437
patch: public out . write . write ( ch )
rank: 639
score: 98.93428178267045
patch: public out . write ( ch . char ch )
rank: 639
score: 98.8758544921875
patch: String out . write ( ) ;
rank: 639
score: 98.75929090711806
patch: out . write ch ( ch ) ;
rank: 639
score: 95.72586822509766
patch: if catch >
rank: 639
score: 95.31857299804688
patch: void Index
rank: 639
score: 95.16976165771484
patch: entry
rank: 639
score: 94.3534164428711
patch: (
rank: 640
score: 98.93383178710937
patch: public abstract void out ( ch , ) ;
rank: 640
score: 98.82187906901042
patch: void out ( ) {
rank: 640
score: 98.75803629557292
patch: public out . write ( 1 ) ;
rank: 640
score: 96.86338297526042
patch: shared >
rank: 640
score: 95.72259521484375
patch: close > length
rank: 640
score: 95.31838989257812
patch: FreException
rank: 640
score: 95.16143798828125
patch: parse
rank: 640
score: 94.34963989257812
patch: ruby
rank: 641
score: 99.03988647460938
patch: public long write ( ch ) throws IO CaMeL Exception ;
rank: 641
score: 98.93275035511364
patch: public String out ( ) { return out ; }
rank: 641
score: 98.87546115451389
patch: public void out ( write ( ) ;
rank: 641
score: 98.82172502790179
patch: synchronized void out ( ) ;
rank: 641
score: 98.75700547960069
patch: private out . write ( ch ) throws
rank: 641
score: 95.72246551513672
patch: > Unknown
rank: 641
score: 95.31753540039062
patch: abstract null
rank: 641
score: 95.13714599609375
patch: Case
rank: 642
score: 98.93202514648438
patch: public out . write ( ch . ch )
rank: 642
score: 98.87488403320313
patch: public out . write ( String char ) ;
rank: 642
score: 98.821044921875
patch: void out ( String str ) ;
rank: 642
score: 98.75673421223958
patch: public out . ) ;
rank: 642
score: 96.86124674479167
patch: References >
rank: 642
score: 95.72175598144531
patch: catch <
rank: 642
score: 95.3124287923177
patch: @ Stack
rank: 642
score: 95.13455200195312
patch: Argument
rank: 643
score: 99.03975053267045
patch: out . write ( ch . long i ) ;
rank: 643
score: 98.93154907226562
patch: out . write ( char ch [ ) ;
rank: 643
score: 98.82012939453125
patch: void out ( int str ) ;
rank: 643
score: 98.75638580322266
patch: out . write . write ) ;
rank: 643
score: 95.7179946899414
patch: load > length
rank: 643
score: 95.31241861979167
patch: static Not
rank: 643
score: 95.12548828125
patch: compare
rank: 643
score: 94.33920288085938
patch: Session
rank: 644
score: 99.03920676491477
patch: public out . write ( Char CaMeL Sequence ch )
rank: 644
score: 98.93145197088069
patch: public out . write ( ch , Object ch )
rank: 644
score: 98.87397984095982
patch: public synchronized out ( ) ;
rank: 644
score: 98.8196533203125
patch: public out . write ( ) ; 0 ;
rank: 644
score: 95.71405029296875
patch: validate > i
rank: 644
score: 95.31162516276042
patch: @ Not
rank: 645
score: 99.03870738636364
patch: public boolean write ( ) throws IO CaMeL Exception ;
rank: 645
score: 98.93071746826172
patch: public boolean out ( ch ) ;
rank: 645
score: 98.87375710227273
patch: public void out ( String [ ] out ) ;
rank: 645
score: 98.819140625
patch: protected out . write ( String ch ) {
rank: 645
score: 98.75516086154514
patch: public out out . write ( ) ;
rank: 645
score: 96.8594970703125
patch: Send >
rank: 645
score: 95.71282958984375
patch: set > size
rank: 645
score: 95.11088562011719
patch: Found
rank: 645
score: 94.33595784505208
patch: Managed >
rank: 646
score: 98.9301025390625
patch: out . write ( ch , ) ) ;
rank: 646
score: 98.87352752685547
patch: public String out ( ) { ;
rank: 646
score: 98.81912570529514
patch: out . write ( Integer str ) {
rank: 646
score: 98.75340924944196
patch: public out ( Exception ) ;
rank: 646
score: 95.71224975585938
patch: my > public
rank: 646
score: 95.304443359375
patch: @ Runnable
rank: 646
score: 95.10043334960938
patch: Factory
rank: 646
score: 94.33174641927083
patch: public <
rank: 647
score: 98.929345703125
patch: public out . write ( Byte ch ) ;
rank: 647
score: 98.87310791015625
patch: String . [ ] out ( ) { }
rank: 647
score: 98.81869070870536
patch: public String write ( ) ;
rank: 647
score: 98.75330268012152
patch: . write . write ( ch ) ;
rank: 647
score: 95.29810587565105
patch: if Exception
rank: 647
score: 95.09822082519531
patch: At
rank: 647
score: 94.328125
patch: abstract protected
rank: 648
score: 98.92918701171875
patch: out . write ( ch , short ) ;
rank: 648
score: 98.87213134765625
patch: out . write ( int 1 ) ;
rank: 648
score: 98.75221761067708
patch: out . write ( SIZE ch ) ;
rank: 648
score: 95.29383341471355
patch: out exit
rank: 649
score: 99.03690962357955
patch: out . write . write ( char ch ) ;
rank: 649
score: 98.92898220486111
patch: out . write ( int ( ) ;
rank: 649
score: 98.81786499023437
patch: int . . write ( ) ; null ;
rank: 649
score: 98.75103759765625
patch: public out . write ( false ) ;
rank: 649
score: 96.84248860677083
patch: clock >
rank: 649
score: 95.7077865600586
patch: = static
rank: 649
score: 95.28798421223958
patch: @ Runtime
rank: 649
score: 95.08495330810547
patch: J
rank: 650
score: 99.03569878472223
patch: out write . write ( ch ) ;
rank: 650
score: 98.92890014648438
patch: out . write ( int ch , ) ;
rank: 650
score: 98.8679443359375
patch: public void out ( ch != null ) ;
rank: 650
score: 98.81661376953124
patch: public out . write ( byte str ) {
rank: 650
score: 98.75035942925348
patch: public out . write ch ( ) ;
rank: 650
score: 96.84032185872395
patch: Test >
rank: 650
score: 94.32619222005208
patch: plugin >
rank: 651
score: 99.03514515269886
patch: out . write ( ch . delete ( ) ;
rank: 651
score: 98.92738647460938
patch: out . write ( ch , int start )
rank: 651
score: 98.8157958984375
patch: public public out ( ) ;
rank: 651
score: 98.75
patch: public write . write ( out ) ;
rank: 651
score: 96.83814493815105
patch: pop >
rank: 651
score: 95.70572662353516
patch: setup > i
rank: 651
score: 95.27878824869792
patch: out Internal
rank: 651
score: 95.07130432128906
patch: Cache
rank: 651
score: 94.32568359375
patch: Result
rank: 652
score: 99.03483442826705
patch: out . write ( ch , long max ) {
rank: 652
score: 98.86699567522321
patch: public String out ( ) {
rank: 652
score: 98.81444634331598
patch: public void out ( int value ) ;
rank: 652
score: 98.74928114149306
patch: public int write ( ] ch ) {
rank: 652
score: 96.83668009440105
patch: assert >
rank: 652
score: 95.70550537109375
patch: has > catch
rank: 652
score: 95.0670394897461
patch: Number
rank: 652
score: 94.32529703776042
patch: abstract synchronized
rank: 653
score: 98.92499389648438
patch: public out [ ] write ( ch ) ;
rank: 653
score: 98.86649780273437
patch: public static out . write ( byte [ ;
rank: 653
score: 98.81369018554688
patch: public Object write ( ch ) ;
rank: 653
score: 98.74862331814236
patch: public out . write ( flush ) ;
rank: 653
score: 96.83005777994792
patch: invoke >
rank: 653
score: 95.69921875
patch: select > i
rank: 653
score: 95.27252197265625
patch: static Null
rank: 653
score: 95.05450439453125
patch: Element
rank: 653
score: 94.31460571289062
patch: execute
rank: 654
score: 99.03390502929688
patch: public out . write ( char ch ) {
rank: 654
score: 98.92397732204861
patch: out . write ( ( byte ) ;
rank: 654
score: 98.86647251674107
patch: out . close ( ) ;
rank: 654
score: 98.81324986049107
patch: static void out ( ) ;
rank: 654
score: 98.74807400173611
patch: public out . write ( count ) ;
rank: 654
score: 96.82912190755208
patch: field >
rank: 654
score: 95.69818878173828
patch: ret > i
rank: 654
score: 95.05403137207031
patch: Count
rank: 655
score: 99.033642578125
patch: out . write . Long ( ch ) ;
rank: 655
score: 98.923583984375
patch: final out . write ( ch , ) ;
rank: 655
score: 98.86639404296875
patch: String . [ ] out ( ) { ;
rank: 655
score: 98.81321411132812
patch: public out . write ( Integer ch ) {
rank: 655
score: 98.74790954589844
patch: ) . write ( ch ) ;
rank: 655
score: 95.6978759765625
patch: = else
rank: 655
score: 95.27006022135417
patch: private catch
rank: 655
score: 95.05172729492188
patch: Output
rank: 655
score: 94.3076883951823
patch: private >
rank: 656
score: 99.03363037109375
patch: out . write ( ch ) throws Runtime CaMeL Exception ;
rank: 656
score: 98.86638532366071
patch: public boolean out ( ) {
rank: 656
score: 98.81291198730469
patch: public int out ( out ) ;
rank: 656
score: 98.74618869357639
patch: out . write ( $STRING$ ) ; .
rank: 656
score: 96.82415771484375
patch: namespace >
rank: 656
score: 95.69719696044922
patch: > put
rank: 656
score: 95.267578125
patch: Sorted State
rank: 656
score: 95.03870391845703
patch: Info
rank: 656
score: 94.30633544921875
patch: new <UNK>
rank: 657
score: 99.03342692057292
patch: out . write ( ch . char [ ] ) {
rank: 657
score: 98.864990234375
patch: void out . write ( name ) ;
rank: 657
score: 98.81267438616071
patch: public int ch ( ) ;
rank: 657
score: 96.82338460286458
patch: Launch >
rank: 657
score: 95.26516723632812
patch: write
rank: 657
score: 95.03512573242188
patch: Utils
rank: 657
score: 94.29364013671875
patch: private static
rank: 658
score: 99.0332743326823
patch: public final out . write . write ( ch ) ;
rank: 658
score: 98.92279052734375
patch: out . write ( char ch , ) ;
rank: 658
score: 98.81165228949652
patch: int . . . write ( ) ;
rank: 658
score: 98.74426947699652
patch: public out . write ( ] ) {
rank: 658
score: 96.81927490234375
patch: system >
rank: 658
score: 95.69062805175781
patch: case <UNK>
rank: 658
score: 95.25931803385417
patch: synchronized Not
rank: 658
score: 95.03237915039062
patch: clone
rank: 658
score: 94.29111735026042
patch: session >
rank: 659
score: 99.03275553385417
patch: out . write ( ch , int ch . length )
rank: 659
score: 98.8634033203125
patch: public void out ( ch . flush ( ) {
rank: 659
score: 98.8092269897461
patch: write . write ( byte ) ;
rank: 659
score: 96.81573486328125
patch: Of >
rank: 659
score: 95.69005584716797
patch: close > catch
rank: 659
score: 95.03199005126953
patch: 0
rank: 659
score: 94.28764343261719
patch: TAG
rank: 660
score: 99.03224690755208
patch: out . write ( ch . ch . name ) ;
rank: 660
score: 98.86252170138889
patch: public static void out ( ch ) ;
rank: 660
score: 98.80811767578125
patch: public out . write ( String $STRING$ ) {
rank: 660
score: 98.74372016059027
patch: write . write ( ch ) ) ;
rank: 660
score: 96.80853271484375
patch: Change >
rank: 660
score: 95.68621826171875
patch: invoke > length
rank: 660
score: 95.24253336588542
patch: static Runnable
rank: 660
score: 95.02873229980469
patch: Node
rank: 661
score: 99.03213840060764
patch: public out . write ( long ch )
rank: 661
score: 98.92116088867188
patch: @ Override out . write ( $STRING$ ) ;
rank: 661
score: 98.86039595170455
patch: public void out ( ch . close ( ) {
rank: 661
score: 98.80809190538194
patch: out . write ( String ch ) {
rank: 661
score: 98.74225531684027
patch: public out . write ( byte ; ,
rank: 661
score: 96.80810546875
patch: Static >
rank: 661
score: 95.23848470052083
patch: out iterator
rank: 661
score: 95.02389526367188
patch: Pointer
rank: 662
score: 98.80648803710938
patch: public out . write ( float ch ) {
rank: 662
score: 98.74223497178819
patch: out . write ( ] ch ) .
rank: 662
score: 96.80520629882812
patch: handle >
rank: 662
score: 95.68094635009766
patch: if > catch
rank: 662
score: 95.22865804036458
patch: private (
rank: 662
score: 95.02326202392578
patch: values
rank: 662
score: 94.27935791015625
patch: *
rank: 663
score: 98.92091369628906
patch: out . write ( int ) ;
rank: 663
score: 98.85999891493056
patch: int out . write ( name ) ;
rank: 663
score: 98.805029296875
patch: public out . write ( double ch ) {
rank: 663
score: 98.74070739746094
patch: out out . write ( ) ;
rank: 663
score: 94.27723185221355
patch: public Random
rank: 664
score: 98.85974799262152
patch: public static void out ( ) return ;
rank: 664
score: 98.80425415039062
patch: public out . write ( Integer str ) {
rank: 664
score: 98.74045138888889
patch: out . write ( abstract ch ) ;
rank: 664
score: 96.8043721516927
patch: force >
rank: 664
score: 95.67854309082031
patch: switch > i
rank: 664
score: 95.2225341796875
patch: out Writer
rank: 665
score: 98.91979370117187
patch: final void out . write ( ch ) ;
rank: 665
score: 98.8597412109375
patch: public void out ( write ( String name ) ;
rank: 665
score: 98.80370483398437
patch: public void write ( int str ) ; }
rank: 665
score: 98.74020724826389
patch: private out . write ( ) ) ;
rank: 665
score: 96.80176798502605
patch: final public
rank: 665
score: 95.22166951497395
patch: UException
rank: 665
score: 95.00636291503906
patch: Is
rank: 665
score: 94.26265462239583
patch: input >
rank: 666
score: 99.02822536892361
patch: public abstract boolean write ( ch ) ;
rank: 666
score: 98.91914672851563
patch: out . write ( ch , float ) ;
rank: 666
score: 98.8597412109375
patch: public void out ( ) { out ) ; }
rank: 666
score: 98.80336216517857
patch: int write ( ch ) ;
rank: 666
score: 98.74017333984375
patch: public out . write ( 0 ) ;
rank: 666
score: 96.79899088541667
patch: Exec >
rank: 666
score: 95.21327718098958
patch: synchronized Runnable
rank: 667
score: 99.02810668945312
patch: public out . write ( Char CaMeL Sequence ch ) {
rank: 667
score: 98.80301513671876
patch: public int write ( ch ) ; null ;
rank: 667
score: 98.73989529079861
patch: out . write ( ch ) throws )
rank: 667
score: 95.67424011230469
patch: : public
rank: 667
score: 94.25570678710938
patch: while <UNK>
rank: 668
score: 99.02750244140626
patch: out . write . write . ch ) ;
rank: 668
score: 98.80297088623047
patch: protected void write ( out ) ;
rank: 668
score: 98.73958333333333
patch: public synchronized out . write ( ) {
rank: 668
score: 95.67402648925781
patch: > Error
rank: 668
score: 94.98225402832031
patch: Format
rank: 668
score: 94.25550842285156
patch: change
rank: 669
score: 99.02699788411458
patch: out . write ( ch . out . write ( )
rank: 669
score: 98.8027114868164
patch: void out ( - 1 ) ;
rank: 669
score: 98.73935275607639
patch: public boolean out . write ( ) {
rank: 669
score: 96.7955322265625
patch: Output >
rank: 669
score: 95.2100830078125
patch: abstract Error
rank: 669
score: 94.2408218383789
patch: the
rank: 670
score: 99.02694702148438
patch: public out . write ( ch . flush ( ) {
rank: 670
score: 98.9144287109375
patch: static out . write ( ch , ) ;
rank: 670
score: 98.85896809895833
patch: public void out ( Object out ) ;
rank: 670
score: 98.8025634765625
patch: int out . write ( ) ; null ;
rank: 670
score: 98.73716905381944
patch: out . write . write ( ch ;
rank: 670
score: 96.79529825846355
patch: schedule >
rank: 670
score: 95.67023468017578
patch: set > Stack
rank: 670
score: 95.20829010009766
patch: connect
rank: 670
score: 94.23590087890625
patch: static public
rank: 671
score: 98.85572509765625
patch: public void out ( ch . out ) ;
rank: 671
score: 98.80223737444196
patch: protected int write ( ) ;
rank: 671
score: 98.7370376586914
patch: out . write ( delegate ) ;
rank: 671
score: 95.66958618164062
patch: transform > i
rank: 671
score: 95.2053731282552
patch: / Runtime
rank: 671
score: 94.9489517211914
patch: Text
rank: 672
score: 98.91402587890624
patch: void out . write ( char ch ) ;
rank: 672
score: 98.85253228081598
patch: public Object [ ] out ( ) ;
rank: 672
score: 98.80072021484375
patch: protected void write ( ) ;
rank: 672
score: 98.73586697048611
patch: public public out . write ( ) {
rank: 672
score: 96.79473876953125
patch: data >
rank: 672
score: 95.6688232421875
patch: > substring
rank: 672
score: 95.20168050130208
patch: out finally
rank: 672
score: 94.94808959960938
patch: Line
rank: 672
score: 94.21693929036458
patch: abstract private
rank: 673
score: 99.02567545572917
patch: protected out . write ( char ch [ ] ) {
rank: 673
score: 98.85188123914931
patch: public void out ( ch ) return ;
rank: 673
score: 98.799951171875
patch: public out . write ( Object ( ) {
rank: 673
score: 98.73368072509766
patch: out . write ( ) out ;
rank: 673
score: 96.7927958170573
patch: Java >
rank: 673
score: 95.66877746582031
patch: load > catch
rank: 673
score: 95.2013448079427
patch: static Runtime
rank: 673
score: 94.94371795654297
patch: Request
rank: 674
score: 99.02562459309895
patch: out . write ( ch . char [ ] out )
rank: 674
score: 98.9117919921875
patch: out . write ( byte ch [ ) ;
rank: 674
score: 98.85140380859374
patch: public void out ( ch . char ) ;
rank: 674
score: 98.79966517857143
patch: void out ( $STRING$ ) ;
rank: 674
score: 98.73285590277777
patch: out . write ( ch + ch ,
rank: 674
score: 96.79268391927083
patch: Save >
rank: 674
score: 95.6687240600586
patch: stop > Index
rank: 674
score: 95.20003255208333
patch: VM State
rank: 674
score: 94.94119262695312
patch: Runnable
rank: 674
score: 94.21222686767578
patch: true
rank: 675
score: 99.02439186789773
patch: protected out . write ( ch [ ] ) ;
rank: 675
score: 98.90851440429688
patch: out . write ( ch , int ; )
rank: 675
score: 98.85105202414773
patch: public void out ( write ( String str ) ;
rank: 675
score: 98.79886627197266
patch: public String write ( out ) ;
rank: 675
score: 98.73081461588542
patch: public out . write ( Float ) {
rank: 675
score: 95.66683197021484
patch: remove > length
rank: 675
score: 95.18815104166667
patch: void finally
rank: 675
score: 94.92564392089844
patch: Simple
rank: 675
score: 94.21122741699219
patch: process
rank: 676
score: 99.02373712713069
patch: out . write write ( ch [ ] ) ;
rank: 676
score: 98.90800645616319
patch: out [ ] out ( ch ) ;
rank: 676
score: 98.85083685980902
patch: out . write ( Long ch ) ;
rank: 676
score: 98.73070526123047
patch: ch . write ( $STRING$ ) ;
rank: 676
score: 96.78855387369792
patch: constructor >
rank: 676
score: 95.66567993164062
patch: filter > i
rank: 676
score: 95.18745930989583
patch: clear State
rank: 676
score: 94.92459869384766
patch: Runtime
rank: 677
score: 99.0229825106534
patch: out . write ( ch . write ( ch )
rank: 677
score: 98.85075547960069
patch: public static out . write ( ) {
rank: 677
score: 98.79856872558594
patch: private void write ( out ) ;
rank: 677
score: 98.72901746961806
patch: out . write ( byte 1 ) {
rank: 677
score: 96.78675333658855
patch: Debug >
rank: 677
score: 95.66534423828125
patch: insert > catch
rank: 677
score: 95.18048095703125
patch: out 0
rank: 677
score: 94.89045715332031
patch: Table
rank: 677
score: 94.19844055175781
patch: handle
rank: 678
score: 98.79824829101562
patch: public int . write ( ) ;
rank: 678
score: 96.78662109375
patch: site >
rank: 678
score: 95.17856852213542
patch: Sys State
rank: 678
score: 94.88746643066406
patch: Add
rank: 678
score: 94.19699096679688
patch: long
rank: 679
score: 98.907275390625
patch: boolean out ( ) throws IO CaMeL Exception ;
rank: 679
score: 98.79779052734375
patch: void ch ( ) ;
rank: 679
score: 98.72678048270089
patch: public out . write ) ;
rank: 679
score: 96.78645833333333
patch: handler >
rank: 679
score: 95.65560913085938
patch: > in
rank: 679
score: 95.17518107096355
patch: write null
rank: 679
score: 94.8872299194336
patch: parent
rank: 679
score: 94.19647979736328
patch: my
rank: 680
score: 99.02077414772727
patch: public abstract String out . write ( ch ) ;
rank: 680
score: 98.90670776367188
patch: out . write ( ch , out . ;
rank: 680
score: 98.79640197753906
patch: out . write ( null ) ;
rank: 680
score: 98.72651672363281
patch: write ( ] ] ch ) ;
rank: 680
score: 95.65433502197266
patch: initialize > catch
rank: 680
score: 94.87667846679688
patch: child
rank: 680
score: 94.19576009114583
patch: save <UNK>
rank: 681
score: 98.90655517578125
patch: out . write ( char [ ] ch )
rank: 681
score: 98.79617309570312
patch: m . write ( ch ) ;
rank: 681
score: 96.78397623697917
patch: instance >
rank: 681
score: 95.65399169921875
patch: update > length
rank: 681
score: 95.1715087890625
patch: void Internal
rank: 681
score: 94.87647247314453
patch: old
rank: 681
score: 94.18846130371094
patch: Uninterruptible
rank: 682
score: 98.84889729817708
patch: synchronized out . write ( value ) ;
rank: 682
score: 96.78345743815105
patch: Cached >
rank: 682
score: 95.65398406982422
patch: include > i
rank: 682
score: 95.16945393880208
patch: Value State
rank: 682
score: 94.18649291992188
patch: Unique
rank: 683
score: 99.0184097290039
patch: out out . write ( ch )
rank: 683
score: 98.90591430664062
patch: out . write ( ch , Integer ) ;
rank: 683
score: 98.79450819227431
patch: public void out ( int i ) {
rank: 683
score: 98.72529432508681
patch: public abstract out . write ( byte ;
rank: 683
score: 96.78190104166667
patch: Menu >
rank: 683
score: 95.65380096435547
patch: namespace > i
rank: 683
score: 95.16813151041667
patch: private Unsupported
rank: 683
score: 94.8671875
patch: Path
rank: 683
score: 94.17772420247395
patch: protected Unsupported
rank: 684
score: 98.84846496582031
patch: public final void out ( ) ;
rank: 684
score: 98.7934341430664
patch: boolean . . write ( ) ;
rank: 684
score: 98.72409493582589
patch: out . write . ) ;
rank: 684
score: 96.7808125813802
patch: Search >
rank: 684
score: 95.65379333496094
patch: has > out
rank: 684
score: 95.16793823242188
patch: void exit
rank: 685
score: 99.01470392400569
patch: out . write ( ch , int ch 1 )
rank: 685
score: 98.90380249023437
patch: out . write ( Char CaMeL Sequence ) ;
rank: 685
score: 98.79328264508929
patch: public boolean write ( ) {
rank: 685
score: 96.78018188476562
patch: build >
rank: 685
score: 95.64877319335938
patch: insert > Index
rank: 685
score: 95.15684000651042
patch: out IO
rank: 685
score: 94.8536605834961
patch: Option
rank: 686
score: 99.01334228515626
patch: out . err . write ( ch ) ;
rank: 686
score: 98.84766734730114
patch: public static void out ( ch [ ] ) ;
rank: 686
score: 98.79310302734375
patch: public out . write ( String ( ) ;
rank: 686
score: 98.72249930245536
patch: write ( ] out ) ;
rank: 686
score: 96.77764892578125
patch: Meta >
rank: 686
score: 95.13572184244792
patch: private Internal
rank: 686
score: 94.1728006998698
patch: abstract String
rank: 687
score: 99.01248168945312
patch: out . write ( ch , int max )
rank: 687
score: 98.90283813476563
patch: out . write ( ch , - ) ;
rank: 687
score: 98.8473876953125
patch: public String [ ] out ( ) { }
rank: 687
score: 98.79259490966797
patch: public void write ( final ) ;
rank: 687
score: 98.71939086914062
patch: write . write ( str ) ;
rank: 687
score: 95.64637756347656
patch: write > catch
rank: 687
score: 94.83587646484375
patch: Index
rank: 687
score: 94.16712951660156
patch: make
rank: 688
score: 99.01209605823864
patch: out . write ( ch , int chars ) ;
rank: 688
score: 98.84596082899306
patch: int . [ ] out ( ) ;
rank: 688
score: 98.79258510044643
patch: protected boolean out ( ) ;
rank: 688
score: 98.71934509277344
patch: out ( ) out ( ) ;
rank: 688
score: 95.1309102376302
patch: protected err
rank: 688
score: 94.82916259765625
patch: data
rank: 688
score: 94.16064453125
patch: DOUBLE
rank: 689
score: 98.90204535590277
patch: public void out . write ( ch )
rank: 689
score: 98.84579467773438
patch: public boolean < String > out ( ) ;
rank: 689
score: 98.79237874348958
patch: private int write . write ( ) ;
rank: 689
score: 98.71807861328125
patch: ch . write ( str ) ;
rank: 689
score: 95.64417266845703
patch: clear > case
rank: 689
score: 94.82365417480469
patch: !
rank: 689
score: 94.1585693359375
patch: Throwable
rank: 690
score: 98.90188259548611
patch: public out . write ( ch . )
rank: 690
score: 98.84508666992187
patch: public static void out ( String ch ) ;
rank: 690
score: 98.79188537597656
patch: int write . write ( ) ;
rank: 690
score: 96.77341715494792
patch: priority >
rank: 690
score: 95.12222290039062
patch: out Out
rank: 690
score: 94.81854248046875
patch: Root
rank: 691
score: 99.00901489257812
patch: out . write ( byte ch [ ] )
rank: 691
score: 98.90115356445312
patch: public void out ( ) out ( ) ;
rank: 691
score: 98.84498901367188
patch: public void out ( ) { / ; }
rank: 691
score: 98.790283203125
patch: int ch ( ) ;
rank: 691
score: 98.71347045898438
patch: public out . write ( this ;
rank: 691
score: 96.7722880045573
patch: Application >
rank: 691
score: 95.64155578613281
patch: if > else
rank: 691
score: 95.119873046875
patch: protected Out
rank: 691
score: 94.81845092773438
patch: push
rank: 691
score: 94.14558919270833
patch: write <UNK>
rank: 692
score: 99.00853881835937
patch: out . write ( char ch [ ] )
rank: 692
score: 98.9006591796875
patch: public Object out ( ) throws IO CaMeL Exception
rank: 692
score: 98.84397583007812
patch: out . write ( ch ) } } ;
rank: 692
score: 96.7701416015625
patch: context >
rank: 692
score: 95.1177978515625
patch: All Stack
rank: 692
score: 94.14311981201172
patch: release
rank: 693
score: 99.00803444602273
patch: out . write ( ch , long start ) ;
rank: 693
score: 98.90005832248264
patch: public abstract boolean out ( ch ) ;
rank: 693
score: 98.84278869628906
patch: public int out ( ) { ;
rank: 693
score: 98.78920491536458
patch: private boolean out . write ( ) ;
rank: 693
score: 96.76895141601562
patch: Content >
rank: 693
score: 95.11170450846355
patch: out run
rank: 693
score: 94.81486511230469
patch: Page
rank: 694
score: 98.89970567491319
patch: out . write ( Object ch ) ;
rank: 694
score: 98.84113311767578
patch: public static void out ( ) {
rank: 694
score: 98.78851928710938
patch: public void out ( ) == null ) ;
rank: 694
score: 98.70016915457589
patch: out . write ch ) ;
rank: 694
score: 94.13746134440105
patch: public CASE
rank: 695
score: 99.00719105113636
patch: out [ 0 ] . write ( ch ) ;
rank: 695
score: 98.89822998046876
patch: out . write ( ch , int write )
rank: 695
score: 98.84088812934027
patch: boolean out . write ( str ) ;
rank: 695
score: 98.78826141357422
patch: Object out . write ( ) ;
rank: 695
score: 98.69832611083984
patch: out . write ( gc ) ;
rank: 695
score: 95.10984293619792
patch: java State
rank: 695
score: 94.81047058105469
patch: Clone
rank: 695
score: 94.12100219726562
patch: key >
rank: 696
score: 98.89684448242187
patch: final int out . write ( ch ) ;
rank: 696
score: 98.78745814732143
patch: void out ( true ) ;
rank: 696
score: 96.7643330891927
patch: NEW >
rank: 696
score: 95.63510131835938
patch: if > null
rank: 696
score: 95.10538736979167
patch: Copy State
rank: 696
score: 94.80877685546875
patch: on
rank: 696
score: 94.11891174316406
patch: Abstract
rank: 697
score: 99.00579833984375
patch: out . write ( ch . intern ( )
rank: 697
score: 98.83972846137152
patch: public out . write ( while ) ;
rank: 697
score: 98.78614807128906
patch: protected void out ( ) { }
rank: 697
score: 98.69638061523438
patch: write . write ( ) ) ;
rank: 697
score: 95.6329345703125
patch: = Stack
rank: 697
score: 95.10498046875
patch: private :
rank: 697
score: 94.80501556396484
patch: register
rank: 698
score: 98.89652709960937
patch: abstract public out . write ( ch ) ;
rank: 698
score: 98.83804321289062
patch: public static out ( ) { }
rank: 698
score: 98.78447875976562
patch: public out . write ( int name ) {
rank: 698
score: 98.69474574497768
patch: out . write ( ch ,
rank: 698
score: 96.75551350911458
patch: Privileged >
rank: 698
score: 95.63200378417969
patch: load > Index
rank: 698
score: 95.09639485677083
patch: data State
rank: 698
score: 94.78684997558594
patch: Pool
rank: 699
score: 99.00462757457386
patch: out . write ( byte ch [ ] ) {
rank: 699
score: 98.83672332763672
patch: out . remove ( ch ) ;
rank: 699
score: 98.78331909179687
patch: public out . write ( String chars ) {
rank: 699
score: 98.6944580078125
patch: write . write ( this ) ;
rank: 699
score: 94.78624725341797
patch: value
rank: 699
score: 94.09318542480469
patch: Task
rank: 700
score: 98.89569091796875
patch: out . write ( ( String ch ) ;
rank: 700
score: 98.83653259277344
patch: out . append ( str ) ;
rank: 700
score: 98.78224182128906
patch: abstract out . write ( ) ;
rank: 700
score: 96.74439493815105
patch: Sort >
rank: 700
score: 95.09303792317708
patch: FreState
rank: 700
score: 94.78567504882812
patch: By
rank: 700
score: 94.09164428710938
patch: Class
rank: 701
score: 99.0040771484375
patch: @ Override out . write ( ch ) {
rank: 701
score: 98.89512329101562
patch: out [ ] write ( ch , ) ;
rank: 701
score: 98.83570692274306
patch: private out . write ( char ) ;
rank: 701
score: 98.78195190429688
patch: private private void out ( ) ;
rank: 701
score: 98.68185860770089
patch: ch . write ( ) ;
rank: 701
score: 96.74007161458333
patch: DOUBLE >
rank: 701
score: 95.09090169270833
patch: void Out
rank: 701
score: 94.77691650390625
patch: Unsupported
rank: 701
score: 94.09100341796875
patch: No
rank: 702
score: 99.0030184659091
patch: public String out ( ) throws IO CaMeL Exception {
rank: 702
score: 98.89476318359375
patch: public abstract void out ( int ch ) ;
rank: 702
score: 98.83561876085069
patch: protected out . write ( name ) ;
rank: 702
score: 98.7812255859375
patch: private out . write ( ) ; null ;
rank: 702
score: 98.6812744140625
patch: out . write ( ) ; }
rank: 702
score: 96.73903401692708
patch: Last >
rank: 702
score: 94.77545166015625
patch: can
rank: 703
score: 99.00175170898437
patch: public abstract write . write ( ch ) ;
rank: 703
score: 98.89473876953124
patch: out . write ( ch , long ) ;
rank: 703
score: 98.83516235351563
patch: out . write ( ch ) out . ;
rank: 703
score: 98.78096771240234
patch: void out ( || ( ) ;
rank: 703
score: 96.73829142252605
patch: PDOM >
rank: 703
score: 95.0894266764323
patch: void iterator
rank: 703
score: 94.77259826660156
patch: Impl
rank: 703
score: 94.08777618408203
patch: Action
rank: 704
score: 99.00115411931819
patch: public void write ( ) throws IO CaMeL Exception {
rank: 704
score: 98.89452514648437
patch: static Object out . write ( ch ) ;
rank: 704
score: 98.78026665581598
patch: public void out ( || ( ) ;
rank: 704
score: 98.67973327636719
patch: out . write ( err ) ;
rank: 704
score: 96.73780314127605
patch: operation >
rank: 704
score: 95.0865987141927
patch: write Stack
rank: 704
score: 94.77159118652344
patch: start
rank: 705
score: 98.8937255859375
patch: out . write ( final int ch ) ;
rank: 705
score: 98.83457438151042
patch: public synchronized out write ( ch ) ;
rank: 705
score: 98.77975899832589
patch: abstract void out ( ) ;
rank: 705
score: 95.078369140625
patch: Method State
rank: 705
score: 94.77120971679688
patch: substring
rank: 705
score: 94.08262125651042
patch: protected >
rank: 706
score: 98.99785822088069
patch: out . write . write ( long ch ) ;
rank: 706
score: 98.89322509765626
patch: public out . write ( ( ch ) ;
rank: 706
score: 98.8343505859375
patch: public synchronized void out ( ) ;
rank: 706
score: 98.77951388888889
patch: out . write ( Integer ch ) {
rank: 706
score: 98.67772565569196
patch: public out ( out ) ;
rank: 706
score: 96.73680623372395
patch: attributes >
rank: 706
score: 95.39656575520833
patch: ;
rank: 706
score: 95.07720947265625
patch: protected catch
rank: 706
score: 94.76902770996094
patch: Trace
rank: 707
score: 98.89229736328124
patch: public void out ( out ) { ; }
rank: 707
score: 98.83403862847223
patch: public String [ ] out ( ) {
rank: 707
score: 98.77749197823661
patch: public Object out ( ) ;
rank: 707
score: 98.67733001708984
patch: public out . write ( $STRING$ ;
rank: 707
score: 94.76518249511719
patch: false
rank: 707
score: 94.07842254638672
patch: NO
rank: 708
score: 98.99574973366477
patch: out . write ( ch , int 1 ) {
rank: 708
score: 98.89218139648438
patch: final out . write ( int ch ) ;
rank: 708
score: 98.83376736111111
patch: public void out ( write ch ) ;
rank: 708
score: 98.777001953125
patch: public static void out ( ) ; null ;
rank: 708
score: 95.06622314453125
patch: static Stack
rank: 708
score: 94.75687408447266
patch: Logger
rank: 708
score: 94.07572428385417
patch: public /
rank: 709
score: 98.995361328125
patch: out . write ( ch , int max ) {
rank: 709
score: 98.89214477539062
patch: out . write ( ch | $NUMBER$ ) ;
rank: 709
score: 98.77651977539062
patch: void write ( int name ) ;
rank: 709
score: 98.67498016357422
patch: private out . write ( ) {
rank: 709
score: 96.73380533854167
patch: catalog >
rank: 709
score: 95.06465657552083
patch: synchronized IO
rank: 709
score: 94.07049560546875
patch: abstract Not
rank: 710
score: 98.99526145241477
patch: out . flush ( ) throws IO CaMeL Exception {
rank: 710
score: 98.89180297851563
patch: public long out . write ( ch ) ;
rank: 710
score: 98.8314697265625
patch: public void out ( String value ) { ;
rank: 710
score: 98.77395629882812
patch: public static void write ( ) ;
rank: 710
score: 98.67382049560547
patch: out . write ( command ) ;
rank: 710
score: 96.73117065429688
patch: activate >
rank: 710
score: 95.05752563476562
patch: void 0
rank: 710
score: 94.75096130371094
patch: Empty
rank: 710
score: 94.06478881835938
patch: object
rank: 711
score: 98.99416281960227
patch: out . write ( long ch [ ] ) ;
rank: 711
score: 98.67265319824219
patch: out . write ( Double ) ;
rank: 711
score: 96.72768147786458
patch: native >
rank: 711
score: 95.04783121744792
patch: final Not
rank: 711
score: 94.06298828125
patch: read
rank: 712
score: 98.99376331676136
patch: out . write ( ch , int count ) {
rank: 712
score: 98.89130859375
patch: void out . write ( ) throws ) ;
rank: 712
score: 98.82904815673828
patch: Iterator out . write ( ) ;
rank: 712
score: 98.771728515625
patch: public boolean out ( out ) ;
rank: 712
score: 98.67103576660156
patch: ch . write ( byte ) ;
rank: 712
score: 96.7254638671875
patch: lock >
rank: 712
score: 95.04681396484375
patch: Ruby State
rank: 712
score: 94.74881744384766
patch: Wrapper
rank: 713
score: 98.99359130859375
patch: final out . write ( ch ) {
rank: 713
score: 98.89090576171876
patch: String out ( ) throws IO CaMeL Exception ;
rank: 713
score: 98.82888454861111
patch: public void out ( out ) { ;
rank: 713
score: 98.67058563232422
patch: public out ( Exception out ) {
rank: 713
score: 95.0421854654948
patch: void Writer
rank: 713
score: 94.74111938476562
patch: Change
rank: 713
score: 94.05662027994792
patch: sleep <UNK>
rank: 714
score: 98.99334716796875
patch: public out . write ( long value ) ;
rank: 714
score: 98.8907470703125
patch: void out ( ) throws Interrupted CaMeL Exception ;
rank: 714
score: 98.82853868272569
patch: String out ( ch + $STRING$ ) ;
rank: 714
score: 98.76775360107422
patch: out . write ( true ) ;
rank: 714
score: 96.71976725260417
patch: job >
rank: 714
score: 95.03676350911458
patch: public FALSE
rank: 714
score: 94.05411783854167
patch: msg >
rank: 715
score: 98.89043579101562
patch: int out ( ) throws IO CaMeL Exception ;
rank: 715
score: 98.767724609375
patch: public void write ( final String ch ) {
rank: 715
score: 98.66851043701172
patch: out . write . out ) ;
rank: 715
score: 96.71748860677083
patch: Selection >
rank: 715
score: 95.03049723307292
patch: void IO
rank: 715
score: 94.73194885253906
patch: key
rank: 716
score: 98.82586669921875
patch: out . write ( String out ) ;
rank: 716
score: 98.76614040798611
patch: out . write ( byte str ) {
rank: 716
score: 98.66581726074219
patch: out . write ( lock ) ;
rank: 716
score: 96.71638997395833
patch: refresh >
rank: 716
score: 95.02707926432292
patch: out Illegal
rank: 716
score: 94.72740173339844
patch: Settings
rank: 717
score: 98.99247602982955
patch: public out . out . write ( ch ) {
rank: 717
score: 98.88823784722223
patch: public out . write ( byte ch )
rank: 717
score: 98.82505289713542
patch: void . . write ( ch ) ;
rank: 717
score: 98.76609802246094
patch: out . write ( false ) ;
rank: 717
score: 98.66462707519531
patch: out . write ( values ) ;
rank: 717
score: 95.09608968098958
patch: instanceof
rank: 717
score: 95.0240478515625
patch: @ IO
rank: 717
score: 94.72586059570312
patch: Name
rank: 717
score: 94.05064392089844
patch: XML
rank: 718
score: 98.88800659179688
patch: out . write ( ch , int ) )
rank: 718
score: 98.82460530598958
patch: / * ] out ( ch ) ;
rank: 718
score: 98.76524658203125
patch: public write . write ( ) ; null ;
rank: 718
score: 98.66450500488281
patch: public out . write ch ) ;
rank: 718
score: 96.70963541666667
patch: Invocation >
rank: 718
score: 95.02335611979167
patch: private arraycopy
rank: 718
score: 94.72572326660156
patch: Listeners
rank: 718
score: 94.04972839355469
patch: Big
rank: 719
score: 98.99156605113636
patch: out . write ( ch , int ch $NUMBER$ )
rank: 719
score: 98.82343885633681
patch: public String CaMeL Buffer out ( ) ;
rank: 719
score: 98.7646713256836
patch: void write ( int Integer ) ;
rank: 719
score: 98.66421944754464
patch: public out ( ) ) ;
rank: 719
score: 96.7095438639323
patch: synchronized protected
rank: 719
score: 95.02243041992188
patch: out Number
rank: 719
score: 94.70613098144531
patch: Provider
rank: 719
score: 94.04904174804688
patch: /
rank: 720
score: 98.88526000976563
patch: synchronized boolean out . write ( ch ) ;
rank: 720
score: 98.82295735677083
patch: boolean out . write ( name ) ;
rank: 720
score: 98.66157531738281
patch: public out ( ] ch ) {
rank: 720
score: 95.0219014485677
patch: Block State
rank: 720
score: 94.04201253255208
patch: < public
rank: 721
score: 98.99094460227273
patch: out . write ( ch . int i ) ;
rank: 721
score: 98.82179768880208
patch: String out . write ( $STRING$ ) ;
rank: 721
score: 98.76246337890625
patch: protected out . write ( int ch ) {
rank: 721
score: 98.6604995727539
patch: public void out ( Exception ) ;
rank: 721
score: 95.01956176757812
patch: protected Thread
rank: 721
score: 94.69074249267578
patch: Id
rank: 721
score: 94.03495025634766
patch: Bundle
rank: 722
score: 98.99052734375
patch: out . write . Byte ( ch ) ;
rank: 722
score: 98.88392333984375
patch: synchronized Object out . write ( ch ) ;
rank: 722
score: 98.76215362548828
patch: public void out ( ) ) ;
rank: 722
score: 96.70635986328125
patch: Running >
rank: 722
score: 95.01829020182292
patch: > Exception
rank: 722
score: 94.68922424316406
patch: Lock
rank: 722
score: 94.02723693847656
patch: xsp
rank: 723
score: 98.8837158203125
patch: out . write ( ch , i ) ;
rank: 723
score: 98.81784057617188
patch: / * ] out ( ) ;
rank: 723
score: 98.65792410714286
patch: out . write . ch ;
rank: 723
score: 95.0166015625
patch: static IO
rank: 723
score: 94.6768798828125
patch: Target
rank: 724
score: 98.98888050426136
patch: out . write ( ch , int SIZE ) {
rank: 724
score: 98.81760660807292
patch: void out . write ( char ) ;
rank: 724
score: 98.76087188720703
patch: long . write ( ch ) ;
rank: 724
score: 98.6573486328125
patch: public out ( Exception ( ) {
rank: 724
score: 95.0099385579427
patch: void ch
rank: 724
score: 94.66748046875
patch: Event
rank: 724
score: 94.02706909179688
patch: flush
rank: 725
score: 98.98818359375
patch: public int out ( ) { return out ;
rank: 725
score: 98.88344116210938
patch: out . write ( ch == $STRING$ ) ;
rank: 725
score: 98.75987025669643
patch: public double out ( ) ;
rank: 725
score: 96.70189412434895
patch: perform >
rank: 725
score: 94.66050720214844
patch: count
rank: 726
score: 98.88333892822266
patch: out . write ( String ch )
rank: 726
score: 98.759814453125
patch: protected out . write ( byte ch ) {
rank: 726
score: 98.6550521850586
patch: write ( out . out ) ;
rank: 726
score: 95.00056966145833
patch: VM Exception
rank: 726
score: 94.65902709960938
patch: Time
rank: 727
score: 98.988037109375
patch: public out . write ( ch . intern ( )
rank: 727
score: 98.81563313802083
patch: List out . write ( ch ) ;
rank: 727
score: 98.75923374720982
patch: public T out ( ) ;
rank: 727
score: 98.65422058105469
patch: public out . write ( char ;
rank: 727
score: 96.6929931640625
patch: Service >
rank: 727
score: 94.99636840820312
patch: final Null
rank: 727
score: 94.65141296386719
patch: Job
rank: 727
score: 94.0205307006836
patch: fire
rank: 728
score: 98.88280639648437
patch: public final out . write ( int ch )
rank: 728
score: 98.81551106770833
patch: String out . write ( char ) ;
rank: 728
score: 98.75859723772321
patch: public void write ( ) {
rank: 728
score: 98.65303802490234
patch: public out ( ) { ) ;
rank: 728
score: 96.692626953125
patch: contents >
rank: 728
score: 94.64999389648438
patch: In
rank: 729
score: 98.882421875
patch: out . write ( ch , ; ) ;
rank: 729
score: 98.81488037109375
patch: out . write ( value ch ) ;
rank: 729
score: 98.75812377929688
patch: public out . write ( boolean str ) {
rank: 729
score: 98.65162658691406
patch: out . write ( arraycopy ) ;
rank: 729
score: 96.69140625
patch: Resources >
rank: 730
score: 98.9864501953125
patch: out . write ( ch . write ( ) {
rank: 730
score: 98.88239135742188
patch: Object out . write ( int ch ) ;
rank: 730
score: 98.81473795572917
patch: public void out ( Integer ch ) ;
rank: 730
score: 98.7578125
patch: public int write ( out ; null ) {
rank: 730
score: 98.65012904575893
patch: out . write ( in ;
rank: 730
score: 96.6890360514323
patch: servlet >
rank: 730
score: 94.98907470703125
patch: void Illegal
rank: 730
score: 94.64204406738281
patch: Iterator
rank: 731
score: 98.98642800071023
patch: protected out . write . write ( ch ) {
rank: 731
score: 98.81368679470486
patch: abstract out . write ( value ) ;
rank: 731
score: 98.75731658935547
patch: void out ( ) ; null ;
rank: 731
score: 98.64984893798828
patch: out . write ( ) ; new
rank: 731
score: 96.68896484375
patch: Show >
rank: 731
score: 94.98876953125
patch: * Exception
rank: 731
score: 94.640869140625
patch: Tracker
rank: 731
score: 94.00023651123047
patch: list
rank: 732
score: 98.9852294921875
patch: out . write ( ch . close ( ) ;
rank: 732
score: 98.88031616210938
patch: void write ( ) throws IO CaMeL Exception ;
rank: 732
score: 98.75707135881696
patch: private boolean write ( ) ;
rank: 732
score: 93.99909210205078
patch: Instance
rank: 733
score: 98.98512961647727
patch: public out . write ( ch . out . ;
rank: 733
score: 98.87989501953125
patch: out . write ( ch ch , ) ;
rank: 733
score: 98.64942278180804
patch: write ( ] 1 ) ;
rank: 733
score: 96.68656412760417
patch: Console >
rank: 733
score: 94.63189697265625
patch: fetch
rank: 734
score: 98.9841641512784
patch: public int out ( ) { return 0 ; }
rank: 734
score: 98.87861328125
patch: out . write ( ch == null ) ;
rank: 734
score: 98.64933776855469
patch: public out . close ( ) {
rank: 734
score: 96.68558756510417
patch: Classes >
rank: 734
score: 94.9825439453125
patch: protected (
rank: 734
score: 94.86257934570312
patch: _
rank: 734
score: 94.628662109375
patch: Bounds
rank: 735
score: 98.87708740234375
patch: public abstract out . write ( String ) ;
rank: 735
score: 98.75538330078125
patch: public out . write ( String i ) {
rank: 735
score: 98.64889090401786
patch: public void out . ) ;
rank: 735
score: 96.6852315266927
patch: First >
rank: 735
score: 94.97671508789062
patch: Elements State
rank: 735
score: 94.62740325927734
patch: end
rank: 736
score: 98.81199815538194
patch: public static void out ( out ) ;
rank: 736
score: 98.7551040649414
patch: public int write ( $STRING$ ) ;
rank: 736
score: 98.64845493861607
patch: public out ( Exception ) {
rank: 736
score: 93.99119567871094
patch: input
rank: 737
score: 98.87642211914063
patch: out . write ( ch - 1 ) ;
rank: 737
score: 98.81149727957589
patch: out . start ( ) ;
rank: 737
score: 98.75493621826172
patch: public void out ( ) { }
rank: 737
score: 98.64807891845703
patch: out . write ( ) . ;
rank: 737
score: 96.68111165364583
patch: Tasks >
rank: 737
score: 94.97322591145833
patch: / Null
rank: 737
score: 94.61962127685547
patch: Classes
rank: 737
score: 93.97865295410156
patch: open
rank: 738
score: 98.87632921006944
patch: out . write ( ch , int )
rank: 738
score: 98.81021118164062
patch: Iterator . write ( ch ) ;
rank: 738
score: 98.75481567382812
patch: out . write ( byte ; null ) {
rank: 738
score: 98.64753723144531
patch: out . write ( byte ) {
rank: 738
score: 96.68028767903645
patch: parameters >
rank: 738
score: 94.97249348958333
patch: Frenull
rank: 738
score: 94.61112976074219
patch: info
rank: 738
score: 93.97515869140625
patch: Tool
rank: 739
score: 98.64551544189453
patch: public out write ( out ) ;
rank: 739
score: 96.67887369791667
patch: pdom >
rank: 739
score: 94.96877034505208
patch: final Runnable
rank: 739
score: 94.60865783691406
patch: it
rank: 739
score: 93.97402954101562
patch: assert
rank: 740
score: 98.98047984730114
patch: protected out . write . write ( ch ) ;
rank: 740
score: 98.87144978841145
patch: public void out ( )
rank: 740
score: 98.80622016059027
patch: out . write ( name ) ) ;
rank: 740
score: 98.75139770507812
patch: final { out . write ( ch ) ;
rank: 740
score: 98.64523315429688
patch: out . write ( final ) ;
rank: 740
score: 96.67854817708333
patch: J >
rank: 740
score: 94.60792541503906
patch: Version
rank: 740
score: 93.95918273925781
patch: java
rank: 741
score: 98.75070529513889
patch: public void out ( int ch ) {
rank: 741
score: 98.64395141601562
patch: public out . write ( in ;
rank: 741
score: 94.96319580078125
patch: private out
rank: 741
score: 94.60611724853516
patch: OK
rank: 741
score: 93.95477294921875
patch: request
rank: 742
score: 98.8704833984375
patch: out . write ( ch , int ;
rank: 742
score: 98.74949645996094
patch: private void out ( ) { }
rank: 742
score: 98.64348602294922
patch: public write ( byte ch ) ;
rank: 742
score: 96.6754659016927
patch: final synchronized
rank: 742
score: 94.96116129557292
patch: Main State
rank: 742
score: 94.59970092773438
patch: User
rank: 742
score: 93.95421600341797
patch: Mock
rank: 743
score: 98.86583116319444
patch: void out . write ( ch , ;
rank: 743
score: 98.80445014105902
patch: boolean out . write ( out ) ;
rank: 743
score: 96.67472330729167
patch: Configurable >
rank: 743
score: 93.95388793945312
patch: Linked
rank: 744
score: 98.86501736111111
patch: out . write ( Short ch ) ;
rank: 744
score: 98.80432807074652
patch: String . [ ] ch ( ) ;
rank: 744
score: 98.74946594238281
patch: void write ( Object ch ) ;
rank: 744
score: 98.64049421037946
patch: write ( ] $NUMBER$ ) ;
rank: 744
score: 96.67455037434895
patch: History >
rank: 745
score: 98.80349392361111
patch: int out . write ( byte ) ;
rank: 745
score: 98.74918365478516
patch: void . write ( out ) ;
rank: 745
score: 98.64021301269531
patch: out . . write ( ) ;
rank: 745
score: 96.6745096842448
patch: Swing >
rank: 745
score: 94.58699035644531
patch: empty
rank: 745
score: 93.9305191040039
patch: logger
rank: 746
score: 98.97741088867187
patch: out . set . write ( ch ) ;
rank: 746
score: 98.86272515190973
patch: out . write ( int value ) ;
rank: 746
score: 98.80301242404514
patch: public out . write ( Byte ) ;
rank: 746
score: 98.74910481770833
patch: public void write ( String str ) {
rank: 746
score: 98.63764953613281
patch: out . write out ( ) ;
rank: 746
score: 96.67242431640625
patch: empty >
rank: 746
score: 94.58690643310547
patch: Date
rank: 746
score: 93.91754150390625
patch: expected
rank: 747
score: 98.97693481445313
patch: out . out . write ( $STRING$ ) ;
rank: 747
score: 98.80270724826389
patch: public static out write ( byte ) ;
rank: 747
score: 98.74862060546874
patch: public out . write ( int chars ) {
rank: 747
score: 98.63580322265625
patch: public out ( ) out ) ;
rank: 747
score: 96.67173258463542
patch: change >
rank: 747
score: 94.57441711425781
patch: create
rank: 748
score: 98.9760409268466
patch: public out . write ( Char CaMeL Sequence str )
rank: 748
score: 98.85991075303819
patch: public void out ( ch , ) ;
rank: 748
score: 98.80257161458333
patch: String out . write ( String ) ;
rank: 748
score: 98.74849853515624
patch: public out . write ( boolean ch ) {
rank: 748
score: 94.71053059895833
patch: =
rank: 748
score: 94.56707000732422
patch: -
rank: 748
score: 93.91531372070312
patch: call
rank: 749
score: 98.859619140625
patch: out . write ( ( char ) ;
rank: 749
score: 98.80112033420139
patch: public void out ( boolean value ) ;
rank: 749
score: 98.74832492404514
patch: public int out ( ) { ; }
rank: 749
score: 98.63496398925781
patch: out . write ( flush ) ;
rank: 749
score: 96.66494750976562
patch: server >
rank: 749
score: 94.56301879882812
patch: ret
rank: 749
score: 94.54188537597656
patch: send
rank: 749
score: 93.91520690917969
patch: save
rank: 750
score: 98.85887315538194
patch: public out . write ( String value )
rank: 750
score: 98.80032687717014
patch: synchronized out . write ( name ) ;
rank: 750
score: 98.74740600585938
patch: public protected out ( ) { }
rank: 750
score: 94.56192016601562
patch: End
rank: 750
score: 93.91036987304688
patch: Test
rank: 751
score: 98.97434692382812
patch: out . write ( ch , int SIZE )
rank: 751
score: 98.74710083007812
patch: final void write ( out ) ;
rank: 751
score: 98.63394927978516
patch: public write ( int ch ) ;
rank: 751
score: 94.55926513671875
patch: search
rank: 751
score: 94.52255249023438
patch: IRI
rank: 751
score: 93.90901184082031
patch: sort
rank: 752
score: 98.97273393110795
patch: out . write ( ch . format ( ) {
rank: 752
score: 98.85620795355902
patch: public out . write ( ) throws )
rank: 752
score: 98.74671630859375
patch: public out . write ( int i ) {
rank: 752
score: 98.63351440429688
patch: out . write ( read ) ;
rank: 752
score: 96.66121419270833
patch: page >
rank: 752
score: 94.55851745605469
patch: file
rank: 752
score: 93.90776062011719
patch: Process
rank: 753
score: 98.85544840494792
patch: public out . write ( String name )
rank: 753
score: 98.79880777994792
patch: public static void write ( byte ) ;
rank: 753
score: 98.74610246930804
patch: private int out ( ) {
rank: 753
score: 98.63125174386161
patch: out ( Exception ch ) ;
rank: 753
score: 96.65676879882812
patch: Temporary >
rank: 753
score: 93.89794921875
patch: report
rank: 754
score: 98.970703125
patch: private out . write ( ch )
rank: 754
score: 98.79804823133681
patch: public static out write ( ch ) ;
rank: 754
score: 98.74591827392578
patch: void out ( ch ch ) ;
rank: 754
score: 98.62831115722656
patch: out . write ( Math ) ;
rank: 754
score: 96.65463256835938
patch: action >
rank: 754
score: 94.54454803466797
patch: For
rank: 754
score: 93.89024353027344
patch: message
rank: 755
score: 98.97066650390624
patch: out . write . write ( chars ) ;
rank: 755
score: 98.85240342881944
patch: out . write ( byte key ) ;
rank: 755
score: 98.79793294270833
patch: String out . write ( out ) ;
rank: 755
score: 98.74559936523437
patch: public out . write ( String Character ) {
rank: 755
score: 98.62812805175781
patch: out . write ( $STRING$ ) throws
rank: 755
score: 96.65445963541667
patch: accept >
rank: 755
score: 94.54118347167969
patch: Tree
rank: 755
score: 94.47267150878906
patch: invoke
rank: 755
score: 93.88958740234375
patch: non
rank: 756
score: 98.96796264648438
patch: write . write . ch ( ch ) ;
rank: 756
score: 98.85203721788194
patch: public void out ( final ch ) ;
rank: 756
score: 98.74223327636719
patch: boolean write . write ( ) ;
rank: 756
score: 96.64979044596355
patch: original >
rank: 756
score: 94.46185302734375
patch: Updatable
rank: 756
score: 93.88807678222656
patch: a
rank: 757
score: 98.79768880208333
patch: out . write ( ch ) return ;
rank: 757
score: 98.74215698242188
patch: public void out ( false ) ;
rank: 757
score: 98.62612915039062
patch: write . write . write ) ;
rank: 757
score: 96.64955647786458
patch: Work >
rank: 757
score: 94.5252685546875
patch: Input
rank: 758
score: 98.79753960503473
patch: Object out . write ( name ) ;
rank: 758
score: 98.62471771240234
patch: public out . ; . out ;
rank: 758
score: 96.64827473958333
patch: Peer >
rank: 758
score: 94.50376892089844
patch: f
rank: 758
score: 93.87380981445312
patch: state
rank: 759
score: 98.96583140980114
patch: public synchronized void out . write ( ch ) {
rank: 759
score: 98.84661102294922
patch: out . write ( int ch )
rank: 759
score: 98.7407470703125
patch: out . write ( byte str ch ) {
rank: 759
score: 98.62445831298828
patch: out . write ( ch ch ;
rank: 759
score: 96.64243570963542
patch: Filtered >
rank: 759
score: 94.50265502929688
patch: Response
rank: 759
score: 93.8724136352539
patch: True
rank: 760
score: 98.79655456542969
patch: public out . write ( String ;
rank: 760
score: 98.74032592773438
patch: public out . write ( String ( ) {
rank: 760
score: 93.86845397949219
patch: double
rank: 761
score: 98.84377615792411
patch: Object out ( ch ) ;
rank: 761
score: 98.79587809244792
patch: out . write ( value ) } ;
rank: 761
score: 98.7381591796875
patch: long out . write ( ) ;
rank: 761
score: 98.62299346923828
patch: out . write ( max ) ;
rank: 761
score: 96.63700358072917
patch: Id >
rank: 761
score: 94.57908121744792
patch: !=
rank: 761
score: 93.86615753173828
patch: plugin
rank: 762
score: 98.96331787109375
patch: private out . write ( ch [ ] )
rank: 762
score: 98.79561360677083
patch: private out . write ( value ) ;
rank: 762
score: 98.73740059988839
patch: private out ( ) { }
rank: 762
score: 98.62246704101562
patch: public out . write ( str ;
rank: 762
score: 94.55794270833333
patch: fill
rank: 762
score: 94.490478515625
patch: Handle
rank: 762
score: 93.86276245117188
patch: Remote
rank: 763
score: 98.9615811434659
patch: protected void out ( ) throws IO CaMeL Exception {
rank: 763
score: 98.84224446614583
patch: out . write ( byte ) ; ;
rank: 763
score: 98.79537200927734
patch: protected void out ( ) { ;
rank: 763
score: 98.73570421006944
patch: private void out ( int i ) {
rank: 763
score: 96.63580322265625
patch: Checked >
rank: 763
score: 94.48703002929688
patch: same
rank: 764
score: 98.83921813964844
patch: out . write ( ) ; ;
rank: 764
score: 98.79416232638889
patch: public out . write ( float ) ;
rank: 764
score: 98.73335484095982
patch: public private out ( ) {
rank: 764
score: 96.63492838541667
patch: stack >
rank: 764
score: 94.48269653320312
patch: ?
rank: 765
score: 98.96078491210938
patch: out out . write ( ch ) ; ;
rank: 765
score: 98.61851501464844
patch: write ( out . ch ) ;
rank: 765
score: 96.63472493489583
patch: global >
rank: 765
score: 94.48086547851562
patch: Dialog
rank: 765
score: 94.183349609375
patch: Print
rank: 765
score: 93.85397338867188
patch: Entity
rank: 766
score: 98.82724338107639
patch: protected void out ( ) { ; }
rank: 766
score: 98.73213026258681
patch: private void out ( ) { ; }
rank: 766
score: 98.616455078125
patch: public out write ( ch ) ;
rank: 766
score: 96.63399251302083
patch: Interpreter >
rank: 766
score: 94.54248046875
patch: exit
rank: 766
score: 94.16146850585938
patch: Psi
rank: 766
score: 93.85079956054688
patch: matches
rank: 767
score: 98.96043812144886
patch: final out . write ( ch [ ] ) {
rank: 767
score: 98.82719421386719
patch: public out . write ( byte )
rank: 767
score: 98.61491394042969
patch: out . write ( byte ) throws
rank: 767
score: 96.63315836588542
patch: factory >
rank: 767
score: 94.46953582763672
patch: Listener
rank: 767
score: 94.15677642822266
patch: as
rank: 767
score: 93.8470230102539
patch: unmodifiable
rank: 768
score: 98.95976118607955
patch: public out . write ( write ( ch ) {
rank: 768
score: 98.82684326171875
patch: public void out ( ) throws Exception ;
rank: 768
score: 98.731494140625
patch: out . write ( byte ch ) ) }
rank: 768
score: 98.61426653180804
patch: out . write ( byte ;
rank: 768
score: 96.63303629557292
patch: pre >
rank: 769
score: 98.95953924005681
patch: public boolean out ( ) throws IO CaMeL Exception {
rank: 769
score: 98.73148890904018
patch: int void out ( ) ;
rank: 769
score: 98.61163330078125
patch: public boolean out ( ) ) ;
rank: 769
score: 94.46003723144531
patch: Local
rank: 769
score: 93.84318542480469
patch: ATTR
rank: 770
score: 98.78846740722656
patch: out . write ( escape ) ;
rank: 770
score: 98.7313741048177
patch: long out ( ) ;
rank: 770
score: 94.5212910970052
patch: Security
rank: 770
score: 94.45773315429688
patch: e
rank: 770
score: 93.84095001220703
patch: use
rank: 771
score: 98.82537841796875
patch: public out . write ( ch $NUMBER$ )
rank: 771
score: 98.78809950086806
patch: public void . write ( ch ) ;
rank: 771
score: 98.60955810546875
patch: out . write ( list ) ;
rank: 771
score: 96.63118489583333
patch: Core >
rank: 771
score: 94.51497395833333
patch: load
rank: 771
score: 94.4542236328125
patch: URL
rank: 771
score: 93.83564758300781
patch: descriptor
rank: 772
score: 98.95750843394886
patch: out . write ( ch , int length ) {
rank: 772
score: 98.82502746582031
patch: public out . write ( char )
rank: 772
score: 98.72937774658203
patch: public write ( int str ) ;
rank: 772
score: 98.6075439453125
patch: write ( ch ) ;
rank: 772
score: 96.63010660807292
patch: Declared >
rank: 772
score: 94.50738525390625
patch: Sorted catch
rank: 772
score: 94.45235443115234
patch: ac
rank: 772
score: 93.83441162109375
patch: Running
rank: 773
score: 98.72929164341518
patch: public Object write ( ) ;
rank: 773
score: 96.6292724609375
patch: Validation >
rank: 773
score: 94.45162200927734
patch: ex
rank: 773
score: 94.06144714355469
patch: Sequence
rank: 773
score: 93.82492065429688
patch: Concrete
rank: 774
score: 98.82501898871527
patch: public static out . write ( ch )
rank: 774
score: 98.78567843967014
patch: double out . write ( ch ) ;
rank: 774
score: 98.728515625
patch: Object out ( ) ;
rank: 774
score: 96.62904866536458
patch: MULTI >
rank: 774
score: 94.5027364095052
patch: filter >
rank: 774
score: 94.45146179199219
patch: local
rank: 775
score: 98.78466796875
patch: public void out ( ch . write ;
rank: 775
score: 98.7277603149414
patch: int ch . write ( ) ;
rank: 775
score: 98.59793526785714
patch: write ( ] str ) ;
rank: 775
score: 96.6287129720052
patch: Build >
rank: 775
score: 94.03900146484375
patch: Copy
rank: 775
score: 93.82157135009766
patch: Int
rank: 776
score: 98.94880981445313
patch: public out ( ) { super ( ) ;
rank: 776
score: 98.72693634033203
patch: public abstract private out ( ) ;
rank: 776
score: 98.58718436104911
patch: out . write . out ;
rank: 776
score: 96.62691243489583
patch: top >
rank: 776
score: 94.44485473632812
patch: Builder
rank: 776
score: 93.81998443603516
patch: show
rank: 777
score: 98.72627258300781
patch: public long write ( ch ) ;
rank: 777
score: 98.58694893973214
patch: public boolean out . ) ;
rank: 777
score: 96.62601725260417
patch: Outline >
rank: 777
score: 94.44464111328125
patch: Source
rank: 777
score: 93.81541442871094
patch: Active
rank: 778
score: 98.81941053602431
patch: out . write ( String ( ) ;
rank: 778
score: 98.77865261501736
patch: public byte [ ] out ( ) {
rank: 778
score: 98.72598266601562
patch: void write ( int i ) ;
rank: 778
score: 98.58469645182292
patch: public out . out ;
rank: 778
score: 96.62461344401042
patch: Example >
rank: 778
score: 94.444091796875
patch: Frame
rank: 778
score: 94.01777648925781
patch: augs
rank: 778
score: 93.81358337402344
patch: user
rank: 779
score: 98.946630859375
patch: protected final out . write ( ch ) {
rank: 779
score: 98.77810232979911
patch: public static out ( ) {
rank: 779
score: 98.72523803710938
patch: public void out ( ) != null ) {
rank: 779
score: 96.62442016601562
patch: Selected >
rank: 779
score: 94.46974690755208
patch: for catch
rank: 779
score: 94.44171142578125
patch: Later
rank: 779
score: 93.80241394042969
patch: from
rank: 780
score: 98.945458984375
patch: out . write ( ch . chars ) ;
rank: 780
score: 98.81668429904514
patch: public out . write ( boolean ch )
rank: 780
score: 98.7769775390625
patch: public synchronized out write ( ) ;
rank: 780
score: 98.72447509765625
patch: protected out . write ( ) ; null ;
rank: 780
score: 98.57807006835938
patch: write ( ) ;
rank: 780
score: 96.6241963704427
patch: Operation >
rank: 780
score: 94.46631876627605
patch: transform >
rank: 780
score: 94.43998718261719
patch: src
rank: 780
score: 93.7900390625
patch: Declared
rank: 781
score: 98.77439880371094
patch: public void out ( String ) ;
rank: 781
score: 98.56924002511161
patch: public write ( ch ) ;
rank: 781
score: 93.78407287597656
patch: filter
rank: 782
score: 98.81231011284723
patch: out . write ( Writer out ) ;
rank: 782
score: 98.77423095703125
patch: out . write ( directory ) ;
rank: 782
score: 98.56231079101562
patch: public out ) ;
rank: 782
score: 94.43138122558594
patch: Menu
rank: 782
score: 94.00332641601562
patch: select
rank: 783
score: 98.94484252929688
patch: private final out . write ( ch ) {
rank: 783
score: 98.7737045288086
patch: out . write ( Short ) ;
rank: 783
score: 98.72279866536458
patch: public private out ( ) { ; }
rank: 783
score: 96.62013753255208
patch: Site >
rank: 783
score: 93.77884674072266
patch: Enabled
rank: 784
score: 98.76912144252232
patch: String out ( ch ) ;
rank: 784
score: 98.72151947021484
patch: void . write ( str ) ;
rank: 784
score: 98.55575997488839
patch: public out write ( ) ;
rank: 784
score: 94.42485046386719
patch: Location
rank: 784
score: 93.93063354492188
patch: byte
rank: 784
score: 93.77604675292969
patch: v
rank: 785
score: 98.94245147705078
patch: public out . flush ( ) {
rank: 785
score: 98.72023010253906
patch: final void out ( ch ) ;
rank: 785
score: 98.54863630022321
patch: public out . ) ) ;
rank: 785
score: 94.41973876953125
patch: Millis
rank: 785
score: 93.92120361328125
patch: Sorted
rank: 785
score: 93.76974487304688
patch: Current
rank: 786
score: 98.80512152777777
patch: out . write ( final ch , ;
rank: 786
score: 98.71986389160156
patch: final void write ( $STRING$ ) ;
rank: 786
score: 96.61134847005208
patch: Init >
rank: 786
score: 94.43670654296875
patch: sleep
rank: 787
score: 98.942041015625
patch: out . write ( ch . trim ) ;
rank: 787
score: 98.80484008789062
patch: public void out ( ch ) {
rank: 787
score: 98.76643371582031
patch: String . [ ] . ) ;
rank: 787
score: 98.71957833426339
patch: public long out ( ) ;
rank: 787
score: 98.54430280412946
patch: write ( ] [ ) ;
rank: 787
score: 96.6090596516927
patch: Complete >
rank: 787
score: 93.90834045410156
patch: and
rank: 787
score: 93.76628112792969
patch: Category
rank: 788
score: 98.93997802734376
patch: public int out . write ( ch ) {
rank: 788
score: 98.76628960503473
patch: public String CaMeL Buffer out ( ) {
rank: 788
score: 98.71954345703125
patch: public static void write ( int ch ) {
rank: 788
score: 98.5389892578125
patch: public out . ;
rank: 788
score: 96.60890706380208
patch: Table >
rank: 788
score: 94.40752410888672
patch: Filter
rank: 788
score: 93.75362396240234
patch: schedule
rank: 789
score: 98.71905517578125
patch: protected boolean write ( ) ;
rank: 789
score: 96.60802205403645
patch: editor >
rank: 790
score: 98.93812866210938
patch: out . write ( ch . ch ) {
rank: 790
score: 98.75687662760417
patch: out . write ( ch ) ) }
rank: 790
score: 98.71832953559027
patch: public void write ( int ch ) {
rank: 790
score: 96.60579427083333
patch: Byte >
rank: 790
score: 93.88327026367188
patch: extends
rank: 791
score: 98.71829223632812
patch: void write ( int $STRING$ ) ;
rank: 791
score: 98.53531319754464
patch: public out . ; ) ;
rank: 791
score: 96.60376993815105
patch: Original >
rank: 791
score: 94.4180908203125
patch: ret >
rank: 791
score: 94.39295959472656
patch: Encoding
rank: 791
score: 93.74371337890625
patch: >>
rank: 792
score: 98.93765869140626
patch: out . write ( Char CaMeL Sequence ch )
rank: 792
score: 98.79341125488281
patch: protected out . write ( ch )
rank: 792
score: 98.71761067708333
patch: public out . write ( ) ; null
rank: 792
score: 98.53085763113839
patch: public out out ( ) ;
rank: 792
score: 96.6028340657552
patch: config >
rank: 792
score: 94.40897623697917
patch: xor
rank: 792
score: 94.38990783691406
patch: Descriptor
rank: 792
score: 93.74264526367188
patch: singleton
rank: 793
score: 98.93755493164062
patch: public out ( ) throws IO CaMeL Exception {
rank: 793
score: 98.7933349609375
patch: public String out ( ch ) ;
rank: 793
score: 98.75006103515625
patch: String . . . . ) ;
rank: 793
score: 98.71502685546875
patch: public out . write ( byte ( ) {
rank: 793
score: 98.52979387555804
patch: public out . ch ) ;
rank: 793
score: 96.60188802083333
patch: Get >
rank: 793
score: 94.38829040527344
patch: Closed
rank: 793
score: 93.85762023925781
patch: Long
rank: 793
score: 93.73866271972656
patch: num
rank: 794
score: 98.79327392578125
patch: public abstract String out ( ch ) ;
rank: 794
score: 98.7490234375
patch: out . write ( next ) ;
rank: 794
score: 98.71409606933594
patch: byte [ ] out ( ) ;
rank: 794
score: 98.52877371651786
patch: write . out ( ) ;
rank: 794
score: 96.60042317708333
patch: Is >
rank: 794
score: 93.84368896484375
patch: Remove
rank: 795
score: 98.93355102539063
patch: out . write ( ch . trim ( )
rank: 795
score: 98.79324001736111
patch: out . write ( Byte ( ) ;
rank: 795
score: 98.71408420138889
patch: write . write ( ) ; null ;
rank: 795
score: 98.52009800502232
patch: public out ( ch ) ;
rank: 795
score: 96.59994506835938
patch: marker >
rank: 795
score: 94.40194702148438
patch: proxy >
rank: 795
score: 94.38676452636719
patch: Conf
rank: 795
score: 93.72975158691406
patch: Logging
rank: 796
score: 98.93244018554688
patch: public abstract void write ( final ch ) ;
rank: 796
score: 98.71362982855902
patch: public int write ( ) ; null ;
rank: 796
score: 98.51619175502232
patch: out . write ( this ;
rank: 796
score: 96.59695434570312
patch: io >
rank: 796
score: 93.82266235351562
patch: block
rank: 797
score: 98.78610229492188
patch: public abstract boolean out ( ) ;
rank: 797
score: 98.71358489990234
patch: my . write ( ch ) ;
rank: 797
score: 98.51520647321429
patch: . . write ( ) ;
rank: 797
score: 96.59659830729167
patch: Cache >
rank: 797
score: 93.81886291503906
patch: E
rank: 797
score: 93.72340393066406
patch: remaining
rank: 798
score: 98.9316650390625
patch: out . write ( ch . out . ;
rank: 798
score: 98.78428819444444
patch: out . write ( out , ) ;
rank: 798
score: 98.7118911743164
patch: protected private void out ( ) ;
rank: 798
score: 98.51329694475446
patch: public write out ( ) ;
rank: 798
score: 96.59629313151042
patch: Local >
rank: 798
score: 94.38175964355469
patch: Signature
rank: 799
score: 98.78314887152777
patch: public synchronized void out ( ch ) ;
rank: 799
score: 98.74120330810547
patch: public abstract int out ( ) ;
rank: 799
score: 98.71176147460938
patch: public void write ( String str ) ; }
rank: 799
score: 98.51004028320312
patch: write ( $STRING$ ) ;
rank: 799
score: 96.59187825520833
patch: peer >
rank: 799
score: 94.38075256347656
patch: And
rank: 799
score: 94.37793986002605
patch: interfaces >
rank: 799
score: 93.81013488769531
patch: Cursor
rank: 800
score: 98.74112955729167
patch: public void out ( ) { return ;
rank: 800
score: 98.71158599853516
patch: public void out ( ? ) ;
rank: 800
score: 98.50636800130208
patch: public abstract out ) ;
rank: 800
score: 96.59108479817708
patch: statements >
rank: 800
score: 94.3791275024414
patch: Wizard
rank: 800
score: 93.80320739746094
patch: Buffered
rank: 801
score: 98.92863633897569
patch: public int out . write ( ch )
rank: 801
score: 98.78256564670139
patch: out . write ( write ( ) ;
rank: 801
score: 98.74018096923828
patch: write . write ( name ) ;
rank: 801
score: 98.50325520833333
patch: public out ( Exception ;
rank: 801
score: 96.59049479166667
patch: attribute >
rank: 801
score: 94.37519836425781
patch: class
rank: 802
score: 98.92747192382812
patch: out [ ] . write ( ch ) ;
rank: 802
score: 96.5887451171875
patch: Refresh >
rank: 802
score: 93.70957946777344
patch: status
rank: 803
score: 98.78153773716518
patch: public out . write ( )
rank: 803
score: 98.73823547363281
patch: out . write ( Long ) ;
rank: 803
score: 96.58777872721355
patch: deleted >
rank: 803
score: 94.37394714355469
patch: Resources
rank: 803
score: 94.3612060546875
patch: @ catch
rank: 803
score: 93.70848083496094
patch: session
rank: 804
score: 98.78148057725694
patch: public void out ( ch ) throws )
rank: 804
score: 98.73495144314236
patch: public void out ( String ch ) {
rank: 804
score: 98.70992606026786
patch: boolean write ( ch ) ;
rank: 804
score: 96.58719889322917
patch: Read >
rank: 804
score: 94.37260437011719
patch: Command
rank: 804
score: 93.77478790283203
patch: Trigger
rank: 804
score: 93.708251953125
patch: error
rank: 805
score: 98.78122287326389
patch: out . write ( ch | ) ;
rank: 805
score: 98.7330322265625
patch: Thread . write ( ch ) ;
rank: 805
score: 98.70919799804688
patch: void out ( int length ) ;
rank: 805
score: 98.49414934430804
patch: out . write ( ) )
rank: 805
score: 96.58677164713542
patch: mark >
rank: 805
score: 94.37152099609375
patch: Supported
rank: 805
score: 93.77265930175781
patch: Read
rank: 805
score: 93.70159912109375
patch: Check
rank: 806
score: 98.9225830078125
patch: out out . write ( ch $NUMBER$ ) ;
rank: 806
score: 98.781005859375
patch: public Object out ( ch ) ;
rank: 806
score: 98.49234444754464
patch: public boolean out . out ;
rank: 806
score: 96.58648681640625
patch: Sample >
rank: 806
score: 93.697509765625
patch: reset
rank: 807
score: 98.92221069335938
patch: write . write ( ch ) {
rank: 807
score: 98.73121643066406
patch: public String [ ] . . ;
rank: 807
score: 98.70796712239583
patch: public void write ( int str ) {
rank: 807
score: 98.48488943917411
patch: public out ( ) { .
rank: 807
score: 96.58616129557292
patch: waiting >
rank: 807
score: 94.36808013916016
patch: Repository
rank: 807
score: 93.76637268066406
patch: Block
rank: 807
score: 93.69281005859375
patch: short
rank: 808
score: 98.72810363769531
patch: public void out ( byte ) ;
rank: 808
score: 98.7073486328125
patch: public private void out ( ) ; null ;
rank: 808
score: 98.48196847098214
patch: public out . out ) ;
rank: 808
score: 94.36567687988281
patch: node
rank: 808
score: 94.32893880208333
patch: methods >
rank: 808
score: 93.76165008544922
patch: lock
rank: 808
score: 93.68888854980469
patch: offset
rank: 809
score: 98.77747938368056
patch: out . write ( byte size ) ;
rank: 809
score: 98.72770690917969
patch: public void out ( Object ) ;
rank: 809
score: 98.70732879638672
patch: private public void out ( ) ;
rank: 809
score: 98.48118082682292
patch: public out . ch ;
rank: 809
score: 96.58568318684895
patch: running >
rank: 809
score: 94.36414337158203
patch: minor
rank: 809
score: 94.32632446289062
patch: in
rank: 809
score: 93.68070983886719
patch: False
rank: 810
score: 98.92024739583333
patch: public write . write ( ch ) {
rank: 810
score: 98.72663879394531
patch: out . set ( ch ) ;
rank: 810
score: 98.70608520507812
patch: public void write ( int byte $NUMBER$ ) {
rank: 810
score: 98.47415597098214
patch: public boolean ch ( ) ;
rank: 810
score: 96.58245849609375
patch: byte >
rank: 810
score: 94.36238098144531
patch: Config
rank: 810
score: 93.67830657958984
patch: MAX
rank: 811
score: 98.91871337890625
patch: out . write ( ch . key ) {
rank: 811
score: 98.77509223090277
patch: out . write ( ch . ; )
rank: 811
score: 98.7233657836914
patch: public void out ( final ) ;
rank: 811
score: 98.47354561941964
patch: public void out ( Exception ;
rank: 811
score: 96.58231608072917
patch: result >
rank: 811
score: 94.36224365234375
patch: update
rank: 812
score: 98.7231674194336
patch: out . start ( ch ) ;
rank: 812
score: 98.70512390136719
patch: void out ( - i ) ;
rank: 812
score: 98.47291782924107
patch: public public out ( ) {
rank: 812
score: 96.58141072591145
patch: Children >
rank: 812
score: 94.3545913696289
patch: With
rank: 812
score: 94.30911254882812
patch: stop >
rank: 813
score: 98.91719360351563
patch: out . write . long ( ch ) ;
rank: 813
score: 98.77320692274306
patch: out . write ( ch == ) ;
rank: 813
score: 98.72291782924107
patch: public abstract out ( ) ;
rank: 813
score: 98.70396423339844
patch: void out ( Exception ch ) ;
rank: 813
score: 96.5809326171875
patch: Message >
rank: 813
score: 93.67430114746094
patch: suffix
rank: 814
score: 98.91634521484374
patch: out . write ( ch . long ) ;
rank: 814
score: 98.77311488560268
patch: public void out ( ch )
rank: 814
score: 98.7205581665039
patch: public void out ( out ) {
rank: 814
score: 98.70366559709821
patch: public float out ( ) ;
rank: 814
score: 98.46778215680804
patch: write ( ] name ) ;
rank: 814
score: 96.57798258463542
patch: Resolve >
rank: 814
score: 94.3482666015625
patch: Parameter
rank: 814
score: 93.70040893554688
patch: output
rank: 815
score: 98.71959686279297
patch: String . [ ] . . ;
rank: 815
score: 98.70145416259766
patch: public private out ( ) { ;
rank: 815
score: 96.57774861653645
patch: target >
rank: 815
score: 94.34547424316406
patch: tmp
rank: 815
score: 93.672119140625
patch: increment
rank: 816
score: 98.91518147786458
patch: out . write ( ch $NUMBER$ ) {
rank: 816
score: 98.76988389756944
patch: Thread out . write ( ch ) ;
rank: 816
score: 98.71937561035156
patch: out . write ( double ) ;
rank: 816
score: 98.70126778738839
patch: private String out ( ) ;
rank: 816
score: 98.46581159319196
patch: write ( byte ch ) ;
rank: 816
score: 96.5759989420573
patch: bad >
rank: 816
score: 94.34274291992188
patch: properties
rank: 816
score: 93.6840591430664
patch: T
rank: 816
score: 93.66952514648438
patch: Permission
rank: 817
score: 98.91431342230902
patch: out . write ( ch ) { ;
rank: 817
score: 98.76934051513672
patch: out [ write ( ch ) ;
rank: 817
score: 98.71835327148438
patch: public boolean out ( ) { }
rank: 817
score: 98.70035226004464
patch: void out ( ) ) ;
rank: 817
score: 98.46428571428571
patch: public write ( $STRING$ ) ;
rank: 817
score: 93.65990447998047
patch: My
rank: 818
score: 98.91429307725694
patch: write out . write ( ch ) ;
rank: 818
score: 98.7692642211914
patch: try . write ( ch ) ;
rank: 818
score: 98.71830531529018
patch: public void out ( Object ;
rank: 818
score: 98.69898332868304
patch: static void write ( ) ;
rank: 818
score: 98.46339925130208
patch: out ( out ) ;
rank: 818
score: 94.34107208251953
patch: copy
rank: 818
score: 93.67362976074219
patch: dispose
rank: 818
score: 93.65571594238281
patch: ignore
rank: 819
score: 98.71717834472656
patch: out . write ( format ) ;
rank: 819
score: 98.69852992466518
patch: int out ( ch ) ;
rank: 819
score: 98.46180071149554
patch: out . write ( ) .
rank: 819
score: 94.33590698242188
patch: id
rank: 819
score: 93.66141510009766
patch: stop
rank: 819
score: 93.65158081054688
patch: enabled
rank: 820
score: 98.91309814453125
patch: out . write . write ( byte ) ;
rank: 820
score: 98.71636199951172
patch: public String . . . . ;
rank: 820
score: 98.69844055175781
patch: private boolean write ( ch ) ;
rank: 820
score: 98.45894949776786
patch: public write ( out ) ;
rank: 820
score: 96.57000732421875
patch: EOF >
rank: 820
score: 94.3355941772461
patch: path
rank: 821
score: 98.71600341796875
patch: out . append ( name ) ;
rank: 821
score: 98.69802420479911
patch: protected out ( ) { }
rank: 821
score: 98.45775495256696
patch: public public out . ) ;
rank: 821
score: 96.568115234375
patch: Root >
rank: 821
score: 94.33540344238281
patch: Tasks
rank: 821
score: 93.64596557617188
patch: Comparator
rank: 822
score: 98.91204833984375
patch: synchronized out . write ( ch ) {
rank: 822
score: 98.7158203125
patch: public void out ( ) return ;
rank: 822
score: 98.69716099330357
patch: write ( Object ch ) ;
rank: 822
score: 98.45177350725446
patch: write ( ] byte ) ;
rank: 822
score: 96.56642659505208
patch: use >
rank: 822
score: 94.32911682128906
patch: If
rank: 822
score: 93.65039825439453
patch: float
rank: 823
score: 98.74676513671875
patch: public abstract String out ( ) ;
rank: 823
score: 98.69476318359375
patch: public void write ( String ch ) {
rank: 823
score: 98.45002964564732
patch: public out ( ) { public
rank: 823
score: 96.5651143391927
patch: For >
rank: 823
score: 93.64128112792969
patch: Invocation
rank: 824
score: 98.69294084821429
patch: void ch ( ch ) ;
rank: 824
score: 98.44398716517857
patch: public out ( out ) {
rank: 824
score: 96.56388346354167
patch: exit >
rank: 824
score: 94.32624816894531
patch: random
rank: 824
score: 93.64656066894531
patch: CaMeL
rank: 824
score: 93.607666015625
patch: initialize
rank: 825
score: 98.71052769252232
patch: String out ( ) { ;
rank: 825
score: 98.44253540039062
patch: public write ( ) ;
rank: 825
score: 96.5631815592448
patch: Collision >
rank: 825
score: 94.32603454589844
patch: Image
rank: 825
score: 93.63825988769531
patch: Method
rank: 826
score: 98.90853881835938
patch: protected out . write ( ch [ ] )
rank: 826
score: 98.7354965209961
patch: out [ ] out ( ) ;
rank: 826
score: 98.69138881138393
patch: write ( int str ) ;
rank: 826
score: 96.55806477864583
patch: Reset >
rank: 826
score: 93.63578796386719
patch: Z
rank: 827
score: 98.9085205078125
patch: out . write ( ch , int 1 )
rank: 827
score: 98.73046112060547
patch: out . write ( short ) ;
rank: 827
score: 98.6912353515625
patch: out . write ( new char [ ] ;
rank: 827
score: 96.55411783854167
patch: prop >
rank: 827
score: 94.32113647460938
patch: Editor
rank: 828
score: 98.72689056396484
patch: out . write ( String str )
rank: 828
score: 98.70794677734375
patch: write . write ( value ) ;
rank: 828
score: 98.68765258789062
patch: public boolean . write ( ) ;
rank: 828
score: 98.43888636997768
patch: public out . out . ;
rank: 828
score: 96.55194091796875
patch: folder >
rank: 828
score: 94.31993103027344
patch: cur
rank: 828
score: 93.62379455566406
patch: msg
rank: 829
score: 98.68752712673611
patch: public void out ( ) ; null ;
rank: 829
score: 96.55143229166667
patch: element >
rank: 829
score: 94.31907653808594
patch: As
rank: 829
score: 93.62094116210938
patch: Effect
rank: 830
score: 98.72239685058594
patch: void out ( ) throws Exception ;
rank: 830
score: 98.68627057756696
patch: abstract . run ( ) ;
rank: 830
score: 98.43697684151786
patch: public void . . ) ;
rank: 830
score: 96.548583984375
patch: iterate >
rank: 830
score: 93.61836242675781
patch: Configuration
rank: 830
score: 93.6114501953125
patch: Position
rank: 831
score: 98.90301513671875
patch: out . write ( ch ) { ) ;
rank: 831
score: 98.43355887276786
patch: out . ; . out ;
rank: 831
score: 96.54793294270833
patch: Qt >
rank: 831
score: 94.31529235839844
patch: Host
rank: 831
score: 93.61590576171875
patch: peek
rank: 831
score: 93.59873962402344
patch: TRUE
rank: 832
score: 98.71141052246094
patch: out . write ( float ) ;
rank: 832
score: 98.43191964285714
patch: public out . ; . .
rank: 832
score: 96.547119140625
patch: BORDER >
rank: 832
score: 94.31411743164062
patch: View
rank: 832
score: 93.5950698852539
patch: Bucket
rank: 833
score: 98.90213012695312
patch: public int out ( ) { return 0 ;
rank: 833
score: 98.70992606026786
patch: boolean out ( ch ) ;
rank: 833
score: 98.69812774658203
patch: void out ( String value ) ;
rank: 833
score: 98.42873709542411
patch: write ( int ch ) ;
rank: 833
score: 94.3123779296875
patch: Attribute
rank: 834
score: 98.90205891927083
patch: public abstract int write ( ch ) ;
rank: 834
score: 98.69437408447266
patch: public Object out ( ) { ;
rank: 834
score: 98.68150111607143
patch: void . out ( ) ;
rank: 834
score: 98.42732456752232
patch: public int out . ) ;
rank: 834
score: 96.54355875651042
patch: get instanceof
rank: 834
score: 94.31092834472656
patch: Base
rank: 834
score: 93.60762023925781
patch: Nil
rank: 834
score: 93.58609008789062
patch: notify
rank: 835
score: 98.70337677001953
patch: abstract void write ( ch ) ;
rank: 835
score: 98.67901611328125
patch: void out ( write ( ) ;
rank: 835
score: 98.42444864908855
patch: out ( ) ) ;
rank: 835
score: 96.54349772135417
patch: Select >
rank: 835
score: 93.60626220703125
patch: Open
rank: 836
score: 98.90156385633681
patch: protected abstract void write ( ch ) ;
rank: 836
score: 98.69820404052734
patch: void out ( ch , ) ;
rank: 836
score: 98.67827497209821
patch: int void write ( ) ;
rank: 836
score: 98.42378743489583
patch: write ( out ) ;
rank: 836
score: 96.53981526692708
patch: P >
rank: 836
score: 94.30561828613281
patch: Pane
rank: 836
score: 93.6043701171875
patch: Enumeration
rank: 836
score: 93.58557891845703
patch: Pragma
rank: 837
score: 98.90146891276042
patch: out . write ( ch ) { }
rank: 837
score: 98.69763946533203
patch: abstract void out ( ch ) ;
rank: 837
score: 98.42320033482143
patch: out . write ( write ;
rank: 837
score: 94.29946899414062
patch: Killed
rank: 837
score: 93.58456420898438
patch: dispatch
rank: 838
score: 98.69716099330357
patch: out . write ( char ;
rank: 838
score: 98.6837158203125
patch: write ( ch [ ] ) ;
rank: 838
score: 98.67406463623047
patch: protected int out ( ) { }
rank: 838
score: 96.53805541992188
patch: Inet >
rank: 838
score: 94.29629516601562
patch: From
rank: 838
score: 93.59629821777344
patch: no
rank: 839
score: 98.68360900878906
patch: public final out ( ) { ;
rank: 839
score: 98.67102728949652
patch: public void out ( int value ) {
rank: 839
score: 96.53786214192708
patch: delegate >
rank: 839
score: 94.29287719726562
patch: commit
rank: 839
score: 93.59571075439453
patch: Pair
rank: 840
score: 98.89767795138889
patch: public abstract out . flush ( ) ;
rank: 840
score: 98.6959228515625
patch: void out ( ) { ; }
rank: 840
score: 98.6830825805664
patch: out . write ( Boolean ) ;
rank: 840
score: 98.6690673828125
patch: private int out ( ) { }
rank: 840
score: 98.41064453125
patch: out ( ) out ) ;
rank: 840
score: 96.53648885091145
patch: Handle >
rank: 840
score: 94.29255676269531
patch: lar
rank: 840
score: 93.59548950195312
patch: Java
rank: 840
score: 93.56214904785156
patch: stream
rank: 841
score: 98.68053327287946
patch: out . write ( name ;
rank: 841
score: 98.66807338169643
patch: m . write ( ) ;
rank: 841
score: 98.40971156529018
patch: . write ( ch ) ;
rank: 842
score: 98.69303131103516
patch: out . write ( ch , )
rank: 842
score: 98.68017578125
patch: String out ( ) { }
rank: 842
score: 98.66804722377232
patch: void void out ( ) ;
rank: 842
score: 96.53424072265625
patch: Analysis >
rank: 842
score: 94.2892837524414
patch: impl
rank: 842
score: 93.54898071289062
patch: NS
rank: 843
score: 98.66622585720486
patch: private void out ( ) ; null ;
rank: 843
score: 96.53352864583333
patch: alloc >
rank: 844
score: 98.68367004394531
patch: out . write ( char ch )
rank: 844
score: 98.66374206542969
patch: public / ] out ( ) ;
rank: 844
score: 98.39312744140625
patch: public write ( ) {
rank: 844
score: 94.28083801269531
patch: LOG
rank: 844
score: 93.57998657226562
patch: validate
rank: 844
score: 93.53776550292969
patch: Create
rank: 844
score: 93.05760192871094
patch: setup
rank: 845
score: 98.67839813232422
patch: List . write ( ch ) ;
rank: 845
score: 98.38393147786458
patch: public void out . ;
rank: 845
score: 96.53317260742188
patch: Assert >
rank: 845
score: 94.2747802734375
patch: Selected
rank: 845
score: 93.57756042480469
patch: Connection
rank: 846
score: 98.67835998535156
patch: public out . write ( name ;
rank: 846
score: 98.65836007254464
patch: private private out ( ) ;
rank: 846
score: 98.38290405273438
patch: write ( ) ) ;
rank: 846
score: 96.5330301920573
patch: unregister >
rank: 846
score: 93.53645324707031
patch: wait
rank: 847
score: 98.38282267252605
patch: public write . ) ;
rank: 847
score: 94.26710510253906
patch: Range
rank: 847
score: 93.57247161865234
patch: Phase
rank: 848
score: 98.89177856445312
patch: out . write ( ch . split ) {
rank: 848
score: 98.67302594866071
patch: String . . . ) ;
rank: 848
score: 98.66371154785156
patch: synchronized void write ( ch ) ;
rank: 848
score: 98.37875366210938
patch: out ( ch ) ;
rank: 848
score: 96.5321756998698
patch: Lock >
rank: 848
score: 93.55960083007812
patch: ps
rank: 848
score: 92.93976593017578
patch: insert
rank: 849
score: 98.67293548583984
patch: out . write ( right ) ;
rank: 849
score: 98.65686798095703
patch: public public out ( ) { }
rank: 849
score: 98.3669204711914
patch: public ) ;
rank: 849
score: 96.53169759114583
patch: items >
rank: 849
score: 94.26486206054688
patch: Directory
rank: 849
score: 93.55390167236328
patch: Invalid
rank: 850
score: 98.88334825303819
patch: out . write ( long value ) ;
rank: 850
score: 98.67171805245536
patch: Object . write ( ) ;
rank: 850
score: 98.3575439453125
patch: write ( ] ) ;
rank: 850
score: 96.53115844726562
patch: validate >
rank: 850
score: 94.25658416748047
patch: re
rank: 850
score: 93.54960632324219
patch: Module
rank: 851
score: 98.88328721788194
patch: out . write ( long ch ) {
rank: 851
score: 98.67032623291016
patch: public String out ( ) { }
rank: 851
score: 98.65576171875
patch: public void out ( out )
rank: 851
score: 98.65059661865234
patch: public int ch ( ) { }
rank: 851
score: 98.34002685546875
patch: out . write ) ;
rank: 851
score: 94.25178527832031
patch: Space
rank: 851
score: 93.54873657226562
patch: merge
rank: 851
score: 93.52455139160156
patch: Socket
rank: 852
score: 98.66678619384766
patch: public out out ( ) { ;
rank: 852
score: 98.64617047991071
patch: public String ch ( ) {
rank: 852
score: 98.30557250976562
patch: public out . ; .
rank: 852
score: 94.24725341796875
patch: Options
rank: 852
score: 93.54698181152344
patch: op
rank: 852
score: 92.90254211425781
patch: hash
rank: 853
score: 98.88198513454861
patch: public abstract String write ( ch ) ;
rank: 853
score: 98.6666259765625
patch: public static out ( ch ) ;
rank: 853
score: 98.30418904622395
patch: out . write ch ;
rank: 853
score: 96.5276590983073
patch: Field >
rank: 853
score: 94.24575805664062
patch: Formatter
rank: 853
score: 93.5443115234375
patch: n
rank: 854
score: 98.66602434430804
patch: public void out ( ch ;
rank: 854
score: 98.28401692708333
patch: write out ( ) ;
rank: 854
score: 96.52614339192708
patch: found >
rank: 854
score: 94.24574279785156
patch: Expression
rank: 854
score: 93.54429626464844
patch: previous
rank: 855
score: 98.66549682617188
patch: String . out ( ch ) ;
rank: 855
score: 98.64303588867188
patch: out . write ( byte [ ;
rank: 855
score: 98.28267822265624
patch: write ( ) {
rank: 855
score: 96.52591959635417
patch: super >
rank: 855
score: 94.24411010742188
patch: text
rank: 855
score: 93.5290756225586
patch: Virtual
rank: 855
score: 93.51553344726562
patch: Dimension
rank: 856
score: 98.66529846191406
patch: out . write ( TYPE ) ;
rank: 856
score: 98.64580535888672
patch: void out ( ) throws Throwable ;
rank: 856
score: 98.63991873604911
patch: write ( String ch ) ;
rank: 856
score: 98.25518798828125
patch: write ( this ) ;
rank: 856
score: 96.52569580078125
patch: Mapping >
rank: 856
score: 94.24102020263672
patch: Swing
rank: 856
score: 93.51390075683594
patch: Get
rank: 856
score: 93.5122299194336
patch: obj
rank: 857
score: 98.87173800998264
patch: out . write ( int ch ) {
rank: 857
score: 98.6644287109375
patch: public final out ( ) ;
rank: 857
score: 98.64148712158203
patch: public out . write ( String )
rank: 857
score: 98.63834926060268
patch: boolean out ( out ) ;
rank: 857
score: 98.25155029296874
patch: public ( ) {
rank: 857
score: 96.52365112304688
patch: Top >
rank: 857
score: 94.24058532714844
patch: dir
rank: 858
score: 98.8702392578125
patch: public synchronized void write ( ch ) {
rank: 858
score: 98.64033508300781
patch: void out ( ) throws ) ;
rank: 858
score: 98.63735525948661
patch: private public out ( ) ;
rank: 858
score: 98.2406717936198
patch: public boolean out . ;
rank: 858
score: 96.52175903320312
patch: sb >
rank: 859
score: 98.8673095703125
patch: out out . write ( str ) ;
rank: 859
score: 98.63959503173828
patch: out . write ( byte ch )
rank: 859
score: 98.63663155691964
patch: void out out ( ) ;
rank: 859
score: 98.23974609375
patch: write ( ? ) ;
rank: 859
score: 96.52156575520833
patch: Browser >
rank: 859
score: 94.2398910522461
patch: Server
rank: 859
score: 93.50665283203125
patch: Managed
rank: 859
score: 92.81539154052734
patch: force
rank: 860
score: 98.86392647879464
patch: write . write ( ch )
rank: 860
score: 98.66063690185547
patch: public final void write ( ) ;
rank: 860
score: 98.63897705078125
patch: public void out ( ch , ;
rank: 860
score: 98.63630022321429
patch: protected int out ( ) {
rank: 860
score: 98.2282206217448
patch: public out out ) ;
rank: 860
score: 96.5215352376302
patch: parameter >
rank: 860
score: 94.23916625976562
patch: Support
rank: 860
score: 93.4991455078125
patch: apply
rank: 861
score: 98.86385091145833
patch: boolean write . write ( ch ) ;
rank: 861
score: 98.65677642822266
patch: private void out ( write ) ;
rank: 861
score: 98.63875579833984
patch: public void out ( ) throws )
rank: 861
score: 98.63272530691964
patch: public String write ( ) {
rank: 861
score: 98.21858723958333
patch: public write . out ;
rank: 861
score: 96.52108764648438
patch: Render >
rank: 861
score: 94.23739624023438
patch: Obj
rank: 861
score: 92.80828857421875
patch: Native
rank: 862
score: 98.65645599365234
patch: public out ( String ch ) ;
rank: 862
score: 98.63253348214286
patch: boolean write ( out ) ;
rank: 862
score: 98.2141621907552
patch: out . out ) ;
rank: 862
score: 96.51776123046875
patch: Supported >
rank: 862
score: 94.23716735839844
patch: Entry
rank: 862
score: 93.47871398925781
patch: before
rank: 863
score: 98.86197238498264
patch: out . write ( char ch ) {
rank: 863
score: 98.6558609008789
patch: public static out ( out ) ;
rank: 863
score: 98.63490513392857
patch: out . write ( Character ;
rank: 863
score: 98.62991768973214
patch: public String ch ( ) ;
rank: 863
score: 98.21388753255208
patch: public out ) ) ;
rank: 863
score: 96.51742553710938
patch: elements >
rank: 863
score: 94.23291015625
patch: repaint
rank: 863
score: 92.74069213867188
patch: Loaded
rank: 864
score: 98.86111789279514
patch: @ Override out . write ( ch )
rank: 864
score: 98.65531158447266
patch: public out . write ( Object ;
rank: 864
score: 98.62703159877232
patch: abstract void write ( ) ;
rank: 864
score: 98.1976318359375
patch: public void . ) ;
rank: 864
score: 94.23207092285156
patch: internal
rank: 865
score: 98.64930725097656
patch: Object . get ( ch ) ;
rank: 865
score: 98.196435546875
patch: public abstract out ;
rank: 865
score: 96.51662190755208
patch: virtual >
rank: 865
score: 93.47236633300781
patch: connection
rank: 866
score: 98.85906982421875
patch: out . write write ( ch ) {
rank: 866
score: 98.64906311035156
patch: out . get ( ch ) ;
rank: 866
score: 98.1845703125
patch: private out ( ) {
rank: 866
score: 96.51588948567708
patch: source >
rank: 866
score: 94.22710418701172
patch: Properties
rank: 866
score: 93.47059631347656
patch: Color
rank: 866
score: 93.46629333496094
patch: scanpos
rank: 867
score: 98.62311553955078
patch: public private void out ( ) {
rank: 867
score: 98.18389892578125
patch: protected out ( ) {
rank: 867
score: 96.515625
patch: Key >
rank: 867
score: 94.22594451904297
patch: method
rank: 867
score: 93.46060180664062
patch: Store
rank: 867
score: 92.66340637207031
patch: convert
rank: 868
score: 98.64810943603516
patch: public static out write ( ) ;
rank: 868
score: 98.62155587332589
patch: int out ( out ) ;
rank: 868
score: 98.62007141113281
patch: out . write ( long ) ;
rank: 868
score: 98.18386840820312
patch: public ( out ) ;
rank: 868
score: 96.513427734375
patch: Editor >
rank: 868
score: 94.22371673583984
patch: Bit
rank: 868
score: 93.46702575683594
patch: Driver
rank: 869
score: 98.85387505425348
patch: out out . write ( chars ) ;
rank: 869
score: 98.64438302176339
patch: void out ( write ) ;
rank: 869
score: 98.61595807756696
patch: this . write ( ) ;
rank: 869
score: 98.18044026692708
patch: out ( Exception ) ;
rank: 869
score: 96.51341756184895
patch: prev >
rank: 869
score: 93.46328735351562
patch: char
rank: 869
score: 93.4534912109375
patch: writer
rank: 870
score: 98.64349365234375
patch: public synchronized out ( ) { ;
rank: 870
score: 98.61501639229911
patch: public protected out ( ) {
rank: 870
score: 98.179443359375
patch: public out ;
rank: 870
score: 96.51059977213542
patch: Collection >
rank: 870
score: 94.21795654296875
patch: Field
rank: 870
score: 93.45820617675781
patch: DEBUG
rank: 870
score: 93.44651794433594
patch: Augmentations
rank: 871
score: 98.85236952039931
patch: out . out . write ( ch )
rank: 871
score: 98.64087785993304
patch: public void out ( String ;
rank: 871
score: 98.61492156982422
patch: Object out ( ch , ) ;
rank: 871
score: 98.6116943359375
patch: public Boolean write ( ) ;
rank: 871
score: 98.17598470052083
patch: public out ( ) .
rank: 871
score: 96.51043701171875
patch: pbuffer >
rank: 871
score: 94.21678161621094
patch: Parser
rank: 871
score: 93.44921875
patch: c
rank: 872
score: 98.62082345145089
patch: String . . . . ;
rank: 872
score: 98.6112060546875
patch: public void ch ( ) ;
rank: 872
score: 98.16750081380208
patch: public int ( ) {
rank: 872
score: 96.51041666666667
patch: projects >
rank: 872
score: 94.21051025390625
patch: Marker
rank: 872
score: 93.44831085205078
patch: NULL
rank: 873
score: 98.614013671875
patch: out ( ) { ; }
rank: 873
score: 98.61135864257812
patch: public long out ( ch ) ;
rank: 873
score: 98.60962785993304
patch: protected public out ( ) ;
rank: 873
score: 98.16649373372395
patch: write ( ) { public
rank: 873
score: 96.5056864420573
patch: sync >
rank: 873
score: 93.44661712646484
patch: line
rank: 873
score: 93.43991088867188
patch: perform
rank: 874
score: 98.84245469835069
patch: private out . write ( int ch )
rank: 874
score: 98.61122349330357
patch: public abstract void out ( )
rank: 874
score: 98.61121477399554
patch: public String . . . ;
rank: 874
score: 98.6068115234375
patch: protected private out ( ) ;
rank: 874
score: 98.16489664713542
patch: write ( ) { ;
rank: 874
score: 96.50526936848958
patch: location >
rank: 874
score: 93.4261474609375
patch: reader
rank: 875
score: 98.84232584635417
patch: private abstract void write ( ch ) ;
rank: 875
score: 98.16116333007812
patch: public boolean out ) ;
rank: 875
score: 96.50498453776042
patch: container >
rank: 875
score: 94.20072937011719
patch: prop
rank: 875
score: 93.42375946044922
patch: Safe
rank: 876
score: 98.83966064453125
patch: public boolean out . write ( ch )
rank: 876
score: 98.60244315011161
patch: public void out ( write ;
rank: 876
score: 98.15885416666667
patch: write . out ) ;
rank: 876
score: 96.50323486328125
patch: test >
rank: 876
score: 94.19950866699219
patch: include
rank: 876
score: 92.60484313964844
patch: Xml
rank: 877
score: 98.83614095052083
patch: out . write ( ch ] ) ;
rank: 877
score: 98.59765625
patch: public long write ( ) ;
rank: 877
score: 98.58721923828125
patch: out . write ( byte )
rank: 877
score: 98.139892578125
patch: public abstract ) ;
rank: 877
score: 96.50145467122395
patch: Secure >
rank: 877
score: 92.60454559326172
patch: drop
rank: 878
score: 98.59723772321429
patch: public double write ( ) ;
rank: 878
score: 98.58237130301339
patch: public Object out ( ch )
rank: 878
score: 98.13492838541667
patch: out ( write ) ;
rank: 878
score: 96.50125122070312
patch: file >
rank: 878
score: 94.19499206542969
patch: Interrupted
rank: 878
score: 92.59893035888672
patch: Q
rank: 879
score: 98.13313802083333
patch: public final out ) ;
rank: 879
score: 96.50065104166667
patch: Pool >
rank: 879
score: 94.19319915771484
patch: Only
rank: 879
score: 93.4338607788086
patch: Messaging
rank: 880
score: 98.83077663845486
patch: public abstract write ( int ch ) ;
rank: 880
score: 98.59592110770089
patch: protected String out ( ) ;
rank: 880
score: 98.58844866071429
patch: out . clear ( ) ;
rank: 880
score: 98.1325174967448
patch: public write . ch ;
rank: 880
score: 96.50003051757812
patch: warn >
rank: 880
score: 94.1859359741211
patch: Design
rank: 880
score: 93.42875671386719
patch: handler
rank: 880
score: 93.39387512207031
patch: Disposer
rank: 880
score: 92.5561294555664
patch: Domain
rank: 881
score: 98.83064100477431
patch: private out . write ( ch , ;
rank: 881
score: 98.59573364257812
patch: int out ( ) ; null ;
rank: 881
score: 98.58808244977679
patch: String out ( out ) ;
rank: 881
score: 98.5699462890625
patch: out . write ( ;
rank: 881
score: 98.13187662760417
patch: write ( str ) ;
rank: 881
score: 93.38957214355469
patch: SAX
rank: 882
score: 98.58946881975446
patch: protected static out ( ) ;
rank: 882
score: 98.58731515066964
patch: out . do ( ) ;
rank: 882
score: 98.12935791015624
patch: out ( ) {
rank: 882
score: 96.498291015625
patch: Defined >
rank: 882
score: 94.18145751953125
patch: build
rank: 883
score: 98.58944266183036
patch: final . run ( ) ;
rank: 883
score: 98.53904506138393
patch: public int out ( ch )
rank: 883
score: 98.12894694010417
patch: public out ( ) )
rank: 883
score: 96.49822998046875
patch: resource >
rank: 884
score: 98.58816092354911
patch: void out write ( ) ;
rank: 884
score: 98.53631591796875
patch: out . write ( )
rank: 884
score: 98.11559041341145
patch: ( out ; ) {
rank: 884
score: 96.4979756673177
patch: valid >
rank: 884
score: 94.17861938476562
patch: y
rank: 884
score: 92.49370574951172
patch: Vcs
rank: 885
score: 98.58767264229911
patch: XML . write ( ) ;
rank: 885
score: 98.11451212565105
patch: out . ch ) ;
rank: 885
score: 96.4977315266927
patch: Target >
rank: 885
score: 93.41620635986328
patch: model
rank: 885
score: 93.37604522705078
patch: acquire
rank: 886
score: 98.82191297743056
patch: protected out . write ( int ch )
rank: 886
score: 98.58132498604911
patch: abstract . write ( ) ;
rank: 886
score: 98.57867431640625
patch: out . lock ( ) ;
rank: 886
score: 98.11408081054688
patch: out . out ;
rank: 886
score: 96.49698893229167
patch: Prepared >
rank: 886
score: 94.17387390136719
patch: all
rank: 886
score: 93.41580200195312
patch: Num
rank: 887
score: 98.81855604383681
patch: protected out . write ( ch . ;
rank: 887
score: 98.57982526506696
patch: f . write ( ) ;
rank: 887
score: 98.57483782087054
patch: private static out ( ) ;
rank: 887
score: 98.51811872209821
patch: public boolean out ( ch )
rank: 887
score: 98.11326090494792
patch: out ( ; ) ;
rank: 887
score: 96.49609375
patch: Execution >
rank: 887
score: 94.16960906982422
patch: Stream
rank: 887
score: 93.41559600830078
patch: Returns
rank: 888
score: 98.57954624720982
patch: write ( int value ) ;
rank: 888
score: 98.57375662667411
patch: public Object out ( ) {
rank: 888
score: 98.10489908854167
patch: write . write ch ;
rank: 888
score: 96.49193318684895
patch: notify >
rank: 888
score: 93.34872436523438
patch: Connected
rank: 889
score: 98.57694789341518
patch: void ch ( out ) ;
rank: 889
score: 98.5724385579427
patch: String out ( ) {
rank: 889
score: 98.10013834635417
patch: public boolean ( ) {
rank: 889
score: 96.4888203938802
patch: Named >
rank: 889
score: 93.41255187988281
patch: gly
rank: 890
score: 98.8127212524414
patch: out . write ( long ch )
rank: 890
score: 98.57478550502232
patch: private int write ( ) {
rank: 890
score: 98.57083565848214
patch: out . delete ( ) ;
rank: 890
score: 98.48947579520089
patch: out . write ( String ;
rank: 890
score: 98.0962158203125
patch: write . out ;
rank: 890
score: 93.34685516357422
patch: Statement
rank: 891
score: 98.8094482421875
patch: out . write write ( ch )
rank: 891
score: 98.57298932756696
patch: public Boolean out ( ) ;
rank: 891
score: 98.09560139973958
patch: out out ( ) ;
rank: 891
score: 96.48849487304688
patch: dispose >
rank: 891
score: 92.44568634033203
patch: General
rank: 892
score: 98.56972830636161
patch: write ( int byte ) ;
rank: 892
score: 98.54915364583333
patch: String . [ ) ;
rank: 892
score: 98.47636195591518
patch: long out ( ch ) ;
rank: 892
score: 98.04917602539062
patch: write . ) ;
rank: 892
score: 96.48811848958333
patch: service >
rank: 892
score: 93.4046630859375
patch: Prop
rank: 892
score: 93.34213256835938
patch: Bytes
rank: 892
score: 92.43130493164062
patch: External
rank: 893
score: 98.56893484933036
patch: int write ( out ) ;
rank: 893
score: 97.97262573242188
patch: public ( ) ;
rank: 893
score: 96.4856465657552
patch: connection >
rank: 893
score: 94.14239501953125
patch: code
rank: 893
score: 93.40361785888672
patch: Problem
rank: 893
score: 92.42213439941406
patch: post
rank: 894
score: 98.56565638950893
patch: long . write ( ) ;
rank: 894
score: 98.54384940011161
patch: public void out ( byte ;
rank: 894
score: 97.9722412109375
patch: out . ) ;
rank: 894
score: 94.13934326171875
patch: Reference
rank: 894
score: 93.39749145507812
patch: property
rank: 894
score: 93.32640075683594
patch: Equals
rank: 895
score: 98.79086303710938
patch: public abstract write ( ch ) ;
rank: 895
score: 98.5391845703125
patch: void out ( ) { ;
rank: 895
score: 97.95733032226562
patch: ( out ) ;
rank: 895
score: 96.48196411132812
patch: api >
rank: 895
score: 94.13651275634766
patch: iter
rank: 895
score: 92.40805053710938
patch: HTML
rank: 896
score: 98.7815933227539
patch: public write . write ( ch )
rank: 896
score: 98.56491088867188
patch: String write ( ) ;
rank: 896
score: 98.45634242466518
patch: out . write ( Byte ;
rank: 896
score: 97.95270538330078
patch: . out ;
rank: 896
score: 92.4048843383789
patch: Search
rank: 897
score: 98.55910237630208
patch: public int ( ) ;
rank: 897
score: 98.45401436941964
patch: public String out ( ch )
rank: 897
score: 97.94447021484375
patch: public static ) ;
rank: 897
score: 96.48118082682292
patch: Z >
rank: 897
score: 94.12705993652344
patch: Description
rank: 897
score: 93.39128875732422
patch: Failure
rank: 898
score: 98.55812290736607
patch: boolean void out ( ) ;
rank: 898
score: 98.44420369466145
patch: public Object out ( )
rank: 898
score: 97.93253784179687
patch: . . out ;
rank: 898
score: 96.47930908203125
patch: configure >
rank: 898
score: 94.12286376953125
patch: FS
rank: 898
score: 93.38928985595703
patch: fail
rank: 898
score: 93.3130874633789
patch: Scheduler
rank: 898
score: 92.3965072631836
patch: populate
rank: 899
score: 98.55770438058036
patch: int ch ( ch ) ;
rank: 899
score: 97.88984375
patch: public ) ) ;
rank: 899
score: 96.478759765625
patch: Binding >
rank: 899
score: 94.12271118164062
patch: Gen
rank: 899
score: 93.37518310546875
patch: Dataflow
rank: 899
score: 92.39512634277344
patch: Parsed
rank: 900
score: 98.76953887939453
patch: public boolean write ( ch ) {
rank: 900
score: 98.55712890625
patch: private void write ( ) {
rank: 900
score: 97.85745849609376
patch: public final ) ;
rank: 900
score: 96.47821044921875
patch: Body >
rank: 900
score: 94.1214599609375
patch: Document
rank: 900
score: 93.37398529052734
patch: Fatal
rank: 901
score: 98.55548095703125
patch: int . out ( ) ;
rank: 901
score: 98.52382114955357
patch: public void out ( ? ;
rank: 901
score: 98.41569301060268
patch: public out . write ( ;
rank: 901
score: 97.84382629394531
patch: out ) ;
rank: 901
score: 96.47701009114583
patch: Names >
rank: 901
score: 94.11772918701172
patch: Resource
rank: 901
score: 93.37269592285156
patch: Internal
rank: 901
score: 92.37507629394531
patch: service
rank: 902
score: 98.76596069335938
patch: public void write ( ch ) {
rank: 902
score: 98.55257742745536
patch: public T write ( ) ;
rank: 902
score: 98.52212960379464
patch: out . read ( ) ;
rank: 902
score: 98.41102818080357
patch: public void write ( ch )
rank: 902
score: 97.8333740234375
patch: public public ) ;
rank: 902
score: 96.47671508789062
patch: Setup >
rank: 902
score: 93.37263488769531
patch: event
rank: 903
score: 97.82786560058594
patch: out . ;
rank: 903
score: 96.47670491536458
patch: bind >
rank: 903
score: 92.36219787597656
patch: Async
rank: 904
score: 98.49543980189732
patch: ? out : ch ) ;
rank: 904
score: 97.79828491210938
patch: out . ch ;
rank: 904
score: 94.11027526855469
patch: field
rank: 904
score: 93.28384399414062
patch: loop
rank: 904
score: 92.36000061035156
patch: Top
rank: 905
score: 98.74605560302734
patch: public abstract out . write ) ;
rank: 905
score: 98.54252406529018
patch: private protected out ( ) ;
rank: 905
score: 98.49376569475446
patch: Object out ( out ) ;
rank: 905
score: 97.79652099609375
patch: public synchronized ) ;
rank: 905
score: 93.28244018554688
patch: reload
rank: 906
score: 98.54183523995536
patch: public T out ( ) {
rank: 906
score: 98.40118408203125
patch: long write ( ch ) ;
rank: 906
score: 97.78439331054688
patch: . . ) ;
rank: 906
score: 96.47414143880208
patch: Navigator >
rank: 906
score: 93.36463165283203
patch: Elem
rank: 907
score: 98.49294607979911
patch: String . [ ] . ;
rank: 907
score: 98.39485386439732
patch: out . write ( char )
rank: 907
score: 97.77009887695313
patch: public void . ;
rank: 907
score: 96.47240193684895
patch: Pixel >
rank: 907
score: 94.099609375
patch: first
rank: 907
score: 93.35932159423828
patch: project
rank: 908
score: 98.48740641276042
patch: String . . . ;
rank: 908
score: 97.76697998046875
patch: public out ) {
rank: 908
score: 96.47184244791667
patch: Reference >
rank: 908
score: 94.09823608398438
patch: cache
rank: 908
score: 92.34951782226562
patch: Already
rank: 909
score: 98.53567068917411
patch: write ( String str ) ;
rank: 909
score: 98.38639613560268
patch: public void out ( out ;
rank: 909
score: 97.7634521484375
patch: public ch ) ;
rank: 909
score: 96.47135416666667
patch: Max >
rank: 909
score: 92.33965301513672
patch: complete
rank: 910
score: 98.53566196986607
patch: Menu . write ( ) ;
rank: 910
score: 98.48624093191964
patch: Iterator void out ( ) ;
rank: 910
score: 97.75571899414062
patch: public int ) ;
rank: 910
score: 96.4692891438802
patch: dim >
rank: 910
score: 94.09391784667969
patch: Cause
rank: 910
score: 93.34797668457031
patch: Database
rank: 911
score: 98.71758270263672
patch: final out . write ( ch )
rank: 911
score: 98.53316824776786
patch: void out ( ( ) ;
rank: 911
score: 98.36564127604167
patch: public boolean out ( )
rank: 911
score: 97.7551513671875
patch: private out ) ;
rank: 911
score: 96.46922810872395
patch: Native >
rank: 912
score: 98.53266252790179
patch: void out ( ? ) ;
rank: 912
score: 98.48488362630208
patch: public out [ ] ;
rank: 912
score: 97.73656005859375
patch: public out ( )
rank: 912
score: 96.46697998046875
patch: acquire >
rank: 912
score: 94.09127807617188
patch: break
rank: 912
score: 92.26188659667969
patch: Verify
rank: 913
score: 98.53118024553571
patch: boolean void write ( ) ;
rank: 913
score: 98.32693481445312
patch: public String out ( )
rank: 913
score: 97.73089599609375
patch: . out ) ;
rank: 913
score: 96.46573893229167
patch: AST >
rank: 913
score: 92.26126098632812
patch: ensure
rank: 914
score: 98.53090122767857
patch: protected int write ( ) {
rank: 914
score: 98.48183768136161
patch: private out ( ) { ;
rank: 914
score: 98.28932698567708
patch: public int out ( )
rank: 914
score: 97.72899627685547
patch: public / ;
rank: 914
score: 96.46547444661458
patch: Per >
rank: 914
score: 93.2528305053711
patch: Char
rank: 915
score: 98.52749197823661
patch: public float write ( ) ;
rank: 915
score: 98.48064313616071
patch: out . close ( ) {
rank: 915
score: 97.71849365234375
patch: public . out ;
rank: 915
score: 96.4642333984375
patch: Config >
rank: 915
score: 94.080810546875
patch: Tag
rank: 915
score: 93.32808685302734
patch: Var
rank: 916
score: 98.47976684570312
patch: boolean out ( ) {
rank: 916
score: 98.26229858398438
patch: ( ) { ; }
rank: 916
score: 97.71804809570312
patch: public out ch ;
rank: 916
score: 96.46244303385417
patch: Access >
rank: 916
score: 94.07928466796875
patch: native
rank: 916
score: 92.24234008789062
patch: switch
rank: 917
score: 98.69756317138672
patch: out ) write ( ch ) ;
rank: 917
score: 98.52320207868304
patch: final . write ( ) ;
rank: 917
score: 97.71668701171875
patch: public int . ;
rank: 917
score: 96.46065266927083
patch: using >
rank: 917
score: 94.07488250732422
patch: Run
rank: 917
score: 93.23726654052734
patch: statement
rank: 917
score: 92.23933410644531
patch: move
rank: 918
score: 98.45998128255208
patch: out ( ) { }
rank: 918
score: 98.2490946451823
patch: out . write ( ch
rank: 918
score: 97.70614013671874
patch: public protected ) ;
rank: 918
score: 96.45911661783855
patch: Psi >
rank: 918
score: 94.07363891601562
patch: refresh
rank: 918
score: 93.31216430664062
patch: verify
rank: 918
score: 93.23555755615234
patch: Elements
rank: 918
score: 92.23933410644531
patch: activate
rank: 919
score: 98.69334411621094
patch: write . write . ch ) ;
rank: 919
score: 98.52262369791667
patch: String ch ( ) ;
rank: 919
score: 97.70404052734375
patch: protected out ) ;
rank: 919
score: 96.45908610026042
patch: IDE >
rank: 919
score: 93.31079864501953
patch: Notification
rank: 919
score: 92.23326110839844
patch: configure
rank: 920
score: 98.521240234375
patch: int . run ( ) ;
rank: 920
score: 98.19495646158855
patch: public void out ( ;
rank: 920
score: 97.67627563476563
patch: public void ) ;
rank: 920
score: 96.45833333333333
patch: Def >
rank: 920
score: 94.06729125976562
patch: Reporter
rank: 921
score: 98.69076538085938
patch: public out . write ( chars )
rank: 921
score: 98.51975795200893
patch: private boolean out ( ) {
rank: 921
score: 97.669970703125
patch: public final out ;
rank: 921
score: 94.05697631835938
patch: Helper
rank: 921
score: 92.20932006835938
patch: Cached
rank: 922
score: 98.1007080078125
patch: protected void out ( )
rank: 922
score: 97.65005493164062
patch: public ) out ;
rank: 922
score: 96.45663452148438
patch: join >
rank: 922
score: 94.05693054199219
patch: Renderer
rank: 922
score: 93.22530364990234
patch: Client
rank: 922
score: 92.20899963378906
patch: Basic
rank: 923
score: 98.50724283854167
patch: boolean ch ( ) ;
rank: 923
score: 98.38814290364583
patch: public String . . ;
rank: 923
score: 98.100537109375
patch: void out ( )
rank: 923
score: 97.644140625
patch: write . ch ;
rank: 923
score: 96.45436604817708
patch: id >
rank: 923
score: 92.20606994628906
patch: accept
rank: 924
score: 98.5000508626302
patch: double out ( ) ;
rank: 924
score: 98.08268229166667
patch: public String ( ) {
rank: 924
score: 97.63509521484374
patch: public * ) ;
rank: 924
score: 93.21347045898438
patch: --
rank: 925
score: 98.62406703404018
patch: public abstract out . write ;
rank: 925
score: 98.49196370442708
patch: Object ch ( ) ;
rank: 925
score: 98.36490885416667
patch: public static out ) ;
rank: 925
score: 98.07620239257812
patch: Collection out ( ) ;
rank: 925
score: 97.60552978515625
patch: ) ;
rank: 925
score: 94.0474853515625
patch: Non
rank: 925
score: 93.20770263671875
patch: Mime
rank: 926
score: 98.33305053710937
patch: String . . ;
rank: 926
score: 98.07357788085938
patch: out . write ( out
rank: 926
score: 97.55625915527344
patch: private ) ;
rank: 926
score: 94.04688262939453
patch: Panel
rank: 926
score: 93.20536804199219
patch: fold
rank: 927
score: 98.33143107096355
patch: String . . ) ;
rank: 927
score: 98.06714884440105
patch: Iterator out ( ) ;
rank: 927
score: 97.54020690917969
patch: ( ) ;
rank: 927
score: 94.04460144042969
patch: Character
rank: 927
score: 93.27899169921875
patch: context
rank: 927
score: 93.19668579101562
patch: Rectangle
rank: 927
score: 92.18807983398438
patch: Normal
rank: 928
score: 98.59355817522321
patch: public boolean write ( ch )
rank: 928
score: 98.46378580729167
patch: void out ( ch ;
rank: 928
score: 98.0631612141927
patch: void out ( ch )
rank: 928
score: 97.51049041748047
patch: protected ) ;
rank: 928
score: 94.0445556640625
patch: Mgr
rank: 928
score: 93.27610778808594
patch: prev
rank: 928
score: 93.18880462646484
patch: Call
rank: 928
score: 92.18770599365234
patch: Application
rank: 929
score: 98.58721923828125
patch: out write ( ch ) ;
rank: 929
score: 98.4474853515625
patch: int ( ) ;
rank: 929
score: 98.32852172851562
patch: public synchronized out ) ;
rank: 929
score: 97.47979736328125
patch: . . ;
rank: 929
score: 94.04386901855469
patch: Msg
rank: 930
score: 98.31388346354167
patch: Object out ( ) {
rank: 930
score: 98.01151733398437
patch: Object out ( )
rank: 930
score: 97.31886291503906
patch: public ch ;
rank: 930
score: 94.04240417480469
patch: test
rank: 930
score: 92.18202209472656
patch: store
rank: 931
score: 98.00940958658855
patch: private void out ( )
rank: 931
score: 97.30790710449219
patch: . ) ;
rank: 931
score: 94.03594207763672
patch: table
rank: 931
score: 93.18408203125
patch: Metadata
rank: 932
score: 98.00755615234375
patch: out [ ) ;
rank: 932
score: 97.29188537597656
patch: public * ;
rank: 932
score: 94.0325927734375
patch: Types
rank: 933
score: 98.42906697591145
patch: Object write ( ) ;
rank: 933
score: 98.26162719726562
patch: ? out : ch ;
rank: 933
score: 98.00543212890625
patch: Object out ( ch )
rank: 933
score: 97.26036071777344
patch: ) ) ;
rank: 933
score: 94.03152465820312
patch: thread
rank: 933
score: 93.26115417480469
patch: match
rank: 933
score: 93.17898559570312
patch: Iter
rank: 934
score: 98.417333984375
patch: void ( ) ;
rank: 934
score: 97.22242736816406
patch: ( ) {
rank: 934
score: 94.03068542480469
patch: encoding
rank: 934
score: 93.25967407226562
patch: calculate
rank: 935
score: 98.40934244791667
patch: long write ( ) ;
rank: 935
score: 97.9835917154948
patch: public long out ( )
rank: 935
score: 97.19831085205078
patch: public int ;
rank: 935
score: 94.02870178222656
patch: exception
rank: 936
score: 98.56646728515625
patch: public int write ( ch )
rank: 936
score: 98.40521240234375
patch: public T ( ) ;
rank: 936
score: 98.23946126302083
patch: String . $NUMBER$ ) ;
rank: 936
score: 97.19219970703125
patch: public void ;
rank: 936
score: 94.02777099609375
patch: Address
rank: 936
score: 93.25779724121094
patch: parameter
rank: 936
score: 92.14994812011719
patch: define
rank: 937
score: 98.56599644252232
patch: out . flush ( ) {
rank: 937
score: 98.39718627929688
patch: public void out ( ?
rank: 937
score: 98.23579915364583
patch: String . [ ] ;
rank: 937
score: 97.97061157226562
patch: public double out ( )
rank: 937
score: 97.15422821044922
patch: private out ;
rank: 937
score: 94.02629089355469
patch: Selection
rank: 937
score: 93.2550048828125
patch: rs
rank: 938
score: 98.2323710123698
patch: public static ) { ;
rank: 938
score: 97.96213785807292
patch: public out [ ) ;
rank: 938
score: 97.15286254882812
patch: public . ;
rank: 938
score: 95.48179626464844
patch: super
rank: 938
score: 94.02456665039062
patch: clazz
rank: 938
score: 92.14881134033203
patch: ATT
rank: 939
score: 98.39546712239583
patch: float out ( ) ;
rank: 939
score: 98.23195393880208
patch: out ( ) { ;
rank: 939
score: 97.10516357421875
patch: public final ;
rank: 939
score: 95.47994995117188
patch: Gui
rank: 939
score: 93.24200439453125
patch: position
rank: 939
score: 92.14823150634766
patch: Sealed
rank: 940
score: 98.55098179408482
patch: out out ( ch ) ;
rank: 940
score: 98.20494588216145
patch: ? out : out ;
rank: 940
score: 97.06521606445312
patch: / out ;
rank: 940
score: 93.23228454589844
patch: Single
rank: 941
score: 97.05185953776042
patch: out ;
rank: 941
score: 94.01811981201172
patch: Folder
rank: 941
score: 92.14007568359375
patch: mark
rank: 942
score: 98.35677083333333
patch: / ; ( ) ;
rank: 942
score: 98.18540445963542
patch: . . . ) ;
rank: 942
score: 97.70698852539063
patch: ( ) { }
rank: 942
score: 97.04875183105469
patch: write . ;
rank: 942
score: 93.15226745605469
patch: SVNURL
rank: 942
score: 92.13970184326172
patch: edit
rank: 943
score: 98.34932454427083
patch: abstract { ; ; }
rank: 943
score: 97.7033935546875
patch: public byte ) ;
rank: 943
score: 97.04608917236328
patch: out ( )
rank: 943
score: 94.01533508300781
patch: Sub
rank: 943
score: 93.22274780273438
patch: Axis
rank: 943
score: 93.15022277832031
patch: Items
rank: 944
score: 98.1690673828125
patch: int out ( ) {
rank: 944
score: 97.03929901123047
patch: public ) {
rank: 944
score: 94.01484680175781
patch: buffer
rank: 944
score: 93.22010803222656
patch: an
rank: 945
score: 98.34322102864583
patch: long ch ( ) ;
rank: 945
score: 98.1282958984375
patch: String . ) ;
rank: 945
score: 97.68408813476563
patch: public String ) ;
rank: 945
score: 97.03692626953125
patch: protected out ;
rank: 945
score: 95.40080261230469
patch: UI
rank: 945
score: 94.01434326171875
patch: Box
rank: 945
score: 93.21736145019531
patch: sb
rank: 945
score: 93.14940643310547
patch: Send
rank: 946
score: 98.49953787667411
patch: out . write ( chars )
rank: 946
score: 98.34297688802083
patch: public T ( ) {
rank: 946
score: 97.0353775024414
patch: ) out ;
rank: 946
score: 94.01376342773438
patch: Report
rank: 946
score: 93.21226501464844
patch: at
rank: 946
score: 92.11753845214844
patch: AS
rank: 947
score: 98.49609375
patch: out . write ( out )
rank: 947
score: 98.34039306640625
patch: public out ; null ;
rank: 947
score: 97.98446655273438
patch: public static out ;
rank: 947
score: 97.03125
patch: public ) .
rank: 947
score: 93.2108383178711
patch: Warn
rank: 947
score: 93.13865661621094
patch: Byte
rank: 948
score: 98.32712809244792
patch: out ( null ) ;
rank: 948
score: 97.9832275390625
patch: / * ] ;
rank: 948
score: 97.61148681640626
patch: abstract . ) ;
rank: 948
score: 97.03073120117188
patch: . ch ;
rank: 948
score: 94.0057373046875
patch: address
rank: 948
score: 93.20250701904297
patch: Query
rank: 948
score: 93.13546752929688
patch: time
rank: 948
score: 92.11598205566406
patch: intern
rank: 949
score: 97.97051391601562
patch: String . [ ;
rank: 949
score: 97.02176666259766
patch: write ) ;
rank: 949
score: 92.11538696289062
patch: resize
rank: 950
score: 98.31578572591145
patch: double ch ( ) ;
rank: 950
score: 97.96473388671875
patch: out [ ] ;
rank: 950
score: 97.01893615722656
patch: ch ) ;
rank: 950
score: 93.19984436035156
patch: IC
rank: 950
score: 93.13401794433594
patch: visit
rank: 950
score: 92.11410522460938
patch: evaluate
rank: 951
score: 98.31207275390625
patch: final out ( ) ;
rank: 951
score: 97.91864624023438
patch: String . $NUMBER$ ;
rank: 951
score: 97.57142944335938
patch: String out ( )
rank: 951
score: 97.01237487792969
patch: public / )
rank: 951
score: 93.9979019165039
patch: A
rank: 951
score: 93.19027709960938
patch: unregister
rank: 951
score: 93.1336669921875
patch: Interruptible
rank: 952
score: 98.30767822265625
patch: public void out ) ;
rank: 952
score: 97.9078857421875
patch: / * out ;
rank: 952
score: 97.56859741210937
patch: org . ) ;
rank: 952
score: 96.98596954345703
patch: abstract out ;
rank: 952
score: 92.10350036621094
patch: operation
rank: 953
score: 98.3036600748698
patch: public void ( ) ;
rank: 953
score: 97.88858642578126
patch: public synchronized out ;
rank: 953
score: 97.55264892578126
patch: boolean out ( )
rank: 953
score: 96.95640563964844
patch: out ( *
rank: 953
score: 93.99612426757812
patch: Loader
rank: 953
score: 93.17955017089844
patch: Bean
rank: 953
score: 93.12881469726562
patch: interrupt
rank: 954
score: 98.30106608072917
patch: private write ( ) ;
rank: 954
score: 97.87237548828125
patch: . . . ;
rank: 954
score: 96.9531021118164
patch: public abstract ;
rank: 954
score: 93.99576568603516
patch: Messages
rank: 954
score: 93.12869262695312
patch: transform
rank: 955
score: 98.2996317545573
patch: void ( out ) ;
rank: 955
score: 97.8662353515625
patch: boolean . . ;
rank: 955
score: 97.53792114257813
patch: ( ch ) ;
rank: 955
score: 96.93824768066406
patch: ( out .
rank: 955
score: 95.28137969970703
patch: document
rank: 955
score: 93.99110412597656
patch: resolve
rank: 955
score: 93.17633819580078
patch: condition
rank: 955
score: 93.12335205078125
patch: history
rank: 955
score: 92.08601379394531
patch: bind
rank: 956
score: 98.345068359375
patch: out . write ;
rank: 956
score: 98.25691528320313
patch: abstract { ; }
rank: 956
score: 97.8487060546875
patch: String out ) ;
rank: 956
score: 97.52491455078125
patch: public Object ) ;
rank: 956
score: 96.93605041503906
patch: out out ;
rank: 956
score: 93.17558288574219
patch: Account
rank: 956
score: 93.1225814819336
patch: Dom
rank: 956
score: 92.08586120605469
patch: begin
rank: 957
score: 98.22876586914063
patch: void out ( ||
rank: 957
score: 97.51705322265624
patch: public < T )
rank: 957
score: 96.88056945800781
patch: / ) ;
rank: 957
score: 95.25211334228516
patch: Main
rank: 957
score: 93.98865509033203
patch: Localized
rank: 958
score: 97.8362060546875
patch: / * ? ;
rank: 958
score: 97.51380615234375
patch: java . ) ;
rank: 958
score: 96.875732421875
patch: . . .
rank: 958
score: 93.98787689208984
patch: lookup
rank: 958
score: 93.17088317871094
patch: view
rank: 958
score: 92.0703125
patch: join
rank: 959
score: 98.21266174316406
patch: final ) ;
rank: 959
score: 97.49666137695313
patch: public String ( )
rank: 959
score: 93.9875259399414
patch: Dir
rank: 959
score: 93.12030029296875
patch: Fixed
rank: 960
score: 98.19234008789063
patch: void out ( ;
rank: 960
score: 97.49373779296874
patch: out . write (
rank: 960
score: 96.62062581380208
patch: public ;
rank: 960
score: 93.11982727050781
patch: XS
rank: 960
score: 92.06195068359375
patch: AST
rank: 961
score: 98.1860595703125
patch: boolean ( ) ;
rank: 961
score: 97.49168701171875
patch: public double ) ;
rank: 961
score: 93.98219299316406
patch: password
rank: 961
score: 93.16529846191406
patch: Execution
rank: 961
score: 93.11961364746094
patch: Save
rank: 962
score: 98.17626953125
patch: void out ) ;
rank: 962
score: 97.78336791992187
patch: / * ) ;
rank: 962
score: 96.48717244466145
patch: ( )
rank: 962
score: 93.97972106933594
patch: X
rank: 962
score: 93.11717224121094
patch: Packet
rank: 962
score: 92.05261993408203
patch: invalidate
rank: 963
score: 97.77230224609374
patch: abstract out ) ;
rank: 963
score: 97.474072265625
patch: int out ( )
rank: 963
score: 96.48016357421875
patch: . ;
rank: 964
score: 97.76981201171876
patch: String static ) ;
rank: 964
score: 93.97459411621094
patch: source
rank: 964
score: 93.1532974243164
patch: Use
rank: 964
score: 92.04142761230469
patch: Public
rank: 965
score: 98.21975708007812
patch: out out ( ) {
rank: 965
score: 98.14050903320313
patch: Object ( ) ;
rank: 965
score: 97.76705322265624
patch: public static ) {
rank: 965
score: 97.45924682617188
patch: synchronized . ) ;
rank: 965
score: 93.97451782226562
patch: Or
rank: 965
score: 93.15276336669922
patch: encode
rank: 966
score: 98.21584065755208
patch: out $NUMBER$ ( ) ;
rank: 966
score: 98.1091552734375
patch: private ( ) ;
rank: 966
score: 93.97413635253906
patch: root
rank: 966
score: 93.15151977539062
patch: New
rank: 966
score: 93.10806274414062
patch: running
rank: 967
score: 98.09666137695312
patch: / ) / ;
rank: 967
score: 97.74464111328125
patch: public out out ;
rank: 967
score: 96.22996012369792
patch: public )
rank: 967
score: 93.150146484375
patch: Write
rank: 968
score: 98.03734130859375
patch: final { ; }
rank: 968
score: 97.41189575195312
patch: J . ) ;
rank: 968
score: 96.06192016601562
patch: ch ;
rank: 968
score: 93.1455078125
patch: selected
rank: 969
score: 98.2002461751302
patch: public out . write ;
rank: 969
score: 97.69752807617188
patch: private abstract out ;
rank: 969
score: 97.40308837890625
patch: synchronized . ; ;
rank: 969
score: 93.96635437011719
patch: Exec
rank: 970
score: 97.40258178710937
patch: public boolean ) ;
rank: 970
score: 95.98624674479167
patch: final ;
rank: 970
score: 95.1026611328125
patch: Mail
rank: 970
score: 93.96566772460938
patch: Def
rank: 971
score: 98.01828002929688
patch: protected ( ) ;
rank: 971
score: 97.68612670898438
patch: ? out ;
rank: 971
score: 97.39967651367188
patch: Updatable . ) ;
rank: 971
score: 93.96333312988281
patch: tree
rank: 971
score: 93.14082336425781
patch: priority
rank: 972
score: 97.9869873046875
patch: String ( ) ;
rank: 972
score: 97.67711791992187
patch: public String . ;
rank: 972
score: 97.39271850585938
patch: public long ) ;
rank: 972
score: 95.77890014648438
patch: / )
rank: 972
score: 91.98713684082031
patch: Real
rank: 973
score: 98.1475118001302
patch: out $NUMBER$ ( ) {
rank: 973
score: 97.98341064453125
patch: void out ( &&
rank: 973
score: 97.38880615234375
patch: abstract / ) ;
rank: 973
score: 95.71959431966145
patch: / out
rank: 973
score: 93.96005249023438
patch: Popup
rank: 973
score: 93.13677978515625
patch: Dynamic
rank: 973
score: 91.98379516601562
patch: other
rank: 974
score: 97.96851806640625
patch: / ; ) ;
rank: 974
score: 97.52459716796875
patch: String . ;
rank: 974
score: 93.1357650756836
patch: Offset
rank: 974
score: 91.98361206054688
patch: now
rank: 975
score: 97.96842041015626
patch: m ( ) ;
rank: 975
score: 95.6212158203125
patch: . .
rank: 975
score: 93.9522933959961
patch: Console
rank: 975
score: 93.12947082519531
patch: debug
rank: 975
score: 93.09007263183594
patch: Row
rank: 975
score: 91.98177337646484
patch: center
rank: 976
score: 97.96431274414063
patch: long ( ) ;
rank: 976
score: 95.03251647949219
patch: Assert
rank: 976
score: 93.94599914550781
patch: Adapter
rank: 976
score: 93.1285400390625
patch: Role
rank: 976
score: 93.08749389648438
patch: Build
rank: 977
score: 97.76096801757812
patch: out out ( )
rank: 977
score: 95.58614095052083
patch: private ;
rank: 977
score: 93.94580841064453
patch: Parent
rank: 977
score: 93.11900329589844
patch: compile
rank: 977
score: 93.08560943603516
patch: stmt
rank: 978
score: 97.94530029296875
patch: ; ( ) ;
rank: 978
score: 95.58367919921875
patch: abstract ;
rank: 978
score: 93.94549560546875
patch: sql
rank: 978
score: 93.11851501464844
patch: sub
rank: 978
score: 91.97457122802734
patch: COMPONENT
rank: 979
score: 97.94109497070312
patch: int . ) ;
rank: 979
score: 97.71944580078124
patch: protected out ( )
rank: 979
score: 95.5767313639323
patch: protected ;
rank: 979
score: 93.07974243164062
patch: Contents
rank: 980
score: 97.69954223632813
patch: private out ( )
rank: 980
score: 97.2645492553711
patch: public static ;
rank: 980
score: 96.93203735351562
patch: out [ ;
rank: 980
score: 93.94021606445312
patch: Symbol
rank: 980
score: 93.1141357421875
patch: job
rank: 980
score: 91.96720886230469
patch: Available
rank: 981
score: 97.91321411132813
patch: int out ( ||
rank: 981
score: 97.25534057617188
patch: ) { }
rank: 981
score: 96.91487884521484
patch: byte ) ;
rank: 981
score: 95.49032592773438
patch: } ;
rank: 981
score: 94.98844909667969
patch: format
rank: 981
score: 93.93301391601562
patch: real
rank: 981
score: 93.11314392089844
patch: pc
rank: 981
score: 93.07272338867188
patch: SVN
rank: 982
score: 97.91114501953125
patch: / ) * ;
rank: 982
score: 97.20316314697266
patch: final out ;
rank: 982
score: 96.90384674072266
patch: / * ;
rank: 982
score: 95.45806884765625
patch: synchronized ;
rank: 982
score: 93.93182373046875
patch: Privileged
rank: 982
score: 93.11250305175781
patch: url
rank: 982
score: 93.06480407714844
patch: width
rank: 983
score: 97.64120483398438
patch: protected abstract out ;
rank: 983
score: 96.90172576904297
patch: public < )
rank: 983
score: 95.34365844726562
patch: .
rank: 983
score: 93.93025970458984
patch: Peer
rank: 983
score: 93.10838317871094
patch: IAST
rank: 983
score: 93.06463623046875
patch: This
rank: 984
score: 97.87286376953125
patch: abstract ) ;
rank: 984
score: 97.39178466796875
patch: public out .
rank: 984
score: 96.88407135009766
patch: Utilities . ;
rank: 984
score: 93.92790222167969
patch: Url
rank: 985
score: 97.16918182373047
patch: ) { ;
rank: 985
score: 96.86247253417969
patch: abstract . ;
rank: 985
score: 93.92462158203125
patch: Callback
rank: 986
score: 97.78352355957031
patch: static ) ;
rank: 986
score: 94.94801330566406
patch: Meta
rank: 986
score: 93.10163116455078
patch: LS
rank: 986
score: 93.06281280517578
patch: scroll
rank: 986
score: 91.95909118652344
patch: available
rank: 987
score: 93.92044067382812
patch: Buf
rank: 988
score: 97.18138122558594
patch: public ( )
rank: 988
score: 96.72056579589844
patch: org . ;
rank: 988
score: 93.91976928710938
patch: q
rank: 988
score: 93.09870147705078
patch: LT
rank: 989
score: 96.69793701171875
patch: synchronized . ;
rank: 990
score: 96.69685363769531
patch: public static )
rank: 990
score: 93.84294128417969
patch: )
rank: 990
score: 91.9476547241211
patch: namespace
rank: 991
score: 97.57591247558594
patch: int ) ;
rank: 991
score: 96.97579193115234
patch: public $STRING$ ;
rank: 991
score: 93.91875457763672
patch: Point
rank: 991
score: 93.0853271484375
patch: trace
rank: 991
score: 93.04829406738281
patch: head
rank: 992
score: 97.41485595703125
patch: synchronized ) ;
rank: 992
score: 96.6351318359375
patch: public Long ;
rank: 993
score: 96.6079330444336
patch: public Float ;
rank: 993
score: 93.07917022705078
patch: Priority
rank: 994
score: 97.3758544921875
patch: void ) ;
rank: 994
score: 96.95228576660156
patch: String ) ;
rank: 994
score: 96.9249267578125
patch: public out )
rank: 994
score: 96.59712982177734
patch: . . )
rank: 994
score: 93.91649627685547
patch: Core
rank: 994
score: 93.078857421875
patch: not
rank: 994
score: 93.04292297363281
patch: global
rank: 994
score: 92.84423828125
patch: {
rank: 995
score: 93.91627502441406
patch: Bug
rank: 995
score: 93.07733154296875
patch: Order
rank: 995
score: 91.93519592285156
patch: pop
rank: 996
score: 94.88644409179688
patch: Extension
rank: 996
score: 93.07487487792969
patch: OBJECT
rank: 997
score: 94.88455200195312
patch: DB
rank: 997
score: 93.03575134277344
patch: receive
rank: 998
score: 97.23104858398438
patch: VM ) ;
rank: 998
score: 96.3984375
patch: ? ;
rank: 998
score: 93.90486145019531
patch: task
rank: 998
score: 91.93055725097656
patch: prepare
rank: 999
score: 93.0712890625
patch: mi
rank: 999
score: 93.03307342529297
patch: response
rank: 999
score: 91.92739868164062
patch: cmp
rank: 1000
score: 96.31217447916667
patch: static ;
rank: 1000
score: 92.28599548339844
patch: Fre@@
