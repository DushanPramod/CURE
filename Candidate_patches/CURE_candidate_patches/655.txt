rank: 1
score: 99.9587910970052
patch: Iterator iter = res . entries . iterator ( ) ;
rank: 1
score: 99.82098388671875
patch: Iterator iter = res . entries ( ) ;
rank: 1
score: 99.7997802734375
patch: Iterator iter = res . iterator ( ) ;
rank: 1
score: 99.78600202287946
patch: Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 2
score: 99.71546088324652
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 2
score: 99.71418980189732
patch: Iterator iter = res . entries . entries . iterator ( ) ;
rank: 3
score: 99.70150146484374
patch: Iterator iter = v . iterator ( ) ;
rank: 3
score: 99.68867492675781
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 3
score: 99.68569946289062
patch: Iterator iter = res . entries . size ( ) ;
rank: 3
score: 99.67282104492188
patch: Iterator iter = v . entries . iterator ( ) ;
rank: 3
score: 99.64854329427084
patch: Iterator < String > iter = res . entries . iterator ( ) ;
rank: 4
score: 99.68488226996527
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 4
score: 99.65721638997395
patch: Iterator iter = res . entries . iter ( ) ;
rank: 4
score: 99.6439697265625
patch: final Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 4
score: 99.6269864169034
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 4
score: 99.53711700439453
patch: Iterator iter = res . get CaMeL Properties ( ) . iterator ( ) ;
rank: 5
score: 99.64137178308823
patch: Iterator < Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 5
score: 99.6200180053711
patch: Iterator iter = res . get . entries ( ) . iterator ( ) ;
rank: 5
score: 99.61533610026042
patch: Iterator iter = res . list . iterator ( ) ;
rank: 5
score: 99.58882068452381
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 5
score: 99.50755310058594
patch: Iterator iter = res . get CaMeL Classes ( ) . iterator ( ) ;
rank: 6
score: 99.67710367838542
patch: Iterator iter = res . entries ( ) . entries ( ) . iterator ( ) ;
rank: 6
score: 99.63252563476563
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 6
score: 99.59881122295673
patch: final Iterator iter = res . entries . iterator ( ) ;
rank: 6
score: 99.50572916666667
patch: Iterator < ] > iter = res . entries . iterator ( ) ;
rank: 7
score: 99.67146301269531
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ;
rank: 7
score: 99.6085205078125
patch: Iterator iter = res . iterator . iterator ( ) ;
rank: 7
score: 99.5558749112216
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 8
score: 99.62628936767578
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 8
score: 99.59453473772321
patch: Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 8
score: 99.59306066176471
patch: Iterator < String > iter = res . entries ( ) . iterator ( ) ;
rank: 8
score: 99.57230834960937
patch: Iterator iter = res . size ( ) ;
rank: 8
score: 99.5270465353261
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 8
score: 99.50346042798913
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 8
score: 99.50052083333334
patch: Iterator iter = res . entries ( $NUMBER$ ) . iterator ( ) ;
rank: 9
score: 99.61976318359375
patch: Iterator iter = entries . iterator ( ) ;
rank: 9
score: 99.58739420572917
patch: Iterator < Object > iter = res . entries . iterator ( ) ;
rank: 9
score: 99.58497314453125
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 9
score: 99.49615478515625
patch: Iterator iter = this . res . entries . iterator ( ) ;
rank: 10
score: 99.57726440429687
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 10
score: 99.57054646809895
patch: Iterator iter = this . entries . iterator ( ) ;
rank: 10
score: 99.56639946831598
patch: Iterator iter = res . get ( ) . entries ( ) . iterator ( ) ;
rank: 10
score: 99.49636008522727
patch: Iterator iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 10
score: 99.49355061848958
patch: Iterator iterator = res . entries . iterator ( ) ;
rank: 10
score: 99.48541259765625
patch: Iterator iter = res . to CaMeL Array ( ) . iterator ( ) ;
rank: 11
score: 99.55513763427734
patch: Iterator iter = res . entries . entries . entries . iterator ( ) ;
rank: 11
score: 99.50297241210937
patch: Iterator iter = v . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 11
score: 99.49055989583333
patch: Iterator iter = res . entries . entries ( ) ;
rank: 11
score: 99.48262293198529
patch: synchronized ( res ) { Iterator iter = res . entries . iterator ( ) ;
rank: 12
score: 99.60330200195312
patch: Iterator iter = res . get CaMeL Dimension ( ) . size ( ) ;
rank: 12
score: 99.56805419921875
patch: Iterator iter = v . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 12
score: 99.54092610677084
patch: Iterator < ? > iter = res . entries . iterator ( ) ;
rank: 12
score: 99.53435601128473
patch: while ( res . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 12
score: 99.50548785665761
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries . iterator ( ) ;
rank: 12
score: 99.48570251464844
patch: Iterator iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 12
score: 99.48322143554688
patch: Iterator iter = v . entries ( ) ;
rank: 13
score: 99.53231991038604
patch: Iterator < Object > iter = res . entries ( ) . iterator ( ) ;
rank: 13
score: 99.53044976128473
patch: Iterator iter = res . entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 13
score: 99.49551391601562
patch: Iterator iter = res . entries ( ) . entries . iterator ( ) ;
rank: 13
score: 99.48651413690476
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 13
score: 99.48234340122768
patch: Iterator iter = res . entries . iter . iterator ( ) ;
rank: 13
score: 99.45267486572266
patch: try { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 14
score: 99.56318495008681
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . size ( ) ;
rank: 14
score: 99.56024169921875
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries . iterator ( ) ;
rank: 14
score: 99.47804612379808
patch: Iterator iter = res . entries . iterator ( ) ; ;
rank: 14
score: 99.45691935221355
patch: int iter = res . entries . iterator ( ) ;
rank: 15
score: 99.52293178013393
patch: Iterator iter = res . entries ( ) . iter ( ) ;
rank: 15
score: 99.48239617598684
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 15
score: 99.46470424107143
patch: iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 15
score: 99.45066324869792
patch: Iterator iter = res . map . iterator ( ) ;
rank: 15
score: 99.44821166992188
patch: Iterator iter = v . iterator . iterator ( ) ;
rank: 16
score: 99.55272081163194
patch: Real CaMeL Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 16
score: 99.53249782986111
patch: Iterator iter = res . get CaMeL Data ( ) . entries . iterator ( ) ;
rank: 16
score: 99.5217041015625
patch: Iterator < int > iter = res . entries . iterator ( ) ;
rank: 16
score: 99.47626953125
patch: Iterator < Entry > iter = res . entries . iterator ( ) ;
rank: 16
score: 99.46347443953805
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 16
score: 99.44513702392578
patch: Iterator iter = res . entries ( - 1 ) . iterator ( ) ;
rank: 16
score: 99.43961007254464
patch: Iterator iterator = res . entries ( ) . iterator ( ) ;
rank: 17
score: 99.55060492621527
patch: Iterator iter = v . entries ( ) . entries ( ) . iterator ( ) ;
rank: 17
score: 99.52729034423828
patch: Iterator iter = res . next ( ) . entries . iterator ( ) ;
rank: 17
score: 99.51841735839844
patch: final Iterator < String > iter = res . entries . iterator ( ) ;
rank: 17
score: 99.51106480189732
patch: for ( Iterator iter = res . entries . iterator ( ) ;
rank: 17
score: 99.47577459161931
patch: iter = res . entries . iterator ( ) ;
rank: 17
score: 99.46287318638393
patch: Iterator iter = res . list ( ) . iterator ( ) ;
rank: 17
score: 99.4439697265625
patch: res . entries = res . entries . iterator ( ) ;
rank: 17
score: 99.43400573730469
patch: / * Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 18
score: 99.52884250217014
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 18
score: 99.52155219184027
patch: Iterator iter = v . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 18
score: 99.51689453125
patch: Iterator iter = res . get CaMeL Parent ( ) . entries ( ) . iterator ( ) ;
rank: 18
score: 99.49559529622395
patch: Iterator iter = entries . entries . iterator ( ) ;
rank: 18
score: 99.43587552584134
patch: Iterator < ] > iter = res . entries ( ) ;
rank: 18
score: 99.41944715711806
patch: Iterator iter = res . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 19
score: 99.51188151041667
patch: Iterator < Iterator > iter = res . entries . iterator ( ) ;
rank: 19
score: 99.50010172526042
patch: while ( v . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 19
score: 99.48947482638889
patch: Iterator iter = res . next ( ) . entries ( ) . iterator ( ) ;
rank: 19
score: 99.46620088465073
patch: Iterator iter = res . entries . = res . entries . iterator ( ) ;
rank: 19
score: 99.46479724702381
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries . iterator ( ) ;
rank: 19
score: 99.46168101917614
patch: Iterator iter = v . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 19
score: 99.43404134114583
patch: Iterator < T > iter = res . entries . iterator ( ) ;
rank: 19
score: 99.40870971679688
patch: Iterator iterator = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 20
score: 99.52269829644098
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 20
score: 99.49560546875
patch: Iterator iter = res . get CaMeL Data ( ) . entries ( ) . iterator ( ) ;
rank: 20
score: 99.47470092773438
patch: Iterator iter = res . get CaMeL Dimension ( ) . iter ( ) ;
rank: 20
score: 99.43082682291667
patch: Iterator iter = res . value . iterator ( ) ;
rank: 20
score: 99.40567355685764
patch: Iterator iter = res . iterator ( ) ; iterator . has CaMeL Next ( ) ;
rank: 21
score: 99.51350620814732
patch: Iterator iter = res . entries . iterator ( ) ; for (
rank: 21
score: 99.50191556490384
patch: Iterator iter = res . entries . iterator ( ) ; }
rank: 21
score: 99.49498639787946
patch: Iterator iter = res . get ( ) . entries ( ) ;
rank: 21
score: 99.44709777832031
patch: Iterator iter = new Iterator ( res . entries . iterator ( ) ) ;
rank: 21
score: 99.4272689819336
patch: Iterator iter = res . get CaMeL Properties ( ) . entries ( ) ;
rank: 21
score: 99.40517849392361
patch: Iterator iter = res . entries ( ) ; while . has CaMeL Next ( ) ;
rank: 22
score: 99.49807739257812
patch: Iterator iter = res . has CaMeL Next ( ) ;
rank: 22
score: 99.49415498621323
patch: Iterator < ? > iter = res . entries ( ) . iterator ( ) ;
rank: 22
score: 99.48915201822916
patch: Iterator iter = res . entries . ( ) . iterator ( ) ;
rank: 22
score: 99.46425374348958
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ;
rank: 22
score: 99.4451416015625
patch: Iterator iter = res . get ( 0 ) . iterator ( ) ;
rank: 22
score: 99.42239583333334
patch: Iterator < E > iter = res . entries . iterator ( ) ;
rank: 22
score: 99.4023681640625
patch: Iterator iter = res . entries ( res ) . iterator ( ) ;
rank: 23
score: 99.49077962239583
patch: Iterator < Class > iter = res . entries . iterator ( ) ;
rank: 23
score: 99.46234130859375
patch: Iterator iter = this . entries . entries . iterator ( ) ;
rank: 23
score: 99.44701538085937
patch: Iterator iter = list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 23
score: 99.44209289550781
patch: Iterator iter = res . entries ( ) ; iterator . iterator ( ) ;
rank: 23
score: 99.42216796875
patch: Iterator iter = res . entries ( 1 ) . iterator ( ) ;
rank: 24
score: 99.50294494628906
patch: Iterator iter = v . entries . entries ( ) . iterator ( ) ;
rank: 24
score: 99.49003601074219
patch: Iterator iter = res . get CaMeL Entries ( ) . iterator ( ) ;
rank: 24
score: 99.48014322916667
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Real CaMeL Vector ( this ) ;
rank: 24
score: 99.44371202256944
patch: Iterator iter = res . entries ; while ( iter . has CaMeL Next ( ) )
rank: 24
score: 99.43546549479167
patch: Iterator iter = res . entries . iterator ( ) ; = null ;
rank: 24
score: 99.40013709435097
patch: Iterator iter = res . iterator ( ) ; while ( )
rank: 25
score: 99.49302763097427
patch: Iterator < Real CaMeL Vector > iter = v . entries . iterator ( ) ;
rank: 25
score: 99.48701985677083
patch: Iterator < Integer > iter = res . entries . iterator ( ) ;
rank: 25
score: 99.45471869574652
patch: Iterator iter < Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 25
score: 99.44242350260417
patch: Iterator iter = v . list . iterator ( ) ;
rank: 25
score: 99.43820672286184
patch: Iterator < Real CaMeL Vector > iter = res . entries . entries . iterator ( ) ;
rank: 25
score: 99.4290283203125
patch: Iterator iter = ( Iterator ) res . entries . iterator ( ) ;
rank: 25
score: 99.39679633246527
patch: Iterator iter = res . entries ( ) ; iterator . has CaMeL Next ( ) ;
rank: 26
score: 99.500732421875
patch: Iterator iter = res . entries ( ) . size ( ) ;
rank: 26
score: 99.4856316061581
patch: final Iterator iter = res . get . entries ( ) . iterator ( ) ;
rank: 26
score: 99.45318603515625
patch: Iterator iter = v . entries . entries . iterator ( ) ;
rank: 26
score: 99.43366350446429
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . entries . iterator ( ) ;
rank: 26
score: 99.42371715198864
patch: Iterator iter = data . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 26
score: 99.41783728966347
patch: Iterator < String > iter = res . entries ( ) ;
rank: 26
score: 99.3967041015625
patch: Iterator iter = res . entries ( ) ) . iterator ( ) ;
rank: 27
score: 99.48367648654514
patch: Iterator iter = res . get CaMeL Type ( ) . entries . iterator ( ) ;
rank: 27
score: 99.46987575954861
patch: Iterator iter = res . entries ( ) . entries ( ) . entries ( ) ;
rank: 27
score: 99.41426304408482
patch: Iterator iter = res . entries = res . iterator ( ) ;
rank: 27
score: 99.3944580078125
patch: Iterator iter = res . entries ( ) . iterator ( ) ; ;
rank: 28
score: 99.4953857421875
patch: Iterator iter = res [ 0 ] . entries . iterator ( ) ;
rank: 28
score: 99.45233917236328
patch: Iterator iter = res . get CaMeL Value ( ) . iterator ( ) ;
rank: 28
score: 99.42727793817934
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . res . entries . iterator ( ) ;
rank: 28
score: 99.42081298828126
patch: Iterator iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ;
rank: 28
score: 99.41339874267578
patch: synchronized ( res ) { iter = res . entries . iterator ( ) ;
rank: 29
score: 99.47957153320313
patch: Iterator iter = res . get CaMeL Classes ( ) . entries ( ) . iterator ( ) ;
rank: 29
score: 99.42669318704044
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) {
rank: 29
score: 99.4197998046875
patch: Iterator iterator = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 29
score: 99.41162923177083
patch: Iterator iter = res . entries . iterator ( ) ; iterator ++ ;
rank: 29
score: 99.38975016276042
patch: res . entries = res . entries ; Iterator iter = v . iterator ( ) ;
rank: 30
score: 99.41610054347827
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . entries . entries . iterator ( ) ;
rank: 30
score: 99.4104995727539
patch: Iterator iter = res . entries . iterator ( ) ; iterator = null ;
rank: 30
score: 99.40746307373047
patch: Iterator iter = res . entries = res . entries . iterator ( ) ;
rank: 30
score: 99.38368443080357
patch: Iterator iter = res . iterator ( ) . iterator ( ) ;
rank: 31
score: 99.47754624310662
patch: Iterator < Iterator > iter = res . entries ( ) . iterator ( ) ;
rank: 31
score: 99.44557698567708
patch: Iterator iter = res . get CaMeL Entry ( ) . entries . iterator ( ) ;
rank: 31
score: 99.41018442007211
patch: Iterator iter = ( Iterator ) res . entries ( ) ;
rank: 31
score: 99.38211059570312
patch: Iterator iter = res . iterator . entries ( ) ;
rank: 32
score: 99.48670196533203
patch: int iter = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 32
score: 99.47664794921874
patch: Iterator iter = res . get CaMeL Class ( ) . entries ( ) . iterator ( ) ;
rank: 32
score: 99.4486083984375
patch: Iterator iter = res . entries . entries . entries . entries . iterator ( ) ;
rank: 32
score: 99.4434585571289
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 32
score: 99.40975247896634
patch: Iterator iter = res . entries . . iterator ( ) ;
rank: 32
score: 99.40715942382812
patch: Iterator iter = entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 32
score: 99.40618286132812
patch: int iter = res . entries ( ) ;
rank: 32
score: 99.38046603732639
patch: res . entries = res . entries ; Iterator iter = res . iterator ( ) ;
rank: 33
score: 99.47013854980469
patch: Iterator iter = res . get ( ) . entries . iterator ( ) ;
rank: 33
score: 99.40858043323864
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 33
score: 99.4051513671875
patch: Iterator iter = list . iterator ( ) ;
rank: 33
score: 99.37910730698529
patch: if ( res . entries != null ) res . entries = res . entries ;
rank: 34
score: 99.48445129394531
patch: Iterator iter = res != null : res . entries . iterator ( ) ;
rank: 34
score: 99.4671630859375
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 34
score: 99.44127061631944
patch: Iterator iter = res . entries ( ) . entries ( ) . size ( ) ;
rank: 34
score: 99.40733271059783
patch: Iterator Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 34
score: 99.40687913161058
patch: Iterator iter = res . entries . iterator ( ) ; iterator
rank: 34
score: 99.40380859375
patch: int iter = res . entries ( ) . size ( ) ;
rank: 34
score: 99.40040893554688
patch: Iterator iter = res . entries . iterator ( ) ; iterator . has CaMeL Next ( ) ;
rank: 34
score: 99.37440321180556
patch: Iterator iter = res . entries ( ) . iterator ( ) . iterator ( ) ;
rank: 35
score: 99.48392526726974
patch: final Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 35
score: 99.45914035373264
patch: while ( iter . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 35
score: 99.40491943359375
patch: Iterator iter ? res . entries . entries . iterator ( ) . has CaMeL Next ( ) ;
rank: 35
score: 99.39992268880208
patch: Iterator iter = this . res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 35
score: 99.37424187911184
patch: Iterator iter = res . iterator ( ) ; while ( . has CaMeL Next ( ) )
rank: 36
score: 99.47889055524554
patch: Iterator iter = res . entries ( ) . entries ( ) ;
rank: 36
score: 99.46499633789062
patch: final Iterator < Object > iter = res . entries . iterator ( ) ;
rank: 36
score: 99.45059204101562
patch: Iterator iter = res . get CaMeL Dimension ( ) ;
rank: 36
score: 99.43621826171875
patch: Iterator iter = res . entries . entries . entries ( ) . iterator ( ) ;
rank: 36
score: 99.40199973366477
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . iterator ( ) ;
rank: 36
score: 99.3980712890625
patch: Iterator iter = res . to CaMeL String ( ) . iterator ( ) ;
rank: 36
score: 99.37415364583333
patch: Iterator iter = res . entries ( ) . iterator ( ) ) ;
rank: 37
score: 99.46257467830883
patch: Iterator < Class > iter = res . entries ( ) . iterator ( ) ;
rank: 37
score: 99.44963522518383
patch: Iterator < Real CaMeL Vector > iter = res . entries . size ( ) ;
rank: 37
score: 99.40156482514881
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries . iterator ( ) ;
rank: 37
score: 99.4007927389706
patch: Iterator iter = Math . iterator ( res . entries . iterator ( ) ) ;
rank: 37
score: 99.39694649832589
patch: Iterator iter = res . this . entries . iterator ( ) ;
rank: 37
score: 99.3741390830592
patch: Iterator iter = res . entries ( res . entries ( ) ) . iterator ( ) ;
rank: 38
score: 99.4007339477539
patch: Iterator iter = res . entries . iterator ( ) ; iterator = 0 ;
rank: 38
score: 99.39987049932066
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) . iterator ( ) ;
rank: 38
score: 99.39713911576705
patch: Iterator iter = res . map . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 38
score: 99.39431762695312
patch: Iterator iter = res . get CaMeL Fields ( ) . iterator ( ) ;
rank: 38
score: 99.37384033203125
patch: Iterator iterator = v . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 39
score: 99.45687255859374
patch: Iterator iter = res . get CaMeL Method ( ) . entries ( ) . iterator ( ) ;
rank: 39
score: 99.43241373697917
patch: Iterator entries = res . entries . iterator ( ) ;
rank: 39
score: 99.39883858816964
patch: Iterator iter = res . entries . iter . iter ( ) ;
rank: 39
score: 99.39769897460937
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . entries . iterator ( ) ;
rank: 39
score: 99.39420572916667
patch: Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ;
rank: 39
score: 99.39378356933594
patch: Iterator iter = res . get CaMeL Bytes ( ) . iterator ( ) ;
rank: 40
score: 99.46747903262867
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 40
score: 99.45453491210938
patch: int size = res . entries . iterator ( ) . iterator ( ) . size ( ) ;
rank: 40
score: 99.43108771829044
patch: Iterator iter = res . ( ) . entries ( ) . iterator ( ) ;
rank: 40
score: 99.3954086303711
patch: Iterator iter = this . res . entries . entries . iterator ( ) ;
rank: 40
score: 99.3937759399414
patch: Iterator iter = res . get CaMeL Instance ( ) . entries ( ) ;
rank: 40
score: 99.371337890625
patch: Iterator iter = res . iterator . ) ; while ( iter . has CaMeL Next ( ) )
rank: 41
score: 99.45451136997768
patch: Iterator iter = res . get ( ) . iterator ( ) ;
rank: 41
score: 99.42838541666667
patch: Iterator iter = iter . next ( ) . entries ( ) . iterator ( ) ;
rank: 41
score: 99.38901192801339
patch: Iterator iter = res . entries = res . entries ( ) ;
rank: 41
score: 99.3692138671875
patch: Iterator iter = res . iterator ( res . size ( ) ) ;
rank: 42
score: 99.46696472167969
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 42
score: 99.42740885416667
patch: Iterator iter = res . entries . iterator ( ) : entries . iterator ( ) ;
rank: 42
score: 99.39462678328805
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries . entries . iterator ( ) ;
rank: 42
score: 99.38943917410714
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 42
score: 99.38704681396484
patch: Iterator iter = res . get CaMeL Classes ( ) . entries ( ) ;
rank: 42
score: 99.38625201056985
patch: Iterator iter = res . get ( res . entries . iterator ( ) ) ;
rank: 43
score: 99.46519252232143
patch: Iterator iter = entries . entries ( ) . iterator ( ) ;
rank: 43
score: 99.43003934972427
patch: Iterator < Real CaMeL Vector > res = res . entries . iterator ( ) ;
rank: 43
score: 99.42526584201389
patch: Iterator iter = this . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 43
score: 99.42154947916667
patch: Iterator iter = res . entries . next ( ) . entries . iterator ( ) ;
rank: 43
score: 99.38786177201705
patch: Iterator iter = this . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 43
score: 99.38205788352273
patch: Iterator iter = res . entries ( null ) ;
rank: 43
score: 99.3677978515625
patch: Iterator iter = v . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 44
score: 99.45357666015624
patch: Iterator iter = res . get CaMeL Properties ( ) . entries ( ) . iterator ( ) ;
rank: 44
score: 99.42816162109375
patch: Iterator iter = res . get CaMeL Value ( ) . size ( ) ;
rank: 44
score: 99.42145453559027
patch: Iterator iter = get CaMeL Dimension ( ) . entries ( ) . iterator ( ) ;
rank: 44
score: 99.3867696126302
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 44
score: 99.38397979736328
patch: Iterator iter = res . res . entries ( ) . iterator ( ) ;
rank: 44
score: 99.3814468383789
patch: Iterator iter = res . get CaMeL Parent ( ) . entries ( ) ;
rank: 44
score: 99.3677490234375
patch: Iterator iter = res . entries . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 45
score: 99.46394856770833
patch: Iterator iter = res . entries . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 45
score: 99.448486328125
patch: final Iterator < ? > iter = res . entries . iterator ( ) ;
rank: 45
score: 99.3853759765625
patch: Iterator iter = res . get . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 45
score: 99.3795166015625
patch: final Iterator iter = res . entries ( ) ;
rank: 45
score: 99.36734771728516
patch: Iterator iter = res . entries ( ) . iterator . iterator ( ) ;
rank: 46
score: 99.46349225725446
patch: Iterator iter = iter . entries ( ) . iterator ( ) ;
rank: 46
score: 99.42757415771484
patch: Iterator iter = res . get CaMeL Name ( ) . iterator ( ) ;
rank: 46
score: 99.38370186941964
patch: Iterator iter = res . res . entries . iterator ( ) ;
rank: 46
score: 99.38266823508523
patch: Iterator iter = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 46
score: 99.36385904947916
patch: if ( res != null ) res . entries = res . entries ;
rank: 47
score: 99.46322631835938
patch: Iterator iter = res == null : res . entries . iterator ( ) ;
rank: 47
score: 99.4140625
patch: Iterator iter = res . entries . iterator ( ) : res . iterator ( ) ;
rank: 47
score: 99.3855224609375
patch: Iterator < Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 47
score: 99.38262939453125
patch: Iterator iter = res . map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 47
score: 99.37642669677734
patch: Iterator iter = res . this . res . entries . iterator ( ) ;
rank: 47
score: 99.36024576822916
patch: Iterator iter = res . entries ( res . size ( ) ) ;
rank: 48
score: 99.46300591362848
patch: Iterator iter = res . entries . entries ( ) . entries . iterator ( ) ;
rank: 48
score: 99.42439270019531
patch: Iterator iter = res . get CaMeL Name ( ) . size ( ) ;
rank: 48
score: 99.41385226779514
patch: Iterator iter = res . entries . iterator ( ) : res . size ( ) ;
rank: 48
score: 99.40498352050781
patch: for ( Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 48
score: 99.38316650390625
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . iterator ( ) ;
rank: 48
score: 99.38223470052084
patch: Iterator iter = res . entries . = res . iterator ( ) ;
rank: 48
score: 99.3810043334961
patch: Iterator iter = res ; while ( iter . has CaMeL Next ( ) )
rank: 48
score: 99.37574869791666
patch: Iterator iter = res . entries ( null ) . iterator ( ) ;
rank: 48
score: 99.35931396484375
patch: Iterator iterator = res . entries ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 49
score: 99.44370727539062
patch: int entries = res . entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 49
score: 99.37434895833333
patch: Iterator iter = data . entries . iterator ( ) ;
rank: 49
score: 99.35721588134766
patch: res . res = res ; Iterator iter = res . iterator ( ) ;
rank: 50
score: 99.42284138997395
patch: int iter = res . get CaMeL Dimension ( ) ;
rank: 50
score: 99.40929497612848
patch: Iterator iter = res . entries . iterator ( ) ; has CaMeL Next ( ) ;
rank: 50
score: 99.39785587086396
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) . iterator ( ) ;
rank: 50
score: 99.37416770241477
patch: Iterator iter = res . get . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 50
score: 99.37366333007813
patch: Iterator iter = res . entries . to CaMeL Array ( ) . entries . iterator ( ) ;
rank: 50
score: 99.35623329564145
patch: Iterator iter = res . entries ( res . size ( ) ) . iterator ( ) ;
rank: 51
score: 99.45529513888889
patch: Iterator iter = res . entries = res . entries ( ) . iterator ( ) ;
rank: 51
score: 99.44012092141544
patch: Iterator < int > iter = res . entries ( ) . iterator ( ) ;
rank: 51
score: 99.42235565185547
patch: Iterator iter = res . entries . trim ( ) . iterator ( ) ;
rank: 51
score: 99.40773518880208
patch: Iterator iter = res . trim ( ) . entries ( ) . iterator ( ) ;
rank: 51
score: 99.3735988451087
patch: Iterator iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 51
score: 99.3733139038086
patch: Iterator iter = res . iterator ( ) ; iterator . iterator ( ) ;
rank: 51
score: 99.37306043836806
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ( ) )
rank: 51
score: 99.37123736213235
patch: final int entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 51
score: 99.35113884420956
patch: Iterator iter = res . entries ( ) . iterator ( ) ; while ( )
rank: 52
score: 99.45407104492188
patch: Iterator iter = res . entries . entries ( ) . entries ( ) ;
rank: 52
score: 99.43114624023437
patch: Iterator iter = res . get CaMeL V ( ) . entries ( ) . iterator ( ) ;
rank: 52
score: 99.39779324001736
patch: Iterator iter = res . entries . [ 0 ] . entries . iterator ( ) ;
rank: 52
score: 99.37320963541667
patch: Iterator iter = res . get . entries ( ) ;
rank: 52
score: 99.37276204427083
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) {
rank: 52
score: 99.35052490234375
patch: res . entries = res . entries ; Iterator iter = res . entries . iterator ( ) ;
rank: 53
score: 99.45057678222656
patch: Iterator iter = this . res . entries ( ) . iterator ( ) ;
rank: 53
score: 99.4208740234375
patch: Iterator < Real CaMeL Vector > iter = entries . iterator ( ) ;
rank: 53
score: 99.37186279296876
patch: Iterator iter = res . entries . entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 53
score: 99.3682352701823
patch: int iter = res . entries . size ( ) ;
rank: 53
score: 99.36669921875
patch: for ( Iterator iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 53
score: 99.34801136363636
patch: Iterator iter = res . iterator ( ) ; ;
rank: 54
score: 99.44396158854167
patch: Iterator iter = res . entries [ 0 ] . iterator ( ) ;
rank: 54
score: 99.43011833639706
patch: Iterator < Integer > iter = res . entries ( ) . iterator ( ) ;
rank: 54
score: 99.42017473493304
patch: Iterator iter = res . entries . has CaMeL Next ( ) ;
rank: 54
score: 99.39964463975694
patch: Iterator iter = res . remove ( ) . entries ( ) . iterator ( ) ;
rank: 54
score: 99.39592633928571
patch: try { Iterator iter = res . entries . iterator ( ) ;
rank: 54
score: 99.36657104492187
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) . iterator ( ) ;
rank: 55
score: 99.43977625229779
patch: Iterator iter = res . entries [ 0 ] . entries . iterator ( ) ;
rank: 55
score: 99.41865757533482
patch: Iterator iter = res . entries . entries . size ( ) ;
rank: 55
score: 99.39581298828125
patch: Iterator entries = res . entries ( ) . iterator ( ) ;
rank: 55
score: 99.3708267211914
patch: Iterator iter = res . get CaMeL Row ( ) . iterator ( ) ;
rank: 55
score: 99.36878877527573
patch: Iterator < String > iter = res . entries . entries . iterator ( ) ;
rank: 55
score: 99.36604817708333
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 56
score: 99.43904622395833
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( v ) ;
rank: 56
score: 99.41641235351562
patch: Iterator iter = res . get CaMeL Dimension ( ) . next ( ) ;
rank: 56
score: 99.39486873851104
patch: Iterator iter = res . entries Real CaMeL Vector ( ) . iterator ( ) ;
rank: 56
score: 99.36900419347427
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = 0 ;
rank: 56
score: 99.3676990327381
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries ( ) ;
rank: 56
score: 99.36535113790761
patch: Iterator iter = v . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 56
score: 99.36511948529412
patch: Iterator < ] > iter = res . entries ( ) . iterator ( ) ;
rank: 56
score: 99.33690467247597
patch: Iterator < String > iter = res . iterator ( ) ;
rank: 57
score: 99.43851511101974
patch: Iterator < Real CaMeL Vector > iter = res . entries ( ) . iterator ( ) ;
rank: 57
score: 99.41620744977679
patch: Iterator iter = res . entries . iterator ( ) ; ) {
rank: 57
score: 99.36894880022321
patch: Iterator iter = res . entries . iterator . iterator ( ) ;
rank: 57
score: 99.365478515625
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . entries . iterator ( ) ;
rank: 57
score: 99.36442057291667
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 57
score: 99.36382649739583
patch: final int iter = res . entries ( ) . size ( ) ;
rank: 58
score: 99.41424560546875
patch: Iterator iter = iter . has CaMeL Next ( ) ;
rank: 58
score: 99.39080810546875
patch: Iterator iter = res . entries . to CaMeL Array ( ) . entries ( ) ;
rank: 58
score: 99.36829630533855
patch: Iterator iter = res . entries . next ( ) ;
rank: 58
score: 99.36229359019886
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . entries . iterator ( ) ;
rank: 58
score: 99.36164686414931
patch: iter = res . entries ( ) ;
rank: 58
score: 99.33685302734375
patch: Iterator iter = v . iterator ( ) ; iterator . has CaMeL Next ( ) ;
rank: 59
score: 99.43734537760416
patch: Iterator iter = res [ 1 ] . entries . iterator ( ) ;
rank: 59
score: 99.42481904871323
patch: final Iterator iter = res . entries . entries ( ) . iterator ( ) ;
rank: 59
score: 99.4131851196289
patch: Iterator iter = res . get CaMeL Data ( ) . iterator ( ) ;
rank: 59
score: 99.39365641276042
patch: Iterator iter = res . size ( ) : res . entries . iterator ( ) ;
rank: 59
score: 99.3682861328125
patch: Iterator iter = res . entries . Iterator ( ) ;
rank: 59
score: 99.36396928267045
patch: Iterator iter = map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 59
score: 99.36104910714286
patch: / * Iterator iter = res . entries . iterator ( ) ;
rank: 59
score: 99.33575439453125
patch: Iterator iter ; try { iter = res . entries . iterator ( ) ;
rank: 60
score: 99.4245849609375
patch: Iterator iter = res . get . entries ( ) . entries ( ) . iterator ( ) ;
rank: 60
score: 99.4131368001302
patch: Iterator res = res . entries . iterator ( ) ;
rank: 60
score: 99.36174665178571
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iterator = res . entries . iterator ( ) ;
rank: 62
score: 99.4077657063802
patch: Iterator iter = v . entries . size ( ) ;
rank: 62
score: 99.38362630208333
patch: Iterator iter = res . get CaMeL Dimension ( ) . has CaMeL Next ( ) ;
rank: 62
score: 99.36619349888393
patch: Iterator iter . iter = res . entries . iterator ( ) ;
rank: 62
score: 99.36029459635417
patch: final Iterator iter = res . entries . entries . iterator ( ) ;
rank: 62
score: 99.3561123934659
patch: Iterator iter = res . get . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 62
score: 99.35423865685097
patch: Iterator < T > iter = res . entries ( ) ;
rank: 63
score: 99.43366442228618
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ( ) ) {
rank: 63
score: 99.422705078125
patch: int entries = res . entries . iterator ( ) . iterator ( ) . size ( ) ;
rank: 63
score: 99.40740356445312
patch: Iterator iter = entries . size ( ) ;
rank: 63
score: 99.38165961371527
patch: Iterator iter = res . to CaMeL Array ( ) . entries . iterator ( ) ;
rank: 63
score: 99.3650146484375
patch: Iterator iter ; Iterator iter = res . entries . iterator ( ) ;
rank: 63
score: 99.35286088423295
patch: entries = res . entries . iterator ( ) ;
rank: 63
score: 99.3304672241211
patch: Iterator iter = res . get CaMeL Interfaces ( ) . iterator ( ) ;
rank: 64
score: 99.42203979492187
patch: Iterator iter = res . get . get ( ) . entries ( ) . iterator ( ) ;
rank: 64
score: 99.40576171875
patch: Iterator iter = v . get CaMeL Dimension ( ) . entries ( ) ;
rank: 64
score: 99.38248697916667
patch: Iterator iter = res . clone ( ) . entries ( ) . iterator ( ) ;
rank: 64
score: 99.36392032398896
patch: Iterator iter = res . entries . iterator ( ) ; . iterator ( ) ;
rank: 64
score: 99.35465140964673
patch: Iterator iter = res . entries . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 64
score: 99.35189056396484
patch: int entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 64
score: 99.33003540039063
patch: Iterator iter . has CaMeL Next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 65
score: 99.42810930524554
patch: Real CaMeL Vector res = new Real CaMeL Vector ( this ) ;
rank: 65
score: 99.37815638950893
patch: Iterator iter = res . trim ( ) . iterator ( ) ;
rank: 65
score: 99.35882927389706
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries ) {
rank: 65
score: 99.35098876953126
patch: Iterator iter = res . copy ( ) ;
rank: 65
score: 99.32974243164062
patch: res . res = res ; Iterator iter = v . iterator ( ) ;
rank: 66
score: 99.42791069878473
patch: Iterator iter = res . entries . ebe CaMeL Divide ( ) . iterator ( ) ;
rank: 66
score: 99.42074584960938
patch: Iterator iter = res . entries . iterator ( ) ; res . has CaMeL Next ( ) ;
rank: 66
score: 99.402197265625
patch: Iterator iter = res . entries . length ;
rank: 66
score: 99.38054063585069
patch: while ( entries . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 66
score: 99.35752516526442
patch: Iterator iter = ! res . entries . iterator ( ) ;
rank: 66
score: 99.35010579427083
patch: synchronized ( res ) { Iterator iter = res . entries ( ) ;
rank: 66
score: 99.3294677734375
patch: Iterator iterator = res . iterator ( ) ;
rank: 67
score: 99.42786407470703
patch: Iterator iter = res . entries ( ) . iterator ( ) ; for (
rank: 67
score: 99.37839642693015
patch: Iterator iter = res . entries ( ) . ( ) . iterator ( ) ;
rank: 67
score: 99.36990017361111
patch: Real CaMeL Vector entries = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 67
score: 99.35657456341912
patch: Iterator iter = ( Iterator ) res . entries ( ) . iterator ( ) ;
rank: 67
score: 99.35221140008224
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . iterator ( ) ;
rank: 67
score: 99.34988168569711
patch: Iterator < E > iter = res . entries ( ) ;
rank: 68
score: 99.41993408203125
patch: Iterator iter = res . get CaMeL Instance ( ) . entries ( ) . iterator ( ) ;
rank: 68
score: 99.39848776424633
patch: Iterator < Real CaMeL Vector > iter = this . entries . iterator ( ) ;
rank: 68
score: 99.36868722098214
patch: Iterator iter = res = res . entries . iterator ( ) ;
rank: 68
score: 99.35647786458334
patch: Iterator iter = res . get ( 0 ) . entries ( ) ;
rank: 68
score: 99.35169982910156
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries )
rank: 68
score: 99.34859212239583
patch: Iterator iter = res . get . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 68
score: 99.32835693359375
patch: Iterator iter = res . iterator . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 69
score: 99.42637803819444
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( iter ) ;
rank: 69
score: 99.41658782958984
patch: final Iterator < Iterator > iter = res . entries . iterator ( ) ;
rank: 69
score: 99.36759185791016
patch: Iterator iter = get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 69
score: 99.35140991210938
patch: Iterator iter : res . entries . iterator ( ) ;
rank: 69
score: 99.34886881510417
patch: res . entries ( ) . iterator ( ) . iterator ( ) ;
rank: 69
score: 99.34695870535714
patch: Iterator iter = list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 69
score: 99.3282940204327
patch: Iterator iter = res . entries ( ) ; while ( )
rank: 70
score: 99.37141927083333
patch: while ( res . has CaMeL Next ( ) ) { res . advance ( ) ;
rank: 70
score: 99.35586547851562
patch: Iterator iter = res . iterator ( ) ; res . iterator ( ) ;
rank: 70
score: 99.35127397017045
patch: for ( iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 71
score: 99.42379940257354
patch: Iterator iter = res [ 0 ] . entries ( ) . iterator ( ) ;
rank: 71
score: 99.39403578814338
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . ( ) ;
rank: 71
score: 99.35496012369792
patch: Iterator iter = res . res . iterator ( ) ;
rank: 71
score: 99.34593200683594
patch: Iterator iter = v . get CaMeL Classes ( ) . iterator ( ) ;
rank: 71
score: 99.32639973958334
patch: synchronized ( res ) { Iterator iter = res . iterator ( ) ;
rank: 72
score: 99.41792805989583
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector . size ( ) ;
rank: 72
score: 99.41327868009868
patch: Iterator iter = res . get ( 0 ) . entries ( ) . iterator ( ) ;
rank: 72
score: 99.39171645220588
patch: Iterator < Real CaMeL Vector >> iter = res . entries . iterator ( ) ;
rank: 72
score: 99.37040201822917
patch: Iterator iter = res . copy ( ) . entries ( ) . iterator ( ) ;
rank: 72
score: 99.35472005208334
patch: Iterator iter = res . entries . iterator ( ) ; iter ++ ;
rank: 72
score: 99.35097868546195
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 72
score: 99.34528142755681
patch: iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 73
score: 99.41685726768092
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector (
rank: 73
score: 99.4129638671875
patch: Iterator iter = res . copy ( ) . iterator ( ) ;
rank: 73
score: 99.36977132161458
patch: Iterator iter = res . entries . to CaMeL Array ( ) . size ( ) ;
rank: 73
score: 99.36573137555804
patch: Iterator iter = res . clone ( ) . iterator ( ) ;
rank: 73
score: 99.35360717773438
patch: Iterator iter = this . res . iterator ( ) ;
rank: 73
score: 99.34520374644886
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 73
score: 99.34110260009766
patch: Iterator iter = res . entries ( - $NUMBER$ ) . iterator ( ) ;
rank: 74
score: 99.41660563151042
patch: Iterator iter = entries . entries ( ) . entries ( ) . iterator ( ) ;
rank: 74
score: 99.41094649465461
patch: Iterator < String > iter = res . get . entries ( ) . iterator ( ) ;
rank: 74
score: 99.38329360064338
patch: Iterator iter = res . get CaMeL Dimension ( iter ) . iterator ( ) ;
rank: 74
score: 99.36934661865234
patch: for ( Iterator iter = res . entries . entries . iterator ( ) ;
rank: 74
score: 99.36360168457031
patch: Iterator iter = iter . next ( ) . entries . iterator ( ) ;
rank: 74
score: 99.35337201286765
patch: Iterator < Entry > iter = res . entries . entries . iterator ( ) ;
rank: 74
score: 99.34388316761364
patch: Iterator iter = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 74
score: 99.33975040211396
patch: Iterator iter = res . value CaMeL Of ( $STRING$ ) . iterator ( ) ;
rank: 74
score: 99.32084147135417
patch: Iterator iter = v . entries ( ) ; while . has CaMeL Next ( ) ;
rank: 75
score: 99.38227844238281
patch: Iterator iter = res . get CaMeL Type ( ) . size ( ) ;
rank: 75
score: 99.35330636160714
patch: Iterator iter = res . entries . entries . iter ( ) ;
rank: 75
score: 99.34169514973958
patch: Iterator iter = v . map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 75
score: 99.32028680098684
patch: Iterator iter = res . entries ( ) ; while ( . has CaMeL Next ( ) )
rank: 76
score: 99.4146957397461
patch: Iterator iter = res . entries . iterator ( ) ; for ( for (
rank: 76
score: 99.41033325195312
patch: Iterator iter = res . get CaMeL VT ( ) . entries ( ) . iterator ( ) ;
rank: 76
score: 99.36881510416667
patch: if ( iter . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 76
score: 99.35308478860294
patch: Iterator iter = res . entries [ null ] . entries . iterator ( ) ;
rank: 76
score: 99.34504699707031
patch: Iterator iter = this . entries . entries . entries . iterator ( ) ;
rank: 76
score: 99.34163041548295
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 77
score: 99.3802719116211
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . length ;
rank: 77
score: 99.35856628417969
patch: Iterator iter < String > iter = res . entries . iterator ( ) ;
rank: 77
score: 99.35108947753906
patch: Iterator iter = res . entries . iter ( ) . iterator ( ) ;
rank: 77
score: 99.3414535522461
patch: Iterator iter = 0 ; while ( iter . has CaMeL Next ( ) )
rank: 77
score: 99.31974283854167
patch: if ( res != null ) res . ) res . entries = res . entries ;
rank: 78
score: 99.41375054253473
patch: Iterator iter = this . res . entries . entries ( ) . iterator ( ) ;
rank: 78
score: 99.34938267299107
patch: res . Iterator iter = res . entries . iterator ( ) ;
rank: 78
score: 99.34166802300348
patch: Iterator iter = res . entries ( ) . entries . entries . iterator ( ) ;
rank: 78
score: 99.34109629755434
patch: iter = res . entries . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 78
score: 99.3192202919408
patch: Iterator iter = v . iterator ( ) ; while ( . has CaMeL Next ( ) )
rank: 79
score: 99.41364881727431
patch: int iter = res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 79
score: 99.36494663783482
patch: Iterator iter = res . v . entries . iterator ( ) ;
rank: 79
score: 99.35493469238281
patch: Iterator iter < Object > iter = res . entries . iterator ( ) ;
rank: 79
score: 99.34135356702302
patch: Iterator < Real CaMeL Vector > iter = this . res . entries . iterator ( ) ;
rank: 79
score: 99.3402099609375
patch: Iterator iterator = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 79
score: 99.33375901442308
patch: final int iter = res . entries . iterator ( ) ;
rank: 79
score: 99.3191669170673
patch: Iterator iter = v . iterator ( ) ; while ( )
rank: 80
score: 99.4056396484375
patch: final Iterator < String > iter = res . entries ( ) . iterator ( ) ;
rank: 80
score: 99.3751220703125
patch: iter . has CaMeL Next ( ) ; iter . advance ( ) ;
rank: 80
score: 99.36332433363971
patch: Iterator iter = res . entries . entries . ( ) . iterator ( ) ;
rank: 80
score: 99.35428873697917
patch: Iterator iter = res . read ( ) . entries ( ) . iterator ( ) ;
rank: 80
score: 99.31761881510417
patch: Iterator iter = res . entries . iterator ( ) ; while ( )
rank: 81
score: 99.40494113498264
patch: Iterator iter = res . get CaMeL Method . entries ( ) . iterator ( ) ;
rank: 81
score: 99.36332194010417
patch: Iterator iter = v . entries ( ) . entries ( ) . entries ( ) ;
rank: 81
score: 99.35344696044922
patch: int iter = res . get CaMeL Dimension ( ) . size ( ) ;
rank: 81
score: 99.34794921875
patch: Iterator iter = res . entries . iterator ( ) ; iterator -- ;
rank: 81
score: 99.33308919270833
patch: Iterator iter = res . get ( null ) . iterator ( ) ;
rank: 82
score: 99.373779296875
patch: Iterator iter = res . get CaMeL Type ( ) . iterator ( ) ;
rank: 82
score: 99.35274832589286
patch: Iterator iter = res . data . entries . iterator ( ) ;
rank: 82
score: 99.34696197509766
patch: Iterator < ) . Iterator iter = res . entries . iterator ( ) ;
rank: 82
score: 99.33897181919643
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector >= iter = res . entries . iterator ( ) ;
rank: 82
score: 99.33011300223214
patch: Iterator iter = res . entries ( . iterator ( ) ) ;
rank: 82
score: 99.3133544921875
patch: if ( res != null ) res . entries . add ( res ) ;
rank: 83
score: 99.41207546657986
patch: Iterator iter = this . res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 83
score: 99.34642791748047
patch: Iterator iter = res . entries . iterator ( ) ; iterator return res ;
rank: 83
score: 99.33855329241071
patch: Iterator iter = v . list ( ) . iterator ( ) ;
rank: 83
score: 99.33492909307066
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ? ( Open CaMeL Map CaMeL Real CaMeL Vector )
rank: 83
score: 99.32697143554688
patch: Iterator iter = res . clone ( ) ;
rank: 84
score: 99.41029866536458
patch: Iterator iter = iter . entries ( ) . entries ( ) . iterator ( ) ;
rank: 84
score: 99.3721564797794
patch: final Iterator iter = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 84
score: 99.35884363511029
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) . entries ( ) ;
rank: 84
score: 99.3455810546875
patch: Iterator iter = res . entries . iterator ( ) ; = $NUMBER$ ;
rank: 84
score: 99.33828735351562
patch: Iterator iter = res . set . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 84
score: 99.33423913043478
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . entries . iterator ( ) ;
rank: 84
score: 99.32630208333333
patch: Iterator iter = res . entries ( true ) . iterator ( ) ;
rank: 84
score: 99.30857747395834
patch: Iterator Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 85
score: 99.4097900390625
patch: Iterator iter = iter . iterator ( ) ;
rank: 85
score: 99.40231323242188
patch: Iterator iter = res . get CaMeL Superclass ( ) . entries ( ) . iterator ( ) ;
rank: 85
score: 99.3716812133789
patch: Iterator iter = res . get CaMeL Id ( ) . iterator ( ) ;
rank: 85
score: 99.34716796875
patch: synchronized ( this ) { Iterator iter = res . entries . iterator ( ) ;
rank: 85
score: 99.34522202435662
patch: Iterator iter = res . add ( res . entries . iterator ( ) ) ;
rank: 85
score: 99.3381591796875
patch: Iterator iter = iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 85
score: 99.33397376019022
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries . entries . iterator ( ) ;
rank: 85
score: 99.3251724243164
patch: res . entries ( ) ; Iterator iter = res . entries ( ) ;
rank: 86
score: 99.40878731863839
patch: Iterator iter = res != null . entries . iterator ( ) ;
rank: 86
score: 99.40183668870192
patch: Iterator < Object > iter = res . entries ( ) ;
rank: 86
score: 99.37146809895833
patch: Iterator < Real CaMeL Vector > iter = res . size ( ) ;
rank: 86
score: 99.35694037543402
patch: Iterator iter = res . entries ( ) . entries ( ) . iter ( ) ;
rank: 86
score: 99.33814493815105
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 86
score: 99.3233871459961
patch: Iterator iter = res . get CaMeL Cause ( ) . entries ( ) ;
rank: 87
score: 99.3984375
patch: final Iterator iter = res . entries ( ) . iter ( ) ;
rank: 87
score: 99.3709945678711
patch: Iterator iter = res . get CaMeL Data ( ) . size ( ) ;
rank: 87
score: 99.35657501220703
patch: Iterator iter = res . [ 0 ] . entries . iterator ( ) ;
rank: 87
score: 99.34280395507812
patch: Iterator iter = entries . iterator ( ) ; iterator . iterator ( ) ;
rank: 87
score: 99.3377685546875
patch: Iterator iter = res . iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 87
score: 99.33228648792614
patch: final Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 87
score: 99.32073567708333
patch: Iterator iter = res . entries ( $STRING$ ) . iterator ( ) ;
rank: 88
score: 99.39783528645833
patch: Iterator < ) > iter = res . entries . iterator ( ) ;
rank: 88
score: 99.37043762207031
patch: Iterator iter = res . get CaMeL Type ( ) . entries ( ) ;
rank: 88
score: 99.35594177246094
patch: Iterator iter = res . entries . entries ( ) . size ( ) ;
rank: 88
score: 99.3427963256836
patch: Iterator iter = res . entries ( ) ; res . iterator ( ) ;
rank: 88
score: 99.33562677556819
patch: Iterator iter = res . split . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 88
score: 99.31987762451172
patch: Iterator iter = entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 88
score: 99.30601196289062
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) return res ;
rank: 89
score: 99.39737701416016
patch: Iterator iter = res . entries . list ( ) . iterator ( ) ;
rank: 89
score: 99.36951401654412
patch: Iterator iter = res . get CaMeL Dimension ( iter . size ( ) ) ;
rank: 89
score: 99.35463303786058
patch: Iterator Iterator iter = res . entries . iterator ( ) ;
rank: 89
score: 99.34283447265625
patch: Iterator iter = res . close ( ) . entries ( ) . iterator ( ) ;
rank: 89
score: 99.34250710227273
patch: iterator = res . entries . iterator ( ) ;
rank: 89
score: 99.3349078634511
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 90
score: 99.40608215332031
patch: res . set CaMeL Entry ( v . get CaMeL Entry ( ) ) ;
rank: 90
score: 99.39656575520833
patch: Iterator iter = res . entries . iterator ( ) ; iterator . iterator ( ) ;
rank: 90
score: 99.36820220947266
patch: Iterator iter = v . get CaMeL Dimension ( ) . size ( ) ;
rank: 90
score: 99.34168836805556
patch: Iterator iter = res == new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 90
score: 99.34125832950367
patch: Iterator iter = res . get ( 0 ) . entries . iterator ( ) ;
rank: 90
score: 99.33436075846355
patch: System . arraycopy ( res . entries , 0 , res . entries , 0 , res . entries . length ) ;
rank: 90
score: 99.31905110677083
patch: Iterator iter = res . entries ( this ) . iterator ( ) ;
rank: 90
score: 99.30358208550348
patch: res . res = res ; Iterator iter = res . entries . iterator ( ) ;
rank: 91
score: 99.39545084635417
patch: Iterator iter = res . entries ( ) . iterator ( ) ; else
rank: 91
score: 99.36802045036765
patch: Iterator iter = res . contains ( v . get CaMeL Dimension ( ) ) ;
rank: 91
score: 99.35024007161458
patch: Iterator iter = res . get CaMeL Context ( ) . entries . iterator ( ) ;
rank: 91
score: 99.32786923363095
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . entries . iterator ( ) ;
rank: 91
score: 99.31786237444196
patch: Iterator iter = res . entries ( ) ; next ( ) ;
rank: 91
score: 99.3028793334961
patch: try { Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 92
score: 99.40556897615132
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries ( ) ) {
rank: 92
score: 99.3501953125
patch: Iterator iter = res . entries . index CaMeL Of ( 0 ) ;
rank: 92
score: 99.33263142903645
patch: Iterator iter = this . res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 92
score: 99.30223499644886
patch: Iterator iter = res . iterator ( ) ) ;
rank: 93
score: 99.39501342773437
patch: Iterator iter = System . get CaMeL Instance ( ) . entries ( ) . iterator ( ) ;
rank: 93
score: 99.36485380284927
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( ) ; ;
rank: 93
score: 99.34041654146634
patch: Iterator iter = res . entries . iterator ( ) ) ;
rank: 93
score: 99.33656939338235
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries iterator ( ) ;
rank: 93
score: 99.32722473144531
patch: Iterator iter = v . entries ( ) . entries . iterator ( ) ;
rank: 93
score: 99.30137005974265
patch: res . res = res . entries . iterator ( ) . next ( ) ;
rank: 94
score: 99.40333958675987
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = create CaMeL Real CaMeL Vector ( this ) ;
rank: 94
score: 99.39339192708333
patch: Iterator iter = res . get CaMeL Data . entries ( ) . iterator ( ) ;
rank: 94
score: 99.36395670572917
patch: Iterator iter = res . ( ) . entries . iterator ( ) ;
rank: 94
score: 99.34979926215277
patch: Iterator iter = res . next ( ) . entries . entries . iterator ( ) ;
rank: 94
score: 99.33185577392578
patch: Object [ ] data = res . entries . to CaMeL Array ( ) ;
rank: 94
score: 99.31507975260416
patch: Iterator < ] > iterator = res . entries . iterator ( ) ;
rank: 94
score: 99.3001708984375
patch: res . entries = new Iterator [ res . entries . size ( ) ] ;
rank: 95
score: 99.40190887451172
patch: Iterator iter = res . entries ( ) != null . iterator ( ) ;
rank: 95
score: 99.39084344161184
patch: Iterator < String > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 95
score: 99.36310686383929
patch: Iterator iter = res . get CaMeL Dimension ( ) . length ;
rank: 95
score: 99.33529324001736
patch: Iterator iter = res . name ( ) . entries ( ) . iterator ( ) ;
rank: 95
score: 99.33044921875
patch: Iterator iter = Math . min ( res . entries . size ( ) , res . entries . size ( ) ) ;
rank: 95
score: 99.2998046875
patch: if ( res . entries != null ) res . entries = res . entries . entries ;
rank: 96
score: 99.359130859375
patch: final Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 96
score: 99.34917449951172
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . size ( ) ;
rank: 96
score: 99.33784790039063
patch: Iterator iter = $STRING$ . iterator ( ) ;
rank: 96
score: 99.33513047960069
patch: Iterator iter = res != null ? res . entries . iterator ( ) : null ;
rank: 96
score: 99.29950420673077
patch: if ( res != null ) res . res = res ;
rank: 97
score: 99.39930555555556
patch: Iterator iter = res == null . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 97
score: 99.38955891927084
patch: Iterator < String > iterator = res . entries . iterator ( ) ;
rank: 97
score: 99.35792893629808
patch: Iterator iter = res . entries . iterator ( ) ; {
rank: 97
score: 99.34605407714844
patch: Iterator iter = v . entries . entries . entries . iterator ( ) ;
rank: 97
score: 99.3329608623798
patch: Iterator iter iter = res . entries . iterator ( ) ;
rank: 97
score: 99.32892400568181
patch: List list = res . entries . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 97
score: 99.29518432617188
patch: Iterator iter = res . iterator ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 98
score: 99.39893450055804
patch: Iterator iter = res == null . entries . iterator ( ) ;
rank: 98
score: 99.38883463541667
patch: Iterator iter = res . get CaMeL Instance . entries ( ) . iterator ( ) ;
rank: 98
score: 99.35760139016544
patch: Iterator iter = res . add ( v . get CaMeL Dimension ( ) ) ;
rank: 98
score: 99.34297943115234
patch: Iterator iter = res . entries . next ( ) . entries ( ) ;
rank: 98
score: 99.32296752929688
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; ) ;
rank: 98
score: 99.2934326171875
patch: Iterator iterator = v . entries ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 99
score: 99.39690085018383
patch: Iterator iter = res . entries [ 1 ] . entries . iterator ( ) ;
rank: 99
score: 99.34256998697917
patch: Iterator iter = res . entries . Real CaMeL Vector ( ) . iterator ( ) ;
rank: 99
score: 99.33280436197917
patch: Iterator iter = res != null ? res . entries . iterator ( ) : 0 ;
rank: 99
score: 99.32837931315105
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 99
score: 99.32259368896484
patch: Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 99
score: 99.31299591064453
patch: int iter . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 100
score: 99.38580322265625
patch: Iterator iter = res . get CaMeL Priority ( ) . entries ( ) . iterator ( ) ;
rank: 100
score: 99.35733032226562
patch: iter . has CaMeL Next ( ) ; { iter . advance ( ) ;
rank: 100
score: 99.33992513020833
patch: Iterator iter = res . entries . index CaMeL Of ( this ) ;
rank: 100
score: 99.329638671875
patch: Iterator iter = new ( res . entries . iterator ( ) ) ;
rank: 100
score: 99.3281017485119
patch: iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 100
score: 99.32212428042763
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) ;
rank: 100
score: 99.31087493896484
patch: Iterator iter = res . get CaMeL Properties ( ) . size ( ) ;
rank: 100
score: 99.29298909505208
patch: try { Iterator iter = res . iterator ( ) ;
rank: 101
score: 99.33851623535156
patch: Iterator iter = res . v . entries ( ) . iterator ( ) ;
rank: 101
score: 99.33176676432292
patch: Iterator iter += res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 101
score: 99.32154482886905
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . iterator ( ) ) {
rank: 101
score: 99.30861529181985
patch: final int iter . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 101
score: 99.29214242788461
patch: Iterator < Integer > iter = res . iterator ( ) ;
rank: 102
score: 99.39592742919922
patch: Iterator iter = res . entries . entries ( ) . iter ( ) ;
rank: 102
score: 99.35239664713542
patch: Iterator iter = res . length . iterator ( ) ;
rank: 102
score: 99.32909217247597
patch: Iterator iter = res . entries . iterator ( ) ; .
rank: 102
score: 99.32643432617188
patch: Iterator iter = v . get CaMeL Dimension ( ) . entries ( ) . iterator ( ) ;
rank: 102
score: 99.30764770507812
patch: Iterator iter = res . get CaMeL Chars ( ) . iterator ( ) ;
rank: 102
score: 99.29164341517857
patch: Iterator iter = v . iterator ( ) . iterator ( ) ;
rank: 103
score: 99.39464518229167
patch: Iterator iter = res . entries [ 1 ] . iterator ( ) ;
rank: 103
score: 99.38507080078125
patch: Iterator iter = res . get CaMeL Entries ( ) . entries ( ) . iterator ( ) ;
rank: 103
score: 99.33075823102679
patch: Iterator iter = res : res . entries . iterator ( ) ;
rank: 103
score: 99.32897135416667
patch: Iterator iter = res . get ( res . iterator ( ) ) ;
rank: 103
score: 99.32032412574405
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . res . iterator ( ) ;
rank: 103
score: 99.30606515066964
patch: Iterator iter = res . map ( ) . iterator ( ) ;
rank: 103
score: 99.29073293585526
patch: Iterator iter = res . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 104
score: 99.39375385485198
patch: Iterator iter = ( ( Real CaMeL Vector ) res . entries . iterator ( ) ) ;
rank: 104
score: 99.35225183823529
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( ) ; }
rank: 104
score: 99.33055204503677
patch: Iterator iter = res == new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 104
score: 99.32703508649554
patch: Iterator iter = res . entries . iterator ( ) ; ) ;
rank: 104
score: 99.32565307617188
patch: int size = res . entries . size ( ) ;
rank: 104
score: 99.31916610054348
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res . entries . iterator ( ) ;
rank: 104
score: 99.30574951171874
patch: Enumeration iter = res . entries ( ) ;
rank: 104
score: 99.29041748046875
patch: Iterator iter = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 105
score: 99.35185895647321
patch: Iterator iter = res . iter . has CaMeL Next ( ) ;
rank: 105
score: 99.32685852050781
patch: Iterator iter = res . get = res . entries . iterator ( ) ;
rank: 105
score: 99.32394409179688
patch: Iterator iter = res . clone ( ) . entries . iterator ( ) ;
rank: 105
score: 99.31845431857639
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries ( ) )
rank: 105
score: 99.30526529947916
patch: Iterator < ] >> iter = res . entries . iterator ( ) ;
rank: 106
score: 99.381591796875
patch: final Iterator iter = res . get ( ) . entries ( ) . iterator ( ) ;
rank: 106
score: 99.35120346966912
patch: Iterator < Real CaMeL Vector > iter = res . get CaMeL Dimension ( ) ;
rank: 106
score: 99.33511352539062
patch: for ( for ( Iterator iter = res . entries . iterator ( ) ;
rank: 106
score: 99.3264404296875
patch: Iterator iter = res . entries . iterator ( ) ; return res ;
rank: 106
score: 99.32289341517857
patch: for ( Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 106
score: 99.31795247395833
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . iterator ( ) )
rank: 106
score: 99.3041130514706
patch: res . get CaMeL Name ( ) . iterator ( ) . iterator ( ) ;
rank: 107
score: 99.39262838924633
patch: iter = res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 107
score: 99.38124712775735
patch: final Iterator iter = res . get CaMeL Classes ( ) . iterator ( ) ;
rank: 107
score: 99.35099029541016
patch: Iterator iter = res . get CaMeL Dimension ( ) . Iterator ( ) ;
rank: 107
score: 99.32784423828124
patch: Iterator iter = res . iter ( ) ;
rank: 107
score: 99.3256476907169
patch: Iterator iter = Math . list ( res . entries . iterator ( ) ) ;
rank: 107
score: 99.32212829589844
patch: Iterator iter = v . get CaMeL Properties ( ) . iterator ( ) ;
rank: 107
score: 99.31778757195724
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . iterator ( ) ) {
rank: 107
score: 99.30371856689453
patch: Iterator iter = ( res . entries ( ) . iterator ( ) ) ;
rank: 107
score: 99.28865814208984
patch: res . Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 108
score: 99.3923404091283
patch: final Real CaMeL Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 108
score: 99.31724638097427
patch: Iterator < Object > iter = res . entries . entries . iterator ( ) ;
rank: 108
score: 99.3037109375
patch: Iterator iter = res . entries ( $NUMBER$ ) . next ( ) ;
rank: 108
score: 99.28843287417763
patch: if ( res . entries != null && res . entries . size ( ) > 0 )
rank: 109
score: 99.38097466362848
patch: Iterator iter = res . get = res . entries ( ) . iterator ( ) ;
rank: 109
score: 99.348291015625
patch: Iterator < boolean > iter = res . entries . iterator ( ) ;
rank: 109
score: 99.33200073242188
patch: Vector iter = res . entries . iterator ( ) ;
rank: 109
score: 99.32148881392045
patch: Iterator iter = res . iterator . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 109
score: 99.31723167782738
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . size ( ) ;
rank: 109
score: 99.302294921875
patch: Iterator < String > iter = res . map . iterator ( ) ;
rank: 109
score: 99.28835161994485
patch: if ( res != null ) res . entries = res . entries . entries ;
rank: 110
score: 99.38087768554688
patch: Iterator iter = res . get CaMeL State ( ) . entries ( ) . iterator ( ) ;
rank: 110
score: 99.34783466045673
patch: Iterator iter = res . . entries . iterator ( ) ;
rank: 110
score: 99.32123046875
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . ; iter . has CaMeL Next ( ) )
rank: 110
score: 99.31693699048913
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = this . res . entries . iterator ( ) ;
rank: 110
score: 99.30155181884766
patch: Iterator iter = res . entries = this . entries . iterator ( ) ;
rank: 110
score: 99.28807157628677
patch: if ( v . entries != null ) res . entries = res . entries ;
rank: 111
score: 99.39027404785156
patch: Iterator iter = res . ebe CaMeL Divide ( ) . iterator ( ) ;
rank: 111
score: 99.3799187155331
patch: if ( res != null ) iter = res . entries . iterator ( ) ;
rank: 111
score: 99.34760284423828
patch: Iterator iter = res . next ( ) . entries . size ( ) ;
rank: 111
score: 99.33036295572917
patch: Iterator iter = v . get CaMeL Data ( ) . entries . iterator ( ) ;
rank: 111
score: 99.32502964564732
patch: Iterator iter = res . remove ( ) . iterator ( ) ;
rank: 111
score: 99.3228759765625
patch: Iterator iter = res . entries . = res . entries . iter ( ) ;
rank: 111
score: 99.3164699388587
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( v ) ;
rank: 111
score: 99.30066636029412
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( res ) ;
rank: 111
score: 99.286865234375
patch: Iterator iter = res . entries ( res . entries . size ( ) ) ;
rank: 112
score: 99.39008532072368
patch: Iterator iter . has CaMeL Next ( ) ; && iter . has CaMeL Next ( ) ;
rank: 112
score: 99.37860107421875
patch: Iterator iter = res . get . get . entries ( ) . iterator ( ) ;
rank: 112
score: 99.32483588324652
patch: Iterator iter = res . parse ( ) . entries ( ) . iterator ( ) ;
rank: 112
score: 99.32209777832031
patch: Iterator iter = res . entries . iterator ( ) ; iterator = $NUMBER$ ;
rank: 112
score: 99.32081187855114
patch: Iterator list = res . entries . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 112
score: 99.31611713610198
patch: Iterator < Real CaMeL Vector > iter = this . entries . entries . iterator ( ) ;
rank: 112
score: 99.30056762695312
patch: Iterator iter = res . value CaMeL Of ( ) . iterator ( ) ;
rank: 112
score: 99.28593175551471
patch: Iterator iter = res . entries ( ) [ 0 ] . iterator ( ) ;
rank: 113
score: 99.37650792738971
patch: Iterator < T > iter = res . entries ( ) . iterator ( ) ;
rank: 113
score: 99.34561593191964
patch: Iterator iter = res . entries . iterator ( ) ; while (
rank: 113
score: 99.32758246527777
patch: Iterator iter = v . entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 113
score: 99.32080950055804
patch: / ; Iterator iter = res . entries . iterator ( ) ;
rank: 113
score: 99.32026977539063
patch: Iterator iter = res . clone ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 113
score: 99.31581333705357
patch: Iterator < Real CaMeL Vector > iter = res . entries . entries . entries . iterator ( ) ;
rank: 113
score: 99.30014038085938
patch: Iterator iter = res . entries ( ) ; super . entries ( ) ;
rank: 113
score: 99.2859130859375
patch: Iterator iter = res . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 114
score: 99.32070922851562
patch: Iterator iter = res . get CaMeL Inverse ( ) . iterator ( ) ;
rank: 114
score: 99.32009405838816
patch: res . set CaMeL Length ( 0 ) ; res . set CaMeL Length ( 0 ) ;
rank: 114
score: 99.31566321331522
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) this ) . entries . iterator ( ) ;
rank: 114
score: 99.29994111902573
patch: Iterator iter = res . entries ( null , null ) . iterator ( ) ;
rank: 115
score: 99.37638092041016
patch: final Iterator < Entry > iter = res . entries . iterator ( ) ;
rank: 115
score: 99.32377794053819
patch: Iterator iter = res == null ? null : res . entries . iterator ( ) ;
rank: 115
score: 99.32022298177084
patch: Iterator < void > iter = res . entries . iterator ( ) ;
rank: 115
score: 99.3200916108631
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 115
score: 99.31559673108552
patch: Iterator < Real CaMeL Vector > iter = v . entries . entries . iterator ( ) ;
rank: 115
score: 99.28568761488971
patch: Iterator iter = res . entries ( res . entries . iterator ( ) ) ;
rank: 116
score: 99.3228759765625
patch: Iterator iter = res . entries . iterator ( ) 1 ;
rank: 116
score: 99.296923828125
patch: Iterator iter = res . get ( null ) . entries ( ) ;
rank: 116
score: 99.285400390625
patch: if ( res . entries . size ( ) == 0 ) return res ;
rank: 117
score: 99.38768768310547
patch: Iterator iter = this . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 117
score: 99.375
patch: Iterator < Throwable > iter = res . entries . iterator ( ) ;
rank: 117
score: 99.34269714355469
patch: Iterator iter = res . get CaMeL Id ( ) . size ( ) ;
rank: 117
score: 99.32605794270833
patch: entries = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 117
score: 99.32279459635417
patch: Iterator iter = res . min ( ) . entries ( ) . iterator ( ) ;
rank: 117
score: 99.31998697916667
patch: iter iter = res . entries . iterator ( ) ;
rank: 117
score: 99.31979370117188
patch: Iterator iter = res . entries . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 117
score: 99.311279296875
patch: Iterator iter = res . get CaMeL Value ( ) . entries . iterator ( ) ;
rank: 117
score: 99.29581996372768
patch: int iter = res . entries ( ) . iterator ( ) ;
rank: 117
score: 99.28523254394531
patch: if ( res != null ) res . ) res . res = res ;
rank: 118
score: 99.3873291015625
patch: Real CaMeL Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 118
score: 99.32276407877605
patch: List iter = res . entries . iterator ( ) ;
rank: 118
score: 99.31952459161931
patch: Iterator iter = this . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 118
score: 99.31930541992188
patch: Iterator iter = res . get CaMeL Instance ( ) . iterator ( ) ;
rank: 118
score: 99.31099853515624
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . iterator ( ) )
rank: 118
score: 99.29545323988971
patch: Iterator iter = res . get ( null ) . entries . iterator ( ) ;
rank: 118
score: 99.28438313802083
patch: if ( v != null ) res . entries = res . entries ;
rank: 119
score: 99.3861312866211
patch: check CaMeL Vector CaMeL Dimensions ( res . get CaMeL Dimension ( ) ) ;
rank: 119
score: 99.37464141845703
patch: Iterator iter = res . get . entries ( ) . iter ( ) ;
rank: 119
score: 99.31819661458333
patch: res . Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 119
score: 99.31082589285714
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter : res . entries . iterator ( ) ;
rank: 119
score: 99.28409423828126
patch: Iterator iter = res . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 120
score: 99.3383056640625
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter
rank: 120
score: 99.32207573784723
patch: Iterator iter = res . [ 0 ] . entries ( ) . iterator ( ) ;
rank: 120
score: 99.31808035714286
patch: Iterator iter = res . get ( res . get CaMeL Dimension ( ) ) . iterator ( ) ;
rank: 120
score: 99.294873046875
patch: Iterator iterator = res . entries ( ) ;
rank: 120
score: 99.28385416666667
patch: Iterator iter = res . entries ( res . entries ( ) ) ;
rank: 121
score: 99.33767520680146
patch: Iterator < Real CaMeL Vector > iter = entries . entries . iterator ( ) ;
rank: 121
score: 99.32166883680556
patch: Iterator iter = res . get CaMeL Dimension ( ) . v . iterator ( ) ;
rank: 121
score: 99.31775665283203
patch: Iterator iter = res . entries . next ( ) . iterator ( ) ;
rank: 121
score: 99.31747581845238
patch: Iterator iter = res . entries . iterator ( ) ; ++ iter . has CaMeL Next ( ) ;
rank: 121
score: 99.31044224330357
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = v . entries . iterator ( ) ;
rank: 121
score: 99.28184000651042
patch: if ( res != null ) res . Iterator iter = res . iterator ( ) ;
rank: 122
score: 99.3839111328125
patch: check CaMeL Vector CaMeL Dimensions ( v . get CaMeL Dimension ( ) ) ;
rank: 122
score: 99.37266710069444
patch: Iterator iter = res . get ( ) . list ( ) . iterator ( ) ;
rank: 122
score: 99.31611328125
patch: Iterator iter = Math . max ( res . entries . size ( ) , res . entries . size ( ) ) ;
rank: 122
score: 99.3098080283717
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; )
rank: 122
score: 99.29290771484375
patch: Iterator iter = res . to CaMeL Array ( ) . entries ( ) ;
rank: 122
score: 99.28089317908653
patch: Iterator < E > iter = res . iterator ( ) ;
rank: 123
score: 99.37232881433823
patch: Iterator < String > iter = res . entries ( ) . iter ( ) ;
rank: 123
score: 99.3374382467831
patch: final Iterator iter = res . get CaMeL Dimension ( ) . size ( ) ;
rank: 123
score: 99.32282850477431
patch: Iterator iter = res . get CaMeL State ( ) . entries . iterator ( ) ;
rank: 123
score: 99.31668294270834
patch: Iterator iter = res . get ( $NUMBER$ ) . iterator ( ) ;
rank: 123
score: 99.31589577414773
patch: Iterator res = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 123
score: 99.30790201822917
patch: Iterator iter . has CaMeL Next ( ) ; ) { iter . advance ( ) ;
rank: 123
score: 99.27980550130208
patch: res . entries = res . entries ; Iterator iter = res . entries ( ) ;
rank: 124
score: 99.38177959735577
patch: Iterator iter = res . entries . iterator ( ) ; *
rank: 124
score: 99.33700561523438
patch: Iterator iter = res . get CaMeL Value ( ) . entries ( ) ;
rank: 124
score: 99.32024468315973
patch: Iterator iter = res . entries . iterator ( ) : v . iterator ( ) ;
rank: 124
score: 99.31621551513672
patch: Iterator iter = res . clone ( ) ; iterator . iterator ( ) ;
rank: 124
score: 99.31554158528645
patch: Iterator iter = res . data . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 125
score: 99.3816909790039
patch: Iterator iter = res . entries ( ) . length . iterator ( ) ;
rank: 125
score: 99.36894008091518
patch: Iterator iter = list . entries ( ) . iterator ( ) ;
rank: 125
score: 99.3338623046875
patch: Iterator iter = res . has CaMeL Next ( ) ; ) {
rank: 125
score: 99.32197122012867
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) . size ( ) ;
rank: 125
score: 99.31609030330883
patch: Iterator iter = res . get ( res . entries . size ( ) ) ;
rank: 125
score: 99.31546783447266
patch: Iterator iter = res . map . entries ( ) . iterator ( ) ;
rank: 125
score: 99.29222819010417
patch: final int iterator = res . entries ( ) . size ( ) ;
rank: 126
score: 99.38121032714844
patch: int iter = v . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 126
score: 99.36888122558594
patch: Iterator < Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 126
score: 99.33026123046875
patch: Iterator iter = res . read ( ) . iterator ( ) ;
rank: 126
score: 99.3198993389423
patch: Iterator iter = res . entries ) . iterator ( ) ;
rank: 126
score: 99.31609030330883
patch: Iterator iter = res . entries . split ( $STRING$ ) . iterator ( ) ;
rank: 126
score: 99.30722191220238
patch: Enumeration < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 126
score: 99.29197782628677
patch: res . entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 126
score: 99.27865397135416
patch: Object res = res . entries ( ) . get ( 0 ) ;
rank: 127
score: 99.3678955078125
patch: Iterator iter = res . get CaMeL Index ( ) . entries ( ) . iterator ( ) ;
rank: 127
score: 99.3300048828125
patch: Iterator < long > iter = res . entries . iterator ( ) ;
rank: 127
score: 99.31890869140625
patch: Iterator iter = res . get CaMeL Index ( ) ;
rank: 127
score: 99.31568818933823
patch: Iterator < ? > iter = res . entries . entries . iterator ( ) ;
rank: 127
score: 99.3142620584239
patch: Iterator iter = Integer . parse CaMeL Int ( res . get CaMeL Dimension ( ) ) . iterator ( ) ;
rank: 127
score: 99.27820696149554
patch: Iterator iterator = v . entries ( ) . iterator ( ) ;
rank: 128
score: 99.36741129557292
patch: Iterator iter = res . get CaMeL Parent ( ) . entries . iterator ( ) ;
rank: 128
score: 99.32965446920956
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 128
score: 99.31875271267361
patch: Iterator iter = v . entries ( ) . entries ( ) . size ( ) ;
rank: 128
score: 99.3142333984375
patch: Iterator iter = res . list ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 128
score: 99.30632672991071
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . list . iterator ( ) ;
rank: 128
score: 99.29153442382812
patch: Iterator iter = res . get CaMeL Classes ( ) . size ( ) ;
rank: 129
score: 99.37880987870066
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . iterator ( ) ;
rank: 129
score: 99.3673095703125
patch: Iterator < String > iter = res . entries . iter ( ) ;
rank: 129
score: 99.31553021599265
patch: Iterator iter = res . add ( this ) . entries . iterator ( ) ;
rank: 129
score: 99.3144061748798
patch: Iterator iter = res . entries . iterator ( ) ; iter
rank: 129
score: 99.31343587239583
patch: Iterator iter = res . get ; while ( iter . has CaMeL Next ( ) )
rank: 129
score: 99.29135311351104
patch: res . get CaMeL Classes ( ) . iterator ( ) . iterator ( ) ;
rank: 129
score: 99.27747344970703
patch: Iterator iter = res . entries ( ) . iterator ( ) - 1 ;
rank: 130
score: 99.37820434570312
patch: int iterator = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 130
score: 99.32889556884766
patch: Iterator iter = res . [ 1 ] . entries . iterator ( ) ;
rank: 130
score: 99.31531524658203
patch: Iterator iter = res . Real CaMeL Vector ( ) . iterator ( ) ;
rank: 130
score: 99.31479220920139
patch: Iterator iter = res != new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 130
score: 99.31327488111413
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 130
score: 99.31294250488281
patch: Iterator iter = res . entries . map ( ) . iterator ( ) ;
rank: 130
score: 99.2907470703125
patch: Iterator < String >> iter = res . entries . iterator ( ) ;
rank: 130
score: 99.2762451171875
patch: Iterator iter = res . iterator ( res . entries . size ( ) ) ;
rank: 131
score: 99.37810516357422
patch: Iterator iter = res != null . entries ( ) . iterator ( ) ;
rank: 131
score: 99.36670639935662
patch: final int entries = res . entries . iterator ( ) . iterator ( ) ;
rank: 131
score: 99.32823079427084
patch: Iterator iter = res . entries . entries . iterator ( ) ; ;
rank: 131
score: 99.290283203125
patch: Iterator * ] iter = res . entries . iterator ( ) ;
rank: 131
score: 99.2749267578125
patch: for ( res . entries . iterator ( ) ; res . has CaMeL Next ( ) ; )
rank: 132
score: 99.3767025596217
patch: Iterator iter = res . entries . iterator ( v . get CaMeL Dimension ( ) ) ;
rank: 132
score: 99.36561802455357
patch: Iterator iter = res . get . entries . iterator ( ) ;
rank: 132
score: 99.31285942925348
patch: Iterator iter |= res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 132
score: 99.31284466911765
patch: synchronized ( res ) { iter = res . entries . iterator ( ) ; }
rank: 132
score: 99.31107330322266
patch: Iterator iter = res . entries . iterator ( ) ; iterator < ) ;
rank: 132
score: 99.2880108173077
patch: Iterator iter = res . entries . iterator ( ) ; else
rank: 132
score: 99.27137247721355
patch: / * Iterator iter = res . iterator ( ) ;
rank: 133
score: 99.3763916015625
patch: Iterator iter = ! res . entries ( ) . iterator ( ) ;
rank: 133
score: 99.36525268554688
patch: Iterator iter = res . get CaMeL Row ( ) . entries ( ) . iterator ( ) ;
rank: 133
score: 99.32807473575367
patch: Iterator iter = res . entries . get ( 0 ) . iterator ( ) ;
rank: 133
score: 99.31428358289931
patch: Iterator iter = res . get CaMeL Dimension ( ) . get CaMeL Index ( ) ;
rank: 133
score: 99.3127108487216
patch: res . Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 133
score: 99.30982971191406
patch: Iterator iter = res . entries . iterator ( ) ; ; return res ;
rank: 133
score: 99.30262822690217
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = this . entries . entries . iterator ( ) ;
rank: 133
score: 99.28773716517857
patch: Iterator iter = res . entries ( ) . copy ( ) ;
rank: 133
score: 99.27102481617646
patch: if ( res != null && res . entries . size ( ) > 0 )
rank: 134
score: 99.36420754825367
patch: Iterator < Entry > iter = res . entries ( ) . iterator ( ) ;
rank: 134
score: 99.31183539496527
patch: Iterator iter = res . load ( ) . entries ( ) . iterator ( ) ;
rank: 134
score: 99.30926872702206
patch: Iterator iter = 0 ; Iterator iter = res . entries . iterator ( ) ;
rank: 134
score: 99.27101536800987
patch: if ( res . res != null ) res . res . res = res . res ;
rank: 135
score: 99.36373740748355
patch: Iterator < Object > iter = res . get . entries ( ) . iterator ( ) ;
rank: 135
score: 99.31154378255208
patch: if ( res == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 135
score: 99.31153061810662
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Real CaMeL Vector ( ) ;
rank: 135
score: 99.31130642361111
patch: Iterator iter = res . get CaMeL Entry . entries ( ) . iterator ( ) ;
rank: 135
score: 99.30870056152344
patch: Iterator iter = res . get CaMeL Method ( ) . iterator ( ) ;
rank: 135
score: 99.30213419596355
patch: Enumeration iter = res . entries . iterator ( ) ;
rank: 135
score: 99.27016314338235
patch: if ( res . res != null ) res . res = res . res ;
rank: 136
score: 99.37455026726974
patch: Iterator iter = res . entries . ebe CaMeL Divide ( this ) . iterator ( ) ;
rank: 136
score: 99.31041608537946
patch: Iterator iter = entries . entries . entries . iterator ( ) ;
rank: 136
score: 99.30849609375
patch: Iterator iter = res . entries . iterator ( ) ; ) / /
rank: 136
score: 99.30168013139205
patch: Iterator iter < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 136
score: 99.2855224609375
patch: Iterator iter = res . to CaMeL Array ( res ) . iterator ( ) ;
rank: 137
score: 99.3633041381836
patch: final Iterator < Integer > iter = res . entries . iterator ( ) ;
rank: 137
score: 99.32549689797794
patch: Iterator iter = res . get CaMeL Dimension ( ) . . iterator ( ) ;
rank: 137
score: 99.31145918996711
patch: Iterator iter = Integer . parse CaMeL Int ( res . get CaMeL Dimension ( ) ) ;
rank: 137
score: 99.31107584635417
patch: Iterator iter = res . get CaMeL Format ( ) . entries . iterator ( ) ;
rank: 137
score: 99.3099365234375
patch: Iterator entries = res . entries ( ) . entries ( ) . iterator ( ) ;
rank: 137
score: 99.30740792410714
patch: Iterator iter = res . entries . res . iterator ( ) ;
rank: 137
score: 99.30161981997283
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . entries . iterator ( ) ) ;
rank: 137
score: 99.28514404296875
patch: Vector iter = res . entries ( ) ;
rank: 137
score: 99.26903618706598
patch: Iterator iter ; try { iter = res . entries ( ) . iterator ( ) ;
rank: 138
score: 99.37429470486111
patch: Iterator iter = res . get CaMeL Dimension ( ) . length . iterator ( ) ;
rank: 138
score: 99.36273871527777
patch: Iterator iter = res . entries . iterator ( ) ; entries . iterator ( ) ;
rank: 138
score: 99.32427106584821
patch: Iterator iter = res . next ( ) . entries ( ) ;
rank: 138
score: 99.31008572048611
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( v . get CaMeL Dimension ( ) ) ;
rank: 138
score: 99.30983599494485
patch: Iterator iter = Math . iterator ( res . get CaMeL Dimension ( ) ) ;
rank: 138
score: 99.30108351934524
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = this . entries . iterator ( ) ;
rank: 138
score: 99.28480529785156
patch: Iterator iter = res . entries ( ) ; list . iterator ( ) ;
rank: 138
score: 99.26802825927734
patch: Iterator iter = res . get CaMeL Methods ( ) . iterator ( ) ;
rank: 139
score: 99.37368594898896
patch: Iterator iter = res [ 1 ] . entries ( ) . iterator ( ) ;
rank: 139
score: 99.3241455078125
patch: Iterator < Long > iter = res . entries . iterator ( ) ;
rank: 139
score: 99.30943467881944
patch: Iterator iter = res . entries . iterator ( ) : list . iterator ( ) ;
rank: 139
score: 99.30719401041667
patch: Iterator iter = res . entries . iterator ( ) ; = 1 ;
rank: 139
score: 99.30079287574405
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . entries . entries . iterator ( ) ;
rank: 139
score: 99.28456115722656
patch: for ( ) { Iterator iter = res . entries . iterator ( ) ;
rank: 139
score: 99.2668212890625
patch: Iterator iter = res ) . entries ( ) . iterator ( ) ;
rank: 140
score: 99.37367600661058
patch: Iterator iter = res [ 0 ] . iterator ( ) ;
rank: 140
score: 99.36177143297698
patch: Iterator iter = res . get ( $NUMBER$ ) . entries ( ) . iterator ( ) ;
rank: 140
score: 99.3240234375
patch: Iterator iter = res . length ( ) ;
rank: 140
score: 99.30991908482143
patch: Iterator iter = res . entries . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 140
score: 99.30948893229167
patch: Iterator iter = res . entries . to CaMeL Array ( ) . iter ( ) ;
rank: 140
score: 99.30830213758681
patch: Iterator iter = res . entries . iterator ( ) : res . entries ( ) ;
rank: 140
score: 99.26666581003289
patch: Iterator iter = res . iterator ( ) ; while . has CaMeL Next ( ) ; )
rank: 141
score: 99.36133575439453
patch: int size = res . entries . iterator ( ) . size ( ) ;
rank: 141
score: 99.323486328125
patch: Iterator iter = res . class . entries ( ) . iterator ( ) ;
rank: 141
score: 99.28240203857422
patch: Iterator iter = res . get CaMeL Resources ( ) . iterator ( ) ;
rank: 142
score: 99.3721415201823
patch: Iterator iter = res != null . iterator ( ) ;
rank: 142
score: 99.36126708984375
patch: int entries . iterator ( ) . iterator ( ) . iterator ( ) . next ( ) ;
rank: 142
score: 99.323486328125
patch: Iterator iter = res . get CaMeL Dimension ( iter ) . size ( ) ;
rank: 142
score: 99.30750868055556
patch: Iterator iter = v . next ( ) . entries ( ) . iterator ( ) ;
rank: 142
score: 99.29951808763587
patch: for ( iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 143
score: 99.37207709418402
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( ) ; for (
rank: 143
score: 99.36041937934027
patch: Iterator iter = res . get CaMeL Field . entries ( ) . iterator ( ) ;
rank: 143
score: 99.30889214409723
patch: Iterator iter = res . list ; while ( iter . has CaMeL Next ( ) )
rank: 143
score: 99.30470275878906
patch: Iterator iter = res . entries . iterator ( ) . iter ( ) ;
rank: 143
score: 99.29847783627717
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries ( ) . iterator ( ) ;
rank: 143
score: 99.28174641927083
patch: entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 143
score: 99.26543426513672
patch: / * Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 144
score: 99.35999213324652
patch: Iterator iter = res . get ( ) . entries ( ) . iter ( ) ;
rank: 144
score: 99.32293701171875
patch: Iterator iter = res . read ( ) . entries . iterator ( ) ;
rank: 144
score: 99.30827530570652
patch: Iterator iter = res . map . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 144
score: 99.30464935302734
patch: Iterator iter = res . entries . iterator ( ) ; iter = 0 ;
rank: 144
score: 99.29783033288044
patch: Iterator < Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 144
score: 99.2805419921875
patch: Iterator < ] > iter = res . map . iterator ( ) ;
rank: 144
score: 99.26499633789062
patch: if ( res != null ) res . Iterator iter = res . entries . iterator ( ) ;
rank: 145
score: 99.30800374348958
patch: Iterator iter = res . set . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 145
score: 99.30420684814453
patch: Iterator iter = res . entries ( ) ; iter . iterator ( ) ;
rank: 145
score: 99.28019714355469
patch: Iterator iter = res . entries . iterator ( ) ; next ( ) ;
rank: 145
score: 99.26473195929276
patch: synchronized ( res ) { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 146
score: 99.369384765625
patch: Iterator iter = res . entries . index CaMeL Of ( $STRING$ ) . iterator ( ) ;
rank: 146
score: 99.35940755208334
patch: Iterator < res > iter = res . entries . iterator ( ) ;
rank: 146
score: 99.32173426011029
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( 0 ) ;
rank: 146
score: 99.30783517020089
patch: Iterator iter = res . map . entries . iterator ( ) ;
rank: 146
score: 99.30718587239583
patch: Iterator iter = res . entries . index CaMeL Of ( $STRING$ ) ;
rank: 146
score: 99.30257161458333
patch: Iterator < Entry > iter = res . entries . iter ( ) ;
rank: 146
score: 99.29754169170673
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) ;
rank: 146
score: 99.26441955566406
patch: Iterator iter = res . iterator . entries ( ) . iterator ( ) ;
rank: 147
score: 99.36934661865234
patch: Iterator iter = res . entries ( ) == null . iterator ( ) ;
rank: 147
score: 99.30733449835526
patch: Iterator iter = res . entries ; while ( iter . has CaMeL Next ( ) ) {
rank: 147
score: 99.30715506417411
patch: for ( Iterator iter = v . entries . iterator ( ) ;
rank: 147
score: 99.30235072544643
patch: Iterator iter = res . entries . start . iterator ( ) ;
rank: 147
score: 99.29737141927083
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res ) {
rank: 147
score: 99.26340895432692
patch: iter = res . entries ( ) . iterator ( ) ;
rank: 148
score: 99.35778130425348
patch: final Iterator < Object > iter = res . entries ( ) . iterator ( ) ;
rank: 148
score: 99.30718994140625
patch: Iterator iter = null ; while ( iter . has CaMeL Next ( ) )
rank: 148
score: 99.2794418334961
patch: Iterator iter = res . entries ( ) ; iterator . next ( ) ;
rank: 148
score: 99.2630256204044
patch: if ( res . entries != null && res . entries . length > 0 )
rank: 149
score: 99.36866519325658
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this , ) ;
rank: 149
score: 99.35768636067708
patch: Iterator iter = res . entries ( ) ; iter . has CaMeL Next ( ) ;
rank: 149
score: 99.30710671164773
patch: List iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 149
score: 99.29571854440789
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = entries . iterator ( ) ;
rank: 149
score: 99.27800641741071
patch: synchronized ( res ) { iter = res . entries ( ) ;
rank: 149
score: 99.26219889322917
patch: Iterator < String > iter = res . iterator . iterator ( ) ;
rank: 150
score: 99.31767272949219
patch: Iterator iter = res . copy ( ) . entries . iterator ( ) ;
rank: 150
score: 99.30632990056819
patch: Iterator iter = res . set . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 150
score: 99.30497233072917
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) . length ;
rank: 150
score: 99.29552641369048
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector >> iter = res . entries . iterator ( ) ;
rank: 150
score: 99.27705522017045
patch: Iterator iter = res . entries ( true ) ;
rank: 151
score: 99.3570556640625
patch: Iterator < String > iterator = res . entries ( ) . iterator ( ) ;
rank: 151
score: 99.3175048828125
patch: Iterator iter = res . entries > iterator ( ) ;
rank: 151
score: 99.3063077059659
patch: Iterator iter = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 151
score: 99.3040542602539
patch: Iterator iter = res . entries . iterator ( ) . size ( ) ;
rank: 151
score: 99.2954330444336
patch: Iterator iter = this . entries . entries ( ) . iterator ( ) ;
rank: 151
score: 99.27688802083334
patch: final int iter = res . entries ( ) . iterator ( ) ;
rank: 151
score: 99.26117302389706
patch: / * * Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 152
score: 99.35653347439236
patch: Iterator iter = res . get . get CaMeL Classes ( ) . iterator ( ) ;
rank: 152
score: 99.31746419270833
patch: Iterator iter = res . entries . entries . iterator ( ) ; }
rank: 152
score: 99.30518687855114
patch: Iterator iter = res . has CaMeL Next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 152
score: 99.30001068115234
patch: Iterator iter = res . entries . iterator ( ) ; ) return res ;
rank: 152
score: 99.29461960565476
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > v = res . entries . iterator ( ) ;
rank: 152
score: 99.27658260569854
patch: Iterator iter = res . entries ( $NUMBER$ - 1 ) . iterator ( ) ;
rank: 152
score: 99.2609130859375
patch: Iterator iter = res . Iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 153
score: 99.35570350060097
patch: Iterator < String > iter = entries . iterator ( ) ;
rank: 153
score: 99.31720733642578
patch: Iterator iter = entries . entries . entries ( ) . iterator ( ) ;
rank: 153
score: 99.30321326622597
patch: Iterator iter = res . entries entries . iterator ( ) ;
rank: 153
score: 99.29984283447266
patch: Iterator iter = res . entries . iterator ( ) ; entries = null ;
rank: 153
score: 99.29412286931819
patch: Iterator iter = res . entries ( ) . Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 153
score: 99.26080729166667
patch: Iterator iter = res . iterator . iterator ( ) ; while ( )
rank: 154
score: 99.35529641544117
patch: final Iterator iter = res . to CaMeL Array ( ) . iterator ( ) ;
rank: 154
score: 99.30432710193452
patch: Iterator iter = res . for . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 154
score: 99.3005142211914
patch: Iterator iter < Integer > iter = res . entries . iterator ( ) ;
rank: 154
score: 99.29388427734375
patch: Iterator iter = res . entries : res . entries . iterator ( ) ;
rank: 154
score: 99.27559116908482
patch: Iterator iter = res . entries ( ) . trim ( ) ;
rank: 154
score: 99.2603400735294
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) )
rank: 155
score: 99.35508422851562
patch: int entries . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 155
score: 99.31558430989584
patch: Iterator iter = res . entries ( ) . iterator ( ) ; }
rank: 155
score: 99.3042984008789
patch: Iterator iter = v . get . entries ( ) . iterator ( ) ;
rank: 155
score: 99.3018290201823
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = null ;
rank: 155
score: 99.2999038696289
patch: Iterator iter = v . to CaMeL Array ( ) . iterator ( ) ;
rank: 155
score: 99.29895833333333
patch: Iterator iter = res . get ( 1 ) . iterator ( ) ;
rank: 155
score: 99.29371178668478
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iterator = res . entries . entries . iterator ( ) ;
rank: 155
score: 99.27540588378906
patch: res . set CaMeL Name ( res . get CaMeL Name ( ) ) ;
rank: 155
score: 99.26013793945313
patch: Iterator iter = res . entries ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 156
score: 99.36406114366319
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . length . iterator ( ) ;
rank: 156
score: 99.35507202148438
patch: final Iterator < T > iter = res . entries . iterator ( ) ;
rank: 156
score: 99.31535339355469
patch: Iterator iter = v . next ( ) . entries . iterator ( ) ;
rank: 156
score: 99.30137803819444
patch: Iterator iter = res . get CaMeL Data ( ) . entries . size ( ) ;
rank: 156
score: 99.2970962524414
patch: Iterator iter = res . entries . iterator ( ) ; iter = null ;
rank: 156
score: 99.29291326349431
patch: Iterator Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 156
score: 99.27500610351562
patch: Iterator iter = res . list ( ) ;
rank: 156
score: 99.2600567157452
patch: Object res = res . entries . get ( 0 ) ;
rank: 157
score: 99.35490112304687
patch: Iterator iter = res . get CaMeL Value ( ) . entries ( ) . iterator ( ) ;
rank: 157
score: 99.30305989583333
patch: res . entries = res . entries . entries . iterator ( ) ;
rank: 157
score: 99.29676729090073
patch: Iterator iter = res . parse ( res . entries . iterator ( ) ) ;
rank: 157
score: 99.29284086681548
patch: Iterator < Real CaMeL Vector > iter = this . res . entries . entries . iterator ( ) ;
rank: 157
score: 99.25973171657986
patch: if ( v != null ) res . ) res . entries = res . entries ;
rank: 158
score: 99.35483685661765
patch: Iterator iter = res . get ) . entries ( ) . iterator ( ) ;
rank: 158
score: 99.31258451021634
patch: Iterator iter = res . entries . size ( ) ; ;
rank: 158
score: 99.30289359714673
patch: Iterator iter = data . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 158
score: 99.29787868923611
patch: Iterator iter = res . entries . [ 1 ] . entries . iterator ( ) ;
rank: 158
score: 99.29779052734375
patch: Iterator iter = res . iterator ( ) : res . entries . iterator ( ) ;
rank: 158
score: 99.29643698299633
patch: Iterator iter = res . split ( res . entries . iterator ( ) ) ;
rank: 158
score: 99.2732292624081
patch: res . value = res . entries . iterator ( ) . next ( ) ;
rank: 158
score: 99.25959215666118
patch: if ( res . entries != null ) res . res . entries = res . entries ;
rank: 159
score: 99.35481770833333
patch: Iterator iter = res . get CaMeL Parent . entries ( ) . iterator ( ) ;
rank: 159
score: 99.30275560461956
patch: Iterator iterator = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 159
score: 99.29775661892361
patch: Iterator iter = res . entries . entries . entries ( ) . entries ( ) ;
rank: 159
score: 99.29610188802083
patch: Iterator iter = list . entries . iterator ( ) ;
rank: 159
score: 99.294677734375
patch: Iterator iter = new Iterator ( res . entries ( ) ) ;
rank: 159
score: 99.27292767693015
patch: res . value = res . entries . iterator ( ) . size ( ) ;
rank: 159
score: 99.25941226356908
patch: if ( res != null ) return ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ;
rank: 160
score: 99.3541259765625
patch: Iterator iter = out . entries ( ) . iterator ( ) ;
rank: 160
score: 99.30185953776042
patch: Iterator iter = res . entries . iterator . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 160
score: 99.29494341681985
patch: Iterator iter = res . index CaMeL Of ( get CaMeL Dimension ( ) ) ;
rank: 160
score: 99.2945556640625
patch: Iterator iter = res . entries . add ( res . entries ( ) ) ;
rank: 160
score: 99.28990414268092
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . size ( ) ;
rank: 160
score: 99.27269490559895
patch: int iterator = res . entries . iterator ( ) ;
rank: 161
score: 99.36273193359375
patch: Iterator iter = ebe CaMeL Divide . entries ( ) . iterator ( ) ;
rank: 161
score: 99.3526611328125
patch: Iterator iter = in . entries ( ) . iterator ( ) ;
rank: 161
score: 99.31074793198529
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) ; ;
rank: 161
score: 99.30024157072368
patch: Iterator iter = res . entries ) ; while ( iter . has CaMeL Next ( ) )
rank: 161
score: 99.2943448153409
patch: Iterator iter = res . entries iterator ( ) ;
rank: 161
score: 99.29421657986111
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . iter ( ) ;
rank: 161
score: 99.28975423177083
patch: Iterator < String > iter = v . entries . iterator ( ) ;
rank: 161
score: 99.27231069711539
patch: Iterator < Integer > iter = res . entries ( ) ;
rank: 161
score: 99.25893040707237
patch: Iterator iter = res . iterator ( ) ; Iterator iter = v . iterator ( ) ;
rank: 162
score: 99.36241048177084
patch: Iterator iter = res . entries ( ) . . iterator ( ) ;
rank: 162
score: 99.35232204861111
patch: Iterator iter = res . entries . iterator ( ) ; iter . iterator ( ) ;
rank: 162
score: 99.31057942708334
patch: Iterator iter = res . get CaMeL Dimension ( ) . ( ) ;
rank: 162
score: 99.29588487413194
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . entries ( ) ;
rank: 162
score: 99.29408772786458
patch: Iterator iter = res . value ( ) . entries ( ) . iterator ( ) ;
rank: 162
score: 99.29405110677084
patch: Iterator < ) = res . entries ( ) . iterator ( ) ;
rank: 162
score: 99.25810546875
patch: Iterator iter = res . entries ( res . iterator ( ) ) ;
rank: 163
score: 99.35151752672698
patch: Iterator iter = res . get ( true ) . entries ( ) . iterator ( ) ;
rank: 163
score: 99.30999755859375
patch: Iterator iter = res . to CaMeL Array ( ) . size ( ) ;
rank: 163
score: 99.2986572265625
patch: Iterator iter = map . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 163
score: 99.29553900824652
patch: Iterator iter = res . entries . entries . iterator ( ) . iterator ( ) ;
rank: 163
score: 99.29374186197917
patch: Iterator iter = res . entries [ null ] . iterator ( ) ;
rank: 163
score: 99.27129255022321
patch: Iterator iter = res . entries . iterator ( ) ; try {
rank: 163
score: 99.25763298483456
patch: if ( res != null ) { Iterator iter = res . iterator ( ) ;
rank: 164
score: 99.29851740056819
patch: Iterator iter = res . entries . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 164
score: 99.29422701322116
patch: Iterator iter advance = res . entries . iterator ( ) ;
rank: 164
score: 99.29385375976562
patch: Iterator iter += res . get CaMeL Dimension ( ) . size ( ) ;
rank: 164
score: 99.2930438701923
patch: Iterator < ) = res . entries . iterator ( ) ;
rank: 164
score: 99.2869873046875
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( ) . iterator ( ) ;
rank: 164
score: 99.25736781529018
patch: if ( res . size ( ) == 0 ) return res ;
rank: 165
score: 99.35093060661765
patch: final int entries = res . entries . iterator ( ) . size ( ) ;
rank: 165
score: 99.29842336554276
patch: synchronized ( res ) { res . entries = res . entries . iterator ( ) ; }
rank: 165
score: 99.2940185546875
patch: Iterator iter = res . entries . index CaMeL Of ( null ) ;
rank: 165
score: 99.28676932198661
patch: Iterator iter = res . entries [ ) . iterator ( ) ;
rank: 165
score: 99.271142578125
patch: res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 165
score: 99.25703430175781
patch: if ( res . entries . size ( ) > 0 ) return res ;
rank: 166
score: 99.3076641376202
patch: final Iterator iter = res . entries . size ( ) ;
rank: 166
score: 99.2979403409091
patch: Iterator iter = this . res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 166
score: 99.29386632582721
patch: Iterator iter = res . to CaMeL Array ( this ) . iterator ( ) ;
rank: 166
score: 99.29277886284723
patch: Iterator iter = res . list ( ) . entries ( ) . iterator ( ) ;
rank: 166
score: 99.27105712890625
patch: Iterator iter = res . entries ( ) . clone ( ) ;
rank: 166
score: 99.25590376420455
patch: final Iterator iter = res . iterator ( ) ;
rank: 167
score: 99.35038926866319
patch: Iterator iter = res . entries = res . list ( ) . iterator ( ) ;
rank: 167
score: 99.30730438232422
patch: Iterator iter = res . next ( ) . get CaMeL Dimension ( ) ;
rank: 167
score: 99.2973991842831
patch: Iterator iter = res . get ( this ) . entries . iterator ( ) ;
rank: 167
score: 99.29367963005515
patch: Iterator iter = res . entries . substring ( 1 ) . iterator ( ) ;
rank: 167
score: 99.29255676269531
patch: Iterator iter = res . name . entries ( ) . iterator ( ) ;
rank: 167
score: 99.28487723214286
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > }
rank: 167
score: 99.2705078125
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( ) ;
rank: 167
score: 99.25571160567434
patch: if ( res . res != null && res . res . res . res != null )
rank: 168
score: 99.30696868896484
patch: Iterator iter = res . entries . has CaMeL Next ( ) ; ) {
rank: 168
score: 99.297353515625
patch: Iterator iter = this . res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 168
score: 99.29316541883681
patch: Iterator iter = res . Real CaMeL Vector ( ) . entries . iterator ( ) ;
rank: 168
score: 99.29248046875
patch: Iterator iter = res . next ( ) ;
rank: 168
score: 99.29132080078125
patch: Iterator iter = res . entries . iterator ( ) - 1 ;
rank: 168
score: 99.268408203125
patch: Iterator < / >> iter = res . entries . iterator ( ) ;
rank: 168
score: 99.25553894042969
patch: assert res != null : $STRING$ + res . get CaMeL Dimension ( ) ;
rank: 169
score: 99.35846354166667
patch: Iterator iter = res [ $NUMBER$ ] . entries . iterator ( ) ;
rank: 169
score: 99.29246419270834
patch: Iterator iter = res . entries . iterator ( ) ; iter -- ;
rank: 169
score: 99.2681884765625
patch: res . entries . Iterator iter = res . entries . iterator ( ) ;
rank: 169
score: 99.255517578125
patch: Iterator iterator = v . iterator ( ) ;
rank: 170
score: 99.34909396701389
patch: Iterator iter = res . get ( ) . entries ( ) . size ( ) ;
rank: 170
score: 99.2966541108631
patch: iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 170
score: 99.29234483506944
patch: Iterator iter = res . get CaMeL Name ( ) . entries . iterator ( ) ;
rank: 170
score: 99.29230143229167
patch: Iterator < / > iter = res . entries . iterator ( ) ;
rank: 170
score: 99.28351593017578
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries )
rank: 170
score: 99.25536295572917
patch: Iterator iter = res . iterator ( res . entries ( ) ) ;
rank: 171
score: 99.3577880859375
patch: Vector iter = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 171
score: 99.34803009033203
patch: int entries = res . entries . iterator ( ) . iterator ( ) ;
rank: 171
score: 99.30568033854166
patch: Iterator iter = res . entries . ( ) . size ( ) ;
rank: 171
score: 99.29173448350694
patch: Iterator iter = new Real CaMeL Vector ( this ) . entries . iterator ( ) ;
rank: 171
score: 99.29091971261161
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ;
rank: 171
score: 99.28255208333333
patch: Iterator < iter > iter = res . entries . iterator ( ) ;
rank: 171
score: 99.26726531982422
patch: synchronized ( res ) { entries = res . entries . iterator ( ) ;
rank: 171
score: 99.25531616210938
patch: res . res = res ; Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 172
score: 99.35726589626736
patch: Iterator iter = res . entries . iterator ( ) * v . iterator ( ) ;
rank: 172
score: 99.29557661576705
patch: Iterator iter = v . map . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 172
score: 99.29183756510416
patch: Iterator < ? > iter = res . entries . iter ( ) ;
rank: 172
score: 99.26719563802084
patch: Iterator iter = res [ null ] . entries . iterator ( ) ;
rank: 173
score: 99.34724695542279
patch: Iterator < E > iter = res . entries ( ) . iterator ( ) ;
rank: 173
score: 99.30469468060662
patch: Iterator iter = res . entries ) Iterator iter . has CaMeL Next ( ) ;
rank: 173
score: 99.29511052911931
patch: Iterator iter = list . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 173
score: 99.29172926682692
patch: Iterator iter ( res . entries . iterator ( ) ) ;
rank: 173
score: 99.28968048095703
patch: Iterator iter = res . get CaMeL Entry ( ) . iterator ( ) ;
rank: 173
score: 99.27979678199405
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = entries . entries . iterator ( ) ;
rank: 173
score: 99.25466918945312
patch: res . set CaMeL Value ( res . get CaMeL Value ( ) ) ;
rank: 174
score: 99.3044903094952
patch: Iterator iter = res . ( ) . iterator ( ) ;
rank: 174
score: 99.29450789741848
patch: for ( Iterator iter = res . list . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 174
score: 99.29061185396634
patch: Iterator iter = ( Iterator ) res . iterator ( ) ;
rank: 174
score: 99.27866908482143
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . iterator ( ) ) {
rank: 174
score: 99.26622721354167
patch: Iterator < Float > iter = res . entries . iterator ( ) ;
rank: 174
score: 99.254638671875
patch: Iterator iter = v . entries ( ) ) . iterator ( ) ;
rank: 175
score: 99.346142578125
patch: Iterator iter = res . get CaMeL Parent ( ) . entries ( ) . iter ( ) ;
rank: 175
score: 99.30409150965073
patch: Iterator iter = res . while ( iter . has CaMeL Next ( ) ) {
rank: 175
score: 99.29343668619792
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ; )
rank: 175
score: 99.29008265904018
patch: Iterator iter = res . entries . data . iterator ( ) ;
rank: 175
score: 99.27772588315217
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) this . res . entries . iterator ( ) ;
rank: 175
score: 99.26612091064453
patch: Iterator [ ] res . entries = res . entries . iterator ( ) ;
rank: 175
score: 99.25311279296875
patch: Object res = res . entries . iterator ( ) . next ( ) ;
rank: 176
score: 99.29031808035714
patch: Iterator iter = res . entries . iterator ( ) ; / /
rank: 176
score: 99.28929138183594
patch: Iterator iter += res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 176
score: 99.25304361979167
patch: final Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 177
score: 99.35598754882812
patch: Vector iter = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 177
score: 99.30319213867188
patch: Iterator iter = res . entries . trim ( ) . size ( ) ;
rank: 177
score: 99.2932765794837
patch: Iterator iter = res . entries . iterator ( ) ; while ( ; iter . has CaMeL Next ( ) )
rank: 177
score: 99.28976876395089
patch: Iterator iter Iterator iter = res . entries . iterator ( ) ;
rank: 177
score: 99.28907012939453
patch: Iterator iter = res . get CaMeL Dimension ( ) . clone ( ) ;
rank: 177
score: 99.28903537326389
patch: Open CaMeL Map CaMeL Real CaMeL Vector v = new Real CaMeL Vector ( this ) ;
rank: 177
score: 99.27738444010417
patch: Iterator iter = ! res . entries . entries . iterator ( ) ;
rank: 177
score: 99.26565987723214
patch: Iterator iter = res . entries ( ) . next ( ) ;
rank: 178
score: 99.35570526123047
patch: int iter = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 178
score: 99.30308622472427
patch: Iterator iter = res . get CaMeL Dimension ( iter ) . entries ( ) ;
rank: 178
score: 99.29274680397727
patch: Iterator iter = res . get CaMeL Entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 178
score: 99.28959147135417
patch: Iterator iter . Iterator iter = res . entries . iterator ( ) ;
rank: 178
score: 99.27519788240132
patch: Iterator iter = res . entries [ 0 ] . entries . entries . iterator ( ) ;
rank: 178
score: 99.2655029296875
patch: Iterator iter = res . entries = res . map . iterator ( ) ;
rank: 178
score: 99.24966591282895
patch: Iterator iter = res . entries ( ) ; while . has CaMeL Next ( ) ; )
rank: 179
score: 99.34445369944854
patch: Iterator < Throwable > iter = res . entries ( ) . iterator ( ) ;
rank: 179
score: 99.3022689819336
patch: Iterator iter = entries . next ( ) . entries . iterator ( ) ;
rank: 179
score: 99.29238891601562
patch: Iterator iter = this . get . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 179
score: 99.2891486672794
patch: Iterator iter = res . load ( res . entries . iterator ( ) ) ;
rank: 179
score: 99.26489975873162
patch: Iterator iter = res [ null ] . entries ( ) . iterator ( ) ;
rank: 180
score: 99.34404161241319
patch: final Iterator < ? > iter = res . entries ( ) . iterator ( ) ;
rank: 180
score: 99.2913309733073
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) break ;
rank: 180
score: 99.2886962890625
patch: Iterator iter = res . this . entries . entries . iterator ( ) ;
rank: 180
score: 99.28864397321429
patch: Iterator iter = res . next ( ) . iterator ( ) ;
rank: 180
score: 99.28844451904297
patch: Iterator iter = res . entries . next ( ) . size ( ) ;
rank: 180
score: 99.2747218919837
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector >= iter = res . entries . entries . iterator ( ) ;
rank: 180
score: 99.26392364501953
patch: Iterator iter = res . get CaMeL Annotations ( ) . iterator ( ) ;
rank: 180
score: 99.24904913651316
patch: if ( res != null ) res . res = res . entries . size ( ) ;
rank: 181
score: 99.30092163085938
patch: Iterator iter = v . size ( ) ;
rank: 181
score: 99.29070490056819
patch: Iterator iterator = v . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 181
score: 99.28795514787946
patch: Iterator iter = res . entries . iterator ( ) ; break ;
rank: 181
score: 99.27346365792411
patch: Iterator iter > iter = res . entries . iterator ( ) ;
rank: 181
score: 99.26246995192308
patch: final int iterator = res . entries . iterator ( ) ;
rank: 182
score: 99.35285500919117
patch: Iterator iter = res . ebe CaMeL Divide ( this ) . iterator ( ) ;
rank: 182
score: 99.34303193933823
patch: final Iterator iter = res . get ( ) . entries . iterator ( ) ;
rank: 182
score: 99.30056762695312
patch: Iterator iter = res . data . iterator ( ) ;
rank: 182
score: 99.29016644021739
patch: Iterator iter = res . get . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 182
score: 99.28760704627403
patch: Iterator iter iterator = res . entries . iterator ( ) ;
rank: 182
score: 99.24796549479167
patch: Iterator iter = v . entries ( res ) . iterator ( ) ;
rank: 183
score: 99.35240342881944
patch: Vector iter = res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 183
score: 99.34288024902344
patch: Iterator iter = res . get CaMeL Actions ( ) . iterator ( ) ;
rank: 183
score: 99.28816731770833
patch: Iterator iter = res . max ( ) . entries ( ) . iterator ( ) ;
rank: 183
score: 99.28634304470486
patch: Iterator iter = res . next ( ) . entries ( ) . size ( ) ;
rank: 183
score: 99.27184527853261
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iter . iterator ( ) ;
rank: 183
score: 99.26158854166667
patch: Iterator iter = res . entries ( 0 ) . iterator ( ) ;
rank: 184
score: 99.35221140008224
patch: Iterator iter = res . ebe CaMeL Divide ( this ) . entries . iterator ( ) ;
rank: 184
score: 99.28968302408855
patch: Iterator iter = v . get . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 184
score: 99.28713091681985
patch: Iterator iter = res . entries . put ( $STRING$ ) . iterator ( ) ;
rank: 184
score: 99.27164132254464
patch: Iterator iter = res . entries . entries . entries ( ) ;
rank: 184
score: 99.26103210449219
patch: int iter = res . get CaMeL Classes ( ) . size ( ) ;
rank: 185
score: 99.35203721788194
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 185
score: 99.34236653645833
patch: Iterator < synchronized > iter = res . entries . iterator ( ) ;
rank: 185
score: 99.29938821231617
patch: Iterator < Real CaMeL Vector >= iter = res . entries . iterator ( ) ;
rank: 185
score: 99.28924560546875
patch: Iterator iter = res . list . iterator ( ) . iterator ( ) ;
rank: 185
score: 99.28799777560764
patch: Iterator iter = res . entries . iterator ( ) : v . size ( ) ;
rank: 185
score: 99.27115671258224
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries ) {
rank: 185
score: 99.26059792258523
patch: res . entries = res . entries ( ) ;
rank: 185
score: 99.24736328125
patch: Iterator iter = v . iterator ( res . size ( ) ) ;
rank: 186
score: 99.35160558363971
patch: Iterator iter = res . get CaMeL Dimension ( $STRING$ ) . iterator ( ) ;
rank: 186
score: 99.34091525607639
patch: Iterator iter = res . get CaMeL Row . entries ( ) . iterator ( ) ;
rank: 186
score: 99.2866943359375
patch: Iterator iter = res . read ( ) ;
rank: 186
score: 99.27095947265624
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . iterator ( ) )
rank: 186
score: 99.2604647549716
patch: Iterator iter = res . entries ( false ) ;
rank: 186
score: 99.24723815917969
patch: Iterator iter = res . iterator . iterator ( ) . iterator ( ) ;
rank: 187
score: 99.34086100260417
patch: if ( res != null ) Iterator iter = res . entries . iterator ( ) ;
rank: 187
score: 99.28870210193452
patch: iterator = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 187
score: 99.26020812988281
patch: Iterator * ] res . entries = res . entries . iterator ( ) ;
rank: 187
score: 99.24602950246711
patch: if ( res != null ) res . res = res . entries . iterator ( ) ;
rank: 188
score: 99.2978515625
patch: Iterator iter = v . entries . iterator ( ) ; ;
rank: 188
score: 99.28530544704861
patch: Iterator iter = res . entries ( ) . entries ( ) . next ( ) ;
rank: 188
score: 99.2704845610119
patch: Iterator < Real CaMeL Vector < Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 188
score: 99.25933478860294
patch: synchronized ( res ) { Iterator iter = res . map . iterator ( ) ;
rank: 189
score: 99.34049718520221
patch: Iterator < Iterator < ? > iter = res . entries . iterator ( ) ;
rank: 189
score: 99.2978515625
patch: Iterator iter = res . add ( v . get CaMeL Entry ( ) ) ;
rank: 189
score: 99.28560384114583
patch: Iterator iter = res . list . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 189
score: 99.28443145751953
patch: Iterator iter = res . get CaMeL Class ( ) . entries ( ) ;
rank: 189
score: 99.28416224888393
patch: Iterator iter = v . entries ( ) . entries ( ) ;
rank: 189
score: 99.2703348795573
patch: Iterator iter += res . entries . iterator ( ) ;
rank: 189
score: 99.25921271829044
patch: res . value = res . entries . iterator ( ) . iterator ( ) ;
rank: 189
score: 99.24508666992188
patch: Iterator iter ; res . entries = res . entries . iterator ( ) ;
rank: 190
score: 99.34955705915179
patch: Iterator iter = res . entries . length . iterator ( ) ;
rank: 190
score: 99.34019470214844
patch: int entries = res . entries . iterator ( ) . size ( ) ;
rank: 190
score: 99.2977294921875
patch: Iterator < Real CaMeL Vector > iterator = res . entries . iterator ( ) ;
rank: 190
score: 99.2861328125
patch: Iterator iter = res , res = res . entries . iterator ( ) ;
rank: 190
score: 99.28501383463542
patch: Iterator iter = res . res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 190
score: 99.2842025756836
patch: Iterator iter = res . get CaMeL Method ( ) . entries ( ) ;
rank: 190
score: 99.25795335036058
patch: res . entries . iterator ( ) . iterator ( ) ;
rank: 190
score: 99.24461780894886
patch: Iterator iter = res . entries ( ) ; ;
rank: 191
score: 99.34876844618056
patch: Iterator iter = res . entries != null : res . entries . iterator ( ) ;
rank: 191
score: 99.29749474158653
patch: Iterator iter = res . entries . iterator ( 0 ) ;
rank: 191
score: 99.28565131293402
patch: Iterator iter = res . next ( ) . entries ( ) . entries ( ) ;
rank: 191
score: 99.28443145751953
patch: Iterator iter = v . get CaMeL Fields ( ) . iterator ( ) ;
rank: 191
score: 99.28368462456598
patch: Iterator iter = res . get CaMeL Id ( ) . entries . iterator ( ) ;
rank: 191
score: 99.2445401278409
patch: Iterator iter = v . iterator ( ) ; ;
rank: 192
score: 99.34750705295139
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; for (
rank: 192
score: 99.33980618990384
patch: Iterator < Iterator > iter = res . entries ( ) ;
rank: 192
score: 99.29749253216912
patch: Iterator iter = res . get CaMeL Dimension ( ) . size ( ) ; ;
rank: 192
score: 99.28453233506944
patch: int iter = res . get CaMeL Dimension ( ) . entries . size ( ) ;
rank: 192
score: 99.28407505580357
patch: Iterator iter = entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 192
score: 99.26970471833882
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . iterator ( ) ;
rank: 192
score: 99.25780487060547
patch: Iterator iter = res . to CaMeL String ( ) . entries ( ) ;
rank: 193
score: 99.33951009114584
patch: Iterator < Byte > iter = res . entries . iterator ( ) ;
rank: 193
score: 99.2974494485294
patch: Iterator < Real CaMeL Vector > iter = v . entries . size ( ) ;
rank: 193
score: 99.28373718261719
patch: Iterator iter = v . get CaMeL Entries ( ) . iterator ( ) ;
rank: 193
score: 99.28305053710938
patch: Iterator iter = res . entries . data . entries . iterator ( ) ;
rank: 193
score: 99.24440403988487
patch: if ( res . res != null ) res . res . res . res = res ;
rank: 194
score: 99.33946228027344
patch: Iterator iter = res . entries . iterator ( ) ; else return null ;
rank: 194
score: 99.26798872514205
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = ! res . entries . iterator ( ) ;
rank: 194
score: 99.2576434795673
patch: Iterator < ] > iter = res . iterator ( ) ;
rank: 194
score: 99.24381296258224
patch: if ( res != null ) res . entries = res . entries . iterator ( ) ;
rank: 195
score: 99.34614643297698
patch: Open CaMeL Map CaMeL Real CaMeL Vector Iterator iter = res . entries . iterator ( ) ;
rank: 195
score: 99.2819491299716
patch: Iterator iter = in . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 195
score: 99.26671832540761
patch: Enumeration < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries . iterator ( ) ;
rank: 195
score: 99.25714111328125
patch: res . iterator ( ) ; Iterator iter = res . entries ( ) ;
rank: 195
score: 99.24317016601563
patch: Iterator iter . has CaMeL Next ( ) ;
rank: 196
score: 99.29668317522321
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries .
rank: 196
score: 99.2830810546875
patch: Iterator iter < boolean > iter = res . entries . iterator ( ) ;
rank: 196
score: 99.28196885850694
patch: Iterator iter = res . entries . next ( ) . entries . entries ( ) ;
rank: 196
score: 99.2816796875
patch: Iterator iter = res . map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 196
score: 99.26582475142045
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . . iterator ( ) ;
rank: 196
score: 99.25687662760417
patch: Iterator iter = res . res . entries ( ) ;
rank: 196
score: 99.24249267578125
patch: Iterator iter = res . entries ( ) ; while ( res . has CaMeL Next ( ) )
rank: 197
score: 99.29616970486111
patch: iter . has CaMeL Next ( ) ;
rank: 197
score: 99.28267415364583
patch: Iterator iter < Real CaMeL Vector > iter = v . entries . iterator ( ) ;
rank: 197
score: 99.28197303185097
patch: Iterator iter = res . entries . iter ( ) ; ;
rank: 197
score: 99.2818603515625
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( res ) ;
rank: 197
score: 99.28127034505208
patch: System . Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 197
score: 99.26535962975544
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . res . entries . iterator ( ) ;
rank: 197
score: 99.2424560546875
patch: Iterator iter = res . iterator ( res . iterator ( ) ) ;
rank: 198
score: 99.34415108816964
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ;
rank: 198
score: 99.28196716308594
patch: Iterator iter = res . entries ( ) . iterator ( ) ; ) ;
rank: 198
score: 99.2809826078869
patch: Iterator iter = res . get ( res . get CaMeL Index ( ) ) . iterator ( ) ;
rank: 198
score: 99.25664876302083
patch: for ( Iterator iter = res . entries . iterator ( ) ; }
rank: 199
score: 99.34373256138393
patch: res . set CaMeL Entry ( iter . advance ( ) ) ;
rank: 199
score: 99.33726806640625
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) . size ( ) ;
rank: 199
score: 99.28196364182692
patch: Iterator iter = res . entries . add ( res ) ;
rank: 199
score: 99.26409357244319
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector != null ;
rank: 199
score: 99.25647735595703
patch: Iterator iter = res . get CaMeL Modifiers ( ) . iterator ( ) ;
rank: 199
score: 99.24220275878906
patch: Object [ ] res = res . entries . to CaMeL Array ( ) ;
rank: 200
score: 99.28137885199652
patch: Iterator iter = res . abs ( ) . entries ( ) . iterator ( ) ;
rank: 200
score: 99.26407020970395
patch: Iterator iter = res . entries . iterator ( iter . has CaMeL Next ( ) ) ;
rank: 200
score: 99.2408203125
patch: Iterator iter = v . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 201
score: 99.34315249794408
patch: Iterator iter = res . get CaMeL Dimension ( iter . get CaMeL Dimension ( ) ) ;
rank: 201
score: 99.2938232421875
patch: Iterator iter = res . entries . get ( ) . iterator ( ) ;
rank: 201
score: 99.28146362304688
patch: int size = res . get CaMeL Dimension ( ) . size ( ) ;
rank: 201
score: 99.2813720703125
patch: Iterator iter = res . entries . iterator ( ) ; iterator != null ;
rank: 201
score: 99.26392364501953
patch: Iterator iter ? res . entries . iterator ( ) . advance ( ) ;
rank: 201
score: 99.24048868815105
patch: Iterator iterator = res . iterator . iterator ( ) ;
rank: 202
score: 99.34299045138889
patch: Real CaMeL Vector iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 202
score: 99.33497619628906
patch: Iterator < String > iter = res . entries . iterator ( ) ; else
rank: 202
score: 99.28138563368056
patch: Iterator iter = res instanceof Real CaMeL Vector : res . entries . iterator ( ) ;
rank: 202
score: 99.27811925551471
patch: Iterator iter = res ; while ( iter . has CaMeL Next ( ) ) {
rank: 202
score: 99.26383056640626
patch: Iterator iter ? res . entries ( ) . iterator ( ) . has CaMeL Next ( ) ;
rank: 202
score: 99.23989432198661
patch: try { Iterator iter = res . iterator . iterator ( ) ;
rank: 203
score: 99.3421142578125
patch: Iterator iter = res . entries [ $NUMBER$ ] . iterator ( ) ;
rank: 203
score: 99.33448893229166
patch: Iterator < Short > iter = res . entries . iterator ( ) ;
rank: 203
score: 99.28067779541016
patch: Iterator iter = res . entries . iterator ( ) ; iterator = 1 ;
rank: 203
score: 99.2801513671875
patch: for ( Iterator iter = res . entries . entries . entries . iterator ( ) ;
rank: 203
score: 99.27756666100544
patch: for ( Iterator iter = v . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 203
score: 99.2386962890625
patch: if ( res != null ) res . ) res . entries = res . entries . entries ;
rank: 204
score: 99.33343912760417
patch: Iterator < Object > iterator = res . entries . iterator ( ) ;
rank: 204
score: 99.29199981689453
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 204
score: 99.28055826822917
patch: Iterator iter = res . = res . entries . iterator ( ) ;
rank: 204
score: 99.27964680989584
patch: Iterator iter = res . entries . ( ) . entries ( ) ;
rank: 204
score: 99.27950032552083
patch: Iterator iter = new Real CaMeL Vector ( res . get CaMeL Dimension ( ) ) ;
rank: 204
score: 99.2774325284091
patch: Iterator iter = super . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 204
score: 99.26284610523896
patch: Iterator < Integer > iter = res . entries . entries . iterator ( ) ;
rank: 204
score: 99.25514221191406
patch: Iterator iter = ( res . entries ( ) ) . iterator ( ) ;
rank: 204
score: 99.23851928710937
patch: Iterator iter = data . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 205
score: 99.34183756510417
patch: Iterator iter = v . get CaMeL Entry ( ) . entries . iterator ( ) ;
rank: 205
score: 99.29198455810547
patch: Iterator res = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 205
score: 99.28048706054688
patch: Iterator iter = res . get . iterator ( ) ;
rank: 205
score: 99.27924262152777
patch: while ( v . has CaMeL Next ( ) ) { res . advance ( ) ;
rank: 205
score: 99.27723911830357
patch: Iterator iter = res . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 205
score: 99.25411783854166
patch: this . res . entries = res . entries . iterator ( ) ;
rank: 205
score: 99.23834228515625
patch: Iterator iter = res . entries ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 206
score: 99.33318684895833
patch: Iterator < String > iter = res . entries . size ( ) ;
rank: 206
score: 99.29108428955078
patch: Iterator res = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 206
score: 99.28044891357422
patch: Iterator iter = res . entries . iterator ( ) ; iter return res ;
rank: 206
score: 99.27922227647569
patch: Iterator iter = res . entries . iterator ( . has CaMeL Next ( ) ) ;
rank: 206
score: 99.27782485064338
patch: Iterator iter = res . entries . iterator ( v . size ( ) ) ;
rank: 206
score: 99.276865234375
patch: Iterator iter = res . get . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 206
score: 99.25360107421875
patch: / * ] res . entries = res . entries . iterator ( ) ;
rank: 206
score: 99.23701557360198
patch: if ( res != null ) res . res = res . entries . clone ( ) ;
rank: 207
score: 99.3410400390625
patch: iter = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 207
score: 99.33302659254808
patch: Iterator < ? > iter = res . entries ( ) ;
rank: 207
score: 99.27872140066964
patch: Iterator iter = res . entries . iterator ( ) ( ) ;
rank: 207
score: 99.27677778764205
patch: Iterator iter = res . map . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 207
score: 99.2627483865489
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . entries . entries . iterator ( ) ;
rank: 207
score: 99.23623817845395
patch: Iterator iter = v . entries ( ) ; while ( . has CaMeL Next ( ) )
rank: 208
score: 99.34038628472223
patch: Iterator iter = ( iter . has CaMeL Next ( ) ) . iterator ( ) ;
rank: 208
score: 99.33167266845703
patch: Iterator iter = res . get CaMeL Data ( ) . entries ( ) ;
rank: 208
score: 99.29074994255515
patch: iter . has CaMeL Next ( ) ; iter . has CaMeL Next ( ) ;
rank: 208
score: 99.280029296875
patch: Iterator iter = res . get CaMeL Long ( ) . iterator ( ) ;
rank: 208
score: 99.26273890904018
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res )
rank: 208
score: 99.25226299579327
patch: Iterator < ] > iter = entries . iterator ( ) ;
rank: 208
score: 99.2355712890625
patch: if ( v != null ) res . ) res . res . res . res . ) ;
rank: 209
score: 99.33124138327206
patch: final int size = res . entries . iterator ( ) . size ( ) ;
rank: 209
score: 99.27644149116848
patch: Iterator iter = res . list . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 209
score: 99.23550754123264
patch: Iterator iter = res . iterator ; while ( iter . has CaMeL Next ( ) )
rank: 210
score: 99.33972846137152
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = res . get CaMeL Dimension ( ) ;
rank: 210
score: 99.33106994628906
patch: final Iterator < E > iter = res . entries . iterator ( ) ;
rank: 210
score: 99.2897590188419
patch: Iterator iter = res . get CaMeL Dimension ( ) . size ( ) ; }
rank: 210
score: 99.27955627441406
patch: Iterator iter = res . iterator ( ) ; iter . iterator ( ) ;
rank: 210
score: 99.27799479166667
patch: Iterator iter = res . entries . iterator ( ) ; res . advance ( ) ;
rank: 210
score: 99.27607278262867
patch: if ( res == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 210
score: 99.27550506591797
patch: int iterator = res . get CaMeL Dimension ( ) . size ( ) ;
rank: 210
score: 99.25218290441177
patch: Iterator iter = ( ( int ) res . entries . iterator ( ) ) ;
rank: 210
score: 99.23546006944444
patch: res . entries = res . entries ;
rank: 211
score: 99.32977294921875
patch: final Iterator < Iterator > iter = res . entries ( ) . iterator ( ) ;
rank: 211
score: 99.2891845703125
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) ; }
rank: 211
score: 99.27886493389423
patch: / Iterator iter = res . entries . iterator ( ) ;
rank: 211
score: 99.27702501085069
patch: Iterator iter = res . entries . Real CaMeL Vector ( ) . entries ( ) ;
rank: 211
score: 99.27606670673077
patch: Iterator iter = res . list . iterator ( ) ; ;
rank: 211
score: 99.27500406901042
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries > iterator ( ) ;
rank: 211
score: 99.25177764892578
patch: Iterator iter = res . get CaMeL Prefix ( ) . iterator ( ) ;
rank: 211
score: 99.23509521484375
patch: Iterator iter = res . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 212
score: 99.33919949001736
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( false ) ;
rank: 212
score: 99.32949649586396
patch: final int iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 212
score: 99.28907775878906
patch: Iterator iter = res . get CaMeL Entry ( ) . size ( ) ;
rank: 212
score: 99.27864074707031
patch: Iterator iter = res . get CaMeL Parent ( ) . iterator ( ) ;
rank: 212
score: 99.2760238647461
patch: Object [ ] list = res . entries . to CaMeL Array ( ) ;
rank: 212
score: 99.25157255284927
patch: Iterator iter = entries . to CaMeL Array ( res ) . iterator ( ) ;
rank: 212
score: 99.23497314453125
patch: Iterator iter = v . iterator ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 213
score: 99.33918200041118
patch: Iterator < Array CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 213
score: 99.27830403645834
patch: Iterator iter = res . entries ( ) . iterator ( ) ; iterator
rank: 213
score: 99.27600628396739
patch: for ( Iterator iterator = res . entries . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 213
score: 99.23473510742187
patch: Iterator iter = v . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 214
score: 99.33846282958984
patch: Iterator iter = res . list . entries ( ) . iterator ( ) ;
rank: 214
score: 99.32886460248162
patch: Iterator < ) > iter = res . entries ( ) . iterator ( ) ;
rank: 214
score: 99.27750941685268
patch: Iterator iter = res . entries . min . iterator ( ) ;
rank: 214
score: 99.27404067095588
patch: Iterator iter = res . get CaMeL Entry ( 0 ) . iterator ( ) ;
rank: 214
score: 99.26148522418478
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . list . iterator ( ) ;
rank: 214
score: 99.2515380859375
patch: Iterator iter = res . . entries ( ) . iterator ( ) ;
rank: 215
score: 99.33812120225694
patch: Iterator iter = res . entries . entries ( ) != null . iterator ( ) ;
rank: 215
score: 99.32771606445313
patch: boolean entries = res . entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 215
score: 99.28836822509766
patch: Iterator iter = res . get CaMeL Dimension ( ) . read ( ) ;
rank: 215
score: 99.2770284016927
patch: Iterator iter = super . entries . iterator ( ) ;
rank: 215
score: 99.27630145733173
patch: Iterator iter = res . entries . iterator iterator ( ) ;
rank: 215
score: 99.27500697544643
patch: Iterator iter = res . entries [ res . entries . size ( ) ] . iterator ( ) ;
rank: 215
score: 99.27398681640625
patch: Iterator iter = v . get CaMeL Dimension ( ) . iter ( ) ;
rank: 215
score: 99.26128472222223
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . iterator ( ) )
rank: 216
score: 99.33806409333882
patch: iter = res . get CaMeL Dimension ( ) . entries ( ) . iterator ( ) ;
rank: 216
score: 99.32714165581598
patch: Iterator iter = res . entries ( ) ; res . has CaMeL Next ( ) ;
rank: 216
score: 99.28834751674107
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 216
score: 99.27627563476562
patch: Iterator iter = res . entries . reverse ( ) . iterator ( ) ;
rank: 216
score: 99.27621459960938
patch: Iterator iter = res . entries . entries . entries . size ( ) ;
rank: 216
score: 99.2745132446289
patch: Object [ ] entries = res . entries . to CaMeL Array ( ) ;
rank: 216
score: 99.27348109654018
patch: Iterator iter = this . v . entries . iterator ( ) ;
rank: 216
score: 99.26057235054348
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) . iterator ( ) ;
rank: 216
score: 99.24922943115234
patch: Iterator iter = res . get CaMeL Suffix ( ) . iterator ( ) ;
rank: 216
score: 99.23399353027344
patch: this . res = res ; Iterator iter = res . iterator ( ) ;
rank: 217
score: 99.33751005284927
patch: Iterator iter = res [ 0 ] . entries . entries . iterator ( ) ;
rank: 217
score: 99.32696533203125
patch: Iterator iter = ( res . entries . iterator ( ) ) ;
rank: 217
score: 99.2751953125
patch: Iterator iter = res . entries . iterator ( ) ; iterator else ;
rank: 217
score: 99.27361505681819
patch: System . arraycopy ( res . entries , 0 , res . entries , 0 , res . size ) ;
rank: 217
score: 99.27249145507812
patch: Iterator iter = res . remove ( ) . entries . iterator ( ) ;
rank: 217
score: 99.26051161024306
patch: Iterator iter = res . entries . iterator ( ) ; iterator . advance ( ) ;
rank: 217
score: 99.24891075721153
patch: final int iter = res . entries . size ( ) ;
rank: 217
score: 99.2339599609375
patch: Iterator iter = v . entries ( ) . iterator ( ) ; ;
rank: 218
score: 99.32683967141544
patch: Iterator < Iterator < String > iter = res . entries . iterator ( ) ;
rank: 218
score: 99.28746032714844
patch: Iterator iter = res . get CaMeL Dimension ( ) . remove ( ) ;
rank: 218
score: 99.27493722098214
patch: Iterator iter = res . entries . map . iterator ( ) ;
rank: 218
score: 99.27295939127605
patch: for ( Iterator iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 218
score: 99.26027960526316
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . iterator ( ) ) {
rank: 218
score: 99.23240033318015
patch: if ( res == null ) throw new Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 219
score: 99.33721051897321
patch: Iterator iter = v . entries ( ) . size ( ) ;
rank: 219
score: 99.3257827758789
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 219
score: 99.27442220052083
patch: Iterator iter = res . load ( res . entries ( ) ) ;
rank: 219
score: 99.27409532335069
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries . size ( ) ;
rank: 219
score: 99.2726520040761
patch: Iterator iter = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 219
score: 99.27168782552083
patch: Iterator iter = res . iter . iterator ( ) ;
rank: 219
score: 99.24862670898438
patch: Iterator iter = res . map . size ( ) ;
rank: 219
score: 99.232177734375
patch: synchronized ( res ) { Iterator iter = res . iterator . iterator ( ) ;
rank: 220
score: 99.33681911892361
patch: int v [ ] = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 220
score: 99.32534308182566
patch: Iterator < String > iter = res . get CaMeL Classes ( ) . iterator ( ) ;
rank: 220
score: 99.27394732306985
patch: Iterator iter = res . entries . iterator ( v . entries ( ) ) ;
rank: 220
score: 99.27362467447917
patch: Iterator iter = res . entries . iterator ( ) ; = 0 ;
rank: 220
score: 99.27228338068181
patch: Iterator iter = data . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 220
score: 99.27159881591797
patch: Iterator entries = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 220
score: 99.25980050223214
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iter . iterator ( ) ;
rank: 220
score: 99.24828162560097
patch: Iterator < ] : res . entries . iterator ( ) ;
rank: 220
score: 99.23188612196181
patch: Iterator iter = res . iterator ( ) ; while . has CaMeL Next ( ) )
rank: 221
score: 99.33661209909539
patch: Iterator iter = ( ( Real CaMeL Vector ) res . entries ) . iterator ( ) ;
rank: 221
score: 99.32521158854166
patch: Iterator iter = res . entries entries ( ) . iterator ( ) ;
rank: 221
score: 99.27311488560268
patch: Iterator iter = res . entries . name . iterator ( ) ;
rank: 221
score: 99.27224731445312
patch: Iterator iter = res . v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 221
score: 99.27145046657986
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries $NUMBER$ iterator ( ) ;
rank: 221
score: 99.25967009171195
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries . iterator ( ) ) {
rank: 221
score: 99.24803059895834
patch: Iterator < ] : res . entries ( ) . iterator ( ) ;
rank: 221
score: 99.231689453125
patch: Iterator iter = v . iterator ( ) ; while . has CaMeL Next ( ) ; )
rank: 222
score: 99.33608669704861
patch: Iterator iter = list . entries ( ) . entries ( ) . iterator ( ) ;
rank: 222
score: 99.32513427734375
patch: Iterator iter = res . entries ( ) = res . entries ( ) ;
rank: 222
score: 99.27288818359375
patch: Iterator iter = res . entries . put ( ) . iterator ( ) ;
rank: 222
score: 99.25902099609375
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries ( ) )
rank: 222
score: 99.24767303466797
patch: Iterator iter = res . to CaMeL Array ( ) . iter ( ) ;
rank: 222
score: 99.23089192708333
patch: Iterator iter = res . entries ( ) . iterator ( ) ; )
rank: 223
score: 99.33504231770833
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( $STRING$ ) ;
rank: 223
score: 99.28506469726562
patch: Iterator iter = res . entries . size ( ) . iterator ( ) ;
rank: 223
score: 99.27163298233695
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ;
rank: 223
score: 99.27099609375
patch: Iterator iter = res . entries . iterator ( ) ; Iterator
rank: 223
score: 99.25892857142857
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iter ( ) ;
rank: 223
score: 99.24668884277344
patch: Iterator iter = res . get CaMeL Properties ( ) . iter ( ) ;
rank: 223
score: 99.23065544577206
patch: res . entries = new Iterator [ v . entries . size ( ) ] ;
rank: 224
score: 99.32457624162946
patch: Iterator iter = res . get ( ) . size ( ) ;
rank: 224
score: 99.28498391544117
patch: iter . has CaMeL Next ( ) ; { iter . advance ( ) ; }
rank: 224
score: 99.271240234375
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 224
score: 99.27093975360577
patch: iter = res . entries . entries . iterator ( ) ;
rank: 224
score: 99.2701644897461
patch: Iterator iter = res . value . entries ( ) . iterator ( ) ;
rank: 224
score: 99.2304751747533
patch: if ( res != null ) { Iterator iter = res . entries . iterator ( ) ;
rank: 225
score: 99.28468951056985
patch: Iterator iter = res . get CaMeL Data ( iter ) . iterator ( ) ;
rank: 225
score: 99.27344428168402
patch: for ( Iterator iter = res . get CaMeL Dimension ( ) . size ( ) ;
rank: 225
score: 99.26930236816406
patch: Iterator iter = res . size ( ) : res . size ( ) ;
rank: 225
score: 99.25785495923913
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter : res . entries . entries . iterator ( ) ;
rank: 225
score: 99.2462158203125
patch: Iterator < Boolean > iter = res . entries . iterator ( ) ;
rank: 225
score: 99.2302734375
patch: / * * Iterator iter = res . entries . iterator ( ) ;
rank: 226
score: 99.33217366536458
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries . entries ( ) ;
rank: 226
score: 99.32368738511029
patch: Iterator < Object > iter = res . entries ( ) . iter ( ) ;
rank: 226
score: 99.27023111979166
patch: Iterator iter = res . entries ( ) . iterator ( ) ; Iterator
rank: 226
score: 99.2701924641927
patch: Disposer . Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 226
score: 99.24599609375
patch: Iterator < ] > entries = res . entries . iterator ( ) ;
rank: 226
score: 99.2299560546875
patch: Iterator < ) : res . entries ( ) . iterator ( ) ;
rank: 227
score: 99.33213975694444
patch: int iter = v . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 227
score: 99.32366943359375
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) != null ;
rank: 227
score: 99.2701748934659
patch: Iterator iter = res . entries . iterator ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 227
score: 99.2697509765625
patch: Iterator iter = res . entries . = entries . iterator ( ) ;
rank: 227
score: 99.26822916666667
patch: Iterator iter = res . entries . iterator ( ) : iter . advance ( ) ;
rank: 227
score: 99.25697236902573
patch: Iterator < Real CaMeL Vector > entries = res . entries . iterator ( ) ;
rank: 227
score: 99.24561157226563
patch: Iterator entries = res . entries ( ) ;
rank: 227
score: 99.22971705386513
patch: Iterator iter = res . entries ( ) ; Iterator iter = res . iterator ( ) ;
rank: 228
score: 99.3321304321289
patch: Iterator iter = res != null : v . entries . iterator ( ) ;
rank: 228
score: 99.32298865685097
patch: Iterator < String > entries = res . entries ( ) ;
rank: 228
score: 99.28394493689903
patch: Iterator iter = res . entries . size ( ) ; }
rank: 228
score: 99.27277289496527
patch: Iterator iter = res . [ 1 ] . entries ( ) . iterator ( ) ;
rank: 228
score: 99.2699951171875
patch: Iterator iter = res . iter ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 228
score: 99.26952185997597
patch: Iterator < Entry > iter = res . iterator ( ) ;
rank: 228
score: 99.26797485351562
patch: Iterator iter < Long > iter = res . entries . iterator ( ) ;
rank: 228
score: 99.25618286132813
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; ) {
rank: 228
score: 99.24504743303571
patch: Iterator end = res . entries ( ) . iterator ( ) ;
rank: 228
score: 99.22907104492188
patch: if ( v . entries . iterator ( ) . has CaMeL Next ( ) ) return res ;
rank: 229
score: 99.33207622327302
patch: Iterator iter = ( ( Real CaMeL Vector ) v . entries . iterator ( ) ) ;
rank: 229
score: 99.32297234786184
patch: Iterator < String > iter = res . get CaMeL Value ( ) . iterator ( ) ;
rank: 229
score: 99.28378295898438
patch: Iterator iter = res . get CaMeL Dimension ( ) . copy ( ) ;
rank: 229
score: 99.26989028033088
patch: res . entries = res . entries . iterator ( ) . next ( ) ;
rank: 229
score: 99.26785617404514
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL
rank: 229
score: 99.25608915441177
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . entries ) {
rank: 229
score: 99.22736002604167
patch: Iterator < Integer > iter = res . iterator . iterator ( ) ;
rank: 230
score: 99.33131167763158
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this + ) ;
rank: 230
score: 99.32245194284539
patch: Iterator < Object > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 230
score: 99.26976521809895
patch: Iterator iter = res . split . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 230
score: 99.26824481670673
patch: Iterator < ? > iter = res . iterator ( ) ;
rank: 230
score: 99.25578962053571
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries ( ) ) {
rank: 230
score: 99.22651890345982
patch: Iterator iter ; try { iter = res . iterator ( ) ;
rank: 231
score: 99.33087517233456
patch: Iterator iter = res . entries [ $NUMBER$ ] . entries . iterator ( ) ;
rank: 231
score: 99.32221984863281
patch: Iterator < String > iter = res . entries . iterator ( ) ; }
rank: 231
score: 99.28306070963542
patch: Iterator iter = res . get CaMeL Dimension ( ) .
rank: 231
score: 99.2696533203125
patch: Iterator iter = res . list . iter ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 231
score: 99.2675552368164
patch: Iterator iter = res . entries . iterator ( ) ; iterator = false ;
rank: 231
score: 99.24285888671875
patch: int iterator = res . entries ( ) . size ( ) ;
rank: 232
score: 99.32220137746711
patch: Iterator < String > iter = res . to CaMeL Array ( ) . iterator ( ) ;
rank: 232
score: 99.28269330193015
patch: Iterator < Real CaMeL Vector > res = v . entries . iterator ( ) ;
rank: 232
score: 99.27078586154514
patch: Iterator iter = v . entries . entries . entries . entries . iterator ( ) ;
rank: 232
score: 99.26944986979167
patch: Iterator iter = v . entries ; while ( iter . has CaMeL Next ( ) )
rank: 232
score: 99.26703287760417
patch: Iterator < ) . iter = res . entries . iterator ( ) ;
rank: 232
score: 99.25552368164062
patch: Iterator iter . has CaMeL Next ( ) ; iter . advance ( ) ;
rank: 232
score: 99.2425765991211
patch: int iter = res . entries . trim ( ) . size ( ) ;
rank: 232
score: 99.22455705915179
patch: Object [ ] data = res . get CaMeL Data ( ) ;
rank: 233
score: 99.33043755425348
patch: Iterator iter = res . entries . get CaMeL Dimension ( ) . entries ( ) ;
rank: 233
score: 99.28206634521484
patch: Iterator iter = res . get CaMeL Name ( ) . entries ( ) ;
rank: 233
score: 99.26944986979167
patch: Iterator iter = data . map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 233
score: 99.26905110677083
patch: Iterator iter = res . entries . index CaMeL Of ( false ) ;
rank: 233
score: 99.26534830729166
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 233
score: 99.25533924932066
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries . entries ( ) ;
rank: 233
score: 99.24238804408482
patch: Iterator iter = res . entries . to CaMeL Array ( ) ;
rank: 233
score: 99.2244121844952
patch: Iterator < T > iter = res . iterator ( ) ;
rank: 234
score: 99.33021763392857
patch: Iterator iter = res != null : res . iterator ( ) ;
rank: 234
score: 99.32184196920956
patch: Iterator < String > iter = res . get ( ) . iterator ( ) ;
rank: 234
score: 99.28204704733456
patch: Iterator < Real CaMeL Vector > iter = res . entries . iter ( ) ;
rank: 234
score: 99.2690938313802
patch: Iterator iter = data . get . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 234
score: 99.26868547712054
patch: Iterator iter = res . next ( ) . size ( ) ;
rank: 234
score: 99.25479125976562
patch: Iterator iter . has CaMeL Next ( ) ; ) {
rank: 234
score: 99.24226379394531
patch: final Iterator < ] > iter = res . entries . iterator ( ) ;
rank: 234
score: 99.22354830228366
patch: if ( res != null && res . entries != null )
rank: 235
score: 99.33001030815973
patch: Iterator iter = res != null : res . entries . entries . iterator ( ) ;
rank: 235
score: 99.26816193953805
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 235
score: 99.26791042751736
patch: int ( iter . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 235
score: 99.26480305989584
patch: Iterator iter = Math . iterator ( res . entries ( ) ) ;
rank: 235
score: 99.26426786534927
patch: Iterator iter = res . index CaMeL Of ( Integer . size ( ) ) ;
rank: 235
score: 99.22306002103366
patch: res . entries = res . entries . size ( ) ;
rank: 236
score: 99.32999674479167
patch: Iterator iter = res . entries . length : res . entries . iterator ( ) ;
rank: 236
score: 99.32102457682292
patch: Iterator iter = res . entries . iterator ( ) ; res . iterator ( ) ;
rank: 236
score: 99.26786665482955
patch: Iterator iter = res . list . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 236
score: 99.26780870225694
patch: Iterator iter = res . [ 0 ] . entries . entries . iterator ( ) ;
rank: 236
score: 99.26475524902344
patch: Iterator iter . iter = res . entries ( ) . iterator ( ) ;
rank: 236
score: 99.25392747961956
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) { iter . advance ( ) ;
rank: 236
score: 99.2224853515625
patch: Iterator iter = res . entries ( ) . iterator ( res ) ;
rank: 237
score: 99.32071685791016
patch: final Iterator < Class > iter = res . entries . iterator ( ) ;
rank: 237
score: 99.27891630284927
patch: Iterator iter = res . get CaMeL Dimension ( ) ) . iterator ( ) ;
rank: 237
score: 99.26779174804688
patch: Iterator iter = map . entries . iterator ( ) ;
rank: 237
score: 99.26473999023438
patch: Iterator iter = res . get CaMeL Integer ( ) . iterator ( ) ;
rank: 237
score: 99.26337348090277
patch: Iterator iter = new Real CaMeL Vector ( v . get CaMeL Dimension ( ) ) ;
rank: 237
score: 99.25324358258929
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = list . entries . iterator ( ) ;
rank: 237
score: 99.2412109375
patch: synchronized ( res ) { Iterator iterator = res . entries . iterator ( ) ;
rank: 237
score: 99.22190946691177
patch: Iterator iter = res . entries ( ) [ res . size ( ) ] ;
rank: 238
score: 99.32911682128906
patch: Iterator iter = v != null : res . entries . iterator ( ) ;
rank: 238
score: 99.3207015991211
patch: final Iterator < int > iter = res . entries . iterator ( ) ;
rank: 238
score: 99.27881577435662
patch: Iterator iter = res . get CaMeL Dimension ( ) . contains ( $STRING$ ) ;
rank: 238
score: 99.26323590959821
patch: Iterator iter = res . size ( ) . iterator ( ) ;
rank: 238
score: 99.240478515625
patch: entries . put ( res . get CaMeL Name ( ) , res ) ;
rank: 239
score: 99.27866617838542
patch: Iterator iter = entries . entries . size ( ) ;
rank: 239
score: 99.26710094105114
patch: Iterator iter = map . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 239
score: 99.26392364501953
patch: Iterator iter = res . entries . key ( ) . iterator ( ) ;
rank: 239
score: 99.25199167351974
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = list . iterator ( ) ;
rank: 239
score: 99.22103118896484
patch: entries = res . entries ; Iterator iter = res . iterator ( ) ;
rank: 240
score: 99.32836042131696
patch: Iterator iter = get CaMeL Dimension ( ) . iterator ( ) ;
rank: 240
score: 99.32032775878906
patch: Iterator iter = res . get ( ) . list . iterator ( ) ;
rank: 240
score: 99.27753092447917
patch: Iterator iter = res . entries . iterator ( ) ; for ( (
rank: 240
score: 99.263916015625
patch: Iterator iter = res . entries . iter ( ) ; = null ;
rank: 240
score: 99.26311492919922
patch: Iterator iter < Class > iter = res . entries . iterator ( ) ;
rank: 240
score: 99.25171959918478
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = v . entries . entries . iterator ( ) ;
rank: 241
score: 99.32787214006696
patch: Iterator iter = ebe CaMeL Divide . entries . iterator ( ) ;
rank: 241
score: 99.32012067522321
patch: Iterator iter = map . entries ( ) . iterator ( ) ;
rank: 241
score: 99.27699190027573
patch: Iterator iter = res . get CaMeL Dimension ( iter . length ( ) ) ;
rank: 241
score: 99.26630715762867
patch: Iterator iter = res . entries Real CaMeL Vector ( ) . entries ( ) ;
rank: 241
score: 99.26250751201923
patch: Iterator iter = res . entries . iterator ( 1 ) ;
rank: 242
score: 99.31971740722656
patch: Iterator iter = $NUMBER$ * res . entries ( ) . iterator ( ) ;
rank: 242
score: 99.26604669744319
patch: System . arraycopy ( res . entries . to CaMeL Array ( ) , 0 , res . entries ) ;
rank: 242
score: 99.2635986328125
patch: Iterator iter = ( Iterator ) res . entries . entries ( ) ;
rank: 242
score: 99.2507091703869
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) this . entries . iterator ( ) ;
rank: 242
score: 99.22004045758929
patch: / * Iterator iter = res . iterator . iterator ( ) ;
rank: 243
score: 99.32622969777961
patch: Iterator iter = res . get CaMeL Dimension ( v . get CaMeL Dimension ( ) ) ;
rank: 243
score: 99.31945037841797
patch: final Iterator < ) > iter = res . entries . iterator ( ) ;
rank: 243
score: 99.27543370863971
patch: Iterator iter = res . contains ( res . get CaMeL Dimension ( ) ) ;
rank: 243
score: 99.2655741373698
patch: Iterator iter = res . list . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 243
score: 99.26326751708984
patch: / ; Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 243
score: 99.26102992466518
patch: Iterator iter = res + v . entries . iterator ( ) ;
rank: 243
score: 99.2504650297619
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . iterator ( ) ;
rank: 243
score: 99.23938706341912
patch: synchronized ( res ) { Iterator iter = res . value . iterator ( ) ;
rank: 244
score: 99.27464948381696
patch: Iterator iter = ( iter . has CaMeL Next ( ) ) ;
rank: 244
score: 99.26548073508523
patch: Iterator iter = res . entries . iter ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 244
score: 99.2608642578125
patch: Iterator iter = res != null ? res . get CaMeL Dimension ( ) : 0 ;
rank: 244
score: 99.24947317023026
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iter ( ) ;
rank: 244
score: 99.21946885850694
patch: Iterator iter ; while ( iter . has CaMeL Next ( ) ) { res . )
rank: 245
score: 99.31936465992646
patch: final Iterator iter = res . entries = res . entries . iterator ( ) ;
rank: 245
score: 99.27462948069854
patch: Iterator iter . has CaMeL Next ( ) ; { iter . advance ( ) ;
rank: 245
score: 99.26534901494566
patch: Iterator iter = res . get ( res . get CaMeL Dimension ( ) ) . entries . iterator ( ) ;
rank: 245
score: 99.24868376358695
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > v = res . entries . entries . iterator ( ) ;
rank: 245
score: 99.23828125
patch: Iterator iter = res . entries ( - - 1 ) . iterator ( ) ;
rank: 246
score: 99.32579888237848
patch: Iterator iter = res . entries == null : res . entries . iterator ( ) ;
rank: 246
score: 99.31915690104167
patch: Iterator < Object > iter = res . entries . iter ( ) ;
rank: 246
score: 99.2652079264323
patch: List list = res . entries . entries . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 246
score: 99.24859619140625
patch: Iterator iter . advance ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 246
score: 99.23621419270833
patch: Iterator iter = res . entries ( false ) . iterator ( ) ;
rank: 246
score: 99.2184814453125
patch: Iterator res = res . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 247
score: 99.31817948190789
patch: Iterator < ? > iter = res . get . entries ( ) . iterator ( ) ;
rank: 247
score: 99.27383422851562
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) .
rank: 247
score: 99.2651134672619
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( )
rank: 247
score: 99.24834883840461
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this . res . entries ) {
rank: 247
score: 99.23619079589844
patch: Iterator iter = res . entries ( $NUMBER$ 1 ) . iterator ( ) ;
rank: 247
score: 99.21840006510416
patch: if ( res != null ) res . res = res . entries ;
rank: 248
score: 99.31716918945312
patch: final final Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 248
score: 99.27376011439732
patch: Iterator iter = res . class . entries . iterator ( ) ;
rank: 248
score: 99.26497749660327
patch: Iterator iter = res . iterator ( ) ; while ( iter . ; iter . has CaMeL Next ( ) )
rank: 248
score: 99.26040649414062
patch: Iterator iter = res . length . entries ( ) . iterator ( ) ;
rank: 248
score: 99.24770720108695
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( null ) ;
rank: 248
score: 99.23583112444196
patch: Iterator * ] res = res . entries . iterator ( ) ;
rank: 249
score: 99.32518246299342
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( iter . key ) ;
rank: 249
score: 99.31716684194711
patch: final int [ ] entries = res . entries ( ) ;
rank: 249
score: 99.26487134850544
patch: Iterator iter = this . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 249
score: 99.26125662667411
patch: Iterator iter = res . entries . iter . entries ( ) ;
rank: 249
score: 99.26022518382354
patch: synchronized ( v ) { Iterator iter = res . entries . iterator ( ) ;
rank: 249
score: 99.24730282738095
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries . entries ( ) ;
rank: 249
score: 99.23582458496094
patch: Iterator iter = res . entries . iterator = res . iterator ( ) ;
rank: 249
score: 99.2178596047794
patch: if ( v != null ) res . entries = res . entries . entries ;
rank: 250
score: 99.31643676757812
patch: Iterator iter = res . get . entries ( ) . entries ( ) ;
rank: 250
score: 99.26378455528847
patch: Iterator iter = res . entries . iterator ( ) ; )
rank: 250
score: 99.26058756510416
patch: Iterator iter = res . get ( $STRING$ ) . iterator ( ) ;
rank: 250
score: 99.24721950954861
patch: Iterator iter . has CaMeL Next ( ) ; ) ; iter . advance ( ) ;
rank: 250
score: 99.23578752790179
patch: for ( ) { Iterator iter = res . entries ( ) ;
rank: 250
score: 99.21754455566406
patch: Iterator iter = res . entries ( ) . iterator ( ) + 1 ;
rank: 251
score: 99.32500899465461
patch: final Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 251
score: 99.31562356387867
patch: Iterator < String > iter = res . get ( ) . entries ( ) ;
rank: 251
score: 99.27227424172794
patch: Iterator iter = res . next ( ) . entries . iterator ( ) ; ;
rank: 251
score: 99.26290760869566
patch: Iterator iter = res . get ( res . entries . size ( ) - 1 ) . iterator ( ) ;
rank: 251
score: 99.2603251139323
patch: Iterator iterator = res . entries . iter ( ) ;
rank: 251
score: 99.24690047554348
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . list . entries . iterator ( ) ;
rank: 251
score: 99.23570033482143
patch: Iterator [ ] res . entries = res . entries ( ) ;
rank: 252
score: 99.31536865234375
patch: Iterator iter = res . get CaMeL Threshold ( ) . iterator ( ) ;
rank: 252
score: 99.25706481933594
patch: Iterator iter = res != null ? res . entries . iterator ( ) ;
rank: 252
score: 99.246826171875
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries . size ( ) ;
rank: 252
score: 99.23538208007812
patch: int iter = res . get CaMeL Properties ( ) . size ( ) ;
rank: 252
score: 99.21730143229166
patch: Iterator iter = res . entries ( entries . iterator ( ) ) ;
rank: 253
score: 99.32456568667763
patch: Iterator iter = ( ( Real CaMeL Vector ) res ) . entries . iterator ( ) ;
rank: 253
score: 99.31463264016544
patch: Iterator < Byte > iter = res . entries ( ) . iterator ( ) ;
rank: 253
score: 99.26220703125
patch: synchronized ( this ) { iter = res . entries . iterator ( ) ; }
rank: 253
score: 99.26044778262867
patch: Iterator iter = res . entries ( ) . index CaMeL Of ( $STRING$ ) ;
rank: 253
score: 99.25900268554688
patch: Iterator iter = res . entries ( ) . iterator ( ) ; ) {
rank: 253
score: 99.24580715013587
patch: Iterator Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 253
score: 99.23485565185547
patch: Iterator iter = res . get CaMeL Property ( ) . entries ( ) ;
rank: 254
score: 99.32455783420139
patch: Iterator iter = res . entries ( ) . trim ( ) . iterator ( ) ;
rank: 254
score: 99.3143310546875
patch: final Iterator iter = res . get ( ) . entries ( ) ;
rank: 254
score: 99.26205842391305
patch: Iterator iter = res . entries . iterator ( ) ; while ( Iterator iter . has CaMeL Next ( ) )
rank: 254
score: 99.25879845252403
patch: final Iterator iter = res . entries . iter ( ) ;
rank: 254
score: 99.25640510110294
patch: Iterator iter = res . get CaMeL Entry ( $STRING$ ) . iterator ( ) ;
rank: 254
score: 99.24551730685764
patch: final Iterator < Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 254
score: 99.23434448242188
patch: Iterator iter = res . out . iterator ( ) ;
rank: 254
score: 99.2169418334961
patch: if ( v != null ) res . entries . add ( res ) ;
rank: 255
score: 99.32412380642361
patch: Iterator iter = res == null : res . entries . entries . iterator ( ) ;
rank: 255
score: 99.31359145220588
patch: Iterator iter = res . get ( $NUMBER$ ) . entries . iterator ( ) ;
rank: 255
score: 99.27004770132211
patch: ; Iterator iter = res . entries . iterator ( ) ;
rank: 255
score: 99.26205444335938
patch: Iterator iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 255
score: 99.25858306884766
patch: Iterator iter = res . get CaMeL Entry ( ) . entries ( ) ;
rank: 255
score: 99.2452392578125
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries . iterator ( ) )
rank: 255
score: 99.23349609375
patch: int < ] > iter = res . entries . iterator ( ) ;
rank: 255
score: 99.21621907552084
patch: Iterator < Real CaMeL Vector > iter = res . entries ( ) ;
rank: 256
score: 99.32390679253473
patch: Real CaMeL Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( v ) ;
rank: 256
score: 99.26910041360294
patch: Iterator iter = res . get CaMeL Dimension ( ) . . entries ( ) ;
rank: 256
score: 99.26190476190476
patch: Iterator iter = res . entries [ res . entries . length - 1 ] . iterator ( ) ;
rank: 256
score: 99.2162109375
patch: Iterator entries = res . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 257
score: 99.31339518229167
patch: Iterator < Iterator > iterator = res . entries . iterator ( ) ;
rank: 257
score: 99.25916963465073
patch: Iterator iter = res . entries ( ) . entries ( ) . ( ) ;
rank: 257
score: 99.25825718470982
patch: Iterator iter = res . entries . key . iterator ( ) ;
rank: 257
score: 99.25542534722223
patch: Iterator iter = res . size ( ) : res . get CaMeL Dimension ( ) ;
rank: 257
score: 99.24453337296195
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) this . entries . entries . iterator ( ) ;
rank: 257
score: 99.216064453125
patch: res . res = res ; Iterator iter = res . entries ( ) ;
rank: 258
score: 99.32282172309027
patch: Iterator iter = res . get CaMeL Dimension ( ) != null . iterator ( ) ;
rank: 258
score: 99.26115616508152
patch: Iterator iter = res . list . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 258
score: 99.25753784179688
patch: Iterator iter = res . get CaMeL VT ( ) . iterator ( ) ;
rank: 258
score: 99.24447471217105
patch: Iterator iter = res . entries . to CaMeL Array ( 0 ) . iterator ( ) ;
rank: 258
score: 99.2140625
patch: Iterator list = res . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 259
score: 99.32256401909723
patch: Iterator iter = res . entries = v . entries ( ) . iterator ( ) ;
rank: 259
score: 99.31297200520834
patch: final Iterator iter = res . get ( ) . iterator ( ) ;
rank: 259
score: 99.26099742542614
patch: Iterator iter = v . has CaMeL Next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 259
score: 99.25703125
patch: Iterator iter = res . entries . = res . entries ( ) ;
rank: 259
score: 99.23147147042411
patch: Iterator iter = res . entries = entries . iterator ( ) ;
rank: 260
score: 99.32223946707589
patch: Iterator iter = v . entries . iterator ( ) ; for (
rank: 260
score: 99.3123779296875
patch: Iterator < String > iter = res . entries . entries ( ) ;
rank: 260
score: 99.25971912202381
patch: Iterator iterator = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 260
score: 99.25869315011161
patch: Iterator iter = res . clone ( ) . entries ( ) ;
rank: 260
score: 99.25505828857422
patch: Iterator iter = res . size ( ) : res . iterator ( ) ;
rank: 260
score: 99.24412184495192
patch: Iterator < Object > iter = res . iterator ( ) ;
rank: 260
score: 99.23099772135417
patch: Iterator * ] iter = res . entries ( ) ;
rank: 260
score: 99.21346435546874
patch: Iterator entries = res . entries ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 261
score: 99.3122314453125
patch: final Iterator iter = res . entries = res . iterator ( ) ;
rank: 261
score: 99.26714728860294
patch: Iterator iter = res . get CaMeL Dimension ( 0 ) . iterator ( ) ;
rank: 261
score: 99.25947840073529
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . )
rank: 261
score: 99.25814056396484
patch: Iterator iter = res . entries . index CaMeL Of ( - 1 ) ;
rank: 261
score: 99.2566426595052
patch: / iter = res . entries . iterator ( ) ;
rank: 261
score: 99.24322509765625
patch: Iterator iter : res . entries ( ) . iterator ( ) ;
rank: 261
score: 99.21311848958334
patch: Iterator iter = res . split ( $STRING$ ) . iterator ( ) ;
rank: 262
score: 99.3218994140625
patch: Iterator iter = ! res . entries . entries ( ) . iterator ( ) ;
rank: 262
score: 99.31211853027344
patch: Iterator iter = res . get . list ( ) . iterator ( ) ;
rank: 262
score: 99.2671257467831
patch: Iterator < Real CaMeL Vector > iter = iter . has CaMeL Next ( ) ;
rank: 262
score: 99.25625610351562
patch: Iterator iter = res . entries . split ( ) . iterator ( ) ;
rank: 262
score: 99.24277565696023
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries . entries ( ) . iterator ( ) ;
rank: 262
score: 99.23046875
patch: Iterator iter = entries . entries ( ) ;
rank: 262
score: 99.21293370863971
patch: if ( res != null ) res . res = res . entries ( ) ;
rank: 263
score: 99.26681698069854
patch: Iterator iter = res . equals ( v . get CaMeL Dimension ( ) ) ;
rank: 263
score: 99.25930786132812
patch: Iterator iter = res . entries . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 263
score: 99.25715637207031
patch: Iterator iter = res . entries ( ) . has CaMeL Next ( ) ;
rank: 263
score: 99.25602722167969
patch: Iterator iter = res . entries ( ) + res . iterator ( ) ;
rank: 263
score: 99.25404268152573
patch: Iterator iter = res . get CaMeL Entry ( 1 ) . iterator ( ) ;
rank: 263
score: 99.24263000488281
patch: Iterator iter += res . entries . iterator ( ) . iterator ( ) ;
rank: 263
score: 99.23014322916667
patch: Iterator iter = res . entries . to CaMeL Array ( res ) ;
rank: 263
score: 99.21287841796875
patch: if ( res . entries == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 264
score: 99.32154083251953
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector . length ;
rank: 264
score: 99.25849066840277
patch: Iterator iter = res . get . get CaMeL Properties ( ) . iterator ( ) ;
rank: 264
score: 99.2563117532169
patch: Iterator iter = res . substring ( 1 ) . entries . iterator ( ) ;
rank: 264
score: 99.24252801192434
patch: Iterator < String > iter = res . entries . entries . entries . iterator ( ) ;
rank: 264
score: 99.22936072716347
patch: Iterator < ] > entries = res . entries ( ) ;
rank: 265
score: 99.32130940755208
patch: Iterator iter = res . ebe CaMeL Divide ( ) . entries . iterator ( ) ;
rank: 265
score: 99.31108093261719
patch: Iterator iter = res . get CaMeL Classes ( ) . iter ( ) ;
rank: 265
score: 99.26581169577206
patch: Iterator iter = res . get CaMeL Entry ( 0 ) . size ( ) ;
rank: 265
score: 99.25834728422619
patch: Iterator iter = res . list . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 265
score: 99.24207979090073
patch: for ( ) { iter = res . entries . entries . iterator ( ) ;
rank: 265
score: 99.22933756510416
patch: Iterator iter ; int iter = res . entries . iterator ( ) ;
rank: 265
score: 99.21279672475961
patch: Iterator iter ; Iterator iter = res . iterator ( ) ;
rank: 266
score: 99.2552261352539
patch: for ( Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 266
score: 99.25328153722427
patch: Iterator iter = res . index CaMeL Of ( Integer . iterator ( ) ) ;
rank: 266
score: 99.2415771484375
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v ) {
rank: 266
score: 99.22932942708333
patch: Iterator iter = res . entries . trim ( ) ;
rank: 267
score: 99.26388346354166
patch: iter . has CaMeL Next ( ) ; res . advance ( ) ;
rank: 267
score: 99.25811212713069
patch: Iterator iter = get . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 267
score: 99.25416564941406
patch: Iterator iter = res . entries . iterator ( ) ; iterator = ) ;
rank: 267
score: 99.24139811197917
patch: Iterator < Real CaMeL Vector > iter = v . iterator ( ) ;
rank: 268
score: 99.26349639892578
patch: Iterator iter = res . get CaMeL Value ( ) . iter ( ) ;
rank: 268
score: 99.25780140269886
patch: iter = res . list . iterator ( ) ;
rank: 268
score: 99.25199620863971
patch: Iterator iter = res . entries . iterator < Real CaMeL Vector > ( ) ;
rank: 268
score: 99.24103655133929
patch: Iterator iter += res . entries . entries . iterator ( ) ;
rank: 268
score: 99.21147918701172
patch: if ( res != null ) res . entries . remove ( res ) ;
rank: 269
score: 99.31991238064236
patch: Iterator iter = v . entries . entries ( ) . entries . iterator ( ) ;
rank: 269
score: 99.26338195800781
patch: Iterator iter = res . get CaMeL Value ( ) . length ( ) ;
rank: 269
score: 99.25399017333984
patch: Iterator iter = res . get CaMeL Column ( ) . iterator ( ) ;
rank: 269
score: 99.25287272135417
patch: Iterator iter = v . entries . ( ) . iterator ( ) ;
rank: 269
score: 99.2518310546875
patch: Iterator iter = res . res . entries . entries . iterator ( ) ;
rank: 269
score: 99.24059380425348
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) ; ) ;
rank: 269
score: 99.22802734375
patch: res . entries = res . entries ; res . entries = res . entries ;
rank: 270
score: 99.31923421223958
patch: Iterator iter = res . entries ( ) : res . entries . iterator ( ) ;
rank: 270
score: 99.25396259014423
patch: Iterator iter . = res . entries . iterator ( ) ;
rank: 270
score: 99.25248718261719
patch: Iterator iter = res . close ( ) . entries . iterator ( ) ;
rank: 270
score: 99.24033900669643
patch: Iterator < Real CaMeL Vector > iter = this . entries . entries . entries . iterator ( ) ;
rank: 270
score: 99.21022338867188
patch: if ( res . entries != null ) Iterator iter = res . entries . iterator ( ) ;
rank: 271
score: 99.30840657552083
patch: Iterator iter = res . get ( true ) . entries ( ) ;
rank: 271
score: 99.25994514016544
patch: Iterator < Real CaMeL Vector > iter = res . has CaMeL Next ( ) ;
rank: 271
score: 99.25722249348958
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) continue ;
rank: 271
score: 99.2510627297794
patch: Iterator iter = res . get CaMeL Dimension ( 1 ) . iterator ( ) ;
rank: 271
score: 99.22740681966145
patch: int iter = res . entries ( ) . length ;
rank: 271
score: 99.20977105034723
patch: Iterator iter = res . entries ( ) ; while . has CaMeL Next ( ) )
rank: 272
score: 99.3182014016544
patch: Real CaMeL Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 272
score: 99.30827985491071
patch: Iterator res = res . entries ( ) . iterator ( ) ;
rank: 272
score: 99.253515625
patch: Iterator iter = res . get ( false ) . iterator ( ) ;
rank: 272
score: 99.23976353236607
patch: Iterator iter = res . list . entries . iterator ( ) ;
rank: 272
score: 99.22714233398438
patch: int iter = res . get CaMeL Name ( ) . size ( ) ;
rank: 272
score: 99.20914499383224
patch: Iterator iter = v . iterator ( ) ; Iterator iter = v . iterator ( ) ;
rank: 273
score: 99.30804802389706
patch: Iterator < res > iter = res . entries ( ) . iterator ( ) ;
rank: 273
score: 99.25685716711956
patch: Iterator iter = res . iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 273
score: 99.25340169270834
patch: Iterator iter = ( Iterator ) res . entries . iter ( ) ;
rank: 273
score: 99.2494758157169
patch: Iterator iter = res . add ( res . get CaMeL Dimension ( ) ) ;
rank: 273
score: 99.23972486413044
patch: Iterator < Real CaMeL Vector > iter = res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 273
score: 99.20913214432566
patch: res . entries [ res . size ( ) ] = res . entries [ 0 ] ;
rank: 274
score: 99.31776338465073
patch: Iterator iter = ( Real CaMeL Vector ) res . entries . iterator ( ) ;
rank: 274
score: 99.25872802734375
patch: Iterator iter = res . get CaMeL Name ( ) . length ( ) ;
rank: 274
score: 99.25323486328125
patch: Iterator iter = res . is CaMeL Array ( ) . iterator ( ) ;
rank: 274
score: 99.24886648995536
patch: Iterator iter = res . entries . iterator ( ) * 1 ;
rank: 274
score: 99.23963274274554
patch: Iterator entries = res . entries . entries . iterator ( ) ;
rank: 274
score: 99.22659301757812
patch: Iterator iter = res . entries . iterator ( ) ; int < ] :
rank: 274
score: 99.208740234375
patch: Iterator iter = v . entries ( ) ; while ( )
rank: 275
score: 99.3176498413086
patch: Iterator iter = res . entries ( ) . entries ( ) . length ;
rank: 275
score: 99.30783562911184
patch: boolean < ? > iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 275
score: 99.2390625
patch: ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . set CaMeL Entry ( ) ;
rank: 276
score: 99.30783517020089
patch: final Iterator < String > iter = res . entries ( ) ;
rank: 276
score: 99.25841522216797
patch: Iterator iter = res . get CaMeL Id ( ) . entries ( ) ;
rank: 276
score: 99.255859375
patch: iter = res . entries . size ( ) ;
rank: 276
score: 99.25303431919643
patch: entries . Iterator iter = res . entries . iterator ( ) ;
rank: 276
score: 99.23869885896382
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iterator = res . iterator ( ) ;
rank: 276
score: 99.22589518229167
patch: Iterator iter = res . entries ( 1 ) . next ( ) ;
rank: 277
score: 99.25828334263393
patch: Iterator iter = iter . has CaMeL Next ( ) ; ) {
rank: 277
score: 99.255615234375
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . entries . has CaMeL Next ( ) )
rank: 277
score: 99.23804772418478
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector >> iter = res . entries . entries . iterator ( ) ;
rank: 277
score: 99.22564697265625
patch: Iterator iter = new String [ res . entries . iterator ( ) ] ;
rank: 277
score: 99.20823669433594
patch: Iterator iter = res = res . entries ( ) . iterator ( ) ;
rank: 278
score: 99.30709075927734
patch: Iterator iter = res . get CaMeL V ( ) . iterator ( ) ;
rank: 278
score: 99.25548299153645
patch: Iterator iter = res . map . key . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 278
score: 99.25157165527344
patch: Iterator iter = 0 ; iter = res . entries . iterator ( ) ;
rank: 278
score: 99.23761664496527
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) {
rank: 279
score: 99.31663295200893
patch: Iterator iter = v . entries ( ) . iter ( ) ;
rank: 279
score: 99.30682014016544
patch: Iterator < boolean > iter = res . entries ( ) . iterator ( ) ;
rank: 279
score: 99.2513671875
patch: Iterator < Entry > iterator = res . entries . iterator ( ) ;
rank: 279
score: 99.23731753700658
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = v . entries . iterator ( ) ;
rank: 280
score: 99.31644381009616
patch: Iterator iter = res [ 1 ] . iterator ( ) ;
rank: 280
score: 99.30665347450658
patch: final Iterator iter = res . entries ( ) . entries ( ) . iterator ( ) ;
rank: 280
score: 99.2572380514706
patch: Iterator iter = res . next ( ) . entries . iterator ( ) ; }
rank: 280
score: 99.25110880533855
patch: Iterator iter = res . entries . remove ( ) ;
rank: 280
score: 99.24701690673828
patch: Iterator iter |= res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 280
score: 99.2248306274414
patch: Iterator * ] iter = res . entries ( ) . iterator ( ) ;
rank: 280
score: 99.20730590820312
patch: if ( res != null ) res . res = res . entries . get ( 0 ) ;
rank: 281
score: 99.31602567784927
patch: Iterator iter = ( ( Real CaMeL Vector ) res ) . iterator ( ) ;
rank: 281
score: 99.30665001502403
patch: final Iterator iter = res . list . iterator ( ) ;
rank: 281
score: 99.25582682291666
patch: Iterator < float > iter = res . entries . iterator ( ) ;
rank: 281
score: 99.25098528180804
patch: Iterator iter = res . next . entries . iterator ( ) ;
rank: 281
score: 99.24668884277344
patch: Iterator iter = res . v . entries . entries . iterator ( ) ;
rank: 281
score: 99.23688065378289
patch: return ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . get CaMeL Entry ( ) ;
rank: 281
score: 99.22432454427083
patch: Iterator * ] entries = res . entries ( ) ;
rank: 281
score: 99.20718383789062
patch: if ( res != null ) res . entries . remove ( 0 ) ;
rank: 282
score: 99.31591796875
patch: iter = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 282
score: 99.30590006510417
patch: Iterator iter = res . get ( entries . iterator ( ) ) ;
rank: 282
score: 99.25086263020833
patch: Iterator iter iter = res . entries ( ) . iterator ( ) ;
rank: 282
score: 99.2070083618164
patch: if ( res != null ) res . set CaMeL Index ( 0 ) ;
rank: 283
score: 99.31504911534927
patch: Iterator iter = res . get CaMeL Dimension ( this ) . iterator ( ) ;
rank: 283
score: 99.3052734375
patch: final int [ ] entries = res . entries . iterator ( ) ;
rank: 283
score: 99.25553072415866
patch: Iterator iter = v . entries . iterator ( ) ; }
rank: 283
score: 99.2543057528409
patch: Iterator v = res . entries . iterator ( ) ; while ( v . has CaMeL Next ( ) )
rank: 283
score: 99.2239990234375
patch: / * ; Iterator iter = res . entries . iterator ( ) ;
rank: 283
score: 99.20685369318181
patch: iter = res . entries . entries ( ) ;
rank: 284
score: 99.31439208984375
patch: Real CaMeL Vector res = new Real CaMeL Vector ( this , this ) ;
rank: 284
score: 99.30525970458984
patch: Iterator iterator = res . get . entries ( ) . iterator ( ) ;
rank: 284
score: 99.25428355823864
patch: Iterator iter = res . value . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 284
score: 99.2447280883789
patch: else res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 284
score: 99.23597005208333
patch: for ( ) { iter = res . entries . iterator ( ) ;
rank: 284
score: 99.22383117675781
patch: Iterator iter = res . get CaMeL Entries ( ) . entries ( ) ;
rank: 284
score: 99.2059326171875
patch: if ( res != null ) Iterator iter = res . iterator ( ) ;
rank: 285
score: 99.31363932291667
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( res . get CaMeL Dimension ( ) ) ;
rank: 285
score: 99.305224609375
patch: final Iterator iterator = res . entries ( ) . iterator ( ) ;
rank: 285
score: 99.25517578125
patch: Iterator < double > iter = res . entries . iterator ( ) ;
rank: 285
score: 99.2536288174716
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 285
score: 99.24504089355469
patch: Iterator entries = res . entries . entries ( ) . iterator ( ) ;
rank: 285
score: 99.24460018382354
patch: Iterator iter = res . entries ( ) . ( ) . size ( ) ;
rank: 285
score: 99.22373046875
patch: Iterator < Number > iter = res . entries . iterator ( ) ;
rank: 285
score: 99.20508751502403
patch: Iterator < String > iter = v . iterator ( ) ;
rank: 286
score: 99.2531229654948
patch: Iterator iter = res . entries . iterator ( ) ; ; finally { iter . has CaMeL Next ( ) ; }
rank: 286
score: 99.24298095703125
patch: Iterator iter = res . get CaMeL Index ( ) . size ( ) ;
rank: 286
score: 99.23560180664063
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector >
rank: 286
score: 99.22337757457386
patch: entries . iterator ( ) . iterator ( ) ;
rank: 286
score: 99.205078125
patch: if ( res != null ) res . res = res . get CaMeL Dimension ( ) ;
rank: 287
score: 99.31276448567708
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector . iter ( ) ;
rank: 287
score: 99.30403645833333
patch: Iterator < String > entries = res . entries . iterator ( ) ;
rank: 287
score: 99.25308890964673
patch: Iterator iterator = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 287
score: 99.24289119944854
patch: Iterator iter = res . entries Real CaMeL Vector ( ) . size ( ) ;
rank: 287
score: 99.22315562855114
patch: Iterator iter = res . entries ( $NUMBER$ ) ;
rank: 287
score: 99.2050552368164
patch: Iterator iter = res . entries ( ) . iterator ( ) ; null ;
rank: 288
score: 99.25466739430146
patch: Iterator iter = res . contains ( v . get CaMeL Entry ( ) ) ;
rank: 288
score: 99.25302956321023
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 288
score: 99.24479457310268
patch: Iterator iter = Real CaMeL Vector . entries . iterator ( ) ;
rank: 288
score: 99.22283935546875
patch: Iterator * ] list = res . entries . iterator ( ) ;
rank: 288
score: 99.204931640625
patch: List iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 289
score: 99.25286102294922
patch: Iterator iter = v . clone ( ) . entries . iterator ( ) ;
rank: 289
score: 99.24828229631696
patch: Iterator iter = res . parse ( ) . iterator ( ) ;
rank: 289
score: 99.24028015136719
patch: Iterator iter = res . data . entries . entries . iterator ( ) ;
rank: 289
score: 99.23505510602679
patch: Iterator iter : res . entries . entries . iterator ( ) ;
rank: 289
score: 99.22278645833333
patch: / * / Iterator iter = res . entries . iterator ( ) ;
rank: 289
score: 99.20470473345588
patch: Iterator iter = v . entries ( ) . iterator ( ) ; while ( )
rank: 290
score: 99.31245422363281
patch: Iterator iter = res , iterator = res . entries . iterator ( ) ;
rank: 290
score: 99.254052734375
patch: Iterator iter = res . get CaMeL Dimension ( iter . length ) ;
rank: 290
score: 99.247998046875
patch: iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 290
score: 99.24002779447116
patch: Iterator iter = res . entries . iterator ( this ) ;
rank: 290
score: 99.23478618421052
patch: Iterator < Real CaMeL Vector > iter = v . entries ( ) . iterator ( ) ;
rank: 290
score: 99.22275390625
patch: this . res . entries . iterator ( ) . iterator ( ) ;
rank: 290
score: 99.20469313401442
patch: res . res = res . entries . size ( ) ;
rank: 291
score: 99.31224907769098
patch: Iterator iter = res . entries = res . entries . entries . iterator ( ) ;
rank: 291
score: 99.3033447265625
patch: Iterator iter = res . entries ( ) = res . iterator ( ) ;
rank: 291
score: 99.25376790364584
patch: int < int > iter = res . entries . iterator ( ) ;
rank: 291
score: 99.25145263671875
patch: Iterator iter = res . get ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 291
score: 99.24787139892578
patch: Iterator iter = res . entries . Short ( ) . iterator ( ) ;
rank: 291
score: 99.23459879557292
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . entries ( ) )
rank: 291
score: 99.22242082868304
patch: Iterator [ ] res = res . entries . iterator ( ) ;
rank: 291
score: 99.20437782689145
patch: if ( v . entries != null ) res . entries = res . entries . entries ;
rank: 292
score: 99.303271484375
patch: final Iterator iter = res . list ( ) . iterator ( ) ;
rank: 292
score: 99.25289916992188
patch: int iter = v . get CaMeL Dimension ( ) ;
rank: 292
score: 99.24738311767578
patch: Iterator iterator = res . entries . entries ( ) . iterator ( ) ;
rank: 292
score: 99.234130859375
patch: Enumeration iter = res . entries . entries . iterator ( ) ;
rank: 292
score: 99.20413208007812
patch: Iterator iter = res . entries . iterator ( ) ; while . has CaMeL Next ( ) )
rank: 293
score: 99.24952334449405
patch: for ( Iterator iter = v . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 293
score: 99.24260711669922
patch: Iterator entries = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 293
score: 99.23361073369566
patch: try { Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 293
score: 99.22206217447916
patch: Iterator < int >> iter = res . entries . iterator ( ) ;
rank: 293
score: 99.20398763020833
patch: Iterator < ? extends E > iter = res . iterator ( ) ;
rank: 294
score: 99.31058502197266
patch: Iterator iter = v == null : res . entries . iterator ( ) ;
rank: 294
score: 99.30278463924633
patch: Iterator < Object > iterator = res . entries ( ) . iterator ( ) ;
rank: 294
score: 99.25228881835938
patch: Iterator iter = res . iter . has CaMeL Next ( ) ; ) {
rank: 294
score: 99.24934525923295
patch: Iterator iter = res . get . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 294
score: 99.24699401855469
patch: Iterator iter = new Iterator ( res . entries . iter ( ) ) ;
rank: 294
score: 99.23339125689338
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this . res ) {
rank: 294
score: 99.22205461774554
patch: Iterator * ] res . entries = res . entries ( ) ;
rank: 294
score: 99.20392166940789
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) continue ;
rank: 295
score: 99.30254049862133
patch: Iterator < Long > iter = res . entries ( ) . iterator ( ) ;
rank: 295
score: 99.2522442157452
patch: Iterator iter = res . get CaMeL Dimension ( iter ) ;
rank: 295
score: 99.24931255139802
patch: synchronized ( res . entries ) { Iterator iter = res . entries . iterator ( ) ;
rank: 295
score: 99.24681091308594
patch: Iterator iter = res . entries . iterator ( ) ; iterator = true ;
rank: 295
score: 99.22185872395833
patch: Iterator < T > iterator = res . entries . iterator ( ) ;
rank: 295
score: 99.20383588005515
patch: Iterator < ? extends E > iter = res . entries . iterator ( ) ;
rank: 296
score: 99.30149213005515
patch: final boolean iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 296
score: 99.2516845703125
patch: Iterator iter = res . Iterator ( ) ;
rank: 296
score: 99.2490743001302
patch: Iterator iter = res . map . map . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 296
score: 99.24171665736607
patch: Iterator iter = res . value . entries . iterator ( ) ;
rank: 296
score: 99.23583984375
patch: try { Iterator iter = res . entries . entries . iterator ( ) ;
rank: 296
score: 99.23330891927084
patch: list = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 296
score: 99.22184753417969
patch: Iterator iter = res . get CaMeL Properties ( ) . clone ( ) ;
rank: 296
score: 99.20323422080592
patch: if ( res != null ) res . entries = res . entries . size ( ) ;
rank: 297
score: 99.30917154947916
patch: Iterator iter = res . entries ( ) . iterator ( ) ; *
rank: 297
score: 99.30083759014423
patch: Iterator < Iterator > iter = res . iterator ( ) ;
rank: 297
score: 99.24539388020834
patch: Iterator < ? > iterator = res . entries . iterator ( ) ;
rank: 297
score: 99.24139045266544
patch: Iterator iter = res . get CaMeL Entry ( iter . size ( ) ) ;
rank: 297
score: 99.22098795572917
patch: Iterator < E > iterator = res . entries . iterator ( ) ;
rank: 297
score: 99.2027099609375
patch: Iterator iter = res . iterator ( ) res . iterator ( ) ;
rank: 298
score: 99.30072985197368
patch: Iterator < int > iter = res . get . entries ( ) . iterator ( ) ;
rank: 298
score: 99.23544491038604
patch: for ( Iterator iter = res . entries . ( ) . iterator ( ) ;
rank: 298
score: 99.20265826056985
patch: Iterator iter ; Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 299
score: 99.30724334716797
patch: Iterator iterator = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 299
score: 99.25022379557292
patch: int iter = v . entries . iterator ( ) ;
rank: 299
score: 99.24893991570724
patch: Iterator iter = res . entries [ res . size ( ) ] . iterator ( ) ;
rank: 299
score: 99.24507649739583
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter ;
rank: 299
score: 99.23233468191964
patch: Iterator < int ) = res . entries . iterator ( ) ;
rank: 299
score: 99.20229620682566
patch: if ( res != null ) res . res = res . get CaMeL Value ( ) ;
rank: 300
score: 99.30673217773438
patch: Iterator iter = res . entries ( ) . length ;
rank: 300
score: 99.3002570657169
patch: Iterator iter = res . get ( true ) . entries . iterator ( ) ;
rank: 300
score: 99.24989827473958
patch: Iterator iter = res . v . iterator ( ) ;
rank: 300
score: 99.24866303943452
patch: Iterator iter = res . entries . iterator ( ) ; while ( . has CaMeL Next ( ) )
rank: 300
score: 99.2352294921875
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 300
score: 99.20186767578124
patch: if ( res . entries != null ) res . entries = res . entries . entries ; else
rank: 301
score: 99.24813842773438
patch: res . entries = res . entries . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 301
score: 99.23493508731617
patch: Iterator iter = v . entries ( ) . ( ) . iterator ( ) ;
rank: 301
score: 99.23208821614584
patch: Iterator < Object > iter = v . entries . iterator ( ) ;
rank: 301
score: 99.21915377103366
patch: Iterator < ] >> iter = res . entries ( ) ;
rank: 301
score: 99.20181039663461
patch: Iterator iter ; Iterator iter = v . iterator ( ) ;
rank: 302
score: 99.30654009650735
patch: Iterator iter = res [ $NUMBER$ ] . entries ( ) . iterator ( ) ;
rank: 302
score: 99.2477694424716
patch: Iterator list = res . list . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 302
score: 99.23908233642578
patch: Iterator iter = new Real CaMeL Vector ( this ) . iterator ( ) ;
rank: 302
score: 99.23207158627717
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) v ) . entries . iterator ( ) ;
rank: 302
score: 99.2017822265625
patch: Iterator < E > iter = res . iterator . iterator ( ) ;
rank: 303
score: 99.24889264787946
patch: Iterator iter = res . entries . v . iterator ( ) ;
rank: 303
score: 99.2477518717448
patch: Iterator iter = this . map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 303
score: 99.23829561121323
patch: Iterator iter = res . index CaMeL Of ( int . size ( ) ) ;
rank: 303
score: 99.23392486572266
patch: Iterator iter = res . get CaMeL Class ( ) . size ( ) ;
rank: 303
score: 99.23167419433594
patch: Iterator iter || res . iterator ( ) . has CaMeL Next ( ) ;
rank: 304
score: 99.30495318244485
patch: Iterator iter = res . entries [ v . get CaMeL Dimension ( ) ] ;
rank: 304
score: 99.24765846946023
patch: for ( Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 304
score: 99.24239908854166
patch: Iterator iter = res . entries . iterator ( ) ; iterator * /
rank: 304
score: 99.21785481770833
patch: Iterator < String > iter = res . value . iterator ( ) ;
rank: 304
score: 99.201025390625
patch: if ( v != null ) res . Iterator iter = res . entries . iterator ( ) ;
rank: 305
score: 99.30474090576172
patch: Iterator iter = v . entries = res . entries . iterator ( ) ;
rank: 305
score: 99.2976303100586
patch: int iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 305
score: 99.24760298295455
patch: Iterator iterator = v . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 305
score: 99.21762084960938
patch: Iterator iter = res . entries ( ) . value . iterator ( ) ;
rank: 306
score: 99.30422634548611
patch: int iter = res . get CaMeL Dimension ( ) . get CaMeL Dimension ( ) ;
rank: 306
score: 99.29756433823529
patch: Iterator < String > iter = entries . entries ( ) . iterator ( ) ;
rank: 306
score: 99.24749755859375
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) break ;
rank: 306
score: 99.24671173095703
patch: Iterator iter = res . parse ( ) . entries . iterator ( ) ;
rank: 306
score: 99.23226928710938
patch: Iterator iter = res . get CaMeL Index ( ) . iterator ( ) ;
rank: 306
score: 99.23089044744319
patch: for ( iter = v . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 306
score: 99.21725124782986
patch: entries = res . entries ( ) ;
rank: 306
score: 99.20083821614584
patch: synchronized ( res ) { Iterator iter = v . iterator ( ) ;
rank: 307
score: 99.29723307291667
patch: Iterator < Iterator > iter = res . entries . iter ( ) ;
rank: 307
score: 99.24721457741477
patch: Iterator iter = v . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 307
score: 99.24588448660714
patch: Iterator iter = res . get CaMeL Dimension ( ) . v ;
rank: 307
score: 99.2415771484375
patch: Iterator iter = new Object [ res . entries . iterator ( ) ] ;
rank: 307
score: 99.230712890625
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries . iter ( ) ;
rank: 307
score: 99.21717936197916
patch: Iterator iter = res . get ( null ) . clone ( ) ;
rank: 307
score: 99.20071411132812
patch: Iterator map = res . iterator ( ) ; while ( map . has CaMeL Next ( ) )
rank: 308
score: 99.29580891927084
patch: final Iterator iter = this . res . entries . iterator ( ) ;
rank: 308
score: 99.2471923828125
patch: Iterator iter = res . entries . Iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 308
score: 99.24585774739583
patch: Iterator iter = res . entries . iterator ( ) ; for ( else
rank: 308
score: 99.24141148158482
patch: Iterator iter = res . entries . iterator . iter ( ) ;
rank: 308
score: 99.23145249310662
patch: Iterator iter = res . ( ) . entries ( ) . entries ( ) ;
rank: 308
score: 99.23050362723214
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter . has CaMeL Next ( ) ; ) {
rank: 308
score: 99.20003662109374
patch: Collection iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 309
score: 99.30351426866319
patch: Iterator iter = res . entries . entries ( ) == null . iterator ( ) ;
rank: 309
score: 99.24125162760417
patch: Iterator iter = res . get ( 0 ) . iter ( ) ;
rank: 309
score: 99.23130170036765
patch: Iterator iter = res . entries ( ) . ( ) . entries ( ) ;
rank: 309
score: 99.2304354580966
patch: this . res . set CaMeL Entry ( iter . key ( ) , iter . value ( ) ) ;
rank: 309
score: 99.19967490748355
patch: if ( res . res != null ) res . res . res = res . entries ;
rank: 310
score: 99.24681555706522
patch: Iterator iter = res . entries . iterator ( ) ) ; while ( iter . has CaMeL Next ( ) )
rank: 310
score: 99.23397827148438
patch: Iterator iter = this . this . res . entries . iterator ( ) ;
rank: 310
score: 99.22994384765624
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter . has CaMeL Next ( ) ; )
rank: 310
score: 99.19959716796875
patch: if ( res != null ) res . Iterator iter = res . iterator . iterator ( ) ;
rank: 311
score: 99.30337185329861
patch: int iter = this . res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 311
score: 99.24677477384868
patch: Iterator iter = Math . max ( 0 , res . entries . size ( ) ) ;
rank: 311
score: 99.24534505208334
patch: Iterator < Real CaMeL Vector = res . entries . iterator ( ) ;
rank: 311
score: 99.2294060202206
patch: Iterator < Real CaMeL Vector > iter = res . entries . entries ( ) ;
rank: 311
score: 99.19912719726562
patch: Iterator list = res . entries ( ) ; while ( list . has CaMeL Next ( ) )
rank: 312
score: 99.30274963378906
patch: res . set CaMeL Entry ( iter . get CaMeL Entry ( ) ) ;
rank: 312
score: 99.24674907483552
patch: Iterator iter = res . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 312
score: 99.24049377441406
patch: Iterator iter = res . length ; iterator = res . iterator ( ) ;
rank: 312
score: 99.22926089638158
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . iterator ( ) ;
rank: 312
score: 99.21482340494792
patch: Iterator [ ] res = res . entries ( ) ;
rank: 312
score: 99.19803873697917
patch: Iterator iter = res . entries ( ) 1 . iterator ( ) ;
rank: 313
score: 99.30272759331598
patch: int iterator = res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 313
score: 99.29408365885416
patch: Iterator iter = res . get ( true ) . iterator ( ) ;
rank: 313
score: 99.24648030598958
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ; )
rank: 313
score: 99.24501953125
patch: Iterator < Character > iter = res . entries . iterator ( ) ;
rank: 313
score: 99.2301254272461
patch: for ( Iterator iter = res . entries ( ) . size ( ) ;
rank: 313
score: 99.22901826746323
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) ; )
rank: 313
score: 99.19794921875
patch: Iterator iter = v . entries ( ) . iterator ( ) ) ;
rank: 314
score: 99.29362487792969
patch: int size = res . get CaMeL Value ( ) . size ( ) ;
rank: 314
score: 99.24628240411931
patch: Iterator iter = v . get . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 314
score: 99.239697265625
patch: Iterator iter = res . entries . iterator ( ) ; iterator / /
rank: 314
score: 99.22934194711539
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 314
score: 99.22896144701087
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( false ) ;
rank: 314
score: 99.19794060202206
patch: if ( res != null ) res . entries = res . entries . length ;
rank: 315
score: 99.29337804457721
patch: Iterator < Iterator > iter = res . entries ( ) . iter ( ) ;
rank: 315
score: 99.24604936079545
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 315
score: 99.24468439275569
patch: Iterator iter = entries . iterator ( ) ; ;
rank: 315
score: 99.23968505859375
patch: Iterator iter = res . entries . iterator ( ) . entries ( ) ;
rank: 315
score: 99.229248046875
patch: Iterator iter = $NUMBER$ : res . entries . iterator ( ) ;
rank: 315
score: 99.22895740327381
patch: Iterator < Real CaMeL Vector > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 315
score: 99.21376665900735
patch: Iterator < Iterator < ] > iter = res . entries . iterator ( ) ;
rank: 316
score: 99.30049896240234
patch: List iter = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 316
score: 99.29326171875
patch: if ( res != null ) return res ;
rank: 316
score: 99.24579178659539
patch: iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 316
score: 99.24446614583333
patch: Iterator iter = this . entries . size ( ) ;
rank: 316
score: 99.23893737792969
patch: Iterator iter = res . clone ( ) ; iter . iterator ( ) ;
rank: 316
score: 99.22869514016544
patch: Iterator iter = res . entries ( ) . index CaMeL Of ( 0 ) ;
rank: 316
score: 99.21358235677083
patch: final int iterator = res . entries ( ) . iterator ( ) ;
rank: 316
score: 99.19735013521634
patch: Iterator iter = res . iterator . iterator ( ) ; ;
rank: 317
score: 99.30035759420956
patch: this . res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 317
score: 99.24568314985795
patch: Iterator iter = res . v . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 317
score: 99.24437713623047
patch: Iterator iter = res . entries . entries . iterator ( ) ; ) {
rank: 317
score: 99.23867361886161
patch: Iterator iter = this . res . entries . iter ( ) ;
rank: 317
score: 99.21349080403645
patch: Iterator * ] res = res . entries ( ) ;
rank: 318
score: 99.30031331380208
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = res . get CaMeL Entry ( ) ;
rank: 318
score: 99.29313659667969
patch: final Iterator < String > iterator = res . entries . iterator ( ) ;
rank: 318
score: 99.24544270833333
patch: Iterator iter = v . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 318
score: 99.2386474609375
patch: Iterator iter = res . parse ( res . entries ( ) ) ;
rank: 318
score: 99.2274881998698
patch: Iterator iter && res . entries . iterator ( ) ;
rank: 318
score: 99.19706456801471
patch: if ( res . entries != null ) res . res = res . entries ;
rank: 319
score: 99.30014217601104
patch: Iterator iter = res . entries ( ) [ 1 ] . iterator ( ) ;
rank: 319
score: 99.29280090332031
patch: Iterator < int 1 : res . entries ( ) . iterator ( ) ;
rank: 319
score: 99.24530029296875
patch: Iterator iter = res . v . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 319
score: 99.243896484375
patch: List res = res . entries . iterator ( ) ;
rank: 319
score: 99.23113654641544
patch: Iterator iter = res . get CaMeL Entry ( iter ) . iterator ( ) ;
rank: 319
score: 99.226806640625
patch: Iterator iter = res . format . entries ( ) . iterator ( ) ;
rank: 319
score: 99.2131103515625
patch: int < ] > entries = res . entries . iterator ( ) ;
rank: 320
score: 99.300048828125
patch: int iterator = v . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 320
score: 99.29249674479166
patch: final Iterator iter = res . entries ( ) . entries ( ) ;
rank: 320
score: 99.23849487304688
patch: Iterator iter = res . start . iterator ( ) ;
rank: 320
score: 99.23080444335938
patch: Iterator iter = get CaMeL Entry ( ) . entries . iterator ( ) ;
rank: 320
score: 99.22538488051471
patch: Iterator iter = res . entries ( ) . index CaMeL Of ( this ) ;
rank: 320
score: 99.21269008091518
patch: Iterator < ? ] : res . entries . iterator ( ) ;
rank: 320
score: 99.19649251302083
patch: Iterator iter 1 = res . entries ( ) . iterator ( ) ;
rank: 321
score: 99.23844401041667
patch: Iterator iter = copy ( res . entries . iterator ( ) ) ;
rank: 321
score: 99.22739955357143
patch: Iterator < Real CaMeL Vector > iter = res . entries ( ) . entries . iterator ( ) ;
rank: 321
score: 99.21212332589286
patch: Iterator iter = res . entries ( ) . close ( ) ;
rank: 322
score: 99.29877068014706
patch: Iterator iter = ! res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 322
score: 99.29243738511029
patch: Iterator iter = res . get . entries ( ) . iterator ( ) ; else
rank: 322
score: 99.24496858016305
patch: Iterator iter = res . entries [ res . entries . length - 1 ] . entries . iterator ( ) ;
rank: 322
score: 99.2434310913086
patch: List res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 322
score: 99.23776245117188
patch: Iterator iter = entries . iterator ( ) ; iter . iterator ( ) ;
rank: 322
score: 99.22712846235795
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector == null ;
rank: 322
score: 99.22433268229166
patch: Iterator iter = res . entries . index CaMeL Of ( true ) ;
rank: 322
score: 99.21204485212054
patch: Iterator * ] entries = res . entries . iterator ( ) ;
rank: 322
score: 99.19573505108173
patch: final Iterator iter = res . iterator . iterator ( ) ;
rank: 323
score: 99.29226505055146
patch: Iterator < Iterator > iterator = res . entries ( ) . iterator ( ) ;
rank: 323
score: 99.24463952105978
patch: for ( int iterator = res . entries . size ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 323
score: 99.2427001953125
patch: Iterator < Double > iter = res . entries . iterator ( ) ;
rank: 323
score: 99.23755696614583
patch: Iterator iter = res . entries ( ) . iterator ( ) ; .
rank: 323
score: 99.2241439819336
patch: / * try { Iterator iter = res . entries . iterator ( ) ;
rank: 323
score: 99.21139962332589
patch: Iterator [ ] iter = res . entries . iterator ( ) ;
rank: 323
score: 99.19564016241776
patch: Iterator iter = v . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 324
score: 99.29225786994485
patch: Iterator < Boolean > iter = res . entries ( ) . iterator ( ) ;
rank: 324
score: 99.24456024169922
patch: Iterator iter = v . map . entries ( ) . iterator ( ) ;
rank: 324
score: 99.2238540649414
patch: Iterator iter = res . entries . iterator ( ) . next ( ) ;
rank: 324
score: 99.2110595703125
patch: Iterator iter = res . entries . remove ( null ) ;
rank: 324
score: 99.19535064697266
patch: Iterator iter = res . entries ( ) . iterator ( ) ; * /
rank: 325
score: 99.29836600167411
patch: Iterator iter = res . entries . iterator ( ) ; System .
rank: 325
score: 99.29182514391448
patch: Iterator < ? > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 325
score: 99.24217878069196
patch: Iterator iter = res . trim ( ) . size ( ) ;
rank: 325
score: 99.23734283447266
patch: Iterator iter = res . entries . this . entries . iterator ( ) ;
rank: 325
score: 99.22860717773438
patch: Iterator iter < long > iter = res . entries . iterator ( ) ;
rank: 325
score: 99.2100830078125
patch: entries . append ( res . get CaMeL Name ( ) ) ;
rank: 325
score: 99.1953125
patch: if ( res != null ) res . res = res . entries . ;
rank: 326
score: 99.2982177734375
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( true ) ;
rank: 326
score: 99.2917251586914
patch: Iterator iter = res . entries = res . list . iterator ( ) ;
rank: 326
score: 99.244140625
patch: Iterator iter = res . data . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 326
score: 99.24209359975961
patch: Iterator iter ++ = res . entries . iterator ( ) ;
rank: 326
score: 99.23719787597656
patch: Iterator iter = res . entries . iterator ( ) ; iterator > null ;
rank: 326
score: 99.22657534950658
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = iter . iterator ( ) ;
rank: 326
score: 99.20871869255515
patch: Iterator iter = res . entries ( null - 1 ) . iterator ( ) ;
rank: 326
score: 99.1951416015625
patch: Iterator iter = res . entries ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 327
score: 99.29158289292279
patch: Iterator < Short > iter = res . entries ( ) . iterator ( ) ;
rank: 327
score: 99.24385402513587
patch: Iterator iter = res . iterator . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 327
score: 99.24203725961539
patch: Iterator iter = res . has CaMeL Next ( ) ; {
rank: 327
score: 99.23694610595703
patch: Iterator iter = res . entries ( ) ; entries . iterator ( ) ;
rank: 327
score: 99.22782628676471
patch: Iterator iter = res Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 327
score: 99.22639604048295
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . entries ( ) ;
rank: 327
score: 99.20857377485795
patch: res . iterator ( ) . iterator ( ) ;
rank: 328
score: 99.297119140625
patch: Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 328
score: 99.29156901041667
patch: final Iterator iter = res . entries ( ) . size ( ) ;
rank: 328
score: 99.24384998139881
patch: Iterator iter = iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 328
score: 99.24202473958333
patch: int v = res . get CaMeL Dimension ( ) ;
rank: 328
score: 99.22779846191406
patch: Iterator iter = res . size ( ) : entries . iterator ( ) ;
rank: 328
score: 99.22625122070312
patch: for ( iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 328
score: 99.2225112915039
patch: Iterator iter = res . entries . v . entries . iterator ( ) ;
rank: 328
score: 99.20819091796875
patch: Iterator iter = res . entries ( ) ; try {
rank: 328
score: 99.19478062220982
patch: Iterator iter ; try { iter = res . entries ( ) ;
rank: 329
score: 99.2914794921875
patch: final Iterator iter = res . entries = res . entries ( ) ;
rank: 329
score: 99.23605782645089
patch: Iterator iter = res . entries . list . iterator ( ) ;
rank: 329
score: 99.22599991508152
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( true ) ;
rank: 329
score: 99.20773111979166
patch: Iterator < String ++ iter = res . entries . iterator ( ) ;
rank: 329
score: 99.19430541992188
patch: Iterator iter = value . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 330
score: 99.29605305989584
patch: Iterator iter = v [ 0 ] . entries . iterator ( ) ;
rank: 330
score: 99.29143608940973
patch: int size = res . entries . iterator ( ) . iterator ( ) . length ;
rank: 330
score: 99.23601531982422
patch: Iterator iter = res . entries . iterator ( ) ; iterator : null ;
rank: 330
score: 99.22725677490234
patch: Iterator iter = res . entries . iterator ( ) : res . length ;
rank: 330
score: 99.22064208984375
patch: for ( Iterator iter = res . entries . size ( ) ;
rank: 330
score: 99.19417898995536
patch: Iterator iter = res . iterator . iterator . iterator ( ) ;
rank: 331
score: 99.29141438802084
patch: Iterator < Thread > iter = res . entries . iterator ( ) ;
rank: 331
score: 99.243408203125
patch: List res = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 331
score: 99.22563244047619
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . get CaMeL Dimension ( ) ) {
rank: 331
score: 99.22055053710938
patch: Iterator iter = res . entries . copy ( ) . iterator ( ) ;
rank: 331
score: 99.20687866210938
patch: Iterator iter = res . value . size ( ) ;
rank: 331
score: 99.19399588448661
patch: if ( res != null ) res . ) res = res ;
rank: 332
score: 99.2433551290761
patch: res . Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 332
score: 99.2204081217448
patch: Iterator v = res . entries . iterator ( ) ;
rank: 332
score: 99.20686848958333
patch: Iterator iter = res . entries ( - 1 ) ;
rank: 332
score: 99.19242037259616
patch: Iterator < res > iter = res . iterator ( ) ;
rank: 333
score: 99.29435221354167
patch: Iterator iter = res . entries ( ) instanceof Open CaMeL Map CaMeL Real CaMeL Vector ;
rank: 333
score: 99.29107259114583
patch: final int [ ] iter = res . entries . iterator ( ) ;
rank: 333
score: 99.23908996582031
patch: for ( Iterator iter = res . has CaMeL Next ( ) ; ) {
rank: 333
score: 99.23561197916666
patch: Iterator iter = res . add ( res . entries ( ) ) ;
rank: 333
score: 99.22523082386364
patch: Iterator iter ? res . entries . entries . iterator ( ) . has CaMeL Next ( ) ; ) ;
rank: 333
score: 99.22476959228516
patch: Iterator iter = res . iterator ( ) : res . iterator ( ) ;
rank: 333
score: 99.19211713005515
patch: Iterator iter = res . iterator ( res . size ( ) - 1 ) ;
rank: 334
score: 99.29068196614584
patch: final Iterator iter = res . copy ( ) . iterator ( ) ;
rank: 334
score: 99.24306418678977
patch: Iterator iter = res . for . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 334
score: 99.23853410993304
patch: Iterator iter = res . copy ( ) . size ( ) ;
rank: 334
score: 99.23554338727679
patch: Iterator iterator = res . entries . entries . iterator ( ) ;
rank: 334
score: 99.22493703741776
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . entries ( ) ) {
rank: 334
score: 99.22354125976562
patch: Iterator iter < Boolean > iter = res . entries . iterator ( ) ;
rank: 334
score: 99.21996198381696
patch: Vector iter = res . entries . entries . iterator ( ) ;
rank: 334
score: 99.20583926930146
patch: synchronized ( res ) { Iterator iter = res . entries . size ( ) ;
rank: 334
score: 99.19178771972656
patch: if ( v . entries . size ( ) == 0 ) return res ;
rank: 335
score: 99.29346466064453
patch: res . set CaMeL Entry ( res . get CaMeL Entry ( ) ) ;
rank: 335
score: 99.2424649325284
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) break ;
rank: 335
score: 99.23517252604167
patch: Iterator iter = res . entries . iterator ( ) ; iter else ;
rank: 335
score: 99.2246337890625
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . get CaMeL Dimension ( ) )
rank: 335
score: 99.20514322916667
patch: Iterator < T > iter = res . map . iterator ( ) ;
rank: 335
score: 99.19148334703948
patch: Iterator iter = v . entries ( ) ; while . has CaMeL Next ( ) ; )
rank: 336
score: 99.29345703125
patch: Iterator iter = res . entries ( ) . iter . iterator ( ) ;
rank: 336
score: 99.289306640625
patch: res . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 336
score: 99.235107421875
patch: Iterator iter = res . entries . iterator ( ) ; iterator .
rank: 336
score: 99.22457449776786
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res . iterator ( ) ;
rank: 336
score: 99.22303771972656
patch: Iterator iter = res . entries . iterator ( ) : iterator ( ) ;
rank: 336
score: 99.20507049560547
patch: Iterator iter = res . entries ( ) . replace CaMeL All ( ) ;
rank: 336
score: 99.19127807617187
patch: Iterator iter = res . iterator ( ) ; this . res = res . iterator ( ) ;
rank: 337
score: 99.23509870256696
patch: Iterator iter = res . entries . max . iterator ( ) ;
rank: 337
score: 99.22244262695312
patch: Iterator iter = res . entries . iterator ( . size ( ) ) ;
rank: 337
score: 99.19099934895833
patch: try Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 338
score: 99.29178619384766
patch: Iterator iter = res == null : v . entries . iterator ( ) ;
rank: 338
score: 99.28848266601562
patch: Iterator < String > iter = res . entries . iterator ( ) ) ;
rank: 338
score: 99.24162023207721
patch: Iterator iter = res . get CaMeL Bytes ( 0 ) . iterator ( ) ;
rank: 338
score: 99.23732503255208
patch: Iterator iter = v . has CaMeL Next ( ) ;
rank: 338
score: 99.22429093070652
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries ( ) . iterator ( ) ;
rank: 338
score: 99.20412310431985
patch: Iterator iter = res . get ( null , null ) . iterator ( ) ;
rank: 338
score: 99.19057329963235
patch: Iterator iter = res . entries ( ) . iterator ( ) ; 0 ++ ;
rank: 339
score: 99.28799438476562
patch: Iterator iter = res . get . entries ( ) . size ( ) ;
rank: 339
score: 99.2415771484375
patch: Iterator iter = res . get CaMeL Classes ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 339
score: 99.23495279947916
patch: Iterator iter = res . entries . iter ( ) ; iterator ++ ;
rank: 339
score: 99.22083391462054
patch: Iterator iter = res . entries / 1 . iterator ( ) ;
rank: 339
score: 99.21784524356617
patch: Iterator iter = res . entries . substring ( 0 ) . iterator ( ) ;
rank: 339
score: 99.20393880208333
patch: Iterator iter = res . entries ( $NUMBER$ ) . size ( ) ;
rank: 339
score: 99.1905517578125
patch: Iterator iter = res . entries ( ) . iterator ( ) ; else {
rank: 340
score: 99.2903823852539
patch: Iterator iter = res . entries = v . entries . iterator ( ) ;
rank: 340
score: 99.2415187669837
patch: Iterator iter = map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 340
score: 99.23697916666667
patch: while ( res . has CaMeL Next ( ) ) {
rank: 340
score: 99.23414713541666
patch: Iterator iter ( res . iterator ( ) . iterator ( ) ) ;
rank: 340
score: 99.21758270263672
patch: Iterator iter = res . entries . [ 0 ] . size ( ) ;
rank: 340
score: 99.2039306640625
patch: Iterator iter = list . entries ( ) ;
rank: 340
score: 99.19053297776442
patch: Object res = res . entries . get ( $STRING$ ) ;
rank: 341
score: 99.2903693704044
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = ebe CaMeL Divide ( res ) ;
rank: 341
score: 99.28739166259766
patch: Iterator iter = res . get CaMeL Priority ( ) . iterator ( ) ;
rank: 341
score: 99.24137739701705
patch: iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 341
score: 99.23678385416666
patch: Iterator < short > iter = res . entries . iterator ( ) ;
rank: 341
score: 99.2235440340909
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > iter ;
rank: 341
score: 99.22042410714286
patch: Iterator entries = res . entries ( ) . entries ( ) ;
rank: 341
score: 99.20390768612133
patch: Iterator iter = res . entries . iterator ( ) ; int iter = 0 ;
rank: 341
score: 99.19042096819196
patch: Iterator iter = res . iterator ( ) ; while ( ; )
rank: 342
score: 99.2900749655331
patch: Open CaMeL Map CaMeL Real CaMeL Vector Iterator iter = res . entries ( ) ;
rank: 342
score: 99.28688450863487
patch: Iterator < int > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 342
score: 99.24114990234375
patch: try { Iterator iter = res . list . iterator ( ) ;
rank: 342
score: 99.236083984375
patch: Iterator iter = entries . ( ) . iterator ( ) ;
rank: 342
score: 99.22351604959239
patch: Iterator iter = res . entries . to CaMeL Array ( Open CaMeL Map CaMeL Real CaMeL Vector . length ) ;
rank: 342
score: 99.21709846047794
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( this ) ;
rank: 342
score: 99.2038330078125
patch: Iterator iter = res . entries ( ) ; int iter = 0 ;
rank: 342
score: 99.18880615234374
patch: Iterator iter = v . Iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 343
score: 99.28933376736111
patch: Real CaMeL Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( iter ) ;
rank: 343
score: 99.28688151041666
patch: Iterator iter = res . get ( $NUMBER$ ) . entries ( ) ;
rank: 343
score: 99.24057152157738
patch: res . set CaMeL Length ( 0 ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 343
score: 99.235888671875
patch: Iterator < Real CaMeL Vector > iter = res . entries . length ;
rank: 343
score: 99.23338216145834
patch: Iterator iter = res . entries . iterator ( ) ; ; / /
rank: 343
score: 99.22329313858695
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . key . entries . iterator ( ) ;
rank: 343
score: 99.21528894761029
patch: Iterator iter = res . entries . entries . ( ) . entries ( ) ;
rank: 343
score: 99.20334041819854
patch: Iterator < Iterator < Integer > iter = res . entries . iterator ( ) ;
rank: 343
score: 99.18836669921875
patch: List iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 344
score: 99.28916422526042
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( entries ) ;
rank: 344
score: 99.28680778952206
patch: Iterator < Thread > iter = res . entries ( ) . iterator ( ) ;
rank: 344
score: 99.23224431818181
patch: Iterator iter ( res . iterator ( ) ) ;
rank: 344
score: 99.22328252377717
patch: Iterator < Real CaMeL Vector < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 344
score: 99.20240885416666
patch: Iterator < String > iter = res . list . iterator ( ) ;
rank: 344
score: 99.18817816840277
patch: if ( res != null ) res . entries = res . entries . entries ; else
rank: 345
score: 99.24001146399456
patch: Iterator iter = res . get . entries ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 345
score: 99.23557535807292
patch: Iterator iter = res . name . iterator ( ) ;
rank: 345
score: 99.23204040527344
patch: Iterator iter = res . get CaMeL Property ( ) . iterator ( ) ;
rank: 345
score: 99.2232666015625
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . iterator ( ) ;
rank: 345
score: 99.21404157366071
patch: List iter = res . entries . entries . iterator ( ) ;
rank: 345
score: 99.20214029947917
patch: / * res . entries = res . entries . iterator ( ) ;
rank: 345
score: 99.1881167763158
patch: if ( v != null ) res . res = res . entries . size ( ) ;
rank: 346
score: 99.239990234375
patch: Iterator iter = v . map . entries . iterator ( ) ;
rank: 346
score: 99.23501790364584
patch: Iterator iter = res . ! res . has CaMeL Next ( ) ;
rank: 346
score: 99.2315673828125
patch: Iterator iter = res . get ( res . size ( ) ) ;
rank: 346
score: 99.21835327148438
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 346
score: 99.18807779947916
patch: Iterator iter = res . iterator ( ) Iterator . iterator ( ) ;
rank: 347
score: 99.28729248046875
patch: Iterator iter = res != null + v . entries . iterator ( ) ;
rank: 347
score: 99.28636169433594
patch: Iterator iter = res . get ( ) . entries . size ( ) ;
rank: 347
score: 99.23967827690973
patch: Iterator iter = res . get . get CaMeL Entries ( ) . iterator ( ) ;
rank: 347
score: 99.23475060096153
patch: Iterator iter = res . get CaMeL Dimension ( ) . ;
rank: 347
score: 99.2315185546875
patch: Iterator iter = ( = res . entries . iterator ( ) ) ;
rank: 347
score: 99.21248372395833
patch: Iterator Iterator iter = res . entries . entries . iterator ( ) ;
rank: 347
score: 99.20185198102679
patch: Iterator iter = res . entries ( ) . start ( ) ;
rank: 347
score: 99.18790475945724
patch: if ( res != null ) { Iterator iter = res . iterator . iterator ( ) ;
rank: 348
score: 99.28629244290866
patch: Iterator < String > iter = res . size ( ) ;
rank: 348
score: 99.23966117527173
patch: Iterator iter = res . entries 1 . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 348
score: 99.23457336425781
patch: Iterator iter = res . entries . entries . iterator ( ) ; for (
rank: 348
score: 99.23008219401042
patch: Iterator iter = res . read . iterator ( ) ;
rank: 348
score: 99.22215735394022
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . entries . iterator ( ) ) {
rank: 348
score: 99.21794891357422
patch: Iterator iter = res = res . entries . entries . iterator ( ) ;
rank: 348
score: 99.1996358235677
patch: res . Iterator iter = res . entries ( ) ;
rank: 348
score: 99.18778483072917
patch: Iterator iter = res 1 . entries ( ) . iterator ( ) ;
rank: 349
score: 99.28714752197266
patch: Iterator iter = res [ ] . entries ( ) . iterator ( ) ;
rank: 349
score: 99.23448988970588
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; }
rank: 349
score: 99.22992815290179
patch: Iterator iter = res . entries . iterator ( ) ; iterator }
rank: 349
score: 99.22198195684524
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . get CaMeL Dimension ( ) ) {
rank: 349
score: 99.21236979166666
patch: Iterator iter = res . contains ( $STRING$ ) . iterator ( ) ;
rank: 349
score: 99.19912923177084
patch: Iterator iter = res . map ( null ) . iterator ( ) ;
rank: 350
score: 99.28697204589844
patch: Iterator iter = v . entries ( ) . iterator ( ) ; for (
rank: 350
score: 99.28467559814453
patch: Iterator iter = res . in . entries ( ) . iterator ( ) ;
rank: 350
score: 99.23843238467262
patch: Iterator iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 350
score: 99.22177522078805
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) { res . set CaMeL Entry ( ) ;
rank: 350
score: 99.2173080444336
patch: Iterator iter = res , iter = res . entries . iterator ( ) ;
rank: 350
score: 99.21224212646484
patch: Iterator iter = res . entries . entries . entries . iter ( ) ;
rank: 350
score: 99.19907789963942
patch: Iterator >> iter = res . entries . iterator ( ) ;
rank: 350
score: 99.18757067228618
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) break ;
rank: 351
score: 99.28391400505515
patch: Iterator < ? > iter = res . entries ( ) . iter ( ) ;
rank: 351
score: 99.23793029785156
patch: Math . max ( 0 , res . entries . size ( ) ) ;
rank: 351
score: 99.23367130055146
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( iter ) ;
rank: 351
score: 99.22917175292969
patch: Iterator iter = res . entries . iterator ( ) ; = ( ) ;
rank: 351
score: 99.22154541015625
patch: list . set CaMeL Entry ( iter . key ( ) , iter . value ( ) ) ;
rank: 351
score: 99.2120590209961
patch: Iterator iter = res . get CaMeL Value ( ) . next ( ) ;
rank: 351
score: 99.19906795726104
patch: Iterator iter = res . entries ( 1 , null ) . iterator ( ) ;
rank: 351
score: 99.18755696614583
patch: synchronized ( this ) { Iterator iter = res . iterator ( ) ;
rank: 352
score: 99.28550211588542
patch: check CaMeL Vector CaMeL Dimensions ( v . get CaMeL Dimension ( ) , this ) ;
rank: 352
score: 99.28351236979167
patch: Iterator < String > iter : res . entries . iterator ( ) ;
rank: 352
score: 99.2377697172619
patch: Iterator iter = res . clone ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 352
score: 99.22887311662946
patch: iter . Iterator iter = res . entries . iterator ( ) ;
rank: 352
score: 99.19895833333334
patch: Iterator iter = res . entries ( $NUMBER$ ) . entries ( ) ;
rank: 352
score: 99.18749281939338
patch: if ( res . res != null && res . res . res != null )
rank: 353
score: 99.28533935546875
patch: Real CaMeL Vector v = new Real CaMeL Vector ( this ) ;
rank: 353
score: 99.28248997738487
patch: final int size = res . entries . iterator ( ) . iterator ( ) . length ;
rank: 353
score: 99.23309326171875
patch: Iterator iter = res . load ( ) . iterator ( ) ;
rank: 353
score: 99.19890887920673
patch: Iterator < String : res . entries . iterator ( ) ;
rank: 354
score: 99.28522805606617
patch: Iterator iter = res [ 1 ] . entries . entries . iterator ( ) ;
rank: 354
score: 99.23302408854167
patch: Iterator < Real CaMeL Vector > iter = entries . size ( ) ;
rank: 354
score: 99.22853088378906
patch: Iterator iter = res . entries . iterator ( ) ; iterator return iter ;
rank: 354
score: 99.22066497802734
patch: Iterator iter = res . key . entries ( ) . iterator ( ) ;
rank: 354
score: 99.21562194824219
patch: Iterator iter < Number > iter = res . entries . iterator ( ) ;
rank: 354
score: 99.21123190487133
patch: Iterator iter = res . entries . iterator ( ) Real CaMeL Vector ( ) ;
rank: 354
score: 99.19869995117188
patch: Iterator iter = res . entries ( - 1 ) . entries ( ) ;
rank: 354
score: 99.18692779541016
patch: Iterator iter ; try { iter = v . entries . iterator ( ) ;
rank: 355
score: 99.28514862060547
patch: List iter = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 355
score: 99.281640625
patch: Iterator < String > res = res . entries . iterator ( ) ;
rank: 355
score: 99.23719371448864
patch: Iterator iter = res . list . Iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 355
score: 99.23257010323661
patch: Iterator iter = res . clone ( ) . size ( ) ;
rank: 355
score: 99.22846221923828
patch: Iterator iter = res . entries . iterator ( ) ; for ( ) {
rank: 355
score: 99.22052764892578
patch: while ( res . iterator ( ) . has CaMeL Next ( ) ) {
rank: 355
score: 99.21121978759766
patch: Iterator iter = res . entries . [ 0 ] . iterator ( ) ;
rank: 355
score: 99.19830322265625
patch: synchronized ( res ) { res . iterator ( ) . iterator ( ) ;
rank: 355
score: 99.18684605189732
patch: if ( res != null ) res . add ( res ) ;
rank: 356
score: 99.28449842664931
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( null ) ;
rank: 356
score: 99.23665718410327
patch: Iterator iter = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) ) {
rank: 356
score: 99.2279561360677
patch: Iterator iter = res . key . iterator ( ) ;
rank: 356
score: 99.2202785326087
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) v . entries . iterator ( ) ) ;
rank: 356
score: 99.21099090576172
patch: Iterator iter = res . entries / this . entries . iterator ( ) ;
rank: 356
score: 99.19815063476562
patch: Iterator iter = res . get CaMeL Bytes ( ) . entries ( ) ;
rank: 356
score: 99.18651471819196
patch: Iterator iter ; while ( iter . has CaMeL Next ( ) )
rank: 357
score: 99.28448893229167
patch: int Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 357
score: 99.28102111816406
patch: Iterator < Object > iter = res . entries . iterator ( ) ; else
rank: 357
score: 99.23231724330357
patch: Iterator iter = res . entries . size ( ) ; for (
rank: 357
score: 99.2273941040039
patch: Iterator iter = res . entries . iter ( ) ; iterator = null ;
rank: 357
score: 99.215087890625
patch: Iterator iter = res . name . entries . iterator ( ) ;
rank: 357
score: 99.18623432360198
patch: if ( v != null ) res . entries = res . entries . iterator ( ) ;
rank: 358
score: 99.2193603515625
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter : res . iterator ( ) ;
rank: 358
score: 99.18605550130208
patch: res . Iterator iter = res . iterator ( ) ;
rank: 359
score: 99.28409830729167
patch: Iterator iter = res == null . iterator ( ) ;
rank: 359
score: 99.23628162202381
patch: iter = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 359
score: 99.2300313313802
patch: Iterator iter = ebe CaMeL Divide . iterator ( ) ;
rank: 359
score: 99.2259521484375
patch: Iterator iter = res . entries . iterator ( ) ; ) /
rank: 359
score: 99.21918688322368
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : this . res . entries ) {
rank: 359
score: 99.21337890625
patch: Iterator iter = res . iterator ( ) : res . size ( ) ;
rank: 359
score: 99.19671989889706
patch: Iterator < ] >> iter = res . entries ( ) . iterator ( ) ;
rank: 359
score: 99.1858622233073
patch: try { Iterator iter = v . iterator ( ) ;
rank: 360
score: 99.23585420496323
patch: synchronized ( res ) { Iterator iter = res . list . iterator ( ) ;
rank: 360
score: 99.2296893780048
patch: int Iterator iter = res . entries . iterator ( ) ;
rank: 360
score: 99.22590637207031
patch: Iterator iter = res . entries . iterator ( ) ; iterator : 0 ;
rank: 360
score: 99.21247863769531
patch: Collection res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 360
score: 99.1966796875
patch: Iterator < ] ++ iter = res . entries . iterator ( ) ;
rank: 360
score: 99.18555908203125
patch: if ( v != null ) res . ) res . entries = res . entries . entries ;
rank: 361
score: 99.28356170654297
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries ( ) ;
rank: 361
score: 99.28077607996323
patch: Iterator < Iterator < Object > iter = res . entries . iterator ( ) ;
rank: 361
score: 99.23584702435662
patch: Iterator iter = System . get CaMeL Property ( $STRING$ ) . iterator ( ) ;
rank: 361
score: 99.22959681919643
patch: Iterator iter = res . length . entries . iterator ( ) ;
rank: 361
score: 99.22509765625
patch: Iterator iter = res . entries . iterator ( ) ; entries = 0 ;
rank: 361
score: 99.21241978236607
patch: Iterator entries = v . entries ( ) . iterator ( ) ;
rank: 361
score: 99.19662272135416
patch: Iterator < ] > iter = res . entries . size ( ) ;
rank: 361
score: 99.18546752929687
patch: Collection iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 362
score: 99.28352186414931
patch: check CaMeL Vector CaMeL Dimensions ( res . get CaMeL Dimension ( ) , this ) ;
rank: 362
score: 99.23540704900569
patch: Iterator iter = res . min . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 362
score: 99.229248046875
patch: Iterator iter = res . ( ) . size ( ) ;
rank: 362
score: 99.2181884765625
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . get CaMeL Dimension ( ) )
rank: 362
score: 99.20845794677734
patch: int value = v . get CaMeL Entry ( ) . size ( ) ;
rank: 362
score: 99.19608561197917
patch: Iterator < ] > iter = res . value . iterator ( ) ;
rank: 362
score: 99.18442993164062
patch: Iterator < = v . iterator ( ) ; while ( v . has CaMeL Next ( ) )
rank: 363
score: 99.28343854631696
patch: Iterator iter = res == null : res . iterator ( ) ;
rank: 363
score: 99.28016880580357
patch: Iterator < int 1 : res . entries . iterator ( ) ;
rank: 363
score: 99.23521664268092
patch: Iterator iter = res . get ( 1 ) . entries ( ) . iterator ( ) ;
rank: 363
score: 99.22405598958333
patch: Iterator iter = res . entries . . entries . iterator ( ) ;
rank: 363
score: 99.21785481770833
patch: Iterator iter = res . entries ( ) . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 363
score: 99.2083740234375
patch: Iterator iter = entries . entries . entries . entries . iterator ( ) ;
rank: 363
score: 99.18439190204327
patch: res . entries = res . get CaMeL Entries ( ) ;
rank: 364
score: 99.2823257446289
patch: Iterator iter = Real CaMeL Vector . entries ( ) . iterator ( ) ;
rank: 364
score: 99.27971540178571
patch: final Iterator < Object > iter = res . entries ( ) ;
rank: 364
score: 99.23518172554348
patch: Iterator iter = res . split . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 364
score: 99.22909981863839
patch: Iterator res = res . entries . entries . iterator ( ) ;
rank: 364
score: 99.2234130859375
patch: Iterator iter = res . entries . iterator ( ) ; iterator . ;
rank: 364
score: 99.21126556396484
patch: Iterator iter < ? > iter = res . entries . iterator ( ) ;
rank: 364
score: 99.19544219970703
patch: int iterator . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 364
score: 99.18426154641544
patch: res . entries = res . entries != null ? res . entries : null ;
rank: 365
score: 99.23500127377717
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ; )
rank: 365
score: 99.22331891741071
patch: for ( Iterator iter = res . entries . iter ( ) ;
rank: 365
score: 99.21728515625
patch: for ( ) { iter = res . entries . entries . entries . iterator ( ) ;
rank: 365
score: 99.19507598876953
patch: res . entries = ( Iterator [ ] ) res . entries ( ) ;
rank: 366
score: 99.27962552584134
patch: Iterator < Object > entries = res . entries ( ) ;
rank: 366
score: 99.23441938920455
patch: Iterator iter = v . get . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 366
score: 99.21663818359374
patch: Iterator iter = res . get CaMeL Entry ( ) . entries ( ) . iterator ( ) ;
rank: 366
score: 99.20733642578125
patch: Iterator iter = res . get CaMeL Format ( ) . entries ( ) ;
rank: 366
score: 99.19451904296875
patch: / * Iterator iter = res . entries ( ) ;
rank: 367
score: 99.27952357700893
patch: Iterator iter = System . entries ( ) . iterator ( ) ;
rank: 367
score: 99.23433061079545
patch: Iterator iter = res . list . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 367
score: 99.21642348345588
patch: Iterator < String > iter = v . entries . entries . iterator ( ) ;
rank: 367
score: 99.19451434795673
patch: Iterator < String >> iter = res . entries ( ) ;
rank: 367
score: 99.18379211425781
patch: Iterator iter ; try { iter = res . iterator . iterator ( ) ;
rank: 368
score: 99.27912454044117
patch: Iterator < Iterator < ) > iter = res . entries . iterator ( ) ;
rank: 368
score: 99.23365071614583
patch: Iterator iter = res . get ( res ) . iterator ( ) ;
rank: 368
score: 99.22212727864583
patch: Iterator iter = res . entries ( ) entries . iterator ( ) ;
rank: 368
score: 99.21612227590461
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter . has CaMeL Next ( ) ;
rank: 368
score: 99.1944221047794
patch: Iterator iter = res . entries ( null , 1 ) . iterator ( ) ;
rank: 368
score: 99.18348524305556
patch: if ( res == null ) throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 369
score: 99.27850341796875
patch: Iterator iter = res . entries ( ) ; else return null ;
rank: 369
score: 99.23344089673913
patch: iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 369
score: 99.22695486886161
patch: Iterator iter = res . entries . size ( ) ; ) {
rank: 369
score: 99.22146606445312
patch: Iterator iter = res . entries ( ) + res . entries ( ) ;
rank: 369
score: 99.21604919433594
patch: Iterator iter = res . entries . entries . iterator ( ) ; while (
rank: 369
score: 99.2066421508789
patch: res . set CaMeL Value ( v . get CaMeL Dimension ( ) ) ;
rank: 369
score: 99.19437662760417
patch: Iterator iter = res . entries ( ) . remove ( null ) ;
rank: 370
score: 99.28070068359375
patch: Iterator iter = res . iterator ( ) ; for (
rank: 370
score: 99.27843520220588
patch: Iterator < synchronized > iter = res . entries ( ) . iterator ( ) ;
rank: 370
score: 99.23337689568015
patch: Iterator iter = res . get CaMeL Bytes ( $STRING$ ) . iterator ( ) ;
rank: 370
score: 99.22135416666667
patch: Iterator iter = res . min . iterator ( ) ;
rank: 370
score: 99.2160113790761
patch: Iterator < Real CaMeL Vector < Real CaMeL Vector > iter = res . entries . entries . iterator ( ) ;
rank: 370
score: 99.2105712890625
patch: else { Iterator iter = res . entries . iterator ( ) ;
rank: 370
score: 99.20622253417969
patch: Iterator iter = res . entries . trim ( ) . entries ( ) ;
rank: 371
score: 99.2328592936198
patch: Iterator iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 371
score: 99.22105916341145
patch: Collection iter = res . entries . iterator ( ) ;
rank: 371
score: 99.21600700827206
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector entries : res . entries ) {
rank: 371
score: 99.20592244466145
patch: Iterator iter = $STRING$ . entries . iterator ( ) ;
rank: 371
score: 99.19376627604167
patch: Iterator iter = res . entries ( && ) . iterator ( ) ;
rank: 371
score: 99.18291829427083
patch: if ( res != null && res . size ( ) > 0 )
rank: 372
score: 99.27996826171875
patch: Iterator iter = res : res . entries ( ) . iterator ( ) ;
rank: 372
score: 99.23260788690476
patch: Iterator iter = v . entries ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 372
score: 99.226806640625
patch: int < int > iter = res . get CaMeL Dimension ( ) ;
rank: 372
score: 99.21553344726563
patch: return ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . get CaMeL Entry ( iter ) ;
rank: 372
score: 99.20958709716797
patch: Iterator iter = res . entries . iterator ( ) : size ( ) ;
rank: 372
score: 99.193115234375
patch: Iterator 1 = res . entries ( ) . iterator ( ) ;
rank: 372
score: 99.18266465928819
patch: if ( res != null ) res . Iterator iter = res . entries ( ) ;
rank: 373
score: 99.2798210592831
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( iter ) ;
rank: 373
score: 99.27779990748355
patch: if ( res . entries != null ) iter = res . entries . iterator ( ) ;
rank: 373
score: 99.23258463541667
patch: iter = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 373
score: 99.2265853881836
patch: Iterator iter = res . get CaMeL Dimension ( ) . [ 1 ] ;
rank: 373
score: 99.22046712239583
patch: Iterator < * > iter = res . entries . iterator ( ) ;
rank: 373
score: 99.21551513671875
patch: Iterator iter = res . key . entries . iterator ( ) ;
rank: 373
score: 99.19309645432692
patch: final int iter = res . entries ( ) . length ;
rank: 374
score: 99.27925872802734
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = iter . advance ( ) ;
rank: 374
score: 99.27628366570724
patch: Iterator iter = res . get ( false ) . entries ( ) . iterator ( ) ;
rank: 374
score: 99.23256429036458
patch: Iterator iter = v . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 374
score: 99.19271850585938
patch: Iterator iter = new byte [ res . entries . iterator ( ) ] ;
rank: 374
score: 99.18202903053977
patch: Iterator iter = v . iterator ( ) ) ;
rank: 375
score: 99.278564453125
patch: Iterator iter = v . entries . entries ( ) . entries ( ) ;
rank: 375
score: 99.27582750822368
patch: Iterator < String > iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 375
score: 99.232373046875
patch: Iterator iter = v . get ( 0 ) . iterator ( ) ;
rank: 375
score: 99.21991373697917
patch: Iterator iter = res . entries . iterator ( ) ; iterator . else
rank: 375
score: 99.21534488075658
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . entries ) {
rank: 375
score: 99.20462799072266
patch: Iterator iter = v . entries . iterator ( ) . iterator ( ) ;
rank: 375
score: 99.19264322916666
patch: Iterator iter = res . entries ( ) . add ( res ) ;
rank: 375
score: 99.18202611019737
patch: Iterator iter = res . entries ( ) ; Iterator iter = v . iterator ( ) ;
rank: 376
score: 99.2768310546875
patch: Iterator iter = res $NUMBER$ . entries ( ) . iterator ( ) ;
rank: 376
score: 99.22520955403645
patch: int res = res . get CaMeL Dimension ( ) ;
rank: 376
score: 99.2189697265625
patch: / ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 376
score: 99.2046142578125
patch: Iterator iter = res . entries ) . entries . iterator ( ) ;
rank: 376
score: 99.1923828125
patch: Iterator iter = res . get CaMeL Properties . iterator ( ) ;
rank: 376
score: 99.18168501420455
patch: Iterator iter = res . iterator ( ) ; else
rank: 377
score: 99.27531163832721
patch: Iterator < String > iter = res . entries = res . iterator ( ) ;
rank: 377
score: 99.23221028645834
patch: result = res . entries . iterator ( ) . next ( ) ;
rank: 377
score: 99.2189608487216
patch: Iterator iter = res . entries . ( ) ;
rank: 377
score: 99.21504480698529
patch: Iterator < Class < ? > iter = res . entries . iterator ( ) ;
rank: 377
score: 99.20790100097656
patch: Iterator iter < T > iter = res . entries . iterator ( ) ;
rank: 377
score: 99.20457106370192
patch: Iterator iter = res ) . entries . iterator ( ) ;
rank: 377
score: 99.18149977463942
patch: Iterator iter = res . iterator ( . iterator ( ) ;
rank: 378
score: 99.2750713641827
patch: Iterator < Object > iter = entries . iterator ( ) ;
rank: 378
score: 99.23213334517045
patch: Iter iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 378
score: 99.22517903645833
patch: Iterator iter = v . get CaMeL Dimension ( ) ;
rank: 378
score: 99.20752716064453
patch: Iterator iter = ( ( Iterator ) res . entries . iterator ( ) ;
rank: 378
score: 99.20428466796875
patch: Iterator iter = res . Real CaMeL Vector ( ) . entries ( ) ;
rank: 378
score: 99.19069417317708
patch: Iterator size = res . entries . iterator ( ) ;
rank: 379
score: 99.27529907226562
patch: Iterator iter = iter . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 379
score: 99.27496744791667
patch: final int [ ] iterator = res . entries . iterator ( ) ;
rank: 379
score: 99.23181733630952
patch: for ( Iterator iter = list . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 379
score: 99.2251727764423
patch: iter . iterator ( ) . has CaMeL Next ( ) ;
rank: 379
score: 99.21419067382813
patch: Iterator iter = res . entries ( ) . Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 379
score: 99.20375061035156
patch: int size = v . get CaMeL Dimension ( ) . size ( ) ;
rank: 379
score: 99.19050149356617
patch: iter = res . entries ( ) ; iterator = res . entries ( ) ;
rank: 379
score: 99.18110656738281
patch: if ( res != null ) res . ) res = res . entries ;
rank: 380
score: 99.27445475260417
patch: Iterator < String > iter = this . entries . iterator ( ) ;
rank: 380
score: 99.2741928100586
patch: Iterator iter = res [ 0 0 ] . entries . iterator ( ) ;
rank: 380
score: 99.21344353170956
patch: Iterator < String > iter = this . res . entries . iterator ( ) ;
rank: 380
score: 99.18058013916016
patch: if ( res . entries != null ) res . entries = new ) ;
rank: 381
score: 99.27391860064338
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( this ) ;
rank: 381
score: 99.23158264160156
patch: res . set CaMeL Index ( res . get CaMeL Index ( ) ) ;
rank: 381
score: 99.21807454427083
patch: Iterator iter = res . split ( res . entries ( ) ) ;
rank: 381
score: 99.21286939538044
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries ) { iter . advance ( ) ;
rank: 381
score: 99.2071304321289
patch: Iterator iter = res . this ( ) . entries . iterator ( ) ;
rank: 381
score: 99.19030043658088
patch: Iterator < String >> iter = res . entries ( ) . iterator ( ) ;
rank: 381
score: 99.1805087002841
patch: Iterator iter = res . entries ( res ) ;
rank: 382
score: 99.27347819010417
patch: final Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 382
score: 99.23136039402173
patch: Iterator iter = Integer . parse CaMeL Int ( res . get CaMeL Dimension ( ) ) . entries ( ) ;
rank: 382
score: 99.22416687011719
patch: Iterator iter = res . get CaMeL Dimension ( ) . start ( ) ;
rank: 382
score: 99.21756184895834
patch: Iterator iter = res . entries . . iter . iterator ( ) ;
rank: 382
score: 99.21267520680146
patch: Iterator iter = res . entries . entries [ 0 ] . iterator ( ) ;
rank: 382
score: 99.20699368990384
patch: Iterator iter $NUMBER$ = res . entries . iterator ( ) ;
rank: 382
score: 99.18999167049633
patch: synchronized ( res ) { int iter = res . entries . iterator ( ) ;
rank: 382
score: 99.17981635199652
patch: if ( v != null ) res . Iterator iter = res . iterator ( ) ;
rank: 383
score: 99.27299499511719
patch: Iterator iter = res . entries ( ) [ ] . iterator ( ) ;
rank: 383
score: 99.21736145019531
patch: Iterator iter = res . entries ( ) ; res . entries ( ) ;
rank: 383
score: 99.21255493164062
patch: Iterator iter = res . entries . to CaMeL Array ( - 1 ) . iterator ( ) ;
rank: 383
score: 99.2064208984375
patch: Iterator iter 1 = res . entries . iterator ( ) ;
rank: 383
score: 99.18949672154018
patch: Iterator * ] iterator = res . entries . iterator ( ) ;
rank: 383
score: 99.1798095703125
patch: Iterator iter = res . entries . iterator ( ) ; while ( ; )
rank: 384
score: 99.2310791015625
patch: System . arraycopy ( res . get CaMeL Dimension ( ) , 0 , res . get CaMeL Dimension ( ) ) ;
rank: 384
score: 99.22280649038461
patch: final Iterator iter = v . entries . iterator ( ) ;
rank: 384
score: 99.21720377604167
patch: Iterator iter = res . max . iterator ( ) ;
rank: 384
score: 99.17978515625
patch: / Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 385
score: 99.27290344238281
patch: Iterator iter = res . entries . iterator ( ) ; / * for (
rank: 385
score: 99.23091052827381
patch: Iterator iter = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 385
score: 99.2168719951923
patch: Iterator iter = res . entries . iter ( ) ; iterator
rank: 385
score: 99.18894740513393
patch: Iterator iter = res . entries = res . size ( ) ;
rank: 385
score: 99.1796875
patch: if ( res != null ) res . ) res . entries = res . entries . length ;
rank: 386
score: 99.2307487936581
patch: Iterator iter = res . get ( res . entries ) . iterator ( ) ;
rank: 386
score: 99.22265625
patch: Iterator iter = res . get CaMeL Dimension ( ) . v ( ) ;
rank: 386
score: 99.21631798377403
patch: Iterator iter = res . entries . iterator ( ) ; entries
rank: 386
score: 99.2122218919837
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res .
rank: 386
score: 99.17958984375
patch: Iterator iter = v . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 387
score: 99.2714111328125
patch: Iterator < Object > entries = res . entries . iterator ( ) ;
rank: 387
score: 99.27017974853516
patch: Iterator iter = res . entries ( ) . iterator ( ) * 1 ;
rank: 387
score: 99.22219669117646
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; ;
rank: 387
score: 99.20558794806985
patch: Iterator iter = res == new Open CaMeL Map CaMeL Real CaMeL Vector ( this )
rank: 387
score: 99.20016276041666
patch: Iterator iter = res . entries . ( ) . iter ( ) ;
rank: 387
score: 99.18871053059895
patch: Iterator iter = out . entries . iterator ( ) ;
rank: 387
score: 99.17954615542763
patch: if ( res != null ) res . res = res . entries . get ( ) ;
rank: 388
score: 99.27074381510417
patch: if ( res != null ) iter = res . entries ( ) ;
rank: 388
score: 99.23052571614583
patch: Iterator iter = ( int ) res . entries . iterator ( ) ;
rank: 388
score: 99.21607259114583
patch: Iterator iter ( res . entries ( ) . iterator ( ) ) ;
rank: 388
score: 99.21107177734375
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . entries ( ) )
rank: 388
score: 99.18841193704044
patch: Iterator iter = res . entries . iterator ( ) ; int iter = null ;
rank: 388
score: 99.1792056435033
patch: synchronized ( this ) { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 389
score: 99.27040201822916
patch: entries = res . entries . iterator ( ) . iterator ( ) ;
rank: 389
score: 99.22206333705357
patch: Iterator iter = res . res . entries . size ( ) ;
rank: 389
score: 99.21598307291667
patch: Iterator < ) ; iterator = res . entries . iterator ( ) ;
rank: 389
score: 99.21104847301136
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . entries . iterator ( ) )
rank: 389
score: 99.19876098632812
patch: for ( Iterator iter = res . size ( ) ;
rank: 389
score: 99.18834731158088
patch: Iterator iter = res . load ( res . get CaMeL Name ( ) ) ;
rank: 389
score: 99.17902688419117
patch: if ( res . res != null ) res . res = res . entries ;
rank: 390
score: 99.27032791940789
patch: Iterator < String > iter = res . get ( ) . entries . iterator ( ) ;
rank: 390
score: 99.26910400390625
patch: Iterator iter = res [ - 1 ] . entries . iterator ( ) ;
rank: 390
score: 99.22998046875
patch: iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 390
score: 99.21571451822916
patch: Iterator iter = res . get ( 1 ) . entries ( ) ;
rank: 390
score: 99.21094811480978
patch: Iterator < Real CaMeL Vector > iter = res . entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 390
score: 99.18812052408855
patch: try { Iterator iter = res . entries ( ) ;
rank: 390
score: 99.17902374267578
patch: if ( v . entries . size ( ) > 0 ) return res ;
rank: 391
score: 99.27023111979166
patch: Iterator < int > iterator = res . entries . iterator ( ) ;
rank: 391
score: 99.26903618706598
patch: if ( res == new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ) {
rank: 391
score: 99.22996690538194
patch: synchronized ( res ) { res . entries = res . entries . iterator ( ) ;
rank: 391
score: 99.22169404871323
patch: Iterator < Real CaMeL Vector > iter = v . get CaMeL Dimension ( ) ;
rank: 391
score: 99.21564592633929
patch: Iterator iter = res . entries . put . iterator ( ) ;
rank: 391
score: 99.21078491210938
patch: this . res . set CaMeL Entry ( iter . key ( ) , iter . value ( )
rank: 391
score: 99.18809407552084
patch: Iterator iter = res . entries ( ) ; copy ( res ) ;
rank: 391
score: 99.17876233552632
patch: Iterator iter = res . iterator ( ) ; else iter = res . iterator ( ) ;
rank: 392
score: 99.27006979549633
patch: Iterator iter = res . get . entries ( ) . iterator ( ) ) ;
rank: 392
score: 99.26875813802083
patch: iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 392
score: 99.22980813419117
patch: Iterator iter = res . get CaMeL Classes ( ) . iterator ( ) ; ;
rank: 392
score: 99.22139739990234
patch: Iterator iter = res . get CaMeL Dimension ( ) . length ( ) ;
rank: 392
score: 99.21514485677083
patch: Iterator iter = Math . iterator ( res . iterator ( ) ) ;
rank: 392
score: 99.21054475203805
patch: Iterator < ) { Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 392
score: 99.20381986177884
patch: Iterator iter = res 1 . entries . iterator ( ) ;
rank: 392
score: 99.17875366210937
patch: Iterator iter = v . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 393
score: 99.2699333639706
patch: Iterator < Object > iter = res . get ( ) . entries ( ) ;
rank: 393
score: 99.26835363051471
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( ) ; *
rank: 393
score: 99.22976817255434
patch: Iterator iter = v . entries . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 393
score: 99.22092982700893
patch: Iterator iter = res . this . entries . size ( ) ;
rank: 393
score: 99.20993041992188
patch: Iterator iter = res . entries . length ; while ( iter . has CaMeL Next ( ) )
rank: 393
score: 99.20381986177884
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector
rank: 393
score: 99.18731689453125
patch: Iterator iter = res . entries ( ) . replace ( ) ;
rank: 393
score: 99.17869215745192
patch: Iterator iter = res . entries 1 . iterator ( ) ;
rank: 394
score: 99.26968587239584
patch: Iterator < Object > iter = res . entries . entries ( ) ;
rank: 394
score: 99.26786041259766
patch: Iterator iter = data . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 394
score: 99.22931463068181
patch: Collection iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 394
score: 99.21441650390625
patch: Iterator iter = res . entries . iterator ( ) ; iter < ) ;
rank: 394
score: 99.20977492559524
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries . entries ( ) ;
rank: 394
score: 99.20346069335938
patch: Iterator iter = in . entries . iterator ( ) ;
rank: 394
score: 99.19749348958334
patch: for ( final Iterator iter = res . entries . iterator ( ) ;
rank: 394
score: 99.1866943359375
patch: Iterator iter = res . entries = ( ) . iterator ( ) ;
rank: 394
score: 99.17861938476562
patch: Iterator iter = v . entries ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 395
score: 99.2692009420956
patch: Iterator < ? > iterator = res . entries ( ) . iterator ( ) ;
rank: 395
score: 99.26779513888889
patch: Iterator iter = this . res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 395
score: 99.22886352539062
patch: Iterator iter = size . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 395
score: 99.19740647536058
patch: for ( iter = res . entries . iterator ( ) ;
rank: 395
score: 99.17853461371527
patch: if ( v != null ) res . ) res . res . res . ) ;
rank: 396
score: 99.26903578814338
patch: Iterator < / > iter = res . entries ( ) . iterator ( ) ;
rank: 396
score: 99.26737467447917
patch: Iterator iter = res == null . get CaMeL Dimension ( ) . entries ( ) ;
rank: 396
score: 99.22886149088542
patch: iter = res . entries . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 396
score: 99.21420084635416
patch: Iterator iter . = res . entries ( ) . iterator ( ) ;
rank: 396
score: 99.2096935453869
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . entries ( ) ) {
rank: 396
score: 99.18631685697116
patch: Iterator < Class > iter = res . entries ( ) ;
rank: 396
score: 99.17843191964286
patch: Iterator iter = res . iterator ( . iterator ( ) ) ;
rank: 397
score: 99.2287264737216
patch: Iterator iter = res . key . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 397
score: 99.21394856770833
patch: Iterator iter = res . get CaMeL Entries ( ) ;
rank: 397
score: 99.18605550130208
patch: Iterator [ ] entries = res . entries ( ) ;
rank: 397
score: 99.17815399169922
patch: if ( res != null ) res . set CaMeL Value ( res ) ;
rank: 398
score: 99.26883370535714
patch: final Iterator < Iterator > iter = res . entries ( ) ;
rank: 398
score: 99.26589965820312
patch: Iterator iter = this . v . entries ( ) . iterator ( ) ;
rank: 398
score: 99.22843070652173
patch: for ( Iterator iter = v . list . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 398
score: 99.2203369140625
patch: int < String > iter = res . get CaMeL Dimension ( ) ;
rank: 398
score: 99.21377999441964
patch: res . add ( res . entries . size ( ) ) ;
rank: 398
score: 99.2096531080163
patch: Iterator Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( v ) ;
rank: 398
score: 99.19722747802734
patch: Iterator iter ; for ( iter = res . entries . iterator ( ) ;
rank: 398
score: 99.17803596047794
patch: synchronized ( res . entries ) { Iterator iter = res . iterator ( ) ;
rank: 399
score: 99.268798828125
patch: final Iterator < Throwable > iter = res . entries . iterator ( ) ;
rank: 399
score: 99.22828892299107
patch: Iterator iter = v . clone ( ) . iterator ( ) ;
rank: 399
score: 99.19651576450893
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . advance ( ) ;
rank: 399
score: 99.18577067057292
patch: Iterator iter = res . entries . copy ( ) ;
rank: 399
score: 99.1778205422794
patch: if ( res . res != null ) res . res . res = res ;
rank: 400
score: 99.26504952566964
patch: Iterator iter = res [ ] . entries . iterator ( ) ;
rank: 400
score: 99.2197265625
patch: Iterator iter = res . start . entries . iterator ( ) ;
rank: 400
score: 99.20881791548295
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( ) . entries . iterator ( ) ;
rank: 400
score: 99.18546840122768
patch: Iterator iter = res . entries ( ) . remove ( ) ;
rank: 400
score: 99.17760467529297
patch: if ( v != null ) res . entries . add ( v ) ;
rank: 401
score: 99.2676773071289
patch: Iterator < String > iter = res . entries . iterator ( ) ; ;
rank: 401
score: 99.26487731933594
patch: Iterator iter = res . entries ( ) : res . iterator ( ) ;
rank: 401
score: 99.22822902513587
patch: Iterator iter = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 401
score: 99.21959686279297
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter .
rank: 401
score: 99.21300455729167
patch: Iterator iter = this . res . entries . iterator ( ) ; ;
rank: 401
score: 99.2087631225586
patch: Iterator iter = res . entries ( ) . entries . entries ( ) ;
rank: 401
score: 99.2009033203125
patch: Iterator iter = iter . = res . entries . iterator ( ) ;
rank: 401
score: 99.18534342447917
patch: Iterator iter ; else iter = res . entries . iterator ( ) ;
rank: 401
score: 99.17745971679688
patch: Iterator iter = v . iterator . entries ( ) ;
rank: 402
score: 99.26732288707386
patch: final Iterator iter = entries . iterator ( ) ;
rank: 402
score: 99.26473236083984
patch: int iter = v . get CaMeL Dimension ( ) . size ( ) ;
rank: 402
score: 99.22821599786931
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ; )
rank: 402
score: 99.20759851792279
patch: Iterator < iter > iter = res . entries . entries . iterator ( ) ;
rank: 402
score: 99.1852668313419
patch: Iterator iter = ( ( Iterator ) res . entries . iterator ( ) ) ;
rank: 402
score: 99.17733604029605
patch: if ( res != null ) res = res . entries . entries . iterator ( ) ;
rank: 403
score: 99.26724243164062
patch: final Iterator iter = res . entries ( ) . iterator ( ) ; else
rank: 403
score: 99.26472473144531
patch: Iterator iter = ( iter . entries ( ) ) . iterator ( ) ;
rank: 403
score: 99.22781808035714
patch: Iterator iter = res . get ( res . get CaMeL Dimension ( ) ) . entries ( ) ;
rank: 403
score: 99.21222330729167
patch: Iterator iter = res . entries ( ) . iterator ( ) ; iter
rank: 403
score: 99.20699912623355
patch: Iterator iter = res . entries [ 0 ] . entries ( ) . iterator ( ) ;
rank: 403
score: 99.19998168945312
patch: Iterator entries = res . get CaMeL Dimension ( ) . size ( ) ;
rank: 403
score: 99.18518744574652
patch: iterator = res . entries ( ) ;
rank: 403
score: 99.17660958426339
patch: Iterator iter = res . iterator ( ) ; while ( ) {
rank: 404
score: 99.26701274671052
patch: entries . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 404
score: 99.26463487413194
patch: Iterator iter = v . get CaMeL Dimension ( ) . iterator ( ) ; for (
rank: 404
score: 99.22728329613095
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = v . iterator ( ) ;
rank: 404
score: 99.21778215680804
patch: int iter = res . entries . entries . iterator ( ) ;
rank: 404
score: 99.21199544270833
patch: iterator iter = res . entries . iterator ( ) ;
rank: 404
score: 99.2067626953125
patch: final Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 404
score: 99.18501551011029
patch: Iterator iter = res . entries ( $NUMBER$ , 1 ) . iterator ( ) ;
rank: 404
score: 99.17642032398896
patch: if ( v . entries . iterator ( ) . has CaMeL Next ( ) )
rank: 405
score: 99.2642822265625
patch: int iter = v . get CaMeL Dimension ( ) . entries ( ) ;
rank: 405
score: 99.22716703869048
patch: iter = res . entries . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 405
score: 99.21163940429688
patch: Iterator iter = res . entries . iterator ( ) ; Iterator < ) ;
rank: 405
score: 99.20669157608695
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : v . entries . iterator ( ) ;
rank: 405
score: 99.184912109375
patch: Iterator < ] > iter = res . entries . entries ( ) ;
rank: 405
score: 99.17592366536458
patch: if ( res != null ) res . Iterator iter = v . iterator ( ) ;
rank: 406
score: 99.26646205357143
patch: Iterator iter = 0 + res . entries . iterator ( ) ;
rank: 406
score: 99.18453979492188
patch: int entries . iterator ( ) . iterator ( ) ;
rank: 406
score: 99.1757568359375
patch: Iterator iter $NUMBER$ = res . entries ( ) . iterator ( ) ;
rank: 407
score: 99.2661865234375
patch: Iterator iter = res . get ( 0 ) . size ( ) ;
rank: 407
score: 99.26377360026042
patch: Iterator iter = v . entries . entries ( ) ;
rank: 407
score: 99.22709147135417
patch: for ( Iterator iter = res . list . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 407
score: 99.21677652994792
patch: Iterator iter = Iterator . has CaMeL Next ( ) ;
rank: 407
score: 99.20634321732955
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) . remove ( ) ;
rank: 407
score: 99.1923076923077
patch: Iterator iter = = res . entries . iterator ( ) ;
rank: 408
score: 99.26596069335938
patch: Iterator < Object > iter = res . entries . iterator ( ) ; }
rank: 408
score: 99.22681826636905
patch: Iterator iter = res . list ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 408
score: 99.21673224954044
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( ) ; {
rank: 408
score: 99.20613367417279
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . res ) {
rank: 408
score: 99.19913736979167
patch: Iterator iter = Iterator . entries . iterator ( ) ;
rank: 408
score: 99.18423461914062
patch: Iterator * ] list = res . entries ( ) ;
rank: 409
score: 99.26586100260417
patch: final Iterator iter = res . get . entries . iterator ( ) ;
rank: 409
score: 99.26355852399554
patch: Iterator iter = res . entries == null . iterator ( ) ;
rank: 409
score: 99.22676418138587
patch: Iterator iter = v . get ( res . entries . size ( ) - 1 ) . iterator ( ) ;
rank: 409
score: 99.20603841145834
patch: Iterator iter = res . entries . entries . . iterator ( ) ;
rank: 409
score: 99.19173177083333
patch: iter = res . entries . entries . entries . iterator ( ) ;
rank: 409
score: 99.18412272135417
patch: int iter . iterator ( ) . iterator ( ) ;
rank: 409
score: 99.17458926930146
patch: if ( res != null ) { res . entries = res . entries ; }
rank: 410
score: 99.2656021118164
patch: final Iterator < res > iter = res . entries . iterator ( ) ;
rank: 410
score: 99.21612548828125
patch: Iterator iter = res . res . size ( ) ;
rank: 410
score: 99.21061197916667
patch: Iterator iter = ( > ) res . entries . iterator ( ) ;
rank: 410
score: 99.20511300223214
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . entries . iterator ( ) ) {
rank: 410
score: 99.19898986816406
patch: Iterator iter : res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 410
score: 99.18378044577206
patch: Iterator iter = res . entries ( $NUMBER$ , null ) . iterator ( ) ;
rank: 410
score: 99.17418619791667
patch: List < String > iter = res . entries . iterator ( ) ;
rank: 411
score: 99.22653065557066
patch: Iterator iter = this . res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 411
score: 99.21605631510417
patch: Iterator < byte > iter = res . entries . iterator ( ) ;
rank: 411
score: 99.20988246372768
patch: Iterator iter = new Iterator ( res . iterator ( ) ) ;
rank: 411
score: 99.20467336554276
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector >= iter = res . iterator ( ) ;
rank: 411
score: 99.19062151227679
patch: Iterator iter = res . entries . 1 . iterator ( ) ;
rank: 411
score: 99.18355066636029
patch: Iterator iter = res . entries ( ) ; int iter . iterator ( ) ;
rank: 411
score: 99.17380099826389
patch: Iterator iter = v . iterator ( ) ; while . has CaMeL Next ( ) )
rank: 412
score: 99.26447610294117
patch: Iterator iter = res . entries ( ) . = res . entries ( ) ;
rank: 412
score: 99.2265292080966
patch: Iterator iter = res . entries . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 412
score: 99.2155253092448
patch: Iterator iter = res . add . iterator ( ) ;
rank: 412
score: 99.2096923828125
patch: Iterator iter = res . entries . iterator ( ) ; ; else ;
rank: 412
score: 99.20437754755434
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) { res . set CaMeL Entry (
rank: 412
score: 99.19856531479779
patch: Iterator iter = res . get CaMeL Entry ( iter . advance ( ) ) ;
rank: 412
score: 99.19039481026786
patch: Iterator iter = res . entries . iterator ( - 1 ) ;
rank: 412
score: 99.17350046258224
patch: if ( res != null ) { res . entries = res . entries . entries ; }
rank: 413
score: 99.26434685202206
patch: Iterator < String > iter = res . entries = res . entries ( ) ;
rank: 413
score: 99.26115866268383
patch: try { iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 413
score: 99.2042705829327
patch: Iterator < iter = res . entries . iterator ( ) ;
rank: 413
score: 99.19035070082721
patch: Iterator iter = res . get CaMeL Dimension ( ) . add ( this ) ;
rank: 413
score: 99.18341064453125
patch: Iterator size = res . entries ( ) . iterator ( ) ;
rank: 413
score: 99.17308756510417
patch: res . entries = new Iterator [ res . size ( ) ] ;
rank: 414
score: 99.26388389185855
patch: Iterator < Iterator < ? > iter = res . entries ( ) . iterator ( ) ;
rank: 414
score: 99.22640327785327
patch: Iterator Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 414
score: 99.21407877604166
patch: int < int > res = res . entries . iterator ( ) ;
rank: 414
score: 99.20867919921875
patch: Iterator iter = res . entries . Override . iterator ( ) ;
rank: 414
score: 99.2041015625
patch: Enumeration < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries ( ) ;
rank: 414
score: 99.18327062270221
patch: Iterator iter = res . entries ( ) ; -- iter . iterator ( ) ;
rank: 414
score: 99.17302389705883
patch: if ( res != null ) . Iterator iter = res . iterator ( ) ;
rank: 415
score: 99.22625177556819
patch: Object iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 415
score: 99.20362389605978
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . res . entries . entries ( ) ;
rank: 415
score: 99.18919154575893
patch: for ( Iterator iter = this . entries . iterator ( ) ;
rank: 415
score: 99.18301391601562
patch: Iterator iter = value . entries . iterator ( ) ;
rank: 415
score: 99.172607421875
patch: if ( res != null ) res . ) res = res . entries . ;
rank: 416
score: 99.22616975203805
patch: Iterator iter = res . set . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 416
score: 99.20736929086539
patch: Iterator iter = res . entries . . iter ( ) ;
rank: 416
score: 99.19605255126953
patch: Iterator iter = this . get CaMeL Dimension ( ) . entries ( ) ;
rank: 416
score: 99.18820626395089
patch: Iterator iter = $STRING$ . entries ( ) . iterator ( ) ;
rank: 416
score: 99.18288010817308
patch: final Iterator iterator = res . entries . iterator ( ) ;
rank: 416
score: 99.17251586914062
patch: Iterator iter = v ; while ( iter . has CaMeL Next ( ) )
rank: 417
score: 99.26274557674633
patch: Iterator < String > iter = res . entries ( ) . size ( ) ;
rank: 417
score: 99.25818634033203
patch: Iterator iter = res == null . entries . entries . iterator ( ) ;
rank: 417
score: 99.22604237432066
patch: Iterator iter = this . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 417
score: 99.2033627158717
patch: Enumeration < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) ;
rank: 417
score: 99.19503784179688
patch: Iterator iter = res . get CaMeL Type ( ) . iter ( ) ;
rank: 417
score: 99.18812913161058
patch: List Iterator iter = res . entries . iterator ( ) ;
rank: 417
score: 99.18283260569854
patch: if ( res . entries == null ) res . entries = res . entries ;
rank: 418
score: 99.26255170036765
patch: Iterator < String > iter = res . entries ( ) . entries ( ) ;
rank: 418
score: 99.2580337524414
patch: Iterator iter = new Iterator ( res . get CaMeL Dimension ( ) ) ;
rank: 418
score: 99.20305524553571
patch: Iterator iter >> iter = res . entries . iterator ( ) ;
rank: 418
score: 99.18810221354167
patch: Iterator iter = res . . entries . entries . iterator ( ) ;
rank: 418
score: 99.18171243106617
patch: Iterator iter = null ; Iterator iter = res . entries . iterator ( ) ;
rank: 418
score: 99.17226736886161
patch: if ( res . size ( ) > 0 ) return res ;
rank: 419
score: 99.2578484030331
patch: synchronized ( iter ) { Iterator iter = res . entries . iterator ( ) ;
rank: 419
score: 99.20290208899456
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) . entries ( ) ;
rank: 419
score: 99.19422258649554
patch: Iterator iter = res = v . entries . iterator ( ) ;
rank: 420
score: 99.2616943359375
patch: Iterator < char > iter = res . entries . iterator ( ) ;
rank: 420
score: 99.2256192294034
patch: Iterator res = res . list . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 420
score: 99.212744140625
patch: int < String > iter = res . entries . iterator ( ) ;
rank: 420
score: 99.20268322172619
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . key . iterator ( ) ;
rank: 420
score: 99.18112417367789
patch: Iterator iter = res . entries ( null , null ) ;
rank: 420
score: 99.17034442608173
patch: Iterator iter = res . entries ( iterator ( ) ) ;
rank: 421
score: 99.26123046875
patch: Iterator < String > res = res . entries ( ) . iterator ( ) ;
rank: 421
score: 99.22509765625
patch: Iterator iter = res . map . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 421
score: 99.2125244140625
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) ; {
rank: 421
score: 99.1873779296875
patch: Iterator iter = res . entries ( ) . ( ) ;
rank: 421
score: 99.18111165364583
patch: Iterator end = res . entries . iterator ( ) ;
rank: 421
score: 99.17021833147321
patch: if ( res . is CaMeL Empty ( ) ) return res ;
rank: 422
score: 99.26083170572916
patch: final boolean iter = res . entries . iterator ( ) != null ;
rank: 422
score: 99.22472034801136
patch: Iterator iter = entries . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 422
score: 99.21249186197916
patch: Iterator < Object > iter = res . entries . size ( ) ;
rank: 422
score: 99.20551409040179
patch: Iterator iter . iterator = res . entries . iterator ( ) ;
rank: 422
score: 99.20204380580357
patch: Iterator iter = res . entries : res . iterator ( ) ;
rank: 422
score: 99.19342041015625
patch: Iterator iter = name . entries . iterator ( ) ;
rank: 422
score: 99.18089384191177
patch: Iterator iter = res . entries ( 1 , 1 ) . iterator ( ) ;
rank: 422
score: 99.16980658637152
patch: if ( res != null ) res . ) res . res = res . entries ;
rank: 423
score: 99.25688934326172
patch: res . set CaMeL Entry ( iter . has CaMeL Next ( ) ) ;
rank: 423
score: 99.22454833984375
patch: Iterator iterator = list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 423
score: 99.20149739583333
patch: this . res . set CaMeL Entry ( iter . key ( ) , iter . value ( ) /
rank: 423
score: 99.1927978515625
patch: for ( else { iter = res . entries . iterator ( ) ;
rank: 423
score: 99.1864990234375
patch: Iterator iter = , res = res . entries . iterator ( ) ;
rank: 423
score: 99.18075796274039
patch: Iterator < ] > iterator = res . entries ( ) ;
rank: 423
score: 99.16964561060855
patch: if ( res . entries == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 424
score: 99.26032571231617
patch: Iterator < Object > iter = res . get ( ) . iterator ( ) ;
rank: 424
score: 99.25620930989584
patch: Iterator iter = v . entries [ 0 ] . iterator ( ) ;
rank: 424
score: 99.22443181818181
patch: Iterator iter = res . list . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 424
score: 99.20126182154605
patch: Iterator < Iterator < Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 425
score: 99.26012465533088
patch: Iterator < Class > iter = res . entries ( ) . iter ( ) ;
rank: 425
score: 99.211669921875
patch: Iterator iter = res . add ( v ) . iterator ( ) ;
rank: 425
score: 99.20466831752232
patch: / iter Iterator iter = res . entries . iterator ( ) ;
rank: 425
score: 99.2010498046875
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) ; ) {
rank: 425
score: 99.19233921595982
patch: Iterator iter = name . entries ( ) . iterator ( ) ;
rank: 425
score: 99.180224609375
patch: List iter = res . entries ( ) ;
rank: 425
score: 99.16863654641544
patch: if ( res != null && res . get CaMeL Dimension ( ) != null )
rank: 426
score: 99.2554931640625
patch: Iterator iter = res . entries [ 0 0 ] . iterator ( ) ;
rank: 426
score: 99.22392134232955
patch: System . arraycopy ( res , 0 , res . entries , 0 , res . entries . length ) ;
rank: 426
score: 99.20466752485795
patch: Iterator iter = res . get ( 0 ) ;
rank: 426
score: 99.20072021484376
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( )
rank: 426
score: 99.185546875
patch: Iterator iter = res . compare ( v . get CaMeL Dimension ( ) ) ;
rank: 426
score: 99.18022017045455
patch: final int iter = res . entries ( ) ;
rank: 427
score: 99.25986328125
patch: Iterator < Exception > iter = res . entries . iterator ( ) ;
rank: 427
score: 99.22379557291667
patch: Iterator iter = res . entries . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) ) {
rank: 427
score: 99.21055250901442
patch: Iterator iter = ! res . has CaMeL Next ( ) ;
rank: 427
score: 99.20034950657895
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries ( ) ;
rank: 427
score: 99.18480428059895
patch: int size = res . get CaMeL Dimension ( ) ;
rank: 427
score: 99.1796515969669
patch: Iterator < ] > iterator = res . entries ( ) . iterator ( ) ;
rank: 427
score: 99.1672030362216
patch: Iterator iter = res ) . iterator ( ) ;
rank: 428
score: 99.25822448730469
patch: Iterator < int * : res . entries ( ) . iterator ( ) ;
rank: 428
score: 99.2540054321289
patch: Iterator iter = res != null + v . get CaMeL Dimension ( ) ;
rank: 428
score: 99.223388671875
patch: Iterator entries = res . entries . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 428
score: 99.21048990885417
patch: Iterator iter = res . entries . iterator ( ) ; for ( Iterator
rank: 428
score: 99.20400565011161
patch: Iterator iter = res . get = res . entries ( ) ;
rank: 428
score: 99.2002286044034
patch: Iterator iter = res . entries . to CaMeL Array ( ) . entries ( ) . iterator ( ) ;
rank: 429
score: 99.25369027944711
patch: Iterator iter = res [ $NUMBER$ ] . iterator ( ) ;
rank: 429
score: 99.2232177734375
patch: Iterator iter = res . remove ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 429
score: 99.20018768310547
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this ) ;
rank: 429
score: 99.19153703962054
patch: Iterator iter = res . name ( ) . iterator ( ) ;
rank: 429
score: 99.18407389322917
patch: Iterator iter = res . substring ( 1 ) . iterator ( ) ;
rank: 429
score: 99.17932846966912
patch: Iterator < String < int > iter = res . entries . iterator ( ) ;
rank: 429
score: 99.16703033447266
patch: res . res = res ; Iterator iter = v . entries ( ) ;
rank: 430
score: 99.2231677827381
patch: list = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 430
score: 99.20012350643383
patch: Iterator < Real CaMeL Vector > iter = this . res . iterator ( ) ;
rank: 430
score: 99.19116928998162
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( 1 ) ;
rank: 430
score: 99.18401336669922
patch: Iterator iter = res . entries . index CaMeL Of ( - $NUMBER$ ) ;
rank: 430
score: 99.1666488647461
patch: Iterator iter = res . entries ( ) . iterator ( ) ; 0 ;
rank: 431
score: 99.25275530133929
patch: Iterator iter = res . entries . iterator ( ) ; else {
rank: 431
score: 99.22314453125
patch: Iterator iter = v . get ( res ) . iterator ( ) ;
rank: 431
score: 99.18940286075367
patch: Iterator iter = res != new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 431
score: 99.17877197265625
patch: Iterator iter = res . entries ( ) ; trim ( ) ;
rank: 431
score: 99.16653442382812
patch: res . entries [ res . entries . length - 1 ] = res ;
rank: 432
score: 99.2568130493164
patch: Iterator iter = res . entries ( ) . iterator ( ) - 0 ;
rank: 432
score: 99.25252532958984
patch: Iterator iter = res . entries ( ) . iterator ( ) ; System .
rank: 432
score: 99.20230102539062
patch: for ( Iterator iter = res . iterator ( ) ;
rank: 432
score: 99.19907924107143
patch: Iterator iter ? res . entries . entries . iterator ( ) . has CaMeL Next ( ) ; )
rank: 432
score: 99.17835344587054
patch: Iterator iter = res . entries . value . iterator ( ) ;
rank: 432
score: 99.16651262555804
patch: byte [ ] res = res . get CaMeL Bytes ( ) ;
rank: 433
score: 99.25677490234375
patch: Iterator iter = copy . entries ( ) . iterator ( ) ;
rank: 433
score: 99.22285600142045
patch: Iterator iter = res . matches . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 433
score: 99.2090555826823
patch: Vector res = res . entries . iterator ( ) ;
rank: 433
score: 99.20200892857143
patch: Iterator . Iterator iter = res . entries . iterator ( ) ;
rank: 433
score: 99.19893022017045
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) . advance ( ) ;
rank: 433
score: 99.1781494140625
patch: Iterator iter = res . entries ( ) ; clone ( res ) ;
rank: 433
score: 99.16620232077206
patch: synchronized ( res ) { Iterator iter = v . entries . iterator ( ) ;
rank: 434
score: 99.2521110983456
patch: Iterator iter = v [ 0 ] . entries ( ) . iterator ( ) ;
rank: 434
score: 99.22215687144886
patch: Iterator iter = list . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 434
score: 99.2090087890625
patch: Iterator < Real CaMeL Vector > iter = v . size ( ) ;
rank: 434
score: 99.20139973958334
patch: Iterator iter iterator = res . entries ( ) . iterator ( ) ;
rank: 434
score: 99.17694450827206
patch: Iterator iter = res . entries ( ) ; return res . entries ( ) ;
rank: 434
score: 99.16556222098214
patch: Object [ ] res = res . to CaMeL Array ( ) ;
rank: 435
score: 99.20889718191964
patch: Iterator iter = res . read ( ) . entries ( ) ;
rank: 435
score: 99.20062662760417
patch: Iterator iter = iterator ( res . entries . iterator ( ) ) ;
rank: 435
score: 99.17650428185097
patch: int < ] > entries = res . entries ( ) ;
rank: 435
score: 99.16531192555146
patch: if ( res != null ) { Iterator iter = res . entries ( ) ;
rank: 436
score: 99.25618119673295
patch: final Iterator iter = res . size ( ) ;
rank: 436
score: 99.2517951516544
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iter ( this ) ;
rank: 436
score: 99.22186834161931
patch: Iterator iter = res . list . iterator ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 436
score: 99.20823160807292
patch: Object res = res . get CaMeL Dimension ( ) ;
rank: 436
score: 99.20009202223558
patch: Iterator < Entry > iter = res . entries ( ) ;
rank: 436
score: 99.19854445684524
patch: for ( iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 436
score: 99.18036651611328
patch: Iterator iter = res . next ( ) . entries . entries ( ) ;
rank: 436
score: 99.17626953125
patch: synchronized ( entries ) { Iterator iter = res . entries . iterator ( ) ;
rank: 436
score: 99.16473067434211
patch: iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 437
score: 99.25585123697917
patch: final Iterator iter = entries . entries ( ) . iterator ( ) ;
rank: 437
score: 99.25170180376838
patch: Iterator iter = res . entries ( ) . entries ( ) . iterator ( )
rank: 437
score: 99.2212626139323
patch: Iterator iterator = res . list . iterator ( ) ;
rank: 437
score: 99.20668131510416
patch: int < int > res = res . get CaMeL Dimension ( ) ;
rank: 437
score: 99.1985095796131
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . entries ( ) . iterator ( ) ;
rank: 437
score: 99.18655395507812
patch: Iterator entries = v . entries . iterator ( ) ;
rank: 437
score: 99.180078125
patch: Iterator iter = res . add ( this ) . iterator ( ) ;
rank: 437
score: 99.1645866842831
patch: Iterator iter = res [ res . size ( ) ] . iterator ( ) ;
rank: 438
score: 99.25580596923828
patch: Iterator iter = res . get . get ( ) . entries ( ) ;
rank: 438
score: 99.25119198069854
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries ( this ) ;
rank: 438
score: 99.22115928248355
patch: Iterator iter = res . get ; while ( iter . has CaMeL Next ( ) ) {
rank: 438
score: 99.19845581054688
patch: Iterator iter = res . entries . entries . iterator ( ) ; iterator . advance ( ) ;
rank: 438
score: 99.17531040736607
patch: Iterator iter = res . value ( ) . iterator ( ) ;
rank: 438
score: 99.16441127232143
patch: if ( v . is CaMeL Empty ( ) ) return res ;
rank: 439
score: 99.25546875
patch: Iterator < String > iter = res . name . iterator ( ) ;
rank: 439
score: 99.25114440917969
patch: Iterator iter = v . entries ( ) != null . iterator ( ) ;
rank: 439
score: 99.22086958451705
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 439
score: 99.19952862079327
patch: res . iterator = res . entries . iterator ( ) ;
rank: 439
score: 99.17530168805804
patch: Iterator iter = res . reverse ( ) . iterator ( ) ;
rank: 439
score: 99.16410609654018
patch: if ( res != null ) res . entries = new ) ;
rank: 440
score: 99.2547607421875
patch: this . entries = res . entries . iterator ( ) ;
rank: 440
score: 99.22056070963542
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) continue ;
rank: 440
score: 99.20645577566964
patch: iter . advance ( v . get CaMeL Dimension ( ) ) ;
rank: 440
score: 99.19837861902573
patch: Iterator < String > iter = this . entries . entries . iterator ( ) ;
rank: 440
score: 99.18498011997768
patch: Iterator iter = res . entries . iterator ( ) ; / *
rank: 440
score: 99.16398790147569
patch: Iterator iter = res . entries != null ? res . iterator ( ) : null ;
rank: 441
score: 99.22049713134766
patch: Iterator iter = new Iterator ( v . entries . iterator ( ) ) ;
rank: 441
score: 99.19925362723214
patch: / / Iterator iter = res . entries . iterator ( ) ;
rank: 441
score: 99.1982952615489
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( $STRING$ ) ;
rank: 441
score: 99.18430582682292
patch: Iterator iter |= res . entries . iterator ( ) ;
rank: 441
score: 99.17752511160714
patch: Iterator iter = res . add . entries . iterator ( ) ;
rank: 441
score: 99.17431640625
patch: Iterator iter = res . entries ( $NUMBER$ ) . iter ( ) ;
rank: 441
score: 99.16389545641448
patch: Iterator iter = res . iterator ( ) ; int size = res . size ( ) ;
rank: 442
score: 99.25283633961396
patch: Iterator < Number > iter = res . entries ( ) . iterator ( ) ;
rank: 442
score: 99.2486572265625
patch: Iterator ( res . get CaMeL Dimension ( ) ) . iterator ( ) ;
rank: 442
score: 99.2055892944336
patch: Iterator iter = res . get CaMeL Dimension ( ) . ebe CaMeL Divide ;
rank: 442
score: 99.19911702473958
patch: Iterator iter = res . next . iterator ( ) ;
rank: 442
score: 99.18363734654018
patch: Iterator iter = res . min ( ) . iterator ( ) ;
rank: 442
score: 99.17701721191406
patch: Iterator iter = res . get CaMeL Name ( ) . next ( ) ;
rank: 442
score: 99.17425896139706
patch: Iterator iter = res . entries . to CaMeL Array ( res . entries ) ;
rank: 443
score: 99.20484212239583
patch: Iterator iter = res . add ( res ) . iterator ( ) ;
rank: 443
score: 99.19819568452381
patch: Iterator < Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 443
score: 99.18279622395833
patch: Iterator iter = res . entries . entries . iterator ( ) 1 ;
rank: 443
score: 99.17662048339844
patch: Iterator iter = res . entries . entries . entries . entries ( ) ;
rank: 443
score: 99.17410098805146
patch: synchronized ( res ) { Iterator iter = res . entries . entries ( ) ;
rank: 444
score: 99.24782889229911
patch: Iterator iter = data . entries ( ) . iterator ( ) ;
rank: 444
score: 99.21954956054688
patch: Iterator iter = v . clone ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 444
score: 99.197314453125
patch: Iterator < Entry > iter = res . entries . entries ( ) ;
rank: 444
score: 99.18216959635417
patch: Iterator iter = res . is CaMeL Empty ( ) ;
rank: 444
score: 99.16278545673077
patch: Iterator iter = res . iterator . iterator ( ) ) ;
rank: 445
score: 99.25229061351104
patch: Iterator < Character > iter = res . entries ( ) . iterator ( ) ;
rank: 445
score: 99.24705505371094
patch: Iterator iter = v . entries . iterator ( ) ; for ( for (
rank: 445
score: 99.21917169744319
patch: Iterator iter = list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 445
score: 99.203125
patch: final Iterator iter = res . entries . iterator ( ) ; ;
rank: 445
score: 99.19789817116477
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) . entries . iterator ( ) ;
rank: 445
score: 99.19672037760417
patch: Iterator iter = res . entries . iterator ( ) ; iterator * ;
rank: 445
score: 99.18211454503677
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) != null
rank: 445
score: 99.1759033203125
patch: Iterator iter = res . v . entries ( ) . entries ( ) ;
rank: 445
score: 99.17349243164062
patch: Iterator list = res . entries . iterator ( ) ;
rank: 445
score: 99.16230604383681
patch: if ( res . res != null ) res . res = res . entries . ;
rank: 446
score: 99.2466812133789
patch: try { res . set CaMeL Entry ( iter . advance ( ) ) ;
rank: 446
score: 99.2189229329427
patch: System . arraycopy ( res . entries , 0 , res . entries , 0 , v . entries . length ) ;
rank: 446
score: 99.19783158735795
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . index CaMeL Of ( this ) ;
rank: 446
score: 99.17586517333984
patch: Iterator iter = res . get CaMeL Index ( ) . entries ( ) ;
rank: 446
score: 99.1731689453125
patch: Iterator iter = res . entries ( $NUMBER$ ) . close ( ) ;
rank: 446
score: 99.16169084821429
patch: try { Iterator iter = v . entries . iterator ( ) ;
rank: 447
score: 99.24655151367188
patch: if ( iter . has CaMeL Next ( ) ) { return res ; }
rank: 447
score: 99.21852805397727
patch: Iterator map = res . entries . iterator ( ) ; while ( map . has CaMeL Next ( ) )
rank: 447
score: 99.20266723632812
patch: Iterator iter = res . true . iterator ( ) ;
rank: 447
score: 99.19774576822917
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res .
rank: 447
score: 99.195263671875
patch: final Iterator iter = res . entries . iter . iterator ( ) ;
rank: 447
score: 99.17481186810662
patch: Iterator iter = res . entries . entries . index CaMeL Of ( this ) ;
rank: 447
score: 99.17310442243304
patch: res . load ( res . get CaMeL Name ( ) ) ;
rank: 447
score: 99.16157749720982
patch: Iterator iter = res . entries ( . size ( ) ) ;
rank: 448
score: 99.2510235126202
patch: super . entries = res . entries . iterator ( ) ;
rank: 448
score: 99.24629429408482
patch: Iterator iter = res . entries != null . iterator ( ) ;
rank: 448
score: 99.21720747514205
patch: Iterator iter = v . split . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 448
score: 99.20172119140625
patch: Iterator iter = res . read . entries . iterator ( ) ;
rank: 448
score: 99.19755626860119
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) this . res . iterator ( ) ;
rank: 448
score: 99.19363606770834
patch: Iterator iter = res . entries . iterator ( ) ; return iter ;
rank: 448
score: 99.18181501116071
patch: Iterator iter = this . this . entries . iterator ( ) ;
rank: 448
score: 99.16102183948864
patch: final Iterator iter = v . iterator ( ) ;
rank: 449
score: 99.25100368923611
patch: final Iterator < T > iter = res . entries ( ) . iterator ( ) ;
rank: 449
score: 99.21715198863636
patch: iter = res . entries . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 449
score: 99.20154622395833
patch: Iterator iter = res . this ) . entries . iterator ( ) ;
rank: 449
score: 99.193603515625
patch: Iterator iter = res . entries . iterator ( ) ; / / ;
rank: 449
score: 99.18126569475446
patch: Iterator iter = res . entries . iterator ( ) ; * /
rank: 449
score: 99.17231968470982
patch: Iterator iter = res . entries ( ) . delete ( ) ;
rank: 449
score: 99.16085379464286
patch: if ( v . size ( ) == 0 ) return res ;
rank: 450
score: 99.21707153320312
patch: Iterator iter = res . get CaMeL Packages ( ) . iterator ( ) ;
rank: 450
score: 99.20110212053571
patch: Iterator iter = res . round . entries . iterator ( ) ;
rank: 450
score: 99.19699994255515
patch: Iterator < Real CaMeL Vector > iter : res . entries . iterator ( ) ;
rank: 450
score: 99.17368977864584
patch: Iterator iter = res . entries entries . entries . iterator ( ) ;
rank: 450
score: 99.17229352678571
patch: Iterator iter = res . delete ( ) . iterator ( ) ;
rank: 450
score: 99.16017503004808
patch: Iterator iter = res . entries ( ) . iterator ( ;
rank: 451
score: 99.24545522836539
patch: Iterator iter = res . entries ( ) . iterator ( )
rank: 451
score: 99.2167080965909
patch: Iterator iter = res . copy . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 451
score: 99.20086669921875
patch: Set iter = res . entries . iterator ( ) ;
rank: 451
score: 99.19551013764881
patch: Iterator < Real CaMeL Vector > iter = res . get CaMeL Dimension ( ) . iterator ( ) ;
rank: 451
score: 99.19281475360577
patch: Iterator iter = res . entries . iterator ( ) ; final
rank: 451
score: 99.17368977864584
patch: for ( ( Iterator iter = res . entries . iterator ( ) ;
rank: 451
score: 99.17212931315105
patch: Iterator next = res . entries . iterator ( ) ;
rank: 451
score: 99.16007272820724
patch: if ( v != null ) res . res = res . entries . iterator ( ) ;
rank: 452
score: 99.25019182477679
patch: final Iterator < ? > iter = res . entries ( ) ;
rank: 452
score: 99.20001775568181
patch: Iterator iter = entries . iterator ( ) ; }
rank: 452
score: 99.17171223958333
patch: Iterator [ ] iter = res . entries ( ) ;
rank: 452
score: 99.15952711838942
patch: if ( res . entries . size ( ) > 0 )
rank: 453
score: 99.2498550415039
patch: final Iterator iter = res . entries ( ) . iterator ( ) ) ;
rank: 453
score: 99.19520970394737
patch: Iterator iter . advance ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 453
score: 99.19237342247597
patch: Iterator iter = res . entries . iterator ( ) ; public
rank: 453
score: 99.17919203814338
patch: Iterator iter = get CaMeL Dimension ( v . get CaMeL Dimension ( ) ) ;
rank: 453
score: 99.15938626802884
patch: Object res = res . entries . get ( res ) ;
rank: 454
score: 99.24388212316177
patch: synchronized ( res ) { res . set CaMeL Entry ( iter . key ) ;
rank: 454
score: 99.21619669596355
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . res . has CaMeL Next ( ) )
rank: 454
score: 99.19504220145089
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res )
rank: 454
score: 99.19227701822916
patch: Iterator iter = res . entries . iter ( ) ; iter ++ ;
rank: 454
score: 99.17913818359375
patch: int iter = res . get CaMeL Dimension ( ) . length ;
rank: 454
score: 99.172216796875
patch: Iterator iter = res . entries . entries ) . iterator ( ) ;
rank: 454
score: 99.17136793870192
patch: this . entries . iterator ( ) . iterator ( ) ;
rank: 454
score: 99.15926106770833
patch: res . entries = new Iterator [ res . entries . size ( ) ] ; ;
rank: 455
score: 99.24372100830078
patch: res . set CaMeL Entry ( v . get CaMeL Dimension ( ) ) ;
rank: 455
score: 99.21617635091145
patch: Iterator iter = data . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 455
score: 99.19888305664062
patch: Iterator res = res . entries . size ( ) ;
rank: 455
score: 99.19493272569444
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries )
rank: 455
score: 99.17209879557292
patch: int size = v . get CaMeL Dimension ( ) ;
rank: 455
score: 99.17122105189732
patch: Iterator iter = res . entries ( . entries ( ) ) ;
rank: 455
score: 99.15911865234375
patch: Iterator iter = res . iterator . next ( ) ;
rank: 456
score: 99.24819510323661
patch: Iterator < int * : res . entries . iterator ( ) ;
rank: 456
score: 99.24348449707031
patch: v . set CaMeL Entry ( v . get CaMeL Entry ( ) ) ;
rank: 456
score: 99.21597726004464
patch: Iterator iter = this . res . list . iterator ( ) ;
rank: 456
score: 99.19783528645833
patch: int < String > res = res . get CaMeL Dimension ( ) ;
rank: 456
score: 99.19481482872597
patch: Iterator < iter : res . entries . iterator ( ) ;
rank: 456
score: 99.19150390625
patch: Iterator iter = res . entries . iterator ( ) ; break ; }
rank: 456
score: 99.17118566176471
patch: Iterator iter = res . entries ( ) . replace CaMeL All ( $STRING$ ) ;
rank: 456
score: 99.15908974095395
patch: if ( res . entries == null || res . entries . size ( ) == 0 )
rank: 457
score: 99.24343436104911
patch: Iterator iter = res . entries = v . iterator ( ) ;
rank: 457
score: 99.21533203125
patch: Vector iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 457
score: 99.19779459635417
patch: while ( v . has CaMeL Next ( ) ) {
rank: 457
score: 99.19150390625
patch: Iterator iter = res . entries . iterator ( ) ; for ( {
rank: 457
score: 99.17832728794643
patch: Iterator iter = res . entries . iterator ( ) / 1 ;
rank: 457
score: 99.15888323102679
patch: Iterator iter = res . iterator ( ) ; synchronized ( res )
rank: 458
score: 99.243408203125
patch: Iterator iter = iter . entries ( ) ;
rank: 458
score: 99.19748360770089
patch: Iterator iter = v . entries . iterator ( ) ; ) {
rank: 458
score: 99.19039212740384
patch: Iterator iter = ( Iterator ) res . next ( ) ;
rank: 458
score: 99.17164103190105
patch: int value = v . get CaMeL Dimension ( ) ;
rank: 458
score: 99.17071533203125
patch: Iterator iter = res . entries ( ) . max ( ) ;
rank: 458
score: 99.15879603794643
patch: Iterator iter = res . entries ( ) ; while ( ; )
rank: 459
score: 99.24754503038194
patch: final Iterator < Integer > iter = res . entries ( ) . iterator ( ) ;
rank: 459
score: 99.24276297433036
patch: Iterator iter = res . entries . get . iterator ( ) ;
rank: 459
score: 99.21531767003677
patch: Iterator iter = res . get . entries ( ) . iterator ( ) ; ;
rank: 459
score: 99.19452981387867
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : this . res ) {
rank: 459
score: 99.19035993303571
patch: try ; Iterator iter = res . entries . iterator ( ) ;
rank: 459
score: 99.17066192626953
patch: if ( res . entries . size ( ) != 0 ) return res ;
rank: 459
score: 99.15870576746323
patch: if ( res != null ) res . iterator ( ) . next ( ) ;
rank: 460
score: 99.2475341796875
patch: final Iterator res = res . entries ( ) . iterator ( ) ;
rank: 460
score: 99.24253336588542
patch: Iterator iter = v . entries . iter ( ) ;
rank: 460
score: 99.21525435014205
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) continue ;
rank: 460
score: 99.19444691051136
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) res . set CaMeL Entry ( ) ;
rank: 460
score: 99.19387381417411
patch: Iterator iter = res . check CaMeL Vector CaMeL Dimensions ( ) ;
rank: 460
score: 99.19034830729167
patch: Iterator iter = res . entries . = res . next ( ) ;
rank: 460
score: 99.17063275505515
patch: Iterator < / * ] > iter = res . entries . iterator ( ) ;
rank: 460
score: 99.15849752987133
patch: Iterator iter = res . iterator ( ) ; boolean has CaMeL Next = false ;
rank: 461
score: 99.24181365966797
patch: Iterator iter = this . res . entries . iterator ( ) ; for (
rank: 461
score: 99.2152099609375
patch: Iterator iter = 0 ; while ( iter . has CaMeL Next ( ) ) {
rank: 461
score: 99.19407894736842
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries ( ) ;
rank: 461
score: 99.19382887620192
patch: Iterator iter = res . ( ) . entries ( ) ;
rank: 461
score: 99.1763671875
patch: iter = res . get CaMeL Dimension ( ) . size ( ) ;
rank: 461
score: 99.156494140625
patch: if ( res != null ) { Iterator iter = v . iterator ( ) ;
rank: 462
score: 99.241357421875
patch: for ( Real CaMeL Vector res : res . entries ( ) ) {
rank: 462
score: 99.21497163318452
patch: Iterator iter = res . iterator ( ) ; while ( ; iter . has CaMeL Next ( ) )
rank: 462
score: 99.1938232421875
patch: Iterator iter = res . entries . has CaMeL Next ( ) ; {
rank: 462
score: 99.1938143643466
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > entries ;
rank: 462
score: 99.18941556490384
patch: Iterator iter = res . entries ( ) ; = null ;
rank: 462
score: 99.17629568917411
patch: Iterator iter = res . min . entries . iterator ( ) ;
rank: 462
score: 99.17053985595703
patch: Iterator iter = res . entries ( ) . iterator ( ) ; try {
rank: 462
score: 99.16959635416667
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 462
score: 99.155419921875
patch: Collection res = res . entries ( ) ;
rank: 463
score: 99.2471564797794
patch: Iterator iter = res . get . entries ( ) . iterator ( ) ; }
rank: 463
score: 99.21491033380681
patch: Collection res = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 463
score: 99.19376918247768
patch: Iterator iter = v . this . entries . iterator ( ) ;
rank: 463
score: 99.19337047230114
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > iter =
rank: 463
score: 99.18929850260416
patch: Iterator iter = res . entries . iterator ( ) ; / / /
rank: 463
score: 99.17603556315105
patch: Iterator iter = iter . entries . iterator ( ) ;
rank: 463
score: 99.17012241908482
patch: Iterator iter = res . get CaMeL Name . iterator ( ) ;
rank: 463
score: 99.15512084960938
patch: Iterator iter = res . iterator ( ) ; null ;
rank: 464
score: 99.21472749255952
patch: Iterator iter = res . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 464
score: 99.19301970108695
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iterator = res . entries ( ) . iterator ( ) ;
rank: 464
score: 99.189208984375
patch: Iterator iter = res . entries . matches . iterator ( ) ;
rank: 464
score: 99.16874425551471
patch: Iterator iter = res . entries . to CaMeL Array ( ) . ( ) ;
rank: 465
score: 99.24674224853516
patch: Iterator iter = res . entries ( ) . iterator ( ) - $NUMBER$ ;
rank: 465
score: 99.21425559303977
patch: Iterator map = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 465
score: 99.19282801011029
patch: Iterator < Real CaMeL Vector > iter = res . list . iterator ( ) ;
rank: 465
score: 99.18827311197917
patch: Iterator iter ; Iterator iter = res . entries . iter ( ) ;
rank: 465
score: 99.16990033318015
patch: Iterator < ] > iter = res . entries ( ) . entries ( ) ;
rank: 465
score: 99.16761881510416
patch: Iterator iter = res . add ( this ) . size ( ) ;
rank: 465
score: 99.15468186598558
patch: if ( v != null ) res . res = res ;
rank: 466
score: 99.23948759191177
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; *
rank: 466
score: 99.21327209472656
patch: Iterator iter = res . list . list ( ) . iterator ( ) ;
rank: 466
score: 99.1927849264706
patch: Iterator < Class > iter = res . entries . entries . iterator ( ) ;
rank: 466
score: 99.1864501953125
patch: Iterator < ? > iter = res . entries . entries ( ) ;
rank: 466
score: 99.17548479352679
patch: Iterator iter = res . entries . iterator ( ) * $NUMBER$ ;
rank: 466
score: 99.16975911458333
patch: synchronized ( res ) { Iterator iter = entries . iterator ( ) ;
rank: 466
score: 99.16667175292969
patch: Iterator iter = res . get CaMeL Type ( ) . next ( ) ;
rank: 467
score: 99.24636840820312
patch: Iterator iter = res . get CaMeL V ( ) . entries ( ) ;
rank: 467
score: 99.2132235440341
patch: Iterator iter = v . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 467
score: 99.19272332442434
patch: Iterator < Real CaMeL Vector == null ? null : res . entries . iterator ( ) ;
rank: 467
score: 99.19109700520833
patch: Iterator iter = res . ( ) . entries . size ( ) ;
rank: 467
score: 99.17475128173828
patch: Iterator iter = res . iterator ( ) : res . entries ( ) ;
rank: 467
score: 99.16958383413461
patch: Iterator < int > iter = res . entries ( ) ;
rank: 467
score: 99.15400390625
patch: Iterator < ? extends Object > iter = res . iterator ( ) ;
rank: 468
score: 99.2462646484375
patch: Iterator < Class > iterator = res . entries . iterator ( ) ;
rank: 468
score: 99.21302286783855
patch: Iterator iter = res . split . iterator ( ) ;
rank: 468
score: 99.1925936612216
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( 0 ) ;
rank: 468
score: 99.17374965122768
patch: Iterator iter = res . entries . iterator ( ) : res ;
rank: 468
score: 99.16949462890625
patch: / * ] iter = res . entries . iterator ( ) ;
rank: 468
score: 99.15398491753473
patch: if ( res != null ) Iterator iter = res . iterator . iterator ( ) ;
rank: 469
score: 99.24563759251645
patch: final boolean iter = res . entries . iterator ( ) . iterator ( ) != null ;
rank: 469
score: 99.23732503255208
patch: Vector iter = res . get CaMeL Dimension ( ) ;
rank: 469
score: 99.21281995271382
patch: Iterator iter = res . list ; while ( iter . has CaMeL Next ( ) ) {
rank: 469
score: 99.19251069568452
patch: Vector res = ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . get CaMeL Dimension ( ) ;
rank: 469
score: 99.19085286458333
patch: Iterator iter = res . entries . iterator ( ) ; return null ;
rank: 469
score: 99.18442007211539
patch: Iterator iter ; Iterator iter = res . entries ( ) ;
rank: 469
score: 99.17316545758929
patch: Iterator iter = res . entries . iterator ( ) - $NUMBER$ ;
rank: 469
score: 99.16912482766544
patch: Iterator < / >> iter = res . entries ( ) . iterator ( ) ;
rank: 469
score: 99.15386493389423
patch: Iterator < ) > iter = res . iterator ( ) ;
rank: 470
score: 99.23696899414062
patch: Vector iter = v . get CaMeL Dimension ( ) . entries ( ) ;
rank: 470
score: 99.19231305803571
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries . size ( ) ;
rank: 470
score: 99.19057395241477
patch: Iterator iter = res . size ( ) ; ;
rank: 470
score: 99.1839599609375
patch: Iterator iter . iterator ( ) ;
rank: 470
score: 99.16900634765625
patch: Iterator iter = res . get CaMeL Fields ( ) . entries ( ) ;
rank: 470
score: 99.1653564453125
patch: Iterator iter = res . entries [ 0 ] . size ( ) ;
rank: 471
score: 99.24501255580357
patch: boolean iter = res . entries . iterator ( ) != null ;
rank: 471
score: 99.1922607421875
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector . Iterator ) ;
rank: 471
score: 99.19029822716347
patch: entries . iterator ( ) . has CaMeL Next ( ) ;
rank: 471
score: 99.18258463541666
patch: Iterator iter = res . read ( res . entries ( ) ) ;
rank: 471
score: 99.17227172851562
patch: Iterator iter = res . entries . iterator ( ) : res . entries ;
rank: 471
score: 99.16893920898437
patch: Collection iter = res . entries ( ) ;
rank: 471
score: 99.153515625
patch: if ( ! res . is CaMeL Empty ( ) ) return res ;
rank: 472
score: 99.23652648925781
patch: Vector entries = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 472
score: 99.2115837545956
patch: synchronized ( res ) { iter = res . entries . size ( ) ; }
rank: 472
score: 99.19218113111413
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( 0 ) ;
rank: 472
score: 99.18877301897321
patch: Iterator iter = res . read ( ) . size ( ) ;
rank: 472
score: 99.18258463541666
patch: Iterator iter = res . entries ( ) ; Iterator iter = 0 ;
rank: 472
score: 99.1681620279948
patch: int entries = res . entries . iterator ( ) ;
rank: 472
score: 99.1534423828125
patch: if ( v . entries != null && v . entries . size ( ) > 0 )
rank: 473
score: 99.21146065848214
patch: Iterator iter = res . get ( res . size ( ) - 1 ) . iterator ( ) ;
rank: 473
score: 99.18735177176339
patch: Iterator iter = res . copy ( ) . entries ( ) ;
rank: 473
score: 99.18245152064732
patch: Iterator iter = res . entries . end . iterator ( ) ;
rank: 473
score: 99.16734900841347
patch: this . res . iterator ( ) . iterator ( ) ;
rank: 473
score: 99.16365559895833
patch: for ( Iterator Iterator iter = res . entries . iterator ( ) ;
rank: 473
score: 99.15325372869319
patch: res . entries = res . entries . entries ;
rank: 474
score: 99.23615264892578
patch: int iterator = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 474
score: 99.21119326636905
patch: Iterator iter = res . size ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 474
score: 99.18643624441964
patch: Iterator iter = res . close ( ) . iterator ( ) ;
rank: 474
score: 99.1822021484375
patch: Iterator iter = res . entries ( ) ; . iterator ( ) ;
rank: 474
score: 99.17099434988839
patch: Iterator iter = data . entries . entries . iterator ( ) ;
rank: 474
score: 99.15305739182692
patch: Iterator < Integer > iter = v . iterator ( ) ;
rank: 475
score: 99.24410574776786
patch: Iterator iter = $NUMBER$ * res . entries . iterator ( ) ;
rank: 475
score: 99.23587472098214
patch: Iterator iter = res . entries . iterator ( ) ; * *
rank: 475
score: 99.21101648667279
patch: Iterator iter = res . entries [ res . entries . size ( ) ] ;
rank: 475
score: 99.19202378216912
patch: Iterator < Long > iter = res . entries . entries . iterator ( ) ;
rank: 475
score: 99.16710316051136
patch: Iterator iter = res . entries ( ) ; else
rank: 475
score: 99.16305977957589
patch: do { Iterator iter = res . entries . iterator ( ) ;
rank: 476
score: 99.24391575863487
patch: Iterator < Iterator < String > iter = res . entries ( ) . iterator ( ) ;
rank: 476
score: 99.210400390625
patch: f = res . entries . iterator ( ) . next ( ) ;
rank: 476
score: 99.19184313322368
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) .
rank: 476
score: 99.18091634114583
patch: Iterator iter = res . entries . iterator ( ) ; ) / *
rank: 476
score: 99.16891659007354
patch: Iterator iter = res . entries . iterator ( ) ; synchronized ( res ) {
rank: 476
score: 99.16692708333333
patch: res . entries = res . entries ; entries = res . entries ;
rank: 476
score: 99.15195599724265
patch: if ( res != null ) res . entries = res . entries ( ) ;
rank: 477
score: 99.24383903952206
patch: Iterator < Class > iterator = res . entries ( ) . iterator ( ) ;
rank: 477
score: 99.23530129825367
patch: Iterator iter = res . entries ( ) [ $NUMBER$ ] . iterator ( ) ;
rank: 477
score: 99.21025390625
patch: synchronized ( res ) { res . entries = res . entries ; }
rank: 477
score: 99.19177856445313
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . entries . iterator ( ) )
rank: 477
score: 99.18494524274554
patch: int iter = res . get CaMeL Dimension ( ) . value ;
rank: 477
score: 99.16856166294643
patch: Iterator iter = res . entries > entries . iterator ( ) ;
rank: 477
score: 99.16685575597427
patch: Iterator < Float > iter = res . entries ( ) . iterator ( ) ;
rank: 477
score: 99.16176932198661
patch: Iterator iter = res . intern ( ) . iterator ( ) ;
rank: 477
score: 99.15167557565789
patch: if ( v != null ) { Iterator iter = res . entries . iterator ( ) ;
rank: 478
score: 99.24380493164062
patch: Iterator iter = res . get CaMeL Priority ( ) . entries ( ) ;
rank: 478
score: 99.210205078125
patch: Iterator iter = list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 478
score: 99.19153413318452
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries ( ) .
rank: 478
score: 99.1844991048177
patch: Iterator iter = res . get CaMeL Id ( ) ;
rank: 478
score: 99.17993977864583
patch: Iterator iter = res . entries . iter ( ) ; = $NUMBER$ ;
rank: 478
score: 99.16838836669922
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( iter ) ;
rank: 478
score: 99.16515174278847
patch: Iterator < ] > iter = res . size ( ) ;
rank: 478
score: 99.16167805989583
patch: Iterator iter = res . entries . entries entries . iterator ( ) ;
rank: 478
score: 99.15162417763158
patch: if ( v != null ) res . ) res . res . res . res . ;
rank: 479
score: 99.2436767578125
patch: Iterator < String > iter = entries . entries . iterator ( ) ;
rank: 479
score: 99.19153362771739
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . entries ) . iterator ( ) ;
rank: 479
score: 99.18430001395089
patch: Iterator iter = res . remove ( ) . size ( ) ;
rank: 479
score: 99.1793701171875
patch: Iterator iter = entries . iter ( ) ;
rank: 479
score: 99.16163545496323
patch: Iterator iter = res . entries . index CaMeL Of ( $STRING$ ) . length ;
rank: 479
score: 99.15111626519098
patch: if ( res != null ) res . res = res . entries . entries . ;
rank: 480
score: 99.23397623697916
patch: Iterator iter = res != null ? res . entries . iterator ( )
rank: 480
score: 99.20946155894886
patch: Iterator iter = res . read . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 480
score: 99.18287150065105
patch: Iterator iter = res . in . iterator ( ) ;
rank: 480
score: 99.17890276227679
patch: Iterator iter = res . entries . iterator ( ) ; continue ;
rank: 480
score: 99.16478553185097
patch: Iterator iter = res . entries ( ) ; case 1 :
rank: 481
score: 99.24315121299342
patch: Iterator iter = res . get ( res . entries . size ( ) - 1 ) ;
rank: 481
score: 99.233251953125
patch: Iterator iter = v [ 1 ] . entries . iterator ( ) ;
rank: 481
score: 99.20925467354911
patch: Iterator iter = res . get . list . iterator ( ) ;
rank: 481
score: 99.18212018694196
patch: Iterator iter = res . false . entries . iterator ( ) ;
rank: 481
score: 99.16471041165866
patch: int < ] > iter = res . entries ( ) ;
rank: 481
score: 99.16050809972427
patch: Iterator iter = res . entries . iterator ( ) ; synchronized ( this ) {
rank: 481
score: 99.15086146763393
patch: Iterator iter = v . iterator ( ) ; while ( ; )
rank: 482
score: 99.24251062729779
patch: Iterator < long > iter = res . entries ( ) . iterator ( ) ;
rank: 482
score: 99.19074096679688
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector (
rank: 482
score: 99.16429138183594
patch: Iterator iter = res . entries ( $NUMBER$ ) . iterator ( ) ; else
rank: 483
score: 99.23167317708334
patch: Iterator iter = res . equals ( $STRING$ ) . iterator ( ) ;
rank: 483
score: 99.20889621310764
patch: Iterator iter = res . map ; while ( iter . has CaMeL Next ( ) )
rank: 483
score: 99.17821326622597
patch: Iterator iter = ( Iterator ) entries . iterator ( ) ;
rank: 483
score: 99.15984235491071
patch: Iterator iter = res . entries . entries . next ( ) ;
rank: 483
score: 99.15079752604167
patch: res = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 484
score: 99.23108927408855
patch: Iterator iter = res != null . entries ( ) ;
rank: 484
score: 99.18131801060268
patch: Iterator iter = res . entries . iterator ( ) ; ; ;
rank: 484
score: 99.16585047104779
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( this ) ;
rank: 484
score: 99.16398402622768
patch: Iterator value = res . entries ( ) . iterator ( ) ;
rank: 484
score: 99.15959930419922
patch: int value = iter . Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 484
score: 99.15052625868056
patch: int iter = res . entries . size ( ) ; while ( iter < iter )
rank: 485
score: 99.20808679917279
patch: Iterator iter = res . list ( res . entries . size ( ) ) ;
rank: 485
score: 99.17768205915179
patch: Iterator iter = res . entries . reverse . iterator ( ) ;
rank: 485
score: 99.16370567908653
patch: Iterator < String > iter = res . copy ( ) ;
rank: 485
score: 99.15833458533653
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 485
score: 99.14851888020833
patch: if ( res != null ) res . res = res . entries [ 0 ] ;
rank: 486
score: 99.24138440583882
patch: final int entries = res . entries . iterator ( ) . iterator ( ) . length ;
rank: 486
score: 99.20783025568181
patch: Iterator iter = v . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 486
score: 99.18882123161765
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : v . entries ) {
rank: 486
score: 99.18125563401442
patch: Iterator iter = res . get CaMeL Dimension ( ) . }
rank: 486
score: 99.16572122012867
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( false ) ;
rank: 486
score: 99.16207449776786
patch: Iterator [ ] entries = res . entries . iterator ( ) ;
rank: 486
score: 99.14789581298828
patch: do { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 487
score: 99.23079136439732
patch: Iterator iter = res . entries . entries ( ) . length ;
rank: 487
score: 99.18873426649306
patch: Iterator iter = res . length ; while ( iter . has CaMeL Next ( ) )
rank: 487
score: 99.18091837565105
patch: while ( iter . has CaMeL Next ( ) ) {
rank: 487
score: 99.17741176060268
patch: Iterator iter . iter = res . entries . iter ( ) ;
rank: 487
score: 99.15747833251953
patch: Iterator iter = res . get CaMeL Dimension ( ) . max ( ) ;
rank: 487
score: 99.14759657118056
patch: if ( res != null ) res . res = res . entries ( ) . ;
rank: 488
score: 99.22916957310268
patch: int iter = this . res . entries . iterator ( ) ;
rank: 488
score: 99.18817138671875
patch: if ( res . iterator ( ) . has CaMeL Next ( ) ) {
rank: 488
score: 99.18070765904018
patch: Iterator iter = v . entries . entries . size ( ) ;
rank: 488
score: 99.1773681640625
patch: Iterator iter = res . entries . split ( ) ;
rank: 488
score: 99.14744349888393
patch: Iterator iter = res . iterator . entries . iterator ( ) ;
rank: 489
score: 99.23990885416667
patch: final Iterator < Class > iter = res . entries ( ) . iterator ( ) ;
rank: 489
score: 99.22908238002232
patch: Iterator iter = super . entries ( ) . iterator ( ) ;
rank: 489
score: 99.207666015625
patch: Iterator iter = res . list ( 0 ) . iterator ( ) ;
rank: 489
score: 99.18803074048913
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries [ ) . iterator ( ) ;
rank: 489
score: 99.17705829326923
patch: Iterator iter = res . entries $NUMBER$ . iterator ( ) ;
rank: 489
score: 99.14740349264706
patch: synchronized ( this ) { Iterator iter = res . iterator . iterator ( ) ;
rank: 490
score: 99.2398745888158
patch: final int [ ] entries = res . entries . iterator ( ) . iterator ( ) ;
rank: 490
score: 99.22866821289062
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector [ ] ;
rank: 490
score: 99.20735677083333
patch: List list = res . entries . iterator ( ) ;
rank: 490
score: 99.18760463169643
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = this . res . iterator ( ) ;
rank: 490
score: 99.18044026692708
patch: int res = v . get CaMeL Dimension ( ) ;
rank: 491
score: 99.22841971261161
patch: Iterator iter = res . entries . iterator ( ) ; finally {
rank: 491
score: 99.18755340576172
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector res : res ) {
rank: 491
score: 99.18011881510417
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ) ;
rank: 491
score: 99.17608642578125
patch: Iterator iter ; iter = res . entries . iterator ( ) ;
rank: 491
score: 99.15902944711539
patch: for ( Iterator iter : res . entries ( ) ) {
rank: 491
score: 99.146728515625
patch: Iterator iter = v . entries ( . iterator ( ) ) ;
rank: 492
score: 99.23898315429688
patch: final boolean < ? > iter = res . entries . iterator ( ) ;
rank: 492
score: 99.187353515625
patch: while ( res . iterator ( ) . has CaMeL Next ( ) )
rank: 492
score: 99.18001302083333
patch: Iterator iter = res . entries . iterator ( ) ; ) { {
rank: 492
score: 99.1752217610677
patch: Iterator iter = res . entries . list ( ) ;
rank: 492
score: 99.15443638392857
patch: Iterator iter = res . entries . TRUE . iterator ( ) ;
rank: 492
score: 99.14652506510417
patch: Object res = res . get CaMeL Value ( ) ;
rank: 493
score: 99.205810546875
patch: for ( Iterator iterator = res . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 493
score: 99.18615141369048
patch: iterator = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 493
score: 99.17472621372768
patch: Iterator < ) . Iterator iter = res . entries ( ) ;
rank: 493
score: 99.15438406808036
patch: Iterator iter = res . entries . ( ) . ( ) ;
rank: 493
score: 99.14638846261161
patch: Iterator iter = res . iterator . iterator ( ) - 1 ;
rank: 494
score: 99.23868001302084
patch: Iterator >> iter = res . entries ( ) . iterator ( ) ;
rank: 494
score: 99.22488403320312
patch: int iter = res . get CaMeL Dimension ( ) . entries . length ;
rank: 494
score: 99.20536534926471
patch: Iterator iter = v . get ( this ) . entries . iterator ( ) ;
rank: 494
score: 99.18611653645833
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . Iterator ( ) ;
rank: 494
score: 99.17847789417614
patch: Iterator iter = res . iterator ( ) ; }
rank: 494
score: 99.17422049386161
patch: Iterator iterator = this . res . entries . iterator ( ) ;
rank: 494
score: 99.16227504185268
patch: Iterator iter = res . exp . entries . iterator ( ) ;
rank: 494
score: 99.15859549386161
patch: int iter = res . entries . to CaMeL Array ( ) ;
rank: 494
score: 99.15416666666667
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( res , this ) ;
rank: 494
score: 99.14622279575893
patch: Object [ ] res = new Object [ res . length ] ;
rank: 495
score: 99.23834587545956
patch: Iterator < String > iter = res . copy ( ) . iterator ( ) ;
rank: 495
score: 99.22394561767578
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iter ( ) ;
rank: 495
score: 99.205078125
patch: Iterator iter = res . entries [ res . size ( ) ] ;
rank: 495
score: 99.18580537683823
patch: Iterator < boolean > iter = res . entries . entries . iterator ( ) ;
rank: 495
score: 99.17836507161458
patch: Iterator res = v . entries . iterator ( ) ;
rank: 495
score: 99.16225298713235
patch: Iterator iter = res ; Iterator iter = res . entries . iterator ( ) ;
rank: 495
score: 99.15847342354911
patch: Iterator [ ] list = res . entries . iterator ( ) ;
rank: 495
score: 99.14616563585069
patch: if ( v == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 496
score: 99.23828843060662
patch: Iterator < void > iter = res . entries ( ) . iterator ( ) ;
rank: 496
score: 99.18575345552884
patch: Iterator ( iter = res . entries . iterator ( ) ;
rank: 496
score: 99.17825317382812
patch: Iterator iter = res . length . size ( ) ;
rank: 496
score: 99.16188267299107
patch: Iterator iter = 1 : res . entries . iterator ( ) ;
rank: 496
score: 99.15812465122768
patch: int iterator = res . entries ( ) . iterator ( ) ;
rank: 496
score: 99.14603464226974
patch: if ( res . entries != null && res . entries . size ( ) != 0 )
rank: 497
score: 99.23722330729167
patch: final Iterator < Entry > iter = res . entries ( ) . iterator ( ) ;
rank: 497
score: 99.20313720703125
patch: Iterator iter = res . entries ; while ( iter . has CaMeL Next ( ) ) { )
rank: 497
score: 99.177978515625
patch: Iterator iter = res . entries . entries . iterator ( ) ; {
rank: 497
score: 99.172119140625
patch: Iterator iter = res . entries . iterator ( ) ; else ;
rank: 497
score: 99.15793081430289
patch: Iterator -- iter = res . entries . iterator ( ) ;
rank: 497
score: 99.1449836282169
patch: if ( res . entries != null && res . entries . size ( ) ;
rank: 498
score: 99.2371826171875
patch: int [ ] entries = res . entries . iterator ( ) ;
rank: 498
score: 99.22309875488281
patch: Object iter = res . get CaMeL Dimension ( ) . entries ( ) ;
rank: 498
score: 99.20311686197917
patch: iter = new Iterator ( res . entries . iterator ( ) ) ;
rank: 498
score: 99.17718975360577
patch: Iterator iter = entries . entries . iterator ( ) ; ;
rank: 498
score: 99.17200724283855
patch: for ( Iterator iter = res . entries ( ) ;
rank: 498
score: 99.1577377319336
patch: Iterator < ] > iter = res . entries . iterator ( ) ; else
rank: 498
score: 99.14472198486328
patch: Iterator iter = res . entries ( ) . iterator ( ) ; int ;
rank: 499
score: 99.23714773995536
patch: Iterator iter = res . entries . size ( ) - 1 ;
rank: 499
score: 99.18513997395833
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : v . entries ( ) )
rank: 499
score: 99.17179652622768
patch: Iterator iter = res . abs ( ) . iterator ( ) ;
rank: 499
score: 99.15755521334134
patch: Iterator iter = res . entries res . iterator ( ) ;
rank: 499
score: 99.14461263020833
patch: res . entries = new Iterator [ v . size ( ) ] ;
rank: 500
score: 99.23691693474265
patch: Iterator < char [ ] > iter = res . entries . iterator ( ) ;
rank: 500
score: 99.16941615513393
patch: Iterator < ) . Iterator iter = res . iterator ( ) ;
rank: 500
score: 99.15979875837054
patch: Real CaMeL Vector iter = res . entries . iterator ( ) ;
rank: 500
score: 99.14457702636719
patch: res . entries [ res . entries . size ( ) ] = res ;
rank: 501
score: 99.21973528180804
patch: Iterator iter = res . entries ( ) . Iterator ( ) ;
rank: 501
score: 99.20199584960938
patch: Iterator iter = v . iter ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 501
score: 99.18450458233173
patch: Iterator > iter = res . entries . iterator ( ) ;
rank: 501
score: 99.1597541360294
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( ) == null
rank: 501
score: 99.15668596540179
patch: Iterator iter = res . entries ( ) ; for ( ) {
rank: 501
score: 99.14444405691964
patch: Iterator iter = res . iterator ( ) ; synchronized ( this )
rank: 502
score: 99.21962076822916
patch: final Real CaMeL Vector res = new Real CaMeL Vector ( this ) ;
rank: 502
score: 99.20166733685662
patch: Iterator iter = null ; while ( iter . has CaMeL Next ( ) ) {
rank: 502
score: 99.17544991629464
patch: Iterator iter = res . iterator . has CaMeL Next ( ) ;
rank: 502
score: 99.16893513997395
patch: entries iter = res . entries . iterator ( ) ;
rank: 502
score: 99.15895298549107
patch: Iterator iter = res . max . entries . iterator ( ) ;
rank: 502
score: 99.15623982747395
patch: Iterator iter = copy . entries . iterator ( ) ;
rank: 502
score: 99.14417375837054
patch: Collection res = res . iterator ( ) . next ( ) ;
rank: 503
score: 99.23619887408088
patch: Iterator < double > iter = res . entries ( ) . iterator ( ) ;
rank: 503
score: 99.219482421875
patch: Iterator iter = key . entries ( ) . iterator ( ) ;
rank: 503
score: 99.2012451171875
patch: Iterator iter = res . list ( 1 ) . iterator ( ) ;
rank: 503
score: 99.18417197779605
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = v . iterator ( ) ;
rank: 503
score: 99.17452566964286
patch: Iterator iter = this . res . entries . size ( ) ;
rank: 503
score: 99.16851806640625
patch: Iterator iter = res . entries . remove . iterator ( ) ;
rank: 503
score: 99.15733119419643
patch: Iterator iter = res . entries . iterator ( / 1 ) ;
rank: 503
score: 99.14319610595703
patch: try { Iterator iterator = res . entries ( ) . iterator ( ) ;
rank: 504
score: 99.18412272135417
patch: Iterator iter = res . entries . iterator ( ) ; System . iterator ( ) ;
rank: 504
score: 99.17326136997768
patch: Iterator iter = v . entries . has CaMeL Next ( ) ;
rank: 504
score: 99.15485026041667
patch: Iterator iter = res . entries ( ) . remove ( $NUMBER$ ) ;
rank: 504
score: 99.14317626953125
patch: if ( res == null ) return res ;
rank: 505
score: 99.20051125919117
patch: Iterator iter = res . get CaMeL Properties ( ) . iterator ( ) ; ;
rank: 505
score: 99.18402506510417
patch: Iterator iter = res . entries $NUMBER$ ( ) . iterator ( ) ;
rank: 505
score: 99.14317103794643
patch: final Iterator < Integer > iter = res . iterator ( ) ;
rank: 506
score: 99.23489583333334
patch: final int [ ] entries = res . entries . size ( ) ;
rank: 506
score: 99.19948323567708
patch: Iterator iter = size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 506
score: 99.17298235212054
patch: entries . Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 506
score: 99.16817533052884
patch: iter Iterator iter = res . entries . iterator ( ) ;
rank: 506
score: 99.15369524274554
patch: int iter = res . res . entries . iterator ( ) ;
rank: 506
score: 99.1411376953125
patch: Iterator < ? extends E > iter = res . entries ( ) ;
rank: 507
score: 99.23468017578125
patch: Iterator < int > iter = res . entries . iterator ( ) ; else
rank: 507
score: 99.18229166666667
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) { iter . advance ( ) ;
rank: 507
score: 99.17255510602679
patch: Iterator iter = res . advance . entries . iterator ( ) ;
rank: 507
score: 99.1536114032452
patch: int < ] : res . entries . iterator ( ) ;
rank: 507
score: 99.14105545847039
patch: if ( res . entries != null ) res . res = res . entries . entries ;
rank: 508
score: 99.23420061383929
patch: Iterator iter = res . entries . iterator ( ) - 0 ;
rank: 508
score: 99.19854736328125
patch: synchronized ( this ) { iter = res . entries . iterator ( ) ;
rank: 508
score: 99.17217145647321
patch: Iterator iter = entries . trim ( ) . iterator ( ) ;
rank: 508
score: 99.16752406529018
patch: iterator . Iterator iter = res . entries . iterator ( ) ;
rank: 508
score: 99.15375627790179
patch: Iterator iter = res . entries . iterator ( ) : 0 ;
rank: 508
score: 99.15355573381696
patch: int res . entries . iterator ( ) . iterator ( ) ;
rank: 508
score: 99.14105545847039
patch: Iterator iter = v . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 509
score: 99.23412272135417
patch: Iterator < Object > iter : res . entries . iterator ( ) ;
rank: 509
score: 99.18167877197266
patch: Iterator iter = res . entries . entries . iterator ( ) - 1 ;
rank: 509
score: 99.15289713541667
patch: Iterator iter = res . entries ( ) ; int iter = null ;
rank: 509
score: 99.14811197916667
patch: Iterator iter = res . contains . iterator ( ) ;
rank: 509
score: 99.14078463040866
patch: Iterator < res . entries ( ) . iterator ( ) ;
rank: 510
score: 99.23338407628677
patch: Iterator < Object > iter = res . entries = res . iterator ( ) ;
rank: 510
score: 99.21770685369319
patch: Iterator iter = res . entries . iterator ( )
rank: 510
score: 99.19802420479911
patch: Iterator iter = res . set . entries . iterator ( ) ;
rank: 510
score: 99.18150745738636
patch: Iterator iter = res . entries [ 0 ] ;
rank: 510
score: 99.17141488882211
patch: Iterator iter = iter . has CaMeL Next ( ) ; {
rank: 510
score: 99.16682652064732
patch: Iterator iter = res . res . res . iterator ( ) ;
rank: 510
score: 99.15279715401786
patch: Iterator iter = res . entries ( ) ; clone ( ) ;
rank: 510
score: 99.15226527622768
patch: Iterator iter = res . entries . iterator ( ) : null ;
rank: 510
score: 99.1407470703125
patch: if ( res != null ) res . entries = . entries ;
rank: 511
score: 99.18144674862133
patch: for ( while ( res . iterator ( ) . has CaMeL Next ( ) )
rank: 511
score: 99.17135620117188
patch: int v = v . get CaMeL Dimension ( ) ;
rank: 511
score: 99.1522725423177
patch: Iterator iter = res . entries ( ) ; break ;
rank: 511
score: 99.14775390625
patch: Iterator iter = res . entries Real CaMeL Vector . iterator ( ) ;
rank: 511
score: 99.14066938920455
patch: Iterator iter = res . iterator ( ) ; )
rank: 512
score: 99.1812808388158
patch: list . set CaMeL Entry ( iter . key ( ) , iter . value ( ) /
rank: 512
score: 99.15190778459821
patch: Iterator iter = res . parse ( ) . entries ( ) ;
rank: 512
score: 99.15188162667411
patch: Iterator iter = res . iter ( ) . iterator ( ) ;
rank: 512
score: 99.14748965992646
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL
rank: 513
score: 99.2326301125919
patch: Iterator < ) [ ] > iter = res . entries . iterator ( ) ;
rank: 513
score: 99.1965267783717
patch: Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 513
score: 99.16932169596355
patch: Iterator iter = entries . has CaMeL Next ( ) ;
rank: 513
score: 99.15174153645833
patch: Iterator iter = res . entries ( ) ; int iterator = 0 ;
rank: 513
score: 99.14740397135417
patch: Iterator iter = res . entries . entries ( ) . ( ) ;
rank: 513
score: 99.14058645148026
patch: List iter = res . entries ( ) ; Iterator iter = iter . iterator ( ) ;
rank: 514
score: 99.23240443638393
patch: final Iterator < String > iter = res . iterator ( ) ;
rank: 514
score: 99.18070845170455
patch: for ( iter = res . entries . entries ( ) ; iter . has CaMeL Next ( ) ; )
rank: 514
score: 99.16538783482143
patch: Iterator iter = res . entries . iterator ( ) ; iterator *
rank: 514
score: 99.15027727399554
patch: Iterator iter = v . data . entries . iterator ( ) ;
rank: 514
score: 99.14035034179688
patch: Collection res = res . entries . iterator ( ) ;
rank: 515
score: 99.17995318244485
patch: Enumeration < Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 515
score: 99.16901041666667
patch: Iterator < String > iter = res . get CaMeL Dimension ( ) ;
rank: 515
score: 99.16520472935268
patch: Iterator iter = res . entries . iterator ( ) ; iter .
rank: 515
score: 99.15136108398437
patch: Iterator list = res . entries ( ) ;
rank: 515
score: 99.1499252319336
patch: Iterator iter = res . length ;
rank: 515
score: 99.14630596454327
patch: Iterator iter = res . index CaMeL Of ( 0 ) ;
rank: 515
score: 99.13922440378289
patch: if ( res != null ) res . entries = res . entries . entries ( ) ;
rank: 516
score: 99.21700846354166
patch: Iterator iter = ! v . entries ( ) . iterator ( ) ;
rank: 516
score: 99.17987060546875
patch: for ( iter = res . entries ( ) ; iter . has CaMeL Next ( ) ; )
rank: 516
score: 99.16427176339286
patch: Iterator iter = res . res . entries . iter ( ) ;
rank: 516
score: 99.15121023995536
patch: Iterator iter = res . entries = res . copy ( ) ;
rank: 516
score: 99.146142578125
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . add ( res ) ;
rank: 516
score: 99.1390380859375
patch: if ( res != null ) res . res = res . get CaMeL Bytes ( ) ;
rank: 517
score: 99.23141479492188
patch: final Iterator iter = res . entries ( ) . iterator ( ) ; ;
rank: 517
score: 99.17970493861607
patch: Iterator iter = this . entries ( ) . iterator ( ) ;
rank: 517
score: 99.16778564453125
patch: Iterator iter = res . Math . iterator ( ) ;
rank: 517
score: 99.13897705078125
patch: Iterator iter ; try { iter = v . entries ( ) . iterator ( ) ;
rank: 518
score: 99.23133341471355
patch: int [ ] entries = res . entries ( ) ;
rank: 518
score: 99.1937744140625
patch: Iterator iter = key . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 518
score: 99.16338641826923
patch: / iter iter = res . entries . iterator ( ) ;
rank: 518
score: 99.13883249383224
patch: Iterator iter = v . entries ( ) ; Iterator iter = v . iterator ( ) ;
rank: 519
score: 99.17922141335227
patch: Iterator iter = res . entries != null ? res . entries . entries . iterator ( ) : null ;
rank: 519
score: 99.16759381975446
patch: Iterator iter = res . entries . iterator ( ) ; / :
rank: 519
score: 99.16305977957589
patch: Iterator iterator = res . entries . iter . iterator ( ) ;
rank: 519
score: 99.15028483072916
patch: Iterator iter = res . entries . iterator ( ) ; case 1 :
rank: 519
score: 99.14400540865384
patch: Iterator iter = res . entries . iterator ( $NUMBER$ ) ;
rank: 519
score: 99.1387875205592
patch: if ( res != null ) res . ; Iterator iter = res . iterator ( ) ;
rank: 520
score: 99.23122271369485
patch: Iterator < Exception > iter = res . entries ( ) . iterator ( ) ;
rank: 520
score: 99.21628243582589
patch: res . set CaMeL Entry ( iter . key ( ) ) ;
rank: 520
score: 99.16738455636161
patch: Iterator iter = res . entries . iterator ( ) ; do {
rank: 520
score: 99.14894321986607
patch: Iterator iter = res , entries = res . entries ( ) ;
rank: 520
score: 99.13832600911458
patch: if ( res != null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 521
score: 99.2306884765625
patch: Iterator < Object > res = res . entries . iterator ( ) ;
rank: 521
score: 99.19344482421874
patch: Iterator iter = in . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 521
score: 99.17904808407738
patch: Iterator iter = . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 521
score: 99.16273850661058
patch: Iterator iter = new res . entries . iterator ( ) ;
rank: 521
score: 99.14892578125
patch: final int iterator = res . entries . size ( ) ;
rank: 521
score: 99.14659118652344
patch: Iterator iter = res . entries ;
rank: 521
score: 99.13805389404297
patch: Iterator iter ; try { while ( iter . has CaMeL Next ( ) )
rank: 522
score: 99.19281005859375
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . entries . has CaMeL Next ( ) )
rank: 522
score: 99.16697184244792
patch: Iterator iter = res . end . iterator ( ) ;
rank: 522
score: 99.16202799479167
patch: Iterator iter = res . entries . delete ( ) ;
rank: 522
score: 99.14889090401786
patch: Iterator iter = res . round ( ) . iterator ( ) ;
rank: 522
score: 99.14633178710938
patch: Iterator iter = res . size ( ) : res . entries ( ) ;
rank: 522
score: 99.14279610770089
patch: Iterator iter = res . entries . FALSE . iterator ( ) ;
rank: 522
score: 99.13795689174107
patch: lock ( ) ; Iterator iter = res . iterator ( ) ;
rank: 523
score: 99.22993549547698
patch: Iterator iter = res . entries . iterator ( ) ; while . has CaMeL Next ( )
rank: 523
score: 99.17852783203125
patch: list . set CaMeL Entry ( iter . key ( ) , iter . value ( )
rank: 523
score: 99.16687825520833
patch: Iterator iter = res . has CaMeL Next ( ) ; ) { {
rank: 523
score: 99.1485087076823
patch: Iterator iter = data . entries . size ( ) ;
rank: 523
score: 99.13751541940789
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) { )
rank: 524
score: 99.21437174479166
patch: Iterator iter = entries [ 0 ] . entries . iterator ( ) ;
rank: 524
score: 99.19237263997395
patch: Iterator iterator = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) { )
rank: 524
score: 99.16622488839286
patch: List res = res . entries . entries . iterator ( ) ;
rank: 524
score: 99.16063581194196
patch: Iterator iter = res . entries . iter . Iterator ( ) ;
rank: 524
score: 99.14678485576923
patch: Iterator < T > iter = entries . iterator ( ) ;
rank: 525
score: 99.22967170266544
patch: Iterator < float [ ] > iter = res . entries . iterator ( ) ;
rank: 525
score: 99.2142333984375
patch: Iterator iter = v . entries ( ) . . iterator ( ) ;
rank: 525
score: 99.19224039713542
patch: Iterator iter = res . list . iterator ( ) ; ; finally { iter . has CaMeL Next ( ) ; }
rank: 525
score: 99.1782559481534
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > < )
rank: 525
score: 99.16051228841145
patch: Iterator iter . iter = res . iterator ( ) ;
rank: 525
score: 99.145556640625
patch: Iterator iter = res . index CaMeL Of ( int . length ) ;
rank: 525
score: 99.14549671519886
patch: Iterator iter = res . . entries ( ) ;
rank: 525
score: 99.14161900111607
patch: Iterator iter = res . entries . iterator > iterator ( ) ;
rank: 526
score: 99.14552525111607
patch: Iterator iter = v . trim ( ) . iterator ( ) ;
rank: 526
score: 99.14134928385417
patch: Iterator iter = res . entries . entries . iterator ( ) ) ;
rank: 526
score: 99.13662237870066
patch: Iterator iter = res . get CaMeL Classes ( ) . iterator ( ) ; while ( )
rank: 527
score: 99.22917344835069
patch: final Iterator < E > iter = res . entries ( ) . iterator ( ) ;
rank: 527
score: 99.1920674641927
patch: System . arraycopy ( res . entries . size ( ) , 0 , res . entries . size ( ) ) ;
rank: 527
score: 99.1781338778409
patch: Iterator iter = ! res . iterator ( ) ;
rank: 527
score: 99.16348031850961
patch: Iterator iter = this . entries . iterator ( ) ; ;
rank: 527
score: 99.15879469651442
patch: Iterator iter iter = res . entries . iter ( ) ;
rank: 527
score: 99.1455078125
patch: int size = res . get CaMeL Dimension ( ) . length ;
rank: 527
score: 99.142333984375
patch: final int entries . iterator ( ) . iterator ( ) ;
rank: 527
score: 99.13892473493304
patch: Iterator iter = res . [ 0 ] . size ( ) ;
rank: 527
score: 99.13661411830357
patch: Collection res = res . entries ( ) . iterator ( ) ;
rank: 528
score: 99.22844381893383
patch: Iterator < byte [ ] > iter = res . entries . iterator ( ) ;
rank: 528
score: 99.1915771484375
patch: Iterator iter = list . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 528
score: 99.17813110351562
patch: Iterator iter = res . entries != null ? res . entries . iterator ( ) : null ;
rank: 528
score: 99.1634012858073
patch: int iter = iter . has CaMeL Next ( ) ;
rank: 528
score: 99.13834635416667
patch: List entries = res . entries . iterator ( ) ;
rank: 529
score: 99.2283203125
patch: Iterator iter = res . get ( false ) . entries ( ) ;
rank: 529
score: 99.16323416573661
patch: Iterator iter = res . out . entries . iterator ( ) ;
rank: 529
score: 99.141845703125
patch: final Iterator iter = res . map . iterator ( ) ;
rank: 529
score: 99.13577270507812
patch: if ( res != null ) { res . entries = res . entries ;
rank: 530
score: 99.21165248325893
patch: Iterator iter = res != null : res . entries ( ) ;
rank: 530
score: 99.19076538085938
patch: Iterator iter = res . list = res . entries . iterator ( ) ;
rank: 530
score: 99.17743530273438
patch: Iterator iter = res . get CaMeL Type ( ) . entries ( ) . iterator ( ) ;
rank: 530
score: 99.1416766826923
patch: Iterator < ] > iter = res . copy ( ) ;
rank: 531
score: 99.22795104980469
patch: final Iterator iter = res . entries ( ) . iterator ( ) ; }
rank: 531
score: 99.19041951497395
patch: System . arraycopy ( res . entries , 0 , res . entries , 0 , res . size ( ) ) ;
rank: 531
score: 99.17733604029605
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : v . entries ( ) ) {
rank: 531
score: 99.15590413411458
patch: Iterator iter = res . entries . close ( ) ;
rank: 531
score: 99.1411376953125
patch: int entries = res . entries ( ) ;
rank: 531
score: 99.13421630859375
patch: Collection res = res . entries . entries . iterator ( ) ;
rank: 532
score: 99.21091134207589
patch: Iterator iter = this . entries . iterator ( ) ; for (
rank: 532
score: 99.19027889476104
patch: Iterator iter = res . get CaMeL Entries ( ) . iterator ( ) ; ;
rank: 532
score: 99.17724609375
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector entries : res . entries ( ) ) {
rank: 532
score: 99.16229248046875
patch: Iterator iter = res . entries . iterator ( ) ; ; }
rank: 532
score: 99.15557861328125
patch: Iterator iter = entries . entries . iter ( ) ;
rank: 532
score: 99.14377010569854
patch: Iterator iter = res . entries ( ) . entries ( ) . entries ( )
rank: 532
score: 99.1403057391827
patch: entries = res . entries . entries . iterator ( ) ;
rank: 532
score: 99.13412911551339
patch: Iterator iter ; try { iter = v . iterator ( ) ;
rank: 533
score: 99.20973714192708
patch: Iterator iter = v . length . iterator ( ) ;
rank: 533
score: 99.16225760323661
patch: Iterator iter = res . true . entries . iterator ( ) ;
rank: 533
score: 99.14286586216518
patch: Iterator iter >> res = res . entries . iterator ( ) ;
rank: 533
score: 99.13307291666666
patch: Iterator iter = v . iterator . iterator ( ) ; while ( )
rank: 534
score: 99.22684151785714
patch: final Iterator < String > entries = res . entries ( ) ;
rank: 534
score: 99.19011688232422
patch: try { Iterator iter = res . list ( ) . iterator ( ) ;
rank: 534
score: 99.17679850260417
patch: Iterator iter = ! this . res . entries . iterator ( ) ;
rank: 534
score: 99.16213989257812
patch: Iterator iter = res . entries . clone ( ) ;
rank: 534
score: 99.15456717354911
patch: iter iter = res . entries . entries . iterator ( ) ;
rank: 534
score: 99.13997977120536
patch: Iterator iter = res . entries ( ) ; clone = null ;
rank: 534
score: 99.13546316964286
patch: Iterator iter = res . format . entries . iterator ( ) ;
rank: 534
score: 99.13277435302734
patch: Iterator iter = res . iterator ( ) ; this . res = res ;
rank: 535
score: 99.22682818244485
patch: Iterator < int [ ] > iter = res . entries . iterator ( ) ;
rank: 535
score: 99.19007568359375
patch: Iterator iter = res . next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 535
score: 99.17656506990132
patch: Iterator < iter . has CaMeL Next ( ) ; ) { iter . advance ( ) ;
rank: 535
score: 99.1617901141827
patch: Iterator iter = res . entries . size ( ) ; {
rank: 535
score: 99.15272739955357
patch: Iterator iter . entries = res . entries . iterator ( ) ;
rank: 535
score: 99.14228166852679
patch: Iterator iter ; iterator = res . entries . iterator ( ) ;
rank: 535
score: 99.13990129743304
patch: synchronized ( res ) { iter = res . iterator ( ) ;
rank: 535
score: 99.1325439453125
patch: Iterator iter = res . iterator . entries ( ) ; while ( )
rank: 536
score: 99.22600911458333
patch: Iterator < Package > iter = res . entries . iterator ( ) ;
rank: 536
score: 99.16128976004464
patch: Iterator iter = res . ebe CaMeL Divide . iterator ( ) ;
rank: 536
score: 99.15213716947116
patch: iter . iter = res . entries . iterator ( ) ;
rank: 536
score: 99.14116559709821
patch: Iterator iter = res . max ( ) . iterator ( ) ;
rank: 536
score: 99.13949819711539
patch: res . value = res . entries . iterator ( ) ;
rank: 536
score: 99.13238884420956
patch: if ( res == null || res . entries . size ( ) == 0 )
rank: 537
score: 99.22561645507812
patch: Iterator < ? > iter = res . entries . iterator ( ) ; else
rank: 537
score: 99.20905412946429
patch: Real CaMeL Vector res = res . get CaMeL Dimension ( ) ;
rank: 537
score: 99.1515604654948
patch: Iterator iter = this . res . entries ( ) ;
rank: 537
score: 99.13868297230114
patch: res . entries ( ) . iterator ( ) ;
rank: 538
score: 99.2254279641544
patch: Iterator < Iterator < Iterator > iter = res . entries . iterator ( ) ;
rank: 538
score: 99.20888846261161
patch: Iterator iter = $NUMBER$ . entries ( ) . iterator ( ) ;
rank: 538
score: 99.17544991629464
patch: final final Iterator iter = res . entries . iterator ( ) ;
rank: 538
score: 99.1310173483456
patch: Iterator iter = res . entries ( res . size ( ) - 1 ) ;
rank: 539
score: 99.225390625
patch: Iterator < Integer > iterator = res . entries . iterator ( ) ;
rank: 539
score: 99.20726667131696
patch: Iterator iter = res . [ 0 ] . iterator ( ) ;
rank: 539
score: 99.18804168701172
patch: Iterator iter = res . get CaMeL H ( ) . iterator ( ) ;
rank: 539
score: 99.16051374162946
patch: Iterator iter = res . get CaMeL Dimension ( ) . get CaMeL
rank: 539
score: 99.1512451171875
patch: Iterator iter = res . . iterator ( ) ;
rank: 539
score: 99.13972981770833
patch: Iterator iter = res . entries . iterator ( ) ; * * /
rank: 539
score: 99.13816528320312
patch: Iterator iter = res . remove ( ) ;
rank: 539
score: 99.13095272288604
patch: try { Iterator iter = res . entries ( ) . iterator ( ) ; ;
rank: 540
score: 99.17520577566964
patch: Enumeration iter = res . entries ( ) . iterator ( ) ;
rank: 540
score: 99.160400390625
patch: Iterator iter = res . size ( ) ; }
rank: 540
score: 99.1392822265625
patch: Iterator iter = iter . next ( ) . entries ( ) ;
rank: 540
score: 99.13687337239584
patch: Iterator iter = res . entries ( ) ; add ( res ) ;
rank: 540
score: 99.13077799479167
patch: Iterator < ? extends res > iter = res . iterator ( ) ;
rank: 541
score: 99.22466169084821
patch: final Iterator < Iterator > iter = res . iterator ( ) ;
rank: 541
score: 99.17498016357422
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v . entries )
rank: 541
score: 99.16039167131696
patch: Iterator iter = res . in . entries . iterator ( ) ;
rank: 541
score: 99.15094866071429
patch: Iterator iter = this . res . entries . entries ( ) ;
rank: 541
score: 99.13673753004808
patch: Iterator < String > iter = res . clone ( ) ;
rank: 541
score: 99.13264973958333
patch: Iterator iter = res : entries . iterator ( ) ;
rank: 541
score: 99.13029261997768
patch: synchronized ( res ) Iterator iter = res . iterator ( ) ;
rank: 542
score: 99.22442267922794
patch: if ( res . entries . iterator ( ) . is CaMeL Empty ( ) )
rank: 542
score: 99.18697916666666
patch: Iterator iter = res . iterator ( ) ; while ( iter . )
rank: 542
score: 99.16008649553571
patch: Iterator iter = res . advance ( ) . iterator ( ) ;
rank: 542
score: 99.15038190569196
patch: Iterator iter = res . split ( ) . iterator ( ) ;
rank: 542
score: 99.13897705078125
patch: Iterator iter = iter . next ( ) . iterator ( ) ;
rank: 542
score: 99.13241373697916
patch: for ( Iterator ( iter = res . entries . iterator ( ) ;
rank: 542
score: 99.12976792279412
patch: Iterator iter = res . entries ( ) [ 0 ] . entries ( ) ;
rank: 543
score: 99.2244121844952
patch: final Object iter = res . entries . iterator ( ) ;
rank: 543
score: 99.17472076416016
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) ;
rank: 543
score: 99.16005452473958
patch: Iterator iter = res . false . iterator ( ) ;
rank: 543
score: 99.15011160714286
patch: Iterator iter = res . entries . Enum . iterator ( ) ;
rank: 543
score: 99.13855852399554
patch: Iterator iter = next ( ) . entries . iterator ( ) ;
rank: 544
score: 99.22248391544117
patch: Iterator < Object > iter = res . entries = res . entries ( ) ;
rank: 544
score: 99.1738217002467
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . length ;
rank: 544
score: 99.15976388113839
patch: Iterator iter = v . res . entries . iterator ( ) ;
rank: 544
score: 99.1500244140625
patch: Iterator iter = res . list . iter ( ) ;
rank: 544
score: 99.13538818359375
patch: int iterator = res . entries ( ) ;
rank: 544
score: 99.13168569711539
patch: final Iterator entries = res . entries . iterator ( ) ;
rank: 544
score: 99.12946912977431
patch: entries = res . entries ( ) ; Iterator iter = res . iterator ( ) ;
rank: 545
score: 99.1483154296875
patch: / ; Iterator iter = res . entries ( ) ;
rank: 545
score: 99.13624790736607
patch: Iterator iter = res . join ( ) . iterator ( ) ;
rank: 545
score: 99.13525390625
patch: Iterator iter = res . entries . iterator ( ) ; int * * /
rank: 546
score: 99.22224644252232
patch: final Object res = res . entries . get ( 0 ) ;
rank: 546
score: 99.20043131510417
patch: for ( Real CaMeL Vector v : res . entries ( ) ) {
rank: 546
score: 99.18602905273437
patch: Iterator iter = res . copy ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 546
score: 99.13101196289062
patch: Iterator iter = res . entries . entries . length ;
rank: 546
score: 99.12945556640625
patch: res . entries [ res . size ( ) ] = res ;
rank: 547
score: 99.22219848632812
patch: Iterator < ? > iter = res . entries . iterator ( ) ; }
rank: 547
score: 99.18599243164063
patch: iter = res . entries . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 547
score: 99.17295435855263
patch: synchronized ( res ) { Iterator iter = res . entries . entries . iterator ( ) ;
rank: 547
score: 99.15747942243304
patch: Iterator iter = v . copy ( ) . iterator ( ) ;
rank: 547
score: 99.14675668569711
patch: Iterator . iter = res . entries . iterator ( ) ;
rank: 547
score: 99.13519287109375
patch: Iterator iter = list . entries . entries . iterator ( ) ;
rank: 547
score: 99.13463338216145
patch: Collection [ ] iter = res . entries ( ) ;
rank: 548
score: 99.2220947265625
patch: Iterator < int > iter = res . entries . size ( ) ;
rank: 548
score: 99.19773512620192
patch: Real CaMeL Vector res = new Real CaMeL Vector ( ) ;
rank: 548
score: 99.18572034333882
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( )
rank: 548
score: 99.17271118164062
patch: Iterator iter = res . entries != null ? res . entries . iterator ( ) : 0 ;
rank: 548
score: 99.1573486328125
patch: Vector res = res . entries . entries . iterator ( ) ;
rank: 548
score: 99.14651925223214
patch: Iterator iter = res . . . entries . iterator ( ) ;
rank: 548
score: 99.13441051136364
patch: Iterator >> iter = res . entries ( ) ;
rank: 548
score: 99.12787224264706
patch: synchronized ( this ) { Iterator iter = v . entries . iterator ( ) ;
rank: 549
score: 99.185693359375
patch: Iterator iter = v . list ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 549
score: 99.1725323016827
patch: for ( Real CaMeL Vector res : res . entries ) {
rank: 549
score: 99.14621206430289
patch: Iterator iter = res . entries . iter ( ) ) ;
rank: 549
score: 99.13443429129464
patch: Iterator iter = res . entries . iterator ( / $NUMBER$ ) ;
rank: 549
score: 99.12917856069711
patch: Iterator iter = res . entries . entries iterator ( ) ;
rank: 549
score: 99.12639024522569
patch: if ( v != null ) Iterator iter = res . entries . iterator ( ) ;
rank: 550
score: 99.22053079044117
patch: Iterator < Object > iter = res . entries ( ) . entries ( ) ;
rank: 550
score: 99.19759695870536
patch: Iterator iter = v . entries = res . iterator ( ) ;
rank: 550
score: 99.17204015395221
patch: Iterator < Entry < ? > iter = res . entries . iterator ( ) ;
rank: 550
score: 99.15604945591518
patch: Iterator iter = ( v . entries . iterator ( ) ) ;
rank: 550
score: 99.1458740234375
patch: Iterator iter = res . entries . iterator ( ) ; /
rank: 550
score: 99.1256103515625
patch: Iterator Iterator iter = res . iterator ( ) ;
rank: 551
score: 99.22013346354167
patch: Iterator < String > iter = res . get . entries ( ) ;
rank: 551
score: 99.19744403545673
patch: Iterator iter = res $NUMBER$ . entries . iterator ( ) ;
rank: 551
score: 99.18439797794117
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . )
rank: 551
score: 99.17194158380681
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries . entries ( ) )
rank: 551
score: 99.15570068359375
patch: Iterator iter = res . load ( ) . entries ( ) ;
rank: 551
score: 99.14564005533855
patch: Iterator iter = res . entries . Enum ( ) ;
rank: 551
score: 99.13390241350446
patch: final int < ] > entries = res . entries ( ) ;
rank: 551
score: 99.12522536057692
patch: Iterator < E > iter = v . iterator ( ) ;
rank: 552
score: 99.2199348000919
patch: if ( res != null ) entries = res . entries . iterator ( ) ;
rank: 552
score: 99.19718715122768
patch: Real CaMeL Vector iter = res . get CaMeL Dimension ( ) ;
rank: 552
score: 99.17153591579861
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector entries : res . entries ( ) )
rank: 552
score: 99.13292518028847
patch: Iterator < $STRING$ : res . entries . iterator ( ) ;
rank: 552
score: 99.1268819173177
patch: Iterator iter = res . entries . iterator ( ) }
rank: 552
score: 99.12517755681819
patch: entries = res . entries . entries ( ) ;
rank: 553
score: 99.21989171645221
patch: Iterator < Iterator < Entry > iter = res . entries . iterator ( ) ;
rank: 553
score: 99.18407440185547
patch: Iterator iter = res . list = res . list . iterator ( ) ;
rank: 553
score: 99.14425223214286
patch: Iterator iter = res . entries . iterator ( ) ; iter }
rank: 553
score: 99.12607247488839
patch: Iterator iter = v . v . entries . iterator ( ) ;
rank: 553
score: 99.12461635044643
patch: res . res = res . entries . get ( 0 ) ;
rank: 554
score: 99.21952601841518
patch: int [ ] iter = res . entries . iterator ( ) ;
rank: 554
score: 99.19675118582589
patch: Iterator iter = res . iterator ( ) ; for ( for (
rank: 554
score: 99.18392944335938
patch: synchronized ( res ) { iter = res . entries . size ( ) ;
rank: 554
score: 99.17072405133929
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . iterator ( ) ) ;
rank: 554
score: 99.14277866908482
patch: Iterator iter = res . get . res . iterator ( ) ;
rank: 554
score: 99.13214983258929
patch: Iterator iter = res != null ? res . entries ( ) ;
rank: 554
score: 99.12437037417763
patch: if ( res != null ) res . ) Iterator iter = res . iterator ( ) ;
rank: 555
score: 99.2194759971217
patch: boolean < String > iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 555
score: 99.19638497488839
patch: Iterator iter = iter . entries ( ) . entries ( ) ;
rank: 555
score: 99.17067649147727
patch: for ( iter = this . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 555
score: 99.14244733537946
patch: Iterator < Iterator iter = res . entries . iterator ( ) ;
rank: 555
score: 99.1241924579327
patch: / * * Iterator iter = res . iterator ( ) ;
rank: 556
score: 99.21938189338235
patch: / * / Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 556
score: 99.17057495117187
patch: Iterator iter < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 556
score: 99.14194899338942
patch: Iterator iter = res . entries . put ( res ) ;
rank: 556
score: 99.13094656808036
patch: Iterator iter >> iterator = res . entries . iterator ( ) ;
rank: 556
score: 99.13065962357955
patch: Iterator iter = res . entries ( ) ) ;
rank: 556
score: 99.12325032552083
patch: / * Iterator iter = v . iterator ( ) ;
rank: 556
score: 99.12298583984375
patch: ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 557
score: 99.18242536272321
patch: Iterator iter = v . clone ( ) . entries ( ) ;
rank: 557
score: 99.17037624782986
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) { {
rank: 557
score: 99.15308556189903
patch: Iterator iter = ( res . entries . iterator ( ) ;
rank: 557
score: 99.1415303548177
patch: Iterator iter = res . entries . read ( ) ;
rank: 557
score: 99.13067157451923
patch: Iterator iter = res . entries . iterator ( SIZE ) ;
rank: 557
score: 99.12310112847223
patch: if ( res != null ) res . ) res = res . entries ( ) ;
rank: 557
score: 99.1224365234375
patch: Iterator iter = res . size ( ) . size ( ) ;
rank: 558
score: 99.2190673828125
patch: Iterator < Class > iter = res . entries . iter ( ) ;
rank: 558
score: 99.18191046463816
patch: Iterator iter = res . get ) ; while ( iter . has CaMeL Next ( ) )
rank: 558
score: 99.14126586914062
patch: Iterator iter = res . entries . put ( ) ;
rank: 558
score: 99.12131754557292
patch: Iterator iter = res . format . iterator ( ) ;
rank: 559
score: 99.19492885044643
patch: Vector iter = this . res . entries . iterator ( ) ;
rank: 559
score: 99.15236409505208
patch: Iterator iter = res . length . entries ( ) ;
rank: 559
score: 99.13918832632211
patch: Iterator iter = res . entries . contains ( res ) ;
rank: 559
score: 99.12975202287946
patch: Iterator iter = v = res . entries . iterator ( ) ;
rank: 559
score: 99.1286112467448
patch: Iterator iter = res . load . iterator ( ) ;
rank: 559
score: 99.1205342610677
patch: int iterator = v . entries . iterator ( ) ;
rank: 560
score: 99.194677734375
patch: Iterator iter = res . get CaMeL Dimension ( ) . iterator ( )
rank: 560
score: 99.18067220052083
patch: Iterator iter ; while ( iter . has CaMeL Next ( ) ) {
rank: 560
score: 99.17002175071023
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this .
rank: 560
score: 99.15194266183036
patch: Iterator iter = res . null . entries . iterator ( ) ;
rank: 560
score: 99.12958984375
patch: Iterator iter = iter . advance ( ) ;
rank: 560
score: 99.12820199819711
patch: Enumeration < String > iter = res . entries ( ) ;
rank: 560
score: 99.12263706752232
patch: Object res = res . entries ( ) . get ( ) ;
rank: 561
score: 99.21840413411458
patch: Iterator iter = res . entries ( ) != null ;
rank: 561
score: 99.13816481370192
patch: Iterator iter entries = res . entries . iterator ( ) ;
rank: 561
score: 99.12196858723958
patch: Object res = res . entries . get ( ) ;
rank: 562
score: 99.21829044117646
patch: if ( res != null ) iter = res . entries . entries ( ) ;
rank: 562
score: 99.19231305803571
patch: Iterator iter = res . entries [ ] . iterator ( ) ;
rank: 562
score: 99.13738544170673
patch: Iterator iter = res . entries . iter ( ) ; .
rank: 562
score: 99.1279296875
patch: / * ] res . entries = res . entries ( ) ;
rank: 563
score: 99.2181884765625
patch: boolean < ? > iter = res . entries . iterator ( ) ;
rank: 563
score: 99.19223458426339
patch: Iterator iter = value . entries ( ) . iterator ( ) ;
rank: 563
score: 99.1798159950658
patch: Iterator iter = res . entries ; ; while ( iter . has CaMeL Next ( ) )
rank: 563
score: 99.16878015854779
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res .
rank: 563
score: 99.15114182692308
patch: Iterator Iterator iter = res . entries . size ( ) ;
rank: 563
score: 99.1278788248698
patch: Iterator [ ] list = res . entries ( ) ;
rank: 563
score: 99.12183902138158
patch: int iter = res . size ( ) ; Iterator iter = res . iterator ( ) ;
rank: 564
score: 99.21751990685097
patch: Iterator < int > iter = res . iterator ( ) ;
rank: 564
score: 99.19205147879464
patch: Iterator iter = start . entries ( ) . iterator ( ) ;
rank: 564
score: 99.17940266927083
patch: Iterator iter = res . list ( ) . iterator ( ) ; ;
rank: 564
score: 99.16835239955357
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . entries ( ) ;
rank: 564
score: 99.13693472055289
patch: final Iterator iter = res . entries . entries ( ) ;
rank: 564
score: 99.1278076171875
patch: final Iterator < ] > iter = res . entries ( ) ;
rank: 565
score: 99.17924194335937
patch: Iterator iterator = entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 565
score: 99.16807338169643
patch: Iterator < float ) = res . entries . iterator ( ) ;
rank: 565
score: 99.15078500600961
patch: Iterator iter ( res . has CaMeL Next ( ) ) {
rank: 565
score: 99.13623046875
patch: Iterator iter = res . entries ( ) iterator ( ) ;
rank: 565
score: 99.12749372209821
patch: Iterator iter = res . entries ( ) . list ( ) ;
rank: 565
score: 99.12734549386161
patch: Iterator iter = iter . next ( ) . size ( ) ;
rank: 565
score: 99.12084242876838
patch: if ( res != null ) res = res . entries . iterator ( ) ;
rank: 566
score: 99.2161929481908
patch: if ( res . entries . entries . iterator ( ) . has CaMeL Next ( ) )
rank: 566
score: 99.19141496930804
patch: Iterator iter = res . entries . iterator ( ) * 0 ;
rank: 566
score: 99.16806640625
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = null ;
rank: 566
score: 99.14995465959821
patch: iter . Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 566
score: 99.1273193359375
patch: Iterator < Boolean > iter = res . entries ( ) ;
rank: 566
score: 99.12664388020833
patch: Iterator iter = res . entries ( ) . iterator ( ) 1 ;
rank: 566
score: 99.11970071231617
patch: if ( v != null ) { Iterator iter = res . iterator ( ) ;
rank: 567
score: 99.21617024739584
patch: Iterator < int > iter = res . entries . iter ( ) ;
rank: 567
score: 99.16782924107143
patch: Iterator iter = res . entries ( v . get CaMeL Dimension ( ) ) . iterator ( ) ;
rank: 567
score: 99.14986746651786
patch: final Iterator iter = res . entries . iterator ( ) ; }
rank: 567
score: 99.1359393780048
patch: Iterator iter = res . iterator ( ) ; iterator ++ ;
rank: 567
score: 99.12716674804688
patch: int iterator = res . entries . size ( ) ;
rank: 567
score: 99.12655203683036
patch: Iterator iter = res . entries . iterator ( ) >> 1 ;
rank: 568
score: 99.2156120749081
patch: if ( res == null ) iter = res . entries . iterator ( ) ;
rank: 568
score: 99.134765625
patch: Iterator iter = res . get > ( ) ;
rank: 568
score: 99.11857335707721
patch: if ( res != null ) . Iterator iter = res . entries ( ) ;
rank: 568
score: 99.11767578125
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( this , res ) ;
rank: 569
score: 99.17807442801339
patch: Iterator iter = new Iterator ( res . size ( ) ) ;
rank: 569
score: 99.1674072265625
patch: Iterator iter = res . entries ( ) . entries ( ) . entries . iterator ( ) ;
rank: 569
score: 99.14818396935097
patch: for ( iter . has CaMeL Next ( ) ; ) {
rank: 569
score: 99.13425699869792
patch: Iterator iter = res . matches . iterator ( ) ;
rank: 569
score: 99.12551879882812
patch: Iterator 1 = res . entries . iterator ( ) ;
rank: 569
score: 99.12431989397321
patch: * / Iterator iter = res . entries . iterator ( ) ;
rank: 569
score: 99.1177116842831
patch: if ( res != null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 569
score: 99.1158447265625
patch: Vector entries = res . entries . iterator ( ) ;
rank: 570
score: 99.16725068933823
patch: Iterator iter = res . entries ( v . get CaMeL Dimension ( ) ) ;
rank: 570
score: 99.13372802734375
patch: iter = res . entries . iterator ( ) ; ;
rank: 570
score: 99.12505696614583
patch: Iterator iter = res . entries ( ) ; copy ( entries ) ;
rank: 570
score: 99.12351771763393
patch: Iterator iter = res . size ( ) . entries ( ) ;
rank: 570
score: 99.11704388786765
patch: if ( v == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 570
score: 99.11539132254464
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 571
score: 99.2146747295673
patch: Iterator < int > iter = entries . iterator ( ) ;
rank: 571
score: 99.18859049479167
patch: Iterator iter = res . entries . entries ( ) [ 0 ] ;
rank: 571
score: 99.16622488839286
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries . entries ) {
rank: 571
score: 99.13371138139205
patch: Iterator iter = res . add ( res ) ;
rank: 571
score: 99.11595865885417
patch: synchronized ( this ) { Iterator iter = res . entries ( ) ;
rank: 572
score: 99.2131706686581
patch: Iterator < int > iter = res . entries ( ) . iter ( ) ;
rank: 572
score: 99.18839808872768
patch: res . set CaMeL Entry ( iter . value ( ) ) ;
rank: 572
score: 99.17411973741319
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . ) {
rank: 572
score: 99.16590169270833
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ) ;
rank: 572
score: 99.14499337332589
patch: Iterator iter = res . get CaMeL Dimension ( ) . false ;
rank: 572
score: 99.12379039417614
patch: Iterator iter = res . entries ( ) ; }
rank: 572
score: 99.12212262834821
patch: Iterator iter = res . entries . iterator ( ) : 1 ;
rank: 572
score: 99.11566162109375
patch: Collection res = res . entries . entries ( ) ;
rank: 573
score: 99.16573079427083
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . entries .
rank: 573
score: 99.14488002232143
patch: Iterator iter = res . entries . size ( ) ; while (
rank: 573
score: 99.12346942608173
patch: List < String > iter = res . entries ( ) ;
rank: 573
score: 99.11380440848214
patch: / * Iterator iter = v . entries . iterator ( ) ;
rank: 574
score: 99.21284702845982
patch: Iterator iter = 0 . entries ( ) . iterator ( ) ;
rank: 574
score: 99.17124310661765
patch: for ( int iter = 0 ; iter . has CaMeL Next ( ) ; )
rank: 574
score: 99.16515096028645
patch: Iterator iter = res > entries . iterator ( ) ;
rank: 574
score: 99.14421735491071
patch: Iterator iter = res . get CaMeL Dimension ( ) . iter ;
rank: 574
score: 99.11378831129808
patch: { Iterator iter = res . entries . iterator ( ) ;
rank: 574
score: 99.11365559895833
patch: Iterator < Iterator < E > iter = res . iterator ( ) ;
rank: 575
score: 99.16507761101974
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; }
rank: 575
score: 99.14405168805804
patch: while ( res != null ) { iter . advance ( ) ;
rank: 575
score: 99.13161214192708
patch: Iterator iter . iter = res . entries ( ) ;
rank: 575
score: 99.12136606069711
patch: Iterator iter >> = res . entries . iterator ( ) ;
rank: 576
score: 99.18653215680804
patch: Iterator iter = res . length : res . iterator ( ) ;
rank: 576
score: 99.17110188802083
patch: Iterator iter = res . list ( res . entries ( ) ) ;
rank: 576
score: 99.13141479492188
patch: Iterator iter = res . close ( ) ;
rank: 576
score: 99.12164776141827
patch: Vector < String > iter = res . entries ( ) ;
rank: 576
score: 99.1135586825284
patch: Iterator iter = res . iterator ( res ) ;
rank: 576
score: 99.1124267578125
patch: Iterator iter = res . entries . Math . iterator ( ) ;
rank: 577
score: 99.21205767463235
patch: synchronized ( res ) { entries = res . entries . iterator ( ) ; }
rank: 577
score: 99.16910807291667
patch: Iterator iter = v . map . iterator ( ) ;
rank: 577
score: 99.14321463448661
patch: final Iterator Iterator iter = res . entries . iterator ( ) ;
rank: 577
score: 99.12105618990384
patch: Iterator < E > iter = entries . iterator ( ) ;
rank: 577
score: 99.1204325358073
patch: Iterator iter = key . entries . iterator ( ) ;
rank: 578
score: 99.21188151041666
patch: Iterator < int > entries = res . entries . iterator ( ) ;
rank: 578
score: 99.16423950195312
patch: Iterator iter : res . iterator ( ) ;
rank: 578
score: 99.1428973858173
patch: Iterator < Entry = res . entries . iterator ( ) ;
rank: 578
score: 99.12057931082589
patch: synchronized ( res ) { entries . add ( res ) ; }
rank: 578
score: 99.11979457310268
patch: Iterator iter = res : v . entries . iterator ( ) ;
rank: 579
score: 99.211865234375
patch: Iterator < ) . entries = res . entries . iterator ( ) ;
rank: 579
score: 99.16770833333334
patch: res . entries [ 0 ] = res . entries [ 1 ] ;
rank: 579
score: 99.16404893663194
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( )
rank: 579
score: 99.14249965122768
patch: Iterator iter = res . entries . iterator ( ) ; if (
rank: 579
score: 99.12844613882211
patch: Iterator iter = res . iterator ( ) ; = null ;
rank: 579
score: 99.11956232244319
patch: Iterator < ] : res . entries ( ) ;
rank: 579
score: 99.11202799479166
patch: if ( res != null && res . entries . length > 0 )
rank: 580
score: 99.21161247702206
patch: Iterator < ? > iter = res . get ( ) . entries ( ) ;
rank: 580
score: 99.16598307291666
patch: Iterator iter = ( int ) res . list . iterator ( ) ;
rank: 580
score: 99.16362169053819
patch: for ( int ) { iter = res . entries . entries . iterator ( ) ;
rank: 580
score: 99.11960274832589
patch: Iterator iter >> entries = res . entries . iterator ( ) ;
rank: 580
score: 99.11153971354166
patch: Iterator iter ; try { Iterator iter = res . iterator ( ) ;
rank: 580
score: 99.11094447544643
patch: Iterator iter = res / v . entries . iterator ( ) ;
rank: 581
score: 99.1829833984375
patch: res . set CaMeL Entry ( iter . key ) ;
rank: 581
score: 99.1634765625
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries ( )
rank: 581
score: 99.1259765625
patch: Iterator iter Iterator iter = res . iterator ( ) ;
rank: 581
score: 99.11932373046875
patch: Iterator iter = res . entries . iterator ( ) :
rank: 581
score: 99.11074393136161
patch: boolean iter = res . entries . size ( ) > 0 ;
rank: 582
score: 99.16300695082721
patch: Iterator < Real CaMeL Vector > iter . has CaMeL Next ( ) ; ) {
rank: 582
score: 99.14104755108173
patch: while ( res . has CaMeL Next ( ) ) { {
rank: 582
score: 99.12586466471355
patch: / ; Iterator iter = res . iterator ( ) ;
rank: 582
score: 99.11813589242789
patch: Enumeration < ] > iter = res . entries ( ) ;
rank: 582
score: 99.10802205403645
patch: Iterator iterator = v . entries . iterator ( ) ;
rank: 583
score: 99.20991596422698
patch: if ( res != null ) { iter = res . entries . iterator ( ) ; }
rank: 583
score: 99.16295166015625
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries iterator ( ) ;
rank: 583
score: 99.11758188100961
patch: Iterator < Float > iter = res . entries ( ) ;
rank: 583
score: 99.1102294921875
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( res / 1 ) ;
rank: 583
score: 99.10757211538461
patch: Iterator < Comparable > iter = res . iterator ( ) ;
rank: 584
score: 99.20990862165179
patch: final Iterator iter = res . entries . iterator ( ) ; else
rank: 584
score: 99.16513061523438
patch: Iterator iter = this . list . iterator ( ) ;
rank: 584
score: 99.1402118389423
patch: Iterator iter = entries . entries . iterator ( ) ; }
rank: 584
score: 99.12420184795673
patch: Iterator iterator = res . entries . iterator ( ) ; ;
rank: 584
score: 99.11754557291667
patch: Iterator iter = res . entries . iterator ( ) ; case $NUMBER$ :
rank: 585
score: 99.20982142857143
patch: Iterator iter = $NUMBER$ + res . entries . iterator ( ) ;
rank: 585
score: 99.16492984169408
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . ) { ;
rank: 585
score: 99.16279432508681
patch: Iterator < Real CaMeL Vector > iter = ! res . entries . iterator ( ) ;
rank: 585
score: 99.11808558872768
patch: Iterator iter = v : res . entries . iterator ( ) ;
rank: 585
score: 99.10582557091347
patch: Iterator iter = res [ res . size ( ) ] ;
rank: 586
score: 99.16254216974431
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ; }
rank: 586
score: 99.11745042067308
patch: Iterator ++ iter = res . entries . iterator ( ) ;
rank: 586
score: 99.10948835100446
patch: Iterator iter = res / this . entries . iterator ( ) ;
rank: 586
score: 99.10454852764423
patch: Iterator < Number > iter = res . iterator ( ) ;
rank: 587
score: 99.16188354492188
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = ! res . iterator ( ) ;
rank: 587
score: 99.13692220052083
patch: Iterator iter = res . v . size ( ) ;
rank: 587
score: 99.11710030691964
patch: Iterator iter > res = res . entries . iterator ( ) ;
rank: 587
score: 99.11649867466518
patch: Iterator iter = res . get CaMeL Property . entries ( ) ;
rank: 587
score: 99.1041259765625
patch: Iterator iterator = v . iterator . iterator ( ) ;
rank: 588
score: 99.20956655649039
patch: Iterator < Object > iter = res . size ( ) ;
rank: 588
score: 99.18160574776786
patch: Iterator iter = v != null . entries . iterator ( ) ;
rank: 588
score: 99.161376953125
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res .
rank: 588
score: 99.12387319711539
patch: Iterator iter = res . entries . iter ( ) ; }
rank: 589
score: 99.2094217936198
patch: Object iter = res . entries . iterator ( ) ;
rank: 589
score: 99.16348087086396
patch: Iterator iter = res . entries ; Iterator iter = res . iterator ( ) ;
rank: 589
score: 99.1612060546875
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = 0 ;
rank: 589
score: 99.13532366071429
patch: iter . advance ( ) ;
rank: 589
score: 99.1238505045573
patch: Iterator iter = res . entries ( ) ; ) ;
rank: 589
score: 99.11577899639423
patch: Iterator iter = res . entries . iterator ( ) : )
rank: 589
score: 99.11359112079327
patch: Iterator < String > iterator = res . entries ( ) ;
rank: 589
score: 99.1026141826923
patch: entries = new Iterator ( res . size ( ) ) ;
rank: 590
score: 99.16339983258929
patch: Iterator iter = res . list = res . iterator ( ) ;
rank: 590
score: 99.16102818080357
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) { res . set CaMeL
rank: 590
score: 99.1351318359375
patch: if ( res . get CaMeL Dimension ( ) != null ) {
rank: 590
score: 99.1233243075284
patch: Iterator iter iter = res . entries ( ) ;
rank: 590
score: 99.11330740792411
patch: synchronized ( res ) { res . add ( res ) ; }
rank: 590
score: 99.10797119140625
patch: Iterator iter = res . random ( ) . iterator ( ) ;
rank: 590
score: 99.10231370192308
patch: Iterator < res > iter = res . entries ( ) ;
rank: 591
score: 99.18073381696429
patch: Iterator iter = v . entries . iterator . iterator ( ) ;
rank: 591
score: 99.16259047564338
patch: synchronized ( this ) { iter = res . entries . size ( ) ; }
rank: 591
score: 99.1350606282552
patch: List iter = res . get CaMeL Dimension ( ) ;
rank: 591
score: 99.1220703125
patch: Iterator iter = ( > ) res . entries ( ) ;
rank: 591
score: 99.11255821814903
patch: Iterator < Integer > iter = entries . iterator ( ) ;
rank: 592
score: 99.2087646484375
patch: Iterator iter = res . entries . iterator ( ) ; else * /
rank: 592
score: 99.17989095052083
patch: Iterator iter = set . entries . iterator ( ) ;
rank: 592
score: 99.16079566592262
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) this ) . iterator ( ) ;
rank: 592
score: 99.13463483537946
patch: Iterator iter = res . trim ( ) . entries ( ) ;
rank: 592
score: 99.11463341346153
patch: Iterator iter = ++ res . entries . iterator ( ) ;
rank: 592
score: 99.1014404296875
patch: Iterator iter = res . iterator ( ) ; int iter = 0 ;
rank: 593
score: 99.20850287543402
patch: if ( res == null ) Iterator iter = res . entries . iterator ( ) ;
rank: 593
score: 99.1607306985294
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) .
rank: 593
score: 99.13344319661458
patch: Iterator iter = res . data . size ( ) ;
rank: 593
score: 99.1202392578125
patch: public Iterator iter = res . entries . iterator ( ) ;
rank: 593
score: 99.11150653545673
patch: Collection < String > iter = res . entries ( ) ;
rank: 593
score: 99.10719651442308
patch: Iterator Iterator iter = v . entries . iterator ( ) ;
rank: 593
score: 99.10103352864583
patch: Iterator iter = res . size . iterator ( ) ;
rank: 594
score: 99.16055501302084
patch: Iterator < Integer > iter = v . entries . iterator ( ) ;
rank: 594
score: 99.11842698317308
patch: res . entries . iterator ( ) . iterator ( ) .
rank: 594
score: 99.10646275111607
patch: Iterator iter = res . gc . entries . iterator ( ) ;
rank: 595
score: 99.20807961856617
patch: Iterator < Integer > iter = res . entries ( ) . iter ( ) ;
rank: 595
score: 99.16041395399306
patch: for ( ) { Iterator iter = res . entries . entries . iterator ( ) ;
rank: 595
score: 99.13199869791667
patch: Object v = res . get CaMeL Dimension ( ) ;
rank: 595
score: 99.11837768554688
patch: long iter = res . entries . iterator ( ) ;
rank: 595
score: 99.11052997295673
patch: Iterator < ] > iter = res . clone ( ) ;
rank: 595
score: 99.1060791015625
patch: new Real CaMeL Vector ( v . get CaMeL Dimension ( ) ) ;
rank: 595
score: 99.10087076822917
patch: Iterator < Iterator < Integer > iter = res . iterator ( ) ;
rank: 596
score: 99.16000802176339
patch: for ( ) { res . set CaMeL Entry ( iter ) ;
rank: 596
score: 99.1287090594952
patch: final Iterator iter = res . get CaMeL Dimension ( ) ;
rank: 596
score: 99.11803260216347
patch: Iterator iter = res . entries . iter ( ) ; iter
rank: 596
score: 99.11372593470982
patch: Iterator iter = res . entries . iterator ( ) / $NUMBER$ ;
rank: 596
score: 99.110400390625
patch: synchronized ( res ) { Iterator iter = res . copy ( ) ;
rank: 596
score: 99.10598318917411
patch: Iterator iter = v . next ( ) . entries ( ) ;
rank: 596
score: 99.10010704627403
patch: res . res = res . get CaMeL Bytes ( ) ;
rank: 597
score: 99.20686170789931
patch: Iterator iter = res . entries ( ) . iterator ( ) ; else return null ;
rank: 597
score: 99.17745971679688
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ;
rank: 597
score: 99.16000511532738
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) { res . set CaMeL Entry (
rank: 597
score: 99.1278545673077
patch: final Iterator iter = res . has CaMeL Next ( ) ;
rank: 597
score: 99.11624849759616
patch: / * iter = res . entries . iterator ( ) ;
rank: 597
score: 99.10970365084134
patch: Iterator < ? : res . entries . iterator ( ) ;
rank: 597
score: 99.1048583984375
patch: Iterator iter = res . entries . iterator ( iter ) ;
rank: 598
score: 99.20642961774554
patch: final Iterator < String > iter = entries . iterator ( ) ;
rank: 598
score: 99.17657063802083
patch: Iterator iter = res . entries . entries ( ) . iterator ( )
rank: 598
score: 99.15974564985795
patch: Iterator iter = res . entries . to CaMeL Array ( Open CaMeL Map CaMeL Real CaMeL Vector . get CaMeL
rank: 598
score: 99.11561936598558
patch: res . iter = res . entries . iterator ( ) ;
rank: 598
score: 99.10779622395833
patch: synchronized ( res ) { Iterator iter = res . size ( ) ;
rank: 598
score: 99.09942072088069
patch: Iterator < res . entries . iterator ( ) ;
rank: 599
score: 99.2060546875
patch: Iterator < Runnable > iter = res . entries . iterator ( ) ;
rank: 599
score: 99.15541178385416
patch: res . iterator ( ) . iterator ( ) . next ( ) ;
rank: 599
score: 99.12757286658653
patch: Iterator ] iter = res . entries . iterator ( ) ;
rank: 599
score: 99.10775052584134
patch: Iterator $NUMBER$ ] = res . entries . iterator ( ) ;
rank: 599
score: 99.10340227399554
patch: Iterator iter = res . entries . index CaMeL Of ( ) ;
rank: 599
score: 99.09889573317308
patch: res . entries = res . list . entries ( ) ;
rank: 600
score: 99.1761474609375
patch: Iterator iter = v . entries . iterator ( ) ; *
rank: 600
score: 99.1595791903409
patch: Iterator iter . has CaMeL Next ( ) ; )
rank: 600
score: 99.12615497295673
patch: Iterator iter = ( Iterator ) res . size ( ) ;
rank: 600
score: 99.11500901442308
patch: Iterator iter = res . entries ( ) ; = $NUMBER$ ;
rank: 600
score: 99.11337076822916
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this )
rank: 600
score: 99.107177734375
patch: Iterator < / >> iter = res . entries ( ) ;
rank: 600
score: 99.09883939302884
patch: List < String > res = res . entries ( ) ;
rank: 601
score: 99.17510114397321
patch: Iterator iter = res . entries . size . iterator ( ) ;
rank: 601
score: 99.15500313895089
patch: Iterator iter = res . set . list . iterator ( ) ;
rank: 601
score: 99.11308070591518
patch: Iterator iter = res . entries . iterator ( ) : true ;
rank: 601
score: 99.10704345703125
patch: Iterator res = res . entries ( ) ;
rank: 601
score: 99.09952218191964
patch: Open CaMeL Map CaMeL Real CaMeL Vector . add ( res ) ;
rank: 601
score: 99.09728064903847
patch: Iterator < ? extends ) . has CaMeL Next ( ) ;
rank: 602
score: 99.20473807198661
patch: final Iterator < Object > iter = res . iterator ( ) ;
rank: 602
score: 99.12330979567308
patch: Iterator iter = this . entries . iterator ( ) ; }
rank: 602
score: 99.11405436197917
patch: Iterator iter = res . iterator . iter ( ) ;
rank: 602
score: 99.10667724609375
patch: Iterator iter = super . entries ( ) ;
rank: 603
score: 99.20458266314338
patch: Iterator iter = res . get CaMeL Classes ( ) . iterator ( ) ; else
rank: 603
score: 99.15352172851563
patch: Iterator iter = map . iterator ( ) ;
rank: 603
score: 99.11301832932692
patch: Iterator iter = res . entries ( ) ; iterator ++ ;
rank: 603
score: 99.09494253305289
patch: if ( res != null ) res . res = ) ;
rank: 604
score: 99.17432657877605
patch: int iter = this . entries . iterator ( ) ;
rank: 604
score: 99.15859840029762
patch: Iterator < String > iter = res . get CaMeL Dimension ( ) . entries . iterator ( ) ;
rank: 604
score: 99.11154610770089
patch: Iterator iter = res . entries . entries > iterator ( ) ;
rank: 604
score: 99.10628568209134
patch: Iterator iter = res [ null ] . entries ( ) ;
rank: 604
score: 99.0948016826923
patch: res . entries . iterator ( ) . next ( ) ;
rank: 605
score: 99.20445341222427
patch: Iterator < Iterator > iter = res . entries = res . iterator ( ) ;
rank: 605
score: 99.15841471354166
patch: Iterator < int + 1 : res . entries . iterator ( ) ;
rank: 605
score: 99.11199396306819
patch: Iterator iter = res . get ( null ) ;
rank: 606
score: 99.20408799913194
patch: synchronized ( res ) { Iterator iter = res . entries . iterator ( ) ; }
rank: 606
score: 99.17396763392857
patch: int iter = this . res . get CaMeL Dimension ( ) ;
rank: 606
score: 99.1215069110577
patch: Iterator ] res = res . entries . iterator ( ) ;
rank: 606
score: 99.10598520132211
patch: this . res . entries = res . entries ( ) ;
rank: 606
score: 99.09786783854166
patch: Iterator iter = v . entries . index CaMeL Of ( this ) ;
rank: 606
score: 99.09405517578125
patch: Iterator iter = res . iterator ( ) - 1 ;
rank: 607
score: 99.20363898026316
patch: Iterator iter = res . entries ( ) ; Iterator iter = res . entries ( ) ;
rank: 607
score: 99.17396763392857
patch: v . set CaMeL Entry ( iter . advance ( ) ) ;
rank: 607
score: 99.12081146240234
patch: Iterator iter = res . entries .
rank: 607
score: 99.11135629507211
patch: Iterator iter = res . entries . compare ( res ) ;
rank: 607
score: 99.1102294921875
patch: Iterator iter > entries = res . entries . iterator ( ) ;
rank: 607
score: 99.09740339006696
patch: Iterator iter = res . next ( ) . next ( ) ;
rank: 608
score: 99.1739501953125
patch: Iterator iter = this . res . size ( ) ;
rank: 608
score: 99.12052408854167
patch: Vector res = res . get CaMeL Dimension ( ) ;
rank: 608
score: 99.09237670898438
patch: Iterator iter = res . iterator ( ) ; * /
rank: 609
score: 99.1578369140625
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this . res . entries )
rank: 609
score: 99.14821079799107
patch: byte [ ] data = res . get CaMeL Data ( ) ;
rank: 609
score: 99.0909090909091
patch: Iterator iter = res . entries ( iterator ) ;
rank: 610
score: 99.20192464192708
patch: final Iterator < ) > iter = res . entries ( ) . iterator ( ) ;
rank: 610
score: 99.1577880859375
patch: Iterator iter = res . entries . iterator ( ) ; System . out . iterator ( ) ;
rank: 610
score: 99.11056753305289
patch: iterator = res . entries . entries . iterator ( ) ;
rank: 610
score: 99.09042593149039
patch: Iterator < ? extends ) : res . iterator ( ) ;
rank: 611
score: 99.10408841646634
patch: final int iterator = res . entries ( ) . length ;
rank: 611
score: 99.08992826021634
patch: if ( v != null ) res . res = v ;
rank: 612
score: 99.15728469122024
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . entries . entries ( ) ;
rank: 612
score: 99.14603097098214
patch: Disposer . Iterator iter = res . entries . iterator ( ) ;
rank: 612
score: 99.11043294270833
patch: Iterator iter = res . entries . matches ( ) ;
rank: 612
score: 99.08843524639423
patch: res . entries = res . entries . entries ( ) ;
rank: 613
score: 99.20151192801339
patch: Iterator iter = res . get ( ) . iter ( ) ;
rank: 613
score: 99.15723266601563
patch: for ( ) { res . set CaMeL Entry ( v . get CaMeL Entry ( ) ) ;
rank: 613
score: 99.11038912259616
patch: Iterator iter = res . entries . matches ( res ) ;
rank: 613
score: 99.10714285714286
patch: Iterator iter = Iterator . entries . entries . iterator ( ) ;
rank: 613
score: 99.10272686298077
patch: final int entries = res . entries . iterator ( ) ;
rank: 613
score: 99.08833821614583
patch: if ( res . entries != null ) return res ;
rank: 614
score: 99.20145357572116
patch: Iterator < ? > iter = entries . iterator ( ) ;
rank: 614
score: 99.16864885602679
patch: Iterator iter = this . res . length . iterator ( ) ;
rank: 614
score: 99.156982421875
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) v ) . iterator ( ) ;
rank: 614
score: 99.14533342633929
patch: res . set CaMeL Length ( res . size ( ) ) ;
rank: 614
score: 99.11575317382812
patch: Iterator iter = res . entries . max ( ) ;
rank: 614
score: 99.10994096235795
patch: Iterator iter = res . get ( false ) ;
rank: 614
score: 99.1070048014323
patch: Iterator iter = this . v . iterator ( ) ;
rank: 614
score: 99.09514508928571
patch: Iterator iter = res . FALSE . entries . iterator ( ) ;
rank: 614
score: 99.08692423502605
patch: Iterator iter = res . iterator . Iterator ( ) ;
rank: 615
score: 99.20098876953125
patch: Iterator < String > < String > iter = res . entries . iterator ( ) ;
rank: 615
score: 99.16782052176339
patch: Iterator iter = Iterator . entries ( ) . iterator ( ) ;
rank: 615
score: 99.15692429315476
patch: Iterator < Real CaMeL Vector == null ? null : res . entries . entries . iterator ( ) ;
rank: 615
score: 99.14444173177084
patch: Iterator iter ; Iterator iter = res . list . iterator ( ) ;
rank: 615
score: 99.11522420247395
patch: while ( entries . has CaMeL Next ( ) ) {
rank: 615
score: 99.10989145132211
patch: Iterator iter = res . entries . remove ( 0 ) ;
rank: 615
score: 99.10580008370536
patch: List iter = res . entries ( ) . iterator ( ) ;
rank: 615
score: 99.1026123046875
patch: Iterator iter = out . entries ( ) ;
rank: 615
score: 99.09486607142857
patch: Iterator iter = res . [ 1 ] . size ( ) ;
rank: 615
score: 99.0866229717548
patch: iter = res . entries ( ) . entries ( ) ;
rank: 616
score: 99.20097133091518
patch: if ( res != null ) return res . entries ( ) ;
rank: 616
score: 99.1564053622159
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( length ) ;
rank: 616
score: 99.1151874248798
patch: Iterator iter = res . . entries . size ( ) ;
rank: 616
score: 99.10985389122597
patch: Iterator < ) : res . entries . iterator ( ) ;
rank: 616
score: 99.08589993990384
patch: if ( res != null ) res . ) return res ;
rank: 617
score: 99.20068359375
patch: Iterator iter = res . entries ( ) ; return res ;
rank: 617
score: 99.16747174944196
patch: Iterator iter = v != null : res . iterator ( ) ;
rank: 617
score: 99.15638950892857
patch: synchronized ( res ) { res . set CaMeL Entry ( ) ;
rank: 617
score: 99.11507161458333
patch: Iterator iter = res . entries ) iterator ( ) ;
rank: 617
score: 99.10216413225446
patch: int iter = res . get CaMeL Classes ( ) . length ;
rank: 617
score: 99.09425659179688
patch: Iterator iter = res > size ( ) ;
rank: 617
score: 99.08589311079545
patch: res . entries = res . entries . length ;
rank: 618
score: 99.20057091346153
patch: final Object [ ] res = res . entries ( ) ;
rank: 618
score: 99.1561748798077
patch: for ( Real CaMeL Vector v : res . entries ) {
rank: 618
score: 99.11444561298077
patch: Iterator iter = v . entries . iterator ( ) ; {
rank: 618
score: 99.1094219501202
patch: } Iterator iter = res . entries . iterator ( ) ;
rank: 618
score: 99.101806640625
patch: Iterator iter = res . entries ( ) ; Entry ( $NUMBER$ ) ;
rank: 618
score: 99.0941162109375
patch: Iterator iter = res . entries . iterator ( $STRING$ ) ;
rank: 618
score: 99.08560884915866
patch: Iterator iter = res . iterator ( ) ; return res ;
rank: 619
score: 99.20046817555146
patch: Iterator < ? > iter = res . entries = res . iterator ( ) ;
rank: 619
score: 99.16727120535714
patch: Iterator iter = v . entries . length . iterator ( ) ;
rank: 619
score: 99.15616647820724
patch: Iterator < Class < ? > iter = res . entries . entries . iterator ( ) ;
rank: 619
score: 99.14080810546875
patch: Iterator iter = list . iterator ( ) . iterator ( ) ;
rank: 619
score: 99.10030110677083
patch: Iterator iter = res . map . entries ( ) ;
rank: 619
score: 99.09331403459821
patch: Iterator iter = $STRING$ . entries . entries . iterator ( ) ;
rank: 620
score: 99.20014784071181
patch: final Iterator < String > iterator = res . entries ( ) . iterator ( ) ;
rank: 620
score: 99.15611049107143
patch: Iterator iter = res [ ) . entries . iterator ( ) ;
rank: 620
score: 99.11338454026442
patch: Iterator iter = v . . entries . iterator ( ) ;
rank: 620
score: 99.10891488882211
patch: iter = this . res . entries . iterator ( ) ;
rank: 620
score: 99.10230601917614
patch: iter = res . get CaMeL Dimension ( ) ;
rank: 620
score: 99.09953090122768
patch: synchronized ( res ) { iter . add ( res ) ; }
rank: 620
score: 99.08482008713942
patch: Iterator iter = res . entries . iterator ( res ) ;
rank: 621
score: 99.19994178185097
patch: final Iterator iter = this . entries . iterator ( ) ;
rank: 621
score: 99.1083984375
patch: Iterator iter = res . iterator ( ) ; ) ;
rank: 621
score: 99.10190054086539
patch: Iterator iter = res . index CaMeL Of ( this ) ;
rank: 621
score: 99.09902518136161
patch: synchronized ( res ) { entries = res . entries ( ) ;
rank: 621
score: 99.09311349051339
patch: Iterator iter = res . add ( ) . iterator ( ) ;
rank: 622
score: 99.16647774832589
patch: Vector iter = res . entries ( ) . iterator ( ) ;
rank: 622
score: 99.11280314127605
patch: int res = iter . has CaMeL Next ( ) ;
rank: 622
score: 99.09889729817708
patch: boolean iter = res . entries . iterator ( ) ;
rank: 622
score: 99.0921161358173
patch: for ( iter = v . entries . iterator ( ) ;
rank: 622
score: 99.08432006835938
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 623
score: 99.16640799386161
patch: Iterator iter = entries . entries ( ) . size ( ) ;
rank: 623
score: 99.15555013020834
patch: Iterator iter = res . entries 1 ( ) . iterator ( ) ;
rank: 623
score: 99.11221923828126
patch: Iterator iter = res . [ 0 ] ;
rank: 623
score: 99.10719807942708
patch: Iterator iter = res . res . iter ( ) ;
rank: 623
score: 99.10015869140625
patch: Iterator iter = res = res . iterator ( ) ;
rank: 623
score: 99.09884878305289
patch: res . res = res . entries . iterator ( ) ;
rank: 623
score: 99.09162248883929
patch: Iterator iter = res . entries . format . iterator ( ) ;
rank: 623
score: 99.0838623046875
patch: Iterator < T > iter = v . iterator ( ) ;
rank: 624
score: 99.19766438802084
patch: Iterator < Enum > iter = res . entries . iterator ( ) ;
rank: 624
score: 99.155517578125
patch: if ( res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ) res . set CaMeL Entry ( ) ;
rank: 624
score: 99.13722581129808
patch: Iterator iter = res . list . iterator ( ) ; )
rank: 624
score: 99.1070556640625
patch: Iterator iter = res . entries . iter iterator ( ) ;
rank: 624
score: 99.08235677083333
patch: Object [ ] res = res . entries ( ) ;
rank: 625
score: 99.19764055524554
patch: if ( res != null ) res . remove ( res ) ;
rank: 625
score: 99.16635567801339
patch: Iterator iter = res . entries . entries ( ) ; for (
rank: 625
score: 99.15535481770833
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . res . entries ( ) ;
rank: 625
score: 99.13588460286458
patch: Iterator iter = res . set . iterator ( ) ;
rank: 625
score: 99.10648287259616
patch: Iterator iter = res . entries . reverse ( res ) ;
rank: 625
score: 99.09109933035714
patch: Iterator iter = res . close ( ) . entries ( ) ;
rank: 625
score: 99.08197576349431
patch: Iterator iter = v . entries ( ) ; ;
rank: 626
score: 99.19759328741776
patch: Iterator < Iterator < Object > iter = res . entries ( ) . iterator ( ) ;
rank: 626
score: 99.15499674479166
patch: if ( res . iterator ( ) . has CaMeL Next ( ) )
rank: 626
score: 99.1357421875
patch: Iterator iter = res . get ( this ) . iterator ( ) ;
rank: 626
score: 99.09676106770833
patch: res . entries . add ( res . entries ) ;
rank: 626
score: 99.09078275240384
patch: Iterator iter = res . entries v . iterator ( ) ;
rank: 626
score: 99.0804776278409
patch: Iterator iter = v ) . iterator ( ) ;
rank: 627
score: 99.15482875279018
patch: if ( res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ) {
rank: 627
score: 99.10975999098558
patch: iter . advance ( ) ; iter . advance ( ) ;
rank: 627
score: 99.09638006036931
patch: Iterator = res . entries . iterator ( ) ;
rank: 627
score: 99.0907733623798
patch: Iterator iter advance = v . entries . iterator ( ) ;
rank: 627
score: 99.07938639322917
patch: if ( res . entries == null ) return res ;
rank: 628
score: 99.16592407226562
patch: Iterator iter = v != null . iterator ( ) ;
rank: 628
score: 99.15361585115132
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . index CaMeL Of (
rank: 628
score: 99.08892822265625
patch: int iterator = res . get CaMeL Dimension ( ) ;
rank: 628
score: 99.07772827148438
patch: Iterator iter = res . iterator ( ) ( ) ;
rank: 629
score: 99.15346808182566
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . entries .
rank: 629
score: 99.10855102539062
patch: Iterator iter = res . SIZE . iterator ( ) ;
rank: 629
score: 99.10444946289063
patch: Iterator iter = res . get ( ) ;
rank: 629
score: 99.09667154947917
patch: Iterator iter = res . entries . iterator ( ) ; * - 1
rank: 629
score: 99.09588623046875
patch: Collection [ ] entries = res . entries ( ) ;
rank: 629
score: 99.07735501802884
patch: Iterator < ) > iter = res . entries ( ) ;
rank: 630
score: 99.19695366753473
patch: Iterator < String > iter = res . entries ( ) . iterator ( ) ; else
rank: 630
score: 99.1333477313702
patch: try { iter = res . entries . iterator ( ) ;
rank: 630
score: 99.1085205078125
patch: if ( res != null ) res . advance ( ) ;
rank: 630
score: 99.10360952524039
patch: iter else iter = res . entries . iterator ( ) ;
rank: 630
score: 99.09588623046875
patch: List [ ] res = res . entries ( ) ;
rank: 630
score: 99.08577473958333
patch: Iterator iter = res . iter . size ( ) ;
rank: 631
score: 99.19675990513393
patch: int [ ] iterator = res . entries . iterator ( ) ;
rank: 631
score: 99.16396658761161
patch: Iterator iter = iter . entries ( ) . size ( ) ;
rank: 631
score: 99.10848294771634
patch: final Iterator iter = entries . entries . iterator ( ) ;
rank: 631
score: 99.09579264322916
patch: Iterator iter = res . entries ( ) ; Iterator iter = false ;
rank: 631
score: 99.08507361778847
patch: Iterator iter = res . entries . iterator ( v ) ;
rank: 631
score: 99.075927734375
patch: Iterator < Serializable > iter = res . iterator ( ) ;
rank: 632
score: 99.16361781529018
patch: Iterator iter = res [ 0 0 ] . iterator ( ) ;
rank: 632
score: 99.152880859375
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this ) {
rank: 632
score: 99.13216458834134
patch: dim . entries = res . entries . iterator ( ) ;
rank: 632
score: 99.10050142728366
patch: Iterator iter = iterator ( res . entries ( ) ) ;
rank: 632
score: 99.09563337053571
patch: Iterator iter = res . entries . iterator ( ) : false ;
rank: 632
score: 99.0955810546875
patch: Iterator iter = res . entries ( ) ; else {
rank: 632
score: 99.0838623046875
patch: Vector iter = v . entries . iterator ( ) ;
rank: 632
score: 99.07572428385417
patch: Iterator iter = res . iterator ( ) ; else {
rank: 633
score: 99.16342599051339
patch: Iterator iter = res != null : iter . iterator ( ) ;
rank: 633
score: 99.15282264122597
patch: Iterator iter = ! v . entries . iterator ( ) ;
rank: 633
score: 99.10732014973958
patch: long value = v . get CaMeL Dimension ( ) ;
rank: 633
score: 99.10045447716347
patch: Iterator < Class > iter = res . iterator ( ) ;
rank: 633
score: 99.08349609375
patch: Iterator iter = res . index CaMeL Of ( - 1 ) ;
rank: 633
score: 99.07534790039062
patch: res . Iterator iter = v . iterator ( ) ;
rank: 634
score: 99.1956035907452
patch: final Iterator iter = res . name . iterator ( ) ;
rank: 634
score: 99.1527587890625
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) . advance ( ) ;
rank: 634
score: 99.10667067307692
patch: while ( v . has CaMeL Next ( ) ) { {
rank: 634
score: 99.09447224934895
patch: / * ] entries = res . entries ( ) ;
rank: 635
score: 99.19546329273896
patch: Iterator < String > iter = res . entries . iterator ( ) - 1 ;
rank: 635
score: 99.16204364483173
patch: Iterator iter = v [ 0 ] . iterator ( ) ;
rank: 635
score: 99.10638897235577
patch: int iter = res . get CaMeL Dimension ( iter ) ;
rank: 635
score: 99.09939340444711
patch: Iterator iter iterator = res . entries . iter ( ) ;
rank: 635
score: 99.07491361177884
patch: Iterator < Throwable > iter = res . iterator ( ) ;
rank: 636
score: 99.19466145833333
patch: Iterator iter = res . get . ( ) . entries ( ) ;
rank: 636
score: 99.16189139229911
patch: Iterator iter = res . entries . get CaMeL Dimension ( ) ;
rank: 636
score: 99.15270414806548
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . get CaMeL Dimension ( ) .
rank: 636
score: 99.09874549278847
patch: Iterator < void > iter = res . iterator ( ) ;
rank: 637
score: 99.194580078125
patch: Iterator < ? > iter = res . entries = res . entries ( ) ;
rank: 637
score: 99.1525943153783
patch: Iterator < while . has CaMeL Next ( ) ; ) { iter . advance ( ) ;
rank: 637
score: 99.09749348958333
patch: Iterator iter = res . get CaMeL Row ( ) ;
rank: 637
score: 99.093603515625
patch: Iterator iter = res . get CaMeL Dimension ( ) . entries ( )
rank: 637
score: 99.0907694498698
patch: int iter = res . value . iterator ( ) ;
rank: 637
score: 99.07414106889205
patch: Iterator Iterator iter = v . iterator ( ) ;
rank: 638
score: 99.15241241455078
patch: for ( int ) { iter = res . entries . iterator ( ) ;
rank: 638
score: 99.12734549386161
patch: Iterator iter = res . list . list . iterator ( ) ;
rank: 638
score: 99.09744262695312
patch: Iterator iterator = res . entries . entries ( ) ;
rank: 638
score: 99.0740966796875
patch: if ( res . size ( ) > 0 )
rank: 639
score: 99.19367133246527
patch: final synchronized ( res ) { iter = res . entries . iterator ( ) ; }
rank: 639
score: 99.16110665457589
patch: Iterator iter = res . [ 1 ] . iterator ( ) ;
rank: 639
score: 99.097412109375
patch: Iterator iter . Iterator iter = res . iterator ( ) ;
rank: 639
score: 99.08992513020833
patch: Collection [ ] res = res . entries ( ) ;
rank: 639
score: 99.07350463867188
patch: List res = res . entries ( ) ;
rank: 640
score: 99.15200805664062
patch: Iterator iter = res != null ? res . entries . entries . iterator ( ) : null ;
rank: 640
score: 99.0967266376202
patch: * Iterator iter = res . entries . iterator ( ) ;
rank: 640
score: 99.08973999023438
patch: int iter = res . entries . length ;
rank: 640
score: 99.07712965745192
patch: Iterator iter = res . entries . iterator iter ( ) ;
rank: 640
score: 99.0733173076923
patch: Iterator iter = res . iterator ( ) ; 0 ++ ;
rank: 641
score: 99.19344075520833
patch: final Iterator < int > iter = res . entries ( ) . iterator ( ) ;
rank: 641
score: 99.16104561941964
patch: Iterator iter = res , iterator = res . iterator ( ) ;
rank: 641
score: 99.15182059151786
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res . entries ( ) ;
rank: 641
score: 99.10435180664062
patch: Iterator iter = res . advance ( ) ;
rank: 641
score: 99.09567260742188
patch: iter iterator = res . entries . iterator ( ) ;
rank: 641
score: 99.08961838942308
patch: Iterator iter = res . entries ( ) ; case $NUMBER$ :
rank: 641
score: 99.08915492466518
patch: int iterator = res . get CaMeL Dimension ( ) . length ;
rank: 641
score: 99.07450358072917
patch: int size = v . entries . size ( ) ;
rank: 642
score: 99.15133231026786
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) v . iterator ( ) ) ;
rank: 642
score: 99.0934589092548
patch: protected Iterator iter = res . entries . iterator ( ) ;
rank: 642
score: 99.08936564127605
patch: res . load ( res . entries ( ) ) ;
rank: 643
score: 99.19240897042411
patch: final Iterator < String > iter = res . size ( ) ;
rank: 643
score: 99.15106491815476
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( (
rank: 643
score: 99.10367838541667
patch: final iter = res . entries . iterator ( ) ;
rank: 643
score: 99.0932147686298
patch: Iterator iter = ( Iterator ) entries . entries ( ) ;
rank: 643
score: 99.08881225585938
patch: Collection entries = res . entries ( ) ;
rank: 643
score: 99.08793131510417
patch: Iterator iter = res . entries >> iterator ( ) ;
rank: 643
score: 99.07249098557692
patch: Iterator < String > iter = v . entries ( ) ;
rank: 644
score: 99.15744454520089
patch: Iterator iter = res . get CaMeL Dimension . iterator ( ) ;
rank: 644
score: 99.15100969587054
patch: Iterator iter && res . entries . entries . iterator ( ) ;
rank: 644
score: 99.10191853841145
patch: if ( iter . has CaMeL Next ( ) ) {
rank: 644
score: 99.08875528971355
patch: Iterator iter = res . in . entries ( ) ;
rank: 645
score: 99.15608433314732
patch: res . set CaMeL Entry ( get CaMeL Entry ( ) ) ;
rank: 645
score: 99.15047200520833
patch: Iterator iter = res . entries . length ; while ( iter . has CaMeL Next ( ) ) {
rank: 645
score: 99.12222726004464
patch: Iterator iterator = res . list ( ) . iterator ( ) ;
rank: 645
score: 99.10092163085938
patch: Iterator iter = iterator . has CaMeL Next ( ) ;
rank: 645
score: 99.09279221754808
patch: Iterator iter = res . entries ( ) ; ) / /
rank: 645
score: 99.08859252929688
patch: / * ] iter = res . entries ( ) ;
rank: 645
score: 99.07193697415866
patch: List < ? > iter = res . entries ( ) ;
rank: 646
score: 99.19185965401786
patch: Iterator iter = res . get CaMeL Value . iterator ( ) ;
rank: 646
score: 99.0914815266927
patch: Iterator iter = res . remove . iterator ( ) ;
rank: 646
score: 99.08822866586539
patch: Vector < String > entries = res . entries ( ) ;
rank: 646
score: 99.08639962332589
patch: Iterator iter = v . get CaMeL Dimension ( ) . length ;
rank: 646
score: 99.0700350674716
patch: Iterator iter = v . iterator ( res ) ;
rank: 647
score: 99.14991396949405
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . index CaMeL Of ( ) ;
rank: 647
score: 99.12109375
patch: iter = res . list . list . iterator ( ) ;
rank: 647
score: 99.09958902994792
patch: List res = res . get CaMeL Dimension ( ) ;
rank: 648
score: 99.12062424879808
patch: Iterator iter = v . list . iterator ( ) ; ;
rank: 648
score: 99.0904541015625
patch: Iterator iter . += res . entries . iterator ( ) ;
rank: 648
score: 99.08800252278645
patch: Iterator iterator = res . entries . size ( ) ;
rank: 648
score: 99.0721435546875
patch: Iterator iter = res . get CaMeL Type ( ) . length ;
rank: 648
score: 99.0685565655048
patch: res . entries = res . hash CaMeL Code ( ) ;
rank: 649
score: 99.19131905691964
patch: final Iterator < Object > entries = res . entries ( ) ;
rank: 649
score: 99.15423583984375
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( res , this ) ;
rank: 649
score: 99.14982386997768
patch: Iterator iter = super . entries . entries . iterator ( ) ;
rank: 649
score: 99.09002216045673
patch: Iterator iter = res . entries . iter ( ) ; Iterator
rank: 649
score: 99.08761831430289
patch: Iterator < ] >> entries = res . entries ( ) ;
rank: 649
score: 99.08457438151042
patch: int entries = res . get CaMeL Dimension ( ) ;
rank: 649
score: 99.0681864420573
patch: Set res = res . entries . iterator ( ) ;
rank: 650
score: 99.15412248883929
patch: Iterator iter = res . entries . iter ( ) ; for (
rank: 650
score: 99.08986253004808
patch: Iterator < Entry > iter = res . size ( ) ;
rank: 650
score: 99.08603140024039
patch: / * ; Iterator iter = res . entries ( ) ;
rank: 650
score: 99.0813700358073
patch: Iterator iter += v . entries . iterator ( ) ;
rank: 650
score: 99.07142857142857
patch: Iterator iter = res . intern ( ) . entries ( ) ;
rank: 651
score: 99.19029017857143
patch: Iterator iter = entries . iterator ( ) . iterator ( ) ;
rank: 651
score: 99.11711774553571
patch: Iterator iter = v . get . entries . iterator ( ) ;
rank: 651
score: 99.0896708170573
patch: Iterator iter = res . entries . reverse ( ) ;
rank: 651
score: 99.080810546875
patch: Iterator iter = res : res . iterator ( ) ;
rank: 652
score: 99.15302385602679
patch: Iterator iter = res == null : iter . iterator ( ) ;
rank: 652
score: 99.1491763466283
patch: Iterator while ( res . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 652
score: 99.09639798677884
patch: Iterator iter = res . has CaMeL Next ( ) ; ;
rank: 652
score: 99.0895284016927
patch: Iterator iter = res . iterator ( ) ; ) {
rank: 652
score: 99.08034261067708
patch: Iterator entries = this . entries . iterator ( ) ;
rank: 652
score: 99.0697772686298
patch: Vector Iterator iter = res . entries . iterator ( ) ;
rank: 653
score: 99.18988444010417
patch: Iterator < Iterator > iter = res . entries . entries ( ) ;
rank: 653
score: 99.14845377604166
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = false ;
rank: 653
score: 99.1157470703125
patch: int size = res . size ( ) ;
rank: 653
score: 99.09619140625
patch: int iter = entries . entries . iterator ( ) ;
rank: 653
score: 99.08924357096355
patch: Iterator iter . iterator ( ) . iterator ( ) ;
rank: 653
score: 99.0851299579327
patch: for ( String res : res . entries ( ) ) {
rank: 654
score: 99.18987165178571
patch: Iterator iter = get . entries ( ) . iterator ( ) ;
rank: 654
score: 99.15127999441964
patch: Iterator ( res . entries ( ) ) . iterator ( ) ;
rank: 654
score: 99.1136474609375
patch: res . iterator ( ) . has CaMeL Next ( ) ;
rank: 654
score: 99.09609985351562
patch: Iterator iter = res . [ 1 ] ;
rank: 654
score: 99.0844482421875
patch: Iterator iter = value . entries ( ) ;
rank: 654
score: 99.07790701729911
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector >
rank: 654
score: 99.06557992788461
patch: res . ; Iterator iter = res . iterator ( ) ;
rank: 655
score: 99.15103853665866
patch: Iterator iter = res [ 0 ] . entries ( ) ;
rank: 655
score: 99.08437093098958
patch: Iterator iter = res . value . entries ( ) ;
rank: 655
score: 99.0773037997159
patch: iter = v . entries . iterator ( ) ;
rank: 655
score: 99.06531700721153
patch: if ( res != null && res . res != null )
rank: 656
score: 99.18935818142361
patch: Iterator < Object > < String > iter = res . entries . iterator ( ) ;
rank: 656
score: 99.15079171316964
patch: Iterator iter = entries . entries ( ) . entries ( ) ;
rank: 656
score: 99.11050415039062
patch: List list = res . entries . size ( ) ;
rank: 656
score: 99.09482046274039
patch: Iterator < Real CaMeL Vector > iter = res . entries .
rank: 656
score: 99.0859375
patch: Iterator iter = res . next . entries ( ) ;
rank: 656
score: 99.08365885416667
patch: List [ ] iter = res . entries ( ) ;
rank: 656
score: 99.06846266526442
patch: Iterator iter = res . entries . size ( ) ) ;
rank: 657
score: 99.1503436748798
patch: Iterator iter = res . entries ( ) [ 0 ] ;
rank: 657
score: 99.08358764648438
patch: Iterator iter = res . entries ( ) ; ) {
rank: 657
score: 99.06845092773438
patch: int length = v . get CaMeL Dimension ( ) ;
rank: 658
score: 99.08301720252403
patch: Iterator < T > iterator = res . entries ( ) ;
rank: 658
score: 99.06630295973558
patch: Iterator iter = v . entries entries . iterator ( ) ;
rank: 658
score: 99.0623779296875
patch: List res = res . entries . list ( ) ;
rank: 659
score: 99.18881064967105
patch: Iterator iter = res . get ( ) . entries ( ) . iterator ( ) ; }
rank: 659
score: 99.14985874720982
patch: Iterator iter = res == null . get CaMeL Dimension ( ) ;
rank: 659
score: 99.0829833984375
patch: int iter = res . iterator ( ) ;
rank: 660
score: 99.18876378676471
patch: Iterator iter = res . entries ( ) . iterator ( ) ; return res ;
rank: 660
score: 99.0931865985577
patch: while ( iter . has CaMeL Next ( ) ) { {
rank: 660
score: 99.08514873798077
patch: Iterator < ? > iter = res . size ( ) ;
rank: 660
score: 99.08251014122597
patch: Iterator < E > iterator = res . entries ( ) ;
rank: 660
score: 99.0745849609375
patch: Iterator iter = this . entries . iter ( ) ;
rank: 660
score: 99.06235758463542
patch: List res = res . entries . size ( ) ;
rank: 660
score: 99.06138258713942
patch: Iterator < String > iterator = res . iterator ( ) ;
rank: 661
score: 99.18812962582237
patch: Iterator iter = res . get ( ) . entries ( ) . iterator ( ) ; else
rank: 661
score: 99.14563666449652
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) { else
rank: 661
score: 99.08512369791667
patch: Iterator iter = res . entries . Short ( ) ;
rank: 661
score: 99.08128004807692
patch: Iterator < E > entries = res . entries ( ) ;
rank: 661
score: 99.0743408203125
patch: Object [ ] res = res . get CaMeL Dimension ( ) ;
rank: 662
score: 99.09224759615384
patch: Iterator iter = res . entries . Iterator ( this ) ;
rank: 662
score: 99.0809326171875
patch: Iterator < String > iter = res . list ( ) ;
rank: 662
score: 99.06055797230114
patch: Iterator iter = res . entries ( ) ; )
rank: 663
score: 99.14508819580078
patch: Iterator iter = false ; while ( iter . has CaMeL Next ( ) )
rank: 663
score: 99.10292561848958
patch: Iterator iter = map . list . iterator ( ) ;
rank: 663
score: 99.09219125600961
patch: Iterator res = res . entries . iterator ( ) ; ;
rank: 663
score: 99.0849609375
patch: Iterator iter = res . entries . visit ( res ) ;
rank: 663
score: 99.08034261067708
patch: Iterator iter = res . entries $NUMBER$ iterator ( ) ;
rank: 664
score: 99.14711350661058
patch: Iterator iter > = res . entries . iterator ( ) ;
rank: 664
score: 99.14503389246323
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries )
rank: 664
score: 99.09900919596355
patch: Iterator iter = res . get . size ( ) ;
rank: 664
score: 99.05936686197917
patch: Set entries = res . get CaMeL Entries ( ) ;
rank: 665
score: 99.09005737304688
patch: Object res = res . get CaMeL Entry ( ) ;
rank: 665
score: 99.08433024088542
patch: Iterator iter = res . entries . interrupt ( ) ;
rank: 665
score: 99.07939009232955
patch: iter = res . map . iterator ( ) ;
rank: 665
score: 99.06067911783855
patch: Iterator iter = res . entries . index CaMeL Of (
rank: 665
score: 99.05869704026442
patch: Iterator < ? >> iter = res . iterator ( ) ;
rank: 666
score: 99.08920522836539
patch: Iterator iter = res . index CaMeL Of ( null ) ;
rank: 666
score: 99.08251953125
patch: Iterator < Entry > iter = res . next ( ) ;
rank: 666
score: 99.0792705829327
patch: Iterator < T > entries = res . entries ( ) ;
rank: 666
score: 99.05979410807292
patch: int iter = v . entries . size ( ) ;
rank: 667
score: 99.14395845853366
patch: Iterator iter = res . entries . iterator ( length ) ;
rank: 667
score: 99.08826622596153
patch: Iterator < Entry = v . entries . iterator ( ) ;
rank: 667
score: 99.08182466947116
patch: Iterator iter = res . entries . entries ( ) ; ;
rank: 667
score: 99.07815551757812
patch: Iterator iter = res . copy . iterator ( ) ;
rank: 667
score: 99.05718994140625
patch: Iterator iter = res . Iterator . iterator ( ) ;
rank: 668
score: 99.18455287388393
patch: int size = res . entries . iterator ( ) . length ;
rank: 668
score: 99.0865234375
patch: iter . has CaMeL Next ( ) ; {
rank: 668
score: 99.08173076923077
patch: Iterator iter = copy ( res . entries ( ) ) ;
rank: 668
score: 99.077880859375
patch: final int iter . iterator ( ) . iterator ( ) ;
rank: 668
score: 99.05698805588942
patch: Iterator iter = v . iterator ( . iterator ( ) ;
rank: 669
score: 99.14368960731908
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . next ( ) ;
rank: 669
score: 99.09232271634616
patch: if ( res . entries . size ( ) == 0 )
rank: 669
score: 99.08610026041667
patch: List res = v . entries . iterator ( ) ;
rank: 669
score: 99.0816317471591
patch: Iterator iter = res . iterator ( ) ; iterator
rank: 669
score: 99.07745361328125
patch: int iter = res . map . iterator ( ) ;
rank: 669
score: 99.05648193359374
patch: Set res = res . entries ( ) ;
rank: 670
score: 99.18439041940789
patch: Iterator iter = res . get ( ) . entries ( ) . iterator ( ) ) ;
rank: 670
score: 99.14358084542411
patch: if ( iter . has CaMeL Next ( ) ) return res ;
rank: 670
score: 99.1435791015625
patch: Iterator < Object > iter = this . entries . iterator ( ) ;
rank: 670
score: 99.09216918945313
patch: res . set CaMeL Length ( 0 ) ;
rank: 670
score: 99.0858154296875
patch: List iter = res . entries . size ( ) ;
rank: 670
score: 99.08046468098958
patch: res . add ( res . entries ( ) ) ;
rank: 670
score: 99.07740478515625
patch: res . entries . add ( res ) ;
rank: 670
score: 99.05594576322116
patch: List < Integer > iter = res . entries ( ) ;
rank: 671
score: 99.18431678185097
patch: Iterator < ? > entries = res . entries ( ) ;
rank: 671
score: 99.14338902064732
patch: Real CaMeL Vector res = new Real CaMeL Vector ( res ) ;
rank: 671
score: 99.09207153320312
patch: Iterator list = res . list . iterator ( ) ;
rank: 671
score: 99.0856464092548
patch: Iterator iter = res . get CaMeL Dimension ( ) ) ;
rank: 671
score: 99.08026123046875
patch: Enumeration iter = res . entries . entries ( ) ;
rank: 671
score: 99.0762430826823
patch: Integer iter = res . entries . iterator ( ) ;
rank: 672
score: 99.14292399088542
patch: Iterator iter = res . entries . iterator ( ) ; iter . advance ( ) ;
rank: 672
score: 99.08017202524039
patch: Iterator iter = load ( res . entries ( ) ) ;
rank: 672
score: 99.07621256510417
patch: Iterator < ? ] : res . entries ( ) ;
rank: 672
score: 99.05524151141827
patch: Iterator iter = res . iterator ( ) ; - 1 ;
rank: 673
score: 99.18357496995192
patch: final Iterator iter = data . entries . iterator ( ) ;
rank: 673
score: 99.08892822265625
patch: int entries = res . entries . size ( ) ;
rank: 673
score: 99.08359781901042
patch: int v = iter . has CaMeL Next ( ) ;
rank: 673
score: 99.07994666466347
patch: Iterator iter = res . entries . split ( res ) ;
rank: 673
score: 99.05011455829327
patch: Iterator iter = res . entries . entries . ( ) ;
rank: 674
score: 99.14243678042763
patch: Iterator iter = res . entries [ 1 ] . entries ( ) . iterator ( ) ;
rank: 674
score: 99.14150565011161
patch: Real CaMeL Vector res = res . get CaMeL Entry ( ) ;
rank: 674
score: 99.08653675426136
patch: size = res . entries . size ( ) ;
rank: 674
score: 99.08087627704327
patch: iter . Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 674
score: 99.0682373046875
patch: Iterator iter list = res . entries . iterator ( ) ;
rank: 674
score: 99.05442457932692
patch: Iterator iter = res . iterator ( ) ; int ) ;
rank: 674
score: 99.0499979654948
patch: List iter = v . entries . iterator ( ) ;
rank: 675
score: 99.18311225043402
patch: final Iterator < String > iter = res . entries ( ) . iter ( ) ;
rank: 675
score: 99.1414859169408
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) this ) . entries .
rank: 675
score: 99.08606896033653
patch: res . list = res . entries . iterator ( ) ;
rank: 675
score: 99.07965557391827
patch: Iterator iter = res . entries . load ( res ) ;
rank: 675
score: 99.05382361778847
patch: Iterator iter = res . iterator ( ) ; while ( ;
rank: 675
score: 99.04983285757211
patch: iter = v . entries ( ) . iterator ( ) ;
rank: 676
score: 99.18270534939236
patch: final Iterator < Throwable > iter = res . entries ( ) . iterator ( ) ;
rank: 676
score: 99.1408935546875
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : v ) {
rank: 676
score: 99.08579664963942
patch: Iterator iter 0 = res . entries . iterator ( ) ;
rank: 676
score: 99.08024088541667
patch: Iterator iter = res . advance . iterator ( ) ;
rank: 676
score: 99.0787823016827
patch: Iterator iter = res . iterator ( ) ; iter ++ ;
rank: 676
score: 99.07517653245192
patch: Iterator < T >> iter = res . entries ( ) ;
rank: 676
score: 99.05355834960938
patch: int iter = res . size ( ) ;
rank: 677
score: 99.140625
patch: Iterator iter && res . entries ( ) . iterator ( ) ;
rank: 677
score: 99.05284534801136
patch: Iterator iter = v . iterator ( ) ; else
rank: 677
score: 99.04507446289062
patch: Iterator entries = res . entries . size ( ) ;
rank: 678
score: 99.1403744346217
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries , res ) {
rank: 678
score: 99.13669996995192
patch: Iterator iter = res [ 0 ] . size ( ) ;
rank: 678
score: 99.08466045673077
patch: Iterator iter = res . list . iterator ( 0 ) ;
rank: 678
score: 99.07968139648438
patch: Iterator iter = entries . iterator ( ) ; ) {
rank: 678
score: 99.07864379882812
patch: Iterator iter = get . entries . iterator ( ) ;
rank: 678
score: 99.07389009915866
patch: Iterator iter = res . entries . get ( null ) ;
rank: 678
score: 99.06678263346355
patch: Iterator iter = start . entries . iterator ( ) ;
rank: 678
score: 99.0525371844952
patch: Iterator iter = v . iterator . iterator ( ) ; ;
rank: 678
score: 99.0439922626202
patch: Iterator iter = -- res . entries . iterator ( ) ;
rank: 679
score: 99.14035516036184
patch: Iterator < String > iter = res . entries ( ) . entries . iterator ( ) ;
rank: 679
score: 99.0837910970052
patch: long size = res . entries . size ( ) ;
rank: 679
score: 99.07907936789773
patch: Iterator iter = res . contains ( 0 ) ;
rank: 679
score: 99.07784016927083
patch: entries . Iterator iter = res . entries ( ) ;
rank: 679
score: 99.07381184895833
patch: Iterator * ] iterator = res . entries ( ) ;
rank: 679
score: 99.06670270647321
patch: Iterator iter = res . entries . iterator ( ) ; / 1
rank: 679
score: 99.05196439302884
patch: if ( v . entries . size ( ) > 0 )
rank: 679
score: 99.04356032151442
patch: Iterator iter = res . entries . -- iterator ( ) ;
rank: 680
score: 99.13340407151442
patch: Iterator iter = . entries ( ) . iterator ( ) ;
rank: 680
score: 99.0774434407552
patch: Iterator iter = res . entries . capacity ( ) ;
rank: 680
score: 99.07273559570312
patch: Iterator iter : res . entries ( ) ;
rank: 680
score: 99.05178598257211
patch: Iterator < Short > iter = res . iterator ( ) ;
rank: 681
score: 99.13922526041667
patch: if ( res != null ) res . set CaMeL Entry ( ) ;
rank: 681
score: 99.07818603515625
patch: Iterator iter = v . entries . Iterator ( ) ;
rank: 681
score: 99.0773417154948
patch: Iter iter = res . entries . iterator ( ) ;
rank: 681
score: 99.0726318359375
patch: Iterator < String : res . entries ( ) ;
rank: 681
score: 99.06471470424107
patch: Iterator iter = v . get CaMeL Dimension ( ) . entries ;
rank: 681
score: 99.05174842247597
patch: Iterator iter = res . entries ( . iterator ( ) ;
rank: 682
score: 99.17994103064903
patch: Iterator < Iterator > iter = entries . iterator ( ) ;
rank: 682
score: 99.07718599759616
patch: int iter = res . entries . iterator ( ) ; ;
rank: 682
score: 99.07173665364583
patch: List [ ] entries = res . entries ( ) ;
rank: 682
score: 99.05136343149039
patch: try { Iterator iter = res . iterator ( ) ; ;
rank: 683
score: 99.06900634765626
patch: Collection list = res . entries ( ) ;
rank: 683
score: 99.05106295072116
patch: Iterator < Long > iter = res . iterator ( ) ;
rank: 684
score: 99.17880483774039
patch: Iterator < int > iter = res . size ( ) ;
rank: 684
score: 99.07659912109375
patch: Iterator iter = data . entries . iter ( ) ;
rank: 684
score: 99.06661987304688
patch: Iterator iter = exp . entries . iterator ( ) ;
rank: 684
score: 99.04069380326705
patch: Iterator iter = res . contains ( $STRING$ ) ;
rank: 685
score: 99.13829888237848
patch: for ( while ( res . iterator ( ) . has CaMeL Next ( ) ) {
rank: 685
score: 99.0762227376302
patch: Iterator iter = res . . . iterator ( ) ;
rank: 685
score: 99.07539876302083
patch: int res = res . entries . iterator ( ) ;
rank: 685
score: 99.06589762369792
patch: Iterator value = res . entries . iterator ( ) ;
rank: 685
score: 99.0613544170673
patch: Iterator iter = v . entries . iterator ( ) 1 ;
rank: 685
score: 99.05037434895833
patch: Iterator iter = res . list . entries ( ) ;
rank: 685
score: 99.04063831676136
patch: Iterator iter = res . add ( this ) ;
rank: 686
score: 99.13822428385417
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries . entries )
rank: 686
score: 99.07768110795455
patch: list = res . entries . iterator ( ) ;
rank: 686
score: 99.0760986328125
patch: Iterator iter = entries . next ( ) ;
rank: 686
score: 99.06526489257813
patch: Iterator iter = map . entries ( ) ;
rank: 686
score: 99.04744466145833
patch: try { Iterator iter = v . entries ( ) ;
rank: 687
score: 99.17702073317308
patch: final Object [ ] entries = res . entries ( ) ;
rank: 687
score: 99.0703633626302
patch: Iterator iter = res . get CaMeL Value ( ) .
rank: 687
score: 99.0640869140625
patch: res . entries = res . entries iterator ( ) ;
rank: 687
score: 99.05922444661458
patch: Iterator iter = res = entries . iterator ( ) ;
rank: 687
score: 99.04717462713069
patch: Iterator < ) : res . iterator ( ) ;
rank: 688
score: 99.13783174402573
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries .
rank: 688
score: 99.07021077473958
patch: Iterator iter = res . name . size ( ) ;
rank: 688
score: 99.06397501627605
patch: Iterator iter = res . entries ( ) ; * /
rank: 688
score: 99.0395174893466
patch: Iterator iter = res . entries iter ( ) ;
rank: 689
score: 99.07264200846355
patch: Iterator iter = res . clone . iterator ( ) ;
rank: 689
score: 99.07005818684895
patch: Iterator iter = v . entries . next ( ) ;
rank: 689
score: 99.06267841045673
patch: Iterator < Short > iter = res . entries ( ) ;
rank: 689
score: 99.04593912760417
patch: List res = res . list . entries ( ) ;
rank: 690
score: 99.07135009765625
patch: m iter = res . entries . iterator ( ) ;
rank: 690
score: 99.07097833806819
patch: Iterator iter = res . entries ( ) ; .
rank: 690
score: 99.06215598366477
patch: Iterator iter = res . entries = ( ) ;
rank: 690
score: 99.04582075639205
patch: Iterator iter = v . iterator ( ) ; )
rank: 691
score: 99.07000732421875
patch: Iterator iter = res . iter . iter ( ) ;
rank: 691
score: 99.045068359375
patch: Iterator iterator = v . entries ( ) ;
rank: 692
score: 99.17613002232143
patch: final Iterator iter = res . entries . iterator ( ) ) ;
rank: 692
score: 99.13739885602679
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v )
rank: 692
score: 99.0690205891927
patch: Iterator map = res . entries . iterator ( ) ;
rank: 692
score: 99.0687255859375
patch: Iterator iter = res . sum . iterator ( ) ;
rank: 692
score: 99.04410807291667
patch: List iter = res . list . iterator ( ) ;
rank: 693
score: 99.12495930989583
patch: int value = iter . get CaMeL Dimension ( ) ;
rank: 693
score: 99.06966145833333
patch: Iterator iter = entries . iterator ( ) ; for (
rank: 693
score: 99.0604960123698
patch: Iterator $NUMBER$ = res . entries . iterator ( ) ;
rank: 693
score: 99.0425516764323
patch: List iter = res . entries . entries ( ) ;
rank: 693
score: 99.03725961538461
patch: Iterator iter = v . entries ) . iterator ( ) ;
rank: 694
score: 99.06777615017361
patch: iter = res . iterator ( ) ;
rank: 694
score: 99.06509399414062
patch: = res . entries . entries . iterator ( ) ;
rank: 694
score: 99.03987630208333
patch: Iterator < res . size ( ) ;
rank: 694
score: 99.03685584435097
patch: Iterator iter = ! this . entries . iterator ( ) ;
rank: 695
score: 99.13691929408482
patch: Iterator < ( iter = res . entries . iterator ( ) ;
rank: 695
score: 99.11795748197116
patch: Iterator iter = ! iter . has CaMeL Next ( ) ;
rank: 695
score: 99.06852213541667
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = res ;
rank: 695
score: 99.06740159254808
patch: Iterator Iterator iter = res . list . iterator ( ) ;
rank: 695
score: 99.06478881835938
patch: Iterator iter = res . entries . = ( ) ;
rank: 695
score: 99.0518290201823
patch: Iterator iter = new Real CaMeL Vector ( this ) ;
rank: 695
score: 99.03963216145833
patch: Iterator iter = v . iterator ( ) ; null ;
rank: 695
score: 99.03553263346355
patch: Iterator iter = res . chars . iterator ( ) ;
rank: 696
score: 99.136279296875
patch: for ( String key : v . get CaMeL Dimension ( ) ) {
rank: 696
score: 99.11735026041667
patch: Iterator iter = res . entries ( ) ; for (
rank: 696
score: 99.06807250976563
patch: Iterator iter = v . entries . length ;
rank: 696
score: 99.0672098795573
patch: Iterator iter = size ( ) . iterator ( ) ;
rank: 696
score: 99.06395374644886
patch: Iterator iter = res . entries ( ) ; iterator
rank: 696
score: 99.05904541015624
patch: List entries = res . entries ( ) ;
rank: 696
score: 99.0379130045573
patch: List iter = res . list . entries ( ) ;
rank: 696
score: 99.03507486979167
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = this ;
rank: 697
score: 99.17256382533482
patch: Iterator iter = entries . entries ( ) . iter ( ) ;
rank: 697
score: 99.13627115885417
patch: Iterator iter . has CaMeL Next ( ) ; ) ;
rank: 697
score: 99.11724853515625
patch: Object iter = res . get CaMeL Dimension ( ) ;
rank: 697
score: 99.06390935724431
patch: Iterator iter entries = res . entries ( ) ;
rank: 697
score: 99.05884728064903
patch: Iterator iter = res . entries ( null , 0 ) ;
rank: 697
score: 99.05042442908653
patch: Iterator iter = res . index CaMeL Of ( false ) ;
rank: 697
score: 99.03641764322917
patch: List res = res . entries . entries ( ) ;
rank: 697
score: 99.03467814127605
patch: int value = res . get CaMeL Dimension ( ) ;
rank: 698
score: 99.17250569661458
patch: int size = res . get CaMeL Index ( ) ;
rank: 698
score: 99.1362533569336
patch: Iterator < Real CaMeL Vector > iter . has CaMeL Next ( ) ; )
rank: 698
score: 99.11684006911058
patch: Iterator iter = res . entries ] . iterator ( ) ;
rank: 698
score: 99.0656268780048
patch: for ( ; iter . has CaMeL Next ( ) ; )
rank: 698
score: 99.0614522298177
patch: Iterator iter = res . entries . >> ( ) ;
rank: 698
score: 99.03493245442708
patch: byte [ ] res = res . entries ( ) ;
rank: 698
score: 99.03404744466145
patch: int value = v . entries . size ( ) ;
rank: 699
score: 99.17244680304276
patch: Iterator < Iterator < ) > iter = res . entries ( ) . iterator ( ) ;
rank: 699
score: 99.06678263346355
patch: Iterator iter = res . size ( ) ; ) {
rank: 699
score: 99.06443434495192
patch: Iterator iter = res . list . iterator ( ) ) ;
rank: 699
score: 99.04152268629808
patch: Iterator iter = res . index CaMeL Of ( true ) ;
rank: 699
score: 99.03420003255208
patch: Collection entries = res . entries . iterator ( ) ;
rank: 699
score: 99.033203125
patch: List entries = res . entries . size ( ) ;
rank: 700
score: 99.17225864955357
patch: final Iterator < ? > iter = res . iterator ( ) ;
rank: 700
score: 99.13552856445312
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . }
rank: 700
score: 99.05769856770833
patch: Iterator iter = res . entries ( ) == null ;
rank: 700
score: 99.04145951704545
patch: it = res . entries . iterator ( ) ;
rank: 701
score: 99.17107190583882
patch: if ( res . entries . iterator ( ) . contains CaMeL Key ( $STRING$ ) ) {
rank: 701
score: 99.11514986478366
patch: Iterator iter = ~ res . entries . iterator ( ) ;
rank: 701
score: 99.06615600585937
patch: Iterator res = res . iterator ( ) ;
rank: 701
score: 99.06089274088542
patch: Iterator iter = res . list . Iterator ( ) ;
rank: 701
score: 99.05795288085938
patch: Iterator iter = $STRING$ . iter ( ) ;
rank: 701
score: 99.05713907877605
patch: double iter = res . entries . iterator ( ) ;
rank: 701
score: 99.0333251953125
patch: Iterator iter = v . iterator . next ( ) ;
rank: 702
score: 99.13516235351562
patch: List iterator = res . entries . iterator ( ) ;
rank: 702
score: 99.11428833007812
patch: int value = iter . has CaMeL Next ( ) ;
rank: 702
score: 99.06543986002605
patch: Iterator iter = res . start . entries ( ) ;
rank: 702
score: 99.0603360262784
patch: iter = res . list . size ( ) ;
rank: 702
score: 99.0565655048077
patch: Iterator < ] > iter = res . list ( ) ;
rank: 702
score: 99.03318277994792
patch: res ; Iterator iter = res . iterator ( ) ;
rank: 703
score: 99.11318969726562
patch: int key = v . get CaMeL Dimension ( ) ;
rank: 703
score: 99.0599834735577
patch: result . entries = res . entries . iterator ( ) ;
rank: 703
score: 99.05636596679688
patch: Iterator iter = new int entries . iterator ( ) ;
rank: 703
score: 99.05527750651042
patch: Iterator iter = sum . entries . iterator ( ) ;
rank: 703
score: 99.03167724609375
patch: Vector entries = res . entries . size ( ) ;
rank: 703
score: 99.03167724609375
patch: Collection iter = res . entries . entries ( ) ;
rank: 704
score: 99.17029747596153
patch: final int [ ] list = res . entries ( ) ;
rank: 704
score: 99.13474527994792
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries , res )
rank: 704
score: 99.1129150390625
patch: Iterator iter = v . entries ( ) . length ;
rank: 704
score: 99.0585225423177
patch: Iterator iter = data . list . iterator ( ) ;
rank: 704
score: 99.05506388346355
patch: Iterator iter = res . entries . Boolean ( ) ;
rank: 704
score: 99.0546405498798
patch: Iterator iter = res . entries ( - - 1 ) ;
rank: 704
score: 99.04010009765625
patch: Iterator iter = 1 . entries . iterator ( ) ;
rank: 704
score: 99.03106134588069
patch: res . res . entries = res . entries ;
rank: 705
score: 99.0548604329427
patch: Iterator iter = res . entries . join ( ) ;
rank: 705
score: 99.05438701923077
patch: Iterator < $STRING$ > iter = res . entries ( ) ;
rank: 705
score: 99.030517578125
patch: Iterator iter = res . entries Iterator ( ) ;
rank: 706
score: 99.16997969777961
patch: Iterator < Iterator < Iterator > iter = res . entries ( ) . iterator ( ) ;
rank: 706
score: 99.13350677490234
patch: Iterator iter = true ; while ( iter . has CaMeL Next ( ) )
rank: 706
score: 99.06309925426136
patch: Iterator iter = res . . size ( ) ;
rank: 706
score: 99.0545987215909
patch: Iterator iter iter = res . iterator ( ) ;
rank: 706
score: 99.05429311899039
patch: Iterator < Number > iter = res . entries ( ) ;
rank: 706
score: 99.0390625
patch: Iterator iter ++ : res . entries . iterator ( ) ;
rank: 707
score: 99.16984727647569
patch: if ( res != null ) Iterator iterator = res . entries . iterator ( ) ;
rank: 707
score: 99.13282993861607
patch: Iterator entries = this . entries . entries . iterator ( ) ;
rank: 707
score: 99.1119384765625
patch: Iterator iter = entries [ 0 ] . iterator ( ) ;
rank: 707
score: 99.03858439127605
patch: Iterator iter = res >> entries . iterator ( ) ;
rank: 708
score: 99.05421799879808
patch: Iterator iter = res . get ) . iterator ( ) ;
rank: 708
score: 99.05170232599431
patch: Iterator iter = res . entries ( 0 ) ;
rank: 708
score: 99.0293680826823
patch: Iterator entries = res . entries . entries ( ) ;
rank: 708
score: 99.02750651041667
patch: Iterator < ; res . has CaMeL Next ( ) ;
rank: 709
score: 99.16810021033653
patch: Iterator < int > entries = res . entries ( ) ;
rank: 709
score: 99.13242885044643
patch: Iterator has CaMeL Next = res . entries . iterator ( ) ;
rank: 709
score: 99.062109375
patch: Iterator res = res . size ( ) ;
rank: 709
score: 99.05396525065105
patch: List list = res . entries . list ( ) ;
rank: 709
score: 99.0518086751302
patch: Iterator iter = res . capacity . iterator ( ) ;
rank: 710
score: 99.13214983258929
patch: Iterator iter = this . list . entries . iterator ( ) ;
rank: 710
score: 99.05349731445312
patch: Iterator iterator = v . list . iterator ( ) ;
rank: 711
score: 99.13098907470703
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) v .
rank: 711
score: 99.04942737926136
patch: final Iterator iterator = res . entries ( ) ;
rank: 711
score: 99.02672661675348
patch: Iterator iter = res . entries ( )
rank: 712
score: 99.13098862591912
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . entries ;
rank: 712
score: 99.1094970703125
patch: Iterator iter = v . entries . . iterator ( ) ;
rank: 712
score: 99.05257161458333
patch: int res = res . entries . size ( ) ;
rank: 712
score: 99.04892800071023
patch: Iterator iter = res . get ( res ) ;
rank: 712
score: 99.02541097005208
patch: if ( res != null ) res . = res ;
rank: 713
score: 99.1668701171875
patch: final int [ ] iter = res . entries ( ) ;
rank: 713
score: 99.10930926983173
patch: Iterator iter = res ] . entries . iterator ( ) ;
rank: 713
score: 99.06067911783855
patch: Iterator iter = res . err . iterator ( ) ;
rank: 713
score: 99.0520731608073
patch: assert res . entries . size ( ) > 0 ;
rank: 713
score: 99.04911665482955
patch: Iterator iter = res . entries ( 1 ) ;
rank: 713
score: 99.02497016059027
patch: Iterator iter = res . entries ( ;
rank: 714
score: 99.04818725585938
patch: Vector [ ] iter = res . entries ( ) ;
rank: 714
score: 99.04705810546875
patch: Iterator iter = res . close . iterator ( ) ;
rank: 714
score: 99.03082275390625
patch: Iterator iter = res . iter . next ( ) ;
rank: 714
score: 99.02461751302083
patch: Iterator iter = res . get CaMeL Classes ( ) ;
rank: 715
score: 99.16484239366319
patch: final Iterator < res > iter = res . entries ( ) . iterator ( ) ;
rank: 715
score: 99.04703776041667
patch: Hashtable iter = res . entries . iterator ( ) ;
rank: 715
score: 99.02443440755208
patch: String res = res . get CaMeL Name ( ) ;
rank: 716
score: 99.16448505108173
patch: Iterator < Class > entries = res . entries ( ) ;
rank: 716
score: 99.05992431640625
patch: int iter = entries . iterator ( ) ;
rank: 716
score: 99.04701741536458
patch: Iterator iter = res . index CaMeL Of ( ) ;
rank: 716
score: 99.03042602539062
patch: Iterator iter = res > list . iterator ( ) ;
rank: 716
score: 99.0231424967448
patch: Collection res = res . get . entries ( ) ;
rank: 716
score: 99.0207050030048
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( this ) ;
rank: 717
score: 99.16370500837054
patch: if ( res != null ) return entries . entries ( ) ;
rank: 717
score: 99.12998860677084
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : this ) {
rank: 717
score: 99.05934651692708
patch: List iter = entries . entries . iterator ( ) ;
rank: 717
score: 99.0466817220052
patch: Iterator iter = res . replace . iterator ( ) ;
rank: 718
score: 99.16348605685764
patch: Iterator iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 718
score: 99.0447489420573
patch: try ; Iterator iter = res . entries ( ) ;
rank: 718
score: 99.04027303059895
patch: Iterator iter = v . get . iterator ( ) ;
rank: 718
score: 99.02117919921875
patch: Iterator iter = res . iterator ( ) ; int ;
rank: 718
score: 99.01983642578125
patch: int iterator = v . get CaMeL Dimension ( ) ;
rank: 719
score: 99.12985665457589
patch: for ( while ( iter . has CaMeL Next ( ) ) {
rank: 719
score: 99.05862426757812
patch: Iterator iter = res . size ( ) ( ) ;
rank: 719
score: 99.04470825195312
patch: Iterator iter = res . entries . Long ( ) ;
rank: 719
score: 99.04435424804687
patch: Vector entries = res . entries ( ) ;
rank: 719
score: 99.04024251302083
patch: int size = res . get . size ( ) ;
rank: 719
score: 99.02886493389423
patch: Iterator iter = v . entries . iterator ( ) ) ;
rank: 719
score: 99.02117365056819
patch: iter = res . list . entries ( ) ;
rank: 719
score: 99.01942027698864
patch: Iterator iter = res . entries . iterator ++ ;
rank: 720
score: 99.1293436686198
patch: Iterator iter ? res . entries . iterator ( ) ;
rank: 720
score: 99.05729166666667
patch: Iterator iter = res . Math . size ( ) ;
rank: 720
score: 99.04245431082589
patch: res . iterator ( ) ;
rank: 720
score: 99.02080426897321
patch: res . res = res ;
rank: 721
score: 99.1606381064967
patch: Iterator iter = res . get ( ) . entries ( ) . iterator ( ) ; ;
rank: 721
score: 99.04423384232955
patch: Iterator < ) = res . entries ( ) ;
rank: 721
score: 99.02701509915866
patch: Iterator iter = res . entries . iterator ( ) $NUMBER$ ;
rank: 721
score: 99.01930930397727
patch: res . res = res . entries ( ) ;
rank: 722
score: 99.04238891601562
patch: Iterator iter = super . entries . iter ( ) ;
rank: 722
score: 99.04182942708333
patch: Object entries [ ] = res . entries ( ) ;
rank: 722
score: 99.0179110440341
patch: Iterator < res . entries . size ( ) ;
rank: 723
score: 99.16043526785714
patch: Iterator iter = res . entries . size ( ) - 0 ;
rank: 723
score: 99.09970327524039
patch: Iterator iter ] = res . entries . iterator ( ) ;
rank: 723
score: 99.0564676920573
patch: Iterator iter = ) . has CaMeL Next ( ) ;
rank: 723
score: 99.04175821940105
patch: int 1 = res . entries . size ( ) ;
rank: 724
score: 99.15959821428571
patch: if ( res != null ) return iter . entries ( ) ;
rank: 724
score: 99.12818196614583
patch: Iterator < boolean >= iter = res . entries . iterator ( ) ;
rank: 724
score: 99.09961876502403
patch: Iterator iter = res . entries ( ) [ 1 ] ;
rank: 724
score: 99.05643717447917
patch: Vector iter = entries . entries . iterator ( ) ;
rank: 724
score: 99.04180353338069
patch: Iterator iter = res . iterator ( ) ; .
rank: 724
score: 99.0244891826923
patch: Iterator iter ( res . get CaMeL Dimension ( ) ) ;
rank: 725
score: 99.15941443810097
patch: Iterator < Iterator > entries = res . entries ( ) ;
rank: 725
score: 99.12765299479166
patch: Iterator iter = res . entries [ 0 ] . entries ( ) ;
rank: 725
score: 99.05572509765625
patch: int res = v . entries . iterator ( ) ;
rank: 725
score: 99.041748046875
patch: Iterator iter -= res . entries . iterator ( ) ;
rank: 725
score: 99.04029430042614
patch: final int entries = res . entries ( ) ;
rank: 725
score: 99.03425736860795
patch: Iterator iter = list . iterator ( ) ; ;
rank: 725
score: 99.02404174804687
patch: Iterator iter = Iterator . iterator ( ) ;
rank: 725
score: 99.01649983723958
patch: Iterator iter = res . entries ( ) + 1 ;
rank: 725
score: 99.01219685872395
patch: for ( Iterator iter = entries . iterator ( ) ;
rank: 726
score: 99.1590576171875
patch: Iterator < Iterator > iter = res . size ( ) ;
rank: 726
score: 99.12741268382354
patch: Iterator < String > iter = v . entries ( ) . iterator ( ) ;
rank: 726
score: 99.0986328125
patch: Vector entries = res . get CaMeL Dimension ( ) ;
rank: 726
score: 99.05359903971355
patch: Iterator iter = res . insert . iterator ( ) ;
rank: 726
score: 99.04058227539062
patch: Iterator iter = name . iterator ( ) ;
rank: 727
score: 99.15860689603366
patch: final Object res = res . entries . get ( ) ;
rank: 727
score: 99.05330403645833
patch: int v = res . entries . iterator ( ) ;
rank: 727
score: 99.0404764811198
patch: Iterator iter = entries . iter . iterator ( ) ;
rank: 727
score: 99.03940836588542
patch: Iterator iter = res . data . entries ( ) ;
rank: 727
score: 99.02223714192708
patch: Iterator iter = min . entries . iterator ( ) ;
rank: 727
score: 99.01534016927083
patch: if ( res . size ( ) > 0 ) {
rank: 728
score: 99.1584942157452
patch: final int size = res . entries . size ( ) ;
rank: 728
score: 99.126318359375
patch: Iterator iter [ 0 ] = res . entries . iterator ( ) ;
rank: 728
score: 99.09857177734375
patch: Iterator iter = ( iter . iterator ( ) ) ;
rank: 728
score: 99.05295817057292
patch: Iterator iter = v . res . iterator ( ) ;
rank: 728
score: 99.03971354166667
patch: Iterator iter = res . entries . end ( ) ;
rank: 728
score: 99.03092817826705
patch: res . entries = res . iterator ( ) ;
rank: 728
score: 99.01334228515626
patch: Iterator iter = data . iterator ( ) ;
rank: 728
score: 99.00909893329327
patch: Iterator iter = v . entries ( ) . ( ) ;
rank: 729
score: 99.15819027549342
patch: Iterator iter = res . get CaMeL Data ( ) . entries . iterator ( ) ; else
rank: 729
score: 99.03889973958333
patch: Iterator iter = res . entries ( ) ; ; else
rank: 729
score: 99.01294962565105
patch: Iterator iter ; res . has CaMeL Next ( ) ;
rank: 729
score: 99.00874837239583
patch: Iterator iter = ) . entries . iterator ( ) ;
rank: 730
score: 99.09793795072116
patch: Iterator iter = v [ 1 ] . iterator ( ) ;
rank: 730
score: 99.03830973307292
patch: Iterator iter = res . list . size ( ) ;
rank: 730
score: 99.01183064778645
patch: int ; Iterator iter = res . iterator ( ) ;
rank: 730
score: 99.00807698567708
patch: Iterator iter = v . get CaMeL Index ( ) ;
rank: 731
score: 99.15720728824013
patch: final int [ ] list = res . entries . iterator ( ) . iterator ( ) ;
rank: 731
score: 99.1258544921875
patch: Iterator < int ) { iter = res . entries . iterator ( ) ;
rank: 731
score: 99.09767844460227
patch: Iterator iter = res . iterator ( ) ; *
rank: 731
score: 99.0507100423177
patch: Iterator iter = res . is CaMeL Array ( ) ;
rank: 731
score: 99.02852376302083
patch: result = res . entries . get ( 0 ) ;
rank: 731
score: 99.01047770182292
patch: Collection res = res . get CaMeL Classes ( ) ;
rank: 732
score: 99.05000443892045
patch: Iterator iter . has CaMeL Next ( ) ; {
rank: 732
score: 99.03806559244792
patch: Vector [ ] res = res . entries ( ) ;
rank: 732
score: 99.0098368326823
patch: Iterator iterator = res . iterator . entries ( ) ;
rank: 732
score: 99.00548638237848
patch: Iterator iter = res . entries ) ;
rank: 733
score: 99.12433624267578
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector entries : res . entries )
rank: 733
score: 99.0964824969952
patch: Iterator iter = res . entries = new > ( ) ;
rank: 733
score: 99.0483907063802
patch: Iterator iter = res . get CaMeL Dimension ( iter .
rank: 733
score: 99.03735961914063
patch: Iterator iter = res . get != null ;
rank: 733
score: 99.03704279119319
patch: protected Iterator iter = res . entries ( ) ;
rank: 733
score: 99.02546830610795
patch: switch ( res . get CaMeL Type ( ) )
rank: 733
score: 99.00956217447917
patch: Object res = res . entries . next ( ) ;
rank: 733
score: 99.00429280598958
patch: int iterator = v . entries . size ( ) ;
rank: 734
score: 99.15328275240384
patch: final int [ ] iterator = res . entries ( ) ;
rank: 734
score: 99.09627278645833
patch: Vector iterator = res . entries . iterator ( ) ;
rank: 734
score: 99.0469462076823
patch: Iterator iter = ebe CaMeL Divide . size ( ) ;
rank: 734
score: 99.03717041015625
patch: iter = res . entries . . iterator ( ) ;
rank: 734
score: 99.02386474609375
patch: int max = res . entries . size ( ) ;
rank: 734
score: 99.0093661221591
patch: Iterator < ) . has CaMeL Next ( ) ;
rank: 735
score: 99.12389373779297
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector . Iterator ;
rank: 735
score: 99.09605916341145
patch: int entries = v . get CaMeL Dimension ( ) ;
rank: 735
score: 99.02352905273438
patch: Collection list = res . entries . iterator ( ) ;
rank: 735
score: 99.00933283025569
patch: if ( res . size ( ) == 0 )
rank: 736
score: 99.15220883018092
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = res . length ;
rank: 736
score: 99.04493204752605
patch: Iterator iter = res . get CaMeL Type ( ) ;
rank: 736
score: 99.0345458984375
patch: int size = res . entries . iterator ( ) ;
rank: 736
score: 99.02345784505208
patch: I iter = res . entries . size ( ) ;
rank: 736
score: 99.01466878255208
patch: Iterator iter = res . 1 . iterator ( ) ;
rank: 736
score: 99.00902303059895
patch: Iterator iter = res . entries ( ) - 1 ;
rank: 736
score: 99.00077681107955
patch: Iterator iter = v . entries iterator ( ) ;
rank: 737
score: 99.1517333984375
patch: final int [ ] res = res . entries ( ) ;
rank: 737
score: 99.0360819498698
patch: Iterator iter = entries . iterator . iterator ( ) ;
rank: 737
score: 99.03383382161458
patch: / * Iterator iter = entries . iterator ( ) ;
rank: 737
score: 99.02290852864583
patch: Iterator res = res . list . iterator ( ) ;
rank: 737
score: 98.99954833984376
patch: Iterator iter = res . entries . entries ;
rank: 738
score: 99.12301815257354
patch: Iterator < Real CaMeL Vector > iter = res . get CaMeL Dimension ( ) .
rank: 738
score: 99.0357666015625
patch: res . add ( res ) ;
rank: 738
score: 99.03355916341145
patch: int iter = res . res . entries ( ) ;
rank: 739
score: 99.12264811197916
patch: Iterator < ? > iter = v . entries . iterator ( ) ;
rank: 739
score: 99.0433858235677
patch: Iterator iter = res . class . iterator ( ) ;
rank: 739
score: 99.03574625651042
patch: Iterator entries = res . entries . iter ( ) ;
rank: 739
score: 99.03341674804688
patch: int iterator = res . entries ( ) . length ;
rank: 739
score: 99.00579279119319
patch: res . entries = res . size ( ) ;
rank: 739
score: 98.99842325846355
patch: int size = this . entries . size ( ) ;
rank: 740
score: 99.12241498161765
patch: if ( res . to CaMeL String ( ) . length ( ) > 0 )
rank: 740
score: 99.03574440696023
patch: Iterator iter iterator = res . entries ( ) ;
rank: 740
score: 99.03265935724431
patch: Iterator Iterator iter = res . entries ( ) ;
rank: 740
score: 99.01209716796875
patch: Iterator entries = res . size ( ) ;
rank: 741
score: 99.03432395241477
patch: Iterator iter = . entries . iterator ( ) ;
rank: 741
score: 99.019287109375
patch: List list = res . list . iterator ( ) ;
rank: 741
score: 99.01148478190105
patch: Iterator iter . has CaMeL Next ( ) ; - 1
rank: 741
score: 99.00479125976562
patch: Iterator iter = res . get CaMeL Interfaces ( ) ;
rank: 742
score: 99.1488506610577
patch: Iterator < String > iter : res . entries ( ) ;
rank: 742
score: 99.0900370279948
patch: int length = res . get CaMeL Dimension ( ) ;
rank: 742
score: 99.0424296061198
patch: Iterator iter = res . size ( ) ; for (
rank: 742
score: 99.03322347005208
patch: Iterator iter = entries . entries . entries ( ) ;
rank: 742
score: 99.02926635742188
patch: this . res . entries . add ( res ) ;
rank: 742
score: 99.00452769886364
patch: Iterator iter = res ) . entries ( ) ;
rank: 743
score: 99.14855018028847
patch: Iterator < Class > iter = entries . iterator ( ) ;
rank: 743
score: 99.12200520833333
patch: Iterator iter = res . entries [ v . size ( ) ] ;
rank: 743
score: 99.02920532226562
patch: Integer iter = res . entries ( ) ;
rank: 743
score: 98.99716186523438
patch: Iterator iter = res . FALSE . iterator ( ) ;
rank: 744
score: 99.12196350097656
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this . res )
rank: 744
score: 99.04185901988636
patch: else res . set CaMeL Entry ( $STRING$ ) ;
rank: 744
score: 99.03263346354167
patch: Enumeration iter = res . entries . iter ( ) ;
rank: 744
score: 99.00674438476562
patch: Iterator iter = res . entries . iterator ( ) ?
rank: 744
score: 99.0039774576823
patch: res = res . entries . get ( 0 ) ;
rank: 744
score: 98.99525960286458
patch: Dimension v = res . get CaMeL Dimension ( ) ;
rank: 745
score: 99.12147432215073
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( )
rank: 745
score: 99.08736165364583
patch: Vector iter = v . get CaMeL Dimension ( ) ;
rank: 745
score: 99.03227095170455
patch: Iterator iter = res . entries ( ) ; Iterator
rank: 745
score: 99.02843221028645
patch: Iterator iter = res . entries ( ) ; else ;
rank: 745
score: 99.01815795898438
patch: Disposer . Iterator iter = res . iterator ( ) ;
rank: 745
score: 99.00359497070312
patch: res . res = res ; return res ;
rank: 746
score: 99.08629150390625
patch: Iterator iter = iter . size ( ) ;
rank: 746
score: 99.04083251953125
patch: Iterator res = res . get CaMeL Dimension ( ) ;
rank: 746
score: 99.03193803267045
patch: Iterator iter = res . get ( $NUMBER$ ) ;
rank: 746
score: 99.02802385602679
patch: res . entries ( ) ;
rank: 747
score: 99.12056884765624
patch: Iterator iter = this . iterator ( ) ;
rank: 747
score: 99.03188069661458
patch: Iterator iter = $STRING$ . iter . iterator ( ) ;
rank: 747
score: 99.0257568359375
patch: final Iterator entries = res . entries ( ) ;
rank: 747
score: 99.01595458984374
patch: if ( res == null ) return null ;
rank: 747
score: 99.00399780273438
patch: Iterator iter = break . entries . iterator ( ) ;
rank: 747
score: 98.99301147460938
patch: Iterator iter = res . random . iterator ( ) ;
rank: 748
score: 99.14378865559895
patch: Iterator iter = System . entries . iterator ( ) ;
rank: 748
score: 99.08435997596153
patch: Iterator iter = res [ 1 ] . entries ( ) ;
rank: 748
score: 99.03865189985795
patch: Iterator Iterator iter = res . size ( ) ;
rank: 748
score: 99.0318094889323
patch: Iterator iter = res . entries ( ) ; ) /
rank: 748
score: 99.02508544921875
patch: Iterator iter = res . entries ( ) ; while (
rank: 748
score: 99.0148037997159
patch: res . iterator ( ) . next ( ) ;
rank: 748
score: 99.00274047851562
patch: if ( v == null ) return res ;
rank: 748
score: 98.99283854166667
patch: Vector iter = this . entries . iterator ( ) ;
rank: 749
score: 99.03118896484375
patch: Iterator iter Iterator iter = res . entries ( ) ;
rank: 749
score: 99.02410888671875
patch: int iter = entries . size ( ) ;
rank: 749
score: 99.0020751953125
patch: Iterator iter = v . entries ( res ) ;
rank: 751
score: 99.14273681640626
patch: Iterator iter = 0 . iterator ( ) ;
rank: 751
score: 99.07710774739583
patch: int ( v . get CaMeL Dimension ( ) ) ;
rank: 751
score: 99.02909342447917
patch: Iterator iter ; iter = res . entries ( ) ;
rank: 751
score: 99.0095458984375
patch: Iterator iter = v . clone ( ) ;
rank: 751
score: 98.98903401692708
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 752
score: 99.14127604166667
patch: else iter = res . entries . iterator ( ) ;
rank: 752
score: 99.07642618815105
patch: Iterator iter = res != null . size ( ) ;
rank: 752
score: 99.0371805826823
patch: Iterator iter = this . size . iterator ( ) ;
rank: 752
score: 99.00890096028645
patch: while ( res . size ( ) > 0 ) {
rank: 752
score: 99.00100708007812
patch: List res = res . list . list ( ) ;
rank: 752
score: 98.99705921519886
patch: Iterator iter = res . size ( ) 1 ;
rank: 752
score: 98.989013671875
patch: for ( ) { iter . advance ( ) ;
rank: 753
score: 99.11843637319711
patch: Iterator iter = res . entries . entries [ 0 ] ;
rank: 753
score: 99.03683471679688
patch: Iterator res = res . has CaMeL Next ( ) ;
rank: 753
score: 99.02894176136364
patch: Iterator iter = res . parse ( res ) ;
rank: 754
score: 99.13858736478366
patch: final int entries = res . entries . size ( ) ;
rank: 754
score: 99.11838942307692
patch: for ( ) { res . set CaMeL Entry ( ) ;
rank: 754
score: 99.02870686848958
patch: Iterator iter = load . entries . iterator ( ) ;
rank: 754
score: 99.0198974609375
patch: Object iter = res . entries ( ) ;
rank: 754
score: 99.00840250651042
patch: Iterator iter = v . get . entries ( ) ;
rank: 754
score: 98.99993896484375
patch: res . entries . put ( $STRING$ , res ) ;
rank: 754
score: 98.98764870383523
patch: Iterator iter = res . entries . entries ) ;
rank: 755
score: 99.1374981219952
patch: Iterator < synchronized > iter = res . entries ( ) ;
rank: 755
score: 99.07147216796875
patch: Open CaMeL Map CaMeL Real CaMeL Vector v = null ;
rank: 755
score: 99.03635475852273
patch: Iterator iter = entries . . iterator ( ) ;
rank: 755
score: 99.0064697265625
patch: Iterator iter = v . split . iterator ( ) ;
rank: 755
score: 98.9998779296875
patch: res . res = res . entries [ 0 ] ;
rank: 755
score: 98.99307250976562
patch: Iterator iter = chars . entries . iterator ( ) ;
rank: 756
score: 99.03599853515625
patch: Iterator res = entries . iterator ( ) ;
rank: 756
score: 99.02584838867188
patch: Iterator . Iterator iter = res . iterator ( ) ;
rank: 756
score: 99.018212890625
patch: Iterator iter = res . intern ( ) ;
rank: 756
score: 98.98508707682292
patch: Iterator iter = res . entries . advance ( ) ;
rank: 757
score: 99.11732584635416
patch: Iterator < iter >= iter = res . entries . iterator ( ) ;
rank: 757
score: 99.0703857421875
patch: Iterator iter = iter . iter ( ) ;
rank: 757
score: 99.03579711914062
patch: Iterator iter = res . read . entries ( ) ;
rank: 757
score: 99.02491344105114
patch: Iterator iter = res . load ( res ) ;
rank: 757
score: 99.01791381835938
patch: Iterator iter = in . entries ( ) ;
rank: 757
score: 98.9986063639323
patch: Iterator iter = res . iterator ( ) + 1 ;
rank: 757
score: 98.99063110351562
patch: Iterator entries = entries . entries . iterator ( ) ;
rank: 757
score: 98.98389689127605
patch: Object iter = res . entries . size ( ) ;
rank: 758
score: 99.03550211588542
patch: Vector res = v . entries . iterator ( ) ;
rank: 758
score: 99.02383422851562
patch: Iterator iter = list . entries . iter ( ) ;
rank: 758
score: 99.01553344726562
patch: Iterator iter = res . out . entries ( ) ;
rank: 758
score: 99.0032071200284
patch: Iterator iter = res 1 . iterator ( ) ;
rank: 758
score: 98.99788411458333
patch: Iterator iter = res . clone . entries ( ) ;
rank: 758
score: 98.98984985351562
patch: Iterator entries = res . iterator ( ) ;
rank: 758
score: 98.9827372233073
patch: List iter = this . entries . iterator ( ) ;
rank: 759
score: 99.03502400716145
patch: Iterator iter = res . end . entries ( ) ;
rank: 759
score: 99.01529541015626
patch: Iterator next = res . entries ( ) ;
rank: 759
score: 99.00154252485795
patch: iter = v . list . iterator ( ) ;
rank: 759
score: 98.99761962890625
patch: Set entries = res . entries . iterator ( ) ;
rank: 759
score: 98.9896240234375
patch: Iterator iter = ] . entries . iterator ( ) ;
rank: 760
score: 99.0150655110677
patch: int 1 = res . entries . iterator ( ) ;
rank: 760
score: 98.99625244140626
patch: if ( res != null ) res . ;
rank: 760
score: 98.98943481445312
patch: Iterator iter = this . size ( ) ;
rank: 760
score: 98.98024495442708
patch: Vector iter = res . entries . size ( ) ;
rank: 761
score: 99.13427734375
patch: Iterator < String > iter = list . iterator ( ) ;
rank: 761
score: 99.11487630208333
patch: synchronized ( res ) { res . set CaMeL Entry ( ) ; }
rank: 761
score: 99.03493245442708
patch: if ( entries . size ( ) > 0 ) {
rank: 761
score: 99.0139872233073
patch: int iter = res . entries . entries ( ) ;
rank: 762
score: 99.13424917367789
patch: Iterator < String > iter = entries . entries ( ) ;
rank: 762
score: 99.0656026204427
patch: Dimension iter = res . get CaMeL Dimension ( ) ;
rank: 762
score: 99.02067057291667
patch: iterator = res . entries . iterator ( ) ; ;
rank: 762
score: 99.0137051669034
patch: final int iterator = res . entries ( ) ;
rank: 762
score: 98.99452903053977
patch: entries = res . get CaMeL Entries ( ) ;
rank: 762
score: 98.9790547688802
patch: Vector res = res . entries . size ( ) ;
rank: 763
score: 99.01002086292614
patch: int < ] : res . entries ( ) ;
rank: 763
score: 98.99951171875
patch: Iterator iter = res . iterator ( ) ; ; ;
rank: 763
score: 98.991015625
patch: Iterator iter = value . iterator ( ) ;
rank: 764
score: 99.0634053548177
patch: int ( res . get CaMeL Dimension ( ) ) ;
rank: 764
score: 99.00986550071023
patch: res . entries = this . res . entries ;
rank: 764
score: 98.98961292613636
patch: Iterator iter = res . iterator ( ( ) ;
rank: 765
score: 99.11095377604167
patch: Iterator < Real CaMeL Vector > iter = list . iterator ( ) ;
rank: 765
score: 99.03228759765625
patch: Iterator iter = res . false . size ( ) ;
rank: 765
score: 99.00953258167614
patch: res . value = res . entries ( ) ;
rank: 765
score: 98.99934895833333
patch: f = res . entries . get ( 0 ) ;
rank: 765
score: 98.9886141690341
patch: Object res = res . entries [ 0 ] ;
rank: 766
score: 99.13088754507211
patch: final Object [ ] iter = res . entries ( ) ;
rank: 766
score: 99.00876871744792
patch: ) { Iterator iter = res . entries ( ) ;
rank: 766
score: 98.99898274739583
patch: Object [ ] data = res . entries ( ) ;
rank: 766
score: 98.98633922230114
patch: iter = res . iterator . next ( ) ;
rank: 767
score: 99.06160481770833
patch: Iterator iter = res == null . size ( ) ;
rank: 767
score: 99.0221280184659
patch: Iterator Iterator iter = entries . iterator ( ) ;
rank: 767
score: 99.0185546875
patch: Iterator iter = entries . get . iterator ( ) ;
rank: 767
score: 98.98499891493056
patch: if ( res . entries != null )
rank: 767
score: 98.97354125976562
patch: Iterator iter = res . contains . size ( ) ;
rank: 768
score: 99.10812377929688
patch: Iterator iter || res . entries . iterator ( ) ;
rank: 768
score: 99.01835327148437
patch: Iterator iter = sum . iterator ( ) ;
rank: 768
score: 99.00844319661458
patch: Iterator iter = res . entries ( - $NUMBER$ ) ;
rank: 768
score: 98.98502197265626
patch: Iterator iter = iter . next ( ) ;
rank: 768
score: 98.98481889204545
patch: Iterator iter = res . iterator ( iterator ) ;
rank: 769
score: 99.1288311298077
patch: Iterator < Integer > entries = res . entries ( ) ;
rank: 769
score: 99.06106567382812
patch: int key = iter . get CaMeL Dimension ( ) ;
rank: 769
score: 99.0179951985677
patch: Iterator iter = res . entries . add ( ) ;
rank: 769
score: 99.01610218394886
patch: Iterator iter = entries . size ( ) ; ;
rank: 769
score: 99.00705788352273
patch: final int iter = res . entries . length ;
rank: 769
score: 98.99807739257812
patch: List size = res . entries . size ( ) ;
rank: 769
score: 98.98433061079545
patch: iter = res . get . entries ( ) ;
rank: 769
score: 98.98392740885417
patch: Iterator iter = res . entries . iterator ( ) >
rank: 769
score: 98.970947265625
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = true ;
rank: 770
score: 99.06077067057292
patch: Iterator iter = v . name . iterator ( ) ;
rank: 770
score: 99.01036987304687
patch: Iterator iter = entries . Iterator ( ) ;
rank: 770
score: 99.00385076349431
patch: this . entries = res . entries ( ) ;
rank: 770
score: 98.99772135416667
patch: Object [ ] entries = res . entries ( ) ;
rank: 770
score: 98.984130859375
patch: Iterator iter = res . iterator ( ;
rank: 771
score: 99.0168965657552
patch: Iterator iter = res . get CaMeL Integer ( ) ;
rank: 771
score: 99.007666015625
patch: Iterator iter = res . contains ( ) ;
rank: 771
score: 98.9965311686198
patch: String name = res . get CaMeL Name ( ) ;
rank: 771
score: 98.98332075639205
patch: entries = res . entries . size ( ) ;
rank: 771
score: 98.98152669270833
patch: Iterator iter = res . entries . entries . entries ;
rank: 771
score: 98.96946207682292
patch: Iterator iter = v . data . iterator ( ) ;
rank: 772
score: 99.05620727539062
patch: Iterator iter = iterator . iterator ( ) ;
rank: 772
score: 99.0161641438802
patch: Iterator iter = res . entries . replace ( ) ;
rank: 772
score: 99.0018310546875
patch: Iterator iter = entries . iterator ( ) ; {
rank: 772
score: 99.000439453125
patch: this . entries . add ( res ) ;
rank: 772
score: 98.9961446126302
patch: Iterator iter = list . list . iterator ( ) ;
rank: 772
score: 98.98306884765626
patch: Set entries = res . entries ( ) ;
rank: 773
score: 99.01604669744319
patch: Iterator iter = res . iterator ( ) ; Iterator
rank: 773
score: 98.99113159179687
patch: List list = res . entries ( ) ;
rank: 773
score: 98.98175048828125
patch: Collection res = res . clone ( ) ;
rank: 773
score: 98.96884155273438
patch: Iterator iter : v . entries . iterator ( ) ;
rank: 774
score: 99.1268780048077
patch: Iterator < Object > iter : res . entries ( ) ;
rank: 774
score: 98.99818004261364
patch: Iterator < String > iter . iterator ( ) ;
rank: 774
score: 98.99481756036931
patch: Iterator iter = res . entries . iterator 1 ;
rank: 775
score: 99.05449829101562
patch: res . set CaMeL Entry ( iter ) ;
rank: 775
score: 99.01471502130681
patch: Iterator iter = res . get ( true ) ;
rank: 775
score: 98.9790371981534
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 776
score: 99.10240681966145
patch: Iterator iter = res . iterator ( ) ; while (
rank: 776
score: 98.99662642045455
patch: Iterator iter = res . entries entries ( ) ;
rank: 776
score: 98.99138849431819
patch: Iterator . has CaMeL Next ( ) ; ) {
rank: 776
score: 98.9875821200284
patch: n = res . entries . size ( ) ;
rank: 776
score: 98.9769287109375
patch: Iterator iter = this . iter . iterator ( ) ;
rank: 776
score: 98.9668477376302
patch: Iterator iter = res . stop . iterator ( ) ;
rank: 777
score: 99.10182542067308
patch: if ( res instanceof Open CaMeL Map CaMeL Real CaMeL Vector )
rank: 777
score: 99.01078657670455
patch: Iterator iter = new entries . iterator ( ) ;
rank: 777
score: 98.99351917613636
patch: Iterator iter = res . entries ( ) ; Entry
rank: 777
score: 98.9898348721591
patch: final Iterator iter = res . entries . length ;
rank: 777
score: 98.97474254261364
patch: if ( v . size ( ) > 0 )
rank: 778
score: 99.008447265625
patch: Iterator iterator = entries . iterator ( ) ;
rank: 778
score: 98.99260919744319
patch: this . res . entries = res . entries ;
rank: 778
score: 98.98772638494319
patch: Iterator iter = entries . iterator ( 0 ) ;
rank: 779
score: 99.00780140269886
patch: / Iterator iter = res . entries ( ) ;
rank: 779
score: 98.99075317382812
patch: Iterator size = res . entries ( ) ;
rank: 779
score: 98.981591796875
patch: Iterator list = res . iterator ( ) ;
rank: 779
score: 98.9725674715909
patch: Iterator iter = res . entries ( entries ) ;
rank: 780
score: 99.11561936598558
patch: final Object entries = res . entries . entries ( ) ;
rank: 780
score: 99.09590970552884
patch: Iterator iter = v . index CaMeL Of ( $STRING$ ) ;
rank: 780
score: 99.04623413085938
patch: int entries = iter . has CaMeL Next ( ) ;
rank: 780
score: 99.007177734375
patch: Iterator iter = res . entries != null ;
rank: 780
score: 98.99054565429688
patch: Iterator iter = copy . entries ( ) ;
rank: 781
score: 99.11543782552083
patch: Iterator iter = 0 . entries . iterator ( ) ;
rank: 781
score: 99.04592895507812
patch: Vector iter = res . entries . entries ( ) ;
rank: 781
score: 99.00563742897727
patch: Iterator iter ( entries . iterator ( ) ) ;
rank: 781
score: 98.97991333007812
patch: res . entries [ 0 ] = res ;
rank: 781
score: 98.97296697443181
patch: Iterator iter = ! entries . iterator ( ) ;
rank: 781
score: 98.96934925426136
patch: Iterator iter = res . iterator . ( ) ;
rank: 782
score: 99.00377197265625
patch: iter iter = res . entries ( ) ;
rank: 782
score: 98.97296142578125
patch: Iterator iter = res = res . size ( ) ;
rank: 783
score: 99.0445048014323
patch: Vector v = res . get CaMeL Dimension ( ) ;
rank: 783
score: 98.989892578125
patch: Hashtable iter = res . entries ( ) ;
rank: 783
score: 98.97615966796874
patch: int size = res . entries . length ;
rank: 783
score: 98.9718994140625
patch: Iterator iter = v . iter ( ) ;
rank: 783
score: 98.96509898792614
patch: entries = new Real CaMeL Vector ( this ) ;
rank: 784
score: 99.04447428385417
patch: Iterator length = res . entries . iterator ( ) ;
rank: 784
score: 99.00140935724431
patch: Iterator < ) = res . iterator ( ) ;
rank: 784
score: 98.98829345703125
patch: Object list = res . entries ( ) ;
rank: 784
score: 98.981005859375
patch: Iterator iter = v . length ( ) ;
rank: 784
score: 98.975439453125
patch: Iterator iter = size . iterator ( ) ;
rank: 784
score: 98.96342329545455
patch: Iterator iter 1 = res . iterator ( ) ;
rank: 785
score: 99.0908954326923
patch: Iterator < iter > iter = res . iterator ( ) ;
rank: 785
score: 99.043212890625
patch: res . set CaMeL Entry ( iter . value ) ;
rank: 785
score: 98.9876708984375
patch: Iterator iter = res . entries ( int ) ;
rank: 785
score: 98.97954767400569
patch: iter . iter . has CaMeL Next ( ) ;
rank: 786
score: 98.98505859375
patch: Iterator iter = $STRING$ . entries ( ) ;
rank: 786
score: 98.97776489257812
patch: Iterator iter = res . [ $NUMBER$ ] ;
rank: 786
score: 98.96460978190105
patch: Iterator iter = res . entries . [ 0 ] ;
rank: 787
score: 99.04286702473958
patch: Iterator iter = $NUMBER$ . entries . iterator ( ) ;
rank: 787
score: 98.99580522017045
patch: Iterator iter = res . get ( 1 ) ;
rank: 787
score: 98.97670676491477
patch: Iterator iter . has CaMeL Next ( ) ; &&
rank: 787
score: 98.97147993607955
patch: Iterator iter $NUMBER$ = res . iterator ( ) ;
rank: 787
score: 98.97132364908855
patch: Iterator iter = res : res . size ( ) ;
rank: 787
score: 98.96396891276042
patch: Vector res = new Real CaMeL Vector ( this ) ;
rank: 788
score: 99.10943134014423
patch: final int [ ] res . entries = res . entries ;
rank: 788
score: 98.99578302556819
patch: Iterator iter . = res . entries ( ) ;
rank: 788
score: 98.9822665127841
patch: Iterator < ] : res . iterator ( ) ;
rank: 788
score: 98.97501997514205
patch: Iterator iter = entries . size ( ) ; }
rank: 788
score: 98.96983337402344
patch: Iterator iter = size ( ) ;
rank: 789
score: 99.04141235351562
patch: Iterator iter = v . iterator ( ) ; for (
rank: 789
score: 98.99138849431819
patch: Iterator iter = res . iterator ( ) ; iter
rank: 789
score: 98.98194469105114
patch: int iter = res . entries . ( ) ;
rank: 789
score: 98.97414328835227
patch: Iterator iter = res . matches ( 0 ) ;
rank: 789
score: 98.9561279296875
patch: Object res = res . clone ( ) ;
rank: 790
score: 98.98177490234374
patch: Iterator iter = res . delete ( ) ;
rank: 790
score: 98.97188720703124
patch: Iterator iter = res . entries . has CaMeL
rank: 790
score: 98.97029622395833
patch: Iterator iter = res . next ( ) . entries ;
rank: 790
score: 98.95543323863636
patch: final Iterator iter = v . entries ( ) ;
rank: 791
score: 98.9875244140625
patch: Iterator iter = res . entries ( ) )
rank: 791
score: 98.98046875
patch: Iterator ] res = res . entries ( ) ;
rank: 791
score: 98.96962280273438
patch: Iterator iter = res . get CaMeL Real CaMeL
rank: 792
score: 99.10581618088942
patch: final Iterator [ ] res = res . entries ( ) ;
rank: 792
score: 99.08777794471153
patch: Iterator < iter . has CaMeL Next ( ) ; ) {
rank: 792
score: 98.9772061434659
patch: final Iterator iter = res . copy ( ) ;
rank: 792
score: 98.96993001302083
patch: Iterator iter = v . entries > iterator ( ) ;
rank: 792
score: 98.96931596235795
patch: Iterator iter = res . contains ( this ) ;
rank: 792
score: 98.94988458806819
patch: data = res . get CaMeL Data ( ) ;
rank: 793
score: 99.10501802884616
patch: Iterator < Throwable > iter = res . entries ( ) ;
rank: 793
score: 99.03724161783855
patch: Iterator iter = res [ ] . iterator ( ) ;
rank: 793
score: 98.98323197798295
patch: Iterator iter = res . entries [ null ] ;
rank: 793
score: 98.9745760830966
patch: iterator = res . map . iterator ( ) ;
rank: 793
score: 98.96900177001953
patch: Iterator iter = res . get CaMeL
rank: 793
score: 98.94984944661458
patch: iter = v . entries ( ) ;
rank: 794
score: 98.98276589133523
patch: iter = entries . entries . iterator ( ) ;
rank: 794
score: 98.97369384765625
patch: res . entries = res . entries ) ;
rank: 794
score: 98.9674072265625
patch: Iterator iter = res . entries ( ) .
rank: 794
score: 98.9571533203125
patch: Iterator iter = res . matches ( this ) ;
rank: 794
score: 98.94848022460937
patch: Set iter = res . entries ( ) ;
rank: 795
score: 99.03650919596355
patch: Iterator iter = v == null . iterator ( ) ;
rank: 795
score: 98.98166725852273
patch: Iterator iter iterator = res . iterator ( ) ;
rank: 795
score: 98.97108764648438
patch: Iterator 1 = res . entries ( ) ;
rank: 795
score: 98.96108176491477
patch: iter = list . entries . iterator ( ) ;
rank: 796
score: 99.03563435872395
patch: int key = res . get CaMeL Dimension ( ) ;
rank: 796
score: 98.97973022460937
patch: Iterator iter = res . get > null ;
rank: 796
score: 98.96331232244319
patch: final Iterator iter = entries . size ( ) ;
rank: 796
score: 98.95697576349431
patch: result = res . entries . iterator ( ) ;
rank: 796
score: 98.95585493607955
patch: Iterator iter = ! res . size ( ) ;
rank: 796
score: 98.9464444247159
patch: entries = res . entries . clone ( ) ;
rank: 797
score: 99.03516642252605
patch: long iter = res . get CaMeL Dimension ( ) ;
rank: 797
score: 98.9786709872159
patch: Iterator iter = res . read ( res ) ;
rank: 797
score: 98.96875
patch: Iterator $NUMBER$ ] = res . entries ( ) ;
rank: 797
score: 98.9567538174716
patch: iterator = res . list . iterator ( ) ;
rank: 797
score: 98.9523193359375
patch: check CaMeL Vector CaMeL Dimensions ( res ) ;
rank: 798
score: 99.0342508951823
patch: Iterator iter = iter . iterator ( ) ; for (
rank: 798
score: 98.9770174893466
patch: Iterator iter = entries . get ( res ) ;
rank: 798
score: 98.96678670247395
patch: Iterator iterator = this . entries . iterator ( ) ;
rank: 798
score: 98.96172540838069
patch: Iterator < Real CaMeL Vector > iter = res ;
rank: 798
score: 98.95513361150569
patch: res . entries = res . map . entries ;
rank: 798
score: 98.9522705078125
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new
rank: 798
score: 98.94445190429687
patch: List res = res . list ( ) ;
rank: 799
score: 99.071044921875
patch: for ( while ( iter . has CaMeL Next ( ) )
rank: 799
score: 98.96085981889205
patch: Iterator iter = entries . iterator ( this ) ;
rank: 799
score: 98.95392400568181
patch: m = res . entries . iterator ( ) ;
rank: 799
score: 98.94379216974431
patch: Iterator iter = res . entries . iterator ( ;
rank: 800
score: 98.9742764559659
patch: / Iterator iter = res . iterator ( ) ;
rank: 800
score: 98.96727405894886
patch: Iterator ] entries = res . entries ( ) ;
rank: 800
score: 98.96031605113636
patch: Iterator iter = res . iterator ( 0 ) ;
rank: 800
score: 98.94242720170455
patch: res . size = res . size ( ) ;
rank: 801
score: 98.9710205078125
patch: = res . entries . iterator ( ) ;
rank: 801
score: 98.96650390625
patch: iter = res . entries ( null ) ;
rank: 801
score: 98.95929509943181
patch: Iterator iter = res . size ( ) ; {
rank: 801
score: 98.94999389648437
patch: Iterator iterator = list . iterator ( ) ;
rank: 802
score: 99.02935791015625
patch: Iterator iter = res : res . entries ( ) ;
rank: 802
score: 98.97028142755681
patch: entries . iterator ( ) . iterator ( ) .
rank: 802
score: 98.96648559570312
patch: boolean iter = res . entries ( ) ;
rank: 802
score: 98.958984375
patch: else res . set CaMeL Entry ( 0 ) ;
rank: 802
score: 98.94487970525569
patch: Iterator iter = res . size iterator ( ) ;
rank: 802
score: 98.94082641601562
patch: Iterator iter = res . iterator . ) ;
rank: 803
score: 99.06827799479167
patch: Iterator iter = this . iterator . iterator ( ) ;
rank: 803
score: 99.02726606889205
patch: Iterator iter = res $NUMBER$ . iterator ( ) ;
rank: 803
score: 98.9657315340909
patch: final int iter = res . iterator ( ) ;
rank: 803
score: 98.95611572265625
patch: Iterator iter = v . Iterator ( ) ;
rank: 803
score: 98.94797585227273
patch: state = res . get CaMeL State ( ) ;
rank: 803
score: 98.94379216974431
patch: Iterator iter = res ) . size ( ) ;
rank: 803
score: 98.94045188210227
patch: final Iterator iterator = res . iterator ( ) ;
rank: 804
score: 99.08323160807292
patch: Insets iter = res . entries . iterator ( ) ;
rank: 804
score: 99.02602317116477
patch: Iterator ( res . entries . iterator ( ) )
rank: 804
score: 98.96290172230114
patch: final int iter = entries . iterator ( ) ;
rank: 804
score: 98.95923461914063
patch: Iterator iter = Iterator . size ( ) ;
rank: 804
score: 98.94706587357955
patch: Iterator iter = v . get ( res ) ;
rank: 805
score: 99.08223470052083
patch: int [ ] res = res . entries ( ) ;
rank: 805
score: 99.06674194335938
patch: Set list = res . entries . iterator ( ) ;
rank: 805
score: 98.96220259232955
patch: int iter = res . entries ( null ) ;
rank: 805
score: 98.95767550998264
patch: Iterator iter = res [ 0 ] ;
rank: 805
score: 98.95258331298828
patch: Iterator iter = entries . length ;
rank: 806
score: 99.06639685997597
patch: for ( if ( iter . has CaMeL Next ( ) )
rank: 806
score: 98.96425559303977
patch: iter = res . entries . iter ( ) ;
rank: 806
score: 98.96208052201705
patch: Iterator -- iter = res . entries ( ) ;
rank: 806
score: 98.95247025923295
patch: Iterator iter = res . iterator ( ) ; {
rank: 806
score: 98.944091796875
patch: data = res . entries . iterator ( ) ;
rank: 806
score: 98.93822021484375
patch: if ( v != null ) return res ;
rank: 807
score: 98.96181640625
patch: Iterator iter = out . iterator ( ) ;
rank: 807
score: 98.95093883167614
patch: iter = this . entries . iterator ( ) ;
rank: 807
score: 98.9440030184659
patch: children = res . entries . iterator ( ) ;
rank: 808
score: 99.0654296875
patch: for ( Real CaMeL Vector res : res ) {
rank: 808
score: 99.01929820667614
patch: Iterator iter = res . entries size ( ) ;
rank: 809
score: 99.06542029747597
patch: Iterator while ( res . has CaMeL Next ( ) ) {
rank: 809
score: 99.01713423295455
patch: Iterator iter = res . entries ( ) != null
rank: 809
score: 98.96199174360795
patch: Iterator iter = res . entries ( ) . ;
rank: 809
score: 98.93727805397727
patch: iter = v . entries . size ( ) ;
rank: 809
score: 98.9285000887784
patch: Iterator iterator = res . iterator ( ) ; ;
rank: 810
score: 99.06527005709134
patch: if ( v . get CaMeL Dimension ( ) != 0 )
rank: 810
score: 98.94709916548295
patch: Iterator iter = new Real CaMeL Vector ( ) ;
rank: 810
score: 98.93253173828126
patch: Iterator iter = res . entries . FALSE ;
rank: 810
score: 98.92592551491477
patch: new Iterator iter = res . iterator ( ) ;
rank: 811
score: 99.0763272372159
patch: final Object res = res . get ( ) ;
rank: 811
score: 99.06479899088542
patch: Iterator iter *= res . entries . iterator ( ) ;
rank: 811
score: 98.95948375355114
patch: iter . iterator ( ) . iterator ( ) ;
rank: 811
score: 98.94406960227273
patch: Iterator iter = . has CaMeL Next ( ) ;
rank: 811
score: 98.94404296875
patch: Iterator iter = ) . iterator ( ) ;
rank: 811
score: 98.92979736328125
patch: Iterator iter = res . entries . 0 ;
rank: 811
score: 98.9244717684659
patch: iter = v . entries . entries ( ) ;
rank: 812
score: 98.95647638494319
patch: public Iterator iter = res . entries ( ) ;
rank: 812
score: 98.93162952769886
patch: ; Iterator iter = res . iterator ( ) ;
rank: 812
score: 98.9278231534091
patch: Iterator iter = res . is CaMeL Empty ( )
rank: 812
score: 98.92363947088069
patch: res = res . entries . iterator ( ) ;
rank: 813
score: 99.063720703125
patch: if ( v . get CaMeL Dimension ( ) > 0 )
rank: 813
score: 98.94046630859376
patch: List iter = entries . iterator ( ) ;
rank: 814
score: 99.0634014423077
patch: Iterator >= iter = res . entries . iterator ( ) ;
rank: 814
score: 99.00804443359375
patch: int iter = iter . iterator ( ) ;
rank: 814
score: 98.95634321732955
patch: final int iter = entries . size ( ) ;
rank: 814
score: 98.9561767578125
patch: Iterator iter ( res . next ( ) ) ;
rank: 814
score: 98.92338423295455
patch: Iterator iter = v . entries ( ) ) ;
rank: 815
score: 98.95328979492187
patch: int iter = res . clone ( ) ;
rank: 815
score: 98.9400967684659
patch: Iterator iter = res . entries . length ; ;
rank: 815
score: 98.93466186523438
patch: Iterator iter = res . entries )
rank: 815
score: 98.9300204190341
patch: final Iterator iter = list . iterator ( ) ;
rank: 815
score: 98.92256303267045
patch: res . entries = res . res . entries ;
rank: 816
score: 98.9558993252841
patch: Iterator iter = res . entries ( ) ; iter
rank: 816
score: 98.93422629616477
patch: Iterator iter = res . iterator ( 1 ) ;
rank: 816
score: 98.92055838448661
patch: if ( res != null )
rank: 817
score: 99.07139078776042
patch: int [ ] iter = res . entries ( ) ;
rank: 817
score: 98.9972412109375
patch: res . set CaMeL Entry ( this ) ;
rank: 817
score: 98.9557596842448
patch: Iterator iter = 0 ;
rank: 817
score: 98.94917436079545
patch: Iterator iter = res . list ( null ) ;
rank: 817
score: 98.926611328125
patch: int entries = res . entries . length ;
rank: 818
score: 99.06110088641827
patch: Iterator iter -- = res . entries . iterator ( ) ;
rank: 818
score: 98.99320845170455
patch: if ( iter . has CaMeL Next ( ) )
rank: 818
score: 98.94589572482639
patch: iter = entries . iterator ( ) ;
rank: 818
score: 98.93569113991477
patch: Iterator iter = res . contains ( null ) ;
rank: 818
score: 98.91978149414062
patch: List iter = res . iterator ( ) ;
rank: 819
score: 98.9888916015625
patch: Vector iter = res . iterator ( ) ;
rank: 819
score: 98.95380859375
patch: Iterator iter = res . capacity ( ) ;
rank: 819
score: 98.93529163707386
patch: Iterator iter = res . Iterator ( 0 ) ;
rank: 819
score: 98.91933371803977
patch: entries . iterator ( ) . next ( ) ;
rank: 820
score: 99.06904740767045
patch: final Object entries = res . entries ( ) ;
rank: 820
score: 99.05904134114583
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > }
rank: 820
score: 98.94519653320313
patch: Object entries = res . entries ( ) ;
rank: 820
score: 98.93431396484375
patch: Iterator iter = v . next ( ) ;
rank: 820
score: 98.92701305042614
patch: Iterator iter = get CaMeL Dimension ( iter ) ;
rank: 820
score: 98.9192227450284
patch: entries = res . list . entries ( ) ;
rank: 821
score: 98.98420854048295
patch: int Iterator iter = res . iterator ( ) ;
rank: 821
score: 98.9444580078125
patch: Iterator < ] > iter . iterator ( ) ;
rank: 821
score: 98.93403764204545
patch: Iterator iter = entries ) . iterator ( ) ;
rank: 821
score: 98.92433471679688
patch: Iterator iter = res . start ( ) ;
rank: 821
score: 98.91843483664773
patch: res . entries = res . clone ( ) ;
rank: 821
score: 98.90505149147727
patch: Iterator iter = res . entries . iterator 0 ;
rank: 822
score: 98.94441528320313
patch: double iter = res . entries ( ) ;
rank: 822
score: 98.92227172851562
patch: res . set CaMeL Index ( 0 ) ;
rank: 822
score: 98.9176358309659
patch: if ( res . size ( ) != 0 )
rank: 822
score: 98.904736328125
patch: Vector iter = v . entries ( ) ;
rank: 823
score: 99.06503295898438
patch: if ( ! res . is CaMeL Empty ( ) )
rank: 823
score: 98.95083618164062
patch: Iterator iter = copy . iterator ( ) ;
rank: 823
score: 98.94395616319444
patch: Iterator < ) . iterator ( ) ;
rank: 823
score: 98.93157958984375
patch: Iterator . has CaMeL Next ( ) ;
rank: 823
score: 98.92216352982955
patch: Iterator iter = res . clone ( ) ; ;
rank: 823
score: 98.91781005859374
patch: Iterator iter = res . entries . iterator ;
rank: 823
score: 98.915576171875
patch: if ( res != null ) res . )
rank: 824
score: 99.06486002604167
patch: Iterator iter = ( entries . iterator ( ) ) ;
rank: 824
score: 98.94352416992187
patch: int iter = res . copy ( ) ;
rank: 824
score: 98.91928932883523
patch: while ( res . size ( ) > 0 )
rank: 824
score: 98.91465928819444
patch: iter = res . size ( ) ;
rank: 825
score: 99.05503336588542
patch: Iterator < iter . has CaMeL Next ( ) ; )
rank: 825
score: 98.94582297585227
patch: final Iterator iter = $STRING$ . iterator ( ) ;
rank: 825
score: 98.93149636008523
patch: iterator = res . get CaMeL Dimension ( ) ;
rank: 825
score: 98.91871948242188
patch: Enumeration iter = v . entries ( ) ;
rank: 825
score: 98.90597873263889
patch: res = res . entries ( ) ;
rank: 825
score: 98.90177778764205
patch: Iterator iter = res . [ - 1 ] ;
rank: 826
score: 98.9427490234375
patch: int iter = res . entries ( $NUMBER$ ) ;
rank: 826
score: 98.93116344105114
patch: Iterator iter = entries . iterator ( 1 ) ;
rank: 826
score: 98.91820179332386
patch: out = res . entries . size ( ) ;
rank: 826
score: 98.90724875710227
patch: Iterator iter = res . iterator ( ) 1 ;
rank: 827
score: 99.06411743164062
patch: int length = res . entries . size ( ) ;
rank: 827
score: 98.94301147460938
patch: Iterator iter = res . parse ( ) ;
rank: 827
score: 98.9422119140625
patch: Iterator iter = data . entries ( ) ;
rank: 827
score: 98.92775656960227
patch: Iterator iter = res . Iterator ( this ) ;
rank: 827
score: 98.91414018110795
patch: res . entries = res . list . entries ;
rank: 828
score: 99.0494384765625
patch: for ( Real CaMeL Vector res : res . entries )
rank: 828
score: 98.97164916992188
patch: Iterator iter = $NUMBER$ . iterator ( ) ;
rank: 828
score: 98.94281560724431
patch: Iterator iter = res . contains ( res ) ;
rank: 828
score: 98.93722195095486
patch: res . entries . iterator ( ) ;
rank: 828
score: 98.899658203125
patch: Iterator iter ( res . size ( ) ) ;
rank: 828
score: 98.89827880859374
patch: Collection res = res . iterator ( ) ;
rank: 828
score: 98.89747314453125
patch: List iter = v . entries ( ) ;
rank: 829
score: 99.0480712890625
patch: Enumeration iter = res . iterator ( ) ;
rank: 829
score: 98.97111372514205
patch: Iterator iter = res . equals ( $STRING$ ) ;
rank: 829
score: 98.9418057528409
patch: Iterator iter = res . entries ( ) ) }
rank: 829
score: 98.9353759765625
patch: Iterator * ] res . iterator ( ) ;
rank: 829
score: 98.91798706054688
patch: Iterator iter = res . end ( ) ;
rank: 829
score: 98.90914916992188
patch: Iterator iter = key . iterator ( ) ;
rank: 829
score: 98.89700317382812
patch: Iterator entries = v . iterator ( ) ;
rank: 830
score: 98.94126198508523
patch: Iterator iter = res . split ( res ) ;
rank: 830
score: 98.90858043323864
patch: Iterator iter 0 = res . iterator ( ) ;
rank: 830
score: 98.89682839133523
patch: Iterator iter = res . entries . iterator $NUMBER$ ;
rank: 830
score: 98.89676513671876
patch: Vector res = res . entries ( ) ;
rank: 830
score: 98.89147338867187
patch: int value = iter . size ( ) ;
rank: 831
score: 99.06081136067708
patch: int [ ] iterator = res . entries ( ) ;
rank: 831
score: 98.96738503196023
patch: Iterator iter = res . entries . entries ( )
rank: 831
score: 98.94118430397727
patch: Iterator iter = $STRING$ . iterator ( ) ; ;
rank: 831
score: 98.93492431640625
patch: Enumeration entries = res . entries ( ) ;
rank: 831
score: 98.907470703125
patch: if ( res . size ( ) > 1 )
rank: 831
score: 98.89662475585938
patch: Set res = res . clone ( ) ;
rank: 831
score: 98.89035866477273
patch: Iterator iter = res . entries . iterator ) ;
rank: 832
score: 98.96668590198864
patch: Iterator iter = v . entries . iterator ( )
rank: 832
score: 98.91040802001953
patch: Iterator iter = res . has CaMeL
rank: 832
score: 98.90507368607955
patch: res . iterator ( ) . remove ( ) ;
rank: 832
score: 98.8890380859375
patch: Iterator iter = res . size ( ) ) ;
rank: 833
score: 98.933349609375
patch: long iter = res . entries ( ) ;
rank: 833
score: 98.90419699928977
patch: iterator = v . entries . iterator ( ) ;
rank: 833
score: 98.89418334960938
patch: Object res = res . get ( ) ;
rank: 834
score: 99.04354858398438
patch: Enumeration iter = v . entries . iterator ( ) ;
rank: 834
score: 98.93538041548295
patch: Iterator iter . = res . iterator ( ) ;
rank: 834
score: 98.93096313476562
patch: Iterator iter = res . join ( ) ;
rank: 834
score: 98.89564819335938
patch: assert iter . has CaMeL Next ( ) ;
rank: 834
score: 98.89022216796874
patch: int iter = v . size ( ) ;
rank: 835
score: 99.04269409179688
patch: Iterator iter == res . entries . iterator ( ) ;
rank: 835
score: 98.93494762073864
patch: Iterator iter = new res . iterator ( ) ;
rank: 835
score: 98.89161376953125
patch: Iterator iter = iter . remove ( ) ;
rank: 835
score: 98.88742065429688
patch: Collection iter = res . iterator ( ) ;
rank: 835
score: 98.87751908735795
patch: Iterator iter = res . entries / ( ) ;
rank: 836
score: 98.9335049715909
patch: Iterator iter = res . entries > ( ) ;
rank: 836
score: 98.92567138671875
patch: Iterator v = res . entries ( ) ;
rank: 836
score: 98.90638427734375
patch: Iterator iter = res . entries . false ;
rank: 836
score: 98.88707275390625
patch: Iterator iter = super . iterator ( ) ;
rank: 837
score: 98.956298828125
patch: Iterator iter = res . entries . size ( )
rank: 837
score: 98.8999267578125
patch: Iterator iter = entries . entries . length ;
rank: 837
score: 98.88610229492187
patch: Iterator < = v . iterator ( ) ;
rank: 837
score: 98.88577880859376
patch: Iterator iter : res . size ( ) ;
rank: 837
score: 98.88136596679688
patch: assert res . size ( ) > 0 ;
rank: 838
score: 99.04139200846355
patch: Iterator while ( res . has CaMeL Next ( ) )
rank: 838
score: 98.91876831054688
patch: Iterator iter = list . iter ( ) ;
rank: 838
score: 98.88552856445312
patch: List iter = res . list ( ) ;
rank: 838
score: 98.87248091264205
patch: Iterator iter = ! v . size ( ) ;
rank: 839
score: 99.0504659016927
patch: / * Iterator entries = res . entries ( ) ;
rank: 839
score: 99.04053751627605
patch: Set iterator = res . entries . iterator ( ) ;
rank: 839
score: 98.93022017045455
patch: Iterator iter = new res . entries ( ) ;
rank: 839
score: 98.91785278320313
patch: Iterator iter = list . size ( ) ;
rank: 839
score: 98.89237670898437
patch: Iterator iter = res . entries . entries .
rank: 839
score: 98.88379516601563
patch: Object res = res . entries ( ) ;
rank: 839
score: 98.88026733398438
patch: dim . entries . add ( res ) ;
rank: 839
score: 98.8705166903409
patch: Iterator iter advance = res . size ( ) ;
rank: 840
score: 99.05007934570312
patch: int length = res . get CaMeL Index ( ) ;
rank: 840
score: 99.03909301757812
patch: Iterator iter > iter = res . iterator ( ) ;
rank: 840
score: 98.91770935058594
patch: entries . add ( res ) ;
rank: 840
score: 98.890673828125
patch: Iterator iter = v . read ( ) ;
rank: 840
score: 98.88043767755681
patch: Iterator iter = ! v . iterator ( ) ;
rank: 840
score: 98.87044677734374
patch: List entries = v . entries ( ) ;
rank: 841
score: 99.04622802734374
patch: if ( res != null ) throw null ;
rank: 841
score: 99.03770862926136
patch: for ( Real CaMeL Vector v : res ) {
rank: 841
score: 98.9211669921875
patch: entries iter = res . entries ( ) ;
rank: 841
score: 98.87412719726562
patch: int entries = res . size ( ) ;
rank: 841
score: 98.8671875
patch: Iterator iter = res . is CaMeL Array ( )
rank: 842
score: 99.0375264485677
patch: for ( Real CaMeL Vector v : res . entries )
rank: 842
score: 98.95100541548295
patch: iter = iter . has CaMeL Next ( ) ;
rank: 842
score: 98.91887817382812
patch: Iterator iter = 0 . iter ( ) ;
rank: 842
score: 98.9114501953125
patch: Set list = res . entries ( ) ;
rank: 842
score: 98.8848388671875
patch: Iterator iter = res . split ( ) ;
rank: 842
score: 98.86843872070312
patch: Iterator iter = res . get ( new ;
rank: 842
score: 98.86651611328125
patch: Iterator iter = res ;
rank: 843
score: 99.0442227450284
patch: final Object iter = res . entries ( ) ;
rank: 843
score: 98.95005493164062
patch: Iterator iter = 1 . iterator ( ) ;
rank: 843
score: 98.90990600585937
patch: res . set CaMeL Name ( $STRING$ ) ;
rank: 843
score: 98.884130859375
patch: Iterator iter = res . entries . end ;
rank: 843
score: 98.87162272135417
patch: res . res = res . entries ;
rank: 843
score: 98.8638028231534
patch: Iterator iter = v . entries . ( ) ;
rank: 844
score: 99.0428799715909
patch: Iterator iter = entries . iterator ( ) ; else
rank: 844
score: 99.03709920247395
patch: if ( v . size ( ) > 0 ) {
rank: 844
score: 98.94957275390625
patch: Iterator iter = set . iterator ( ) ;
rank: 844
score: 98.90882568359375
patch: iter = res . entries ( $NUMBER$ ) ;
rank: 844
score: 98.88233032226563
patch: Iterator iter = res . interrupt ( ) ;
rank: 844
score: 98.8706787109375
patch: if ( v != null ) res . ;
rank: 844
score: 98.863525390625
patch: res . set CaMeL Length ( 1 ) ;
rank: 844
score: 98.86107788085937
patch: Iterator iter = res . wait ( ) ;
rank: 845
score: 98.9479647549716
patch: Iterator iter = res . entries [ 1 ] ;
rank: 845
score: 98.90847778320312
patch: Iterator * ] list . iterator ( ) ;
rank: 845
score: 98.87016465928819
patch: Iterator < ) . next ( ) ;
rank: 845
score: 98.8596435546875
patch: res . set CaMeL Entry ( $STRING$ ) ;
rank: 845
score: 98.8567138671875
patch: int size = v . size ( ) ;
rank: 846
score: 99.04034978693181
patch: final Object res = res . entries ( ) ;
rank: 846
score: 98.94612260298295
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res
rank: 846
score: 98.90269470214844
patch: int iter . iterator ( ) ;
rank: 846
score: 98.88021511501736
patch: Iterator iter = entries . ( ) ;
rank: 846
score: 98.85420532226563
patch: res . entries [ 0 ] = null ;
rank: 847
score: 98.911279296875
patch: Iterator iter = start . iterator ( ) ;
rank: 847
score: 98.90265502929688
patch: Iterator value = res . entries ( ) ;
rank: 847
score: 98.87950439453125
patch: Iterator iter = res . matches ( ) ;
rank: 847
score: 98.8746826171875
patch: Iterator iter += res . size ( ) ;
rank: 847
score: 98.86849365234374
patch: Set iter = res . iterator ( ) ;
rank: 847
score: 98.85695190429688
patch: Vector entries = v . entries ( ) ;
rank: 848
score: 98.90090603298611
patch: this . res . iterator ( ) ;
rank: 848
score: 98.852490234375
patch: Iterator iter = res . size ( ) )
rank: 849
score: 98.90017700195312
patch: short iter = res . entries ( ) ;
rank: 849
score: 98.87646484375
patch: Iterator iterator = res . size ( ) ;
rank: 849
score: 98.87455610795455
patch: Iterator iter ++ . has CaMeL Next ( ) ;
rank: 849
score: 98.86182250976563
patch: Iterator < = res . iterator ( ) ;
rank: 849
score: 98.849560546875
patch: int value = iter . advance ( ) ;
rank: 850
score: 99.03185017903645
patch: List v = res . entries . iterator ( ) ;
rank: 850
score: 98.93751109730114
patch: Iterator iter = res . entries ( iter ) ;
rank: 850
score: 98.90554470486111
patch: Iterator iter = . iterator ( ) ;
rank: 850
score: 98.87570190429688
patch: Iterator iter = this . entries . length ;
rank: 850
score: 98.87374267578124
patch: Iterator entries = entries . iterator ( ) ;
rank: 850
score: 98.85879177517361
patch: entries = res . entries . entries ;
rank: 850
score: 98.84850463867187
patch: Iterator iter = res > iterator ( ) ;
rank: 851
score: 99.02900390625
patch: if ( res != null ) return iter ;
rank: 851
score: 98.905126953125
patch: Iterator iter = $STRING$ . next ( ) ;
rank: 851
score: 98.89913940429688
patch: float iter = res . entries ( ) ;
rank: 851
score: 98.87562255859375
patch: Iterator iter = res . entries . true ;
rank: 851
score: 98.85846557617188
patch: Set res = res . iterator ( ) ;
rank: 852
score: 98.89352416992188
patch: Iterator end = res . entries ( ) ;
rank: 852
score: 98.87344021267361
patch: res . set CaMeL Entry ( ) ;
rank: 852
score: 98.87203369140624
patch: Iterator iter = res . Enum ( ) ;
rank: 852
score: 98.85647583007812
patch: Iterator map = res . iterator ( ) ;
rank: 852
score: 98.84959106445312
patch: int size = entries . size ( ) ;
rank: 853
score: 99.02583451704545
patch: Iterator < iter : res . iterator ( ) ;
rank: 853
score: 98.90145874023438
patch: Iterator iter = iterator ( ) ;
rank: 853
score: 98.89209856305804
patch: entries . iterator ( ) ;
rank: 853
score: 98.85606689453125
patch: Iterator iter ; res . iterator ( ) ;
rank: 853
score: 98.84915161132812
patch: Iterator iter = v . list ( ) ;
rank: 854
score: 98.89991455078125
patch: Iterator iter = max . iterator ( ) ;
rank: 854
score: 98.89107055664063
patch: Iterator iter = sum . entries ( ) ;
rank: 854
score: 98.86907404119319
patch: i = res . entries . iterator ( ) ;
rank: 854
score: 98.86904907226562
patch: int iter = res . entries . ) ;
rank: 854
score: 98.85479736328125
patch: Iterator iter = res . iterator . ;
rank: 854
score: 98.84120686848958
patch: size = res . size ( ) ;
rank: 855
score: 98.93037109375
patch: Vector iter = entries . iterator ( ) ;
rank: 855
score: 98.898095703125
patch: Iterator iter = new . iterator ( ) ;
rank: 855
score: 98.89033203125
patch: / iter = res . entries ( ) ;
rank: 855
score: 98.86807861328126
patch: List iter = res . size ( ) ;
rank: 855
score: 98.85046997070313
patch: Collection res = res . list ( ) ;
rank: 856
score: 98.92822875976563
patch: super . ebe CaMeL Divide ( res ) ;
rank: 856
score: 98.84893798828125
patch: List res = res . iterator ( ) ;
rank: 857
score: 99.01465953480114
patch: final int entries = res . entries . length ;
rank: 857
score: 98.88883056640626
patch: Iterator * ] entries . iterator ( ) ;
rank: 857
score: 98.86528930664062
patch: List res = entries . iterator ( ) ;
rank: 857
score: 98.859716796875
patch: Iterator iter = res . max ( ) ;
rank: 857
score: 98.84849853515625
patch: iter = res . entries ( ) ; ;
rank: 857
score: 98.83901977539062
patch: Iterator iter = min . iterator ( ) ;
rank: 857
score: 98.82882080078124
patch: Iterator iter = $STRING$ . size ( ) ;
rank: 858
score: 98.89556884765625
patch: Iterator iter = in . iterator ( ) ;
rank: 858
score: 98.88652954101562
patch: Iterator iter = key . entries ( ) ;
rank: 858
score: 98.86306762695312
patch: Iterator iter = res . load ( ) ;
rank: 858
score: 98.83768920898437
patch: Iterator iter = new Iterator ( res ) ;
rank: 859
score: 98.8596923828125
patch: Iterator . has CaMeL Next ( ) ; {
rank: 859
score: 98.85499267578125
patch: Iterator iter = res . entries . iterator (
rank: 859
score: 98.83692762586806
patch: iter = res . list ( ) ;
rank: 859
score: 98.82636108398438
patch: Iterator iter = res . entries / 0 ;
rank: 860
score: 98.893603515625
patch: iter = res . entries . ( ) ;
rank: 860
score: 98.84146118164062
patch: res . entries = res . entries ; ;
rank: 860
score: 98.83463745117187
patch: Iterator iter = data . size ( ) ;
rank: 861
score: 98.84132690429688
patch: Iterator size = res . iterator ( ) ;
rank: 861
score: 98.83444213867188
patch: res . set CaMeL Length ( $NUMBER$ ) ;
rank: 861
score: 98.82579956054687
patch: Iterator entries = v . entries ( ) ;
rank: 862
score: 99.00185324928977
patch: final int size = res . entries . length ;
rank: 862
score: 98.82286987304687
patch: int key = iter . size ( ) ;
rank: 863
score: 99.00519353693181
patch: Iterator iter = res . entries >> ( ) ;
rank: 863
score: 98.91405639648437
patch: res . set CaMeL Entry ( v ) ;
rank: 863
score: 98.88434448242188
patch: Iterator iter = res . replace ( ) ;
rank: 863
score: 98.87905883789062
patch: Iterator iter = random . entries ( ) ;
rank: 863
score: 98.84000651041667
patch: Iterator iter = v . iterator ( ;
rank: 863
score: 98.82032470703125
patch: for ( ) iter . advance ( ) ;
rank: 864
score: 98.91244506835938
patch: Iterator iter = res . entries > 0 ;
rank: 864
score: 98.85084025065105
patch: Iterator iter = res .
rank: 864
score: 98.8377685546875
patch: Map res = res . entries ( ) ;
rank: 865
score: 98.99061279296875
patch: Iterator iter && res . iterator ( ) ;
rank: 865
score: 98.88176812065973
patch: Iterator iter = new Iterator ( ) ;
rank: 865
score: 98.83768310546876
patch: iter = res . entries ( res ) ;
rank: 865
score: 98.81466064453124
patch: res . set CaMeL Entry ( 0 ) ;
rank: 866
score: 98.880126953125
patch: Iterator iterator = $STRING$ . iterator ( ) ;
rank: 866
score: 98.87328491210937
patch: Iterator [ ] res . iterator ( ) ;
rank: 867
score: 98.98316539417614
patch: Iterator iter = res . entries ( length ) ;
rank: 867
score: 98.89730224609374
patch: Vector iter = res . size ( ) ;
rank: 867
score: 98.87158203125
patch: entries = res . entries ( null ) ;
rank: 867
score: 98.833984375
patch: Iterator res = v . iterator ( ) ;
rank: 867
score: 98.83129272460937
patch: res . set CaMeL Daemon ( true ) ;
rank: 867
score: 98.80799560546875
patch: Iterator iter = res . sleep ( ) ;
rank: 868
score: 98.99077814275569
patch: super . entries = res . entries ( ) ;
rank: 868
score: 98.87437744140625
patch: Iterator iter = load . iterator ( ) ;
rank: 868
score: 98.83395385742188
patch: Collection iter = v . entries ( ) ;
rank: 868
score: 98.83089599609374
patch: Iterator v = res . iterator ( ) ;
rank: 869
score: 98.9875821200284
patch: final Iterator iter = entries . iter ( ) ;
rank: 869
score: 98.9760409268466
patch: while ( iter . has CaMeL Next ( ) )
rank: 869
score: 98.86928982204861
patch: final int entries . iterator ( ) ;
rank: 869
score: 98.83228895399306
patch: iterator = res . iterator ( ) ;
rank: 870
score: 98.97510875355114
patch: Iterator < iter = res . iterator ( ) ;
rank: 870
score: 98.89408569335937
patch: Iterator iter = chars . iterator ( ) ;
rank: 870
score: 98.868603515625
patch: m 1 = res . entries ( ) ;
rank: 870
score: 98.84508056640625
patch: int iter = res . length ( ) ;
rank: 871
score: 98.9853515625
patch: final int iter = res . size ( ) ;
rank: 871
score: 98.87210083007812
patch: Iterator iter = name . entries ( ) ;
rank: 871
score: 98.86561279296875
patch: Enumeration res = res . entries ( ) ;
rank: 871
score: 98.83046264648438
patch: List list = res . list ( ) ;
rank: 871
score: 98.807763671875
patch: Iterator iter = res . entries ; for (
rank: 872
score: 98.97047729492188
patch: Iterator iter += res . iterator ( ) ;
rank: 872
score: 98.8653564453125
patch: Collection size = res . entries ( ) ;
rank: 872
score: 98.83045305524554
patch: entries = res . entries ;
rank: 872
score: 98.82390679253473
patch: iter = list . iterator ( ) ;
rank: 873
score: 98.86510009765625
patch: byte iter = res . entries ( ) ;
rank: 873
score: 98.84318237304687
patch: else res . set CaMeL Entry ( ) ;
rank: 873
score: 98.79931640625
patch: int iterator = res . size ( ) ;
rank: 874
score: 98.88314819335938
patch: Iterator iter = Iterator . entries ( ) ;
rank: 874
score: 98.8655517578125
patch: iterator iter = res . entries ( ) ;
rank: 874
score: 98.86494140625
patch: Iterator $NUMBER$ = res . entries ( ) ;
rank: 875
score: 98.86343994140626
patch: Iterator iter = res . entries = null ;
rank: 876
score: 98.95606994628906
patch: Iterator iter . advance ( ) ;
rank: 876
score: 98.81258544921874
patch: Iterator list = list . iterator ( ) ;
rank: 876
score: 98.79573974609374
patch: Iterator iter = Math . size ( ) ;
rank: 877
score: 98.86172485351562
patch: Insets iter = res . entries ( ) ;
rank: 877
score: 98.83464050292969
patch: final iter . advance ( ) ;
rank: 877
score: 98.82433471679687
patch: Iterator list = v . iterator ( ) ;
rank: 877
score: 98.81016235351562
patch: super . entries . add ( res ) ;
rank: 877
score: 98.79771118164062
patch: Iterator iter = res . entries / $NUMBER$ ;
rank: 877
score: 98.7956298828125
patch: Open CaMeL Map CaMeL Real CaMeL Vector -- ;
rank: 878
score: 98.88040161132812
patch: Object res = iter . advance ( ) ;
rank: 878
score: 98.86141967773438
patch: res . arraycopy ( res . entries ) ;
rank: 878
score: 98.8232177734375
patch: res . entries = new Iterator ( ) ;
rank: 878
score: 98.79366455078124
patch: Iterator iter = break . iterator ( ) ;
rank: 879
score: 98.86138305664062
patch: Iterator iter = res . . ( ) ;
rank: 879
score: 98.81953938802083
patch: data = res . entries ( ) ;
rank: 879
score: 98.8165283203125
patch: Iterator iter = res . ( ) ;
rank: 879
score: 98.8009033203125
patch: result . entries = res . entries ;
rank: 879
score: 98.78916625976562
patch: Iterator iter = res . stop ( ) ;
rank: 880
score: 98.87776489257813
patch: Iterator iter = res instanceof Real CaMeL Vector ;
rank: 880
score: 98.86137084960937
patch: Iterator iterator = res . clone ( ) ;
rank: 880
score: 98.81715901692708
patch: if ( res . res != null )
rank: 881
score: 98.94883034446023
patch: for ( String key : res . entries ) {
rank: 881
score: 98.87769165039063
patch: Open CaMeL Map CaMeL Real CaMeL Vector v ;
rank: 881
score: 98.85788302951389
patch: final int iter . iterator ( ) ;
rank: 881
score: 98.81233723958333
patch: m = res . entries ( ) ;
rank: 881
score: 98.79853057861328
patch: Iterator iter = res . null ;
rank: 881
score: 98.78938802083333
patch: iter = iter . iterator ( ) ;
rank: 881
score: 98.78526611328125
patch: int value = iter . next ( ) ;
rank: 882
score: 98.97798295454545
patch: Iterator < int ++ res . size ( ) ;
rank: 882
score: 98.87551879882812
patch: Vector iter = iter . iterator ( ) ;
rank: 882
score: 98.79557291666667
patch: res . res = res . res ;
rank: 882
score: 98.79081726074219
patch: else res . advance ( ) ;
rank: 882
score: 98.7902099609375
patch: Iterator iter = ) . size ( ) ;
rank: 882
score: 98.78697374131944
patch: iter = res . clone ( ) ;
rank: 883
score: 98.9767733487216
patch: Iterator iter = res . get Iterator ( ) ;
rank: 883
score: 98.87531127929688
patch: Iterator iter = iterator . entries ( ) ;
rank: 883
score: 98.85288492838542
patch: Iterator iter = copy ( res ) ;
rank: 883
score: 98.78678385416667
patch: res . entries = res . list ;
rank: 883
score: 98.78209228515625
patch: List res = res . size ( ) ;
rank: 883
score: 98.77936662946429
patch: this . res = res ;
rank: 883
score: 98.77737087673611
patch: Iterator < Real CaMeL Vector > iter ;
rank: 884
score: 98.87077026367187
patch: int iter = iter . entries ( ) ;
rank: 884
score: 98.84987386067708
patch: Iterator = res . entries ( ) ;
rank: 884
score: 98.78641357421876
patch: Iterator iter >= res . iterator ( ) ;
rank: 884
score: 98.78489176432292
patch: dim . entries = res . entries ;
rank: 884
score: 98.77837456597223
patch: if ( v . entries != null )
rank: 884
score: 98.77339935302734
patch: Iterator iter = res . false ;
rank: 885
score: 98.976318359375
patch: if ( res . entries != null ) continue ;
rank: 885
score: 98.84939236111111
patch: Iterator iter = new iterator ( ) ;
rank: 885
score: 98.78386840820312
patch: Iterator iter = res . entries / 1 ;
rank: 885
score: 98.78330775669643
patch: res . entries = res ;
rank: 885
score: 98.77184186662946
patch: res . advance ( ) ;
rank: 885
score: 98.77041965060764
patch: iter = v . iterator ( ) ;
rank: 886
score: 98.97491455078125
patch: if ( res != null ) continue ;
rank: 886
score: 98.76919894748264
patch: Iterator < res . iterator ( ) ;
rank: 886
score: 98.76718478732639
patch: if ( res == null ) continue ;
rank: 886
score: 98.74091448102679
patch: entries . advance ( ) ;
rank: 887
score: 98.97417658025569
patch: final Iterator iter = res . remove ( ) ;
rank: 887
score: 98.84849243164062
patch: res . add ( res . res ) ;
rank: 887
score: 98.82840983072917
patch: res . res . entries ( ) ;
rank: 888
score: 98.82811143663194
patch: res . entries = this . entries ;
rank: 888
score: 98.77761840820312
patch: Iterator iter = v . length ;
rank: 888
score: 98.76503499348958
patch: res . res = this . res ;
rank: 889
score: 98.93440385298295
patch: Iterator < Real CaMeL Vector > iter = null ;
rank: 889
score: 98.84724731445313
patch: Iterator iter = list . next ( ) ;
rank: 889
score: 98.81793212890625
patch: this . res . entries ( ) ;
rank: 889
score: 98.77576293945313
patch: Iterator iter = res [ size ++ ] ;
rank: 889
score: 98.77171630859375
patch: int size = v . entries . length ;
rank: 889
score: 98.7042465209961
patch: Iterator iter = v . entries .
rank: 890
score: 98.80703396267361
patch: iterator = entries . iterator ( ) ;
rank: 890
score: 98.75765991210938
patch: res . set ( res ) ;
rank: 890
score: 98.74657331194196
patch: res . entries = new ;
rank: 890
score: 98.70011901855469
patch: Iterator iter = res . current CaMeL
rank: 891
score: 98.862353515625
patch: super . ebe CaMeL Divide ( v ) ;
rank: 891
score: 98.75489637586806
patch: Iterator iter = v . entries ( ;
rank: 891
score: 98.74589708116319
patch: if ( res == null ) break ;
rank: 891
score: 98.69890594482422
patch: int iter = res . entries .
rank: 892
score: 98.86082763671875
patch: res . set CaMeL Entry ( res ) ;
rank: 892
score: 98.83615112304688
patch: Iterator iter = res . trim ( ) ;
rank: 892
score: 98.80079481336806
patch: res . out . iterator ( ) ;
rank: 892
score: 98.76677856445312
patch: int value = v . entries . length ;
rank: 892
score: 98.75348578559027
patch: Iterator iter = res . iterator ( )
rank: 892
score: 98.69689263237848
patch: Iterator iter = res . entries . }
rank: 893
score: 98.91959838867187
patch: Iterator iter = res != null ? res .
rank: 893
score: 98.79115125868056
patch: this . entries . iterator ( ) ;
rank: 893
score: 98.69375174386161
patch: Iterator iter = res . ;
rank: 894
score: 98.91602783203125
patch: Iterator iter = log . iterator ( ) ;
rank: 894
score: 98.83186340332031
patch: res . add ( $STRING$ ) ;
rank: 894
score: 98.77956717354911
patch: iter . iterator ( ) ;
rank: 894
score: 98.74301486545139
patch: result = res . entries ( ) ;
rank: 894
score: 98.73697916666667
patch: res . entries = res . map ;
rank: 894
score: 98.6798324584961
patch: if ( res != null ) {
rank: 895
score: 98.91569213867187
patch: for ( if ( res != null ) {
rank: 895
score: 98.85269775390626
patch: Iterator iter = Math . iterator ( ) ;
rank: 895
score: 98.81129286024306
patch: res . entries . iterator ( ) .
rank: 895
score: 98.76583862304688
patch: int value = iter . value ( ) ;
rank: 895
score: 98.7655517578125
patch: Iterator iter = System . size ( ) ;
rank: 895
score: 98.73866102430556
patch: properties = res . entries ( ) ;
rank: 896
score: 98.96536865234376
patch: if ( res == null ) return false ;
rank: 896
score: 98.8526123046875
patch: Iterator iter = false . iterator ( ) ;
rank: 896
score: 98.7978515625
patch: Iterator iter = load ( res ) ;
rank: 896
score: 98.775634765625
patch: int entries . iterator ( ) ;
rank: 896
score: 98.7605712890625
patch: Iterator iter = res . entries . max ;
rank: 896
score: 98.73739963107639
patch: conn = res . entries ( ) ;
rank: 896
score: 98.72817993164062
patch: res . entries = new ) ;
rank: 896
score: 98.64912414550781
patch: iter . advance ( ) ; }
rank: 897
score: 98.91287231445312
patch: List iterator = res . entries ( ) ;
rank: 897
score: 98.85099962022569
patch: Iterator iter = res . size ( )
rank: 897
score: 98.76792689732143
patch: Iterator iter = - 1 ;
rank: 897
score: 98.73028564453125
patch: if ( res != null ) res ;
rank: 897
score: 98.72237723214286
patch: for ( ; ; ) {
rank: 897
score: 98.6357192993164
patch: iter . advance ( 0 ) ;
rank: 898
score: 98.84818725585937
patch: Iterator iter = Iterator . iter ( ) ;
rank: 898
score: 98.78560384114583
patch: Iterator iter = null ;
rank: 898
score: 98.764404296875
patch: entries = entries . entries ( ) ;
rank: 898
score: 98.75968017578126
patch: Iterator iter = new Iterator ( this ) ;
rank: 899
score: 98.95219116210937
patch: synchronized ( res ) { return res ; }
rank: 899
score: 98.76285400390626
patch: int key = iter . advance ( ) ;
rank: 899
score: 98.76256452287946
patch: res . list ( ) ;
rank: 899
score: 98.75699462890626
patch: res . set CaMeL Entry ( null ) ;
rank: 899
score: 98.72569444444444
patch: Iterator iter = res . iterator ) ;
rank: 899
score: 98.71341281467014
patch: iter = list . entries ( ) ;
rank: 899
score: 98.61804962158203
patch: Iterator iter = res . true ;
rank: 900
score: 98.90429077148437
patch: List list = res . iterator ( ) ;
rank: 900
score: 98.75939263237848
patch: iter = entries . entries ( ) ;
rank: 900
score: 98.71903991699219
patch: Iterator iter = res . iterator ;
rank: 900
score: 98.710205078125
patch: temp . entries = res . entries ;
rank: 900
score: 98.61046491350446
patch: Iterator iter = res ) ;
rank: 901
score: 98.76213989257812
patch: Iterator iter |= res . size ( ) ;
rank: 901
score: 98.75594075520833
patch: Iterator * ) . iterator ( ) ;
rank: 901
score: 98.60791015625
patch: Iterator iter = v . entries ;
rank: 902
score: 98.94428168402777
patch: super . entries = res . entries ;
rank: 902
score: 98.89032592773438
patch: int iterator = res . iterator ( ) ;
rank: 902
score: 98.76704237196181
patch: Iterator iter . iterator ( ) ; ;
rank: 902
score: 98.75131564670139
patch: if ( res . entries == null )
rank: 902
score: 98.607177734375
patch: else iter . advance ( ) ;
rank: 903
score: 98.8396484375
patch: Iterator iter = size . entries ( ) ;
rank: 903
score: 98.71721733940973
patch: if ( res != null ) break ;
rank: 903
score: 98.60676574707031
patch: int iter = res . get CaMeL
rank: 904
score: 98.93544311523438
patch: if ( res == null ) throw null ;
rank: 904
score: 98.88814086914063
patch: Iterator iter = res != null + 1 ;
rank: 904
score: 98.74478585379464
patch: res . clone ( ) ;
rank: 904
score: 98.73324245876736
patch: Iterator iter = . iter ( ) ;
rank: 904
score: 98.71236843532986
patch: os = res . entries ( ) ;
rank: 904
score: 98.60538482666016
patch: int get CaMeL Dimension ( ) ;
rank: 905
score: 98.88652954101562
patch: List entries = res . iterator ( ) ;
rank: 905
score: 98.74182807074652
patch: res . entries . close ( ) ;
rank: 905
score: 98.7073974609375
patch: entries = res . iterator ( ) ;
rank: 905
score: 98.68370903862848
patch: res . list = res . entries ;
rank: 905
score: 98.60462951660156
patch: Iterator iter = res . last CaMeL
rank: 906
score: 98.8344970703125
patch: Iterator iter = res != null - 1 ;
rank: 906
score: 98.74098036024306
patch: itr = res . entries ( ) ;
rank: 906
score: 98.70473225911458
patch: Iterator iter = v . entries ( )
rank: 906
score: 98.68261040581598
patch: res . list = res . list ;
rank: 906
score: 98.60260772705078
patch: while ( res != null ) {
rank: 907
score: 98.88463745117187
patch: for ( Real CaMeL Vector res : res )
rank: 907
score: 98.72169325086806
patch: Iterator iter = iter . ( ) ;
rank: 907
score: 98.7069320678711
patch: iter . add ( res ) ;
rank: 907
score: 98.69358995225694
patch: new Real CaMeL Vector ( this ) ;
rank: 907
score: 98.59883335658482
patch: it . advance ( ) ;
rank: 908
score: 98.88333740234376
patch: if ( this . res != null ) {
rank: 908
score: 98.7058334350586
patch: = res . entries ( ) ;
rank: 908
score: 98.70395236545139
patch: ds = res . entries ( ) ;
rank: 908
score: 98.68972439236111
patch: Iterator iter = res [ length ] ;
rank: 908
score: 98.68004014756944
patch: list = res . entries ( ) ;
rank: 909
score: 98.92048950195313
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 909
score: 98.73689100477431
patch: s = res . entries ( ) ;
rank: 909
score: 98.70128038194444
patch: final Iterator iter . iterator ( ) ;
rank: 909
score: 98.6845703125
patch: Iterator iter = res . entries != null
rank: 909
score: 98.67523956298828
patch: result . add ( res ) ;
rank: 909
score: 98.59151458740234
patch: Iterator iter = res . is CaMeL
rank: 910
score: 98.80438232421875
patch: Iterator iter = res != null
rank: 910
score: 98.73015001085069
patch: entries = entries . iterator ( ) ;
rank: 910
score: 98.69080946180556
patch: if ( res != null ) return ;
rank: 910
score: 98.674072265625
patch: iter = res . get ( ) ;
rank: 910
score: 98.6651611328125
patch: Iterator iter . size ( ) ;
rank: 910
score: 98.59027971540179
patch: iterator . advance ( ) ;
rank: 911
score: 98.87451850043402
patch: Iterator < iter . advance ( ) ;
rank: 911
score: 98.80326080322266
patch: Iterator iter = res . entries {
rank: 911
score: 98.72959391276042
patch: Iterator iter = clone ( res ) ;
rank: 911
score: 98.69070434570312
patch: Collection res = res . entries ;
rank: 911
score: 98.67355685763889
patch: iter = res . copy ( ) ;
rank: 911
score: 98.67103407118056
patch: Iterator iter = res . length 1 ;
rank: 911
score: 98.59007263183594
patch: iter . advance ( ) ; ;
rank: 912
score: 98.78864203559027
patch: Iterator iter = res . entries . length
rank: 912
score: 98.7149429321289
patch: super . entries ( res ) ;
rank: 912
score: 98.68448638916016
patch: assert res != null : $STRING$ ;
rank: 912
score: 98.66512625558036
patch: iter = res . entries ;
rank: 912
score: 98.6563720703125
patch: Iterator iter = new ) ;
rank: 912
score: 98.58267974853516
patch: Iterator iter = res . 0 ;
rank: 913
score: 98.87206420898437
patch: for ( Real CaMeL Vector v : res )
rank: 913
score: 98.69796752929688
patch: res . parse ( res ) ;
rank: 913
score: 98.67382049560547
patch: Iterator iter = res . get ;
rank: 913
score: 98.6591796875
patch: Iterator iter = res . entries . ;
rank: 913
score: 98.64521789550781
patch: res . Iterator iterator ( ) ;
rank: 913
score: 98.57190704345703
patch: Iterator iter = res . add CaMeL
rank: 914
score: 98.65818786621094
patch: Iterator iter ; synchronized ( res )
rank: 914
score: 98.64059787326389
patch: Iterator iter = res . contains ( )
rank: 914
score: 98.63861846923828
patch: res . add ( this ) ;
rank: 914
score: 98.5705337524414
patch: Iterator iter = res . set CaMeL
rank: 915
score: 98.68495178222656
patch: int iter . next ( ) ;
rank: 915
score: 98.63480377197266
patch: res . remove ( 0 ) ;
rank: 915
score: 98.56922149658203
patch: Iterator iter = res . max CaMeL
rank: 916
score: 98.9054931640625
patch: if ( entries != null ) return res ;
rank: 916
score: 98.77310180664062
patch: Iterator iter = res != null ;
rank: 916
score: 98.68040466308594
patch: Arrays . iterator ( res ) ;
rank: 916
score: 98.64762115478516
patch: List res = res . entries ;
rank: 916
score: 98.63819885253906
patch: List list = res . entries ;
rank: 916
score: 98.63245646158855
patch: Iterator iter = false ;
rank: 916
score: 98.5684814453125
patch: Iterator iter = v . has CaMeL
rank: 917
score: 98.8603271484375
patch: Iterator iter || res . iterator ( ) ;
rank: 917
score: 98.6698989868164
patch: Iterator iter = next ( ) ;
rank: 917
score: 98.64377267020089
patch: if ( v != null )
rank: 917
score: 98.60513741629464
patch: res . iterator ( ) .
rank: 917
score: 98.56303405761719
patch: int iter . advance ( ) ;
rank: 918
score: 98.66378021240234
patch: Iterator iter = capacity ( ) ;
rank: 918
score: 98.6429443359375
patch: Iterator iter = res [ 1 ] ;
rank: 918
score: 98.62387084960938
patch: res . entries = . entries ;
rank: 918
score: 98.60334014892578
patch: if ( res != null ) ;
rank: 918
score: 98.57940673828125
patch: res . entries = null ;
rank: 918
score: 98.5628153483073
patch: Iterator iter = entries .
rank: 919
score: 98.89744262695312
patch: while ( res != null ) return res ;
rank: 919
score: 98.65799386160714
patch: res . entries = entries ;
rank: 920
score: 98.8928466796875
patch: super . res . add ( res ) ;
rank: 920
score: 98.85915120442708
patch: synchronized ( res ) {
rank: 920
score: 98.57499186197917
patch: Iterator iter = 1 ;
rank: 920
score: 98.56920623779297
patch: int entries = res . entries ;
rank: 920
score: 98.54568045479911
patch: Iterator iter = res . }
rank: 921
score: 98.85833740234375
patch: Set list = res . iterator ( ) ;
rank: 921
score: 98.65475463867188
patch: res . copy ( res ) ;
rank: 921
score: 98.62603759765625
patch: Iterator iter = res . length ) ;
rank: 921
score: 98.58924102783203
patch: Iterator iter = res . list ;
rank: 921
score: 98.57218170166016
patch: Iterator iterator . iterator ( ) ;
rank: 921
score: 98.54535675048828
patch: entries . add ( v ) ;
rank: 922
score: 98.853662109375
patch: List iterator = res . iterator ( ) ;
rank: 922
score: 98.73956298828125
patch: Real CaMeL Vector res = null ;
rank: 922
score: 98.65242222377232
patch: res . size ( ) ;
rank: 922
score: 98.62064615885417
patch: Iterator iter = true ;
rank: 922
score: 98.58799743652344
patch: res . res = res ) ;
rank: 922
score: 98.56578063964844
patch: entries [ 0 ] = res ;
rank: 922
score: 98.54011535644531
patch: if ( res == null ) {
rank: 923
score: 98.73768833705357
patch: Iterator iter = res == null
rank: 923
score: 98.6517562866211
patch: res . load ( res ) ;
rank: 923
score: 98.58406066894531
patch: Iterator iter = res . length )
rank: 923
score: 98.56310272216797
patch: Iterator entries . iterator ( ) ;
rank: 923
score: 98.55715942382812
patch: assert ( res != null ) ;
rank: 924
score: 98.85170288085938
patch: Iterator iter , res . iterator ( ) ;
rank: 924
score: 98.73761664496527
patch: Iterator iter = res == null ? null
rank: 924
score: 98.58460344587054
patch: super . res = res ;
rank: 924
score: 98.5294189453125
patch: Iterator iter = res . entries
rank: 925
score: 98.84925537109375
patch: Iterator iter : entries . iterator ( ) ;
rank: 925
score: 98.55741119384766
patch: synchronized ( res . entries ) {
rank: 925
score: 98.544189453125
patch: System . exit ( 0 ) ;
rank: 925
score: 98.52841622488839
patch: Iterator iter = res . {
rank: 926
score: 98.57669830322266
patch: Object res = res . res ;
rank: 926
score: 98.5528564453125
patch: return res . entries ( ) ;
rank: 927
score: 98.88627319335937
patch: if ( res == null ) return 0 ;
rank: 927
score: 98.56854248046875
patch: Set entries = res . entries ;
rank: 927
score: 98.56184387207031
patch: Iterator iter = res . -- ;
rank: 927
score: 98.55744171142578
patch: Iterator entries = res . entries ;
rank: 927
score: 98.46830531529018
patch: i . advance ( ) ;
rank: 928
score: 98.78138563368056
patch: for ( String key : res ) {
rank: 928
score: 98.70852322048611
patch: Iterator iter = res . entries > 0
rank: 928
score: 98.6419677734375
patch: Vector res . iterator ( ) ;
rank: 928
score: 98.56532287597656
patch: Set res = res . entries ;
rank: 928
score: 98.55743408203125
patch: Iterator iter = res ; for (
rank: 928
score: 98.54505920410156
patch: Iterator res . iterator ( ) ;
rank: 929
score: 98.78103976779514
patch: Vector res = new Iterator ( ) ;
rank: 929
score: 98.70600043402777
patch: Iterator iter = res != null ) {
rank: 929
score: 98.6319580078125
patch: Iterator iter . next ( ) ;
rank: 929
score: 98.54144287109375
patch: Iterator iter = $NUMBER$ ;
rank: 929
score: 98.51484026227679
patch: iter . remove ( ) ;
rank: 930
score: 98.88079223632812
patch: boolean entries = res . entries ( ) ;
rank: 930
score: 98.70386505126953
patch: Iterator iter = ebe CaMeL Divide ;
rank: 930
score: 98.62669372558594
patch: res . entries iterator ( ) ;
rank: 930
score: 98.55238342285156
patch: Collection entries = res . entries ;
rank: 930
score: 98.44473266601562
patch: Iterator iter = entries ;
rank: 931
score: 98.70344373914931
patch: iter = iter . entries ( ) ;
rank: 931
score: 98.55062103271484
patch: List entries = res . entries ;
rank: 931
score: 98.53416442871094
patch: Vector iter = res . entries ;
rank: 931
score: 98.51811872209821
patch: res . close ( ) ;
rank: 931
score: 98.51067243303571
patch: if ( res == null )
rank: 932
score: 98.88015747070312
patch: Iterator < ) . add ( res ) ;
rank: 932
score: 98.75602891710069
patch: Iterator < String > iter = res .
rank: 932
score: 98.62277221679688
patch: Iterator iter = clone ( ) ;
rank: 932
score: 98.51537322998047
patch: List iter = res . entries ;
rank: 932
score: 98.42566789899554
patch: Iterator iter = entries ) ;
rank: 933
score: 98.68670654296875
patch: Iterator iter = iter . length ;
rank: 933
score: 98.54783630371094
patch: res . entries = res ) ;
rank: 933
score: 98.48677280970982
patch: res . entries = 0 ;
rank: 933
score: 98.42452566964286
patch: Iterator < Real CaMeL Vector >
rank: 934
score: 98.54324340820312
patch: entries = new Iterator ( ) ;
rank: 934
score: 98.50669642857143
patch: Iterator iter = - $NUMBER$ ;
rank: 934
score: 98.4961166381836
patch: Iterator iter = this . entries ;
rank: 934
score: 98.42540631975446
patch: synchronized ( res . entries )
rank: 935
score: 98.74748229980469
patch: for ( synchronized ( res ) {
rank: 935
score: 98.6125717163086
patch: int entries . next ( ) ;
rank: 935
score: 98.42427571614583
patch: for ( ; ; )
rank: 935
score: 98.38361358642578
patch: Iterator iter ;
rank: 936
score: 98.85337999131944
patch: this . entries = res . entries ;
rank: 936
score: 98.74259440104167
patch: Iterator < ) . advance ( ) ;
rank: 936
score: 98.52028982979911
patch: res . res = v ;
rank: 936
score: 98.46578216552734
patch: Iterator iter ++ ; while ( iter
rank: 936
score: 98.41346958705357
patch: list = res . entries ;
rank: 937
score: 98.83449300130208
patch: final int entries . size ( ) ;
rank: 937
score: 98.74205186631944
patch: for ( if ( res != null )
rank: 937
score: 98.60017395019531
patch: res . remove ( $STRING$ ) ;
rank: 937
score: 98.402099609375
patch: notify CaMeL All ( ) ;
rank: 938
score: 98.59869384765625
patch: entries . set ( res ) ;
rank: 938
score: 98.46489606584821
patch: v . advance ( ) ;
rank: 938
score: 98.45752970377605
patch: Iterator iter = res )
rank: 938
score: 98.45212227957589
patch: res . add ( ) ;
rank: 939
score: 98.3897705078125
patch: assert res != null ;
rank: 940
score: 98.5955810546875
patch: Iterator iter = copy ( ) ;
rank: 940
score: 98.58901977539062
patch: Real CaMeL Vector ( res ) ;
rank: 940
score: 98.48420061383929
patch: res . res = null ;
rank: 940
score: 98.46062469482422
patch: Vector entries = res . entries ;
rank: 940
score: 98.45438385009766
patch: Iterator iter = res . for CaMeL
rank: 940
score: 98.44355119977679
patch: res . next ( ) ;
rank: 940
score: 98.38333565848214
patch: res . add ( new ;
rank: 941
score: 98.56692504882812
patch: int iter = res . entries ;
rank: 941
score: 98.47670491536458
patch: Iterator iter = v ;
rank: 941
score: 98.36300223214286
patch: res . list = res ;
rank: 941
score: 98.32889229910714
patch: final Iterator iter = res .
rank: 942
score: 98.46560668945312
patch: synchronized ( res )
rank: 942
score: 98.42437744140625
patch: int value = ) ;
rank: 942
score: 98.3212890625
patch: final Iterator iter = res ;
rank: 943
score: 98.48594447544643
patch: Iterator iter = v != null
rank: 943
score: 98.44786725725446
patch: if ( res != null ;
rank: 943
score: 98.41153390066964
patch: res . copy ( ) ;
rank: 943
score: 98.29774983723958
patch: synchronized ( this ) {
rank: 944
score: 98.58009338378906
patch: res . map ( res ) ;
rank: 944
score: 98.41434733072917
patch: int value = 0 ;
rank: 944
score: 98.40537806919643
patch: Iterator . advance ( ) ;
rank: 944
score: 98.33061872209821
patch: Iterator iter = res ; ;
rank: 944
score: 98.27028401692708
patch: int res = ) ;
rank: 945
score: 98.46866280691964
patch: Iterator iter = res . length
rank: 945
score: 98.39108712332589
patch: Iterator iter ( res ) ;
rank: 945
score: 98.32752336774554
patch: res . entries = data ;
rank: 945
score: 98.25341796875
patch: Iterator iter = v .
rank: 946
score: 98.3970947265625
patch: temp . res = res ;
rank: 946
score: 98.36951555524554
patch: final Iterator iter = 0 ;
rank: 946
score: 98.32707868303571
patch: lock . entries ( ) ;
rank: 947
score: 98.38636125837054
patch: res . res = this ;
rank: 947
score: 98.36508614676339
patch: iterator . iterator ( ) ;
rank: 947
score: 98.14761352539062
patch: synchronized ( v ) {
rank: 948
score: 98.42509242466518
patch: Iterator iter = v == null
rank: 948
score: 98.36187744140625
patch: entries . iterator ( ) .
rank: 948
score: 98.35089983258929
patch: for ( for ( for (
rank: 948
score: 98.31045968191964
patch: result . entries = res ;
rank: 948
score: 98.14684041341145
patch: Iterator iter = ) ;
rank: 949
score: 98.72840881347656
patch: res . remove ( res ) ;
rank: 949
score: 98.35996500651042
patch: res . = res ;
rank: 949
score: 98.3316650390625
patch: int value = - 1 ;
rank: 950
score: 98.64729309082031
patch: Iterator iter = res . entries [
rank: 950
score: 98.52052525111607
patch: super . entries ( ) ;
rank: 950
score: 98.35362025669643
patch: Iterator < ) != null ;
rank: 950
score: 98.33755929129464
patch: super . iterator ( ) ;
rank: 950
score: 98.33286830357143
patch: Iterator iter = res -- ;
rank: 950
score: 98.30770438058036
patch: data = res . entries ;
rank: 950
score: 98.09603881835938
patch: int key = ) ;
rank: 951
score: 98.68214416503906
patch: entries . remove ( res ) ;
rank: 951
score: 98.64715576171875
patch: if ( v != null ) {
rank: 951
score: 98.347412109375
patch: for ( res : res )
rank: 951
score: 98.33692278180804
patch: Iterator iter ( 0 ) ;
rank: 951
score: 98.33013916015625
patch: for ( for (
rank: 951
score: 98.30780901227679
patch: this . v = res ;
rank: 951
score: 98.24261474609375
patch: Object res = null ;
rank: 952
score: 98.63809204101562
patch: for ( synchronized ( this ) {
rank: 952
score: 98.34732491629464
patch: result . res = res ;
rank: 952
score: 98.33506556919643
patch: throw new Exception ( ) ;
rank: 952
score: 98.26359340122768
patch: Iterator iter = - 0 ;
rank: 952
score: 98.07594807942708
patch: int iter = ( (
rank: 953
score: 98.65388488769531
patch: super . res ( res ) ;
rank: 953
score: 98.63433837890625
patch: for ( int ) {
rank: 953
score: 98.34505208333333
patch: initialize ( res ) ;
rank: 953
score: 98.33248465401786
patch: iter . iterator ( ) .
rank: 953
score: 98.26329549153645
patch: int key = 0 ;
rank: 953
score: 98.16963704427083
patch: assert iter != null ;
rank: 953
score: 98.0651143391927
patch: synchronized ( entries ) {
rank: 954
score: 98.65355573381696
patch: super . entries = res ;
rank: 954
score: 98.50013950892857
patch: res . entries = ) ;
rank: 954
score: 98.33882649739583
patch: if ( res != ;
rank: 954
score: 98.32976422991071
patch: res . next = null ;
rank: 954
score: 98.31870727539062
patch: Iterator iter ++ ;
rank: 954
score: 98.24413190569196
patch: Iterator iter = res . ebe
rank: 954
score: 98.13387044270833
patch: Object [ ] data ;
rank: 954
score: 98.05043538411458
patch: List res = res ;
rank: 955
score: 98.65093994140625
patch: int entries . size ( ) ;
rank: 955
score: 98.49437604631696
patch: res . delete ( ) ;
rank: 955
score: 98.33879743303571
patch: res . res = ) ;
rank: 955
score: 98.3236083984375
patch: res . out = res ;
rank: 955
score: 98.12546793619792
patch: int iter = 0 ;
rank: 956
score: 98.60189819335938
patch: for ( Iterator iter = res .
rank: 956
score: 98.32740020751953
patch: return res ;
rank: 956
score: 98.30221993582589
patch: Iterator iter = res . )
rank: 956
score: 98.22569056919643
patch: this . v = v ;
rank: 956
score: 98.11424763997395
patch: Object res = res ;
rank: 956
score: 98.0225118001302
patch: int v = ) ;
rank: 957
score: 98.62342180524554
patch: final synchronized ( res ) {
rank: 957
score: 98.21820940290179
patch: list . advance ( ) ;
rank: 957
score: 98.09047444661458
patch: Iterator iter = new ;
rank: 958
score: 98.31111653645833
patch: Real CaMeL Vector res ;
rank: 958
score: 98.28921944754464
patch: Iterator iter = * $NUMBER$ ;
rank: 958
score: 98.2000223795573
patch: Iterator iterator = 0 ;
rank: 958
score: 98.08663940429688
patch: assert res == null ;
rank: 959
score: 98.56566619873047
patch: synchronized ( res . res ) {
rank: 959
score: 98.43878173828125
patch: res . map = res ;
rank: 959
score: 98.31640625
patch: v . res = res ;
rank: 959
score: 98.26655796595982
patch: Iterator iter < int ++ ;
rank: 959
score: 98.19612630208333
patch: Iterator iter = $STRING$ ;
rank: 959
score: 98.18843587239583
patch: int value = 1 ;
rank: 959
score: 98.06809488932292
patch: List res = null ;
rank: 959
score: 97.78950805664063
patch: Iterator < Real CaMeL
rank: 960
score: 98.5501708984375
patch: Iterator iter = this ) ;
rank: 960
score: 98.437255859375
patch: res . parse ( ) ;
rank: 960
score: 98.25884137834821
patch: Iterator iter = iter . }
rank: 960
score: 98.22235107421875
patch: Iterator iter { for (
rank: 960
score: 98.18951416015625
patch: Iterator < ) ) ;
rank: 960
score: 98.1760762532552
patch: Iterator iter = this ;
rank: 960
score: 98.05790201822917
patch: int entries = 0 ;
rank: 960
score: 97.7175537109375
patch: for ( ) {
rank: 961
score: 98.49379185267857
patch: super . entries = entries ;
rank: 961
score: 98.43465750558036
patch: res . iter ( ) ;
rank: 961
score: 98.31181989397321
patch: if ( v == null )
rank: 961
score: 98.24489048549107
patch: Iterator iter = * 1 ;
rank: 961
score: 98.18703206380208
patch: Iterator iter . -- ;
rank: 961
score: 98.04041544596355
patch: Iterator iter = size ;
rank: 961
score: 97.70022583007812
patch: Iterator iter = {
rank: 962
score: 98.54202706473214
patch: Iterator iter = res ) {
rank: 962
score: 98.49127197265625
patch: super . entries = null ;
rank: 962
score: 98.42641775948661
patch: list . iterator ( ) ;
rank: 962
score: 98.18147786458333
patch: synchronized ( res ) ;
rank: 962
score: 98.14467366536458
patch: int iter = null ;
rank: 962
score: 98.12000528971355
patch: int value = null ;
rank: 962
score: 98.03341674804688
patch: Image res = null ;
rank: 962
score: 97.68569946289062
patch: Iterator iter =
rank: 963
score: 98.51282755533855
patch: Iterator < int ) {
rank: 963
score: 98.24425252278645
patch: lock ( res ) ;
rank: 963
score: 98.22398158482143
patch: Iterator iter = res ++ ;
rank: 963
score: 98.12821451822917
patch: int iter = false ;
rank: 963
score: 98.02931722005208
patch: repaint ( res ) ;
rank: 963
score: 97.6587646484375
patch: Iterator iter -- ;
rank: 964
score: 98.24231974283855
patch: . res = res ;
rank: 964
score: 98.1705322265625
patch: Iterator < ) . .
rank: 964
score: 98.11197916666667
patch: int start = 0 ;
rank: 964
score: 98.02859497070312
patch: while ( true ) {
rank: 964
score: 97.647216796875
patch: Iterator ( ) ;
rank: 965
score: 98.50554547991071
patch: Iterator < ( iter ) ;
rank: 965
score: 98.43829345703125
patch: for ( ) return res ;
rank: 965
score: 98.41619873046875
patch: res . load ( ) ;
rank: 965
score: 98.20252482096355
patch: Collection res = null ;
rank: 965
score: 98.15948486328125
patch: Iterator iter = iter .
rank: 965
score: 98.10264078776042
patch: Iterator iter = iter ;
rank: 965
score: 98.05299886067708
patch: int value = false ;
rank: 965
score: 97.96119384765625
patch: synchronized ( this )
rank: 965
score: 97.62788696289063
patch: Iterator iter = }
rank: 966
score: 98.48298863002232
patch: Iterator < iter < int )
rank: 966
score: 98.43424769810268
patch: this . entries = entries ;
rank: 966
score: 98.13118489583333
patch: Iterator < ) . ;
rank: 966
score: 98.11476643880208
patch: Iterator iter ; for (
rank: 966
score: 98.09269205729167
patch: int ( $NUMBER$ ) ;
rank: 966
score: 98.05164591471355
patch: int key = 1 ;
rank: 966
score: 97.607958984375
patch: Iterator iter = ;
rank: 967
score: 98.41314697265625
patch: res . entries = false ;
rank: 967
score: 98.13559977213542
patch: entries = new ) ;
rank: 967
score: 98.12774658203125
patch: Iterator iter ( ) ;
rank: 967
score: 98.0836181640625
patch: int ( 0 ) ;
rank: 967
score: 97.90548095703124
patch: result = null ;
rank: 967
score: 97.59085693359376
patch: while ( ) {
rank: 968
score: 98.43906947544643
patch: for ( } return res ;
rank: 968
score: 98.40825544084821
patch: Iterator < T ++ ) ;
rank: 968
score: 98.12686157226562
patch: Iterator < ) . )
rank: 968
score: 98.06969197591145
patch: Iterator iter = res <
rank: 968
score: 97.88575439453125
patch: lock ( ) ;
rank: 968
score: 97.58990478515625
patch: final Iterator iter ;
rank: 969
score: 98.093505859375
patch: update ( res ) ;
rank: 969
score: 98.06380208333333
patch: Vector ( res ) ;
rank: 969
score: 98.01517740885417
patch: int value = true ;
rank: 969
score: 97.85477905273437
patch: iter = res ;
rank: 969
score: 97.580224609375
patch: Iterator iter = $NUMBER$
rank: 970
score: 98.40168108258929
patch: res . entries = true ;
rank: 970
score: 98.36453683035714
patch: for ( while ( ) {
rank: 970
score: 98.0848388671875
patch: copy ( res ) ;
rank: 970
score: 98.05094401041667
patch: int ( 1 ) ;
rank: 970
score: 97.99692789713542
patch: int next = 0 ;
rank: 970
score: 97.84188232421874
patch: entries = new ;
rank: 970
score: 97.57802734375
patch: Iterator iter = res
rank: 971
score: 98.39879499162946
patch: res . Iterator ( ) ;
rank: 971
score: 98.0703633626302
patch: Set res = null ;
rank: 971
score: 98.02492065429688
patch: return res ; }
rank: 971
score: 97.839794921875
patch: result = res ;
rank: 971
score: 97.528369140625
patch: Iterator iter = *
rank: 972
score: 98.37413678850446
patch: entries . next ( ) ;
rank: 972
score: 98.06119791666667
patch: boolean res = false ;
rank: 972
score: 97.83836059570312
patch: iter = null ;
rank: 972
score: 97.52713623046876
patch: Iterator iter / *
rank: 973
score: 98.06077067057292
patch: load ( res ) ;
rank: 973
score: 98.03287760416667
patch: int iter = true ;
rank: 973
score: 97.96384684244792
patch: int size ( ) ;
rank: 973
score: 97.81991577148438
patch: data = res ;
rank: 973
score: 97.51451416015625
patch: for ( / *
rank: 974
score: 98.0836181640625
patch: entries ( res ) ;
rank: 974
score: 98.05804443359375
patch: fail ( $STRING$ ) ;
rank: 974
score: 97.94808959960938
patch: int res = 0 ;
rank: 974
score: 97.8194580078125
patch: repaint ( ) ;
rank: 974
score: 97.51319580078125
patch: List res = (
rank: 975
score: 98.06646728515625
patch: Iterator iter . else /
rank: 975
score: 98.0177993774414
patch: Iterator iter {
rank: 975
score: 97.98097737630208
patch: Iterator iter = res ==
rank: 975
score: 97.78469848632812
patch: entries = res ;
rank: 975
score: 97.50114135742187
patch: for ( ) ;
rank: 976
score: 98.1958719889323
patch: Iterator < int ) ;
rank: 976
score: 98.05652872721355
patch: add ( res ) ;
rank: 976
score: 97.7778564453125
patch: iter = 0 ;
rank: 976
score: 97.49028015136719
patch: for ( Iterator
rank: 977
score: 98.0486348470052
patch: iter ( res ) ;
rank: 977
score: 98.03940836588542
patch: if ( v != ;
rank: 977
score: 97.76031494140625
patch: entries = null ;
rank: 977
score: 97.42779541015625
patch: for ( (
rank: 978
score: 98.21415201822917
patch: / * return res ;
rank: 978
score: 98.19759114583333
patch: Map ( res ) ;
rank: 978
score: 98.02974446614583
patch: Iterator iterator = null ;
rank: 978
score: 97.7353759765625
patch: data = null ;
rank: 978
score: 97.27847290039062
patch: for ( }
rank: 979
score: 98.16493733723958
patch: Iterator iter = res [
rank: 979
score: 98.03272501627605
patch: Set ( res ) ;
rank: 979
score: 97.9388916015625
patch: Iterator < ) .
rank: 979
score: 97.71502685546875
patch: iter = new ;
rank: 979
score: 97.24925231933594
patch: Iterator < )
rank: 980
score: 98.16754760742188
patch: Iterator < ) ;
rank: 980
score: 97.69949340820312
patch: f = res ;
rank: 980
score: 97.21700286865234
patch: Iterator ++ ;
rank: 981
score: 98.1658426920573
patch: final String ( ) ;
rank: 981
score: 98.15665690104167
patch: m ( res ) ;
rank: 981
score: 97.69698486328124
patch: data = new ;
rank: 981
score: 97.68314361572266
patch: int ) {
rank: 981
score: 97.21006774902344
patch: for ( else
rank: 982
score: 97.69087982177734
patch: for ( )
rank: 982
score: 97.63663330078126
patch: entries = 0 ;
rank: 982
score: 97.6215087890625
patch: Iterator iter = )
rank: 982
score: 97.1964340209961
patch: int iter ;
rank: 983
score: 98.15915934244792
patch: List ( res ) ;
rank: 983
score: 98.11907958984375
patch: Iterator < String > }
rank: 983
score: 97.88075561523438
patch: if ( res ;
rank: 983
score: 97.67998046875
patch: list = res ;
rank: 983
score: 97.5975341796875
patch: = new ) ;
rank: 983
score: 97.17670440673828
patch: return v ;
rank: 984
score: 98.0212158203125
patch: Iterator * ) ;
rank: 984
score: 97.67874755859376
patch: state = res ;
rank: 984
score: 97.56425476074219
patch: / ) ;
rank: 984
score: 97.45194091796876
patch: while ( res .
rank: 985
score: 97.972705078125
patch: revalidate ( ) ;
rank: 985
score: 97.67647705078124
patch: result = new ;
rank: 985
score: 97.549462890625
patch: Iterator iter = new
rank: 985
score: 97.45319213867188
patch: } return res ;
rank: 985
score: 97.1190185546875
patch: int res =
rank: 986
score: 98.08919270833333
patch: Vector res = null ;
rank: 986
score: 97.67424926757812
patch: changed = true ;
rank: 986
score: 97.5090560913086
patch: int iter {
rank: 986
score: 97.45140991210937
patch: Dimension ( ) ;
rank: 986
score: 97.37822723388672
patch: = $NUMBER$ ;
rank: 986
score: 97.09600830078125
patch: int ) ;
rank: 987
score: 97.99927368164063
patch: / * * /
rank: 987
score: 97.82041625976562
patch: reset ( ) ;
rank: 987
score: 97.699072265625
patch: Iterator iter ) ;
rank: 987
score: 97.37067413330078
patch: = null ;
rank: 987
score: 97.01453399658203
patch: int value ;
rank: 988
score: 97.65771484375
patch: res = new ;
rank: 988
score: 97.43883056640625
patch: for ( Iterator iter
rank: 988
score: 97.31825256347656
patch: = res ;
rank: 988
score: 97.22760009765625
patch: Iterator for (
rank: 988
score: 96.99405670166016
patch: for ( int
rank: 989
score: 97.80994873046875
patch: for ( int )
rank: 989
score: 97.78985595703125
patch: / * ) ;
rank: 989
score: 97.64683837890625
patch: Lock ( ) ;
rank: 989
score: 97.4193115234375
patch: for ( Iterator }
rank: 989
score: 97.29080963134766
patch: final ) ;
rank: 989
score: 97.21815490722656
patch: int iterator {
rank: 989
score: 96.94596862792969
patch: / * /
rank: 990
score: 97.80863037109376
patch: Iterator < int )
rank: 990
score: 97.7762939453125
patch: throw ( ) ;
rank: 990
score: 97.63593139648438
patch: Iterator iter ; )
rank: 990
score: 97.62753295898438
patch: pos = 0 ;
rank: 990
score: 97.29006958007812
patch: Iterator iter .
rank: 990
score: 97.09429931640625
patch: Iterator iter ++
rank: 990
score: 96.91178894042969
patch: final for (
rank: 991
score: 97.6198974609375
patch: res = null ;
rank: 991
score: 97.2900390625
patch: throw res ;
rank: 991
score: 97.24223327636719
patch: Iterator -- ;
rank: 991
score: 97.13227081298828
patch: return iter ;
rank: 991
score: 97.06373596191406
patch: Iterator iter *
rank: 991
score: 96.89144897460938
patch: Iterator * ;
rank: 992
score: 97.61664428710938
patch: running = true ;
rank: 992
score: 97.15074157714844
patch: = 0 ;
rank: 992
score: 97.09766387939453
patch: int entries :
rank: 992
score: 96.88860321044922
patch: Iterator res ;
rank: 993
score: 97.119140625
patch: = 1 ;
rank: 993
score: 97.0762939453125
patch: for (
rank: 993
score: 96.92693328857422
patch: for ( ;
rank: 994
score: 97.71412963867188
patch: int * ) ;
rank: 994
score: 97.60189208984374
patch: m = res ;
rank: 994
score: 97.25627136230469
patch: Iterator iter )
rank: 994
score: 97.00263214111328
patch: Iterator iterator ;
rank: 994
score: 96.85941314697266
patch: * * /
rank: 995
score: 97.71369018554688
patch: invalidate ( ) ;
rank: 995
score: 97.60015869140625
patch: for ( ; )
rank: 995
score: 97.35391235351562
patch: Iterator * /
rank: 995
score: 97.08526611328125
patch: long ) ;
rank: 995
score: 97.02064514160156
patch: if ( res
rank: 995
score: 96.98294067382812
patch: * ) ;
rank: 995
score: 96.83970642089844
patch: break ; }
rank: 995
score: 96.05706787109375
patch: / *
rank: 996
score: 97.59786987304688
patch: p = res ;
rank: 996
score: 97.34593200683594
patch: final ) {
rank: 996
score: 97.06226348876953
patch: Object ) ;
rank: 996
score: 96.93721008300781
patch: int iter :
rank: 996
score: 96.8767318725586
patch: / * }
rank: 996
score: 95.84564208984375
patch: iter .
rank: 997
score: 97.04070281982422
patch: String ) ;
rank: 997
score: 96.97921752929688
patch: throw $NUMBER$ ;
rank: 997
score: 95.73197428385417
patch: / /
rank: 998
score: 97.22555541992188
patch: } else {
rank: 998
score: 96.96878051757812
patch: super ) ;
rank: 998
score: 96.95600891113281
patch: assert ) ;
rank: 998
score: 96.9331283569336
patch: int key ;
rank: 998
score: 96.77879333496094
patch: Iterator iter }
rank: 998
score: 96.07909138997395
patch: try {
rank: 998
score: 94.38382720947266
patch: final
rank: 998
score: 93.73062133789062
patch: }
rank: 999
score: 97.22218322753906
patch: int * /
rank: 999
score: 97.09791564941406
patch: int entries ;
rank: 999
score: 96.95814514160156
patch: throw null ;
rank: 999
score: 96.95315551757812
patch: res ) ;
rank: 999
score: 96.20693969726562
patch: Iterator iter
rank: 999
score: 93.9906997680664
patch: int
rank: 1000
score: 97.07913208007812
patch: int size ;
rank: 1000
score: 96.95039367675781
patch: I ) ;
rank: 1000
score: 93.9200439453125
patch: Iterator
rank: 1000
score: 93.84274291992188
patch: /
