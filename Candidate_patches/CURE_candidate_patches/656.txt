rank: 1
score: 99.92943318684895
patch: Iterator iter = res . entries . iterator ( ) ;
rank: 1
score: 99.82391357421875
patch: Iterator iter = res . iterator ( ) ;
rank: 1
score: 99.77866908482143
patch: Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 2
score: 99.75800432477679
patch: Iterator iter = res . entries . entries . iterator ( ) ;
rank: 2
score: 99.73268432617188
patch: Iterator iter = res . entries ( ) ;
rank: 2
score: 99.69332275390624
patch: Iterator iter = res . size ( ) ;
rank: 3
score: 99.73970947265624
patch: Iterator iter = v . iterator ( ) ;
rank: 4
score: 99.71629333496094
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ;
rank: 4
score: 99.67589314778645
patch: Iterator iter = res . entries . size ( ) ;
rank: 4
score: 99.6428955078125
patch: Iterator < String > iter = res . entries . iterator ( ) ;
rank: 5
score: 99.6359619140625
patch: Iterator iter = entries . iterator ( ) ;
rank: 5
score: 99.62130737304688
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 5
score: 99.61403586647727
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 5
score: 99.55821010044643
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 6
score: 99.67934841579861
patch: Iterator iter = res . entries ( ) . entries ( ) . iterator ( ) ;
rank: 6
score: 99.6458740234375
patch: Iterator iter = res . entries . entries . entries . iterator ( ) ;
rank: 6
score: 99.61326497395834
patch: final Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 6
score: 99.6050516764323
patch: Iterator iter = res . iterator . iterator ( ) ;
rank: 6
score: 99.596923828125
patch: Iterator iter = res . entries . iter ( ) ;
rank: 6
score: 99.58224487304688
patch: Iterator iter = res . to CaMeL Array ( ) . iterator ( ) ;
rank: 6
score: 99.52430791440217
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 6
score: 99.52041190011161
patch: Iterator iter = res . entries ( ) . entries ( ) ;
rank: 7
score: 99.67182752821181
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 7
score: 99.59478290264423
patch: final Iterator iter = res . entries . iterator ( ) ;
rank: 7
score: 99.58115641276042
patch: Iterator iter = res . list . iterator ( ) ;
rank: 7
score: 99.50953165690105
patch: Iterator iter = res . value . iterator ( ) ;
rank: 8
score: 99.6009012858073
patch: Iterator iter = v . entries . iterator ( ) ;
rank: 8
score: 99.59713309151786
patch: Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 8
score: 99.5892578125
patch: Iterator < Object > iter = res . entries . iterator ( ) ;
rank: 8
score: 99.57691955566406
patch: Iterator iter = res . next ( ) . entries . iterator ( ) ;
rank: 8
score: 99.55711873372395
patch: Iterator iter = res . entries . entries ( ) ;
rank: 8
score: 99.55127563476563
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 8
score: 99.53541056315105
patch: Iterator iter = this . entries . iterator ( ) ;
rank: 9
score: 99.58960639105902
patch: Iterator iter = res . entries . entries ( ) . entries . iterator ( ) ;
rank: 9
score: 99.53265380859375
patch: Iterator iter = this . res . entries . iterator ( ) ;
rank: 9
score: 99.52852689302884
patch: Iterator iter = res . entries . iterator ( ) ; ;
rank: 9
score: 99.52494884672619
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 9
score: 99.502001953125
patch: Iterator < ] > iter = res . entries . iterator ( ) ;
rank: 10
score: 99.57770538330078
patch: Iterator iter = res . entries ( ) . entries . iterator ( ) ;
rank: 10
score: 99.53973388671875
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 10
score: 99.52112926136364
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 10
score: 99.52109781901042
patch: Iterator iter = res . entries . iterator ( ) ; iterator . iterator ( ) ;
rank: 10
score: 99.51439412434895
patch: Iterator iter = res . has CaMeL Next ( ) ;
rank: 11
score: 99.56420180376838
patch: Iterator < String > iter = res . entries ( ) . iterator ( ) ;
rank: 11
score: 99.51746283637152
patch: Iterator iter = res . entries . iterator ( ) ; entries . iterator ( ) ;
rank: 11
score: 99.5048191236413
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 11
score: 99.50445149739583
patch: Iterator iter = res . entries . ( ) . iterator ( ) ;
rank: 11
score: 99.48714192708333
patch: int iter = res . entries . iterator ( ) ;
rank: 11
score: 99.47392272949219
patch: try { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 12
score: 99.55439453125
patch: Iterator < ? > iter = res . entries . iterator ( ) ;
rank: 12
score: 99.50093841552734
patch: Iterator iter = res . get . entries ( ) . iterator ( ) ;
rank: 12
score: 99.45772298177083
patch: Iterator iter = res . entries ( res ) . iterator ( ) ;
rank: 13
score: 99.5470303622159
patch: final Iterator iter = res . iterator ( ) ;
rank: 13
score: 99.48536217730978
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries . iterator ( ) ;
rank: 13
score: 99.48221842447917
patch: Iterator iter = res . entries ( $NUMBER$ ) . iterator ( ) ;
rank: 13
score: 99.45492892795139
patch: Iterator iter = res . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 14
score: 99.56593322753906
patch: Iterator iter = res . entries . entries ( ) . entries ( ) ;
rank: 14
score: 99.54530686598558
patch: Iterator < String > iter = res . iterator ( ) ;
rank: 14
score: 99.50496419270833
patch: Iterator iter = entries . entries . iterator ( ) ;
rank: 14
score: 99.48561096191406
patch: Iterator iter = res . iterator ( ) ; res . iterator ( ) ;
rank: 14
score: 99.48360188802083
patch: Iterator iter = res . entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 14
score: 99.48219927619485
patch: synchronized ( res ) { Iterator iter = res . entries . iterator ( ) ;
rank: 14
score: 99.47164916992188
patch: Iterator iter = res ; while ( iter . has CaMeL Next ( ) )
rank: 14
score: 99.46810477120536
patch: Iterator iter = res . trim ( ) . iterator ( ) ;
rank: 14
score: 99.4511947631836
patch: / * Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 15
score: 99.56233723958333
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries . iterator ( ) ;
rank: 15
score: 99.531982421875
patch: Iterator < int > iter = res . entries . iterator ( ) ;
rank: 15
score: 99.49030412946429
patch: Iterator iter = res . this . entries . iterator ( ) ;
rank: 15
score: 99.48282296316964
patch: Iterator iter = res . entries . entries . size ( ) ;
rank: 15
score: 99.48281521267361
patch: Iterator iter = res . entries . iterator ( ) ; res . iterator ( ) ;
rank: 15
score: 99.46735491071429
patch: Iterator iter = res . entries ( ) . size ( ) ;
rank: 15
score: 99.46086883544922
patch: Iterator iter = res . get CaMeL Value ( ) . iterator ( ) ;
rank: 15
score: 99.45970517113095
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 15
score: 99.45018659319196
patch: Iterator iterator = res . entries ( ) . iterator ( ) ;
rank: 16
score: 99.55463324652777
patch: Iterator iter = res . entries . entries . entries ( ) . iterator ( ) ;
rank: 16
score: 99.51727701822917
patch: Iterator < Iterator > iter = res . entries . iterator ( ) ;
rank: 16
score: 99.48942347935268
patch: Iterator iter = res . res . entries . iterator ( ) ;
rank: 16
score: 99.47161506204044
patch: Iterator iter = res . ( ) . entries ( ) . iterator ( ) ;
rank: 16
score: 99.46550750732422
patch: Iterator iter = res . entries ( - 1 ) . iterator ( ) ;
rank: 16
score: 99.46068115234375
patch: Iterator iter = res . iter ( ) ;
rank: 16
score: 99.45918104383681
patch: Iterator iter = res . entries ; while ( iter . has CaMeL Next ( ) )
rank: 16
score: 99.44885864257813
patch: Iterator iter = v . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 17
score: 99.53905571831598
patch: Iterator iter = v . entries ( ) . entries ( ) . iterator ( ) ;
rank: 17
score: 99.51486385569854
patch: Iterator < Object > iter = res . entries ( ) . iterator ( ) ;
rank: 17
score: 99.48252516526442
patch: Iterator iter = res . entries . iterator ( ) ; }
rank: 17
score: 99.45756700303819
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ;
rank: 17
score: 99.44775390625
patch: Iterator iter = this . entries . entries . iterator ( ) ;
rank: 17
score: 99.44751694623162
patch: Iterator iter = res . add ( this ) . entries . iterator ( ) ;
rank: 17
score: 99.43602294921875
patch: Iterator iter = v . entries ( ) ;
rank: 18
score: 99.5087661743164
patch: final Iterator < String > iter = res . entries . iterator ( ) ;
rank: 18
score: 99.45656866776316
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 18
score: 99.4548828125
patch: Iterator < T > iter = res . entries . iterator ( ) ;
rank: 18
score: 99.45238095238095
patch: iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 18
score: 99.44750213623047
patch: Iterator iter = res . size ( ) : res . iterator ( ) ;
rank: 19
score: 99.52605438232422
patch: Iterator iter = v . entries . entries ( ) . iterator ( ) ;
rank: 19
score: 99.44956276633523
patch: Iterator iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 19
score: 99.44353778545673
patch: Iterator < ] > iter = res . entries ( ) ;
rank: 19
score: 99.43007405598958
patch: Iterator iter = v . iterator . iterator ( ) ;
rank: 20
score: 99.52444118923611
patch: Iterator iter = res . entries ( ) . entries ( ) . entries ( ) ;
rank: 20
score: 99.50045340401786
patch: Iterator iter = res . entries ( ) . iter ( ) ;
rank: 20
score: 99.45059967041016
patch: Iterator iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 20
score: 99.44639521059783
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 20
score: 99.44278293185764
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 20
score: 99.4413070678711
patch: Iterator iter = res . length ;
rank: 20
score: 99.43719482421875
patch: Iterator iter = res . clone ( ) . iterator ( ) ;
rank: 20
score: 99.41897101151316
patch: Iterator iter = res . entries ( res . entries ( ) ) . iterator ( ) ;
rank: 21
score: 99.44560546875
patch: Iterator < Entry > iter = res . entries . iterator ( ) ;
rank: 21
score: 99.43781389508929
patch: int iter = res . entries ( ) . size ( ) ;
rank: 21
score: 99.43624877929688
patch: Iterator iter = res . length . iterator ( ) ;
rank: 21
score: 99.41500651041666
patch: Iterator iter = res . iterator ( res . size ( ) ) ;
rank: 22
score: 99.51657104492188
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 22
score: 99.49738625919117
patch: final Iterator iter = res . entries . entries ( ) . iterator ( ) ;
rank: 22
score: 99.44379021139706
patch: Iterator iter = res . entries . = res . entries . iterator ( ) ;
rank: 22
score: 99.43484061104911
patch: Iterator iter = res . list ( ) . iterator ( ) ;
rank: 22
score: 99.43407331194196
patch: Iterator iter = res . entries = res . iterator ( ) ;
rank: 22
score: 99.43353881835938
patch: Iterator iter = v . size ( ) ;
rank: 22
score: 99.43026123046874
patch: Iterator iter = entries . size ( ) ;
rank: 22
score: 99.41203090122768
patch: Iterator iter = res . iterator ( ) . iterator ( ) ;
rank: 23
score: 99.44108072916667
patch: Iterator iter = res . get ( res . iterator ( ) ) ;
rank: 23
score: 99.43548583984375
patch: Iterator iter = res . entries . entries ( ) . size ( ) ;
rank: 23
score: 99.43392508370536
patch: Iterator iter = res . entries = res . entries ( ) ;
rank: 23
score: 99.42918178013393
patch: Iterator iter = res . copy ( ) . iterator ( ) ;
rank: 23
score: 99.41578674316406
patch: Iterator iter = this . res . entries . entries . iterator ( ) ;
rank: 23
score: 99.41123860677084
patch: Iterator iter = v [ 0 ] . entries . iterator ( ) ;
rank: 24
score: 99.4835205078125
patch: Iterator < ? > iter = res . entries ( ) . iterator ( ) ;
rank: 24
score: 99.434326171875
patch: Iterator iter = this . res . iterator ( ) ;
rank: 24
score: 99.43150916466347
patch: res . entries = res . entries . iterator ( ) ;
rank: 24
score: 99.43118489583334
patch: Iterator iter = res [ 0 ] . entries . iterator ( ) ;
rank: 24
score: 99.42757161458333
patch: Iterator res = res . entries . iterator ( ) ;
rank: 24
score: 99.42562866210938
patch: Iterator iter = this . res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 24
score: 99.41446586277173
patch: Iterator Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 24
score: 99.41085111177884
patch: Iterator iter = res . iterator ( ) ; while ( )
rank: 25
score: 99.43046569824219
patch: Iterator iter = res . get CaMeL Name ( ) . iterator ( ) ;
rank: 25
score: 99.42754255022321
patch: Iterator iter = res . data . entries . iterator ( ) ;
rank: 25
score: 99.42074924045139
patch: Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ;
rank: 25
score: 99.41241096047794
patch: Iterator < String > iter = res . entries . entries . iterator ( ) ;
rank: 25
score: 99.4068359375
patch: Iterator iter = res . entries ( ) . iterator ( ) ; ;
rank: 26
score: 99.49577501085069
patch: while ( res . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 26
score: 99.48137958233173
patch: Iterator < Object > iter = res . iterator ( ) ;
rank: 26
score: 99.43175159801136
patch: iter = res . entries . iterator ( ) ;
rank: 26
score: 99.43040556066177
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) . iterator ( ) ;
rank: 26
score: 99.425732421875
patch: Iterator < E > iter = res . entries . iterator ( ) ;
rank: 26
score: 99.4197021484375
patch: Iterator iter = list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 26
score: 99.40826970880681
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 26
score: 99.40635681152344
patch: Iterator iter = res . entries ( ) . iterator . iterator ( ) ;
rank: 27
score: 99.48115844726563
patch: Iterator iter = res . entries . entries ( ) . entries ( ) . iterator ( ) ;
rank: 27
score: 99.43019612630208
patch: Iterator iter = res . get . iterator ( ) ;
rank: 27
score: 99.42554473876953
patch: Iterator iter = res . size ( ) : res . size ( ) ;
rank: 27
score: 99.42384690504808
patch: Iterator < String > iter = res . entries ( ) ;
rank: 27
score: 99.4236328125
patch: Iterator < double > iter = res . entries . iterator ( ) ;
rank: 27
score: 99.40609402126736
patch: Iterator iter = res . iterator ( ) ; iterator . has CaMeL Next ( ) ;
rank: 28
score: 99.48026529947917
patch: Iterator < Class > iter = res . entries . iterator ( ) ;
rank: 28
score: 99.42933146158855
patch: Iterator iterator = res . entries . iterator ( ) ;
rank: 28
score: 99.42331949869792
patch: int iter = res . entries . size ( ) ;
rank: 28
score: 99.4222412109375
patch: Iterator iter = res . entries . has CaMeL Next ( ) ;
rank: 28
score: 99.42132568359375
patch: Iterator iter = res . entries . next ( ) . entries ( ) ;
rank: 28
score: 99.4184237393466
patch: Iterator iter = data . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 28
score: 99.40496419270833
patch: if ( res != null ) res . entries = res . entries ;
rank: 28
score: 99.40257727581522
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . res . entries . iterator ( ) ;
rank: 29
score: 99.48479546440973
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 29
score: 99.4760498046875
patch: Iterator < Integer > iter = res . entries . iterator ( ) ;
rank: 29
score: 99.428564453125
patch: Iterator iter = res . next ( ) ;
rank: 29
score: 99.42272077287946
patch: Iterator iter = res . remove ( ) . iterator ( ) ;
rank: 29
score: 99.42118835449219
patch: Iterator iter = res . entries = res . entries . iterator ( ) ;
rank: 29
score: 99.41930434283088
patch: Iterator iter = res . entries . entries . ( ) . iterator ( ) ;
rank: 29
score: 99.4162264737216
patch: Iterator iterator = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 29
score: 99.4023104580966
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . iterator ( ) ;
rank: 30
score: 99.41914876302083
patch: Iterator iter = iter . has CaMeL Next ( ) ;
rank: 30
score: 99.41561126708984
patch: Iterator iter = res . entries . entries . entries . size ( ) ;
rank: 30
score: 99.4143597146739
patch: Iterator iter = Integer . parse CaMeL Int ( res . to CaMeL String ( ) ) . iterator ( ) ;
rank: 30
score: 99.40287950303819
patch: Iterator iter = res . entries ( ) . iterator ( ) . iterator ( ) ;
rank: 30
score: 99.40111083984375
patch: Iterator iter = res . entries . to CaMeL Array ( ) . entries . iterator ( ) ;
rank: 31
score: 99.48250325520833
patch: Iterator iter = res . entries . entries . entries . entries . iterator ( ) ;
rank: 31
score: 99.4704948874081
patch: Iterator < Iterator > iter = res . entries ( ) . iterator ( ) ;
rank: 31
score: 99.41647338867188
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 31
score: 99.41466413225446
patch: for ( Iterator iter = res . entries . iterator ( ) ;
rank: 31
score: 99.41275460379464
patch: Iterator iter = res . entries ( ) . copy ( ) ;
rank: 31
score: 99.41243743896484
patch: Iterator iter = res . get CaMeL Entries ( ) . iterator ( ) ;
rank: 31
score: 99.40055577895221
patch: Iterator iter = v [ 0 ] . entries ( ) . iterator ( ) ;
rank: 31
score: 99.39863891601563
patch: Iterator iter ? res . entries . entries . iterator ( ) . has CaMeL Next ( ) ;
rank: 32
score: 99.46904296875
patch: Iterator iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ;
rank: 32
score: 99.42375837053571
patch: Iterator iter = res . entries . iter . iterator ( ) ;
rank: 32
score: 99.41273498535156
patch: synchronized ( res ) { iter = res . entries . iterator ( ) ;
rank: 32
score: 99.41175842285156
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . size ( ) ;
rank: 32
score: 99.41094207763672
patch: Iterator iter = res . get CaMeL Classes ( ) . iterator ( ) ;
rank: 32
score: 99.39848497178819
patch: Iterator iter = res . entries ( ) ; while . has CaMeL Next ( ) ;
rank: 32
score: 99.39727492559524
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries . iterator ( ) ;
rank: 33
score: 99.47810194227431
patch: Iterator iter = res . entries ( ) . entries ( ) . size ( ) ;
rank: 33
score: 99.46534729003906
patch: final Iterator < Object > iter = res . entries . iterator ( ) ;
rank: 33
score: 99.42171902126736
patch: Iterator iter = res . entries . iterator ( ) ; iter . iterator ( ) ;
rank: 33
score: 99.41278076171875
patch: Iterator iter = res . read ( ) . iterator ( ) ;
rank: 33
score: 99.41121419270833
patch: Iterator iter = res . entries ( 1 ) . iterator ( ) ;
rank: 33
score: 99.41029052734375
patch: Iterator iter = res . entries . iterator ( ) ; iterator . has CaMeL Next ( ) ;
rank: 33
score: 99.39834255642361
patch: Iterator iter = v . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 33
score: 99.39691162109375
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . iterator ( ) ;
rank: 34
score: 99.47561306423611
patch: while ( iter . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 34
score: 99.46370014391448
patch: Iterator < String > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 34
score: 99.42097981770833
patch: Iterator iter = res . entries . iter ( ) ; iterator . iterator ( ) ;
rank: 34
score: 99.3966064453125
patch: Iterator iter = res . entries ( res . size ( ) ) ;
rank: 35
score: 99.47515510110294
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 35
score: 99.39608154296874
patch: Iterator iterator = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 35
score: 99.39241536458333
patch: Iterator iter = res . get CaMeL Entry ( ) . entries . iterator ( ) ;
rank: 36
score: 99.41889190673828
patch: Iterator iter = res . iterator ( ) ; iterator . iterator ( ) ;
rank: 36
score: 99.40525716145834
patch: Iterator iter = res . ( ) . entries . iterator ( ) ;
rank: 36
score: 99.4052264873798
patch: Iterator < ] > iter = res . iterator ( ) ;
rank: 36
score: 99.4000473022461
patch: Iterator iter = new Iterator ( res . entries . iterator ( ) ) ;
rank: 36
score: 99.39351613898026
patch: Iterator iter = res . entries ( res . size ( ) ) . iterator ( ) ;
rank: 37
score: 99.39326985677083
patch: res . entries = res . entries ; Iterator iter = v . iterator ( ) ;
rank: 37
score: 99.38992919921876
patch: Iterator iter = res . entries . entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 38
score: 99.38924734933036
patch: Iterator iter = v . entries . entries . iterator ( ) ;
rank: 38
score: 99.38815307617188
patch: Iterator iter = v ; while ( iter . has CaMeL Next ( ) )
rank: 38
score: 99.38689575195312
patch: Iterator iter = res . entries . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 39
score: 99.44799041748047
patch: final Iterator < ? > iter = res . entries . iterator ( ) ;
rank: 39
score: 99.39578683035714
patch: Iterator iter = res . entries . iterator ( ) ; ) {
rank: 39
score: 99.38601888020834
patch: Iterator iter = res . entries ( ) . iterator ( ) ) ;
rank: 39
score: 99.38538128396739
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) . iterator ( ) ;
rank: 39
score: 99.38516235351562
patch: Iterator iter = list . iterator ( ) ;
rank: 40
score: 99.39547729492188
patch: Iterator iter = res . map . iterator ( ) ;
rank: 40
score: 99.39508056640625
patch: Iterator iter = res . iterator ( ) : res . iterator ( ) ;
rank: 40
score: 99.39454868861607
patch: Iterator iter = res . iter . has CaMeL Next ( ) ;
rank: 40
score: 99.38544921875
patch: Iterator iter = res . entries ( ) ) . iterator ( ) ;
rank: 40
score: 99.38487333409927
patch: Iterator iter = res ; while ( iter . has CaMeL Next ( ) ) {
rank: 41
score: 99.45998806423611
patch: Iterator iter = this . res . entries . entries ( ) . iterator ( ) ;
rank: 41
score: 99.40567220052084
patch: Iterator iter = res . get ( res . size ( ) ) ;
rank: 41
score: 99.39447784423828
patch: Iterator iter = res . get CaMeL Data ( ) . iterator ( ) ;
rank: 41
score: 99.38902936662946
patch: Iterator iter = res . entries ( ) . next ( ) ;
rank: 41
score: 99.38623046875
patch: Iterator iter = res . next ( ) . entries ( ) ;
rank: 41
score: 99.38213820684524
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . entries . iterator ( ) ;
rank: 41
score: 99.3794806985294
patch: if ( res . entries != null ) res . entries = res . entries ;
rank: 42
score: 99.45930311414931
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Real CaMeL Vector ( this ) ;
rank: 42
score: 99.39249965122768
patch: Iterator iter = res . size ( ) . iterator ( ) ;
rank: 42
score: 99.38847351074219
patch: Iterator iter = res . to CaMeL Array ( ) . entries ( ) ;
rank: 42
score: 99.38206380208334
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) {
rank: 42
score: 99.3790347450658
patch: Iterator iter = res . iterator ( ) ; while ( . has CaMeL Next ( ) )
rank: 43
score: 99.45880126953125
patch: if ( iter . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 43
score: 99.43837327223558
patch: Iterator < Iterator > iter = res . iterator ( ) ;
rank: 43
score: 99.40070452008929
patch: Iterator iter = res . entries . entries . iter ( ) ;
rank: 43
score: 99.3873062133789
patch: Iterator iter = res . to CaMeL String ( ) . iterator ( ) ;
rank: 43
score: 99.38382393973214
patch: try { Iterator iter = res . entries . iterator ( ) ;
rank: 43
score: 99.36889038085937
patch: Iterator iter = res . entries . length ;
rank: 44
score: 99.39131927490234
patch: Iterator iter < Object > iter = res . entries . iterator ( ) ;
rank: 44
score: 99.38496398925781
patch: int entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 44
score: 99.37545955882354
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) {
rank: 45
score: 99.45453559027777
patch: Real CaMeL Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 45
score: 99.4371696920956
patch: Iterator < Class > iter = res . entries ( ) . iterator ( ) ;
rank: 45
score: 99.38989975873162
patch: Iterator iter = res . entries [ 0 ] . entries . iterator ( ) ;
rank: 45
score: 99.38486891526442
patch: Iterator < T > iter = res . entries ( ) ;
rank: 45
score: 99.37646484375
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 45
score: 99.37496512276786
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries . iterator ( ) ;
rank: 45
score: 99.37439643012152
patch: res . entries = res . entries ; Iterator iter = res . iterator ( ) ;
rank: 46
score: 99.39687674386161
patch: Iterator iter = res . next ( ) . iterator ( ) ;
rank: 46
score: 99.38285319010417
patch: Iterator iter = data . entries . iterator ( ) ;
rank: 46
score: 99.38021087646484
patch: Iterator iter = res . get CaMeL Value ( ) . size ( ) ;
rank: 46
score: 99.37594604492188
patch: Iterator iter = 0 ; while ( iter . has CaMeL Next ( ) )
rank: 46
score: 99.37492819393383
patch: Iterator < Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 46
score: 99.36777954101562
patch: Iterator iterator = v . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 46
score: 99.36444561298077
patch: Iterator iter = res . ( ) . iterator ( ) ;
rank: 47
score: 99.44703892299107
patch: Iterator iter = res . entries . iterator ( ) ; for (
rank: 47
score: 99.43331748560855
patch: res . iterator ( ) . iterator ( ) . iterator ( ) . next ( ) ;
rank: 47
score: 99.39685872395833
patch: Iterator iter = ( Iterator ) res . entries . iterator ( ) ;
rank: 47
score: 99.38688659667969
patch: Iterator iter = res . class . entries ( ) . iterator ( ) ;
rank: 47
score: 99.3729736328125
patch: Iterator iter = entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 47
score: 99.37155386117789
patch: Iterator iter = ! res . entries . iterator ( ) ;
rank: 47
score: 99.36518998579545
patch: Iterator iter = res . iterator ( ) ; ;
rank: 47
score: 99.35860188802083
patch: Iterator iter = res . add ( v ) . iterator ( ) ;
rank: 48
score: 99.44593641493056
patch: Iterator iter = res . entries ( ) . entries . entries . iterator ( ) ;
rank: 48
score: 99.38460540771484
patch: Iterator iter = res . iterator ( ) : res . size ( ) ;
rank: 48
score: 99.37941080729166
patch: res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 48
score: 99.37134898792614
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . entries . iterator ( ) ;
rank: 48
score: 99.36777565696023
patch: Iterator iter = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 49
score: 99.44368489583333
patch: Iterator iter = iter . entries ( ) . entries ( ) . iterator ( ) ;
rank: 49
score: 99.43183135986328
patch: Iterator iter = res . entries . list ( ) . iterator ( ) ;
rank: 49
score: 99.39407687717014
patch: Iterator iter = res . iterator ( ) ; iterator = res . iterator ( ) ;
rank: 49
score: 99.37906646728516
patch: Iterator iter = res . entries ( ) ; iterator . iterator ( ) ;
rank: 49
score: 99.3766860961914
patch: Iterator iter = res . to CaMeL Array ( ) . size ( ) ;
rank: 49
score: 99.37308756510417
patch: Iterator entries = res . entries . iterator ( ) ;
rank: 49
score: 99.36669921875
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . entries . entries . iterator ( ) ;
rank: 49
score: 99.35911729600694
patch: Iterator iter = res . entries ( ) ; iterator . has CaMeL Next ( ) ;
rank: 50
score: 99.43761335100446
patch: Iterator iter = iter . entries ( ) . iterator ( ) ;
rank: 50
score: 99.39385986328125
patch: Iterator iter = res . entries . iterator ( ) ; iterator = null ;
rank: 50
score: 99.3558349609375
patch: Iterator iter = res . iterator . entries ( ) ;
rank: 50
score: 99.35367838541667
patch: List iter = res . entries . iterator ( ) ;
rank: 51
score: 99.43478054470486
patch: Iterator iter = res . entries . entries ( ) . entries . entries ( ) ;
rank: 51
score: 99.39344133649554
patch: Iterator iter = res . next . entries . iterator ( ) ;
rank: 51
score: 99.37351771763393
patch: Iterator iter = res . v . entries . iterator ( ) ;
rank: 51
score: 99.36637878417969
patch: Iterator iter = res . length . entries ( ) . iterator ( ) ;
rank: 51
score: 99.3648681640625
patch: Iterator iter = res . iterator . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 51
score: 99.361328125
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) ;
rank: 51
score: 99.35405417049633
patch: Iterator iter = res . entries ( ) . iterator ( ) ; while ( )
rank: 51
score: 99.35194702148438
patch: Iterator iter = res . read ( ) ;
rank: 52
score: 99.42557466947116
patch: Iterator < ? > iter = res . iterator ( ) ;
rank: 52
score: 99.39283098493304
patch: Iterator iter = new Iterator ( res . iterator ( ) ) ;
rank: 52
score: 99.37489536830357
patch: Iterator iter = res . entries ( ) . clone ( ) ;
rank: 52
score: 99.3734130859375
patch: Iterator iter = res . next ( ) . entries . size ( ) ;
rank: 52
score: 99.3531265258789
patch: res . res = res ; Iterator iter = res . iterator ( ) ;
rank: 52
score: 99.3511250813802
patch: Iterator iter = res . data . iterator ( ) ;
rank: 53
score: 99.39125061035156
patch: Iterator iter = res . entries . entries ( ) . iter ( ) ;
rank: 53
score: 99.37380083869485
patch: final int entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 53
score: 99.36972943474265
patch: Iterator iter = res . entries Real CaMeL Vector ( ) . iterator ( ) ;
rank: 53
score: 99.36418151855469
patch: Iterator iter < String > iter = res . entries . iterator ( ) ;
rank: 53
score: 99.3634920987216
patch: Iterator iter = this . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 53
score: 99.35859375
patch: final Iterator iter = res . entries . entries . iterator ( ) ;
rank: 53
score: 99.35233154296876
patch: Iterator iter . has CaMeL Next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 53
score: 99.35071818033855
patch: Iterator iter = res . res . iterator ( ) ;
rank: 54
score: 99.43094889322917
patch: Iterator iter = res . entries . iterator ( ) : res . iterator ( ) ;
rank: 54
score: 99.42333170572917
patch: Iterator < ) > iter = res . entries . iterator ( ) ;
rank: 54
score: 99.37132975260417
patch: synchronized ( res ) { Iterator iter = res . iterator ( ) ;
rank: 54
score: 99.3616055575284
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 54
score: 99.350341796875
patch: Iterator iter = res . iterator . iterator ( ) ; while . has CaMeL Next ( ) ;
rank: 55
score: 99.42878553602431
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( iter ) ;
rank: 55
score: 99.37040201822917
patch: synchronized ( res ) { Iterator iter = res . entries ( ) ;
rank: 55
score: 99.35946834788604
patch: Iterator iter = v . index CaMeL Of ( $STRING$ ) . iterator ( ) ;
rank: 55
score: 99.34669799804688
patch: Iterator iter = res . iterator . ) ; while ( iter . has CaMeL Next ( ) )
rank: 56
score: 99.42762586805556
patch: Iterator iter = res . entries . iterator ( ) * v . iterator ( ) ;
rank: 56
score: 99.42123592601104
patch: Iterator < int > iter = res . entries ( ) . iterator ( ) ;
rank: 56
score: 99.36365559895833
patch: Iterator iter = res . entries . index CaMeL Of ( this ) ;
rank: 56
score: 99.3588638305664
patch: Iterator iter = res . get CaMeL Properties ( ) . iterator ( ) ;
rank: 56
score: 99.33927408854167
patch: Iterator iter = res . entries . next ( ) ;
rank: 57
score: 99.41615295410156
patch: Iterator iter = this . res . entries ( ) . iterator ( ) ;
rank: 57
score: 99.38787163628473
patch: Iterator iter = res . get ( ) . entries ( ) . iterator ( ) ;
rank: 57
score: 99.36656901041667
patch: Iterator iter = res . entries ( null ) . iterator ( ) ;
rank: 57
score: 99.35772705078125
patch: Iterator iter = res . this . res . entries . iterator ( ) ;
rank: 57
score: 99.35605197482639
patch: Iterator iter = v . length ; while ( iter . has CaMeL Next ( ) )
rank: 57
score: 99.35234917534723
patch: Iterator iter = res . to CaMeL Array ( ) . entries . iterator ( ) ;
rank: 58
score: 99.42738342285156
patch: Iterator iter = v . entries ( ) . entries . iterator ( ) ;
rank: 58
score: 99.41580636160714
patch: final Iterator < String > iter = res . iterator ( ) ;
rank: 58
score: 99.38603864397321
patch: Iterator iter = res . entries . entries . entries ( ) ;
rank: 58
score: 99.36315307617187
patch: Iterator entries = res . entries ( ) ;
rank: 58
score: 99.36254119873047
patch: Iterator iter = res . v . entries ( ) . iterator ( ) ;
rank: 58
score: 99.35749816894531
patch: Iterator iter = iter . next ( ) . entries . iterator ( ) ;
rank: 58
score: 99.354736328125
patch: Iterator iter = v . to CaMeL Array ( ) . iterator ( ) ;
rank: 58
score: 99.35174560546875
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) ;
rank: 58
score: 99.34194048713235
patch: if ( res != null ) res . entries = res . entries . entries ;
rank: 59
score: 99.4157958984375
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 59
score: 99.3857780905331
patch: Iterator < Entry > iter = res . entries . entries . iterator ( ) ;
rank: 59
score: 99.36247253417969
patch: Iterator iter = res . entries . trim ( ) . iterator ( ) ;
rank: 59
score: 99.3622159090909
patch: final Iterator iter = res . entries ( ) ;
rank: 59
score: 99.3569107055664
patch: Iterator iter = res . get CaMeL Type ( ) . iterator ( ) ;
rank: 59
score: 99.35400390625
patch: Iterator iter = res . map . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 59
score: 99.34996840533088
patch: Iterator < Object > iter = res . entries . entries . iterator ( ) ;
rank: 60
score: 99.42611490885416
patch: Iterator iter = res [ 1 ] . entries . iterator ( ) ;
rank: 60
score: 99.41291889391448
patch: Iterator < Object > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 60
score: 99.38557264539931
patch: Iterator iter = res . entries . iter ( ) ; entries . iterator ( ) ;
rank: 60
score: 99.3616943359375
patch: Iterator iter = res . entries ( - $NUMBER$ ) . iterator ( ) ;
rank: 60
score: 99.34988536005434
patch: for ( Iterator iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 60
score: 99.349853515625
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 60
score: 99.33850775824652
patch: Iterator iter = res . entries ( . length - 1 ) . iterator ( ) ;
rank: 60
score: 99.3373046875
patch: iter . has CaMeL Next ( ) ; iter . advance ( ) ;
rank: 61
score: 99.42600504557292
patch: Iterator iter = v . entries . entries ( ) . entries . iterator ( ) ;
rank: 61
score: 99.38177490234375
patch: Iterator iter = res . entries . iterator ( ) ; iterator = 0 ;
rank: 61
score: 99.36235046386719
patch: Iterator iter = res . copy ( ) . entries . iterator ( ) ;
rank: 61
score: 99.3610370342548
patch: Iterator < T > iter = res . iterator ( ) ;
rank: 61
score: 99.34977583451705
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 61
score: 99.3351318359375
patch: Iterator < Long > iter = res . entries . iterator ( ) ;
rank: 62
score: 99.40921823601974
patch: res . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 62
score: 99.38114107572116
patch: Iterator iter = ( Iterator ) res . entries ( ) ;
rank: 62
score: 99.3619155883789
patch: Iterator iter = this . entries . entries . entries . iterator ( ) ;
rank: 62
score: 99.36052997295673
patch: Iterator < E > iter = res . entries ( ) ;
rank: 62
score: 99.33563232421875
patch: / * Iterator iter = res . entries . iterator ( ) ;
rank: 62
score: 99.33319963727679
patch: Iterator iter = entries . entries ( ) . iterator ( ) ;
rank: 63
score: 99.4086444561298
patch: Iterator < int > iter = res . iterator ( ) ;
rank: 63
score: 99.3609260110294
patch: Iterator iter = res . index CaMeL Of ( this ) . iterator ( ) ;
rank: 63
score: 99.34783172607422
patch: Iterator iter = null ; while ( iter . has CaMeL Next ( ) )
rank: 63
score: 99.335205078125
patch: res . res = res ; Iterator iter = v . iterator ( ) ;
rank: 63
score: 99.33219401041667
patch: Iterator iter = res . v . iterator ( ) ;
rank: 64
score: 99.42317504882813
patch: Iterator iter = iter . iterator ( ) ;
rank: 64
score: 99.40809631347656
patch: final Iterator < Iterator > iter = res . entries . iterator ( ) ;
rank: 64
score: 99.34751490542763
patch: Iterator iter = Integer . parse CaMeL Int ( res . to CaMeL String ( ) ) ;
rank: 64
score: 99.33324256310097
patch: Iterator iter = v . iterator ( ) ; while ( )
rank: 64
score: 99.32972063337054
patch: Iterator iter = res . class . entries . iterator ( ) ;
rank: 65
score: 99.4167251586914
patch: Iterator iter = res != null : res . entries . iterator ( ) ;
rank: 65
score: 99.40570427389706
patch: Iterator < Integer > iter = res . entries ( ) . iterator ( ) ;
rank: 65
score: 99.37872992621527
patch: Iterator iter = res . next ( ) . entries ( ) . iterator ( ) ;
rank: 65
score: 99.35853576660156
patch: Iterator iter = res . data . entries . entries . iterator ( ) ;
rank: 65
score: 99.3454256924716
patch: Iterator iter = res . iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 65
score: 99.33991442228618
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . entries . iterator ( ) ;
rank: 65
score: 99.33270670572917
patch: Iterator iter = res . entries ( res . entries ( ) ) ;
rank: 66
score: 99.41656494140625
patch: Iterator iter = res . entries . entries . entries ( ) . entries ( ) ;
rank: 66
score: 99.35609346277573
patch: Iterator iter = res . entries ( ) . ( ) . iterator ( ) ;
rank: 66
score: 99.3475341796875
patch: Iterator iter = res . get CaMeL Id ( ) . iterator ( ) ;
rank: 66
score: 99.34326171875
patch: iter = res . entries . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 66
score: 99.3398968240489
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries . entries . iterator ( ) ;
rank: 66
score: 99.33216857910156
patch: Iterator iter ; try { iter = res . entries . iterator ( ) ;
rank: 67
score: 99.35524615119485
patch: Iterator iter = res . to CaMeL Array ( this ) . iterator ( ) ;
rank: 67
score: 99.35064142400569
patch: res . iterator ( ) . iterator ( ) ;
rank: 67
score: 99.3451919555664
patch: Iterator iter = res . remove ( ) . entries . iterator ( ) ;
rank: 67
score: 99.33200412326389
patch: Iterator iter = v . iterator ( ) ; iterator . has CaMeL Next ( ) ;
rank: 67
score: 99.32569298377403
patch: Iterator iter = res . . entries . iterator ( ) ;
rank: 68
score: 99.41493055555556
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . length . iterator ( ) ;
rank: 68
score: 99.37467447916667
patch: Iterator iter = res . get ( 0 ) . iterator ( ) ;
rank: 68
score: 99.35471478630515
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) . entries ( ) ;
rank: 68
score: 99.34108664772727
patch: iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 68
score: 99.33533325195313
patch: Iterator iter = res . get CaMeL Entry ( ) . entries . entries . iterator ( ) ;
rank: 68
score: 99.32481971153847
patch: final Iterator iter = res . entries . size ( ) ;
rank: 69
score: 99.41465849034927
patch: Iterator iter = res [ 0 ] . entries . entries . iterator ( ) ;
rank: 69
score: 99.39654862253289
patch: final Iterator iter = res . entries ( ) . entries ( ) . iterator ( ) ;
rank: 69
score: 99.37358940972223
patch: Iterator iter = res . entries . iterator ( ) ; res . next ( ) ;
rank: 69
score: 99.34949448529412
patch: Iterator < ] > iter = res . entries ( ) . iterator ( ) ;
rank: 69
score: 99.34331512451172
patch: Iterator iter = res . this . entries . entries . iterator ( ) ;
rank: 69
score: 99.33924932065217
patch: Iterator iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 69
score: 99.33530680338542
patch: Iterator iter : res . entries . iterator ( ) ;
rank: 69
score: 99.33125
patch: Iterator iterator = res . iterator ( ) ;
rank: 70
score: 99.41344536675348
patch: Iterator iter = res . iterator ( ) : res . entries . iterator ( ) ;
rank: 70
score: 99.37299053485577
patch: Iterator iter = ( Iterator ) res . iterator ( ) ;
rank: 70
score: 99.3391644021739
patch: Iterator iter = res . entries . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 70
score: 99.33270584909539
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . iterator ( ) ;
rank: 71
score: 99.39537963867187
patch: int size = res . entries . iterator ( ) . iterator ( ) . size ( ) ;
rank: 71
score: 99.33895534939236
patch: Iterator iter = v . iterator ( ) ; iter . has CaMeL Next ( ) ;
rank: 71
score: 99.33006376378677
patch: res . res = res . entries . iterator ( ) . next ( ) ;
rank: 71
score: 99.32330322265625
patch: Iterator iter = res . entries . Iterator ( ) ;
rank: 72
score: 99.37003326416016
patch: Iterator iter = res . length ; iterator = res . iterator ( ) ;
rank: 72
score: 99.3497783954327
patch: Iterator Iterator iter = res . entries . iterator ( ) ;
rank: 72
score: 99.34865112304688
patch: int iter = res . iterator ( ) ;
rank: 72
score: 99.33894486860795
patch: Iterator iter = v . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 72
score: 99.33189481847427
patch: Iterator < double [ ] > iter = res . entries . iterator ( ) ;
rank: 72
score: 99.32932642886513
patch: Iterator iter = v . iterator ( ) ; while ( . has CaMeL Next ( ) )
rank: 73
score: 99.40810139973958
patch: Iterator iter = res . size ( ) : res . entries . iterator ( ) ;
rank: 73
score: 99.33873401988636
patch: System . arraycopy ( res . entries , 0 , res . entries , 0 , res . length ) ;
rank: 73
score: 99.33124069940476
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iterator = res . entries . iterator ( ) ;
rank: 73
score: 99.32880249023438
patch: res . entries = res . entries ; Iterator iter = res . entries . iterator ( ) ;
rank: 73
score: 99.3217303936298
patch: Iterator iter = res . entries . iterator ( ) ; {
rank: 74
score: 99.40770128038194
patch: while ( v . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 74
score: 99.34651692708333
patch: final int iter = res . entries ( ) . size ( ) ;
rank: 74
score: 99.33840110085227
patch: System . arraycopy ( res . entries , res . entries , 0 , res . entries . length ) ;
rank: 74
score: 99.33033752441406
patch: Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 74
score: 99.32546762319711
patch: Iterator iter = v [ res . size ( ) ] ;
rank: 75
score: 99.36847330729167
patch: Iterator iter = res . entries . = res . iterator ( ) ;
rank: 75
score: 99.34644165039063
patch: Iterator iter = res . copy ( ) ;
rank: 75
score: 99.33773803710938
patch: Iterator iter = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 75
score: 99.33722282858456
patch: Iterator iter = res == new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 75
score: 99.32889229910714
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . entries . iterator ( ) ;
rank: 75
score: 99.32367302389706
patch: if ( res . entries != null && res . entries . length > 0 )
rank: 75
score: 99.31913248697917
patch: Iterator < long > iter = res . entries . iterator ( ) ;
rank: 76
score: 99.40705023871527
patch: Iterator iter = res . entries = res . entries . entries . iterator ( ) ;
rank: 76
score: 99.38911946614583
patch: Iterator iter = res . entries ( ) . iterator ( ) ; else
rank: 76
score: 99.34596470424107
patch: Iterator iter = res . clone ( ) . entries ( ) ;
rank: 76
score: 99.3454833984375
patch: Iterator iter = res . entries ( true ) . iterator ( ) ;
rank: 76
score: 99.32831217447917
patch: Iterator < boolean > iter = res . entries . iterator ( ) ;
rank: 76
score: 99.32195575420673
patch: Iterator iter = v [ 0 ] . iterator ( ) ;
rank: 76
score: 99.31837972005208
patch: Iterator iter = res . add . iterator ( ) ;
rank: 77
score: 99.40665690104167
patch: Real CaMeL Vector entries = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 77
score: 99.34483753551136
patch: iterator = res . entries . iterator ( ) ;
rank: 77
score: 99.33695983886719
patch: Iterator iter = res . get CaMeL Bytes ( ) . iterator ( ) ;
rank: 77
score: 99.33311157226562
patch: Iterator iter = res . clone ( ) ;
rank: 77
score: 99.32020479090073
patch: Iterator iter = res . entries ( res . entries . size ( ) ) ;
rank: 78
score: 99.36134440104166
patch: Iterator iter = res . entries . iterator ( ) ; = null ;
rank: 78
score: 99.34203338623047
patch: Iterator iter = res . value . entries ( ) . iterator ( ) ;
rank: 78
score: 99.34182504507211
patch: Iterator iter = res . entries ) . iterator ( ) ;
rank: 78
score: 99.33568050986842
patch: Iterator iter = res . entries ; while ( iter . has CaMeL Next ( ) ) {
rank: 78
score: 99.32843376608456
patch: Iterator iter = res . entries [ 1 ] . entries . iterator ( ) ;
rank: 78
score: 99.32242838541667
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector >= iter = res . entries . iterator ( ) ;
rank: 78
score: 99.31934407552083
patch: Iterator iter = v [ res . entries . size ( ) ] ;
rank: 79
score: 99.40335422092014
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries . entries ( ) ;
rank: 79
score: 99.36095377604167
patch: Iterator iter = res . entries . iterator ( ) ; iterator ++ ;
rank: 79
score: 99.33998018152573
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( res ) ;
rank: 79
score: 99.32094504616477
patch: Iterator iter = res . entries . entries . to CaMeL Array ( ) . entries . iterator ( ) ;
rank: 80
score: 99.3881591796875
patch: Iterator < Throwable > iter = res . entries . iterator ( ) ;
rank: 80
score: 99.36083984375
patch: Iterator iter = res . entries . iter ( ) ; res . iterator ( ) ;
rank: 80
score: 99.33405095880681
patch: Iterator iter = map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 80
score: 99.3268051147461
patch: Iterator iter = v . next ( ) . entries . iterator ( ) ;
rank: 80
score: 99.3193115234375
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries . entries . iterator ( ) ;
rank: 80
score: 99.31881374782986
patch: if ( res != null ) res . ) res . entries = res . entries ;
rank: 80
score: 99.31248256138393
patch: Iterator iter = ( iter . has CaMeL Next ( ) ) ;
rank: 81
score: 99.40005154079861
patch: Iterator iter = res . entries . ebe CaMeL Divide ( ) . iterator ( ) ;
rank: 81
score: 99.38717651367188
patch: Iterator iter = res . entries . iterator ( ) ; res . has CaMeL Next ( ) ;
rank: 81
score: 99.35923936631944
patch: Iterator iter = res . length ; iterator = res . entries . iterator ( ) ;
rank: 81
score: 99.33857727050781
patch: for ( Iterator iter = res . entries . entries . iterator ( ) ;
rank: 81
score: 99.33375186011905
patch: Iterator iter = list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 81
score: 99.3259048461914
patch: Iterator iter = res . read ( ) . entries . iterator ( ) ;
rank: 81
score: 99.31879425048828
patch: try { Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 81
score: 99.31170247395833
patch: Iterator iter = res . entries . entries . iterator ( ) ; ;
rank: 82
score: 99.39895290798611
patch: Iterator iter = res . entries ( ) . entries ( ) . iter ( ) ;
rank: 82
score: 99.33804321289062
patch: Iterator iter = res . entries . data . entries . iterator ( ) ;
rank: 82
score: 99.3190387228261
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries . entries . iterator ( ) ;
rank: 82
score: 99.31862505744485
patch: Iterator iter = res . entries ( res . length ) . iterator ( ) ;
rank: 83
score: 99.39757486979167
patch: Iterator iter = res . entries [ 0 ] . iterator ( ) ;
rank: 83
score: 99.38235634251645
patch: Iterator < ? > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 83
score: 99.35740661621094
patch: Iterator iter = res . entries ( ) ; res . iterator ( ) ;
rank: 83
score: 99.33769880022321
patch: Iterator iter = res . next ( ) . size ( ) ;
rank: 83
score: 99.33576965332031
patch: res . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 83
score: 99.32411411830357
patch: Iterator iter = this . v . entries . iterator ( ) ;
rank: 83
score: 99.3172607421875
patch: if ( res != null ) res . res = res . entries . size ( ) ;
rank: 83
score: 99.31007893880208
patch: Iterator iter = res . read . iterator ( ) ;
rank: 84
score: 99.39714898003473
patch: Iterator iter = list . entries ( ) . entries ( ) . iterator ( ) ;
rank: 84
score: 99.38235134548611
patch: final Iterator < String > iter = res . entries ( ) . iterator ( ) ;
rank: 84
score: 99.35579427083333
patch: Iterator iter = res . iterator ( ) ; iter = res . iterator ( ) ;
rank: 84
score: 99.33371988932292
patch: Iterator iter = res . value . size ( ) ;
rank: 84
score: 99.33280806107955
patch: Iterator iter = res . get . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 84
score: 99.32393101283482
patch: Iterator entries = res . entries ( ) . iterator ( ) ;
rank: 84
score: 99.31729465060764
patch: Iterator iter . has CaMeL Next ( ) ; ) { iter . advance ( ) ;
rank: 84
score: 99.31694946289062
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) return res ;
rank: 84
score: 99.30887276785714
patch: Iterator iter = res . entries . iterator ( ) ; while (
rank: 85
score: 99.38152717141544
patch: if ( res != null ) iter = res . entries . iterator ( ) ;
rank: 85
score: 99.33330829326923
patch: final int iter = res . entries . iterator ( ) ;
rank: 85
score: 99.3326416015625
patch: System . arraycopy ( res . entries , 0 , res . entries , 0 , v . length ) ;
rank: 85
score: 99.32344324448529
patch: Iterator iter = res [ 0 ] . entries ( ) . iterator ( ) ;
rank: 85
score: 99.31659226190476
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries ( ) ;
rank: 85
score: 99.31638009207589
patch: Iterator iter = v . iterator ( ) . iterator ( ) ;
rank: 86
score: 99.39685821533203
patch: Iterator iter = res . length : res . entries . iterator ( ) ;
rank: 86
score: 99.38105604383681
patch: int size = res . iterator ( ) . iterator ( ) . size ( ) ;
rank: 86
score: 99.35553850446429
patch: Iterator iter = res . get ( ) . iterator ( ) ;
rank: 86
score: 99.33225911458334
patch: res . entries ( ) . iterator ( ) . iterator ( ) ;
rank: 86
score: 99.33225319602273
patch: Iterator iter = this . res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 86
score: 99.32314165900735
patch: Iterator iter = res . get CaMeL Entry ( 0 ) . iterator ( ) ;
rank: 86
score: 99.315625
patch: if ( v != null ) res . entries = res . entries ;
rank: 86
score: 99.31491921164773
patch: final Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 86
score: 99.3070068359375
patch: Iterator iter = ( res . entries . iterator ( ) ) ;
rank: 87
score: 99.38091278076172
patch: final Iterator < Entry > iter = res . entries . iterator ( ) ;
rank: 87
score: 99.33265787760416
patch: Iterator iter = res . entries . ( ) . size ( ) ;
rank: 87
score: 99.33106825086806
patch: iter = res . entries ( ) ;
rank: 87
score: 99.3307217684659
patch: Iterator iter = this . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 87
score: 99.32286725725446
patch: Iterator iter = res . length . entries . iterator ( ) ;
rank: 87
score: 99.31546823601974
patch: if ( res . entries != null ) res . entries = res . entries . entries ;
rank: 88
score: 99.39284939236111
patch: Iterator iter = entries . entries ( ) . entries ( ) . iterator ( ) ;
rank: 88
score: 99.37997918379934
patch: Iterator < int > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 88
score: 99.3544921875
patch: Iterator iter = res . next . iterator ( ) ;
rank: 88
score: 99.3326416015625
patch: Iterator iter = res . get ( ) . entries . iterator ( ) ;
rank: 88
score: 99.33079310825893
patch: Iterator iter = res . entries ( ) . remove ( ) ;
rank: 88
score: 99.31493201622597
patch: Iterator < E > iter = res . iterator ( ) ;
rank: 88
score: 99.31315532483552
patch: final Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 88
score: 99.30508188100961
patch: Iterator iter = res . entries . size ( ) ; ;
rank: 89
score: 99.39241536458333
patch: Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( v ) ;
rank: 89
score: 99.379931640625
patch: Iterator iter = res . to CaMeL Array ( ) . entries ( ) . iterator ( ) ;
rank: 89
score: 99.35429551866319
patch: Iterator iter = res . entries . iterator ( ) ; iterator . size ( ) ;
rank: 89
score: 99.33253479003906
patch: Iterator iter = res . Real CaMeL Vector ( ) . iterator ( ) ;
rank: 89
score: 99.32982584635417
patch: Iterator < ] > entries = res . entries . iterator ( ) ;
rank: 89
score: 99.31406121504934
patch: Iterator iter = v [ res . entries . length - 1 ] . iterator ( ) ;
rank: 89
score: 99.30304827008929
patch: Iterator iter = res . load ( ) . iterator ( ) ;
rank: 90
score: 99.39236111111111
patch: Iterator iter = res . entries = res . entries ( ) . iterator ( ) ;
rank: 90
score: 99.32808140345982
patch: Iterator iter = res . entries ( ) . trim ( ) ;
rank: 90
score: 99.31393432617188
patch: if ( res . entries . size ( ) == 0 ) return res ;
rank: 90
score: 99.3120754076087
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res . entries . iterator ( ) ;
rank: 90
score: 99.30289713541667
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = null ;
rank: 91
score: 99.376953125
patch: Iterator < T > iter = res . entries ( ) . iterator ( ) ;
rank: 91
score: 99.35366482204861
patch: Iterator iterator = res . entries . iterator ( ) ; iterator . iterator ( ) ;
rank: 91
score: 99.33180147058823
patch: synchronized ( this ) { Iterator iter = res . entries . iterator ( ) ;
rank: 91
score: 99.32846901633523
patch: System . arraycopy ( res . entries , 0 , res . entries , 0 , res . size ) ;
rank: 91
score: 99.31388549804687
patch: Iterator iterator = res . entries ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 91
score: 99.31115191915761
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . entries . iterator ( ) ;
rank: 92
score: 99.38997395833333
patch: Iterator iter = res . entries . entries = res . entries . iterator ( ) ;
rank: 92
score: 99.3768310546875
patch: int entries = res . entries . iterator ( ) . iterator ( ) . size ( ) ;
rank: 92
score: 99.35349527994792
patch: Iterator iter = res . iter . iterator ( ) ;
rank: 92
score: 99.33097839355469
patch: for ( Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 92
score: 99.32843338815789
patch: Iterator iter = res . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 92
score: 99.3277816772461
patch: Iterator iter = res . entries = this . entries . iterator ( ) ;
rank: 92
score: 99.31278911389802
patch: if ( res != null ) res . res = res . entries . iterator ( ) ;
rank: 92
score: 99.30959065755208
patch: Enumeration iter = res . entries . iterator ( ) ;
rank: 92
score: 99.2998758951823
patch: Iterator iter = res . out . iterator ( ) ;
rank: 93
score: 99.3878173828125
patch: Iterator iter = list . entries ( ) . iterator ( ) ;
rank: 93
score: 99.33062337239583
patch: Iterator iter = res . entries . ( ) . entries ( ) ;
rank: 93
score: 99.31879425048828
patch: Iterator iter = res . name . entries ( ) . iterator ( ) ;
rank: 93
score: 99.31208631727431
patch: Iterator iter = res . entries ( . size ( ) ) . iterator ( ) ;
rank: 93
score: 99.30929404810855
patch: Iterator < Real CaMeL Vector > iter = res . entries . entries . iterator ( ) ;
rank: 94
score: 99.38774108886719
patch: Iterator iter = res == null : res . entries . iterator ( ) ;
rank: 94
score: 99.35221593520221
patch: Iterator iter = res . get ( res . entries . iterator ( ) ) ;
rank: 94
score: 99.33021545410156
patch: Iterator iter = v . entries . entries . entries . iterator ( ) ;
rank: 94
score: 99.32524108886719
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( ) ;
rank: 94
score: 99.31853485107422
patch: Iterator iter = this . this . res . entries . iterator ( ) ;
rank: 94
score: 99.31190592447916
patch: Iterator iter = res . entries . iterator ( ) ; while ( )
rank: 94
score: 99.30919879415761
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) . entries . iterator ( ) ;
rank: 95
score: 99.38445575420673
patch: Iterator iter = res [ iter . iterator ( ) ] ;
rank: 95
score: 99.37562662760416
patch: Iterator < synchronized > iter = res . entries . iterator ( ) ;
rank: 95
score: 99.35009047564338
patch: Iterator < ? > iter = res . entries . entries . iterator ( ) ;
rank: 95
score: 99.32615064538044
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 95
score: 99.32518513997395
patch: Vector iter = res . entries . iterator ( ) ;
rank: 95
score: 99.30904812282986
patch: Iterator iter = res . get CaMeL Value ( ) . entries . iterator ( ) ;
rank: 95
score: 99.29697963169643
patch: Iterator iter = res . advance . entries . iterator ( ) ;
rank: 96
score: 99.3842022235577
patch: Iterator iter = res [ 0 ] . iterator ( ) ;
rank: 96
score: 99.34998236762152
patch: Iterator iter = res . entries . iterator ( ) ; res . size ( ) ;
rank: 96
score: 99.32501220703125
patch: int iter = res . entries ( ) . iterator ( ) ;
rank: 96
score: 99.30883071001838
patch: this . res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 96
score: 99.29554966517857
patch: Iterator iter = entries . entries . entries . iterator ( ) ;
rank: 97
score: 99.37423502604166
patch: Iterator iter = res . entries entries ( ) . iterator ( ) ;
rank: 97
score: 99.3260498046875
patch: Iterator iter = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 97
score: 99.31610107421875
patch: Iterator iter = res = res . entries . iterator ( ) ;
rank: 97
score: 99.31031799316406
patch: if ( res != null ) res . entries . add ( res ) ;
rank: 97
score: 99.29537259615384
patch: Iterator iter = res . entries . iterator ( 0 ) ;
rank: 98
score: 99.3495342548077
patch: Iterator < Entry > iter = res . iterator ( ) ;
rank: 98
score: 99.32784016927083
patch: Iterator iter = res . entries . index CaMeL Of ( 0 ) ;
rank: 98
score: 99.32453155517578
patch: Iterator iter = res . clone ( ) . entries . iterator ( ) ;
rank: 98
score: 99.30966525607639
patch: Iterator iter = res . entries ( . entries ( ) ) . iterator ( ) ;
rank: 98
score: 99.30646514892578
patch: Iterator iter = res . get CaMeL Entry ( ) . iterator ( ) ;
rank: 98
score: 99.29432024274554
patch: Iterator iter = res . has CaMeL Next ( ) ; ) {
rank: 99
score: 99.37162272135417
patch: Iterator < String > iterator = res . entries . iterator ( ) ;
rank: 99
score: 99.3225734544837
patch: Iterator iter = Integer . parse CaMeL Int ( res . to CaMeL String ( ) ) . entries ( ) ;
rank: 99
score: 99.309326171875
patch: Iterator iter = res . iterator ( ) ) ;
rank: 99
score: 99.30635340073529
patch: Iterator < Integer > iter = res . entries . entries . iterator ( ) ;
rank: 100
score: 99.38089425223214
patch: Real CaMeL Vector res = new Real CaMeL Vector ( this ) ;
rank: 100
score: 99.37112426757812
patch: int entries . iterator ( ) . iterator ( ) . iterator ( ) . next ( ) ;
rank: 100
score: 99.34739467075893
patch: Iterator iter . iter = res . entries . iterator ( ) ;
rank: 100
score: 99.32231212797619
patch: Iterator iter = res . entries . iterator ( ) ; ++ iter . has CaMeL Next ( ) ;
rank: 100
score: 99.31430053710938
patch: Iterator iter = res . contains ( ) : res . size ( ) ;
rank: 100
score: 99.30585394965277
patch: Iterator iter = this . res . entries . entries . entries . iterator ( ) ;
rank: 100
score: 99.29358927408855
patch: Iterator iter = res . start . iterator ( ) ;
rank: 101
score: 99.37060546875
patch: Iterator iter = in . entries ( ) . iterator ( ) ;
rank: 101
score: 99.34716796875
patch: Iterator iter = res . entries . entries ( ) ; iterator . iterator ( ) ;
rank: 101
score: 99.3251091452206
patch: Iterator iter = res . ( ) . entries . entries . iterator ( ) ;
rank: 101
score: 99.32097516741071
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 101
score: 99.31389508928571
patch: Iterator iter = res . max ( ) . iterator ( ) ;
rank: 101
score: 99.3032459077381
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . res . iterator ( ) ;
rank: 101
score: 99.29346516927083
patch: Iterator iter = res . entries . entries . iterator ( ) ; }
rank: 102
score: 99.37895965576172
patch: Iterator iter = res . list . entries ( ) . iterator ( ) ;
rank: 102
score: 99.36934988839286
patch: final Iterator < Object > iter = res . iterator ( ) ;
rank: 102
score: 99.34583391462054
patch: Iterator iter = res . entries . iter . iter ( ) ;
rank: 102
score: 99.31986083984376
patch: Iterator iter = res . clone ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 102
score: 99.307421875
patch: Iterator iter = res . iterator ( res . entries ( ) ) ;
rank: 102
score: 99.30312093098958
patch: Iterator iter = res . get CaMeL Entry . entries ( ) . iterator ( ) ;
rank: 102
score: 99.2930908203125
patch: Iterator iter = res . res . entries . size ( ) ;
rank: 103
score: 99.36847393329327
patch: Iterator < String > iter = res . size ( ) ;
rank: 103
score: 99.34368896484375
patch: Iterator iter = res . get . entries ( ) . entries ( ) ;
rank: 103
score: 99.32179170496323
patch: res . entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 103
score: 99.31878107244319
patch: Iterator iterator = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 103
score: 99.30623372395833
patch: try { Iterator iter = res . iterator ( ) ;
rank: 103
score: 99.30242513020833
patch: Iterator < String > iter = v . entries . iterator ( ) ;
rank: 104
score: 99.37824842664931
patch: Real CaMeL Vector iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 104
score: 99.36818150111607
patch: Iterator iter = out . entries ( ) . iterator ( ) ;
rank: 104
score: 99.3417256673177
patch: Iterator iter = res . get . entries ( ) ;
rank: 104
score: 99.32314453125
patch: Iterator iter = res . entries . iterator ( v . length ) ;
rank: 104
score: 99.31770463423295
patch: System . arraycopy ( res . entries . to CaMeL Array ( ) , 0 , res . entries ) ;
rank: 104
score: 99.30429513113839
patch: if ( res . size ( ) == 0 ) return res ;
rank: 104
score: 99.30141379616477
patch: Iterator iter = res . entries . to CaMeL Array ( ) . entries . entries . iterator ( ) ;
rank: 104
score: 99.29281616210938
patch: Iterator iter = res . entries > iterator ( ) ;
rank: 105
score: 99.32109518612133
patch: Iterator iter = res . ( ) . entries ( ) . entries ( ) ;
rank: 105
score: 99.32105364118304
patch: Iterator iter = res . entries ( ) . close ( ) ;
rank: 105
score: 99.31591796875
patch: for ( Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 105
score: 99.30337344898896
patch: Iterator iter = res . entries ( res . entries . iterator ( ) ) ;
rank: 105
score: 99.2999267578125
patch: Iterator iter = res . entries [ ) . iterator ( ) ;
rank: 105
score: 99.29227701822917
patch: Iterator iter = v . entries . size ( ) ;
rank: 106
score: 99.37782197840073
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( this ) ;
rank: 106
score: 99.32097516741071
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 106
score: 99.31591796875
patch: Iterator iter = res . split . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 106
score: 99.3099365234375
patch: Iterator iter = res . value . entries . iterator ( ) ;
rank: 106
score: 99.29976029829545
patch: Iterator Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 107
score: 99.37742106119792
patch: Iterator iter = v . entries ( ) . entries ( ) . entries ( ) ;
rank: 107
score: 99.31951904296875
patch: int iter . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 107
score: 99.3151522549716
patch: res . Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 107
score: 99.3096923828125
patch: Iterator iter = res . min ( ) . iterator ( ) ;
rank: 107
score: 99.30226045496323
patch: Iterator iter = v [ res . length - 1 ] . iterator ( ) ;
rank: 107
score: 99.29163411458333
patch: Iterator iter = res . add ( res ) . iterator ( ) ;
rank: 108
score: 99.37574005126953
patch: Iterator iter = res . entries ( ) . entries . entries ( ) ;
rank: 108
score: 99.36568603515624
patch: List res . iterator ( ) . iterator ( ) . iterator ( ) . next ( ) ;
rank: 108
score: 99.30206705729167
patch: Iterator Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 108
score: 99.29940635279605
patch: Iterator < String > iter = res . entries . entries . entries . iterator ( ) ;
rank: 109
score: 99.36568450927734
patch: final Iterator < T > iter = res . entries . iterator ( ) ;
rank: 109
score: 99.31820475260416
patch: Iterator iter = res . entries . index CaMeL Of ( null ) ;
rank: 109
score: 99.31717122395834
patch: Iterator iter = res . entries ( ) . add ( res ) ;
rank: 109
score: 99.30170754825367
patch: Iterator iter = res . iterator ( res . entries . size ( ) ) ;
rank: 110
score: 99.37540690104167
patch: Iterator iter = res [ iter . length 1 ] . entries . iterator ( ) ;
rank: 110
score: 99.36404239430146
patch: Iterator < Entry > iter = res . entries ( ) . iterator ( ) ;
rank: 110
score: 99.31238323709239
patch: Iterator iterator = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 110
score: 99.30537414550781
patch: Iterator iter = res . get CaMeL Name ( ) . size ( ) ;
rank: 110
score: 99.30143468520221
patch: if ( res != null ) res . entries = res . entries . length ;
rank: 110
score: 99.29808460582386
patch: Iterator iter = res . entries ( ) . Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 110
score: 99.28993443080357
patch: Iterator iter = res . start . entries . iterator ( ) ;
rank: 111
score: 99.37512885199652
patch: Iterator iter = res . entries . entries ( ) . entries . size ( ) ;
rank: 111
score: 99.36402587890625
patch: Iterator iter = res . iterator ( ) ; while . . . has CaMeL Next ( ) )
rank: 111
score: 99.33730899586396
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; ;
rank: 111
score: 99.31616973876953
patch: Iterator iter = res . entries . entries . entries . entries ( ) ;
rank: 111
score: 99.31204659598214
patch: iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 111
score: 99.30107421875
patch: Iterator iter = v . iterator ( res . size ( ) ) ;
rank: 111
score: 99.29772418478261
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( v ) ;
rank: 111
score: 99.28910609654018
patch: Iterator iter = res . read . entries . iterator ( ) ;
rank: 112
score: 99.37497965494792
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; for (
rank: 112
score: 99.3635498046875
patch: Iterator iter = 0 . iterator ( ) ;
rank: 112
score: 99.33689970128677
patch: Iterator iter = res . add ( res . entries . iterator ( ) ) ;
rank: 112
score: 99.31587727864583
patch: Iterator iter = res . entries . index CaMeL Of ( false ) ;
rank: 112
score: 99.31526947021484
patch: for ( ) { Iterator iter = res . entries . iterator ( ) ;
rank: 112
score: 99.31135697798295
patch: Iterator list = res . entries . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 112
score: 99.30462646484375
patch: Iterator iter = res != null ? res . size ( ) : 0 ;
rank: 112
score: 99.29723590353261
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) . iterator ( ) ;
rank: 113
score: 99.37443033854167
patch: Iterator iter = res . entries . length : res . entries . iterator ( ) ;
rank: 113
score: 99.33611450195312
patch: Iterator iter = $STRING$ . iterator ( ) ;
rank: 113
score: 99.3113021850586
patch: Object [ ] data = res . entries . to CaMeL Array ( ) ;
rank: 113
score: 99.30420684814453
patch: Iterator iter = res . to CaMeL Array ( ) . iter ( ) ;
rank: 113
score: 99.30015653722427
patch: if ( res != null ) { Iterator iter = res . iterator ( ) ;
rank: 113
score: 99.2879130045573
patch: Iterator iter = res . name . iterator ( ) ;
rank: 114
score: 99.33606675091912
patch: Iterator iter = res . entries . put ( res . iterator ( ) ) ;
rank: 114
score: 99.31514246323529
patch: Iterator iter = res . ( ) . entries ( ) . size ( ) ;
rank: 114
score: 99.3149642944336
patch: Iterator iter = res . entries ( ) . has CaMeL Next ( ) ;
rank: 114
score: 99.30340576171875
patch: Iterator iter = res . size ( ) : v . iterator ( ) ;
rank: 114
score: 99.29771021792763
patch: Iterator iter = res . entries ( ) . iterator ( res . size ( ) ) ;
rank: 114
score: 99.29667663574219
patch: Iterator iter . has CaMeL Next ( ) ; iter . advance ( ) ;
rank: 114
score: 99.28683268229166
patch: Iterator < Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 115
score: 99.31484750600961
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( res ) ;
rank: 115
score: 99.30978875411184
patch: Iterator iter = res . entries ) ; while ( iter . has CaMeL Next ( ) )
rank: 115
score: 99.30253383091518
patch: Iterator iter = res . max . entries . iterator ( ) ;
rank: 115
score: 99.29680633544922
patch: Iterator iter = res . entries ( ) . iterator ( ) - 1 ;
rank: 116
score: 99.36200629340277
patch: if ( res != null ) Iterator iter = res . entries . iterator ( ) ;
rank: 116
score: 99.31317901611328
patch: Iterator iter = res . to CaMeL String ( ) . entries ( ) ;
rank: 116
score: 99.307861328125
patch: Iterator iter = data . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 116
score: 99.29596416766827
patch: Iterator iter = res . entries ( ) ; while ( )
rank: 116
score: 99.29477074032738
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . list . iterator ( ) ;
rank: 116
score: 99.28389798677884
patch: Iterator iter = res . add ( v . length ) ;
rank: 117
score: 99.3618633563702
patch: Iterator < Object > iter = res . entries ( ) ;
rank: 117
score: 99.31307220458984
patch: Iterator iter = res . entries . entries . entries . iter ( ) ;
rank: 117
score: 99.31214904785156
patch: res . entries ( ) ; Iterator iter = res . entries ( ) ;
rank: 117
score: 99.30119323730469
patch: Iterator iter = res . res . entries . entries . iterator ( ) ;
rank: 117
score: 99.28382975260416
patch: Iterator iter = res . ! res . has CaMeL Next ( ) ;
rank: 118
score: 99.36099947415866
patch: Iterator < Integer > iter = res . iterator ( ) ;
rank: 118
score: 99.31156782670455
patch: Iterator iter = res . entries ( null ) ;
rank: 118
score: 99.30769653320313
patch: Iterator iter = iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 118
score: 99.30105590820312
patch: Iterator iter = res . get CaMeL Type ( ) . size ( ) ;
rank: 118
score: 99.29393246299342
patch: Iterator iter = res . entries ( ) ; while ( . has CaMeL Next ( ) )
rank: 118
score: 99.29355875651042
patch: Iterator iter = res . get CaMeL Data ( ) . entries . iterator ( ) ;
rank: 118
score: 99.28326416015625
patch: Iterator iter = res . copy ( ) . size ( ) ;
rank: 119
score: 99.3700180053711
patch: Iterator iter = v . entries . entries ( ) . entries ( ) ;
rank: 119
score: 99.33285701976104
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = 0 ;
rank: 119
score: 99.31149471507354
patch: Iterator iter = res . value CaMeL Of ( $STRING$ ) . iterator ( ) ;
rank: 119
score: 99.31025390625
patch: Iterator iter = res . add ( this ) . iterator ( ) ;
rank: 119
score: 99.2936150045956
patch: Iterator iter = v [ res . size ( ) ] . iterator ( ) ;
rank: 119
score: 99.293310546875
patch: list = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 119
score: 99.28287447415866
patch: Iterator iter = res . ( ) . size ( ) ;
rank: 120
score: 99.31106567382812
patch: Iterator iter = res . get CaMeL Properties ( ) . entries ( ) ;
rank: 120
score: 99.31012725830078
patch: Iterator iter = res . close ( ) . entries . iterator ( ) ;
rank: 120
score: 99.30556418678977
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 120
score: 99.30078125
patch: Iterator iter = res . res . entries ( ) . iterator ( ) ;
rank: 120
score: 99.29209833559783
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = this . res . entries . iterator ( ) ;
rank: 120
score: 99.2818094889323
patch: Iterator iter = res . in . iterator ( ) ;
rank: 121
score: 99.35774993896484
patch: Iterator < Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 121
score: 99.33203125
patch: Iterator iter = res . iterator ( ) ; iter . iterator ( ) ;
rank: 121
score: 99.31106332632211
patch: Iterator < ] > entries = res . entries ( ) ;
rank: 121
score: 99.30524040670956
patch: synchronized ( res ) { iter = res . entries . iterator ( ) ; }
rank: 121
score: 99.28049723307292
patch: Iterator iter = entries . entries . size ( ) ;
rank: 122
score: 99.3662841796875
patch: Iterator iter = res [ iter . has CaMeL Next ( ) ] ;
rank: 122
score: 99.3318622295673
patch: iter = res . entries . entries . iterator ( ) ;
rank: 122
score: 99.31093052455357
patch: Iterator iter = res . entries ( . iterator ( ) ) ;
rank: 122
score: 99.30870819091797
patch: Iterator iter = res . entries . iterator ( ) . size ( ) ;
rank: 122
score: 99.3046875
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 122
score: 99.3004379272461
patch: Iterator iter < Class > iter = res . entries . iterator ( ) ;
rank: 122
score: 99.29233685661765
patch: Iterator iter = res . entries . iterator ( res . size ( ) ) ;
rank: 122
score: 99.29092407226562
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( ) . iterator ( ) ;
rank: 122
score: 99.28019496372768
patch: Iterator iter = res . this . entries . size ( ) ;
rank: 123
score: 99.36530412946429
patch: res . set CaMeL Entry ( iter . advance ( ) ) ;
rank: 123
score: 99.33175659179688
patch: Iterator iter = res . next . entries ( ) . iterator ( ) ;
rank: 123
score: 99.31077357700893
patch: Iterator * ] iter = res . entries . iterator ( ) ;
rank: 123
score: 99.3083267211914
patch: Iterator iter = res . v . entries . entries . iterator ( ) ;
rank: 123
score: 99.29197291324013
patch: if ( res . entries != null && res . entries . size ( ) > 0 )
rank: 123
score: 99.29041399274554
patch: Iterator < int ) = res . entries . iterator ( ) ;
rank: 124
score: 99.36313763786765
patch: Iterator iter = res [ 1 ] . entries . entries . iterator ( ) ;
rank: 124
score: 99.3561150045956
patch: Iterator < Iterator < ? > iter = res . entries . iterator ( ) ;
rank: 124
score: 99.31065266927084
patch: Iterator < ] > iterator = res . entries . iterator ( ) ;
rank: 124
score: 99.30705710018383
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Real CaMeL Vector ( ) ;
rank: 124
score: 99.30345517113095
patch: Iterator iter = res . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 124
score: 99.2914794921875
patch: Iterator iter = res . iterator ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 124
score: 99.27871907552084
patch: Iterator < Boolean > iter = res . entries . iterator ( ) ;
rank: 125
score: 99.36172921316964
patch: Iterator iter = res . entries . iterator . iterator ( ) ;
rank: 125
score: 99.355712890625
patch: final Iterator < Integer > iter = res . entries . iterator ( ) ;
rank: 125
score: 99.30955505371094
patch: Iterator iter = res . entries ( - 1 ) . entries ( ) ;
rank: 125
score: 99.29955115685097
patch: Iterator iter = res . index CaMeL Of ( this ) ;
rank: 125
score: 99.29010564630681
patch: Iterator iter = res . to CaMeL Array ( Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 125
score: 99.28880896935097
patch: if ( res != null ) res . res = res ;
rank: 126
score: 99.36042785644531
patch: Iterator iter = res . entries ( ) . iterator ( ) ; for (
rank: 126
score: 99.35433959960938
patch: int entries = res . entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 126
score: 99.30489908854166
patch: entries = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 126
score: 99.30145554315476
patch: Iterator iterator = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 126
score: 99.28861083984376
patch: Iterator iterator = v . iterator ( ) ;
rank: 127
score: 99.35433349609374
patch: Iterator iter = res . entries == null ? null : res . entries . iterator ( ) ;
rank: 127
score: 99.30601917613636
patch: entries = res . entries . iterator ( ) ;
rank: 127
score: 99.30424499511719
patch: Iterator iter = res . next ( ) . entries . entries ( ) ;
rank: 127
score: 99.29768371582031
patch: Iterator iter = res . contains ( ) : res . iterator ( ) ;
rank: 127
score: 99.27562604631696
patch: Iterator iter = res . trim ( ) . size ( ) ;
rank: 128
score: 99.32889811197917
patch: Iterator iter = new Iterator ( res . entries . entries . iterator ( ) ) ;
rank: 128
score: 99.30480143229167
patch: Iterator iter = res . entries ( $STRING$ ) . iterator ( ) ;
rank: 128
score: 99.2890853881836
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries )
rank: 128
score: 99.28774789663461
patch: if ( res != null && res . length > 0 )
rank: 128
score: 99.27440534319196
patch: Iterator iter = res . clone ( ) . size ( ) ;
rank: 129
score: 99.35860770089286
patch: Iterator iter = res != null . entries . iterator ( ) ;
rank: 129
score: 99.32882254464286
patch: res . Iterator iter = res . entries . iterator ( ) ;
rank: 129
score: 99.30431315104167
patch: entries . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 129
score: 99.30402688419117
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) . size ( ) ;
rank: 129
score: 99.29757925180289
patch: Iterator iter = res . index CaMeL Of ( false ) ;
rank: 129
score: 99.2890625
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ? ( Open CaMeL Map CaMeL Real CaMeL Vector )
rank: 129
score: 99.286376953125
patch: if ( res != null ) { Iterator iter = res . entries . iterator ( ) ;
rank: 129
score: 99.27426147460938
patch: while ( res . has CaMeL Next ( ) ) {
rank: 130
score: 99.35142415364584
patch: Iterator < String > iter = res . entries . entries ( ) ;
rank: 130
score: 99.32851993336396
patch: Iterator iter = ( Iterator ) res . entries ( ) . iterator ( ) ;
rank: 130
score: 99.3042351217831
patch: Iterator iter = res . to CaMeL Array ( res ) . iterator ( ) ;
rank: 130
score: 99.30042085193452
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 130
score: 99.2886272927989
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) this ) . entries . iterator ( ) ;
rank: 131
score: 99.35096028645833
patch: Iterator < Byte > iter = res . entries . iterator ( ) ;
rank: 131
score: 99.30014038085938
patch: int size = res . entries . size ( ) ;
rank: 131
score: 99.2884765625
patch: Iterator iter = ! res . entries . entries . iterator ( ) ;
rank: 131
score: 99.28518676757812
patch: res . Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 132
score: 99.34929342830883
patch: Iterator < String > iter = this . res . entries . iterator ( ) ;
rank: 132
score: 99.32826063368056
patch: Iterator iter = res . iterator ( ) ; res . has CaMeL Next ( ) ;
rank: 132
score: 99.30196126302083
patch: Iterator iter = res . entries ( 0 ) . iterator ( ) ;
rank: 132
score: 99.2938591452206
patch: Iterator iter = res . get CaMeL Entry ( 1 ) . iterator ( ) ;
rank: 132
score: 99.28508758544922
patch: Object res = res . entries . iterator ( ) . next ( ) ;
rank: 133
score: 99.32733154296875
patch: Iterator iter = res . get CaMeL Fields ( ) . iterator ( ) ;
rank: 133
score: 99.3018047626202
patch: res . entries . iterator ( ) . iterator ( ) ;
rank: 133
score: 99.30121612548828
patch: Iterator iter = res . map . entries ( ) . iterator ( ) ;
rank: 133
score: 99.29963989257813
patch: Iterator iter = res . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 133
score: 99.28706287202381
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) . iterator ( ) ;
rank: 133
score: 99.28492495888158
patch: Iterator iter = res . iterator ( ) ; Iterator iter = v . iterator ( ) ;
rank: 133
score: 99.26852852957589
patch: Iterator iter = res . advance ( ) . iterator ( ) ;
rank: 134
score: 99.34774576822916
patch: final Iterator iter = res . entries ( ) . iter ( ) ;
rank: 134
score: 99.30136108398438
patch: Iterator iter = res . value CaMeL Of ( ) . iterator ( ) ;
rank: 134
score: 99.30075509207589
patch: Iterator iter = res . entries . data . iterator ( ) ;
rank: 134
score: 99.28645463423295
patch: for ( iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 134
score: 99.28446237664474
patch: synchronized ( res ) { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 134
score: 99.2676289876302
patch: Iterator iter = this . entries . size ( ) ;
rank: 135
score: 99.35530090332031
patch: Iterator iter = res . entries . iterator ( ) ; for ( for (
rank: 135
score: 99.32627958409927
patch: Iterator iter = res . entries . iterator ( ) ; . iterator ( ) ;
rank: 135
score: 99.29959542410714
patch: for ( Iterator iter = v . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 135
score: 99.28369818793402
patch: Iterator iter = v . entries ( ) ; while . has CaMeL Next ( ) ;
rank: 135
score: 99.26720252403847
patch: Iterator iter = res . entries . size ( ) ; }
rank: 136
score: 99.35352325439453
patch: Iterator iter = res . entries ( ) . entries ( ) . length ;
rank: 136
score: 99.34621710526316
patch: res . iterator ( ) . iterator ( ) . iterator ( ) . size ( ) ;
rank: 136
score: 99.32623291015625
patch: Iterator iter = res . key . iterator ( ) ;
rank: 136
score: 99.2993896484375
patch: Iterator < ] >> iter = res . entries . iterator ( ) ;
rank: 136
score: 99.2988918138587
patch: Iterator iter = res . iterator . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 136
score: 99.29164341517857
patch: Iterator iter = res . min . entries . iterator ( ) ;
rank: 136
score: 99.28629927201705
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector != null ;
rank: 136
score: 99.28339385986328
patch: Iterator iter = res . iterator . entries ( ) . iterator ( ) ;
rank: 137
score: 99.35230364118304
patch: Iterator iter = res . entries . length . iterator ( ) ;
rank: 137
score: 99.34541829427083
patch: Iterator iter = res . entries ( ) . list ( ) . iterator ( ) ;
rank: 137
score: 99.2856212797619
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . size ( ) ;
rank: 137
score: 99.2657470703125
patch: Iterator iter = res . this ) . entries . iterator ( ) ;
rank: 138
score: 99.34541015625
patch: Iterator < Short > iter = res . entries . iterator ( ) ;
rank: 138
score: 99.32596588134766
patch: Iterator iter = res . entries . next ( ) . iterator ( ) ;
rank: 138
score: 99.29839324951172
patch: Iterator iter = res . entries ( ) . replace CaMeL All ( ) ;
rank: 138
score: 99.2965975674716
patch: Iterator res = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 138
score: 99.28971862792969
patch: Iterator iter = res . parse ( ) . entries . iterator ( ) ;
rank: 138
score: 99.26542445591518
patch: Iterator iter = res . read ( ) . size ( ) ;
rank: 139
score: 99.34539794921875
patch: final Iterator < Object > iter = res . entries ( ) . iterator ( ) ;
rank: 139
score: 99.32396104600694
patch: Iterator iter = res . entries . iterator ( ) + res . iterator ( ) ;
rank: 139
score: 99.29745662913604
patch: final Iterator iter = res . entries . entries . entries . iterator ( ) ;
rank: 139
score: 99.29731968470982
patch: Iterator iter = res . entries ( ) . start ( ) ;
rank: 139
score: 99.29556937839673
patch: res . set CaMeL Length ( res . length ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 139
score: 99.28262489720395
patch: synchronized ( res . entries ) { Iterator iter = res . entries . iterator ( ) ;
rank: 139
score: 99.26472981770833
patch: Iterator iter = res . contains . iterator ( ) ;
rank: 140
score: 99.29735565185547
patch: Iterator iter = res . entries . size ( ) . iterator ( ) ;
rank: 140
score: 99.2960205078125
patch: Iterator iter = Math . iterator ( res . entries . iterator ( ) ) ;
rank: 140
score: 99.29529389880952
patch: Iterator iter = res . entries . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 140
score: 99.28371853298611
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ( ) )
rank: 140
score: 99.26448880709134
patch: Iterator iter = res . entries . . iterator ( ) ;
rank: 141
score: 99.29576416015625
patch: Enumeration iter = res . entries ( ) ;
rank: 141
score: 99.2952880859375
patch: Iterator iter = res . entries . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 141
score: 99.283203125
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . entries . entries . iterator ( ) ;
rank: 141
score: 99.28208295036765
patch: Iterator iter = res . entries ( ) [ 0 ] . iterator ( ) ;
rank: 141
score: 99.26400756835938
patch: Iterator iter = res . length . size ( ) ;
rank: 142
score: 99.34800720214844
patch: Iterator iter = res . entries . entries . iterator . iterator ( ) ;
rank: 142
score: 99.34466552734375
patch: / * Iterator iter = res . entries . entries ( ) . iterator ( ) ;
rank: 142
score: 99.2967300415039
patch: Iterator iter = res . [ iter . has CaMeL Next ( ) ] ;
rank: 142
score: 99.2954330444336
patch: Iterator [ ] res . entries = res . entries . iterator ( ) ;
rank: 142
score: 99.29469700863487
patch: synchronized ( res ) { res . entries = res . entries . iterator ( ) ; }
rank: 142
score: 99.28697916666667
patch: Iterator iter = res . remove ( 1 ) . iterator ( ) ;
rank: 142
score: 99.28290349786931
patch: Iterator < final Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 142
score: 99.28040568033855
patch: / * Iterator iter = res . iterator ( ) ;
rank: 143
score: 99.34664916992188
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries ( ) ;
rank: 143
score: 99.3207538311298
patch: Iterator iter = res . entries . iterator ( ) ; iterator
rank: 143
score: 99.29641723632812
patch: Iterator iter = res . format . entries ( ) . iterator ( ) ;
rank: 143
score: 99.29446750217014
patch: if ( res == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 143
score: 99.29371056189903
patch: Iterator iter = res . entries . iterator ( ) ; else
rank: 143
score: 99.28184750205592
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ( ) ) {
rank: 143
score: 99.28006784539474
patch: Iterator iter = res . iterator ( ) ; while . has CaMeL Next ( ) ; )
rank: 143
score: 99.26386369977679
patch: Iterator iter = res . entries . max . iterator ( ) ;
rank: 144
score: 99.32061408547794
patch: Iterator iter = res . get ( res . entries . size ( ) ) ;
rank: 144
score: 99.29354858398438
patch: Iterator iter = res . get CaMeL Classes ( ) . entries ( ) ;
rank: 144
score: 99.29343872070312
patch: if ( res . length == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 144
score: 99.27994577508224
patch: Iterator < double [ ] > iter = res . entries . entries . iterator ( ) ;
rank: 144
score: 99.27919921875
patch: Object res = res . entries ( ) . get ( 0 ) ;
rank: 144
score: 99.26376342773438
patch: Iterator iter = res . Iterator ( ) ;
rank: 145
score: 99.34445369944854
patch: Iterator iter = ! res . entries . entries ( ) . iterator ( ) ;
rank: 145
score: 99.32058919270834
patch: Iterator iter = res . get ( 0 ) . entries ( ) ;
rank: 145
score: 99.29251302083334
patch: this . res . entries . iterator ( ) . iterator ( ) ;
rank: 145
score: 99.28472028459821
patch: Iterator iter = res . parse ( ) . iterator ( ) ;
rank: 145
score: 99.2790283203125
patch: Iterator iter = res ) . entries ( ) . iterator ( ) ;
rank: 145
score: 99.27901882595486
patch: Iterator iter . has CaMeL Next ( ) ; ) ; iter . advance ( ) ;
rank: 146
score: 99.29218401227679
patch: for ( ) { Iterator iter = res . entries ( ) ;
rank: 146
score: 99.2919060202206
patch: Iterator iter = v ; while ( iter . has CaMeL Next ( ) ) {
rank: 146
score: 99.27847450657895
patch: if ( res != null ) res . res = res . entries . clone ( ) ;
rank: 146
score: 99.27749488467262
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > }
rank: 146
score: 99.2623291015625
patch: Iterator iter = res . read ( ) . entries ( ) ;
rank: 147
score: 99.3433837890625
patch: Iterator < Class > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 147
score: 99.29225158691406
patch: try { Iterator iter = res . entries . entries . iterator ( ) ;
rank: 147
score: 99.2918701171875
patch: Iterator iter = res . entries [ null ] . iterator ( ) ;
rank: 147
score: 99.28428649902344
patch: Iterator iter = res . get CaMeL Prefix ( ) . iterator ( ) ;
rank: 147
score: 99.2783562155331
patch: res . entries = new Iterator [ res . entries . size ( ) ] ;
rank: 147
score: 99.26231166294643
patch: Iterator iter = res . close ( ) . iterator ( ) ;
rank: 148
score: 99.34321424696181
patch: int entries = res . iterator ( ) . iterator ( ) . size ( ) ;
rank: 148
score: 99.31798638237848
patch: Iterator iter = res . entries . entries ( ) ; entries . iterator ( ) ;
rank: 148
score: 99.29178619384766
patch: Iterator iter = res . entries . next ( ) . size ( ) ;
rank: 148
score: 99.29169464111328
patch: Iterator iter = res . entries ( ) . value . iterator ( ) ;
rank: 148
score: 99.28996930803571
patch: Iterator iter = res . for . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 148
score: 99.28423309326172
patch: Iterator iter = v . size ( ) : res . iterator ( ) ;
rank: 148
score: 99.27325994318181
patch: Iterator iter < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 148
score: 99.25869516225961
patch: Iterator iter = res . entries . iterator ( 1 ) ;
rank: 149
score: 99.342626953125
patch: final Iterator iter = this . res . entries . iterator ( ) ;
rank: 149
score: 99.31707763671875
patch: Iterator < ) . Iterator iter = res . entries . iterator ( ) ;
rank: 149
score: 99.29140799386161
patch: Iterator iter = res . entries . to CaMeL Array ( ) ;
rank: 149
score: 99.2896728515625
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 149
score: 99.27773708767361
patch: if ( res != null ) res . Iterator iter = res . iterator ( ) ;
rank: 149
score: 99.2693103608631
patch: Enumeration < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( ) ;
rank: 149
score: 99.25867571149554
patch: Iterator iter = res . ebe CaMeL Divide . iterator ( ) ;
rank: 150
score: 99.34237467447916
patch: Iterator < String > iter = res . entries . size ( ) ;
rank: 150
score: 99.3166259765625
patch: Iterator iter = res . read ( res . iterator ( ) ) ;
rank: 150
score: 99.29084329044117
patch: Iterator iter = res . parse ( this ) . entries . iterator ( ) ;
rank: 150
score: 99.2831169577206
patch: Iterator iter = res . get CaMeL Entry ( $STRING$ ) . iterator ( ) ;
rank: 150
score: 99.27607945033482
patch: Iterator iterator = v . entries ( ) . iterator ( ) ;
rank: 150
score: 99.25851236979166
patch: Iterator iter = res . entries ( ) . iterator ( ) ; }
rank: 151
score: 99.34218236019737
patch: Iterator < Integer > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 151
score: 99.33949788411458
patch: Iterator iter = res . iterator ( ) ; for (
rank: 151
score: 99.31629180908203
patch: Iterator iterator = res . entries . entries ( ) . iterator ( ) ;
rank: 151
score: 99.29037655101104
patch: Iterator iter = res . add ( v ) . entries . iterator ( ) ;
rank: 151
score: 99.29022623697917
patch: Iterator iter = res . entries ( $NUMBER$ ) . next ( ) ;
rank: 151
score: 99.28798130580357
patch: iterator = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 151
score: 99.28305053710938
patch: Iterator iter = res . max . iterator ( ) ;
rank: 151
score: 99.25848388671875
patch: List iter = res . entries . entries . iterator ( ) ;
rank: 152
score: 99.34163172104779
patch: Iterator < Throwable > iter = res . entries ( ) . iterator ( ) ;
rank: 152
score: 99.33833530970982
patch: Iterator iter = res == null . entries . iterator ( ) ;
rank: 152
score: 99.28992462158203
patch: Iterator iter = entries . entries . entries . entries . iterator ( ) ;
rank: 152
score: 99.28895786830357
patch: Iterator iter = res . entries ( ) ; next ( ) ;
rank: 152
score: 99.28742327008929
patch: Iterator iter = Math . min ( res . entries , res . entries . size ( ) ) ;
rank: 152
score: 99.28281656901042
patch: Iterator iter = res . min . iterator ( ) ;
rank: 152
score: 99.27484537760417
patch: Iterator iter = v . entries ( res ) . iterator ( ) ;
rank: 152
score: 99.26833670479911
patch: Iterator iter > iter = res . entries . iterator ( ) ;
rank: 152
score: 99.25843302408855
patch: Iterator iter = res . res . size ( ) ;
rank: 153
score: 99.3373046875
patch: Iterator iter = res . entries [ 1 ] . iterator ( ) ;
rank: 153
score: 99.31552734375
patch: Iterator iter = Math . iterator ( res . iterator ( ) ) ;
rank: 153
score: 99.2896499633789
patch: Iterator iter = res . get CaMeL Value ( ) . entries ( ) ;
rank: 153
score: 99.28693181818181
patch: Iterator iter = v . iterator ( ) ; ;
rank: 153
score: 99.2743911743164
patch: / * Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 153
score: 99.26824188232422
patch: Iterator iter = res . entries : res . entries . iterator ( ) ;
rank: 154
score: 99.3403789813702
patch: Iterator iter = res . entries . iterator ( ) ) ;
rank: 154
score: 99.3349609375
patch: Iterator iter = res . entries ( ) . length . iterator ( ) ;
rank: 154
score: 99.3154067993164
patch: Iterator iter = res . entries . iter ( ) . iterator ( ) ;
rank: 154
score: 99.2886962890625
patch: Iterator iter = res . entries . iterator ( ) ; try {
rank: 154
score: 99.286376953125
patch: Iterator iter = map . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 154
score: 99.28136444091797
patch: Iterator iter = res . start . entries ( ) . iterator ( ) ;
rank: 154
score: 99.27406712582237
patch: if ( res != null ) return ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ;
rank: 154
score: 99.25762532552083
patch: Iterator < Float > iter = res . entries . iterator ( ) ;
rank: 155
score: 99.3398681640625
patch: Iterator < String > iter = res . entries . iter ( ) ;
rank: 155
score: 99.28926355698529
patch: Iterator iter = res . add ( this ) . entries . size ( ) ;
rank: 155
score: 99.28750610351562
patch: int iter = res . entries ( ) . length ;
rank: 155
score: 99.28635660807292
patch: Iterator iter = res . clone ( ) . entries ( ) . iterator ( ) ;
rank: 155
score: 99.27301703559027
patch: res . entries = res . entries ; Iterator iter = res . entries ( ) ;
rank: 155
score: 99.26787109375
patch: Iterator < String > entries = res . entries . iterator ( ) ;
rank: 155
score: 99.25753580729166
patch: Iterator < Object > iter = res . entries . size ( ) ;
rank: 156
score: 99.287060546875
patch: Iterator < String >> iter = res . entries . iterator ( ) ;
rank: 156
score: 99.28604125976562
patch: Iterator iter = res . list ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 156
score: 99.28029378255208
patch: Iterator iter = res . is CaMeL Empty ( ) ;
rank: 156
score: 99.27230031866776
patch: if ( res != null ) res . entries = res . entries . iterator ( ) ;
rank: 156
score: 99.26707821800595
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . iterator ( ) ) {
rank: 156
score: 99.25648716517857
patch: Iterator iter = res . put ( ) . iterator ( ) ;
rank: 157
score: 99.33852914663461
patch: Iterator < String > entries = res . entries ( ) ;
rank: 157
score: 99.3323974609375
patch: Real CaMeL Vector res = new Real CaMeL Vector ( v . length ) ;
rank: 157
score: 99.31296793619792
patch: Iterator iter = res . entries . iterator ( ) ; entries . size ( ) ;
rank: 157
score: 99.28572944972827
patch: Iterator iter = res . map . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 157
score: 99.26933737362133
patch: Iterator < E > iter = res . entries ( ) . iterator ( ) ;
rank: 157
score: 99.26613071986607
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res )
rank: 158
score: 99.33216145833333
patch: Iterator iter = res [ $NUMBER$ ] . entries . iterator ( ) ;
rank: 158
score: 99.31276448567708
patch: Iterator iter = res . entries . iterator ( ) ; res . iterator = null ;
rank: 158
score: 99.28548177083333
patch: Iterator iter = res . copy ( ) . entries ( ) . iterator ( ) ;
rank: 158
score: 99.26596069335938
patch: Iterator iter = list . entries . iterator ( ) ;
rank: 159
score: 99.33149065290179
patch: Iterator iter = res . entries . entries ( ) . length ;
rank: 159
score: 99.28546142578125
patch: Iterator iter = res . entries ( ) . start . iterator ( ) ;
rank: 159
score: 99.27925618489583
patch: Iterator iter = res . remove ( 0 ) . iterator ( ) ;
rank: 159
score: 99.25635782877605
patch: List res = res . entries . iterator ( ) ;
rank: 160
score: 99.3376529091283
patch: Iterator < Iterator > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 160
score: 99.31186252170139
patch: Iterator iter = res . entries . entries ( ) ; res . iterator ( ) ;
rank: 160
score: 99.28577473958333
patch: Iterator iter = res . entries . index CaMeL Of ( true ) ;
rank: 160
score: 99.28428583559783
patch: Iterator iter = res . iterator ( ) ; while ( iter . ; iter . has CaMeL Next ( ) )
rank: 160
score: 99.28421630859376
patch: Vector iter = res . entries ( ) ;
rank: 160
score: 99.2792217548077
patch: Iterator iter = res . index CaMeL Of ( $STRING$ ) ;
rank: 160
score: 99.26549421037946
patch: Enumeration iter = res . entries . entries . iterator ( ) ;
rank: 161
score: 99.31185913085938
patch: Iterator iter = res . get = res . entries . iterator ( ) ;
rank: 161
score: 99.28496237362133
patch: Iterator iter = res . entries . entries . ( ) . entries ( ) ;
rank: 161
score: 99.28401322798295
patch: List iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 161
score: 99.28382219587054
patch: synchronized ( res ) { iter = res . entries ( ) ;
rank: 161
score: 99.2786114032452
patch: Iterator iter = res . index CaMeL Of ( true ) ;
rank: 161
score: 99.25569661458333
patch: Iterator iter = ebe CaMeL Divide . iterator ( ) ;
rank: 162
score: 99.33750697544643
patch: final Iterator < ? > iter = res . iterator ( ) ;
rank: 162
score: 99.32979038783482
patch: Iterator iter = res != null : res . iterator ( ) ;
rank: 162
score: 99.3109375
patch: Iterator iter ; Iterator iter = res . entries . iterator ( ) ;
rank: 162
score: 99.28488338694854
patch: Iterator iter = res . index CaMeL Of ( 0 ) . iterator ( ) ;
rank: 162
score: 99.28376770019531
patch: Iterator iter = res . list . iterator ( ) . iterator ( ) ;
rank: 162
score: 99.28366088867188
patch: int entries = res . entries . iterator ( ) ;
rank: 162
score: 99.27852689302884
patch: Iterator iter = res . entries . iterator ( ) 1 ;
rank: 162
score: 99.26692922491776
patch: if ( res != null ) res . res = res . get CaMeL Value ( ) ;
rank: 163
score: 99.28374481201172
patch: Iterator iter = res . get CaMeL Resources ( ) . iterator ( ) ;
rank: 163
score: 99.28317057291666
patch: this . res . entries = res . entries . iterator ( ) ;
rank: 163
score: 99.2822265625
patch: Iterator iter = res . entries . iterator ( ) ( ) ;
rank: 163
score: 99.2782974243164
patch: Iterator iter = res . size ( ) : entries . iterator ( ) ;
rank: 163
score: 99.26658121744792
patch: Iterator iter = res . iterator ( ) ; while . has CaMeL Next ( ) )
rank: 163
score: 99.26278525904605
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . iterator ( ) ) {
rank: 164
score: 99.33595186121323
patch: Iterator < ) > iter = res . entries ( ) . iterator ( ) ;
rank: 164
score: 99.28363715277777
patch: Iterator iter = v . entries ; while ( iter . has CaMeL Next ( ) )
rank: 164
score: 99.28310977711396
patch: this . res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 164
score: 99.26654459635417
patch: if ( res != null ) res . res = res . entries ;
rank: 164
score: 99.26265258789063
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 165
score: 99.335498046875
patch: res . iterator ( ) . iterator ( ) . iterator ( ) . add ( res ) ;
rank: 165
score: 99.32911592371323
patch: try { iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 165
score: 99.30973597935268
patch: Iterator iter = res . entries . start . iterator ( ) ;
rank: 165
score: 99.2836026278409
patch: List list = res . entries . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 165
score: 99.26647135416667
patch: Iterator iter = res . entries ( ) . iterator ( res ) ;
rank: 165
score: 99.26237657335069
patch: Iterator iter = this . Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( ) ;
rank: 165
score: 99.25225830078125
patch: Iterator iter = res . in . entries . iterator ( ) ;
rank: 166
score: 99.33523123604911
patch: Iterator res = res . entries ( ) . iterator ( ) ;
rank: 166
score: 99.32904459635417
patch: Iterator iter = res [ iter . entries . iterator ( ) ] ;
rank: 166
score: 99.30962371826172
patch: Iterator iter = res . iterator ( ) ; entries . iterator ( ) ;
rank: 166
score: 99.28358043323864
patch: Iterator iter = res . get CaMeL Entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 166
score: 99.28281537224265
patch: Iterator < ] > iter = res . entries . entries . iterator ( ) ;
rank: 166
score: 99.28126525878906
patch: Iterator iter = res . length . entries . entries . iterator ( ) ;
rank: 166
score: 99.27717590332031
patch: Iterator iter = v . size ( ) : res . size ( ) ;
rank: 166
score: 99.26600477430556
patch: Iterator iter ; while ( iter . has CaMeL Next ( ) ) { res . )
rank: 166
score: 99.25132533482143
patch: Iterator [ ] res = res . entries . iterator ( ) ;
rank: 167
score: 99.32891486672794
patch: Iterator iter = res . entries . entries ( ) . . iterator ( ) ;
rank: 167
score: 99.309619140625
patch: Iterator iter = res . = res . entries . iterator ( ) ;
rank: 167
score: 99.2825066061581
patch: final int iter . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 167
score: 99.28174889605978
patch: for ( Iterator iter = res . list . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 167
score: 99.28031652113971
patch: Iterator iter = res . index CaMeL Of ( null ) . iterator ( ) ;
rank: 167
score: 99.26213243272569
patch: Iterator iter . advance ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 168
score: 99.32823944091797
patch: Iterator iter = res . entries ( ) . entries . size ( ) ;
rank: 168
score: 99.30898150275735
patch: Iterator iter . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 168
score: 99.27984212239583
patch: Iterator iter = res . entries ) . entries . iterator ( ) ;
rank: 168
score: 99.26536560058594
patch: Iterator iter = res . iterator . iterator ( ) . iterator ( ) ;
rank: 168
score: 99.2618408203125
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . size ( ) ;
rank: 168
score: 99.250244140625
patch: Iterator iter = res . remove ( ) . size ( ) ;
rank: 169
score: 99.32633150540866
patch: Iterator iter = res [ 1 ] . iterator ( ) ;
rank: 169
score: 99.28199259440105
patch: int iterator = res . entries . iterator ( ) ;
rank: 169
score: 99.277587890625
patch: Iterator entries = res . entries . entries . iterator ( ) ;
rank: 169
score: 99.26518169202302
patch: Iterator iter = v [ res . length - 1 ] . entries . iterator ( ) ;
rank: 169
score: 99.26140485491071
patch: Iterator iter = res . key . entries . iterator ( ) ;
rank: 169
score: 99.24974772135417
patch: Iterator < Real CaMeL Vector > iter = entries . iterator ( ) ;
rank: 170
score: 99.33065795898438
patch: final Iterator < ) > iter = res . entries . iterator ( ) ;
rank: 170
score: 99.2651726217831
patch: if ( v != null ) res . entries = res . entries . entries ;
rank: 170
score: 99.26082938058036
patch: Iterator iter = res . list . entries . iterator ( ) ;
rank: 171
score: 99.32568359375
patch: Iterator iter = res . entries . entries . iterator ( ) ; for (
rank: 171
score: 99.30743815104167
patch: Iterator iter = res . entries . iterator ( ) ; iterator -- ;
rank: 171
score: 99.28141021728516
patch: Iterator iter = res . entries ( ) . iterator ( ) ; try {
rank: 171
score: 99.27849014945652
patch: Iterator iter = res . iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 171
score: 99.2738037109375
patch: Iterator iter = res . get CaMeL Data ( ) . size ( ) ;
rank: 171
score: 99.26509363511029
patch: / * * Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 171
score: 99.26051025390625
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; ) ;
rank: 171
score: 99.24874877929688
patch: Iterator iter = res . true . iterator ( ) ;
rank: 172
score: 99.33026123046875
patch: final Iterator < Iterator > iter = res . iterator ( ) ;
rank: 172
score: 99.30729406020221
patch: res . add ( res ) ; Iterator iter = res . iterator ( ) ;
rank: 172
score: 99.27374737079327
patch: Iterator iter = res . index CaMeL Of ( 0 ) ;
rank: 172
score: 99.2648696899414
patch: if ( res . entries . size ( ) > 0 ) return res ;
rank: 172
score: 99.26046316964286
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = this . entries . iterator ( ) ;
rank: 172
score: 99.24822591145833
patch: Iterator < Character > iter = res . entries . iterator ( ) ;
rank: 173
score: 99.32986111111111
patch: final Iterator < ? > iter = res . entries ( ) . iterator ( ) ;
rank: 173
score: 99.30714518229166
patch: Iterator < void > iter = res . entries . iterator ( ) ;
rank: 173
score: 99.2801513671875
patch: Iterator iter = res . entries iterator ( ) ;
rank: 173
score: 99.27643229166667
patch: res . entries = res . entries . entries . iterator ( ) ;
rank: 173
score: 99.27340698242188
patch: Iterator iter = res . entries . iterator ( ) : res . length ;
rank: 173
score: 99.26468658447266
patch: Iterator iter ; res . entries = res . entries . iterator ( ) ;
rank: 173
score: 99.24752371651786
patch: Vector iter = res . entries . entries . iterator ( ) ;
rank: 174
score: 99.32982680376838
patch: Iterator < Iterator < String > iter = res . entries . iterator ( ) ;
rank: 174
score: 99.30678013392857
patch: Iterator iter = $STRING$ . entries ( ) . iterator ( ) ;
rank: 174
score: 99.27586454503677
patch: Iterator iter = ( int [ ] ) res . entries . iterator ( ) ;
rank: 174
score: 99.26398026315789
patch: Iterator iter = v [ res . entries . size ( ) ] . iterator ( ) ;
rank: 174
score: 99.25890350341797
patch: Iterator iter || res . iterator ( ) . has CaMeL Next ( ) ;
rank: 174
score: 99.24741908482143
patch: Iterator iter = res . entries . res . iterator ( ) ;
rank: 175
score: 99.32228088378906
patch: Iterator iter = res . entries . entries = res . iterator ( ) ;
rank: 175
score: 99.30638212316177
patch: Iterator iter = 0 ; Iterator iter = res . entries . iterator ( ) ;
rank: 175
score: 99.27978515625
patch: Iterator iter = res . entries . iterator ( ) ; next ( ) ;
rank: 175
score: 99.27506510416667
patch: Iterator iter = res . list ; while ( iter . has CaMeL Next ( ) )
rank: 175
score: 99.25801849365234
patch: Iterator iter += res . entries . iterator ( ) . iterator ( ) ;
rank: 175
score: 99.24690077039931
patch: iter . has CaMeL Next ( ) ;
rank: 176
score: 99.329150390625
patch: List res . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 176
score: 99.2797492532169
patch: Iterator iter = res . entries ( null , null ) . iterator ( ) ;
rank: 176
score: 99.27501220703125
patch: Iterator iter = v . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 176
score: 99.27196502685547
patch: Iterator iter = res . clone ( ) : res . iterator ( ) ;
rank: 176
score: 99.26235961914062
patch: Object [ ] res = res . entries . to CaMeL Array ( ) ;
rank: 176
score: 99.24491373697917
patch: Iterator < Real CaMeL Vector > iter = res . size ( ) ;
rank: 177
score: 99.328857421875
patch: final Iterator < int > iter = res . entries . iterator ( ) ;
rank: 177
score: 99.32143985523896
patch: Iterator iter = res [ iter . entries ( ) ] . iterator ( ) ;
rank: 177
score: 99.27454144021739
patch: Iterator iter = res . entries . iterator ( ) ; while ( ; iter . has CaMeL Next ( ) )
rank: 177
score: 99.2743278952206
patch: Iterator iter = res . index CaMeL Of ( this ) . size ( ) ;
rank: 177
score: 99.2716796875
patch: Iterator iter = res . split ( $STRING$ ) . iterator ( ) ;
rank: 177
score: 99.26093292236328
patch: if ( res != null ) res . ) res . res = res ;
rank: 178
score: 99.328369140625
patch: Iterator < String > iter = res . entries ( ) . iter ( ) ;
rank: 178
score: 99.30427551269531
patch: Iterator iter = res . key . entries ( ) . iterator ( ) ;
rank: 178
score: 99.27430826822916
patch: Iterator iter = ( int ) res . entries . iterator ( ) ;
rank: 178
score: 99.2713982077206
patch: Iterator iter = res . index CaMeL Of ( 0 , v . length ) ;
rank: 178
score: 99.25965711805556
patch: Iterator iter ; try { iter = res . entries ( ) . iterator ( ) ;
rank: 178
score: 99.24338942307692
patch: ; Iterator iter = res . entries . iterator ( ) ;
rank: 179
score: 99.30390082465277
patch: Iterator iter = this . res . iterator ( ) ; res . iterator ( ) ;
rank: 179
score: 99.27921840122768
patch: Iterator [ ] res . entries = res . entries ( ) ;
rank: 179
score: 99.27410333806819
patch: Iterator iter = res . set . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 179
score: 99.25880191200658
patch: if ( res . entries != null ) res . entries = res . res . entries ;
rank: 179
score: 99.24246419270834
patch: iter . has CaMeL Next ( ) ; res . advance ( ) ;
rank: 180
score: 99.32016170726104
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( res ) ;
rank: 180
score: 99.30389404296875
patch: Iterator iter = res . get ( ) . entries ( ) ;
rank: 180
score: 99.2787109375
patch: Iterator iter = res [ null ] . entries . iterator ( ) ;
rank: 180
score: 99.27308565027573
patch: synchronized ( this ) { iter = res . entries . iterator ( ) ; }
rank: 180
score: 99.25823567708333
patch: Iterator iter = res . iterator . iterator ( ) ; while ( )
rank: 180
score: 99.24214680989583
patch: Iterator iter . has CaMeL Next ( ) ; ) {
rank: 181
score: 99.32685546875
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) . size ( ) ;
rank: 181
score: 99.32006072998047
patch: Iterator iter = data . entries . entries ( ) . iterator ( ) ;
rank: 181
score: 99.27290675951087
patch: Iterator iter = this . res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 181
score: 99.27238464355469
patch: Iterator iter = res . entries . entries . has CaMeL Next ( ) ;
rank: 181
score: 99.27068219866071
patch: Iterator iter = res : res . entries . iterator ( ) ;
rank: 181
score: 99.24200032552083
patch: Iterator < Thread > iter = res . entries . iterator ( ) ;
rank: 182
score: 99.32678985595703
patch: final Iterator < E > iter = res . entries . iterator ( ) ;
rank: 182
score: 99.31771087646484
patch: Iterator iter = res . iterator ( ) * v . iterator ( ) ;
rank: 182
score: 99.27815464564732
patch: Iterator iter = res . entries ( ) . max ( ) ;
rank: 182
score: 99.27269446331522
patch: Iterator iter = res . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 182
score: 99.27234758649554
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . advance ( ) ;
rank: 182
score: 99.25732421875
patch: if ( res . entries != null ) res . res . entries = res . entries ;
rank: 183
score: 99.32665337456598
patch: Iterator iterator = res . entries ( ) . entries ( ) . iterator ( ) ;
rank: 183
score: 99.31655704273896
patch: Iterator iter = res . entries [ $NUMBER$ ] . entries . iterator ( ) ;
rank: 183
score: 99.2724609375
patch: Iterator iter = v . length ; while ( iter . has CaMeL Next ( ) ) {
rank: 183
score: 99.27228546142578
patch: Iterator iter = res . entries . get ( ) . iterator ( ) ;
rank: 183
score: 99.25730985753677
patch: if ( res . res != null ) res . res = res . res ;
rank: 183
score: 99.2557373046875
patch: Iterator iter = res . entries . list . iterator ( ) ;
rank: 183
score: 99.24097551618304
patch: Iterator iter = res . round . entries . iterator ( ) ;
rank: 184
score: 99.32633209228516
patch: Iterator iter = ( res . entries ( ) . iterator ( ) ) ;
rank: 184
score: 99.30309340533088
patch: Iterator iter = res . entries . split ( res . iterator ( ) ) ;
rank: 184
score: 99.27167107077206
patch: Iterator iter = res . read ( this ) . entries . iterator ( ) ;
rank: 184
score: 99.27161225818452
patch: synchronized ( res ) { res . entries = res . entries . entries . iterator ( ) ; }
rank: 184
score: 99.26881626674107
patch: Iterator iter = res . length : res . size ( ) ;
rank: 184
score: 99.25712505139802
patch: Iterator iter = v [ res . length ] . entries ( ) . iterator ( ) ;
rank: 184
score: 99.25545501708984
patch: Iterator iter = this . entries . entries ( ) . iterator ( ) ;
rank: 185
score: 99.32596842447917
patch: Iterator < res > iter = res . entries . iterator ( ) ;
rank: 185
score: 99.30269129136029
patch: Iterator iter = Math . list ( res . entries . iterator ( ) ) ;
rank: 185
score: 99.27141571044922
patch: Iterator iter = entries . entries . entries ( ) . iterator ( ) ;
rank: 185
score: 99.27025257457386
patch: Iterator iter = super . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 185
score: 99.25482536764706
patch: Iterator < boolean > iter = res . entries . entries . iterator ( ) ;
rank: 185
score: 99.24086350661058
patch: Iterator iter = res . entries . iterator ( this ) ;
rank: 186
score: 99.32504069010416
patch: final Iterator iter = res . entries ( ) . entries ( ) ;
rank: 186
score: 99.31501116071429
patch: Iterator iter = ebe CaMeL Divide . entries . iterator ( ) ;
rank: 186
score: 99.302490234375
patch: Iterator iter = res . entries . iterator ( ) ; iter ++ ;
rank: 186
score: 99.24078924005681
patch: final Iterator iter = res . size ( ) ;
rank: 187
score: 99.30214556525735
patch: Iterator iter = res . entries . = res . entries . iter ( ) ;
rank: 187
score: 99.27582256610577
patch: Iterator < Integer > iter = res . entries ( ) ;
rank: 187
score: 99.27111098345588
patch: Iterator iter = res . append ( this ) . entries . iterator ( ) ;
rank: 187
score: 99.26707240513393
patch: Iterator iter = res . name . entries . iterator ( ) ;
rank: 187
score: 99.25529928768383
patch: if ( res != null && res . entries . size ( ) > 0 )
rank: 187
score: 99.25257065716912
patch: Iterator < float [ ] > iter = res . entries . iterator ( ) ;
rank: 188
score: 99.31480305989584
patch: Iterator iter = res . entries ( ) . . iterator ( ) ;
rank: 188
score: 99.29872041590073
patch: Iterator iter = res . entries . split ( $STRING$ ) . iterator ( ) ;
rank: 188
score: 99.26945356889205
patch: Iterator iter = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 188
score: 99.26888275146484
patch: Iterator iter = res . set ( ) . entries . iterator ( ) ;
rank: 188
score: 99.25252956814236
patch: Iterator iter = res . entries . iterator ( ) ; iterator . advance ( ) ;
rank: 188
score: 99.24026925223214
patch: Iterator iter = res . entries . v . iterator ( ) ;
rank: 189
score: 99.32478841145833
patch: Iterator < Object > iterator = res . entries . iterator ( ) ;
rank: 189
score: 99.26926879882812
patch: System . arraycopy ( res , 0 , res . entries , 0 , res . length ) ;
rank: 189
score: 99.25457763671875
patch: if ( res != null ) res . ) res . entries = res . entries . entries ;
rank: 189
score: 99.25163438585069
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . iterator ( ) )
rank: 189
score: 99.24009195963542
patch: Iterator iter = v . has CaMeL Next ( ) ;
rank: 190
score: 99.3134994506836
patch: Real CaMeL Vector res = new Real CaMeL Vector ( res . length ) ;
rank: 190
score: 99.29825032552084
patch: Iterator iter = res . add ( res . iterator ( ) ) ;
rank: 190
score: 99.27523600260416
patch: Iterator iter = res . entries ( res . iterator ( ) ) ;
rank: 190
score: 99.26904907226563
patch: Iterator iter = res . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 190
score: 99.26813821231617
patch: Iterator iter = res . entries . entries . index CaMeL Of ( this ) ;
rank: 190
score: 99.26612091064453
patch: Iterator iter = res . get CaMeL Index ( ) . iterator ( ) ;
rank: 190
score: 99.25159912109375
patch: Iterator iter ? res . entries ( ) . iterator ( ) . has CaMeL Next ( ) ;
rank: 190
score: 99.239697265625
patch: Iterator < double >= iter = res . entries . iterator ( ) ;
rank: 191
score: 99.31304059709821
patch: Iterator iter = v . entries ( ) . entries ( ) ;
rank: 191
score: 99.26862444196429
patch: Iterator iter = res . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 191
score: 99.26811218261719
patch: Iterator iter = res . substring ( ) . entries . iterator ( ) ;
rank: 191
score: 99.26595633370536
patch: Iterator iter = res . add ( v [ 0 ] ) ;
rank: 191
score: 99.25408466045673
patch: if ( res != null && res . entries != null )
rank: 191
score: 99.2513363486842
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . iterator ( ) ;
rank: 191
score: 99.23929537259616
patch: Iterator iter = entries . ( ) . iterator ( ) ;
rank: 192
score: 99.3236328125
patch: Iterator < Object > iter = res . entries . entries ( ) ;
rank: 192
score: 99.31262969970703
patch: Iterator iter = res [ iter . length 1 ] . iterator ( ) ;
rank: 192
score: 99.29729865579044
patch: Iterator iter = res . entries [ null ] . entries . iterator ( ) ;
rank: 192
score: 99.27491760253906
patch: int iter = res . entries != null ? res . iterator ( ) ;
rank: 192
score: 99.26823156020221
patch: Iterator iter = Math . iterator ( res . entries . size ( ) ) ;
rank: 192
score: 99.253857421875
patch: Iterator < String > iter = res . iterator . iterator ( ) ;
rank: 192
score: 99.25086030505952
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iter . iterator ( ) ;
rank: 193
score: 99.31191119025735
patch: Iterator iter = res . entries . . entries ( ) . iterator ( ) ;
rank: 193
score: 99.26796025815217
patch: for ( Iterator iterator = res . entries . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 193
score: 99.26703287760417
patch: Iterator Iterator iter = res . entries . entries . iterator ( ) ;
rank: 193
score: 99.26509094238281
patch: Iterator iter = res . has CaMeL Next ( ) : res . length ;
rank: 193
score: 99.25322265625
patch: for ( res . entries . iterator ( ) ; res . has CaMeL Next ( ) ; )
rank: 194
score: 99.32238159179687
patch: Iterator iter = res . entries != null ? res . entries . iterator ( ) : null ;
rank: 194
score: 99.29720052083333
patch: Iterator iter = res . iterator . iter ( ) ;
rank: 194
score: 99.27446432674633
patch: Iterator < ] > iter = this . res . entries . iterator ( ) ;
rank: 194
score: 99.26779014185855
patch: Iterator iter = res . iterator ( ) ; ++ iter . has CaMeL Next ( ) ;
rank: 194
score: 99.2650146484375
patch: Iterator iter = res . index CaMeL Of ( v [ 0 ] ) ;
rank: 194
score: 99.25296181126645
patch: if ( res . res != null ) res . res . res = res . res ;
rank: 194
score: 99.25031072443181
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = ! res . entries . iterator ( ) ;
rank: 194
score: 99.23857770647321
patch: Iterator res = res . entries . entries . iterator ( ) ;
rank: 195
score: 99.29665798611111
patch: Iterator iter = res . iterator ( ) ; iterator = res . entries ( ) ;
rank: 195
score: 99.26752030222039
patch: Iterator iter = res . get ( 0 ) . entries ( ) . iterator ( ) ;
rank: 195
score: 99.2663933249081
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( this ) ;
rank: 195
score: 99.25283203125
patch: if ( res != null ) res . Iterator iter = res . entries . iterator ( ) ;
rank: 195
score: 99.23851667131696
patch: Object [ ] v = res . entries . iterator ( ) ;
rank: 196
score: 99.31016630284927
patch: synchronized ( v ) { Iterator iter = res . entries . iterator ( ) ;
rank: 196
score: 99.29660034179688
patch: for ( Iterator iter = res . iterator ( ) ;
rank: 196
score: 99.2733154296875
patch: Iterator iter = res . entries ( $NUMBER$ ) . entries ( ) ;
rank: 196
score: 99.26612437855114
patch: Iterator iter = res . entries . iterator ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 196
score: 99.25271426930146
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) )
rank: 196
score: 99.23851429332386
patch: Iterator iter = entries . iterator ( ) ; ;
rank: 197
score: 99.3197883157169
patch: Iterator < int > iter = res . entries . entries . iterator ( ) ;
rank: 197
score: 99.29538861443015
patch: Iterator iter = res . entries . get ( 0 ) . iterator ( ) ;
rank: 197
score: 99.27317810058594
patch: res . entries . Iterator iter = res . entries . iterator ( ) ;
rank: 197
score: 99.26599651834239
patch: Iterator iter = res . get . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 197
score: 99.24834333147321
patch: Iterator iter : res . entries . entries . iterator ( ) ;
rank: 197
score: 99.23849051339286
patch: Iterator iter = res . [ ) . size ( ) ] ;
rank: 198
score: 99.31974523207721
patch: Iterator < String > iterator = res . entries ( ) . iterator ( ) ;
rank: 198
score: 99.30805206298828
patch: Iterator iter = res == null . entries . entries . iterator ( ) ;
rank: 198
score: 99.25060272216797
patch: res . set CaMeL Value ( res . get CaMeL Value ( ) ) ;
rank: 199
score: 99.31961862664474
patch: Iterator < String > iter = res . to CaMeL Array ( ) . iterator ( ) ;
rank: 199
score: 99.27229309082031
patch: Iterator iter = res . entries . map ( ) . iterator ( ) ;
rank: 199
score: 99.26553548177084
patch: Iterator iter = res . entries . entries ) . iterator ( ) ;
rank: 199
score: 99.26526750837054
patch: Iterator iter = this . res . list . iterator ( ) ;
rank: 199
score: 99.26403090533088
patch: Iterator < int [ ] > iter = res . entries . iterator ( ) ;
rank: 199
score: 99.24985223067434
patch: if ( res . res != null && res . res . res . res != null )
rank: 199
score: 99.24738512541118
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . iterator ( ) ;
rank: 199
score: 99.237060546875
patch: Iterator iter = res . end . iterator ( ) ;
rank: 200
score: 99.27131204044117
patch: synchronized ( res ) { Iterator iter = res . value . iterator ( ) ;
rank: 200
score: 99.2644775390625
patch: Iterator iter = res . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 200
score: 99.249267578125
patch: Iterator < T > iter = res . iterator . iterator ( ) ;
rank: 200
score: 99.24638061523437
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . iterator ( ) )
rank: 201
score: 99.31760817307692
patch: Iterator < Class > iter = res . iterator ( ) ;
rank: 201
score: 99.30761000689338
patch: Iterator iter = res . ebe CaMeL Divide ( this ) . iterator ( ) ;
rank: 201
score: 99.29441731770834
patch: Iterator iter = res . split ( res . iterator ( ) ) ;
rank: 201
score: 99.26519775390625
patch: Iterator iter = res . map . entries . iterator ( ) ;
rank: 201
score: 99.26423783735795
patch: Iterator iter = data . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 201
score: 99.24849853515624
patch: res . res = res ; Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 201
score: 99.24606805098684
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = entries . iterator ( ) ;
rank: 201
score: 99.23530796595982
patch: int iter = res . entries . entries . iterator ( ) ;
rank: 202
score: 99.31712646484375
patch: if ( res != null ) return res ;
rank: 202
score: 99.30753580729167
patch: Iterator iter = res . size . iterator ( ) ;
rank: 202
score: 99.29439544677734
patch: Iterator iter = res . entries . iterator ( ) ; iterator return res ;
rank: 202
score: 99.26982116699219
patch: Iterator iter = res . entries ( ) . map . iterator ( ) ;
rank: 202
score: 99.26512235753677
patch: Iterator iter = v . ( ) . entries ( ) . iterator ( ) ;
rank: 202
score: 99.263916015625
patch: Iterator iter = res . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 202
score: 99.2612075805664
patch: Iterator iter = res == null ? null : res . size ( ) ;
rank: 202
score: 99.2449951171875
patch: this . res . set CaMeL Entry ( iter . key ( ) , iter . value ( ) ) ;
rank: 203
score: 99.31712510850694
patch: int entries = res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 203
score: 99.3064716045673
patch: Iterator iter = res . entries . iterator ( ) ; *
rank: 203
score: 99.29436896829044
patch: Iterator iter = res . entries . remove ( res . iterator ( ) ) ;
rank: 203
score: 99.2634636374081
patch: Iterator iter = 0 ; while ( iter . has CaMeL Next ( ) ) {
rank: 203
score: 99.26043701171875
patch: Iterator iter = res . out . entries ( ) . iterator ( ) ;
rank: 203
score: 99.24769810267857
patch: Iterator iter = res . iterator ( . size ( ) ) ;
rank: 203
score: 99.23428548177084
patch: Iterator iter = res . add ( v ) . size ( ) ;
rank: 204
score: 99.31664276123047
patch: Iterator iter = res . entries . iterator ( ) ; for ( ) {
rank: 204
score: 99.26963588169643
patch: Iterator iter = res . entries ( ) . delete ( ) ;
rank: 204
score: 99.26416778564453
patch: Vector iter = res . entries . entries . entries . iterator ( ) ;
rank: 204
score: 99.26319469105114
patch: Iterator iter = v . iterator . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 204
score: 99.26038360595703
patch: Iterator iter = res . this ( ) . entries . iterator ( ) ;
rank: 204
score: 99.2471454326923
patch: res . res = res . entries . size ( ) ;
rank: 204
score: 99.23426402698864
patch: Iterator iter = res . size ( ) ; ;
rank: 205
score: 99.30468031939338
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( iter ) ;
rank: 205
score: 99.26908874511719
patch: Iterator iter = res . entries . iterator = res . iterator ( ) ;
rank: 205
score: 99.26403045654297
patch: Iterator iter = res . data . entries ( ) . iterator ( ) ;
rank: 205
score: 99.2629061612216
patch: iter = res . entries . size ( ) ;
rank: 205
score: 99.26016671316964
patch: Iterator iter = res . size ( ) . entries ( ) ;
rank: 205
score: 99.24287923177083
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v ) {
rank: 205
score: 99.23399251302084
patch: Iterator iter = res . entries ( this ) . iterator ( ) ;
rank: 206
score: 99.30467987060547
patch: Iterator iter = ebe CaMeL Divide . entries ( ) . iterator ( ) ;
rank: 206
score: 99.29357096354167
patch: Iterator iter = res . entries . iterator ( ) ; return res ;
rank: 206
score: 99.26905168805804
patch: Iterator [ ] iter = res . entries . iterator ( ) ;
rank: 206
score: 99.26394473805146
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 206
score: 99.2622601052989
patch: Iterator iter = v . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 206
score: 99.25960867745536
patch: Iterator iter = res == null ? null : res . length ;
rank: 206
score: 99.24661254882812
patch: this . res = res ; Iterator iter = res . iterator ( ) ;
rank: 206
score: 99.2331073467548
patch: Iterator iter ++ = res . entries . iterator ( ) ;
rank: 207
score: 99.31401231553819
patch: final Iterator < Iterator > iter = res . entries ( ) . iterator ( ) ;
rank: 207
score: 99.29250863882211
patch: Iterator iter = res . get ( res . length ) ;
rank: 207
score: 99.26337747012867
patch: Iterator iter = res . format ( this ) . entries . iterator ( ) ;
rank: 207
score: 99.26176525297619
patch: res . set CaMeL Length ( res . length ) ; Iterator iter = res . iterator ( ) ;
rank: 207
score: 99.232666015625
patch: Iterator iter = res . add ( ) . iterator ( ) ;
rank: 208
score: 99.30278778076172
patch: Iterator iter = res . ebe CaMeL Divide ( ) . iterator ( ) ;
rank: 208
score: 99.26878255208334
patch: Iterator iter = res . entries . to CaMeL Array ( res ) ;
rank: 208
score: 99.2630256204044
patch: Iterator iter = res . add ( res ) . entries . iterator ( ) ;
rank: 208
score: 99.23082386363636
patch: Iterator iter = res . . iterator ( ) ;
rank: 209
score: 99.30264282226562
patch: if ( iter . has CaMeL Next ( ) ) { return res ; }
rank: 209
score: 99.2686408547794
patch: res . value = res . entries . iterator ( ) . next ( ) ;
rank: 209
score: 99.26093982514881
patch: Iterator iter = Math . abs ( res . entries . size ( ) ) . iterator ( ) ;
rank: 209
score: 99.25814819335938
patch: Iterator iter = res . max . entries ( ) . iterator ( ) ;
rank: 209
score: 99.24502563476562
patch: if ( res != null ) Iterator iter = res . iterator ( ) ;
rank: 209
score: 99.24159458705357
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = entries . entries . iterator ( ) ;
rank: 209
score: 99.22994791666666
patch: Iterator iter = res . add ( v . size ( ) ) ;
rank: 210
score: 99.31205669202302
patch: if ( res != null ) iter = res . entries . entries . iterator ( ) ;
rank: 210
score: 99.30258178710938
patch: Iterator iter = res . length . entries ( ) ;
rank: 210
score: 99.26859828404018
patch: Iterator * ] res = res . entries . iterator ( ) ;
rank: 210
score: 99.25982111150569
patch: Iterator iter = in . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 210
score: 99.25729370117188
patch: Iterator iter < Integer > iter = res . entries . iterator ( ) ;
rank: 210
score: 99.24493815104167
patch: / * * Iterator iter = res . entries . iterator ( ) ;
rank: 210
score: 99.24093967013889
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) {
rank: 210
score: 99.22920735677083
patch: Set iter = res . entries . iterator ( ) ;
rank: 211
score: 99.31205531529018
patch: Iterator iter = map . entries ( ) . iterator ( ) ;
rank: 211
score: 99.2909686748798
patch: Iterator iter = res . entries . add ( res ) ;
rank: 211
score: 99.26039341517857
patch: Iterator iter = res . add . entries . iterator ( ) ;
rank: 211
score: 99.25957288240132
patch: if ( res . length == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 211
score: 99.2445297241211
patch: Iterator iter = res . entries ( ) . iterator ( ) + 1 ;
rank: 211
score: 99.24057345920139
patch: Iterator iter = res . entries . to CaMeL Array ( ) . entries ( ) ;
rank: 211
score: 99.22869873046875
patch: Iterator iter = res . iterator . has CaMeL Next ( ) ;
rank: 212
score: 99.3119873046875
patch: final Iterator iter = res . entries = res . iterator ( ) ;
rank: 212
score: 99.29072122012867
patch: Iterator iter = res . entries . add ( res . entries ( ) ) ;
rank: 212
score: 99.26609802246094
patch: Iterator iter = res . get CaMeL Parent ( ) . entries ( ) ;
rank: 212
score: 99.25699615478516
patch: Iterator iter = res . max . entries . entries . iterator ( ) ;
rank: 212
score: 99.24415347450658
patch: if ( v != null ) res . res = res . entries . size ( ) ;
rank: 212
score: 99.24041426809211
patch: Iterator < Object > iter = res . entries . entries . entries . iterator ( ) ;
rank: 212
score: 99.2276611328125
patch: Iterator iter = this . res . entries . size ( ) ;
rank: 213
score: 99.30183679917279
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = ebe CaMeL Divide ( res ) ;
rank: 213
score: 99.2901141826923
patch: Iterator iter iter = res . entries . iterator ( ) ;
rank: 213
score: 99.25944010416667
patch: Iterator iter = entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 213
score: 99.24409484863281
patch: Iterator iter = res = res . entries ( ) . iterator ( ) ;
rank: 213
score: 99.24039713541667
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) this . entries . iterator ( ) ;
rank: 213
score: 99.22739664713542
patch: Iterator iter = res . get CaMeL Index ( ) ;
rank: 214
score: 99.31145881204044
patch: Iterator < Byte > iter = res . entries ( ) . iterator ( ) ;
rank: 214
score: 99.29967543658088
patch: Iterator iter = res . entries [ iter . has CaMeL Next ( ) ] ;
rank: 214
score: 99.29003092447917
patch: Iterator iter = ( Iterator ) res . entries . entries ( ) ;
rank: 214
score: 99.26460266113281
patch: Iterator iter = res . entries ( ) ; super . entries ( ) ;
rank: 214
score: 99.2585782137784
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ; )
rank: 214
score: 99.24355899586396
patch: synchronized ( res ) { Iterator iter = res . iterator . iterator ( ) ;
rank: 214
score: 99.22726004464286
patch: Iterator iter = res . get ( ) . size ( ) ;
rank: 215
score: 99.31141967773438
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) throw null ;
rank: 215
score: 99.29947662353516
patch: Iterator iter = res != null . entries ( ) . iterator ( ) ;
rank: 215
score: 99.2585090188419
patch: Iterator iter = null ; while ( iter . has CaMeL Next ( ) ) {
rank: 215
score: 99.25731549944196
patch: Iterator iter = res . size ( ) . size ( ) ;
rank: 215
score: 99.24313354492188
patch: Iterator iter = v . iterator ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 216
score: 99.2891845703125
patch: Iterator iter = res . get . entries ( ) . iter ( ) ;
rank: 216
score: 99.25719105113636
patch: Iterator iter = res . has CaMeL Next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 216
score: 99.25667317708333
patch: Iterator iter = res . add ( this ) . size ( ) ;
rank: 216
score: 99.25487518310547
patch: Iterator iter < Long > iter = res . entries . iterator ( ) ;
rank: 216
score: 99.24178873697916
patch: Iterator iter = res . entries ( ) . iterator ( ) ; )
rank: 217
score: 99.2986701516544
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries ( this ) ;
rank: 217
score: 99.28917694091797
patch: Iterator iter = res . is CaMeL Array ( ) . iterator ( ) ;
rank: 217
score: 99.26430053710938
patch: Iterator entries = res . iterator ( ) ;
rank: 217
score: 99.25431060791016
patch: Iterator iter = res . trim ( ) . entries . iterator ( ) ;
rank: 217
score: 99.24156429893092
patch: Iterator iter = v . iterator ( ) ; while . has CaMeL Next ( ) ; )
rank: 217
score: 99.2393798828125
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector == null ;
rank: 217
score: 99.22373860677084
patch: Iterator iter = res . ( ) . entries . size ( ) ;
rank: 218
score: 99.3107845908717
patch: Iterator < Entry > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 218
score: 99.29754231770833
patch: Iterator iter = ! res . entries ( ) . iterator ( ) ;
rank: 218
score: 99.289111328125
patch: Iterator iter = res . parse ( res . iterator ( ) ) ;
rank: 218
score: 99.26424153645833
patch: Iterator iter = res . entries ( ) . remove ( 0 ) ;
rank: 218
score: 99.2552261352539
patch: Iterator iter = res . entries . v . entries . iterator ( ) ;
rank: 218
score: 99.24098423549107
patch: Iterator iter = res . iterator ( ) ; while ( ) {
rank: 218
score: 99.23892032398896
patch: Iterator < String > iter = v . entries . entries . iterator ( ) ;
rank: 218
score: 99.22372000558036
patch: Iterator iter = res . name ( ) . iterator ( ) ;
rank: 219
score: 99.31070382254464
patch: if ( res != null ) res . add ( res ) ;
rank: 219
score: 99.29721966911765
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iter ( this ) ;
rank: 219
score: 99.28868910845588
patch: Iterator iter = res . get ( 0 ) . entries . iterator ( ) ;
rank: 219
score: 99.26413143382354
patch: Iterator iter = res . entries ( $NUMBER$ - 1 ) . iterator ( ) ;
rank: 219
score: 99.2530746459961
patch: Iterator iter = res . [ 0 ] . entries . iterator ( ) ;
rank: 219
score: 99.24048569623162
patch: if ( res != null ) res . res = res . entries ( ) ;
rank: 219
score: 99.2234130859375
patch: Iterator < State > iter = res . entries . iterator ( ) ;
rank: 220
score: 99.31019005408653
patch: Iterator < Iterator > iter = res . entries ( ) ;
rank: 220
score: 99.28860909598214
patch: / ; Iterator iter = res . entries . iterator ( ) ;
rank: 220
score: 99.25398254394531
patch: Iterator iter = res . end . entries ( ) . iterator ( ) ;
rank: 220
score: 99.24040985107422
patch: entries = res . entries ; Iterator iter = res . iterator ( ) ;
rank: 220
score: 99.23884020353618
patch: Iterator iter = res . entries . to CaMeL Array ( v ) . iterator ( ) ;
rank: 221
score: 99.30950927734375
patch: final Iterator < Class > iter = res . entries . iterator ( ) ;
rank: 221
score: 99.29685465494792
patch: Iterator iter = res != null . iterator ( ) ;
rank: 221
score: 99.25629272460938
patch: Iterator iter = res . iter ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 221
score: 99.25273132324219
patch: Iterator iter = res . min ( ) . entries . iterator ( ) ;
rank: 221
score: 99.24029862253289
patch: if ( res . entries != null ) res . entries = res . entries . length ;
rank: 221
score: 99.2385021391369
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . iterator ( ) ;
rank: 222
score: 99.29629720052084
patch: Iterator iter = v [ iter . has CaMeL Next ( ) ] ;
rank: 222
score: 99.2631103515625
patch: Iterator < T > entries = res . entries . iterator ( ) ;
rank: 222
score: 99.2561565896739
patch: res . Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 222
score: 99.24013671875
patch: synchronized ( res ) { Iterator iter = v . iterator ( ) ;
rank: 222
score: 99.22182395241477
patch: Iterator iter = res . iterator ( ) ; }
rank: 223
score: 99.29569244384766
patch: Iterator iter = res != null . entries . entries . iterator ( ) ;
rank: 223
score: 99.26300455729167
patch: Iterator iter = res . entries ( false ) . iterator ( ) ;
rank: 223
score: 99.25568590666118
patch: Iterator iter = v . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 223
score: 99.25150299072266
patch: Iterator iter = res . entries . iterator ( ) . next ( ) ;
rank: 223
score: 99.24010620117187
patch: if ( res . entries != null ) Iterator iter = res . entries . iterator ( ) ;
rank: 223
score: 99.22118123372395
patch: final iter = res . entries . iterator ( ) ;
rank: 224
score: 99.30804084329044
patch: Iterator < Object > iter = this . res . entries . iterator ( ) ;
rank: 224
score: 99.29560089111328
patch: Iterator iter = ( iter . entries ( ) ) . iterator ( ) ;
rank: 224
score: 99.26232147216797
patch: Iterator * ] res . entries = res . entries . iterator ( ) ;
rank: 224
score: 99.2556485262784
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) break ;
rank: 224
score: 99.239990234375
patch: if ( res != null ) res . set CaMeL Length ( 0 ) ;
rank: 224
score: 99.23744829963235
patch: Iterator < Long > iter = res . entries . entries . iterator ( ) ;
rank: 225
score: 99.30763154871323
patch: final Iterator iter = res . entries = res . entries . iterator ( ) ;
rank: 225
score: 99.29508209228516
patch: Iterator iter = res . size ( ) * v . iterator ( ) ;
rank: 225
score: 99.28561580882354
patch: Iterator iter = res . entries . = res . entries . entries ( ) ;
rank: 225
score: 99.26176183363971
patch: Iterator iter = res . entries ( ) . index CaMeL Of ( $STRING$ ) ;
rank: 225
score: 99.25542922247024
patch: Iterator iter = v . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 225
score: 99.25157973345588
patch: Iterator iter = res . contains ( 0 ) : res . size ( ) ;
rank: 225
score: 99.23983328683036
patch: if ( res . length != res . length ) return res ;
rank: 225
score: 99.23708624588816
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iter ( ) ;
rank: 225
score: 99.21929524739583
patch: Iterator iter = res . . entries ( ) . iterator ( ) ;
rank: 226
score: 99.30759974888393
patch: Iterator iter = res . entries . iterator ( ) - 1 ;
rank: 226
score: 99.28532409667969
patch: Iterator iter = res . get CaMeL Row ( ) . iterator ( ) ;
rank: 226
score: 99.25435207201087
patch: Iterator iter = this . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 226
score: 99.24869537353516
patch: Iterator iter = res . get CaMeL Class ( ) . size ( ) ;
rank: 226
score: 99.23983154296874
patch: if ( res . entries == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 226
score: 99.21876627604166
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter
rank: 227
score: 99.28531646728516
patch: Iterator iter = res . entries . entries ( ) . next ( ) ;
rank: 227
score: 99.26099350873162
patch: res . value = res . entries . iterator ( ) . size ( ) ;
rank: 227
score: 99.2359619140625
patch: Iterator iter = res . get CaMeL Entry . entries . iterator ( ) ;
rank: 227
score: 99.21836635044643
patch: Iterator iter = res . false . entries . iterator ( ) ;
rank: 228
score: 99.3065673828125
patch: int entries . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 228
score: 99.29393920898437
patch: Iterator iter = iter . entries ( ) ;
rank: 228
score: 99.26069859095982
patch: Iterator iter = res . entries ( ) . list ( ) ;
rank: 228
score: 99.25340634300595
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( )
rank: 228
score: 99.25135803222656
patch: Iterator iter = res . size ( ) : v . size ( ) ;
rank: 228
score: 99.23939819335938
patch: if ( res != null ) res . ) res . entries = res . entries . length ;
rank: 228
score: 99.23531341552734
patch: Iterator iter = res . entries . entries [ ) . iterator ( ) ;
rank: 228
score: 99.21818033854167
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 229
score: 99.29353332519531
patch: Iterator iter = iter . entries ( ) . entries . iterator ( ) ;
rank: 229
score: 99.25338612432066
patch: Iterator iter = this . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 229
score: 99.23447875976562
patch: ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . set CaMeL Entry ( ) ;
rank: 229
score: 99.21719796316964
patch: final Iterator iter = res . entries . iterator ( ) ; ;
rank: 230
score: 99.30609537760417
patch: Iterator < Object > entries = res . entries . iterator ( ) ;
rank: 230
score: 99.25953674316406
patch: Iterator iter = res . entries = res . map . iterator ( ) ;
rank: 230
score: 99.2528435202206
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . )
rank: 230
score: 99.23912635216347
patch: Object res = res . entries . get ( 0 ) ;
rank: 230
score: 99.23445129394531
patch: Iterator iter ? res . entries . iterator ( ) . advance ( ) ;
rank: 230
score: 99.21719360351562
patch: Iterator res = res . entries . size ( ) ;
rank: 231
score: 99.29247029622395
patch: Iterator iter = res . entries ( ) . length ;
rank: 231
score: 99.25047302246094
patch: Iterator iter < boolean > iter = res . entries . iterator ( ) ;
rank: 231
score: 99.23900553385417
patch: Iterator < res . length > iter = res . iterator ( ) ;
rank: 231
score: 99.21705729166666
patch: Iterator iter = res . [ iter . has CaMeL Next ( ) ;
rank: 232
score: 99.29230813419117
patch: Iterator iter = res . length [ 1 ] . entries . iterator ( ) ;
rank: 232
score: 99.28305053710938
patch: Iterator iter = res . next . entries . entries . iterator ( ) ;
rank: 232
score: 99.25265066964286
patch: Iterator iter = res . clone ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 232
score: 99.25035095214844
patch: Iterator iter = res . max ( ) . entries . iterator ( ) ;
rank: 232
score: 99.21598597935268
patch: Iterator iter = res . out . entries . iterator ( ) ;
rank: 233
score: 99.29208374023438
patch: Vector v = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 233
score: 99.25831705729166
patch: Iterator < / >> iter = res . entries . iterator ( ) ;
rank: 233
score: 99.2450459798177
patch: for ( Iterator iter = res . size ( ) ;
rank: 233
score: 99.23837280273438
patch: if ( res != null ) res . res = res . entries . ;
rank: 234
score: 99.30548967633929
patch: Iterator iter = 0 . entries ( ) . iterator ( ) ;
rank: 234
score: 99.29205322265625
patch: try { res . set CaMeL Entry ( iter . advance ( ) ) ;
rank: 234
score: 99.28271484375
patch: Iterator iter = res . clone ( ) ; iterator . iterator ( ) ;
rank: 234
score: 99.2582275390625
patch: Iterator < String > iter = res . value . iterator ( ) ;
rank: 234
score: 99.25190873579545
patch: Iterator iter = res . value . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 234
score: 99.24993537454044
patch: Iterator iter = res . entries . iterator ( v . size ( ) ) ;
rank: 234
score: 99.23821551983173
patch: Iterator iter = res . entries ( res . length ) ;
rank: 234
score: 99.23338317871094
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector res : res ) {
rank: 235
score: 99.3049785907452
patch: Iterator iter = res . entries entries . iterator ( ) ;
rank: 235
score: 99.29166353665866
patch: Iterator iter = res [ iter . size ( ) ] ;
rank: 235
score: 99.28254045758929
patch: Iterator iter = res . entries . min . iterator ( ) ;
rank: 235
score: 99.258056640625
patch: res . entries = res . entries ( ) ;
rank: 235
score: 99.25162760416667
patch: iter = v . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 235
score: 99.2306884765625
patch: Iterator < Object > iter = v . entries . iterator ( ) ;
rank: 235
score: 99.21483561197917
patch: Iterator < double > iter = res . entries . size ( ) ;
rank: 236
score: 99.30492401123047
patch: Iterator iter = res . entries . iterator ( ) ; else return null ;
rank: 236
score: 99.28246198381696
patch: Iterator iter = this . res . entries . iter ( ) ;
rank: 236
score: 99.25147594105114
patch: Iterator v = res . entries . iterator ( ) ; while ( v . has CaMeL Next ( ) )
rank: 236
score: 99.24393404447116
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 236
score: 99.23780924479166
patch: Iterator iter = v [ res . length ] . iterator ( ) ;
rank: 236
score: 99.230517578125
patch: Iterator < iter > iter = res . entries . iterator ( ) ;
rank: 236
score: 99.21448625837054
patch: Iterator iter = res . entries . size ( ) ; ) {
rank: 237
score: 99.3045654296875
patch: Iterator < ? > iter = this . res . entries . iterator ( ) ;
rank: 237
score: 99.28167365579044
patch: Iterator iter = res . iterator ( ) ; = res . iterator ( ) ;
rank: 237
score: 99.25787353515625
patch: Iterator iter = super . entries . iterator ( ) ;
rank: 237
score: 99.25146484375
patch: Iterator iterator = v . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 237
score: 99.23747422960069
patch: System . arraycopy ( res , 0 , res , 0 , res . length ) ;
rank: 237
score: 99.22991943359375
patch: Iterator < int ) = res . entries . entries . iterator ( ) ;
rank: 237
score: 99.21319580078125
patch: Iterator iter = res . end . entries . iterator ( ) ;
rank: 238
score: 99.29037039620536
patch: Iterator iter = v . entries ( ) . size ( ) ;
rank: 238
score: 99.2576904296875
patch: int iter = res . entries ( ) ;
rank: 238
score: 99.25119947350544
patch: Iterator iter = res . entries . iterator ( ) ; while ( Iterator iter . has CaMeL Next ( ) )
rank: 238
score: 99.23745492788461
patch: Iterator iter ; Iterator iter = res . iterator ( ) ;
rank: 238
score: 99.22990866268383
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries ) {
rank: 238
score: 99.21254185267857
patch: List res = res . entries . entries . iterator ( ) ;
rank: 239
score: 99.28880310058594
patch: Iterator iter = res . entries ( ) != null . iterator ( ) ;
rank: 239
score: 99.2815300436581
patch: Iterator iter = res ; Iterator iter = res . entries . iterator ( ) ;
rank: 239
score: 99.25672149658203
patch: Iterator iter = res . entries ( ) ; list . iterator ( ) ;
rank: 239
score: 99.23623657226562
patch: Iterator iter = v = res . entries ( ) . iterator ( ) ;
rank: 239
score: 99.22982933407738
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iter ( ) ;
rank: 240
score: 99.3030029296875
patch: res . iterator ( ) . iterator ( ) . iterator ( ) . equals ( $STRING$ ) ;
rank: 240
score: 99.28863166360294
patch: Iterator iter = res [ $NUMBER$ ] . entries . entries . iterator ( ) ;
rank: 240
score: 99.25657743566177
patch: res . entries = res . entries ; res . entries = res . entries ;
rank: 240
score: 99.24990012428977
patch: System . arraycopy ( res , 0 , res . entries , 0 , res . entries . length ) ;
rank: 240
score: 99.24213053385417
patch: iter = res . entries . entries . entries . iterator ( ) ;
rank: 240
score: 99.22963995682566
patch: Iterator iter = res . entries [ v . length ] . entries . iterator ( ) ;
rank: 240
score: 99.21226149338942
patch: int Iterator iter = res . entries . iterator ( ) ;
rank: 241
score: 99.28815774356617
patch: Iterator iter = res . length [ 0 ] . entries . iterator ( ) ;
rank: 241
score: 99.28012520926339
patch: Iterator iter = res . entries . iter . entries ( ) ;
rank: 241
score: 99.25601632254464
patch: Iterator iter = res . entries ( ) . replace ( ) ;
rank: 241
score: 99.24211883544922
patch: Iterator iter = res . entries . trim ( ) . size ( ) ;
rank: 241
score: 99.23605581430289
patch: Iterator iter ; Iterator iter = v . iterator ( ) ;
rank: 242
score: 99.30252075195312
patch: Iterator iter = res . entries ( ) . iterator ( ) - 0 ;
rank: 242
score: 99.27926635742188
patch: Iterator iter = res . entries . iterator ( ) ; iter = 0 ;
rank: 242
score: 99.24955610795455
patch: Iterator iter = res . entries . iter ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 242
score: 99.24175262451172
patch: Iterator iter = res . v . entries ( ) . entries ( ) ;
rank: 242
score: 99.22901675575658
patch: Iterator < String > iter = this . res . entries . entries . iterator ( ) ;
rank: 242
score: 99.21104213169643
patch: Iterator iter = res . entries . iterator ( - 1 ) ;
rank: 243
score: 99.30164388020833
patch: Iterator < Iterator > iterator = res . entries . iterator ( ) ;
rank: 243
score: 99.2789306640625
patch: Iterator iter = res . entries . iterator ( ) ; entries = null ;
rank: 243
score: 99.25576782226562
patch: int iter = res . entries . trim ( ) . size ( ) ;
rank: 243
score: 99.24952334449405
patch: Iterator iter = res . entries . iterator ( ) ; while ( . has CaMeL Next ( ) )
rank: 243
score: 99.2356021278783
patch: if ( res != null ) res . entries = res . entries . size ( ) ;
rank: 243
score: 99.22867838541667
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res . iterator ( ) ;
rank: 243
score: 99.21097819010417
patch: Vector res = res . entries . iterator ( ) ;
rank: 244
score: 99.30135498046874
patch: Iterator iter = res . iterator ( ) ; while . . . has CaMeL Next ( ) ;
rank: 244
score: 99.2549819946289
patch: / * ] res . entries = res . entries . iterator ( ) ;
rank: 244
score: 99.24880149147727
patch: if ( res . length != res . length ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 244
score: 99.23546645220588
patch: if ( res == null ) throw new Null CaMeL Pointer CaMeL Exception ( ) ;
rank: 244
score: 99.22771344866071
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = list . entries . iterator ( ) ;
rank: 244
score: 99.21010178786058
patch: Iterator iter = res . has CaMeL Next ( ) ; {
rank: 245
score: 99.28708065257354
patch: synchronized ( res ) { res . set CaMeL Entry ( iter . key ) ;
rank: 245
score: 99.2784932454427
patch: Iterator iter = res . iter . iter ( ) ;
rank: 245
score: 99.2549579326923
patch: this . res . iterator ( ) . iterator ( ) ;
rank: 245
score: 99.2485584077381
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = v . iterator ( ) ;
rank: 245
score: 99.24445452008929
patch: Iterator iter = res . value ( ) . iterator ( ) ;
rank: 245
score: 99.23456573486328
patch: if ( res != null ) res . set CaMeL Value ( res ) ;
rank: 246
score: 99.30087280273438
patch: Iterator iter = $NUMBER$ * res . entries ( ) . iterator ( ) ;
rank: 246
score: 99.28697967529297
patch: Iterator iter = res . entries = v . entries . iterator ( ) ;
rank: 246
score: 99.27840750558036
patch: Iterator iterator = res . entries . entries . iterator ( ) ;
rank: 246
score: 99.24842900815217
patch: Iterator iter = Integer . parse CaMeL Int ( res . to CaMeL String ( ) . trim ( ) ) ;
rank: 246
score: 99.244384765625
patch: Iterator iter = this . v . iterator ( ) ;
rank: 246
score: 99.23887634277344
patch: Iterator iter = res . entries . trim ( ) . entries ( ) ;
rank: 246
score: 99.23386928013393
patch: try { Iterator iter = res . iterator . iterator ( ) ;
rank: 246
score: 99.22703968394886
patch: Iterator iter = res . entries ( ) . to CaMeL Array ( ) . entries . iterator ( ) ;
rank: 247
score: 99.30061645507813
patch: int iter . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 247
score: 99.27832903180804
patch: Iterator iter = new Iterator ( res . next ( ) ) ;
rank: 247
score: 99.25421905517578
patch: int iter = res . to CaMeL String ( ) . size ( ) ;
rank: 247
score: 99.24839716372283
patch: Iterator iter = res . entries 1 . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 247
score: 99.24409702845982
patch: Iterator iter = res != null : res . size ( ) ;
rank: 247
score: 99.22703043619792
patch: Iterator iter = out . entries . iterator ( ) ;
rank: 247
score: 99.20945231119792
patch: Iterator iter = res . split . iterator ( ) ;
rank: 248
score: 99.28640747070312
patch: Iterator iter = res . entries . entries . length . iterator ( ) ;
rank: 248
score: 99.27804565429688
patch: Iterator iter = res . entries . iterator ( ) ; ; return res ;
rank: 248
score: 99.25282592773438
patch: Iterator iter = res . list ( ) ;
rank: 248
score: 99.24803402549342
patch: Iterator iter = v . iterator ( ) ; Iterator iter = v . iterator ( ) ;
rank: 248
score: 99.23804649939903
patch: Iterator iter = res . entries . iterator iterator ( ) ;
rank: 248
score: 99.2327411358173
patch: Iterator < String > iter = v . iterator ( ) ;
rank: 248
score: 99.20901925223214
patch: Iterator [ ] v = res . entries . iterator ( ) ;
rank: 249
score: 99.30050455729166
patch: Iterator < Object > iter = res . entries . iter ( ) ;
rank: 249
score: 99.25266810825893
patch: Iterator iter = new byte [ res . size ( ) ] ;
rank: 249
score: 99.24776785714286
patch: Iterator iterator = v . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 249
score: 99.23768615722656
patch: Iterator iter = res . add ( ) . entries . iterator ( ) ;
rank: 249
score: 99.2327392578125
patch: Iterator iter = v . entries ( ) . iterator ( ) ; ;
rank: 250
score: 99.30047248391544
patch: final Iterator iter = res . entries . entries ( ) . entries ( ) ;
rank: 250
score: 99.28533063616071
patch: Iterator iter = res . length : res . iterator ( ) ;
rank: 250
score: 99.27757917131696
patch: Iterator iter = this . res . entries . entries ( ) ;
rank: 250
score: 99.2525634765625
patch: Iterator iter = res . entries . value . iterator ( ) ;
rank: 250
score: 99.24760298295455
patch: System . Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 250
score: 99.23738861083984
patch: Iterator iter = res . [ iter . entries . size ( ) ] ;
rank: 250
score: 99.23265380859375
patch: Iterator iterator = v . entries ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 250
score: 99.22606743706598
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) ; ) ;
rank: 250
score: 99.20829264322917
patch: Iterator iter = res . add ( res ) . size ( ) ;
rank: 251
score: 99.27649864783653
patch: Iterator iter = res . iterator ( ) ; = null ;
rank: 251
score: 99.25236511230469
patch: Iterator * ] iter = res . entries ( ) . iterator ( ) ;
rank: 251
score: 99.24759928385417
patch: Iterator iter = v . list . iterator ( ) ;
rank: 251
score: 99.24203491210938
patch: Iterator iter = res . iterator ( ) ; has CaMeL Next ( ) ;
rank: 251
score: 99.23717389787946
patch: Iterator iter = res . intern ( ) . iterator ( ) ;
rank: 251
score: 99.23221435546876
patch: Iterator iter = v . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 251
score: 99.22569515830592
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = list . iterator ( ) ;
rank: 251
score: 99.20608956473214
patch: Vector res = res . entries . entries . iterator ( ) ;
rank: 252
score: 99.3000847311581
patch: Iterator < synchronized > iter = res . entries ( ) . iterator ( ) ;
rank: 252
score: 99.27576555524554
patch: Iterator iter = res . entries . name . iterator ( ) ;
rank: 252
score: 99.2523193359375
patch: Iterator < ] > iter = res . entries . entries ( ) ;
rank: 252
score: 99.24720830502717
patch: Iterator iterator = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 252
score: 99.23681640625
patch: Iterator iter = res . get CaMeL Id ( ) . size ( ) ;
rank: 252
score: 99.23200988769531
patch: Iterator iter = res . entries ( ) . iterator ( ) ; * /
rank: 252
score: 99.22460065569196
patch: Iterator iter : res . entries ( ) . iterator ( ) ;
rank: 252
score: 99.20595296223958
patch: Iterator iter = Iterator . has CaMeL Next ( ) ;
rank: 253
score: 99.2973388671875
patch: int size = res . iterator ( ) . iterator ( ) . iterator ( ) . length ;
rank: 253
score: 99.28485870361328
patch: Iterator iter = res . length * v . entries . iterator ( ) ;
rank: 253
score: 99.27527965198864
patch: Iterator iter ( res . iterator ( ) ) ;
rank: 253
score: 99.24661254882812
patch: Iterator iter = map . entries . iterator ( ) ;
rank: 253
score: 99.23176125919117
patch: if ( res . entries != null ) res . res = res . entries ;
rank: 254
score: 99.29732572115384
patch: Iterator < Object > entries = res . entries ( ) ;
rank: 254
score: 99.25068664550781
patch: Iterator iter = res . get CaMeL Instance ( ) . entries ( ) ;
rank: 254
score: 99.24639601934524
patch: Iterator iter = Math . min ( res . entries . size ( ) , v . length ) ;
rank: 254
score: 99.24149322509766
patch: Iterator iter = res != null ? res . iterator ( ) : null ;
rank: 254
score: 99.236083984375
patch: Iterator iter = res . get CaMeL Methods ( ) . iterator ( ) ;
rank: 254
score: 99.22438677619485
patch: Iterator iter = res . entries [ v . length ] . iterator ( ) ;
rank: 254
score: 99.20528157552083
patch: Iterator iter = res . Math . iterator ( ) ;
rank: 255
score: 99.2968994140625
patch: final Iterator iter = res . entries ( ) . size ( ) ;
rank: 255
score: 99.25053267045455
patch: entries . iterator ( ) . iterator ( ) ;
rank: 255
score: 99.231494140625
patch: Iterator iter = v [ res . entries . length - 1 ] ;
rank: 256
score: 99.28456217447916
patch: Iterator iter = res . entries . entries ( ) [ 0 ] ;
rank: 256
score: 99.2741928100586
patch: Iterator iter = res . entries . iterator ( ) . entries ( ) ;
rank: 256
score: 99.245947265625
patch: Iterator res = res . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 256
score: 99.24080403645833
patch: Iterator iter = res . split ( 0 ) . iterator ( ) ;
rank: 256
score: 99.2349853515625
patch: Iterator iter = res . add . entries . entries . iterator ( ) ;
rank: 256
score: 99.23128255208333
patch: Iterator iter = res . iterator ( res . iterator ( ) ) ;
rank: 256
score: 99.22435913085937
patch: Iterator iter = res . get CaMeL Entry ( ) . entries ( ) . iterator ( ) ;
rank: 256
score: 99.20465959821429
patch: Iterator iter = res . true . entries . iterator ( ) ;
rank: 257
score: 99.28404017857143
patch: Iterator iter = res == null : res . iterator ( ) ;
rank: 257
score: 99.2738037109375
patch: Iterator iter = $STRING$ . entries . iterator ( ) ;
rank: 257
score: 99.2501579733456
patch: Iterator iter = res . entries ( - - 1 ) . iterator ( ) ;
rank: 257
score: 99.24557059151786
patch: iter = res . entries . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 257
score: 99.23106971153847
patch: Iterator < res > iter = res . iterator ( ) ;
rank: 257
score: 99.223876953125
patch: Iterator iter . has CaMeL Next ( ) ; ) ;
rank: 258
score: 99.296142578125
patch: Iterator iter = res . entries ( ) = res . iterator ( ) ;
rank: 258
score: 99.28402709960938
patch: Iterator iter = v . entries . entries ( ) . size ( ) ;
rank: 258
score: 99.27351597377232
patch: Iterator iter = res . get . entries . iterator ( ) ;
rank: 258
score: 99.24996948242188
patch: Iterator iter = res . entries ( ) . iterator ( ) ; else {
rank: 258
score: 99.24554998224431
patch: Iterator iter = res . v . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 258
score: 99.24076625279018
patch: Iterator iter = res . exp . entries . iterator ( ) ;
rank: 258
score: 99.2341079711914
patch: else res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 258
score: 99.23069361636513
patch: if ( res != null ) { Iterator iter = res . iterator . iterator ( ) ;
rank: 258
score: 99.22381913034539
patch: Iterator iter = res . entries . to CaMeL Array ( 0 ) . iterator ( ) ;
rank: 258
score: 99.20368303571429
patch: Iterator iter = iter . has CaMeL Next ( ) ; ) {
rank: 259
score: 99.28387044270833
patch: Iterator iter = res . entries [ $NUMBER$ ] . iterator ( ) ;
rank: 259
score: 99.27250162760417
patch: Iterator iter = res . entries . iterator ( ) ; = $NUMBER$ ;
rank: 259
score: 99.2489875344669
patch: synchronized ( res ) { Iterator entries = res . entries . iterator ( ) ;
rank: 259
score: 99.2452059659091
patch: Iterator iter = list . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 259
score: 99.2398910522461
patch: Iterator iter = res . min . entries ( ) . iterator ( ) ;
rank: 259
score: 99.2337176983173
patch: Iterator iter advance = res . entries . iterator ( ) ;
rank: 259
score: 99.22932942708333
patch: if ( res != null ) res . entries = res . entries . entries ; else
rank: 260
score: 99.28380629595588
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . length ) {
rank: 260
score: 99.27227424172794
patch: Iterator iter = res . entries . = res . entries . next ( ) ;
rank: 260
score: 99.248974609375
patch: Iterator iter = res . entries ( ) . remove ( null ) ;
rank: 260
score: 99.23920440673828
patch: Iterator iter = res [ - 1 ] . entries . iterator ( ) ;
rank: 260
score: 99.20337931315105
patch: Iterator iter = entries . has CaMeL Next ( ) ;
rank: 261
score: 99.29508463541667
patch: Iterator < ? > iterator = res . entries . iterator ( ) ;
rank: 261
score: 99.27223205566406
patch: Iterator iter = res . entries . iterator ( ) ; iter = null ;
rank: 261
score: 99.2486572265625
patch: Iterator iter = res . entries ( ) . remove ( $NUMBER$ ) ;
rank: 261
score: 99.24516465928819
patch: Iterator iter = this . res ; while ( iter . has CaMeL Next ( ) )
rank: 261
score: 99.23312377929688
patch: Iterator entries = res . entries . entries . entries . iterator ( ) ;
rank: 262
score: 99.27184244791667
patch: Iterator iter = new ( res . entries . iterator ( ) ) ;
rank: 262
score: 99.22833251953125
patch: try { Iterator iter = v . iterator ( ) ;
rank: 262
score: 99.22355382582721
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter . advance ( ) ;
rank: 262
score: 99.20326585036058
patch: Iterator >> iter = res . entries . iterator ( ) ;
rank: 263
score: 99.29288482666016
patch: Iterator < String > iter = res . entries . iterator ( ) ; else
rank: 263
score: 99.27105305989583
patch: Iterator < Entry > iter = res . entries . iter ( ) ;
rank: 263
score: 99.24454345703126
patch: Iterator iter = Integer . parse CaMeL Int ( v [ 0 ] ) . iterator ( ) ;
rank: 263
score: 99.22825113932292
patch: Iterator iterator = res . iterator . iterator ( ) ;
rank: 263
score: 99.22327423095703
patch: Iterator iter = res . entries . entries . iter . iterator ( ) ;
rank: 263
score: 99.20284016927083
patch: Iterator iter = res . v . size ( ) ;
rank: 264
score: 99.29282836914062
patch: Set res . iterator ( ) . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 264
score: 99.28083801269531
patch: Iterator iter = v . entries = res . entries . iterator ( ) ;
rank: 264
score: 99.23112487792969
patch: Iterator iter = res . entries . copy ( ) . iterator ( ) ;
rank: 264
score: 99.22741088867187
patch: Iterator iter = res . entries ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 265
score: 99.28040986902573
patch: Iterator iter = res . entries . ebe CaMeL Divide ( v . length ) ;
rank: 265
score: 99.24655983664773
patch: Iterator iter = res . entries ( true ) ;
rank: 265
score: 99.244384765625
patch: if ( res == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 265
score: 99.22701009114583
patch: if ( res != null ) res . res = res . res ;
rank: 265
score: 99.20171712239583
patch: Iterator iter = res . matches ( this ) . iterator ( ) ;
rank: 266
score: 99.27987670898438
patch: Iterator iter = res != null + v . entries . iterator ( ) ;
rank: 266
score: 99.26968819754464
patch: Iterator iter = new Iterator ( res . size ( ) ) ;
rank: 266
score: 99.24644368489584
patch: final int iter = res . entries ( ) . iterator ( ) ;
rank: 266
score: 99.23709869384766
patch: Iterator iter = res . size ( ) . entries . iterator ( ) ;
rank: 266
score: 99.22691434972427
patch: Iterator iter = res [ res . length - 1 ] . iterator ( ) ;
rank: 266
score: 99.20138985770089
patch: Iterator iter = res . entries > entries . iterator ( ) ;
rank: 267
score: 99.291748046875
patch: final final Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 267
score: 99.27918916590073
patch: Iterator iter = res [ 1 ] . entries ( ) . iterator ( ) ;
rank: 267
score: 99.26927947998047
patch: Iterator iter = res . entries . iterator ( ) ; iterator = $NUMBER$ ;
rank: 267
score: 99.24617513020833
patch: final int iterator = res . entries ( ) . size ( ) ;
rank: 267
score: 99.24411843039773
patch: Iterator iter = res . get . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 267
score: 99.23677062988281
patch: Iterator iter = res . value . entries . entries . iterator ( ) ;
rank: 267
score: 99.22671274038461
patch: if ( v != null && v . length > 0 )
rank: 267
score: 99.2006103515625
patch: Iterator < Entry > iter = res . entries . size ( ) ;
rank: 268
score: 99.27738683363971
patch: Iterator iter = ( ( Iterator ) res . entries . iterator ( ) ) ;
rank: 268
score: 99.24381510416667
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 268
score: 99.2366192157452
patch: Iterator iter = res . index CaMeL Of ( null ) ;
rank: 268
score: 99.22981480189732
patch: Iterator iter = res . copy ( ) . entries ( ) ;
rank: 268
score: 99.22060977711396
patch: for ( ) { iter = res . entries . entries . iterator ( ) ;
rank: 268
score: 99.20032958984375
patch: int iter = res . size ( ) ;
rank: 269
score: 99.29102376302083
patch: Iterator < / > iter = res . entries . iterator ( ) ;
rank: 269
score: 99.27737247242646
patch: Iterator iter = res . entries . entries [ 0 ] . iterator ( ) ;
rank: 269
score: 99.2450439453125
patch: Iterator < T > iterator = res . entries . iterator ( ) ;
rank: 269
score: 99.24365234375
patch: for ( Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 269
score: 99.23590087890625
patch: Iterator iter = res == null ? null : res . iterator ( ) ;
rank: 269
score: 99.22598702566964
patch: Iterator iter ; try { iter = res . iterator ( ) ;
rank: 269
score: 99.22042686060855
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; )
rank: 269
score: 99.19930826822916
patch: int < String > iter = res . entries . iterator ( ) ;
rank: 270
score: 99.29092843191964
patch: int size = res . iterator ( ) . size ( ) ;
rank: 270
score: 99.27672467912946
patch: Iterator iter = data . entries . entries . iterator ( ) ;
rank: 270
score: 99.26704915364583
patch: Iterator iter ( res . iterator ( ) . iterator ( ) ) ;
rank: 270
score: 99.24431295955883
patch: Iterator iter = res . entries . to CaMeL Array ( res . entries ) ;
rank: 270
score: 99.24264090401786
patch: res . set CaMeL Length ( 0 ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 270
score: 99.22598702566964
patch: Object [ ] res = new Object [ res . length ] ;
rank: 270
score: 99.22037760416667
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( res . iterator ( ) ) ;
rank: 270
score: 99.1988525390625
patch: Iterator iter = res [ this . entries . iterator ( ) ] ;
rank: 271
score: 99.2908871299342
patch: Iterator < T > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 271
score: 99.27668108258929
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ;
rank: 271
score: 99.2667236328125
patch: / Iterator iter = res . entries . iterator ( ) ;
rank: 271
score: 99.24415806361607
patch: int iterator = res . entries ( ) . size ( ) ;
rank: 271
score: 99.24250139508929
patch: Iterator iter = res . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 271
score: 99.23268127441406
patch: Iterator iter = res . iterator ( ) : v . iterator ( ) ;
rank: 271
score: 99.22023703835227
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . . iterator ( ) ;
rank: 272
score: 99.27577311197916
patch: Iterator iter = v [ 1 ] . entries . iterator ( ) ;
rank: 272
score: 99.26667785644531
patch: Iterator iter = res . iterator ( ) ; res . size ( ) ;
rank: 272
score: 99.24360656738281
patch: int [ ] res . entries = res . entries . iterator ( ) ;
rank: 272
score: 99.23262023925781
patch: Iterator iter = res . get CaMeL Type ( ) . iter ( ) ;
rank: 272
score: 99.22535615808823
patch: if ( res != null ) { Iterator iter = v . iterator ( ) ;
rank: 272
score: 99.22014825994319
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . entries ( ) ;
rank: 272
score: 99.19799194335937
patch: int iter = res . entries . length ;
rank: 273
score: 99.29041290283203
patch: Iterator < String > iter = res . entries . iterator ( ) ) ;
rank: 273
score: 99.27552795410156
patch: Iterator iter = res . entries . entries ( ) . Iterator ( ) ;
rank: 273
score: 99.2663803100586
patch: Iterator iter = res . iter ( ) ; res . iterator ( ) ;
rank: 273
score: 99.2435302734375
patch: Iterator iter = res . entries . key . iterator ( ) ;
rank: 273
score: 99.242431640625
patch: Iterator iter = res . entries [ res . size ( ) ] . iterator ( ) ;
rank: 273
score: 99.22455388849431
patch: iter = res . entries . entries ( ) ;
rank: 273
score: 99.19739786783855
patch: while ( iter . has CaMeL Next ( ) ) {
rank: 274
score: 99.24325358072916
patch: Iterator < String > iter = res . map . iterator ( ) ;
rank: 274
score: 99.24177856445313
patch: Iterator list = res . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 274
score: 99.23246002197266
patch: Iterator iter = res . get CaMeL Format ( ) . iterator ( ) ;
rank: 274
score: 99.22856140136719
patch: Iterator entries = res . entries . entries ( ) . iterator ( ) ;
rank: 274
score: 99.21991257440476
patch: Iterator iter = res . entries ( ) . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 274
score: 99.19737830528847
patch: Iterator iter = ( res . entries . iterator ( ) ;
rank: 275
score: 99.28911276424633
patch: Iterator < Iterator < Object > iter = res . entries . iterator ( ) ;
rank: 275
score: 99.27516276041666
patch: iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 275
score: 99.2423957375919
patch: synchronized ( res ) { Iterator iterator = res . entries . iterator ( ) ;
rank: 275
score: 99.24053955078125
patch: Object [ ] list = res . entries . to CaMeL Array ( ) ;
rank: 275
score: 99.23236083984375
patch: Iterator iter = res . remove ( - 1 ) . iterator ( ) ;
rank: 275
score: 99.19655064174107
patch: Iterator iter = res . floor ( ) . iterator ( ) ;
rank: 276
score: 99.28901941636029
patch: Iterator < Iterator < ) > iter = res . entries . iterator ( ) ;
rank: 276
score: 99.26542154947917
patch: Iterator < ? > iter = res . entries . iter ( ) ;
rank: 276
score: 99.24224853515625
patch: res . iterator ( ) ; Iterator iter = res . entries ( ) ;
rank: 276
score: 99.24048913043478
patch: Iterator iter = res . list . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) )
rank: 276
score: 99.23194122314453
patch: Iterator iter = res . get CaMeL Class ( ) . iterator ( ) ;
rank: 276
score: 99.22801208496094
patch: Iterator iter = res . entries . [ ) . size ( ) ] ;
rank: 276
score: 99.2231201171875
patch: Iterator iter = data . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 276
score: 99.21926879882812
patch: list . set CaMeL Entry ( iter . key ( ) , iter . value ( ) ) ;
rank: 277
score: 99.28865814208984
patch: Iterator iter = res . entries ( ) . iter . iterator ( ) ;
rank: 277
score: 99.27429962158203
patch: Iterator iter = list . entries ( ) . entries . iterator ( ) ;
rank: 277
score: 99.26473999023438
patch: Iterator iter = new Iterator ( res . entries . next ( ) ) ;
rank: 277
score: 99.2422383626302
patch: Iterator iter = res . map . size ( ) ;
rank: 277
score: 99.24045817057292
patch: synchronized ( res ) { res . entries = res . entries . iterator ( ) ;
rank: 277
score: 99.23170471191406
patch: Iterator iter = res != null ? res . size ( ) : 1 ;
rank: 277
score: 99.22732107979911
patch: for ( Iterator iter = res . entries . size ( ) ;
rank: 277
score: 99.22300318667763
patch: Iterator iter = res . entries ( ) ; while . has CaMeL Next ( ) ; )
rank: 277
score: 99.21907123766448
patch: Iterator iter = res . get CaMeL Entry ( iter ) . entries . iterator ( ) ;
rank: 277
score: 99.19629923502605
patch: Iterator iter = res . false . iterator ( ) ;
rank: 278
score: 99.24212646484375
patch: Iterator * ] entries = res . entries . iterator ( ) ;
rank: 278
score: 99.22698974609375
patch: Iterator iter = res . get CaMeL Context ( ) . size ( ) ;
rank: 278
score: 99.22279986213235
patch: if ( res . res != null && res . res . res != null )
rank: 278
score: 99.21907043457031
patch: for ( int ) { iter = res . entries . iterator ( ) ;
rank: 278
score: 99.19608851841518
patch: Object [ ] res = res . entries . iterator ( ) ;
rank: 279
score: 99.28813620174633
patch: Iterator < Object > iter = res . entries ( ) . iter ( ) ;
rank: 279
score: 99.2735824584961
patch: res . set CaMeL Entry ( iter . has CaMeL Next ( ) ) ;
rank: 279
score: 99.26426068474265
patch: Iterator iter = new Object > ( res . entries . iterator ( ) ) ;
rank: 279
score: 99.24207356770833
patch: Iterator < int >> iter = res . entries . iterator ( ) ;
rank: 279
score: 99.23923853824013
patch: Iterator iter = v . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 279
score: 99.22688511439732
patch: Iterator iter = res . entries . entries . next ( ) ;
rank: 279
score: 99.222216796875
patch: Iterator iter = res . entries ( res . entries . length ) ;
rank: 279
score: 99.1958516438802
patch: Iterator iter = res . entries . max ( ) ;
rank: 280
score: 99.27338005514706
patch: Iterator Iterator iter = res . entries . entries ( ) . iterator ( ) ;
rank: 280
score: 99.26418631417411
patch: Iterator iter = res . entries . iterator ( ) ; break ;
rank: 280
score: 99.24201516544117
patch: synchronized ( res ) { Iterator iter = res . entries . size ( ) ;
rank: 280
score: 99.22602844238281
patch: List res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 280
score: 99.22219848632812
patch: res . res = res ; Iterator iter = res . entries ( ) ;
rank: 280
score: 99.21876627604166
patch: Iterator iter = res . entries . entries . . iterator ( ) ;
rank: 280
score: 99.1952392578125
patch: Iterator iter = res . arraycopy ( v ) . iterator ( ) ;
rank: 281
score: 99.2876727764423
patch: res . iterator = res . entries . iterator ( ) ;
rank: 281
score: 99.27337646484375
patch: Iterator iter = iter . entries . entries ( ) . iterator ( ) ;
rank: 281
score: 99.26417643229166
patch: Iterator iter = 0 ; Iterator iter = res . iterator ( ) ;
rank: 281
score: 99.24153406479779
patch: if ( res . entries == null ) res . entries = res . entries ;
rank: 281
score: 99.23872514204545
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 281
score: 99.22897338867188
patch: Iterator iter = res . is CaMeL Empty ( ) : res . length ;
rank: 281
score: 99.22174944196429
patch: Iterator iter = res . iterator ( ) ; while ( ; )
rank: 281
score: 99.21788872612848
patch: for ( int ) { iter = res . entries . entries . iterator ( ) ;
rank: 281
score: 99.19349161783855
patch: Iterator iter = v . length . iterator ( ) ;
rank: 282
score: 99.2876446063702
patch: Iterator < ? > iter = res . entries ( ) ;
rank: 282
score: 99.26388549804688
patch: Iterator iter = res . entries . remove ( ) ;
rank: 282
score: 99.24137369791667
patch: Iterator iter = res . entries = ( ) . iterator ( ) ;
rank: 282
score: 99.23862526633523
patch: Iterator iter = res . entries . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 282
score: 99.2257080078125
patch: Iterator iter = res . . entries . entries . iterator ( ) ;
rank: 282
score: 99.2217155905331
patch: if ( v != null ) res . entries = res . entries . length ;
rank: 282
score: 99.21747436523438
patch: Iterator iter = res . entries . to CaMeL Array ( - 1 ) . iterator ( ) ;
rank: 283
score: 99.27288818359375
patch: Iterator iter = res . entries . length : res . iterator ( ) ;
rank: 283
score: 99.26348470052083
patch: Iterator iter = res . get ( $STRING$ ) . iterator ( ) ;
rank: 283
score: 99.24080113002232
patch: synchronized ( res ) { iter = res . iterator ( ) ;
rank: 283
score: 99.2385784646739
patch: Iterator iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) )
rank: 283
score: 99.21729387555804
patch: Enumeration iter = res . entries ( ) . iterator ( ) ;
rank: 283
score: 99.19300944010416
patch: int < int > iter = res . entries . iterator ( ) ;
rank: 284
score: 99.28657801011029
patch: Iterator < Short > iter = res . entries ( ) . iterator ( ) ;
rank: 284
score: 99.26316615513393
patch: Iterator < ) . Iterator iter = res . iterator ( ) ;
rank: 284
score: 99.23845880681819
patch: Iterator iter = res . entries . Iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 284
score: 99.22530110677083
patch: Iterator iter = res . entries . entries . length ;
rank: 284
score: 99.22080993652344
patch: if ( res != null ) res . set CaMeL Index ( 0 ) ;
rank: 284
score: 99.21715023643092
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iterator = res . iterator ( ) ;
rank: 284
score: 99.19252232142857
patch: Iterator iter = v . trim ( ) . iterator ( ) ;
rank: 285
score: 99.27276970358456
patch: Iterator iter = res [ v . length ] . entries . iterator ( ) ;
rank: 285
score: 99.24060821533203
patch: int iter = res . entries . entries ( ) . size ( ) ;
rank: 285
score: 99.23842075892857
patch: Iterator iter = res . list . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 285
score: 99.22669219970703
patch: Iterator iter = res . iterator ( ) : v . size ( ) ;
rank: 285
score: 99.22503662109375
patch: Iterator iter = res . Real CaMeL Vector ( ) . size ( ) ;
rank: 286
score: 99.28623334099265
patch: Iterator < boolean > iter = res . entries ( ) . iterator ( ) ;
rank: 286
score: 99.26245930989583
patch: Iterator iter = res . contains ( res . iterator ( ) ) ;
rank: 286
score: 99.2382342998798
patch: Iterator iter = res . list . iterator ( ) ; ;
rank: 286
score: 99.22605678013393
patch: Iterator iter = res != null ? res . length : 0 ;
rank: 286
score: 99.22469075520833
patch: Iterator iter = res . entries . index CaMeL Of ( $STRING$ ) ;
rank: 286
score: 99.219580078125
patch: if ( ! res . is CaMeL Empty ( ) ) return res ;
rank: 287
score: 99.28602701822916
patch: Iterator < Double > iter = res . entries . iterator ( ) ;
rank: 287
score: 99.225
patch: Iterator iter = res . arraycopy ( res ) . iterator ( ) ;
rank: 287
score: 99.2245585123698
patch: Iterator v = res . entries . iterator ( ) ;
rank: 287
score: 99.2155825966283
patch: Iterator iter = res . entries [ 0 ] . entries . entries . iterator ( ) ;
rank: 287
score: 99.1919453938802
patch: Iterator iter = res . remove . iterator ( ) ;
rank: 288
score: 99.28525015024039
patch: Iterator < ) > iter = res . iterator ( ) ;
rank: 288
score: 99.26139831542969
patch: Iterator iter = res . entries . reverse ( ) . iterator ( ) ;
rank: 288
score: 99.23907877604167
patch: Iterator iter = res . parse ( res ) . iterator ( ) ;
rank: 288
score: 99.23786727241848
patch: Iterator iter = res 1 . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 288
score: 99.2247314453125
patch: Iterator iter = res . size ( ) : res . entries ( ) ;
rank: 288
score: 99.22339739118304
patch: int [ ] res = new int [ res . length ] ;
rank: 288
score: 99.21925264246323
patch: Iterator iter = v [ 1 ] . entries ( ) . iterator ( ) ;
rank: 288
score: 99.21542154947916
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res ) {
rank: 288
score: 99.19164167131696
patch: Iterator iter = res [ iter . has CaMeL Next ( ) ;
rank: 289
score: 99.28493780838816
patch: Iterator < String > iter = res . entries = res . entries . iterator ( ) ;
rank: 289
score: 99.26090240478516
patch: Iterator iter = res . entries . this . entries . iterator ( ) ;
rank: 289
score: 99.23894500732422
patch: Iterator iter = res . entries ( ) . list . iterator ( ) ;
rank: 289
score: 99.23782784598214
patch: Iterator iter = res . iterator ( ) ; while ( ; iter . has CaMeL Next ( ) )
rank: 289
score: 99.2236557006836
patch: Iterator iter = res . clone ( ) : res . size ( ) ;
rank: 289
score: 99.21895141601563
patch: if ( v != null ) res . ) res . res . res . res . ) ;
rank: 289
score: 99.21527709960938
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector >
rank: 289
score: 99.19109235491071
patch: Iterator iter = res . super . entries . iterator ( ) ;
rank: 290
score: 99.26827239990234
patch: Iterator iter = v != null : res . entries . iterator ( ) ;
rank: 290
score: 99.23893468520221
patch: Iterator iter = res . entries ( ) . replace CaMeL All ( res ) ;
rank: 290
score: 99.21873072574013
patch: if ( v != null ) res . res = res . entries . iterator ( ) ;
rank: 290
score: 99.21526778371711
patch: Iterator iter = res . get CaMeL Entry ( 0 ) . entries . iterator ( ) ;
rank: 290
score: 99.19084821428571
patch: Iterator iter = entries . trim ( ) . iterator ( ) ;
rank: 291
score: 99.28390163845486
patch: boolean iter = res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 291
score: 99.2681884765625
patch: Real CaMeL Vector res = new Real CaMeL Vector ( this , this ) ;
rank: 291
score: 99.26049041748047
patch: Iterator iter = res . entries . iterator ( ) ; ) return res ;
rank: 291
score: 99.2384262084961
patch: res . entries = ( Iterator [ ] ) res . entries ( ) ;
rank: 291
score: 99.218603515625
patch: Iterator < E > iter = res . iterator . iterator ( ) ;
rank: 291
score: 99.21515856291118
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries ) {
rank: 291
score: 99.19083077566964
patch: while ( res != null ) { iter . advance ( ) ;
rank: 292
score: 99.26803588867188
patch: Iterator iter = entries . entries ( ) . entries . iterator ( ) ;
rank: 292
score: 99.25989708533653
patch: Iterator iter = res . entries . iterator ( ) ; .
rank: 292
score: 99.23807525634766
patch: Iterator iter = res . entries ( ) . max . iterator ( ) ;
rank: 292
score: 99.237109375
patch: Iterator iter = res . list ( 0 ) . iterator ( ) ;
rank: 292
score: 99.22208077566964
patch: Iterator iter = res . entries . index CaMeL Of ( ) ;
rank: 292
score: 99.21844482421875
patch: Iterator iter . has CaMeL Next ( ) ;
rank: 292
score: 99.21436709449405
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . key . iterator ( ) ;
rank: 292
score: 99.19000713641827
patch: iter . iterator ( ) . has CaMeL Next ( ) ;
rank: 293
score: 99.28343290441177
patch: Iterator < Long > iter = res . entries ( ) . iterator ( ) ;
rank: 293
score: 99.25933074951172
patch: Iterator iter = res . read . entries ( ) . iterator ( ) ;
rank: 293
score: 99.21798270089286
patch: Object [ ] res = res . to CaMeL Array ( ) ;
rank: 293
score: 99.1899883563702
patch: Iterator < Object > iter = res . size ( ) ;
rank: 294
score: 99.23691628196023
patch: System . arraycopy ( res . entries , 0 , res . entries . to CaMeL Array ( ) ) ;
rank: 294
score: 99.22163391113281
patch: Iterator iter = res != null ? res . length : res . length ;
rank: 294
score: 99.22148895263672
patch: Iterator iter = res . next ( ) . has CaMeL Next ( ) ;
rank: 294
score: 99.21756998697917
patch: res . entries = res . entries ;
rank: 294
score: 99.21368815104167
patch: Iterator < String > iter = this . entries . iterator ( ) ;
rank: 294
score: 99.18976236979167
patch: Iterator iter = res . entries . iterator ( ) ; ) { {
rank: 295
score: 99.28282255284927
patch: Iterator < String > iter = res . entries = res . iterator ( ) ;
rank: 295
score: 99.26709702435662
patch: Iterator iter = res [ iter . entries ( ) . iterator ( ) ] ;
rank: 295
score: 99.2586898803711
patch: Iterator iter = res . entries . iterator ( ) . iter ( ) ;
rank: 295
score: 99.23772834329044
patch: Iterator iter = res [ null ] . entries ( ) . iterator ( ) ;
rank: 295
score: 99.23684457632211
patch: Iterator iter = res . entries . iterator ( ) ; )
rank: 295
score: 99.22146606445312
patch: Iterator iter = res . Real CaMeL Vector ( ) . entries ( ) ;
rank: 295
score: 99.21742757161458
patch: if ( res != null ) res . res = res . entries . entries . ;
rank: 295
score: 99.18942696707589
patch: Iterator iter = res . abs ( ) . iterator ( ) ;
rank: 296
score: 99.23668561662946
patch: Iterator * ] res . entries = res . entries ( ) ;
rank: 296
score: 99.23636300223214
patch: Iterator iter = Math . max ( res . entries . size ( ) , v . length ) ;
rank: 296
score: 99.22075653076172
patch: Iterator iter = res . length . entries ( ) . size ( ) ;
rank: 296
score: 99.21738106863839
patch: Object [ ] data = res . get CaMeL Data ( ) ;
rank: 296
score: 99.21332750822368
patch: Iterator iter . advance ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 296
score: 99.18920026506696
patch: Iterator iter = res . this . res . iterator ( ) ;
rank: 297
score: 99.25758361816406
patch: Iterator iter = res . get $NUMBER$ res ( ) . iterator ( ) ;
rank: 297
score: 99.2362922219669
patch: Iterator iter = res . entries ( ) . index CaMeL Of ( res ) ;
rank: 297
score: 99.21994018554688
patch: Iterator iter = res != null ? res . length : v . length ;
rank: 297
score: 99.21722819010417
patch: Iterator iter = v . entries ( ) ) . iterator ( ) ;
rank: 297
score: 99.21305577895221
patch: Iterator < String > iter = this . entries . entries . iterator ( ) ;
rank: 297
score: 99.18843587239583
patch: Iterator iter = res . this . entries . iterator ( ) ; ;
rank: 298
score: 99.28202056884766
patch: final Iterator < String > iterator = res . entries . iterator ( ) ;
rank: 298
score: 99.26454162597656
patch: Iterator iter = res [ v . length 1 ] . iterator ( ) ;
rank: 298
score: 99.25740814208984
patch: Iterator iter = res . ; Iterator iter = res . iterator ( ) ;
rank: 298
score: 99.23613630022321
patch: Iterator iter = res . entries = res . size ( ) ;
rank: 298
score: 99.23612837357955
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) continue ;
rank: 298
score: 99.22061157226562
patch: Iterator iter = res . next ( ) . entries . iter ( ) ;
rank: 298
score: 99.21699793198529
patch: Iterator iter = v [ entries . length - 1 ] . iterator ( ) ;
rank: 298
score: 99.21292317708334
patch: for ( ) { iter = res . entries . iterator ( ) ;
rank: 298
score: 99.187744140625
patch: Iterator iter = v . this . entries . iterator ( ) ;
rank: 299
score: 99.2817611694336
patch: int size = res . entries . iterator ( ) . size ( ) ;
rank: 299
score: 99.23604583740234
patch: Iterator iter = res . entries ( - 1 ) . size ( ) ;
rank: 299
score: 99.23595581054687
patch: System . arraycopy ( res , 0 , res . entries , 0 , v . length ) ;
rank: 299
score: 99.22047424316406
patch: Iterator iter = res . entries . entries . data . iterator ( ) ;
rank: 299
score: 99.21951293945312
patch: Iterator iter = res . iterator ( ) : res . entries ( ) ;
rank: 299
score: 99.21695149739584
patch: Iterator iter = res . iterator ( ) res . iterator ( ) ;
rank: 299
score: 99.21248626708984
patch: while ( res . iterator ( ) . has CaMeL Next ( ) ) {
rank: 299
score: 99.18613978794643
patch: Iterator iter = res . entries . iterator ( ) ; / *
rank: 300
score: 99.28150939941406
patch: Iterator < int 1 : res . entries ( ) . iterator ( ) ;
rank: 300
score: 99.26423914292279
patch: Iterator iter = ( double [ ] ) res . entries . iterator ( ) ;
rank: 300
score: 99.25678253173828
patch: Iterator iter = res . entries . put ( ) . iterator ( ) ;
rank: 300
score: 99.21929059709821
patch: Iterator iter = res . entries . iterator ( ) * 1 ;
rank: 300
score: 99.1859600360577
patch: Iterator iter = res . contains ( v . length ) ;
rank: 301
score: 99.26410989200367
patch: synchronized ( iter ) { Iterator iter = res . entries . iterator ( ) ;
rank: 301
score: 99.25624593098958
patch: Iterator iter . iter = res . iterator ( ) ;
rank: 301
score: 99.2358154296875
patch: Iterator < E > entries = res . entries . iterator ( ) ;
rank: 301
score: 99.23522186279297
patch: System . arraycopy ( res . entries , 0 , res . entries ) ;
rank: 301
score: 99.21660970052083
patch: Iterator iter = res . iterator ( ) Iterator . iterator ( ) ;
rank: 301
score: 99.18569113991477
patch: Iterator iter = res . size ( ) ; }
rank: 302
score: 99.28040907118056
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) != null ;
rank: 302
score: 99.23567962646484
patch: Iterator iter = res . entries ( ) . iterator ( ) ; ) ;
rank: 302
score: 99.23512896369485
patch: Iterator iter = res . get ( this ) . entries . iterator ( ) ;
rank: 302
score: 99.2188491821289
patch: Iterator iter = res . iter ( ) : res . size ( ) ;
rank: 302
score: 99.21829986572266
patch: Iterator iter = entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 302
score: 99.21637517755681
patch: Iterator iter = res . entries ( res ) ;
rank: 302
score: 99.21123946340461
patch: for ( ) { iter = res . entries . entries . entries . iterator ( ) ;
rank: 302
score: 99.18537248883929
patch: Object [ ] iter = res . entries . iterator ( ) ;
rank: 303
score: 99.27994791666667
patch: Iterator < String > res = res . entries . iterator ( ) ;
rank: 303
score: 99.26371765136719
patch: Iterator iter = res . length . entries ( ) . entries ( ) ;
rank: 303
score: 99.25564575195312
patch: Iterator iter = res . entries . iterator ( ) ; iterator < ) ;
rank: 303
score: 99.23484108664773
patch: Iterator iter = res . for . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 303
score: 99.21608664772727
patch: Iterator iter = res ) . iterator ( ) ;
rank: 303
score: 99.2110824584961
patch: Iterator iter = res . entries . entries . iterator ( ) ; while (
rank: 303
score: 99.18483479817708
patch: Iterator iter = res . class . iterator ( ) ;
rank: 304
score: 99.27984619140625
patch: Iterator < String > iter = res . entries . iterator ( ) ; }
rank: 304
score: 99.26369222005208
patch: Iterator iter = v . entries . entries ( ) ;
rank: 304
score: 99.2555643717448
patch: iter iter = res . entries . iterator ( ) ;
rank: 304
score: 99.23466352982955
patch: iter = res . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 304
score: 99.2180404663086
patch: Iterator iter = res . join ( ) . entries . iterator ( ) ;
rank: 304
score: 99.21605009191177
patch: Iterator iter = res . iterator ( res . size ( ) - 1 ) ;
rank: 304
score: 99.21006266276042
patch: Iterator iter += res . entries . iterator ( ) ;
rank: 304
score: 99.18447043678977
patch: Iterator iter = entries . iterator ( ) ; }
rank: 305
score: 99.27952357700893
patch: Iterator iter = res . entries . iterator ( ) - 0 ;
rank: 305
score: 99.26286764705883
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; *
rank: 305
score: 99.23518880208333
patch: Iterator iter = res . entries . copy ( ) ;
rank: 305
score: 99.2321444424716
patch: Iterator iter = res . key . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 305
score: 99.21584647042411
patch: / * Iterator iter = res . iterator . iterator ( ) ;
rank: 305
score: 99.209716796875
patch: Iterator iter >> iter = res . entries . iterator ( ) ;
rank: 306
score: 99.27923583984375
patch: Iterator iter = res . entries ( ) . iterator ( ) ; res . iterator ( ) ;
rank: 306
score: 99.25540597098214
patch: Iterator iter Iterator iter = res . entries . iterator ( ) ;
rank: 306
score: 99.23511555989583
patch: int < ] > iter = res . entries . iterator ( ) ;
rank: 306
score: 99.23208220108695
patch: Iterator iter = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) ) {
rank: 306
score: 99.2151630108173
patch: Iterator < T > iter = v . iterator ( ) ;
rank: 306
score: 99.2094393643466
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > iter ;
rank: 306
score: 99.18428257533482
patch: Iterator iter = res . load ( ) . entries ( ) ;
rank: 307
score: 99.27921549479167
patch: final Iterator iter = res . iterator ( ) . iterator ( ) ;
rank: 307
score: 99.2552020733173
patch: Iterator < ) = res . entries . iterator ( ) ;
rank: 307
score: 99.23426729090073
patch: Iterator iter = res . entries ( ) . replace CaMeL All ( $STRING$ ) ;
rank: 307
score: 99.23182678222656
patch: Object [ ] entries = res . entries . to CaMeL Array ( ) ;
rank: 307
score: 99.21505301339286
patch: Iterator iter = res . entries ( . size ( ) ) ;
rank: 307
score: 99.20915141858552
patch: Iterator < float [ ] > iter = res . entries . entries . iterator ( ) ;
rank: 308
score: 99.2788947610294
patch: Iterator < Thread > iter = res . entries ( ) . iterator ( ) ;
rank: 308
score: 99.23368072509766
patch: Iterator iter = res . entries ( ) ; iterator . next ( ) ;
rank: 308
score: 99.21693638392857
patch: int [ ] res = new int [ v . length ] ;
rank: 308
score: 99.21456298828124
patch: if ( res != null ) res . res = res . entries . get ( 0 ) ;
rank: 308
score: 99.20854356553819
patch: for ( int Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) {
rank: 308
score: 99.18422037760416
patch: Iterator iter = res . entries . iterator ( ) ; return null ;
rank: 309
score: 99.25343424479166
patch: Iterator iter = res . load ( res . iterator ( ) ) ;
rank: 309
score: 99.2336784811581
patch: Iterator < String > iter = res . entries ( ) . entries ( ) ;
rank: 309
score: 99.21616908482143
patch: Iterator iter = res . join ( ) . iterator ( ) ;
rank: 309
score: 99.2159652709961
patch: Iterator iter = res . contains ( ) + v . size ( ) ;
rank: 310
score: 99.27869370404412
patch: Iterator < Object > iterator = res . entries ( ) . iterator ( ) ;
rank: 310
score: 99.25337727864583
patch: Iterator iter = res . iterator ( ) ; . iterator ( ) ;
rank: 310
score: 99.23351236979167
patch: Iterator < ] > iter = res . entries . size ( ) ;
rank: 310
score: 99.23116932744566
patch: Iterator iter = v . iterator ( ) ; while ( iter . ; iter . has CaMeL Next ( ) )
rank: 310
score: 99.21590423583984
patch: Iterator iter = res . entries . index CaMeL Of ( - 1 ) ;
rank: 310
score: 99.20762005974265
patch: Iterator < Class > iter = res . entries . entries . iterator ( ) ;
rank: 310
score: 99.1837158203125
patch: int iter = res . entries . entries . size ( ) ;
rank: 311
score: 99.27820638020833
patch: Iterator < Number > iter = res . entries . iterator ( ) ;
rank: 311
score: 99.2608154296875
patch: Iterator iter = this . ( ) . entries . iterator ( ) ;
rank: 311
score: 99.23272346047794
patch: Iterator iter = res . entries . iterator ( ) ; int iter = 0 ;
rank: 311
score: 99.23108440896739
patch: Iterator iter = res . split . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 311
score: 99.21576690673828
patch: Iterator iter = res . min . entries . entries . iterator ( ) ;
rank: 311
score: 99.21531459263393
patch: Iterator iter = res . size ( ) : res . length ;
rank: 311
score: 99.21352713448661
patch: Iterator iter = res . iterator ( . iterator ( ) ) ;
rank: 311
score: 99.20753309461806
patch: for ( } Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) {
rank: 311
score: 99.18349045973558
patch: Iterator iter = v . entries . iterator ( ) ; ;
rank: 312
score: 99.27808227539063
patch: final Iterator < String > iter = res . entries . entries ( ) . iterator ( ) ;
rank: 312
score: 99.25266927083334
patch: Iterator < Entry > iter = res . entries . entries ( ) ;
rank: 312
score: 99.23064864309211
patch: iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 312
score: 99.21563720703125
patch: Iterator iter = res . entries / this . entries . iterator ( ) ;
rank: 312
score: 99.2151870727539
patch: Iterator iter = res . advance ( ) : res . size ( ) ;
rank: 312
score: 99.21329752604167
patch: System . arraycopy ( v , 0 , res , 0 , res . length ) ;
rank: 312
score: 99.1832275390625
patch: Iterator iter = res . res . entries . iterator ( ) ; ;
rank: 313
score: 99.2769287109375
patch: final Iterator iterator = res . entries ( ) . iterator ( ) ;
rank: 313
score: 99.25253475413604
patch: Iterator iter = res . entries . reverse ( res . entries ( ) ) ;
rank: 313
score: 99.21311848958334
patch: Iterator < Integer > iter = res . iterator . iterator ( ) ;
rank: 313
score: 99.20623016357422
patch: Iterator iter && res . iterator ( ) . has CaMeL Next ( ) ;
rank: 313
score: 99.18274797712054
patch: Iterator iter = res . decode ( ) . iterator ( ) ;
rank: 314
score: 99.27686656605114
patch: Iterator iter = res . iterator ( ) ; else
rank: 314
score: 99.2521728515625
patch: Iterator iter = res . entries . iterator ( ) ; iter -- ;
rank: 314
score: 99.23161046645221
patch: synchronized ( res ) { Iterator iter = res . map . iterator ( ) ;
rank: 314
score: 99.21469116210938
patch: Iterator iter = name . entries . iterator ( ) ;
rank: 314
score: 99.21451568603516
patch: Iterator iter = res . entries . entries . entries . next ( ) ;
rank: 314
score: 99.21307779947917
patch: Iterator iter = res . entries ( entries ) . iterator ( ) ;
rank: 314
score: 99.2060546875
patch: data = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 315
score: 99.27636000689338
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ) ;
rank: 315
score: 99.25143868582589
patch: Iterator iter = new Iterator ( res . entries ( ) ) ;
rank: 315
score: 99.23155975341797
patch: Iterator iter = res . entries . iterator ( ) ; int < ] :
rank: 315
score: 99.22970448369566
patch: Iterator iter = res . list . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 315
score: 99.2146728515625
patch: Iterator iter = Math . iterator ( res . size ( ) ) ;
rank: 315
score: 99.21280110677084
patch: Iterator iter = v . iterator ( res . entries ( ) ) ;
rank: 315
score: 99.18187604631696
patch: Iterator iter = res . copy . entries . iterator ( ) ;
rank: 316
score: 99.27614874588816
patch: if ( res . entries != null ) iter = res . entries . iterator ( ) ;
rank: 316
score: 99.21420288085938
patch: Iterator iter = res . get CaMeL Format ( ) . entries ( ) ;
rank: 316
score: 99.21240234375
patch: Collection iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 316
score: 99.20572060032895
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries ( ) ;
rank: 316
score: 99.18152727399554
patch: Iterator iter = v . clone ( ) . iterator ( ) ;
rank: 317
score: 99.251220703125
patch: Iterator iter = res . iterator ( ) ; iterator ++ ;
rank: 317
score: 99.23051901424633
patch: Iterator < ] > iter = res . entries ( ) . entries ( ) ;
rank: 317
score: 99.22913411458333
patch: Iterator iter = res . iterator ( ) ; while ( iter . )
rank: 317
score: 99.21410369873047
patch: Iterator iter = res . map . entries . entries . iterator ( ) ;
rank: 317
score: 99.2122802734375
patch: if ( v != null ) res . entries . add ( res ) ;
rank: 317
score: 99.2048572358631
patch: Iterator iter = ( Open CaMeL Map CaMeL Real CaMeL Vector ) this . res . iterator ( ) ;
rank: 318
score: 99.27539934430804
patch: Iterator iter = res . entries . size ( ) - 1 ;
rank: 318
score: 99.25851004464286
patch: Iterator iter = iter . entries ( ) . entries ( ) ;
rank: 318
score: 99.25075120192308
patch: Iterator iter = ( Iterator ) res . next ( ) ;
rank: 318
score: 99.22910378196023
patch: Iterator iter = res . list . iter ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 318
score: 99.21406773158482
patch: Iterator iter = $NUMBER$ : res . entries . iterator ( ) ;
rank: 318
score: 99.21224975585938
patch: Iterator iter = res . entries ( ) ; if ( iter . has CaMeL Next ( ) )
rank: 318
score: 99.17992292131696
patch: Iterator iter = res . set . entries . iterator ( ) ;
rank: 319
score: 99.2750179893092
patch: Iterator < String > iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 319
score: 99.25824737548828
patch: Iterator iter = res . length = res . entries . iterator ( ) ;
rank: 319
score: 99.22907366071429
patch: Iterator iter = res . iterator ( ) ; while ( res . has CaMeL Next ( ) ) {
rank: 319
score: 99.21202895220588
patch: synchronized ( res . entries ) { Iterator iter = res . iterator ( ) ;
rank: 319
score: 99.21100725446429
patch: Iterator iter < Object > iter = res . iterator ( ) ;
rank: 319
score: 99.17977201021634
patch: Iterator iter = this . entries . iterator ( ) ; ;
rank: 320
score: 99.24910191127232
patch: Iterator iter = res . entries . iterator ( ) ; / /
rank: 320
score: 99.21148071289062
patch: if ( res != null ) res . res = res . entries . entries . iterator ( )
rank: 321
score: 99.27477309283088
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; else
rank: 321
score: 99.25798797607422
patch: Iterator iter = res [ iter . length 0 ] . iterator ( ) ;
rank: 321
score: 99.2286709872159
patch: Iterator iter = res . list . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 321
score: 99.21214294433594
patch: Iterator iter = res != null ? res . entries . iterator ( ) ;
rank: 321
score: 99.21148071289062
patch: Iterator entries = res . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 321
score: 99.21007361778847
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector
rank: 321
score: 99.1794903094952
patch: Iterator iter = ( Iterator ) res . size ( ) ;
rank: 322
score: 99.27439778645834
patch: Iterator < Iterator > iter = res . entries . iter ( ) ;
rank: 322
score: 99.25782063802083
patch: Iterator iter = res . entries . . entries . iterator ( ) ;
rank: 322
score: 99.24838692801339
patch: Iterator iter = res . entries . map . iterator ( ) ;
rank: 322
score: 99.22880045572917
patch: Iterator iter = res . entries . trim ( ) ;
rank: 322
score: 99.22843424479167
patch: Iterator iter = iter . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 322
score: 99.20285866477273
patch: Iterator iter = ! res . iterator ( ) ;
rank: 322
score: 99.17937762920673
patch: while ( res . has CaMeL Next ( ) ) { {
rank: 323
score: 99.2568359375
patch: Iterator iter = v [ iter . iterator ( ) ] ;
rank: 323
score: 99.24734933035714
patch: Iterator iter = res . entries . iterator ( ) ; ) ;
rank: 323
score: 99.22821599786931
patch: Iterator iter = v . length . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 323
score: 99.21160888671875
patch: Iterator iter = res . entries . substring ( ) . iterator ( ) ;
rank: 323
score: 99.2112808227539
patch: do { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 323
score: 99.20255126953126
patch: Iterator iter = res . entries . length ; while ( iter . has CaMeL Next ( ) )
rank: 323
score: 99.17877666766827
patch: Iterator iter = ! res . has CaMeL Next ( ) ;
rank: 324
score: 99.27384730747768
patch: Iterator iter = copy . entries ( ) . iterator ( ) ;
rank: 324
score: 99.25666046142578
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = iter . advance ( ) ;
rank: 324
score: 99.24700520833333
patch: Iterator iter = this . res . entries . iterator ( ) ; ;
rank: 324
score: 99.22819718070652
patch: for ( int iterator = res . entries . size ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 324
score: 99.22782759232955
patch: Iterator iter = res . entries ( false ) ;
rank: 324
score: 99.211181640625
patch: synchronized ( this ) { Iterator iter = res . iterator ( ) ;
rank: 324
score: 99.20250701904297
patch: for ( } Open CaMeL Map CaMeL Real CaMeL Vector res : res ) {
rank: 324
score: 99.17867337740384
patch: Iterator > iter = res . entries . iterator ( ) ;
rank: 325
score: 99.2725471047794
patch: Iterator < Iterator > iterator = res . entries ( ) . iterator ( ) ;
rank: 325
score: 99.25663539341518
patch: Iterator iter = res . entries . get . iterator ( ) ;
rank: 325
score: 99.24660357306985
patch: Iterator iter = ( Iterator ) res . entries ( ) . entries ( ) ;
rank: 325
score: 99.22804953835227
patch: Iterator iter = get . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 325
score: 99.22728729248047
patch: Iterator iter = res . entries . iterator = res . entries ( ) ;
rank: 325
score: 99.21098889802632
patch: if ( res != null ) res . res = res . entries . get ( ) ;
rank: 325
score: 99.17862374441964
patch: Iterator iter = v . copy ( ) . iterator ( ) ;
rank: 326
score: 99.27245279947917
patch: this . res . iterator = res . entries . iterator ( ) ;
rank: 326
score: 99.25651550292969
patch: Iterator iter = res . length : v . entries . iterator ( ) ;
rank: 326
score: 99.24641927083333
patch: Iterator iter = $STRING$ . iter ( res . iterator ( ) ) ;
rank: 326
score: 99.2277599516369
patch: Iterator iter = v . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 326
score: 99.21083984375
patch: Collection iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 326
score: 99.20760345458984
patch: Iterator iter = v . iterator ( ) : res . size ( ) ;
rank: 326
score: 99.20216471354166
patch: Iterator iter = ! this . res . entries . iterator ( ) ;
rank: 326
score: 99.17859758649554
patch: Iterator iter = res . log . entries . iterator ( ) ;
rank: 327
score: 99.27220916748047
patch: boolean iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 327
score: 99.25650787353516
patch: Iterator iter = v == null : res . entries . iterator ( ) ;
rank: 327
score: 99.2462158203125
patch: Iterator iter = res . entries . iterator ( ) ; iterator = false ;
rank: 327
score: 99.22748357599431
patch: Vector iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 327
score: 99.226953125
patch: Iterator < ] > iter = res . value . iterator ( ) ;
rank: 327
score: 99.21115112304688
patch: List iter = res . entries . entries . entries . iterator ( ) ;
rank: 327
score: 99.21072387695312
patch: List iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 327
score: 99.17850435697116
patch: Iterator iter = res [ ) . size ( ) ] ;
rank: 328
score: 99.27154541015625
patch: final Iterator < Throwable > iter = res . entries . iterator ( ) ;
rank: 328
score: 99.24610188802083
patch: Iterator iter = res . iterator ( ) ; Iterator iter = 0 ;
rank: 328
score: 99.22679850260417
patch: Iterator < ] > iter = res . map . iterator ( ) ;
rank: 328
score: 99.21017252604166
patch: res . res = res . entries . entries . size ( ) ;
rank: 328
score: 99.20620727539062
patch: Iterator iter = v . iterator ( ) : res . iterator ( ) ;
rank: 328
score: 99.20188275505515
patch: Iterator < Real CaMeL Vector > iter = v . entries . iterator ( ) ;
rank: 328
score: 99.1783447265625
patch: int < String > res = res . entries . iterator ( ) ;
rank: 329
score: 99.27046926398026
patch: Iterator < Iterator < ? > iter = res . entries ( ) . iterator ( ) ;
rank: 329
score: 99.24588775634766
patch: Iterator iter = res . entries . iterator ( ) ; iterator = ) ;
rank: 329
score: 99.22688373766448
patch: Iterator iter = Math . max ( 0 , res . entries . size ( ) ) ;
rank: 329
score: 99.22676908052884
patch: final int iterator = res . entries . iterator ( ) ;
rank: 329
score: 99.21090698242188
patch: Iterator iter = res . entries . name ( ) . iterator ( ) ;
rank: 329
score: 99.2058334350586
patch: Iterator iter = res . iter . next ( ) . iterator ( ) ;
rank: 330
score: 99.27019186580883
patch: Iterator < Boolean > iter = res . entries ( ) . iterator ( ) ;
rank: 330
score: 99.25578308105469
patch: Iterator iter = res . entries . length . entries . iterator ( ) ;
rank: 330
score: 99.24574381510416
patch: Iterator < ? > iter = res . entries . entries ( ) ;
rank: 330
score: 99.2268597146739
patch: Iterator iter = res . entries . iterator ( ) ) ; while ( iter . has CaMeL Next ( ) )
rank: 330
score: 99.22658404181985
patch: synchronized ( res ) { Iterator iter = res . entries . entries ( ) ;
rank: 330
score: 99.20857238769531
patch: if ( res != res . entries . size ( ) ) return res ;
rank: 330
score: 99.177734375
patch: Iterator iter = res . [ ) . iterator ( ) ] ;
rank: 331
score: 99.2701416015625
patch: Iterator < String > iter = res . entries ( ) . size ( ) ;
rank: 331
score: 99.25454532398896
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( res ) ;
rank: 331
score: 99.2265853881836
patch: Math . max ( 0 , res . entries . size ( ) ) ;
rank: 331
score: 99.22644981971153
patch: final int iter = res . entries . size ( ) ;
rank: 331
score: 99.21048736572266
patch: Iterator iter = res . v . entries ( ) . size ( ) ;
rank: 331
score: 99.20856119791667
patch: final Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 331
score: 99.20540677584134
patch: Iterator iter = res . index CaMeL Of ( $NUMBER$ ) ;
rank: 331
score: 99.20152064732143
patch: Iterator < double [ ] > iter = res . entries . entries . entries . iterator ( ) ;
rank: 331
score: 99.1771240234375
patch: Iterator iter = iterator . has CaMeL Next ( ) ;
rank: 332
score: 99.25410012637867
patch: Iterator iter = res . entries ( ) [ 1 ] . iterator ( ) ;
rank: 332
score: 99.24515787760417
patch: / iter = res . entries . iterator ( ) ;
rank: 332
score: 99.22642211914062
patch: System . arraycopy ( res . entries , 0 , res . entries , res . size ) ;
rank: 332
score: 99.2085430438702
patch: iter = res . entries ( ) . iterator ( ) ;
rank: 332
score: 99.17708914620536
patch: Iterator iter = res . entries . size ( ) ; for (
rank: 333
score: 99.2696533203125
patch: final int [ ] iter = res . entries . iterator ( ) ;
rank: 333
score: 99.25386810302734
patch: Iterator iter = res . entries ( ) == null . iterator ( ) ;
rank: 333
score: 99.2262432391827
patch: Iterator < ] > entries = res . iterator ( ) ;
rank: 333
score: 99.22556374289773
patch: Iterator list = res . list . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 333
score: 99.20521036783855
patch: Iterator iter = in . entries . iterator ( ) ;
rank: 333
score: 99.20115260074013
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this . res . entries ) {
rank: 333
score: 99.17625209263393
patch: Iterator iter = res . matches ( ) . iterator ( ) ;
rank: 334
score: 99.24457194010417
patch: Iterator iter = res . get ( entries . iterator ( ) ) ;
rank: 334
score: 99.22552490234375
patch: System . arraycopy ( res , 0 , res . entries , 0 , res . size ) ;
rank: 334
score: 99.22541155133929
patch: Iterator * ] list = res . entries . iterator ( ) ;
rank: 334
score: 99.20927429199219
patch: Iterator iter = res . entries . entries . iterator ( ) ( ) ;
rank: 334
score: 99.20822625411184
patch: synchronized ( this ) { Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 334
score: 99.20503997802734
patch: Iterator iter = res . iter ( ) : res . iterator ( ) ;
rank: 334
score: 99.200927734375
patch: Iterator < String > entries = res . entries . entries . iterator ( ) ;
rank: 334
score: 99.17594770951705
patch: final Iterator iter = entries . iterator ( ) ;
rank: 335
score: 99.2683967141544
patch: Iterator < res > iter = res . entries ( ) . iterator ( ) ;
rank: 335
score: 99.25331744025735
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( v ) ;
rank: 335
score: 99.24454991957721
patch: Iterator iter = res . length ; Iterator iter = res . iterator ( ) ;
rank: 335
score: 99.22532301682692
patch: Iterator < ] >> iter = res . entries ( ) ;
rank: 335
score: 99.22494506835938
patch: System . arraycopy ( v , 0 , res . entries , 0 , v . length ) ;
rank: 335
score: 99.20884486607143
patch: Iterator iter = res . format . entries . iterator ( ) ;
rank: 335
score: 99.2080810546875
patch: Iterator iter = res . Iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 335
score: 99.20448608398438
patch: Iterator iter = res . length ( ) ;
rank: 335
score: 99.17571614583333
patch: Iterator iter = res . entries . iterator ( ) ; for ( (
rank: 336
score: 99.26768275669643
patch: Iterator iter = res . iterator ( ) ; else return null ;
rank: 336
score: 99.25292205810547
patch: Iterator iter = list . entries . entries ( ) . iterator ( ) ;
rank: 336
score: 99.24444173177083
patch: Iterator iter . Iterator iter = res . entries . iterator ( ) ;
rank: 336
score: 99.22516632080078
patch: synchronized ( res ) { res . iterator ( ) . iterator ( ) ;
rank: 336
score: 99.22477416992187
patch: Iterator iter = size . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 336
score: 99.208056640625
patch: Iterator iter = res . entries ( ) ; while ( res . has CaMeL Next ( ) )
rank: 336
score: 99.20384114583334
patch: Iterator iter = res . remove ( $STRING$ ) . iterator ( ) ;
rank: 336
score: 99.1997314453125
patch: Iterator iter = res . entries . entries . iterator ( ) ; iterator . advance ( ) ;
rank: 336
score: 99.17526479867789
patch: Iterator iter = entries . entries . iterator ( ) ; ;
rank: 337
score: 99.24430338541667
patch: Iterator iter = res . entries . = res . entries ( ) ;
rank: 337
score: 99.22456577845982
patch: try { Iterator iter = res . list . iterator ( ) ;
rank: 337
score: 99.22434895833334
patch: int < ] > entries = res . entries . iterator ( ) ;
rank: 337
score: 99.20785361842105
patch: if ( res . entries == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 337
score: 99.20293317522321
patch: Iterator iter < String > iter = res . iterator ( ) ;
rank: 337
score: 99.17462158203125
patch: Iterator iter = res . advance . iterator ( ) ;
rank: 338
score: 99.2669677734375
patch: final int size = res . iterator ( ) . iterator ( ) . size ( ) ;
rank: 338
score: 99.25277709960938
patch: Iterator iter = ( res . entries ( ) ) . iterator ( ) ;
rank: 338
score: 99.22442626953125
patch: System . arraycopy ( res . entries . size ( ) , 0 , res . entries ) ;
rank: 338
score: 99.22430013020833
patch: Iterator < E > iterator = res . entries . iterator ( ) ;
rank: 338
score: 99.2078628540039
patch: Iterator iter = res . get CaMeL Type ( ) . entries ( ) ;
rank: 338
score: 99.20770584909539
patch: Iterator iter = res . entries ( ) ; Iterator iter = res . iterator ( ) ;
rank: 338
score: 99.17409057617188
patch: Iterator iter = res . advance ( ) ;
rank: 339
score: 99.2666748046875
patch: Iterator < int > iterator = res . entries . iterator ( ) ;
rank: 339
score: 99.25267791748047
patch: Iterator iter = ebe CaMeL Divide . entries . entries . iterator ( ) ;
rank: 339
score: 99.24356282552084
patch: iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 339
score: 99.19929055606617
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this . res ) {
rank: 339
score: 99.1738993326823
patch: Iterator iter = res . SIZE . iterator ( ) ;
rank: 340
score: 99.26642204733456
patch: final boolean iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 340
score: 99.25265682444854
patch: Iterator iter = res . entries ( ) . entries ( ) [ 0 ] ;
rank: 340
score: 99.22416381835937
patch: synchronized ( res ) { res . entries = res . entries . entries . iterator ( ) ;
rank: 340
score: 99.22312709263393
patch: Iterator end = res . entries ( ) . iterator ( ) ;
rank: 340
score: 99.20718204273896
patch: Iterator iter ; Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 340
score: 99.19921875
patch: Iterator iter = res . entries [ res . length ] . iterator ( ) ;
rank: 340
score: 99.17367350260416
patch: Iterator iter = res . res . entries . iterator ( ) ; }
rank: 341
score: 99.26600748697916
patch: if ( res != null ) iter = res . entries ( ) ;
rank: 341
score: 99.24310661764706
patch: Iterator iter = null ; Iterator iter = res . entries . iterator ( ) ;
rank: 341
score: 99.22412719726563
patch: System . arraycopy ( v , 0 , res . entries , 0 , res . length ) ;
rank: 341
score: 99.22291782924107
patch: Iterator iter = res . delete ( ) . iterator ( ) ;
rank: 341
score: 99.20581817626953
patch: for ( Iterator iter = res . entries ( ) . size ( ) ;
rank: 341
score: 99.19921061197917
patch: Iterator iter = res . split ( 1 ) . iterator ( ) ;
rank: 341
score: 99.19871761924342
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = iter . iterator ( ) ;
rank: 342
score: 99.2225341796875
patch: Iterator [ ] res = res . entries ( ) ;
rank: 342
score: 99.20650906032986
patch: if ( res != null ) res . ) res . res = res . entries ;
rank: 342
score: 99.2056655883789
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( res , this ) ;
rank: 342
score: 99.19837535511364
patch: Iterator iter = res . entries . to CaMeL Array ( ) . entries ( ) . iterator ( ) ;
rank: 343
score: 99.25187683105469
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( res , v . length ) ;
rank: 343
score: 99.24251615084134
patch: Iterator iter iterator = res . entries . iterator ( ) ;
rank: 343
score: 99.22383449388587
patch: Iterator iter = map . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 343
score: 99.22242024739583
patch: Iterator iter = res . entries ( 1 ) . next ( ) ;
rank: 343
score: 99.20645141601562
patch: if ( res . entries != null ) res . entries = res . entries . entries ; else
rank: 343
score: 99.197998046875
patch: final Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 343
score: 99.1714579264323
patch: Iterator iter = res . format . iterator ( ) ;
rank: 344
score: 99.2653449563419
patch: Iterator < Iterator > iter = res . entries ( ) . iter ( ) ;
rank: 344
score: 99.2513068704044
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = ebe CaMeL Divide ( this ) ;
rank: 344
score: 99.24242446001838
patch: Iterator iter = res . get . entries ( ) . iterator ( ) ; ;
rank: 344
score: 99.22333984375
patch: if ( v . length == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 344
score: 99.2062100497159
patch: Iterator iter = res . entries ( ) ; ;
rank: 344
score: 99.19795307360198
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries ( ) ;
rank: 345
score: 99.2653076171875
patch: Iterator < Exception > iter = res . entries . iterator ( ) ;
rank: 345
score: 99.2509536743164
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iter ( ) ;
rank: 345
score: 99.2421630859375
patch: Iterator iter = res . entries . iterator ( ) ; ) / /
rank: 345
score: 99.2232666015625
patch: Iterator iter = map . list . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 345
score: 99.20618489583333
patch: Iterator < res . length > iter = v . iterator ( ) ;
rank: 345
score: 99.2037841796875
patch: Iterator iter = res . add ( $STRING$ ) . iterator ( ) ;
rank: 345
score: 99.19772774832589
patch: Iterator iter += res . entries . entries . iterator ( ) ;
rank: 345
score: 99.1972900390625
patch: Iterator iter = res . get ( 1 ) . iterator ( ) ;
rank: 345
score: 99.17093331473214
patch: if ( res . entries . size ( ) > 0 ) {
rank: 346
score: 99.25086321149554
patch: Iterator iter = key . entries ( ) . iterator ( ) ;
rank: 346
score: 99.22149188701923
patch: Iterator < ] : res . entries . iterator ( ) ;
rank: 346
score: 99.20551500822368
patch: if ( v != null ) res . entries = res . entries . iterator ( ) ;
rank: 346
score: 99.20376790364584
patch: Iterator iter = res . entries . ( ) . iter ( ) ;
rank: 346
score: 99.19687069163604
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . iterator ( ) ;
rank: 347
score: 99.26294817243304
patch: final Iterator < String > iter = res . entries ( ) ;
rank: 347
score: 99.2504653930664
patch: Iterator iter = res . entries ( ) . entries . iter ( ) ;
rank: 347
score: 99.2403094951923
patch: final Iterator iter = res . entries . iter ( ) ;
rank: 347
score: 99.22296752929688
patch: int size = res . size ( ) ;
rank: 347
score: 99.22096761067708
patch: Iterator end = res . entries . iterator ( ) ;
rank: 347
score: 99.20517985026042
patch: Iterator iter = res . entries ( ) ; while . has CaMeL Next ( ) )
rank: 347
score: 99.19656192555146
patch: Iterator < Class < ? > iter = res . entries . iterator ( ) ;
rank: 347
score: 99.17075758713942
patch: Iterator < Object > iter = entries . iterator ( ) ;
rank: 348
score: 99.2629458778783
patch: final int entries = res . iterator ( ) . iterator ( ) . size ( ) ;
rank: 348
score: 99.22182829483695
patch: Iterator list = res . entries . iterator ( ) ; while ( list . has CaMeL Next ( ) ) {
rank: 348
score: 99.20421645220588
patch: if ( res != null ) . Iterator iter = res . iterator ( ) ;
rank: 348
score: 99.19645182291667
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( (
rank: 348
score: 99.17070661272321
patch: Iterator [ ] entries = res . entries . iterator ( ) ;
rank: 349
score: 99.239453125
patch: Iterator iter = entries . get ( res . iterator ( ) ) ;
rank: 349
score: 99.22131928943452
patch: Iterator iter = res . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 349
score: 99.22042846679688
patch: synchronized ( res ) { iter . iterator ( ) . iterator ( ) ;
rank: 349
score: 99.20354903371711
patch: if ( v != null ) { Iterator iter = res . entries . iterator ( ) ;
rank: 349
score: 99.20252227783203
patch: if ( res . length > 0 ) { res . advance ( ) ;
rank: 349
score: 99.1951904296875
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector >= iter = res . iterator ( ) ;
rank: 349
score: 99.17069498697917
patch: while ( entries . has CaMeL Next ( ) ) {
rank: 350
score: 99.26202392578125
patch: Iterator iter = res . entries , entries = res . iterator ( ) ;
rank: 350
score: 99.22128693953805
patch: Iterator iter = res . entries $NUMBER$ . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 350
score: 99.21942138671875
patch: int res . entries . iterator ( ) . iterator ( ) ;
rank: 350
score: 99.2035381610577
patch: Iterator iter = res . iterator ( res . length ) ;
rank: 350
score: 99.20243835449219
patch: Iterator iter = res . next ( ) . entries ( ) . length ;
rank: 350
score: 99.1947998046875
patch: Iterator < boolean >= iter = res . entries . iterator ( ) ;
rank: 350
score: 99.17063685825893
patch: Iterator iter = res . get CaMeL Type ( ) . length ;
rank: 351
score: 99.26199544270834
patch: Iterator < String > iter : res . entries . iterator ( ) ;
rank: 351
score: 99.22110648777173
patch: iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { )
rank: 351
score: 99.21941731770833
patch: Iterator iter ; int iter = res . entries . iterator ( ) ;
rank: 351
score: 99.20199381510416
patch: Iterator iter = res . entries . index CaMeL Of ( $NUMBER$ ) ;
rank: 351
score: 99.17047119140625
patch: Iterator iter = res . entries . clone ( ) ;
rank: 352
score: 99.22102494673295
patch: System . arraycopy ( v , 0 , res . entries , 0 , res . entries . length ) ;
rank: 352
score: 99.21941583806819
patch: final int iter = res . iterator ( ) ;
rank: 352
score: 99.20162963867188
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( v . length ) ;
rank: 352
score: 99.19417114257813
patch: Iterator iter = res . entries ( ) . Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 352
score: 99.16922433035714
patch: Iterator iter = res . map ( ) . iterator ( ) ;
rank: 353
score: 99.23781174879808
patch: Iterator iter . = res . entries . iterator ( ) ;
rank: 353
score: 99.20319281684027
patch: if ( res != null ) res . res = res . entries ( ) . ;
rank: 353
score: 99.19457135881696
patch: Iterator iter = res != null ? res . length : 1 ;
rank: 353
score: 99.19413452148437
patch: for ( int ) { iter = res . entries . entries . entries . iterator ( ) ;
rank: 353
score: 99.16888834635417
patch: Iterator iter = res . this . entries . iterator ( ) ; }
rank: 354
score: 99.2604118795956
patch: Iterator < / > iter = res . entries ( ) . iterator ( ) ;
rank: 354
score: 99.22010387073864
patch: for ( Iterator iter = v . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 354
score: 99.21891276041667
patch: Iterator iter = res . entries ( ) . parse ( res ) ;
rank: 354
score: 99.2025615985577
patch: Iterator iter = v [ entries . size ( ) ] ;
rank: 354
score: 99.20113118489583
patch: Iterator iter = res . format ( this ) . iterator ( ) ;
rank: 354
score: 99.19226946149554
patch: Iterator iter = res . entries / 1 . iterator ( ) ;
rank: 354
score: 99.16803850446429
patch: Iterator iter = v [ iter . has CaMeL Next ( ) ;
rank: 355
score: 99.25993077895221
patch: Iterator < void > iter = res . entries ( ) . iterator ( ) ;
rank: 355
score: 99.23724772135417
patch: Iterator < ) = res . entries ( ) . iterator ( ) ;
rank: 355
score: 99.21876627604166
patch: Iterator iter = res . load ( res . entries ( ) ) ;
rank: 355
score: 99.20091756184895
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 355
score: 99.19195556640625
patch: Iterator iter = res . [ iter . size ( ) ] ;
rank: 356
score: 99.24906652113971
patch: Iterator iter = res . entries ( ) . entries ( ) . iterator ( )
rank: 356
score: 99.21913840553977
patch: if ( res . length == res . length ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 356
score: 99.20225765830592
patch: Iterator iter = res . iterator ( ) ; 0 . = res . size ( ) ;
rank: 356
score: 99.20069231305804
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 356
score: 99.19293767755681
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > entries ;
rank: 356
score: 99.1917724609375
patch: Iterator iter = res . iter ( ) . iterator ( ) ;
rank: 356
score: 99.16727992466518
patch: Iterator iter = res . check CaMeL Vector CaMeL Dimensions ( ) ;
rank: 357
score: 99.24888392857143
patch: Iterator iter = res . iterator ( ) ; for ( for (
rank: 357
score: 99.2181396484375
patch: Iterator iter = res . entries ( - $NUMBER$ ) . entries ( ) ;
rank: 357
score: 99.20224338107639
patch: Iterator iter = v . iterator ( ) ; while . has CaMeL Next ( ) )
rank: 357
score: 99.16688889723558
patch: Iterator iter = res [ ) . iterator ( ) ] ;
rank: 358
score: 99.25951276506696
patch: Iterator iter = 0 + res . entries . iterator ( ) ;
rank: 358
score: 99.24852752685547
patch: Iterator iter = res . [ 1 ] . entries . iterator ( ) ;
rank: 358
score: 99.2189410665761
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ; )
rank: 358
score: 99.2178955078125
patch: int entries . iterator ( ) . iterator ( ) . size ( ) ;
rank: 358
score: 99.20208129882812
patch: List iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 358
score: 99.16658238002232
patch: Iterator iter = res . entries . contains . iterator ( ) ;
rank: 359
score: 99.25937228732639
patch: Iterator iter = res . entries != null ? res . iterator ( ) : null ;
rank: 359
score: 99.23574594350961
patch: Iterator iter = res . iterator ( ) ; return res ;
rank: 359
score: 99.21879308363971
patch: synchronized ( res ) { Iterator iter = res . list . iterator ( ) ;
rank: 359
score: 99.21783040364583
patch: Iterator iter = res . substring ( $NUMBER$ ) . iterator ( ) ;
rank: 359
score: 99.20165076622597
patch: Iterator iter = res . iterator . iterator ( ) ; ;
rank: 359
score: 99.19268120659723
patch: Iterator iter = res . entries . iterator ( ) ; has CaMeL Next ( ) ;
rank: 359
score: 99.18985748291016
patch: Iterator iter = res . size ( ) : iter . next ( ) ;
rank: 359
score: 99.16648646763393
patch: Iterator iter = res . load . entries . iterator ( ) ;
rank: 360
score: 99.24847412109375
patch: Iterator iter = this . res . entries . iterator ( ) ; for (
rank: 360
score: 99.23571014404297
patch: Iterator iter = res . length ; iterator = res . entries ( ) ;
rank: 360
score: 99.21854654947917
patch: Iterator iter = ( int [ ] ) res . clone ( ) ;
rank: 360
score: 99.21762084960938
patch: entries . put ( res . get CaMeL Name ( ) , res ) ;
rank: 360
score: 99.20014299665179
patch: if ( res . size ( ) > 0 ) return res ;
rank: 360
score: 99.19205050998264
patch: Iterator iter = res . length ; while ( iter . has CaMeL Next ( ) )
rank: 361
score: 99.23568725585938
patch: res . Iterator iter = res . iterator ( ) ;
rank: 361
score: 99.2182846069336
patch: synchronized ( this ) { iter = res . entries . iterator ( ) ;
rank: 361
score: 99.21759033203125
patch: int res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 361
score: 99.19989977384868
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) continue ;
rank: 361
score: 99.19188842773437
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector (
rank: 361
score: 99.18778773716518
patch: Iterator iter = res . index CaMeL Of ( - 1 ) ;
rank: 362
score: 99.25851779513889
patch: Iterator iter = res . entries . iterator ( ) ; while . . != null ;
rank: 362
score: 99.23509114583334
patch: Iterator iter = copy ( res . entries . iterator ( ) ) ;
rank: 362
score: 99.21825154622395
patch: Iterator iter = this . list . iterator ( ) ;
rank: 362
score: 99.21707153320312
patch: Iterator size = res . entries . iterator ( ) ;
rank: 362
score: 99.1985595703125
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 362
score: 99.19180733816964
patch: Iterator iter = super . entries . entries . iterator ( ) ;
rank: 362
score: 99.16548374720982
patch: Iterator iter = res . directory . entries . iterator ( ) ;
rank: 363
score: 99.25740814208984
patch: Iterator iter = res . entries ( ) . iterator ( ) - $NUMBER$ ;
rank: 363
score: 99.23484700520834
patch: Iterator iter = res . entries . iterator ( ) ; = 1 ;
rank: 363
score: 99.2181884765625
patch: synchronized ( res ) { res . entries = res . entries ; }
rank: 363
score: 99.21698869977679
patch: Iterator iter = res . entries ( ) . intern ( ) ;
rank: 363
score: 99.19955623851104
patch: Iterator iter = v . entries ( ) . iterator ( ) ; while ( )
rank: 363
score: 99.19822692871094
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( ) ;
rank: 363
score: 99.19062732514881
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) { iter . advance ( ) ;
rank: 363
score: 99.16519869290866
patch: if ( res != null ) res . advance ( ) ;
rank: 364
score: 99.25700827205883
patch: if ( res != null ) iter = res . entries . entries ( ) ;
rank: 364
score: 99.2481460571289
patch: Iterator iter = res . entries = res . entries . entries ( ) ;
rank: 364
score: 99.2179931640625
patch: Iterator iter = res ; Iterator iter = res . iterator ( ) ;
rank: 364
score: 99.2164776141827
patch: Iterator < String > entries = res . iterator ( ) ;
rank: 364
score: 99.1993408203125
patch: Iterator < ? extends E > iter = res . iterator ( ) ;
rank: 364
score: 99.19013214111328
patch: Iterator iter = res . entries [ iter . has CaMeL Next ( ) ;
rank: 364
score: 99.16496930803571
patch: Iterator iter = res . substring ( ) . iterator ( ) ;
rank: 365
score: 99.25566020764802
patch: boolean < ? > iter = res . entries . iterator ( ) . iterator ( ) ;
rank: 365
score: 99.23445347377232
patch: Iterator iter = new Object [ res . size ( ) ] ;
rank: 365
score: 99.2170177641369
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ;
rank: 365
score: 99.1989013671875
patch: Iterator iter = v . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 365
score: 99.19004128196023
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) . remove ( ) ;
rank: 365
score: 99.18639264787946
patch: Iterator iter = res [ ] . entries . iterator ( ) ;
rank: 365
score: 99.16459147135417
patch: Iterator iter = res . next ( ) . entries . ( ) ;
rank: 366
score: 99.24763488769531
patch: Iterator iter = res , iterator = res . entries . iterator ( ) ;
rank: 366
score: 99.23370768229167
patch: Iterator iter = res . get ( $NUMBER$ ) . iterator ( ) ;
rank: 366
score: 99.2168212890625
patch: Iterator iter = key . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 366
score: 99.19888070913461
patch: Object res = res . entries . get ( res ) ;
rank: 366
score: 99.16424091045673
patch: Iterator iter = res . sleep ( v . length ) ;
rank: 367
score: 99.25563151041666
patch: final Iterator iter = res . entries = res . entries ( ) ;
rank: 367
score: 99.24751281738281
patch: Iterator iter = res . entries . name . entries . iterator ( ) ;
rank: 367
score: 99.2335956280048
patch: Iterator iter = new ( res . iterator ( ) ) ;
rank: 367
score: 99.21678524925595
patch: Iterator iter = res 1 . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 367
score: 99.19866333007812
patch: if ( res != null ) res . Iterator iter = res . iterator . iterator ( ) ;
rank: 367
score: 99.18870907738095
patch: Iterator iter = . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 367
score: 99.18614705403645
patch: Iterator iter = Iterator . entries . iterator ( ) ;
rank: 367
score: 99.1635030110677
patch: Iterator iter = this . res . size ( ) ;
rank: 368
score: 99.25556640625
patch: Iterator < char > iter = res . entries . iterator ( ) ;
rank: 368
score: 99.21449381510416
patch: Iterator iter = res . entries ( $NUMBER$ ) . size ( ) ;
rank: 368
score: 99.19842850534539
patch: Iterator iter = v . entries ( ) ; while ( . has CaMeL Next ( ) )
rank: 368
score: 99.19599914550781
patch: Iterator iter = res . entries . to CaMeL Array ( ) . length ;
rank: 368
score: 99.1885986328125
patch: for ( int } Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) {
rank: 368
score: 99.16310337611607
patch: Iterator iter = v . next ( ) . entries ( ) ;
rank: 369
score: 99.25548598345588
patch: Iterator < ? > iter = res . entries ( ) . iter ( ) ;
rank: 369
score: 99.23307800292969
patch: Iterator iter = res . get CaMeL Entries ( ) . entries ( ) ;
rank: 369
score: 99.21265520368304
patch: Iterator 1 = res . entries ( ) . iterator ( ) ;
rank: 369
score: 99.19773512620192
patch: Iterator iter = v [ res . length - 1 ] ;
rank: 369
score: 99.18853759765625
patch: Object [ ] res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 370
score: 99.25506950827206
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; }
rank: 370
score: 99.24656767003677
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . iterator ( v ) ;
rank: 370
score: 99.21616908482143
patch: Iterator iter = res . list ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 370
score: 99.1974365234375
patch: if ( res . entries != null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 370
score: 99.19403839111328
patch: Iterator iter = res . has CaMeL Next ( ) + v . length ;
rank: 370
score: 99.18772536057692
patch: Iterator iter = res . entries [ v . length ] ;
rank: 370
score: 99.18531901041666
patch: Iterator iter = res . read ( 1 ) . iterator ( ) ;
rank: 371
score: 99.1974105834961
patch: if ( res != null ) res . set CaMeL Value ( $STRING$ ) ;
rank: 371
score: 99.19365234375
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( res , this ) ;
rank: 371
score: 99.18761488970588
patch: Iterator < double [ ] > iter = v . entries . iterator ( ) ;
rank: 371
score: 99.16258951822917
patch: Iterator iter = res . entries . iterator ( ) ; for ( else
rank: 372
score: 99.24525451660156
patch: Iterator iter : res . entries = res . entries . iterator ( ) ;
rank: 372
score: 99.21593128551136
patch: Iterator iter = key . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 372
score: 99.19707845052083
patch: try Iterator iter = res . entries ( ) . iterator ( ) ;
rank: 372
score: 99.19364420572917
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( v . length ) ;
rank: 372
score: 99.18745727539063
patch: Iterator iter : res . iterator ( ) ;
rank: 373
score: 99.23019409179688
patch: Iterator iter = res . entries . iterator ( ) ; iterator != null ;
rank: 373
score: 99.21551192434211
patch: Iterator iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 373
score: 99.21157836914062
patch: Iterator * ] entries = res . entries ( ) ;
rank: 373
score: 99.197021484375
patch: if ( v != null ) res . set CaMeL Value ( v ) ;
rank: 373
score: 99.18745561079545
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) . advance ( ) ;
rank: 373
score: 99.184326171875
patch: Iterator iter = res > this . entries . iterator ( ) ;
rank: 373
score: 99.1624043782552
patch: Iterator iter = res . data . size ( ) ;
rank: 374
score: 99.25318100873162
patch: Iterator < Character > iter = res . entries ( ) . iterator ( ) ;
rank: 374
score: 99.22964242788461
patch: Iterator iter = res . entries . iter ( ) ; ;
rank: 374
score: 99.19698936060855
patch: if ( res . entries != null ) res . res = res . entries . entries ;
rank: 374
score: 99.19245910644531
patch: Iterator iter = res . entries . [ ) . iterator ( ) ] ;
rank: 374
score: 99.16238839285714
patch: Object [ ] v = res . entries . size ( ) ;
rank: 375
score: 99.22941080729167
patch: Iterator iter = res . get ( null ) . iterator ( ) ;
rank: 375
score: 99.21518776633523
patch: Iterator iter = res . list . entries ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 375
score: 99.19684244791667
patch: Iterator iter = res . entries ( ) 1 . iterator ( ) ;
rank: 375
score: 99.18668989701705
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) res . set CaMeL Entry ( ) ;
rank: 375
score: 99.18212018694196
patch: Iterator iter = name . entries ( ) . iterator ( ) ;
rank: 376
score: 99.24401092529297
patch: Iterator iter = res != null * v . entries . iterator ( ) ;
rank: 376
score: 99.2150646391369
patch: Iterator iter = res . iterator ( ) ; while ( Iterator iter . has CaMeL Next ( ) )
rank: 376
score: 99.2098388671875
patch: Iterator iter = res . entries . remove ( null ) ;
rank: 376
score: 99.19231770833333
patch: Iterator iter = res . contains ( this ) + v . length ;
rank: 376
score: 99.18125697544643
patch: Iterator entries = res . entries ( ) . entries ( ) ;
rank: 377
score: 99.25264195033482
patch: final Iterator < Entry > iter = res . iterator ( ) ;
rank: 377
score: 99.229052734375
patch: Iterator iter = Math . list ( res . iterator ( ) ) ;
rank: 377
score: 99.21494838169643
patch: Iterator iter = v . entries ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 377
score: 99.20932442801339
patch: Iterator iter = new String [ res . size ( ) ] ;
rank: 377
score: 99.19231305803571
patch: Iterator iter = res . entries . 1 . iterator ( ) ;
rank: 377
score: 99.18645477294922
patch: for ( int Open CaMeL Map CaMeL Real CaMeL Vector res : res ) {
rank: 377
score: 99.16077532087054
patch: Iterator iter = res . random ( ) . iterator ( ) ;
rank: 378
score: 99.21488813920455
patch: Iterator iter = res . data . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 378
score: 99.20865071614584
patch: Iterator < T > iter = res . entries . entries ( ) ;
rank: 378
score: 99.1962531594669
patch: Iterator iter = res . entries ( ) [ res . size ( ) ] ;
rank: 378
score: 99.180908203125
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 378
score: 99.16058756510417
patch: Iterator iter = res . set CaMeL Value ( v . length ) ;
rank: 379
score: 99.24110412597656
patch: Vector entries = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 379
score: 99.228515625
patch: Iterator iter = res . replace ( res . iterator ( ) ) ;
rank: 379
score: 99.21469514266305
patch: final Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 379
score: 99.19583740234376
patch: Iterator iter = res . entries . iterator ( ) ; while . has CaMeL Next ( ) )
rank: 379
score: 99.19162423270089
patch: int [ ] v = new int [ v . length ] ;
rank: 379
score: 99.1858771829044
patch: Iterator < byte [ ] > iter = res . entries . iterator ( ) ;
rank: 379
score: 99.18055826822916
patch: Iterator iter = res . remove ( $NUMBER$ ) . iterator ( ) ;
rank: 379
score: 99.16033466045673
patch: Iterator iter = ( Iterator ) entries . iterator ( ) ;
rank: 380
score: 99.25243268694196
patch: Iterator < int 1 : res . entries . iterator ( ) ;
rank: 380
score: 99.2282485961914
patch: Iterator iter = res . entries . iterator ( ) ; iterator = 1 ;
rank: 380
score: 99.21458851207386
patch: Iterator iter = res . iterator ( ) ; ; finally { iter . has CaMeL Next ( ) ; }
rank: 380
score: 99.20729417067308
patch: Iterator < T > entries = res . entries ( ) ;
rank: 380
score: 99.19563802083333
patch: Object res = res . entries [ res . length - 1 ] ;
rank: 380
score: 99.16025216238839
patch: final iter = res . entries . entries . iterator ( ) ;
rank: 381
score: 99.25224866365132
patch: Iterator < String > iter = res . entries . entries ( ) . entries ( ) ;
rank: 381
score: 99.23911539713542
patch: Iterator iter = res == null . iterator ( ) ;
rank: 381
score: 99.22815880408653
patch: Iterator iter ( res . entries . iterator ( ) ) ;
rank: 381
score: 99.21378950639205
patch: Iterator iter = res . map . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 381
score: 99.20677897135417
patch: Iterator iter = res . entries ( 1 ) . entries ( ) ;
rank: 381
score: 99.19548483455883
patch: Iterator iter = v [ res . entries ( ) ] . iterator ( ) ;
rank: 381
score: 99.19112396240234
patch: if ( v . length > 0 ) { res . advance ( ) ;
rank: 381
score: 99.18525913783482
patch: for ( int ) { res . set CaMeL Entry ( ) ;
rank: 381
score: 99.17923409598214
patch: Object [ ] res = new int [ res . length ] ;
rank: 381
score: 99.16021728515625
patch: int res = iter . has CaMeL Next ( ) ;
rank: 382
score: 99.25215911865234
patch: Iterator < Object > iter = res . entries . iterator ( ) ; else
rank: 382
score: 99.23903401692708
patch: Iterator iter = iter . entries . iterator ( ) ;
rank: 382
score: 99.21354874320652
patch: Iterator iter = res . entries . iterator ( ) ; finally { iter . has CaMeL Next ( ) ; }
rank: 382
score: 99.2067009420956
patch: Iterator iter = res . replace ( $STRING$ , $STRING$ ) . iterator ( ) ;
rank: 382
score: 99.19476677389706
patch: Iterator iter = res [ res . size ( ) ] . iterator ( ) ;
rank: 382
score: 99.18479225852273
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries . iterator ( ) )
rank: 382
score: 99.17797037760417
patch: Iterator iter = res . read ( $STRING$ ) . iterator ( ) ;
rank: 382
score: 99.16013009207589
patch: else { Iterator iter = res . entries . iterator ( ) ;
rank: 383
score: 99.25166015625
patch: Iterator < ? > entries = res . entries . iterator ( ) ;
rank: 383
score: 99.22749328613281
patch: Iterator iter = res . entries . iterator ( ) ; iterator = true ;
rank: 383
score: 99.2133456143466
patch: System . arraycopy ( res . entries , 0 , res . list , 0 , res . size ) ;
rank: 383
score: 99.20650809151786
patch: Iterator iter = value . entries ( ) . iterator ( ) ;
rank: 383
score: 99.19410615808823
patch: Iterator < ? extends E > iter = res . entries . iterator ( ) ;
rank: 383
score: 99.17787388392857
patch: Iterator iter < String > iter = res . size ( ) ;
rank: 383
score: 99.1600341796875
patch: Iterator iter = res . load ( ) . size ( ) ;
rank: 384
score: 99.23704310825893
patch: Iterator iter = v . entries ( ) . iter ( ) ;
rank: 384
score: 99.21329398777173
patch: for ( Iterator iter = v . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 384
score: 99.20565091646634
patch: Iterator < ] > iter = res . size ( ) ;
rank: 384
score: 99.19408365885417
patch: res . entries = new Iterator [ res . size ( ) ] ;
rank: 384
score: 99.1845703125
patch: this . res . set CaMeL Entry ( iter . key ( ) , iter . value ( ) /
rank: 384
score: 99.17660319010416
patch: Iterator iter = res . read ( 0 ) . iterator ( ) ;
rank: 385
score: 99.25110677083333
patch: Iterator < int > iter = res . entries . size ( ) ;
rank: 385
score: 99.21316046463816
patch: Iterator iter = res . iterator ( ) ; while ( iter . has CaMeL Next ( )
rank: 385
score: 99.19376866957721
patch: Iterator iter = v [ entries . size ( ) ] . iterator ( ) ;
rank: 385
score: 99.18449964021382
patch: synchronized ( res ) { Iterator iter = res . entries . entries . iterator ( ) ;
rank: 385
score: 99.15923200334821
patch: Iterator iter = res . package . entries . iterator ( ) ;
rank: 386
score: 99.23597130408653
patch: Iterator iter = res [ $NUMBER$ ] . iterator ( ) ;
rank: 386
score: 99.21303923233695
patch: Iterator Iterator iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 386
score: 99.20472130408653
patch: Iterator < String >> iter = res . entries ( ) ;
rank: 386
score: 99.19366776315789
patch: Iterator iter = res . entries ( ) ; Iterator iter = v . iterator ( ) ;
rank: 386
score: 99.1890380859375
patch: Iterator iter = res . substring ( 1 ) . iterator ( ) ;
rank: 386
score: 99.18396577380952
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries ( ) ) {
rank: 387
score: 99.25017903645833
patch: Iterator < ? > iter = res . entries . size ( ) ;
rank: 387
score: 99.23579406738281
patch: Iterator iter = res . entries . entries ( ) . entries . length ;
rank: 387
score: 99.21286010742188
patch: Iterator list = res . entries . iterator ( ) ;
rank: 387
score: 99.20438058035714
patch: Iterator size = res . entries ( ) . iterator ( ) ;
rank: 387
score: 99.19295501708984
patch: if ( res . entries . size ( ) <= 0 ) return res ;
rank: 387
score: 99.18355066636029
patch: final Iterator iter = res . entries ( ) . entries . iterator ( ) ;
rank: 387
score: 99.17603410993304
patch: Iterator iter = res . trim ( ) . entries ( ) ;
rank: 388
score: 99.23528180803571
patch: int iter = this . res . entries . iterator ( ) ;
rank: 388
score: 99.21173095703125
patch: Iterator iter = size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 388
score: 99.19290364583334
patch: Iterator iter = res . entries ( entries . size ( ) ) ;
rank: 388
score: 99.17532348632812
patch: Iterator iter = value . entries . iterator ( ) ;
rank: 388
score: 99.15744454520089
patch: int [ ] v = res . entries . iterator ( ) ;
rank: 389
score: 99.24983484604779
patch: Iterator < ? > iterator = res . entries ( ) . iterator ( ) ;
rank: 389
score: 99.22580392020089
patch: Iterator iter . iterator = res . entries . iterator ( ) ;
rank: 389
score: 99.21143934461806
patch: Iterator iter = res ; while ( iter . has CaMeL Next ( ) ) { )
rank: 389
score: 99.19287109375
patch: Iterator iter = res . entries . iterator ( ) ; while ( ; )
rank: 389
score: 99.18291945684524
patch: Iterator < String > iter = res . entries . to CaMeL Array ( ) . iterator ( ) ;
rank: 390
score: 99.2497787475586
patch: Iterator iter = res . entries ( ) = res . entries ( ) ;
rank: 390
score: 99.21125594429348
patch: Iterator iter = res . set . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 390
score: 99.18225969587054
patch: Iterator iter = data . entries ( ) . iterator ( ) ;
rank: 390
score: 99.17238943917411
patch: Iterator iter = res . entries . iterator ( ) * $NUMBER$ ;
rank: 391
score: 99.24959309895833
patch: Iterator < int > entries = res . entries . iterator ( ) ;
rank: 391
score: 99.23455810546875
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector . length ;
rank: 391
score: 99.22462373621323
patch: Iterator iter = res . iterator ( ) ; Iterator iter . iterator ( ) ;
rank: 391
score: 99.2109042080966
patch: Iterator iter = res . iterator ( ) ; ; while ( iter . has CaMeL Next ( ) ) {
rank: 391
score: 99.20369175502232
patch: Iterator < ? ] : res . entries . iterator ( ) ;
rank: 391
score: 99.1924297626202
patch: Object res = res . entries . get ( $STRING$ ) ;
rank: 391
score: 99.18161908318015
patch: Iterator < Boolean > iter = res . entries . entries . iterator ( ) ;
rank: 392
score: 99.22391510009766
patch: Iterator iter = res . entries . iterator ( ) ; iter return res ;
rank: 392
score: 99.20365687779018
patch: / * ] iter = res . entries . iterator ( ) ;
rank: 392
score: 99.19239908854166
patch: Iterator iter = res 1 . entries ( ) . iterator ( ) ;
rank: 392
score: 99.18146110983456
patch: for ( int } Open CaMeL Map CaMeL Real CaMeL Vector res : res ) {
rank: 393
score: 99.248779296875
patch: if ( res != null ) res . remove ( res ) ;
rank: 393
score: 99.233447265625
patch: Iterator iter = res . entries . entries ( ) [ 1 ] ;
rank: 393
score: 99.21064976283482
patch: Iterator iter ; while ( iter . has CaMeL Next ( ) )
rank: 393
score: 99.20345633370536
patch: Iterator iter = res . entries . iterator ( ) ; else {
rank: 393
score: 99.1922966452206
patch: if ( res != null ) res . res = res . entries . ) ;
rank: 393
score: 99.18132672991071
patch: iterator = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 394
score: 99.24877251519098
patch: final Iterator < T > iter = res . entries ( ) . iterator ( ) ;
rank: 394
score: 99.21019897460937
patch: Iterator iter = res . entries ; while ( iter . has CaMeL Next ( ) ) { )
rank: 394
score: 99.20340983072917
patch: for ( Iterator iter = res . entries . iterator ( ) ; }
rank: 394
score: 99.19228515625
patch: Iterator < Iterator < E > iter = res . iterator ( ) ;
rank: 394
score: 99.1851806640625
patch: Iterator iter = v . entries . ( ) . iterator ( ) ;
rank: 394
score: 99.18101099917763
patch: Iterator < String > iter = res . entries ( ) . entries . iterator ( ) ;
rank: 395
score: 99.23134940011161
patch: Iterator iter = res . entries . size . iterator ( ) ;
rank: 395
score: 99.22378540039062
patch: Iterator iter = res . iterator ( ) ; ) ;
rank: 395
score: 99.2097900390625
patch: iter = new Iterator ( res . entries . iterator ( ) ) ;
rank: 395
score: 99.19220733642578
patch: Iterator iter = res . entries ( ) . iterator ( ) ; null ;
rank: 395
score: 99.18501790364583
patch: it = new Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 395
score: 99.17150006975446
patch: Iterator iter = v . remove ( ) . iterator ( ) ;
rank: 395
score: 99.15474243164063
patch: Iterator res = res . iterator ( ) ;
rank: 396
score: 99.22320087139423
patch: Iterator iter = res . entries . iterator ( ) ; iter
rank: 396
score: 99.20977228338069
patch: Iterator map = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 396
score: 99.19187825520834
patch: Iterator iter = v . entries ( ) . iterator ( ) ) ;
rank: 396
score: 99.17129720052084
patch: Iterator iter = res . add ( iter . next ( ) ) ;
rank: 396
score: 99.15472412109375
patch: Iterator iter = res . entries . iterator ( ) ; ; ;
rank: 397
score: 99.24821202895221
patch: Iterator < Object > iter = res . entries = res . iterator ( ) ;
rank: 397
score: 99.23091394761029
patch: Iterator iter = res [ iter . length - 1 ] . iterator ( ) ;
rank: 397
score: 99.22308349609375
patch: / ; Iterator iter = res . iterator ( ) ;
rank: 397
score: 99.2097500887784
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) ; )
rank: 397
score: 99.20316569010417
patch: Iterator iter = data . entries . size ( ) ;
rank: 397
score: 99.19155401932566
patch: if ( res != null ) { res . entries = res . entries . entries ; }
rank: 397
score: 99.1802469889323
patch: if ( res . size ( ) > 0 ) {
rank: 397
score: 99.17116873604911
patch: Iterator iter = res . iterator ( ) : res . length ;
rank: 397
score: 99.15461948939732
patch: Iterator iter = res . next ( ) . entries . length ;
rank: 398
score: 99.2473876953125
patch: Iterator < byte > iter = res . entries . iterator ( ) ;
rank: 398
score: 99.2227783203125
patch: Iterator iter = res . entries . iterator ( ) ; iterator else ;
rank: 398
score: 99.20958941915761
patch: Iterator iter = res . get CaMeL Entries ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 398
score: 99.20209099264706
patch: synchronized ( res ) { int iter = res . entries . iterator ( ) ;
rank: 398
score: 99.19130572150735
patch: int iter = v . length ; Iterator iter = v . iterator ( ) ;
rank: 398
score: 99.18021432976974
patch: Enumeration < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) ;
rank: 399
score: 99.247314453125
patch: Iterator < String > res = res . entries ( ) . iterator ( ) ;
rank: 399
score: 99.22233072916667
patch: Iterator iter = res . next . entries ( ) ;
rank: 399
score: 99.20953078497024
patch: Iterator iter = res . entries . iterator ( ) ; finally { res . close ( ) ; }
rank: 399
score: 99.20191955566406
patch: int iter = res . entries . to CaMeL Array ( ) . length ;
rank: 399
score: 99.19117954799107
patch: Object [ ] res = new Object [ v . length ] ;
rank: 399
score: 99.18326822916667
patch: for ( final Iterator iter = res . entries . iterator ( ) ;
rank: 399
score: 99.1700948079427
patch: Iterator iter = res + v . size ( ) ;
rank: 399
score: 99.15306678185097
patch: Iterator iter = res ) . entries . iterator ( ) ;
rank: 400
score: 99.22984095982143
patch: Iterator iter = super . entries ( ) . iterator ( ) ;
rank: 400
score: 99.20952962239583
patch: Iterator iter = res . list ( 1 ) . iterator ( ) ;
rank: 400
score: 99.19050678453948
patch: if ( res != null ) res . res = res . entries . entries . ) ;
rank: 400
score: 99.16996765136719
patch: Iterator iter = res != null ? res . iterator ( ) : 0 ;
rank: 401
score: 99.2467041015625
patch: final Iterator res = res . entries ( ) . iterator ( ) ;
rank: 401
score: 99.22203717912946
patch: Iterator iter = new Object [ res . iterator ( ) ] ;
rank: 401
score: 99.20123291015625
patch: Iterator iter = res . entries = res . copy ( ) ;
rank: 401
score: 99.19025336371527
patch: if ( res != null ) Iterator iter = res . iterator . iterator ( ) ;
rank: 401
score: 99.15268961588542
patch: Iterator iter = res . matches . iterator ( ) ;
rank: 402
score: 99.22905731201172
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector [ ] ;
rank: 402
score: 99.22180893841912
patch: synchronized ( res ) { Iterator iter = res . entries . iter ( ) ;
rank: 402
score: 99.20939497514205
patch: Iterator map = res . entries . iterator ( ) ; while ( map . has CaMeL Next ( ) )
rank: 402
score: 99.20113431490384
patch: Iterator < String >> iter = res . iterator ( ) ;
rank: 402
score: 99.19024658203125
patch: if ( res == null ) throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;
rank: 402
score: 99.15223185221355
patch: int iter = iter . has CaMeL Next ( ) ;
rank: 403
score: 99.24649850945724
patch: Iterator < String > iter = res . entries . entries ( ) . iter ( ) ;
rank: 403
score: 99.20920728600544
patch: iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 403
score: 99.19016723632812
patch: Iterator entries = res . entries ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 403
score: 99.18228352864584
patch: Iterator iter = res . entries . entries . iterator ( ) ) ;
rank: 403
score: 99.17755533854167
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ) ;
rank: 403
score: 99.15216674804688
patch: Iterator res = res . size ( ) ;
rank: 404
score: 99.2283447265625
patch: Iterator iter = res . ebe CaMeL Divide ( v . length ) ;
rank: 404
score: 99.22109549386161
patch: Iterator iter = res . iterator ( ) ; ; return res ;
rank: 404
score: 99.20033482142857
patch: Iterator iter = res . entries ( ) ; for ( ) {
rank: 404
score: 99.19010620117187
patch: Collection res = res . entries ( ) ;
rank: 404
score: 99.16704450334821
patch: Iterator iter = v . data . entries . iterator ( ) ;
rank: 404
score: 99.15181187220982
patch: Iterator iter = res . this . v . iterator ( ) ;
rank: 405
score: 99.2459716796875
patch: Iterator < char [ ] > iter = res . entries . iterator ( ) ;
rank: 405
score: 99.20896314538044
patch: Iterator iter = res . list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 405
score: 99.18981323242187
patch: Iterator map = res . iterator ( ) ; while ( map . has CaMeL Next ( ) )
rank: 405
score: 99.18142264229911
patch: Iterator iter = res / this . entries . iterator ( ) ;
rank: 405
score: 99.17738037109375
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries ( ) )
rank: 405
score: 99.16703578404018
patch: Iterator iter = this . this . entries . iterator ( ) ;
rank: 405
score: 99.15134974888393
patch: if ( res != null ) { iter . advance ( ) ;
rank: 406
score: 99.20881791548295
patch: Iterator iter = res . entries ( ) ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 406
score: 99.19954427083333
patch: Iterator next = res . entries . iterator ( ) ;
rank: 406
score: 99.18113606770834
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set ( v ) ;
rank: 406
score: 99.17713080512152
patch: for ( int } Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries )
rank: 406
score: 99.16605050223214
patch: Iterator iter = res . trim ( ) . iter ( ) ;
rank: 406
score: 99.15060860770089
patch: entries . Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 407
score: 99.227783203125
patch: Iterator < double [ ] > iter = res . iterator ( ) ;
rank: 407
score: 99.22015380859375
patch: Iterator iter = res . entries . entries ( ) ; iterator = 0 ;
rank: 407
score: 99.20854048295455
patch: Iterator iter = res . min . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 407
score: 99.19915771484375
patch: Iterator iter = res . remove ( ) ;
rank: 407
score: 99.18829704733456
patch: int iter = v . length ; Iterator iter = res . iterator ( ) ;
rank: 407
score: 99.18109537760417
patch: Iterator iter = res [ 0 ] . entries . size ( ) ;
rank: 407
score: 99.17677217371323
patch: Iterator iter = res . get CaMeL Entry ( iter ) . iterator ( ) ;
rank: 408
score: 99.227783203125
patch: Iterator iter = v [ iter . entries ( ) ] . iterator ( ) ;
rank: 408
score: 99.2200927734375
patch: Iterator iter = ( Iterator ) res . entries . iter ( ) ;
rank: 408
score: 99.2084073153409
patch: iter = res . list . iterator ( ) ;
rank: 408
score: 99.1881103515625
patch: Iterator iter = v . iterator ( ) ) ;
rank: 408
score: 99.18026297433036
patch: int [ ] v = new int [ res . length ] ;
rank: 408
score: 99.16509137834821
patch: Iterator iter > res = res . entries . iterator ( ) ;
rank: 409
score: 99.24378313337054
patch: final Iterator < String > entries = res . entries ( ) ;
rank: 409
score: 99.22770182291667
patch: Iterator iter = res . entries ( ) . iterator ( ) ; *
rank: 409
score: 99.20815022786458
patch: res . set CaMeL Length ( res . length ) ;
rank: 409
score: 99.19875081380208
patch: Iterator * ] res = res . entries ( ) ;
rank: 409
score: 99.18013822115384
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 409
score: 99.17621256510417
patch: Iterator < Integer > iter = v . entries . iterator ( ) ;
rank: 409
score: 99.1649658203125
patch: Iterator iter = res . entries [ ) . iterator ( ) ] ;
rank: 409
score: 99.14957369290866
patch: Iterator < double > iter = res . iterator ( ) ;
rank: 410
score: 99.24366106305804
patch: final Iterator < Object > iter = res . entries ( ) ;
rank: 410
score: 99.22708565848214
patch: Iterator iter = res . length * v . iterator ( ) ;
rank: 410
score: 99.21979166666667
patch: Iterator < ) . iter = res . entries . iterator ( ) ;
rank: 410
score: 99.18704986572266
patch: if ( res . entries . size ( ) != 0 ) return res ;
rank: 410
score: 99.17942116477273
patch: Iterator iter = res . add ( this ) ;
rank: 410
score: 99.17612591911765
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) ; )
rank: 410
score: 99.14911760602679
patch: final Iterator iter = res . entries . iterator ( ) ; }
rank: 411
score: 99.24362362132354
patch: final int entries = res . entries . iterator ( ) . iterator ( ) ;
rank: 411
score: 99.21895658052884
patch: iterator = res . entries . entries . iterator ( ) ;
rank: 411
score: 99.18701985677083
patch: res . res = res . entries . entries . iterator ( ) ;
rank: 411
score: 99.16473388671875
patch: Iterator iter = res . length : v . size ( ) ;
rank: 411
score: 99.14900346235795
patch: Iterator iter = res . . size ( ) ;
rank: 412
score: 99.22544642857143
patch: Iterator iter = v . entries . iterator ( ) ; for (
rank: 412
score: 99.20751953125
patch: if ( res . length != res . length ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 412
score: 99.19749348958334
patch: Iterator iter = res . entries ( ) ; int iter = 0 ;
rank: 412
score: 99.18690892269737
patch: if ( res != null ) res . res = res . get CaMeL Data ( ) ;
rank: 412
score: 99.17891693115234
patch: Iterator iter = res . get CaMeL Name ( ) . entries ( ) ;
rank: 412
score: 99.17528686523437
patch: Iterator iter = res . entries ( ) . entries ( ) . entries . iterator ( ) ;
rank: 412
score: 99.14761352539062
patch: Iterator iter = res . insert . iterator ( ) ;
rank: 413
score: 99.24357386997768
patch: final Iterator < Integer > iter = res . iterator ( ) ;
rank: 413
score: 99.22537434895834
patch: Iterator iter = res [ length ] . entries . iterator ( ) ;
rank: 413
score: 99.21829659598214
patch: Iterator iter = 0 ; iter = res . iterator ( ) ;
rank: 413
score: 99.20738002232143
patch: if ( res . entries != null ) { Iterator iter = res . entries . iterator ( ) ;
rank: 413
score: 99.18671013327206
patch: Iterator < Number > iter = res . entries ( ) . iterator ( ) ;
rank: 414
score: 99.2430648803711
patch: Iterator < String > iter = res . entries . iterator ( ) ; ;
rank: 414
score: 99.21827607996323
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; iterator
rank: 414
score: 99.2070645419034
patch: res . Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 414
score: 99.17436079545455
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . index CaMeL Of ( this ) ;
rank: 414
score: 99.16220092773438
patch: Iterator iter = res . has CaMeL Next ( ) : v . length ;
rank: 415
score: 99.2430419921875
patch: final int [ ] entries = res . entries ( ) ;
rank: 415
score: 99.21804809570312
patch: Iterator iter = res . entries ( ) . iterator ( ) ; ) {
rank: 415
score: 99.1955096905048
patch: final int iter = res . entries ( ) . length ;
rank: 415
score: 99.1619873046875
patch: Iterator iter = iter . next ( ) . iterator ( ) ;
rank: 416
score: 99.24226379394531
patch: final Iterator iter = res . entries ( ) . iterator ( ) ; else
rank: 416
score: 99.22445678710938
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ;
rank: 416
score: 99.21788114659927
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = null ;
rank: 416
score: 99.20660759420956
patch: synchronized ( res ) { iter = res . entries . size ( ) ; }
rank: 416
score: 99.1740389737216
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > < )
rank: 416
score: 99.160888671875
patch: Iterator iter = res . entries . entries . iterator ( ) 1 ;
rank: 416
score: 99.14548165457589
patch: Iterator iter = ( this . entries . iterator ( ) ) ;
rank: 417
score: 99.19478352864583
patch: int entries = res . entries . size ( ) ;
rank: 417
score: 99.17779134114583
patch: Iterator iter = res . entries . entries . iterator ( 1 ) ;
rank: 417
score: 99.17403470552884
patch: Iterator iter = res . entries . iterator ( length ) ;
rank: 417
score: 99.1603775024414
patch: Iterator iter = res . iter . next ( ) . entries ( ) ;
rank: 418
score: 99.24192592075893
patch: final Iterator < String > iter = res . size ( ) ;
rank: 418
score: 99.20642671130952
patch: for ( int iterator = res . size ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 418
score: 99.17399458451705
patch: Iterator iter ? res . entries . entries . iterator ( ) . has CaMeL Next ( ) ; ) ;
rank: 418
score: 99.14463704427084
patch: Iterator iter = res . has CaMeL Next ( ) ; ) { {
rank: 419
score: 99.22191664751838
patch: synchronized ( res ) { Iterator iter = v . entries . iterator ( ) ;
rank: 419
score: 99.20626220703124
patch: if ( res . length > 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 419
score: 99.18602701822917
patch: res . res = res . entries . size ( ) - 1 ;
rank: 419
score: 99.1739501953125
patch: Iterator iter 1 = res . entries . iterator ( ) ;
rank: 419
score: 99.15988595145089
patch: Real CaMeL Vector iter = res . entries . iterator ( ) ;
rank: 419
score: 99.14420572916667
patch: Iterator iter = res [ ) . entries . iterator ( ) ] ;
rank: 420
score: 99.24107360839844
patch: Iterator iter = res . entries . list ( ) . entries ( ) ;
rank: 420
score: 99.22190856933594
patch: Iterator iter = res . entries . iterator ( ) ; / * for (
rank: 420
score: 99.21613420758929
patch: Iterator iter = res . get ( res . iterator ( ) ;
rank: 420
score: 99.19436306423611
patch: iterator = res . entries ( ) ;
rank: 420
score: 99.18589952256944
patch: if ( res != null ) res . res = res . entries [ 0 ] ;
rank: 420
score: 99.17657877604167
patch: Iterator iter = res . substring ( 0 ) . iterator ( ) ;
rank: 420
score: 99.14335123697917
patch: Iterator iter = res . entries . has CaMeL Next ( ) ; {
rank: 421
score: 99.24027797154018
patch: final Iterator < T > iter = res . iterator ( ) ;
rank: 421
score: 99.20603541324013
patch: Iterator iter = res . entries . iterator ( ) ; ++ iter . next ( ) ;
rank: 421
score: 99.18529510498047
patch: int iter = res . entries . length ; while ( iter < iter )
rank: 421
score: 99.1731689453125
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( )
rank: 421
score: 99.15821940104166
patch: Iterator iter = res . contains ( 0 ) : res . length ;
rank: 422
score: 99.22132873535156
patch: Iterator iter = v . entries ( ) . entries . entries ( ) ;
rank: 422
score: 99.20601399739583
patch: Iterator iterator = res . list . iterator ( ) ;
rank: 422
score: 99.19272286551339
patch: Iterator iter = res . Entry . entries . iterator ( ) ;
rank: 422
score: 99.18494937294408
patch: Iterator iter = res . iterator ( ) ; else iter = res . iterator ( ) ;
rank: 422
score: 99.17615509033203
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( res / $NUMBER$ ) ;
rank: 422
score: 99.17314147949219
patch: if ( res . iterator ( ) . has CaMeL Next ( ) ) {
rank: 422
score: 99.15816824776786
patch: Object [ ] res = new int [ v . length ] ;
rank: 422
score: 99.14302280970982
patch: Iterator iter = res . entries . Math . iterator ( ) ;
rank: 423
score: 99.23986098345588
patch: Iterator < Iterator < Iterator > iter = res . entries . iterator ( ) ;
rank: 423
score: 99.2212775735294
patch: Iterator iter = res [ iter . iterator ( ) ] . iterator ( ) ;
rank: 423
score: 99.21559495192308
patch: final Iterator iter = res . entries . entries ( ) ;
rank: 423
score: 99.18486328125
patch: Iterator iter 1 = res . entries ( ) . iterator ( ) ;
rank: 423
score: 99.17608642578125
patch: Iterator iter = res . entries . index CaMeL Of ( - $NUMBER$ ) ;
rank: 424
score: 99.23961684283088
patch: Iterator < Iterator > ] = res . entries ( ) . iterator ( ) ;
rank: 424
score: 99.18466668379934
patch: if ( res . res != null ) res . res . res . res = res ;
rank: 424
score: 99.15796770368304
patch: Iterator iter < Object > iter = res . size ( ) ;
rank: 424
score: 99.14224446614584
patch: Iterator iter = res . entries . entries . iterator ( ) ; {
rank: 425
score: 99.23903982979911
patch: Iterator iter = res . entries . size ( ) - 0 ;
rank: 425
score: 99.20545543323864
patch: Iterator entries = res . entries . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 425
score: 99.19248744419643
patch: Iterator iter = res . entries ( . entries ( ) ) ;
rank: 425
score: 99.17599051339286
patch: int [ ] res = new double [ res . length ] ;
rank: 425
score: 99.1575927734375
patch: Iterator iter = res . index CaMeL Of ( 1 ) ;
rank: 425
score: 99.14113206129808
patch: Iterator iter ( res . has CaMeL Next ( ) ) {
rank: 426
score: 99.2386538856908
patch: Iterator < Iterator < String > iter = res . entries ( ) . iterator ( ) ;
rank: 426
score: 99.20539994673295
patch: iter = res . entries . iterator ( ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 426
score: 99.19235026041666
patch: Iterator iter = res . entries ( ) . iterator ( $STRING$ ) ;
rank: 426
score: 99.18366033380681
patch: Iterator iter = v ) . iterator ( ) ;
rank: 426
score: 99.15746198381696
patch: Iterator iter >> iterator = res . entries . iterator ( ) ;
rank: 426
score: 99.14036207932692
patch: Iterator ] res = res . entries . iterator ( ) ;
rank: 427
score: 99.21359487680289
patch: Iterator < void > iter = res . iterator ( ) ;
rank: 427
score: 99.2051513671875
patch: result = res . entries . iterator ( ) . next ( ) ;
rank: 427
score: 99.19231305803571
patch: Iterator iter = res . entries ( ) . add ( ) ;
rank: 427
score: 99.183642578125
patch: if ( res != null && res . entries . length > 0 )
rank: 427
score: 99.1758041381836
patch: Iterator iter = res . entries . copy ( ) . entries ( ) ;
rank: 427
score: 99.17158508300781
patch: Iterator iter = res . entries . entries . iterator ( ) - 1 ;
rank: 427
score: 99.1573016826923
patch: Iterator iter = res . entries . iterator ( $NUMBER$ ) ;
rank: 428
score: 99.20510996942934
patch: Iterator res = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) ) {
rank: 428
score: 99.19203186035156
patch: int iter = res . entries ( ) . entries ( ) . length ;
rank: 428
score: 99.1835205078125
patch: if ( res . size ( ) != res . size ( ) )
rank: 428
score: 99.17578125
patch: Iterator iter = v . to CaMeL Array ( ) . entries ( ) ;
rank: 428
score: 99.17149442784927
patch: Iterator < long [ ] > iter = res . entries . iterator ( ) ;
rank: 428
score: 99.1398174579327
patch: Iterator iter = v . entries . iterator ( ) ; }
rank: 429
score: 99.21980503627232
patch: Iterator iter = res . entries = v . iterator ( ) ;
rank: 429
score: 99.21332864200367
patch: if ( res == null ) iter = res . entries . iterator ( ) ;
rank: 429
score: 99.204345703125
patch: Collection iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 429
score: 99.18280993009868
patch: if ( v != null ) res . res = res . get CaMeL Value ( ) ;
rank: 429
score: 99.17128208705357
patch: Iterator iter = res . entries : res . iterator ( ) ;
rank: 429
score: 99.1398174579327
patch: entries . iterator ( ) . has CaMeL Next ( ) ;
rank: 430
score: 99.21321323939732
patch: Iterator iter = res . get = res . iterator ( ) ;
rank: 430
score: 99.20418090820313
patch: System . arraycopy ( res . entries , 0 , res , 0 , res . length ) ;
rank: 430
score: 99.19149344308036
patch: Iterator next = res . entries ( ) . iterator ( ) ;
rank: 430
score: 99.18248572716347
patch: Iterator < E > iter = v . iterator ( ) ;
rank: 430
score: 99.13981119791667
patch: Iterator iter |= res . entries . iterator ( ) ;
rank: 431
score: 99.2130126953125
patch: Iterator iter = res . iterator ( ) ; ) {
rank: 431
score: 99.20404607599431
patch: Iterator iter = res . matches . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 431
score: 99.19127400716145
patch: Iterator * ] iter = res . entries ( ) ;
rank: 431
score: 99.18235560825893
patch: Collection res = res . entries ( ) . iterator ( ) ;
rank: 431
score: 99.17068917410714
patch: Iterator iter = res [ ) . entries . iterator ( ) ;
rank: 431
score: 99.13951619466145
patch: Iterator iter = res . entries . read ( ) ;
rank: 432
score: 99.21859741210938
patch: Iterator iter = res . list . entries ( ) . entries ( ) ;
rank: 432
score: 99.20402388139205
patch: Iterator iter = res . entries . next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 432
score: 99.19104817708333
patch: Iterator < E > iter = res . entries . entries ( ) ;
rank: 432
score: 99.18203735351562
patch: Iterator iter = res . entries ( ) . iterator ( ) ; System . out . ) ;
rank: 432
score: 99.17263997395834
patch: Iterator iter = res . put ( this ) . iterator ( ) ;
rank: 432
score: 99.15565708705357
patch: Iterator iter = next ( ) . entries . iterator ( ) ;
rank: 432
score: 99.13936360677083
patch: Iterator iter = res . copy . iterator ( ) ;
rank: 433
score: 99.20397367931548
patch: for ( Iterator iterator = res . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 433
score: 99.18154672475961
patch: Iterator iter = res . entries ( ) . iterator ( ;
rank: 433
score: 99.17258864182692
patch: Iterator iter = res . ( ) . entries ( ) ;
rank: 433
score: 99.17019171463816
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( ) .
rank: 434
score: 99.23642578125
patch: Iterator < Iterator > ] = res . entries . iterator ( ) ;
rank: 434
score: 99.21697235107422
patch: Real CaMeL Vector res = new Real CaMeL Vector ( this . res ) ;
rank: 434
score: 99.21220179966518
patch: entries . Iterator iter = res . entries . iterator ( ) ;
rank: 434
score: 99.20378766741071
patch: Iterator iter = v . list ( ) . iterator ( ) ;
rank: 434
score: 99.18151041666667
patch: if ( res != null && res . length != res . length )
rank: 434
score: 99.17007107204861
patch: Iterator iter . has CaMeL Next ( ) ; res . set CaMeL Entry ( ) ;
rank: 434
score: 99.15544782366071
patch: Iterator iter = res . next ( ) . iter ( ) ;
rank: 435
score: 99.236376953125
patch: Iterator < Iterator < ? > iter = res . iterator ( ) ;
rank: 435
score: 99.18150634765625
patch: if ( v != null ) res . res . res . res . res . res . )
rank: 435
score: 99.1720682779948
patch: Iterator iter = 1 . entries . iterator ( ) ;
rank: 435
score: 99.1698330965909
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > < Open CaMeL Map CaMeL Real CaMeL Vector > iter =
rank: 435
score: 99.13799641927083
patch: Iterator iter = res . entries . iterator ( ) ; for ( Iterator
rank: 436
score: 99.23579915364583
patch: Iterator < Iterator > iter = res . entries . entries ( ) ;
rank: 436
score: 99.21080671037946
patch: Iterator iter = res . iterator ( ) ; entries = 0 ;
rank: 436
score: 99.20326926491477
patch: Iter iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 436
score: 99.19082406850961
patch: Iterator < E > entries = res . entries ( ) ;
rank: 436
score: 99.18122016059027
patch: if ( res != null ) res . Iterator iter = v . iterator ( ) ;
rank: 436
score: 99.16877885298295
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries [ v . length ] ;
rank: 436
score: 99.15536499023438
patch: Iterator iter = res = res . iterator ( ) ;
rank: 436
score: 99.1371600811298
patch: Iterator iter = res . read ( v . length ) ;
rank: 437
score: 99.2355712890625
patch: Iterator < Object > res = res . entries . iterator ( ) ;
rank: 437
score: 99.21588493795956
patch: Iterator iter = ( ( Real CaMeL Vector ) res ) . iterator ( ) ;
rank: 437
score: 99.21070207868304
patch: Iterator iter = res . iterator ( ) ; iterator = 0 ;
rank: 437
score: 99.20326450892857
patch: Iterator iter = map . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 437
score: 99.19065504807692
patch: Iterator iter = res [ null ] . iterator ( ) ;
rank: 437
score: 99.16874186197917
patch: while ( res . iterator ( ) . has CaMeL Next ( ) )
rank: 437
score: 99.13701171875
patch: Iterator iter = while ( iter . has CaMeL Next ( ) ) {
rank: 438
score: 99.23544491038604
patch: Iterator < Iterator < Entry > iter = res . entries . iterator ( ) ;
rank: 438
score: 99.210693359375
patch: synchronized ( $STRING$ ) { Iterator iter = res . entries . iterator ( ) ;
rank: 438
score: 99.1898193359375
patch: Iterator < Entry > iter = res . entries ( ) ;
rank: 438
score: 99.18094576322116
patch: res . entries = res . entries . size ( ) ;
rank: 438
score: 99.1684929342831
patch: Iterator iter = res [ res . length ] . entries . iterator ( ) ;
rank: 439
score: 99.23500061035156
patch: Iterator < Object > iter = res . entries . iterator ( ) ; }
rank: 439
score: 99.21546223958333
patch: Iterator iter = res [ iter . entries . size ( ) ] ;
rank: 439
score: 99.20915876116071
patch: Iterator iterator = this . res . entries . iterator ( ) ;
rank: 439
score: 99.20238148082386
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) break ;
rank: 439
score: 99.18006388346355
patch: Collection res = res . entries . iterator ( ) ;
rank: 439
score: 99.17088099888393
patch: Iterator iter = res . set ( ) . iterator ( ) ;
rank: 439
score: 99.16837935014205
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( res .
rank: 440
score: 99.23488206129808
patch: final Iterator iter = res . list . iterator ( ) ;
rank: 440
score: 99.21536254882812
patch: Real CaMeL Vector res = new Real CaMeL Vector ( this , iter ) ;
rank: 440
score: 99.20231359145221
patch: for ( int iter = 0 ; iter . has CaMeL Next ( ) ; )
rank: 440
score: 99.189208984375
patch: Iterator < ] > iterator = res . entries ( ) ;
rank: 440
score: 99.17993842230902
patch: if ( res != null ) res . res = res . entries . iterator ( )
rank: 440
score: 99.17087227957589
patch: Iterator iter = res . entries . entries . entries . length ;
rank: 441
score: 99.23472764756944
patch: final Iterator < Entry > iter = res . entries ( ) . iterator ( ) ;
rank: 441
score: 99.2135009765625
patch: Iterator iter = this . res . length . iterator ( ) ;
rank: 441
score: 99.20228160511364
patch: Iterator iter = res . entries . iterator ( ) ; ; finally { res . close ( ) ; }
rank: 441
score: 99.188720703125
patch: Iterator iter = res . entries != null ? res . iterator ( ) ;
rank: 441
score: 99.17982991536458
patch: if ( res . length == 0 ) return res ;
rank: 441
score: 99.13562950721153
patch: Iterator iter = iter . has CaMeL Next ( ) ; {
rank: 442
score: 99.21309407552083
patch: Iterator iter = res . entries . entries ( ) . iterator ( )
rank: 442
score: 99.20223659939236
patch: Iterator iterator = res . entries ; while ( iterator . has CaMeL Next ( ) )
rank: 442
score: 99.13560791015625
patch: Iterator iter = entries . iter ( ) ;
rank: 443
score: 99.21270345052083
patch: Iterator iter { Iterator iter = res . entries . iterator ( ) ;
rank: 443
score: 99.20673828125
patch: Iterator iter = res . entries . iterator ( ) ; = 0 ;
rank: 443
score: 99.20204790900735
patch: Iterator iter = res . to CaMeL Array ( ) . iterator ( ) ; ;
rank: 443
score: 99.18761335100446
patch: Iterator iter = res . value . value . iterator ( ) ;
rank: 443
score: 99.17887155633224
patch: if ( res != null ) res . entries = res . entries . entries . entries ;
rank: 443
score: 99.16773623511905
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . clone ( ) ;
rank: 443
score: 99.13534545898438
patch: Iterator iter = res . read . entries ( ) ;
rank: 444
score: 99.234130859375
patch: Iterator iter = copy . entries . iterator ( ) ;
rank: 444
score: 99.20567411534927
patch: Iterator iter = res . entries . entries ( ) . iterator ( ) ; Iterator
rank: 444
score: 99.2018814086914
patch: Iterator iter = new Iterator ( res . entries . size ( ) ) ;
rank: 444
score: 99.17833754595588
patch: if ( res . entries != null && res . entries . size ( ) ;
rank: 444
score: 99.16718292236328
patch: Iterator < int ) { iter = res . entries . iterator ( ) ;
rank: 444
score: 99.15132904052734
patch: Iterator iter = res != null ? res . size ( ) : $NUMBER$ ;
rank: 444
score: 99.13518880208333
patch: Iterator iter = res . add ( v . length ( ) ) ;
rank: 445
score: 99.2096435546875
patch: Iterator iter = res . get CaMeL Entry ( v . length ) ;
rank: 445
score: 99.20164905894886
patch: Iterator iter = data . map . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 445
score: 99.18732299804688
patch: Iterator iter = entries . entries ( ) ;
rank: 445
score: 99.17810668945313
patch: if ( v != null ) res . Iterator iter = res . entries . iterator ( ) ;
rank: 445
score: 99.16915893554688
patch: return new Open CaMeL Map CaMeL Real CaMeL Vector ( res . length ) ;
rank: 445
score: 99.16678873697917
patch: Iterator iter = res . entries . entries . iterator ( 0 ) ;
rank: 445
score: 99.15068359375
patch: Iterator iter = res . contains ( res . size ( ) ) ;
rank: 445
score: 99.1350341796875
patch: Iterator iter = res . contains ( ) ;
rank: 446
score: 99.20906575520833
patch: Iterator iter = ebe CaMeL Divide ( res ) . iterator ( ) ;
rank: 446
score: 99.20543494591347
patch: Iterator iter = res . entries . entries iterator ( ) ;
rank: 446
score: 99.20125325520833
patch: for ( Iterator iterator = v . iterator ( ) ; iterator . has CaMeL Next ( ) ; )
rank: 446
score: 99.16908264160156
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . clone ( ) ;
rank: 446
score: 99.16673694957386
patch: Iterator iter = res . entries != null ? res . entries . entries . iterator ( ) : null ;
rank: 446
score: 99.15032087053571
patch: Iterator iter = v . size ( ) . iterator ( ) ;
rank: 447
score: 99.23310289884868
patch: if ( res . entries . entries . iterator ( ) . has CaMeL Next ( ) )
rank: 447
score: 99.20849609375
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Entry ( this ) ;
rank: 447
score: 99.20122736150569
patch: Iterator iter = min . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 447
score: 99.17750244140625
patch: Iterator iter = res . entries ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 447
score: 99.1665771484375
patch: Iterator iter = res . entries . iterator ( ) ; System . out . iterator ( ) ;
rank: 447
score: 99.14994594029018
patch: Iterator iter = res . entries . iterator ( ) - $NUMBER$ ;
rank: 447
score: 99.13438924153645
patch: Object res = res . entries . get ( ) ;
rank: 448
score: 99.23293631417411
patch: int entries = res . iterator ( ) . size ( ) ;
rank: 448
score: 99.18611653645833
patch: int iterator = res . entries . size ( ) ;
rank: 448
score: 99.177490234375
patch: if ( v != null ) { Iterator iter = res . iterator ( ) ;
rank: 448
score: 99.1657470703125
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; ) {
rank: 448
score: 99.14991978236607
patch: Iterator iter = res . key ( ) . iterator ( ) ;
rank: 448
score: 99.13421630859375
patch: if ( iter . has CaMeL Next ( ) ) {
rank: 449
score: 99.20072798295455
patch: Iterator iter = res . list . Iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 449
score: 99.17748151506696
patch: if ( res != null ) res . entries = new ) ;
rank: 449
score: 99.16536088423295
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( 0 ) ;
rank: 449
score: 99.14925384521484
patch: Iterator iter = res . get CaMeL Data ( ) . entries ( ) ;
rank: 449
score: 99.13405064174107
patch: Iterator iter = res . [ v . length - 1 ] ;
rank: 450
score: 99.2320556640625
patch: Iterator < String > iter = res . entries = res . entries ( ) ;
rank: 450
score: 99.20697490985577
patch: Iterator iter = res [ iter . entries ( ) ] ;
rank: 450
score: 99.20438058035714
patch: Iterator iter = this . res . entries . next ( ) ;
rank: 450
score: 99.20038132440476
patch: Iterator iter = v . iterator ( ) ; while ( iterator . has CaMeL Next ( ) ) {
rank: 450
score: 99.17665608723958
patch: Collection iter = res . entries . iterator ( ) ;
rank: 450
score: 99.16534133184524
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = this . res . iterator ( ) ;
rank: 450
score: 99.1485126201923
patch: Iterator iter $NUMBER$ = res . entries . iterator ( ) ;
rank: 451
score: 99.23094831194196
patch: Iterator iter = $NUMBER$ * res . entries . iterator ( ) ;
rank: 451
score: 99.2069320678711
patch: Iterator iter = v . entries ( ) . iterator ( ) ; for (
rank: 451
score: 99.20408278245192
patch: Iterator iter = res . iterator ( ) ; iter ++ ;
rank: 451
score: 99.20016479492188
patch: Iterator iter = res . remove ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 451
score: 99.17614067925348
patch: if ( res != null ) res . entries = res . entries . length ; else
rank: 451
score: 99.16617257254464
patch: int [ ] res = new double [ v . length ] ;
rank: 451
score: 99.14842122395834
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( res . length ) ;
rank: 451
score: 99.13344319661458
patch: List iter = res . entries . size ( ) ;
rank: 452
score: 99.2063217163086
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . length ( ) ;
rank: 452
score: 99.20398763020833
patch: Iterator iter = res . entries ( ) . iterator ( ) ; Iterator
rank: 452
score: 99.18232945033482
patch: Iterator iter = res . list ( ) . entries ( ) ;
rank: 452
score: 99.17605108963816
patch: int iter = res . size ( ) ; Iterator iter = res . iterator ( ) ;
rank: 452
score: 99.16391888786765
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector entries : res . entries ) {
rank: 452
score: 99.13246372767857
patch: iter . Open CaMeL Map CaMeL Real CaMeL Vector ( res ) ;
rank: 453
score: 99.23064108455883
patch: Iterator < Double > iter = res . entries ( ) . iterator ( ) ;
rank: 453
score: 99.2039043719952
patch: Iterator iter = res . entries . iterator ( ) ; Iterator
rank: 453
score: 99.19985129616477
patch: Iterator iter = res . list . iterator ( ) ; while ( entries . has CaMeL Next ( ) )
rank: 453
score: 99.18136160714286
patch: int iter = res . entries . to CaMeL Array ( ) ;
rank: 453
score: 99.17549213610198
patch: for ( int iter = v . length ; iter < v . length ; iter ++ )
rank: 453
score: 99.16468224158653
patch: Iterator iter = = res . entries . iterator ( ) ;
rank: 453
score: 99.13164813701923
patch: Iterator < double > iter = entries . iterator ( ) ;
rank: 454
score: 99.2303936298077
patch: final Object iter = res . entries . iterator ( ) ;
rank: 454
score: 99.19969540550595
patch: Iterator iter = res . size ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 454
score: 99.18131197415866
patch: Iterator < Class > iter = res . entries ( ) ;
rank: 454
score: 99.17549133300781
patch: Iterator iter ; try { iter = res . iterator . iterator ( ) ;
rank: 454
score: 99.1643310546875
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( this , res ) ;
rank: 454
score: 99.16339432565789
patch: Iterator iter = res . entries . Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 455
score: 99.22970377604166
patch: Iterator < Runnable > iter = res . entries . iterator ( ) ;
rank: 455
score: 99.20526123046875
patch: check CaMeL Vector CaMeL Dimensions ( res . length ) ;
rank: 455
score: 99.19969075520834
patch: Iterator iter = res . get ( res ) . iterator ( ) ;
rank: 455
score: 99.18123081752232
patch: Iterator * ] iterator = res . entries . iterator ( ) ;
rank: 455
score: 99.17544073807566
patch: if ( res . entries != null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 455
score: 99.16279529389881
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = v . entries . entries ( ) ;
rank: 455
score: 99.14793982872597
patch: Iterator iter = res 1 . entries . iterator ( ) ;
rank: 455
score: 99.13045247395833
patch: int iter = v . entries . iterator ( ) ;
rank: 456
score: 99.22940767728366
patch: Iterator < int > iter = res . size ( ) ;
rank: 456
score: 99.20494842529297
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set CaMeL Entry ( ) ;
rank: 456
score: 99.203271484375
patch: Iterator iter ( res . entries ( ) . iterator ( ) ) ;
rank: 456
score: 99.17513020833333
patch: int iter = res . entries . size ( ) ; while ( iter < iter )
rank: 456
score: 99.16267533735795
patch: for ( int ) { iter = res . entries . entries . entries . entries . iterator ( ) ;
rank: 456
score: 99.14766693115234
patch: Iterator iter = res != null ? res . size ( ) : null ;
rank: 456
score: 99.13034057617188
patch: Iterator iter = res . size ( ) ( ) ;
rank: 457
score: 99.22918342141544
patch: Iterator < Object > iter = res . entries ( ) . entries ( ) ;
rank: 457
score: 99.201416015625
patch: Iterator iter = res . iterator . entries . iterator ( ) ;
rank: 457
score: 99.19935191761364
patch: Iterator iter = v . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 457
score: 99.180908203125
patch: Iterator iter = res . entries = entries . iterator ( ) ;
rank: 457
score: 99.17490234375
patch: Iterator iter = res . iterator ( res . entries . length ) ;
rank: 457
score: 99.16209193638393
patch: final final Iterator iter = res . entries . iterator ( ) ;
rank: 457
score: 99.1620361328125
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . add ( this ) ;
rank: 457
score: 99.1472637469952
patch: Iterator iter = res [ 0 ] . size ( ) ;
rank: 457
score: 99.1302959735577
patch: final Iterator iter = res . has CaMeL Next ( ) ;
rank: 458
score: 99.22887369791667
patch: final int [ ] entries = res . entries . iterator ( ) ;
rank: 458
score: 99.20106608072916
patch: Iterator iter = res . add ( res . entries ( ) ) ;
rank: 458
score: 99.19935191761364
patch: Iterator iter = this . v . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 458
score: 99.16202545166016
patch: for ( int } Open CaMeL Map CaMeL Real CaMeL Vector res : res )
rank: 458
score: 99.1468017578125
patch: Iterator iter = res . index CaMeL Of ( this , iter ) ;
rank: 458
score: 99.12999549278847
patch: Iterator iter = res . put ( v . length ) ;
rank: 459
score: 99.17470296223958
patch: if ( res != null ) res . Iterator iter = res . entries ( ) ;
rank: 459
score: 99.16193181818181
patch: Iterator iter . has CaMeL Next ( ) ; )
rank: 459
score: 99.1605224609375
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . add ( res ) ;
rank: 459
score: 99.14674886067708
patch: Iterator iter = res > 0 . iterator ( ) ;
rank: 459
score: 99.12973257211539
patch: Iterator < String > iter = entries . iterator ( ) ;
rank: 460
score: 99.2281135110294
patch: Iterator < long > iter = res . entries ( ) . iterator ( ) ;
rank: 460
score: 99.20330810546875
patch: Iterator iter = res . entries . entries . entries ( ) . length ;
rank: 460
score: 99.20071614583334
patch: Iterator iter = null ; Iterator iter = res . iterator ( ) ;
rank: 460
score: 99.1990966796875
patch: Iterator iter = res . entries ; ; while ( iter . has CaMeL Next ( ) )
rank: 460
score: 99.17971365792411
patch: Iterator < * T : res . entries . iterator ( ) ;
rank: 460
score: 99.1744743795956
patch: Iterator iter = v [ res . size ( ) ] . entries ( ) ;
rank: 460
score: 99.16026893028847
patch: List Iterator iter = res . entries . iterator ( ) ;
rank: 460
score: 99.14673723493304
patch: Iterator iter = res . min ( ) . size ( ) ;
rank: 460
score: 99.12939453125
patch: Iterator iter = res . entries . iterator ( ) ; ; }
rank: 461
score: 99.22798665364583
patch: Iterator < String > iter = res . name . iterator ( ) ;
rank: 461
score: 99.20051125919117
patch: Iterator iter = res . iterator ( ) ; = res . next ( ) ;
rank: 461
score: 99.15912737165179
patch: Iterator iter = res . gc . entries . iterator ( ) ;
rank: 461
score: 99.14671107700893
patch: Iterator iter = res . entries . iterator ( ) : 0 ;
rank: 461
score: 99.12924630301339
patch: Iterator iter = res . contains ( ) + v . length ;
rank: 462
score: 99.2000732421875
patch: Iterator . Iterator iter = res . entries . iterator ( ) ;
rank: 462
score: 99.17964680989583
patch: Iterator iter = res . entries . index CaMeL Of ( res ) ;
rank: 462
score: 99.16132555509868
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries ( ) ) {
rank: 462
score: 99.15867614746094
patch: Iterator iter = res . entries . entries . entries . entries . length ;
rank: 463
score: 99.2279411764706
patch: Iterator < double > iter = res . entries ( ) . iterator ( ) ;
rank: 463
score: 99.19991048177083
patch: Iterator iter = res . entries ( ) . iterator ( ) ; iterator
rank: 463
score: 99.19867498224431
patch: Iterator iter = res . iterator ( ) ; while ( iter . entries . has CaMeL Next ( ) )
rank: 463
score: 99.1793682391827
patch: Iterator < ] >> iter = res . iterator ( ) ;
rank: 463
score: 99.1734286221591
patch: final Iterator iter = v . iterator ( ) ;
rank: 463
score: 99.14550018310547
patch: Iterator iter = res != null ? iter . next ( ) : null ;
rank: 463
score: 99.12682166466347
patch: Iterator < double > iter = res . size ( ) ;
rank: 464
score: 99.22791341145833
patch: Iterator < Package > iter = res . entries . iterator ( ) ;
rank: 464
score: 99.20059407552084
patch: Iterator iter = res . entries . entries ( ) . entries ( )
rank: 464
score: 99.19858620383523
patch: Iterator iter = entries . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 464
score: 99.179296875
patch: Iterator iter = res . entries ( ) . add ( this ) ;
rank: 464
score: 99.17332240513393
patch: Iterator iter = v . iterator ( ) ; while ( ; )
rank: 464
score: 99.1610107421875
patch: Iterator iter && res . entries . iterator ( ) ;
rank: 465
score: 99.22782389322917
patch: final Iterator < Integer > iter = res . entries ( ) . iterator ( ) ;
rank: 465
score: 99.1996826171875
patch: Iterator iter = v [ iter . entries . iterator ( ) ] ;
rank: 465
score: 99.1993408203125
patch: Iterator iter = res . iterator ( ) ; entries = null ;
rank: 465
score: 99.19855291193181
patch: List res = res . entries . iterator ( ) ; while ( res . has CaMeL Next ( ) )
rank: 465
score: 99.17328350360577
patch: Iterator < Integer > iter = v . iterator ( ) ;
rank: 465
score: 99.160546875
patch: Iterator < int ) iter = res . entries . iterator ( ) ;
rank: 465
score: 99.12621053059895
patch: Iterator iter = res . err . iterator ( ) ;
rank: 466
score: 99.19966634114583
patch: Iterator iter = res [ $STRING$ ] . entries . iterator ( ) ;
rank: 466
score: 99.19853973388672
patch: synchronized ( res ) { iter = res . entries . size ( ) ;
rank: 466
score: 99.17901611328125
patch: Iterator iter = res . parse ( ) . entries ( ) ;
rank: 466
score: 99.17325533353366
patch: Iterator < Number > iter = res . iterator ( ) ;
rank: 466
score: 99.12618314302884
patch: Iterator iter = entries . entries . iterator ( ) ; }
rank: 467
score: 99.19929773667279
patch: Iterator iter = res . entries . entries ( ) ; Iterator iter = 0 ;
rank: 467
score: 99.17899867466518
patch: Iterator iter = new String [ res . iterator ( ) ] ;
rank: 467
score: 99.17318021334134
patch: final Iterator iter = res . iterator . iterator ( ) ;
rank: 467
score: 99.15973510742188
patch: Iterator iter = res . Open CaMeL Map CaMeL Real CaMeL Vector ( ) . entries ( ) ;
rank: 467
score: 99.15675571986607
patch: Iterator v = res . entries . entries . iterator ( ) ;
rank: 467
score: 99.14278157552083
patch: Iterator iter = res . add ( res . size ( ) ) ;
rank: 467
score: 99.12460561899039
patch: Iterator iter = res . has CaMeL Next ( ) ; ;
rank: 468
score: 99.197998046875
patch: Iterator iter = res . entries . entries . iterator ( ) ; *
rank: 468
score: 99.17870076497395
patch: int iter = res . value . iterator ( ) ;
rank: 468
score: 99.17288547092014
patch: if ( v != null ) res . Iterator iter = res . iterator ( ) ;
rank: 468
score: 99.1597038717831
patch: Object [ ] res = Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 468
score: 99.15646798270089
patch: do { Iterator iter = res . entries . iterator ( ) ;
rank: 468
score: 99.14227701822917
patch: Iterator iter = res . contains ( iter . next ( ) ) ;
rank: 468
score: 99.12429574819711
patch: Iterator iter = this . entries . iterator ( ) ; }
rank: 469
score: 99.22701687282986
patch: Iterator iter = res . entries == null ? null : res . iterator ( ) ;
rank: 469
score: 99.19846705386513
patch: Iterator iter = res . list ; while ( iter . has CaMeL Next ( ) ) {
rank: 469
score: 99.19795735677083
patch: Iterator iterator = res . entries . iter ( ) ;
rank: 469
score: 99.17845865885417
patch: Iterator iter = res . entries ( ) . append ( res ) ;
rank: 469
score: 99.17214483963816
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) break ;
rank: 469
score: 99.15965270996094
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this ) ;
rank: 469
score: 99.14220428466797
patch: Iterator iter = res == new Open CaMeL Map CaMeL Real CaMeL Vector ( )
rank: 469
score: 99.12407977764423
patch: Iterator Iterator iter = res . entries . size ( ) ;
rank: 470
score: 99.19786879595588
patch: synchronized ( res ) ; Iterator iter = res . entries . iterator ( ) ;
rank: 470
score: 99.17795235770089
patch: synchronized ( res ) { iter . add ( res ) ; }
rank: 470
score: 99.15961371527777
patch: Iterator iter = res . entries . iterator ( ) ; System . iterator ( ) ;
rank: 470
score: 99.14210728236607
patch: Iterator iter = res . destroy ( ) . iterator ( ) ;
rank: 471
score: 99.22689819335938
patch: Iterator iter = res . entries ( ) . iterator ( ) + 0 ;
rank: 471
score: 99.19784342447916
patch: Iterator iter ; while ( iter . has CaMeL Next ( ) ) {
rank: 471
score: 99.1970723470052
patch: Iterator iter = res . list . iter ( ) ;
rank: 471
score: 99.14166259765625
patch: Iterator iter = res . contains . entries . iterator ( ) ;
rank: 471
score: 99.1231689453125
patch: Iterator iter = res [ iter . has CaMeL Next ( ) ) ;
rank: 472
score: 99.22652994791666
patch: Iterator < String > iter = res . list . iterator ( ) ;
rank: 472
score: 99.19769897460938
patch: Iterator iter = res . next ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 472
score: 99.19608851841518
patch: iter iter = res . entries . entries . iterator ( ) ;
rank: 472
score: 99.17735072544643
patch: for ( ) { Iterator iter = res . iterator ( ) ;
rank: 472
score: 99.17155456542969
patch: Iterator iter = res . iterator ( ) ; synchronized ( res . entries )
rank: 472
score: 99.15960372121711
patch: Iterator < double [ ] > iter = this . res . entries . iterator ( ) ;
rank: 472
score: 99.1229248046875
patch: Iterator iter = res . entries . size ( ) ; {
rank: 473
score: 99.1976318359375
patch: Iterator iter = res ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 473
score: 99.17716158353366
patch: Iterator < String > iter = res . copy ( ) ;
rank: 473
score: 99.15957205636161
patch: if ( res instanceof Open CaMeL Map CaMeL Real CaMeL Vector ) {
rank: 473
score: 99.14097086588542
patch: Iterator iter = res : res . iterator ( ) ;
rank: 474
score: 99.22610473632812
patch: int entries = res . entries . iterator ( ) . iterator ( ) ;
rank: 474
score: 99.17710571289062
patch: Iterator iterator = res . entries ( ) ;
rank: 474
score: 99.17101178850446
patch: boolean iter = res . entries . size ( ) > 0 ;
rank: 474
score: 99.15941220238095
patch: Iterator < Open CaMeL Map CaMeL Entry > iter = res . entries ( ) . iterator ( ) ;
rank: 474
score: 99.15409633091518
patch: Open CaMeL Map CaMeL Real CaMeL Vector . add ( res ) ;
rank: 474
score: 99.14070347377232
patch: Iterator iter = res . replace ( ) . iterator ( ) ;
rank: 474
score: 99.1197979266827
patch: final Iterator iter = this . entries . iterator ( ) ;
rank: 475
score: 99.22532145182292
patch: if ( res == null ) Iterator iter = res . entries . iterator ( ) ;
rank: 475
score: 99.19701385498047
patch: Iterator iter = res . get CaMeL Annotations ( ) . iterator ( ) ;
rank: 475
score: 99.19340006510417
patch: Iterator iter = res . iter . entries ( ) ;
rank: 475
score: 99.18740844726562
patch: res . set CaMeL Entry ( iter . key ) ;
rank: 475
score: 99.17701939174107
patch: Iterator iter = res . round ( ) . iterator ( ) ;
rank: 475
score: 99.17100614659927
patch: if ( res . res != null ) res . res = res . entries ;
rank: 475
score: 99.1591552734375
patch: for ( iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 475
score: 99.15370279947916
patch: Iterator iter = res . entries . get ( v . length ) ;
rank: 475
score: 99.140625
patch: Iterator iter = res != null ? res . size ( ) : false ;
rank: 475
score: 99.11932779947917
patch: Iterator iter = res . entries . index CaMeL Of ( v ) ;
rank: 476
score: 99.19683283025569
patch: Iterator iter = this . iterator . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 476
score: 99.192626953125
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter .
rank: 476
score: 99.18711635044643
patch: Iterator iter = res . entries . iterator . entries ( ) ;
rank: 476
score: 99.17069284539474
patch: if ( res . res != null ) res . res . res = res . entries ;
rank: 476
score: 99.15303861177884
patch: Iterator iter = res . entries ( ) . ( ) ;
rank: 476
score: 99.11927083333333
patch: Iterator iter = res . iter . has CaMeL Next ( ) ; {
rank: 477
score: 99.2250244140625
patch: final int size = res . iterator ( ) . size ( ) ;
rank: 477
score: 99.1764892578125
patch: Iterator iter = res . parse ( res . entries ( ) ) ;
rank: 477
score: 99.16996256510417
patch: / * Iterator iter = v . iterator ( ) ;
rank: 477
score: 99.15302734375
patch: Iterator iter = res . entries . entries ( ) . ( ) ;
rank: 477
score: 99.11841692243304
patch: Iterator iter = res . get CaMeL Value ( ) . length ;
rank: 478
score: 99.224853515625
patch: Iterator iter = res . iterator = res . iterator ( ) ;
rank: 478
score: 99.1962890625
patch: System . arraycopy ( res . entries , 0 , res . list , 0 , v . length ) ;
rank: 478
score: 99.19225260416667
patch: Iterator iter = res . entries . iter ( ) ; = null ;
rank: 478
score: 99.16975620814732
patch: Iterator iter ; try { iter = res . entries ( ) ;
rank: 478
score: 99.15250941685268
patch: Iterator iter = res . FALSE . entries . iterator ( ) ;
rank: 479
score: 99.22431640625
patch: Iterator < Class > iterator = res . entries . iterator ( ) ;
rank: 479
score: 99.19610916940789
patch: Iterator iter = v . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 479
score: 99.19206686580883
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . }
rank: 479
score: 99.17637282151442
patch: res . value = res . entries . iterator ( ) ;
rank: 479
score: 99.16965203536184
patch: if ( res != null ) res . ) res . res = res . entries . ;
rank: 479
score: 99.15833100818452
patch: Iterator iter = res . entries . length ; while ( iter . has CaMeL Next ( ) ) {
rank: 479
score: 99.15247344970703
patch: Iterator iter = res . name . entries ( ) . entries ( ) ;
rank: 479
score: 99.13799176897321
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector >
rank: 479
score: 99.11744791666666
patch: Iterator iter = res . clone ( ) . iterator ( ) ; ;
rank: 480
score: 99.19608989514802
patch: int size = res . entries . length ; Iterator iter = res . iterator ( ) ;
rank: 480
score: 99.19189453125
patch: Iterator iter iter = res . iterator ( ) ;
rank: 480
score: 99.17630208333334
patch: synchronized ( res ) { Iterator entries = res . entries ( ) ;
rank: 480
score: 99.16740866268383
patch: if ( res != null ) { res . entries = res . entries ; }
rank: 480
score: 99.11687360491071
patch: Iterator iter = ( Iterator . has CaMeL Next ( ) ) ;
rank: 481
score: 99.22357647235577
patch: Iterator < ? > entries = res . entries ( ) ;
rank: 481
score: 99.19587145353618
patch: res . set CaMeL Length ( 0 ) ; Iterator iter = res . iterator ( ) ;
rank: 481
score: 99.19186740451389
patch: iter = res . iterator ( ) ;
rank: 481
score: 99.18609619140625
patch: Vector iter = this . res . entries . iterator ( ) ;
rank: 481
score: 99.17604417067308
patch: Iterator < ] > iterator = res . iterator ( ) ;
rank: 481
score: 99.16685133713942
patch: Iterator iter = res . entries ( iterator ( ) ) ;
rank: 481
score: 99.15190778459821
patch: Open CaMeL Map CaMeL Real CaMeL Vector [ ] res = null ;
rank: 482
score: 99.19545288085938
patch: Iterator iterator = list . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 482
score: 99.16660443474265
patch: if ( res != null ) { Iterator iter = res . entries ( ) ;
rank: 482
score: 99.1574951171875
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res .
rank: 482
score: 99.11658653846153
patch: final Iterator iter = entries . entries . iterator ( ) ;
rank: 483
score: 99.22306002103366
patch: Iterator < String > iterator = res . iterator ( ) ;
rank: 483
score: 99.19521262428977
patch: Iterator iter = res . copy . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 483
score: 99.16639619715073
patch: Iterator iter = res . iterator ( ) ; boolean has CaMeL Next = false ;
rank: 483
score: 99.15714205228366
patch: Iterator ( iter = res . entries . iterator ( ) ;
rank: 483
score: 99.15141296386719
patch: Iterator iter = res . map . entries ( ) . entries ( ) ;
rank: 483
score: 99.13717215401786
patch: Iterator iter = res . ceil ( ) . iterator ( ) ;
rank: 484
score: 99.19509055397727
patch: Iterator iterator = data . entries . iterator ( ) ; while ( iterator . has CaMeL Next ( ) )
rank: 484
score: 99.166259765625
patch: Collection res = res . iterator ( ) . next ( ) ;
rank: 484
score: 99.15679376775569
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( v . length ) ;
rank: 484
score: 99.13713727678571
patch: Iterator iter = res . interrupt ( ) . iterator ( ) ;
rank: 484
score: 99.11561802455357
patch: Iterator iter = res . entries . iterator ( ) ; / :
rank: 485
score: 99.22279459635416
patch: Iterator < private > iter = res . entries . iterator ( ) ;
rank: 485
score: 99.195068359375
patch: Iterator iter = res . list ( res . entries . size ( ) ) ;
rank: 485
score: 99.17381184895834
patch: Iterator iter = res . entries ( ) . remove ( 1 ) ;
rank: 485
score: 99.166015625
patch: Iterator iter = res . entries ( . length ) ;
rank: 485
score: 99.15678267045455
patch: Iterator iter = res . to CaMeL Array ( Open CaMeL Map CaMeL Real CaMeL Vector . size ( ) )
rank: 485
score: 99.13691929408482
patch: Iterator entries = this . res . entries . iterator ( ) ;
rank: 486
score: 99.1737772623698
patch: Iterator iter = res . entries ( ) ; try {
rank: 486
score: 99.16600799560547
patch: if ( res != null ) { res . entries = res . entries ;
rank: 486
score: 99.15653483072917
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries ( ) )
rank: 486
score: 99.15056501116071
patch: Iterator iter = res != null + v . size ( ) ;
rank: 486
score: 99.13685825892857
patch: Iterator iter = res . insert ( ) . iterator ( ) ;
rank: 487
score: 99.22205268012152
patch: int size = res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 487
score: 99.19107491629464
patch: Iterator iter = res . entries . end . iterator ( ) ;
rank: 487
score: 99.18396868024554
patch: Iterator iter = res . [ 0 ] . iterator ( ) ;
rank: 487
score: 99.15618024553571
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > entries = res . entries . entries ( ) ;
rank: 487
score: 99.1145528157552
patch: Iterator iter = res . Math . size ( ) ;
rank: 488
score: 99.22199563419117
patch: Iterator < Iterator > iter = res . entries ( ) . entries ( ) ;
rank: 488
score: 99.17307535807292
patch: Iterator iter = res . value . entries ( ) ;
rank: 488
score: 99.16480712890625
patch: if ( res == null ) return res ;
rank: 488
score: 99.15587093955592
patch: Iterator < Real CaMeL Vector > iter = res . entries ( ) . iterator ( ) ;
rank: 488
score: 99.15039934430804
patch: Iterator iter = res . entries . ( ) . ( ) ;
rank: 489
score: 99.2214714499081
patch: Iterator < ? > iter = res . entries = res . iterator ( ) ;
rank: 489
score: 99.19321511008523
patch: Object iter = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 489
score: 99.19037334735577
patch: Iterator iter . Iterator iter = res . iterator ( ) ;
rank: 489
score: 99.18291829427083
patch: Iterator iter = check CaMeL Vector CaMeL Dimensions ( v . length ) ;
rank: 489
score: 99.17290790264423
patch: Iterator < int > iter = res . entries ( ) ;
rank: 489
score: 99.16461736505681
patch: res . entries = res . entries . length ;
rank: 489
score: 99.15570427389706
patch: Iterator < boolean [ ] > iter = res . entries . iterator ( ) ;
rank: 489
score: 99.13628278459821
patch: Iterator iter = res . max ( ) . size ( ) ;
rank: 490
score: 99.22136981670673
patch: Iterator < synchronized > iter = res . iterator ( ) ;
rank: 490
score: 99.1927554481908
patch: Iterator iter = res . entries [ res . length - 1 ] . iterator ( ) ;
rank: 490
score: 99.19000713641827
patch: Iterator iter = res . entries . iterator ( ) ; entries
rank: 490
score: 99.182861328125
patch: Iterator iter = this . this . res . iterator ( ) ;
rank: 490
score: 99.1727294921875
patch: final int entries . iterator ( ) . iterator ( ) ;
rank: 490
score: 99.16454139122597
patch: Iterator iter = res . entries 1 . iterator ( ) ;
rank: 490
score: 99.1552734375
patch: ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . set CaMeL Entry ( iter ) ;
rank: 490
score: 99.14998953683036
patch: Iterator iter = res . close ( ) . entries ( ) ;
rank: 490
score: 99.11400428185097
patch: Iterator < Entry = res . entries . iterator ( ) ;
rank: 491
score: 99.18966238839286
patch: Iterator iter = res . entries . entries . Iterator ( ) ;
rank: 491
score: 99.17249348958333
patch: Iterator iter = res . substring ( 0 , res . length ) ;
rank: 491
score: 99.16426166735198
patch: Iterator iter = res . iterator ( ) ; int size = res . size ( ) ;
rank: 491
score: 99.1546630859375
patch: Iterator iter = res . entries ( v . length ) ;
rank: 491
score: 99.14938790457589
patch: int [ ] v = new double [ v . length ] ;
rank: 491
score: 99.13566371372768
patch: Iterator iter = res . iter ( ) . next ( ) ;
rank: 492
score: 99.2193359375
patch: Iterator < Error > iter = res . entries . iterator ( ) ;
rank: 492
score: 99.19227294921875
patch: System . arraycopy ( v , 0 , res . entries , 0 , res . size ) ;
rank: 492
score: 99.18892124720982
patch: try ; Iterator iter = res . entries . iterator ( ) ;
rank: 492
score: 99.18117850167411
patch: if ( iter . has CaMeL Next ( ) ) { for (
rank: 492
score: 99.17179361979167
patch: Iterator [ ] iter = res . entries ( ) ;
rank: 492
score: 99.14925711495536
patch: check CaMeL Vector CaMeL Dimensions ( res . size ( ) ) ;
rank: 492
score: 99.13526262555804
patch: Iterator iter = res . contains ( v [ 0 ] ) ;
rank: 492
score: 99.11282113882211
patch: while ( iter . has CaMeL Next ( ) ) { {
rank: 493
score: 99.19135598575367
patch: Iterator iter = res . entries ; Iterator iter = res . iterator ( ) ;
rank: 493
score: 99.17144775390625
patch: Iterator iter = res . round ( ) . entries ( ) ;
rank: 493
score: 99.16422765395221
patch: if ( res != null ) res . entries = res . entries ( ) ;
rank: 493
score: 99.15369233630952
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res ) { res . set CaMeL Entry (
rank: 493
score: 99.11268967848558
patch: else Iterator iter = res . entries . iterator ( ) ;
rank: 494
score: 99.21839815027573
patch: Iterator < Class > iter = res . entries ( ) . iter ( ) ;
rank: 494
score: 99.18862017463235
patch: Iterator iter = res . entries . iterator ( ) ; iterator = ( ) ;
rank: 494
score: 99.17997523716518
patch: if ( iter . has CaMeL Next ( ) ) return res ;
rank: 494
score: 99.17129720052084
patch: final int res . entries . iterator ( ) . iterator ( ) ;
rank: 494
score: 99.11228590745192
patch: final Iterator iter = v . entries . iterator ( ) ;
rank: 495
score: 99.2183478860294
patch: Iterator < Entry < ? > iter = res . entries . iterator ( ) ;
rank: 495
score: 99.19073845358456
patch: int size = res . length ; Iterator iter = res . iterator ( ) ;
rank: 495
score: 99.18845912388393
patch: Iterator iter = res . entries . iterator . iter ( ) ;
rank: 495
score: 99.1795166015625
patch: Iterator iter = res . entries . entries ( ) [ $NUMBER$ ] ;
rank: 495
score: 99.163818359375
patch: synchronized ( this ) { Iterator iter = res . iterator . iterator ( ) ;
rank: 495
score: 99.14881134033203
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new Long ( this ) ;
rank: 496
score: 99.21818033854167
patch: Iterator < Iterator > iter = res . entries . size ( ) ;
rank: 496
score: 99.19043782552083
patch: Iterator iter = res . entries [ res . size ( ) ] ;
rank: 496
score: 99.18831140854779
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = false ;
rank: 496
score: 99.17015991210937
patch: int entries = res . entries ( ) ;
rank: 496
score: 99.16371663411458
patch: Iterator iter ; while ( iter . has CaMeL Next ( ) ) { res . ;
rank: 496
score: 99.15325249565973
patch: Iterator iter = res . entries . iterator ( ) ; iter . advance ( ) ;
rank: 496
score: 99.14775739397321
patch: Iterator iter = this . entries . entries . size ( ) ;
rank: 496
score: 99.13437325613839
patch: Iterator iter = res . TYPE . entries . iterator ( ) ;
rank: 496
score: 99.1104736328125
patch: final Iterator res = res . entries . iterator ( ) ;
rank: 497
score: 99.18802490234376
patch: Iterator iter = res . copy ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 497
score: 99.1794766512784
patch: Iterator iter = res . entries . iterator ( )
rank: 497
score: 99.17007446289062
patch: Iterator iter = res . entries $NUMBER$ iterator ( ) ;
rank: 497
score: 99.15267783717105
patch: Iterator < double [ ] > iter = v . entries . entries . iterator ( ) ;
rank: 497
score: 99.13395385742187
patch: Iterator entries = res . size ( ) ;
rank: 497
score: 99.11027388139205
patch: Iterator iter = res . contains ( this ) ;
rank: 498
score: 99.18783365885416
patch: Iterator iter = new Object > ( res . iterator ( ) ) ;
rank: 498
score: 99.18779440487133
patch: Iterator iter = ( int [ ] ) res . list . iterator ( ) ;
rank: 498
score: 99.16915893554688
patch: Iterator [ ] entries = res . entries ( ) ;
rank: 498
score: 99.1631591796875
patch: Iterator < Iterator < T > iter = res . iterator ( ) ;
rank: 498
score: 99.13311004638672
patch: Iterator iter = res . entries . iterator ( ) : res . entries ;
rank: 498
score: 99.11016376201923
patch: Iterator iter = res . length . iterator ( ) ; ;
rank: 499
score: 99.1876953125
patch: iter = res . entries . iterator ( ) ; Iterator iter = res . iterator ( ) ;
rank: 499
score: 99.18759765625
patch: Iterator iter = res . entries . iter ( ) ; iterator ++ ;
rank: 499
score: 99.17935180664062
patch: Iterator iter = v . entries . iter ( ) ;
rank: 499
score: 99.16282823350694
patch: if ( res != null ) { res . entries = res . entries . length ;
rank: 499
score: 99.15198335193452
patch: Iterator iter . has CaMeL Next ( ) ; ) { Open CaMeL Map CaMeL Real CaMeL Vector res ;
rank: 499
score: 99.14719063895089
patch: Iterator iter = res . entries . TRUE . iterator ( ) ;
rank: 499
score: 99.13278634207589
patch: Iterator iter = res . remove ( ) . entries ( ) ;
rank: 499
score: 99.1099853515625
patch: Iterator < Entry > iter = res . size ( ) ;
rank: 500
score: 99.21676296657986
patch: if ( res != null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 500
score: 99.16220431857639
patch: if ( res != null ) { res . entries = res . entries . entries ;
rank: 500
score: 99.15194541529605
patch: Iterator < Class < ? > iter = res . entries . entries . iterator ( ) ;
rank: 500
score: 99.13121686662946
patch: Iterator iter = res . entries . iterator ( ) : res ;
rank: 500
score: 99.1099141438802
patch: Iterator iter = res . add . size ( ) ;
rank: 501
score: 99.21573311941964
patch: final Iterator < Iterator > iter = res . entries ( ) ;
rank: 501
score: 99.18717651367187
patch: Iterator iter = res . entries ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 501
score: 99.18666076660156
patch: Iterator iter . iterator ( ) ;
rank: 501
score: 99.1786376953125
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = ebe CaMeL Divide null ;
rank: 501
score: 99.16213754507211
patch: res . res = res . entries . iterator ( ) ;
rank: 501
score: 99.14619445800781
patch: Iterator iter = res . entries . entries . entries . entries . entries ;
rank: 501
score: 99.10930926983173
patch: Iterator iter = v . ( ) . iterator ( ) ;
rank: 502
score: 99.21548122829861
patch: final Iterator < Class > iter = res . entries ( ) . iterator ( ) ;
rank: 502
score: 99.1864990234375
patch: Iterator iter = res . entries . iterator ( ) ; ; / /
rank: 502
score: 99.16779119318181
patch: final int iter = res . entries ( ) ;
rank: 502
score: 99.16207546657986
patch: if ( v != null ) res . ) res . res . res . ) ;
rank: 502
score: 99.15171595982143
patch: Iterator iter = list . entries . entries . iterator ( ) ;
rank: 502
score: 99.10919189453125
patch: if ( res . entries . size ( ) > 1 ) {
rank: 503
score: 99.21510943244485
patch: Iterator < ) [ ] > iter = res . entries . iterator ( ) ;
rank: 503
score: 99.18617757161458
patch: Iterator iter Iterator iter = res . iterator ( ) ;
rank: 503
score: 99.16146414620536
patch: res . res = res . get CaMeL Bytes ( $STRING$ ) ;
rank: 503
score: 99.15133231026786
patch: Iterator iter += res . iterator ( ) . iterator ( ) ;
rank: 504
score: 99.21376389723558
patch: final Iterator iterator = res . entries . iterator ( ) ;
rank: 504
score: 99.18576284555289
patch: res . iter = res . entries . iterator ( ) ;
rank: 504
score: 99.16099146792763
patch: if ( res != null ) res . res = res . get CaMeL Bytes ( ) ;
rank: 504
score: 99.12945556640625
patch: Iterator iter = res : res . size ( ) ;
rank: 504
score: 99.10844203404018
patch: while ( v . entries . size ( ) > 0 ) {
rank: 505
score: 99.2137451171875
patch: Iterator < Object > iter = res . entries . entries ( ) . entries ( ) ;
rank: 505
score: 99.18520682198661
patch: Iterator iter = res . iterator ( ) ; ) return res ;
rank: 505
score: 99.184619140625
patch: Iterator iter = v . size ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 505
score: 99.17684500558036
patch: Iterator iter = res . entries ( ) . Iterator ( ) ;
rank: 505
score: 99.15977076480263
patch: if ( res . entries != null && res . entries . size ( ) != 0 )
rank: 505
score: 99.15090762867646
patch: Iterator < String > iter = v . entries ( ) . iterator ( ) ;
rank: 506
score: 99.21372584292763
patch: final int [ ] entries = res . entries . iterator ( ) . iterator ( ) ;
rank: 506
score: 99.18515249399039
patch: Iterator < / > iter = res . iterator ( ) ;
rank: 506
score: 99.17659214564732
patch: Iterator iter = res . size . entries . iterator ( ) ;
rank: 506
score: 99.163134765625
patch: Iterator iter = res . entries ( ) . remove ( res ) ;
rank: 506
score: 99.15974934895833
patch: if ( res . entries != null ) return res ;
rank: 506
score: 99.14348493303571
patch: Iterator iter = res . data . entries . size ( ) ;
rank: 506
score: 99.10723005022321
patch: Iterator iter = res . entries . size ( ) ; while (
rank: 507
score: 99.21353952508224
patch: Iterator iter = res . entries ( ) . entries ( ) . iterator ( ) ) ;
rank: 507
score: 99.1849724264706
patch: Iterator iter = res . entries . iter ( ) ; Iterator iter = 0 ;
rank: 507
score: 99.1628662109375
patch: Iterator iter = res . entries ( ) ; copy ( res ) ;
rank: 507
score: 99.15944260817308
patch: Iterator iter = res . iterator . iterator ( ) ) ;
rank: 507
score: 99.15046243106617
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res .
rank: 507
score: 99.14298502604167
patch: Iterator iter = res . entries . read ( v . length ) ;
rank: 508
score: 99.18471854073661
patch: / iter = res . entries . entries . iterator ( ) ;
rank: 508
score: 99.17632649739583
patch: if ( iter . has CaMeL Next ( ) ) { return res ;
rank: 508
score: 99.16273850661058
patch: Iterator < String : res . entries . iterator ( ) ;
rank: 508
score: 99.15939127604166
patch: if ( res . size ( ) > res . size ( ) )
rank: 508
score: 99.15039672851563
patch: Iterator iter < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 508
score: 99.1429672241211
patch: Iterator iter = res . get CaMeL Index ( ) . entries ( ) ;
rank: 508
score: 99.12782505580357
patch: Iterator iter = res . max ( ) . entries ( ) ;
rank: 509
score: 99.21311848958334
patch: final boolean iter = res . entries . iterator ( ) != null ;
rank: 509
score: 99.18461339613971
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter = 1 ;
rank: 509
score: 99.18284505208334
patch: iter = new Iterator ( res . entries . size ( ) ) ;
rank: 509
score: 99.16262381417411
patch: Iterator iter = res . entries ( ) . append ( ) ;
rank: 509
score: 99.15934922960069
patch: if ( v != null ) Iterator iter = res . entries . iterator ( ) ;
rank: 509
score: 99.15001831054687
patch: Iterator < final Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 509
score: 99.12751116071429
patch: Iterator iter = iter . next ( ) . entries ( ) ;
rank: 509
score: 99.10683186848958
patch: Iterator iter = res . next ( ) . length ;
rank: 510
score: 99.21303196957237
patch: final int entries = res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 510
score: 99.18264590992646
patch: Iterator iter = res . get CaMeL Classes ( ) . iterator ( ) ; ;
rank: 510
score: 99.17520845853366
patch: Iterator iter = res . entries ( ) . iterator ( )
rank: 510
score: 99.16261643629808
patch: int < ] : res . entries . iterator ( ) ;
rank: 510
score: 99.15932395241477
patch: Iterator iter = res . iterator ( res ) ;
rank: 510
score: 99.1499492938702
patch: Iterator < boolean > iter = res . iterator ( ) ;
rank: 510
score: 99.1273905436198
patch: Iterator iter = res . set . iterator ( ) ;
rank: 510
score: 99.106689453125
patch: Iterator iter = res . 1 . iterator ( ) ;
rank: 511
score: 99.2130126953125
patch: if ( res != null ) return res . entries ( ) ;
rank: 511
score: 99.18264288651316
patch: Iterator iter = this . res ; while ( iter . has CaMeL Next ( ) ) {
rank: 511
score: 99.17510114397321
patch: Iterator iter = res . entries . iterator ( ) ; System .
rank: 511
score: 99.16225961538461
patch: int < ] > entries = res . entries ( ) ;
rank: 511
score: 99.15864000822368
patch: if ( res . entries != null ) { Iterator iter = res . iterator ( ) ;
rank: 511
score: 99.14982386997768
patch: Iterator iter = res . get CaMeL Entry . iterator ( ) ;
rank: 511
score: 99.12709045410156
patch: Iterator iter = res . get CaMeL Id ( ) . entries ( ) ;
rank: 511
score: 99.10642653245192
patch: Iterator ++ iter = res . entries . iterator ( ) ;
rank: 512
score: 99.21286446707589
patch: final Iterator < Object > entries = res . entries ( ) ;
rank: 512
score: 99.18396868024554
patch: / iter Iterator iter = res . entries . iterator ( ) ;
rank: 512
score: 99.18252563476562
patch: Iterator iter = value . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 512
score: 99.17497907366071
patch: Iterator iter = iter . entries ( ) . size ( ) ;
rank: 512
score: 99.16195913461539
patch: Iterator -- iter = res . entries . iterator ( ) ;
rank: 512
score: 99.15842982700893
patch: if ( res != null ) res . entries = . entries ;
rank: 512
score: 99.14960680509868
patch: Iterator < byte [ ] > iter = res . entries . entries . iterator ( ) ;
rank: 512
score: 99.10614483173077
patch: Iterator iter = res . load ( v . length ) ;
rank: 513
score: 99.21285247802734
patch: Iterator < int > iter = res . entries . iterator ( ) ; else
rank: 513
score: 99.18341936383929
patch: Iterator iter = res . entries . put . iterator ( ) ;
rank: 513
score: 99.18202311197916
patch: Iterator iter = res . list ( res . size ( ) ) ;
rank: 513
score: 99.1746826171875
patch: Iterator iter = res != null * v . iterator ( ) ;
rank: 513
score: 99.16169084821429
patch: synchronized ( res ) { res . add ( res ) ; }
rank: 513
score: 99.15787999770221
patch: Iterator iter = res . iterator ( ) ; int size = v . length ;
rank: 513
score: 99.10601806640625
patch: Iterator iter = res . entries . iterator ( ) ; do {
rank: 514
score: 99.21278782894737
patch: if ( res != null ) { iter = res . entries . iterator ( ) ; }
rank: 514
score: 99.18277413504464
patch: Iterator iter = res . entries . matches . iterator ( ) ;
rank: 514
score: 99.16070087139423
patch: Iterator < ] > iter = entries . iterator ( ) ;
rank: 514
score: 99.15767176011029
patch: Iterator iter = res . entries ( ) . iterator ( ) ; 0 ++ ;
rank: 514
score: 99.14910016741071
patch: Enumeration < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries ( ) ;
rank: 515
score: 99.17256382533482
patch: Iterator iter = res . entries == null . iterator ( ) ;
rank: 515
score: 99.16062709263393
patch: synchronized ( res ) { entries . add ( res ) ; }
rank: 515
score: 99.15676398026316
patch: if ( res != null ) res . entries = res . entries . entries ( ) ;
rank: 515
score: 99.148681640625
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . length ;
rank: 515
score: 99.1256332397461
patch: Iterator iter = res != null ? res . size ( ) : true ;
rank: 515
score: 99.10578264508929
patch: Iterator iter = res . entries . iterator ( ) ; if (
rank: 516
score: 99.21269226074219
patch: Iterator iter = res . entries ( ) . entries ( ) != null ;
rank: 516
score: 99.18272986778847
patch: Iterator iter = res . entries . iterator ( ) ; public
rank: 516
score: 99.17240687779018
patch: Iterator iter = res . length : v . iterator ( ) ;
rank: 516
score: 99.15975247896634
patch: Iterator iter ; Iterator iter = res . entries ( ) ;
rank: 516
score: 99.15672543174342
patch: if ( res != null ) res . res = res . entries . entries ( ) ;
rank: 516
score: 99.14845969460227
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this .
rank: 516
score: 99.14006696428571
patch: int [ ] v = new double [ res . length ] ;
rank: 517
score: 99.17208862304688
patch: check CaMeL Vector CaMeL Dimensions ( v . length ) ;
rank: 517
score: 99.15657261439732
patch: Iterator iter = res . iterator . iterator ( ) - 1 ;
rank: 517
score: 99.14834255642361
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ( )
rank: 517
score: 99.124755859375
patch: Iterator iter = res . index CaMeL Of ( 0 , 0 ) ;
rank: 517
score: 99.10526216947116
patch: Iterator iter = v [ ) . size ( ) ] ;
rank: 518
score: 99.21206229073661
patch: Iterator < int * : res . entries . iterator ( ) ;
rank: 518
score: 99.18076782226562
patch: Iterator iter = min . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 518
score: 99.15614670973558
patch: Iterator iter = res . entries $NUMBER$ . iterator ( ) ;
rank: 518
score: 99.14804077148438
patch: Iterator iter = res != null ? res . entries . entries . iterator ( ) : null ;
rank: 518
score: 99.10427621694711
patch: final Iterator entries = res . entries . iterator ( ) ;
rank: 519
score: 99.21182686941964
patch: final Iterator < ? > iter = res . entries ( ) ;
rank: 519
score: 99.15835135323661
patch: Iterator iter = res . entries ( ) . join ( ) ;
rank: 519
score: 99.15553635817308
patch: Iterator iter = v . entries ( ) ; while ( )
rank: 519
score: 99.14788818359375
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) . advance ( ) ;
rank: 519
score: 99.12354625355114
patch: Iterator iter = res . size ( ) 1 ;
rank: 520
score: 99.21155657087054
patch: final Iterator < E > iter = res . iterator ( ) ;
rank: 520
score: 99.18081229073661
patch: Iterator iter = res . get = res . entries ( ) ;
rank: 520
score: 99.16995675223214
patch: Iterator iter = res != null + v . iterator ( ) ;
rank: 520
score: 99.15746131310097
patch: this . entries . iterator ( ) . iterator ( ) ;
rank: 520
score: 99.15529913651316
patch: List iter = res . entries ( ) ; Iterator iter = iter . iterator ( ) ;
rank: 520
score: 99.14764083059211
patch: Iterator < while . has CaMeL Next ( ) ; ) { iter . advance ( ) ;
rank: 521
score: 99.21128627232143
patch: Iterator iter = System . entries ( ) . iterator ( ) ;
rank: 521
score: 99.18026968149039
patch: Iterator iter = res . iterator ( ) ; = $NUMBER$ ;
rank: 521
score: 99.17951516544117
patch: synchronized ( this ) { iter = res . entries . size ( ) ; }
rank: 521
score: 99.16993001302083
patch: synchronized ( v ) { Iterator iter = res . iterator ( ) ;
rank: 521
score: 99.15734252929687
patch: List iter = res . entries ( ) ;
rank: 521
score: 99.1034647623698
patch: Iterator iter = res . entries ) iterator ( ) ;
rank: 522
score: 99.21125623914931
patch: final Iterator < E > iter = res . entries ( ) . iterator ( ) ;
rank: 522
score: 99.17878723144531
patch: Iterator iter = size ; while ( iter . has CaMeL Next ( ) )
rank: 522
score: 99.16980852399554
patch: Iterator iter = res . entries != null . iterator ( ) ;
rank: 522
score: 99.15723419189453
patch: Iterator iter = res . entries . iterator ( ) ; int * * /
rank: 522
score: 99.15484619140625
patch: Iterator iter = res . iterator . iterator . iterator ( ) ;
rank: 522
score: 99.13900553385416
patch: Iterator iter = res . to CaMeL Array ( v . length ) ;
rank: 522
score: 99.10326209435097
patch: Iterator iter = res . . entries . size ( ) ;
rank: 523
score: 99.16957600911458
patch: Iterator iter = set . entries . iterator ( ) ;
rank: 523
score: 99.1570556640625
patch: synchronized ( res ) { Iterator iter = res . size ( ) ;
rank: 523
score: 99.15405951605902
patch: if ( v == null ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;
rank: 523
score: 99.14727492559524
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . iterator ( ) ) ;
rank: 524
score: 99.17919921875
patch: Iterator iter = res . read ( res ) ;
rank: 524
score: 99.16945103236607
patch: Iterator iter = v . entries = res . iterator ( ) ;
rank: 524
score: 99.15651448567708
patch: Iterator [ ] res = res . iterator ( ) ;
rank: 524
score: 99.15403529575893
patch: Iterator iter = res . iterator ( ) ; synchronized ( this )
rank: 524
score: 99.14724249588816
patch: Iterator while ( res . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 524
score: 99.10250854492188
patch: int iter = res . length ;
rank: 525
score: 99.21065848214286
patch: final Iterator < int > iter = res . iterator ( ) ;
rank: 525
score: 99.17901056463069
patch: Iterator iter = res . entries . ( ) ;
rank: 525
score: 99.17783203125
patch: Iterator iter = in . iterator ( ) ; while ( iter . has CaMeL Next ( ) )
rank: 525
score: 99.14716796875
patch: Iterator iter = res . entries ( ) . entries . entries ( ) . iterator ( ) ;
rank: 525
score: 99.13816731770834
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set ( res ) ;
rank: 525
score: 99.10230431189903
patch: Iterator iter = res . entries . Iterator ( this ) ;
rank: 526
score: 99.20998247931985
patch: Iterator < Iterator > iter = res . entries = res . iterator ( ) ;
rank: 526
score: 99.17783203125
patch: Iterator iter = res . entries ; while ( iter . has CaMeL Next ( ) ) { ;
rank: 526
score: 99.15544782366071
patch: Iterator iter = res . iterator ( ) ; next ( ) ;
rank: 526
score: 99.15358189174107
patch: Iterator iter = v . iterator ( ) ; while ( ) {
rank: 526
score: 99.12099984975961
patch: Iterator iter >> = res . entries . iterator ( ) ;
rank: 526
score: 99.10219163161058
patch: Iterator res = res . entries . iterator ( ) ; ;
rank: 527
score: 99.20968807444854
patch: Iterator < Iterator < Integer > iter = res . entries . iterator ( ) ;
rank: 527
score: 99.17769165039063
patch: Iterator list = v . iterator ( ) ; while ( list . has CaMeL Next ( ) )
rank: 527
score: 99.1776123046875
patch: Iterator iter = res . entries ( ) . iterator ( ) ; .
rank: 527
score: 99.1544901529948
patch: Iterator iter = res . entries ( ) != null ;
rank: 527
score: 99.15357384314903
patch: if ( res != null && res . length != 0 )
rank: 527
score: 99.14637044270833
patch: Iterator < Object > iter = this . entries . iterator ( ) ;
rank: 527
score: 99.13738141741071
patch: Iterator iter = res . next ( ) . next ( ) ;
rank: 527
score: 99.12094455295139
patch: Iterator iter = res [ 0 ] ;
rank: 527
score: 99.10107421875
patch: while ( res . entries . size ( ) > 0 ) {
rank: 528
score: 99.2095947265625
patch: Iterator iter = 0 . entries . iterator ( ) ;
rank: 528
score: 99.17741255326705
patch: Iterator iter = res . add ( res ) ;
rank: 528
score: 99.16717529296875
patch: Iterator iter = ( v . entries . iterator ( ) ) ;
rank: 528
score: 99.15419514973958
patch: Iterator iterator = res . entries . size ( ) ;
rank: 528
score: 99.14614035866477
patch: for ( iter = v . entries . iterator ( ) ; iter . has CaMeL Next ( ) ; )
rank: 528
score: 99.09980991908482
patch: Iterator iter = ( res . size ( ) > 0 ) ;
rank: 529
score: 99.20905010516827
patch: Iterator < Throwable > iter = res . iterator ( ) ;
rank: 529
score: 99.17739633413461
patch: Iterator iter = res . iterator ( ) ; iterator -- ;
rank: 529
score: 99.17649623325893
patch: res . set CaMeL Length ( res . size ( ) ) ;
rank: 529
score: 99.15273030598958
patch: Collection res = res . entries . entries ( ) ;
rank: 529
score: 99.14593184621711
patch: Iterator iter = res . length ; while ( iter . has CaMeL Next ( ) ) {
rank: 529
score: 99.11928013392857
patch: Iterator iter = res != null ? res . length : $NUMBER$ ;
rank: 529
score: 99.0985440340909
patch: Iterator Iterator iter = res . iterator ( ) ;
rank: 530
score: 99.20829264322917
patch: Iterator < Iterator < String > iter = res . iterator ( ) ;
rank: 530
score: 99.17601821001838
patch: Iterator iter = res . get CaMeL Entries ( ) . iterator ( ) ; ;
rank: 530
score: 99.16644287109375
patch: Iterator iter = res . entries . entries ( ) ; for (
rank: 530
score: 99.15380859375
patch: final Iterator < ] > iter = res . entries ( ) ;
rank: 530
score: 99.1521224975586
patch: res . entries [ res . entries . length - 1 ] = res ;
rank: 530
score: 99.09834507533482
patch: Iterator iter = res . floor ( ) . entries ( ) ;
rank: 531
score: 99.2081298828125
patch: Iterator iter = ( res . iterator ( ) ) ;
rank: 531
score: 99.16623942057292
patch: Iterator iter = res [ iter . length 1 ] ;
rank: 531
score: 99.15374755859375
patch: Iterator entries = res . value . iterator ( ) ;
rank: 531
score: 99.15198863636364
patch: res . entries = res . entries . entries ;
rank: 531
score: 99.11861746651786
patch: Iterator iter = res != null ? res . size ( ) ;
rank: 531
score: 99.09765625
patch: Iterator iter = res . load . iterator ( ) ;
rank: 532
score: 99.20773111979166
patch: Iterator < Enum > iter = res . entries . iterator ( ) ;
rank: 532
score: 99.17696707589286
patch: Iterator iter = res . iterator . iter . iterator ( ) ;
rank: 532
score: 99.15359262319711
patch: int < ] > iter = res . entries ( ) ;
rank: 532
score: 99.14475611636513
patch: Iterator < iter . has CaMeL Next ( ) ; ) { iter . advance ( ) ;
rank: 533
score: 99.2075439453125
patch: Iterator iter = res . entries ( ) . entries ( ) ) ;
rank: 533
score: 99.17643519810268
patch: iter . Iterator iter = res . entries . iterator ( ) ;
rank: 533
score: 99.15338541666667
patch: Iterator iter = res . entries . iterator ( ) ; case 1 :
rank: 533
score: 99.15171712239584
patch: if ( res != null && res . length < res . length )
rank: 533
score: 99.14474326685855
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) ; }
rank: 533
score: 99.0942852313702
patch: final Iterator iter = res . length . iterator ( ) ;
rank: 534
score: 99.2074725811298
patch: Iterator < Object > entries = res . iterator ( ) ;
rank: 534
score: 99.17637282151442
patch: / iter iter = res . entries . iterator ( ) ;
rank: 534
score: 99.16604614257812
patch: Iterator iter = res . size . entries ( ) ;
rank: 534
score: 99.15275268554687
patch: Collection iter = res . entries ( ) ;
rank: 534
score: 99.13343157087054
patch: Iterator iter = 1 . entries . entries . iterator ( ) ;
rank: 534
score: 99.11703055245536
patch: Iterator iter = res . entries . iterator ( ) / 1 ;
rank: 534
score: 99.09153238932292
patch: Iterator iter = res . put . iterator ( ) ;
rank: 535
score: 99.1756591796875
patch: try { Iterator iter = res . entries . iterator ( ) ; ;
rank: 535
score: 99.173583984375
patch: if ( res . size ( ) > res . size ( ) ) {
rank: 535
score: 99.15261840820312
patch: Iterator iter = res . iterator ( ) ; try {
rank: 535
score: 99.15145169771634
patch: Iterator iter = res [ res . size ( ) ] ;
rank: 535
score: 99.14424272017045
patch: Iterator iter = . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 535
score: 99.1334228515625
patch: Iterator iter = res . close ( ) . size ( ) ;
rank: 535
score: 99.11689976283482
patch: Iterator iter = res . has CaMeL Next ( ) * 1 ;
rank: 536
score: 99.20721076516544
patch: Iterator < Object > iter = res . entries ( ) . size ( ) ;
rank: 536
score: 99.17508370535714
patch: / / Iterator iter = res . entries . iterator ( ) ;
rank: 536
score: 99.17301940917969
patch: Iterator iter = true ; while ( iter . has CaMeL Next ( ) )
rank: 536
score: 99.16477457682292
patch: Iterator iter = key . entries . iterator ( ) ;
rank: 536
score: 99.15240478515625
patch: Iterator iter = res != null ? res . entries ( ) ;
rank: 536
score: 99.15115792410714
patch: lock ( ) ; Iterator iter = res . iterator ( ) ;
rank: 536
score: 99.13340407151442
patch: Iterator iter = res . entries . iterator ( ) ] ;
rank: 537
score: 99.17437744140625
patch: Iterator iter = this . res . entries ( ) ;
rank: 537
score: 99.15104536576705
patch: Iterator iter = res . iterator ( ) ; )
rank: 537
score: 99.14359130859376
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = ! res . iterator ( ) ;
rank: 537
score: 99.1167743389423
patch: Iterator iter = Math . iterator ( res . length ) ;
rank: 537
score: 99.09043579101562
patch: Iterator res = entries . iterator ( ) ;
rank: 538
score: 99.20656912667411
patch: final Iterator < ) > iter = res . iterator ( ) ;
rank: 538
score: 99.17212727864583
patch: Iterator iter = ( int ) res . list . iterator ( ) ;
rank: 538
score: 99.16454139122597
patch: Iterator iter = res $NUMBER$ . entries . iterator ( ) ;
rank: 538
score: 99.15086873372395
patch: int entries . iterator ( ) . iterator ( ) ;
rank: 538
score: 99.15059720552884
patch: if ( v != null ) res . res = res ;
rank: 538
score: 99.14315032958984
patch: Iterator iter = res . get CaMeL Entry ( ) . entries ( ) ;
rank: 539
score: 99.17378452845982
patch: Iterator iter = res . entries . remove . iterator ( ) ;
rank: 539
score: 99.17159873560855
patch: if ( v . length == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 539
score: 99.16382774939903
patch: Iterator iter = v [ 1 ] . iterator ( ) ;
rank: 539
score: 99.15084134615384
patch: Iterator < T > entries = res . iterator ( ) ;
rank: 539
score: 99.15046037946429
patch: Object iter = res . entries ( ) . iterator ( ) ;
rank: 539
score: 99.11575317382812
patch: Iterator iter = res . entries ;
rank: 539
score: 99.08987426757812
patch: Iterator iter = res . size ( ) ; ) {
rank: 540
score: 99.2063720703125
patch: Iterator < float > iter = res . entries . iterator ( ) ;
rank: 540
score: 99.17327325994319
patch: Iterator iter = res . iterator ( ) ; .
rank: 540
score: 99.1714599609375
patch: Iterator iter = map . iterator ( ) ;
rank: 540
score: 99.15069986979167
patch: Iterator iter = res . entries ( ) ; int iter = null ;
rank: 540
score: 99.1500308388158
patch: if ( res != null ) { res . entries = res . entries . length ; }
rank: 540
score: 99.14251154119319
patch: synchronized ( res ) { iter = res . entries . entries . entries . entries . iterator ( ) ;
rank: 540
score: 99.1154276529948
patch: Iterator iter = res . chars . iterator ( ) ;
rank: 540
score: 99.08866373697917
patch: Iterator iter = res . FALSE . iterator ( ) ;
rank: 541
score: 99.16230119977679
patch: Iterator iter = start . entries ( ) . iterator ( ) ;
rank: 541
score: 99.1504375751202
patch: Iterator < ] >> entries = res . entries ( ) ;
rank: 541
score: 99.14923416940789
patch: Collection res = res . entries ( ) ; Iterator iter = res . iterator ( ) ;
rank: 541
score: 99.14236450195312
patch: synchronized ( res ) { iter = res . entries . entries . entries . iterator ( ) ;
rank: 542
score: 99.20475551060268
patch: Iterator iter = $NUMBER$ + res . entries . iterator ( ) ;
rank: 542
score: 99.1728515625
patch: Iterator iter = res . entries . iterator ( ) ; ) /
rank: 542
score: 99.17111687911184
patch: Iterator iter = res . entries [ res . size ( ) ] . entries ( ) ;
rank: 542
score: 99.16221400669643
patch: Iterator iter = this . data . entries . iterator ( ) ;
rank: 542
score: 99.14911965762867
patch: if ( res != null ) res . res = res . entries . entries ;
rank: 542
score: 99.14226740056819
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . iterator ( length ) ;
rank: 542
score: 99.13157552083334
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( res / $NUMBER$ ) ;
rank: 543
score: 99.17276204427084
patch: Iterator iter = res . entries . iterator ( ) ; iter else ;
rank: 543
score: 99.16196986607143
patch: Iterator iter = list . entries ( ) . entries ( ) ;
rank: 543
score: 99.14906070106908
patch: if ( res != null ) { Iterator iterator = res . entries . iterator ( ) ;
rank: 543
score: 99.14199683779762
patch: Iterator iter = res . entries . iterator ( ) ; Open CaMeL Map CaMeL Real CaMeL Vector res ;
rank: 544
score: 99.20359971788194
patch: final Iterator < ) > iter = res . entries ( ) . iterator ( ) ;
rank: 544
score: 99.17228480747768
patch: Iterator iter = res . iterator ( res . iterator ( ) ;
rank: 544
score: 99.17066865808823
patch: synchronized ( res ) { res . entries = res . entries . entries ; }
rank: 544
score: 99.16180419921875
patch: Iterator iter = v != null : res . iterator ( ) ;
rank: 544
score: 99.14179543887867
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries )
rank: 544
score: 99.13112095424107
patch: double [ ] res = new double [ res . length ] ;
rank: 544
score: 99.08732096354167
patch: Iterator iter = entries . res . iterator ( ) ;
rank: 545
score: 99.2032829733456
patch: Iterator < int * ? > iter = res . entries . iterator ( ) ;
rank: 545
score: 99.17198835100446
patch: Iterator iter . entries = res . entries . iterator ( ) ;
rank: 545
score: 99.14869689941406
patch: if ( res != null ) Iterator iter = v . iterator ( ) ;
rank: 545
score: 99.14147367931548
patch: final Open CaMeL Map CaMeL Real CaMeL Vector res = new Open CaMeL Map CaMeL Real CaMeL Vector ( this
rank: 545
score: 99.1303466796875
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( v . length ) ;
rank: 545
score: 99.08617146809895
patch: Iterator iter = res . stop . iterator ( ) ;
rank: 546
score: 99.17054578993056
patch: Iterator iter = res . entries . iterator ( ) ; while ( iter . ) {
rank: 546
score: 99.16014753069196
patch: Iterator iter = res . entries ( ) . entries . length ;
rank: 546
score: 99.1490009014423
patch: Iterator < ] > iter = res . copy ( ) ;
rank: 546
score: 99.14852201021634
patch: / * * Iterator iter = res . iterator ( ) ;
rank: 546
score: 99.11275809151786
patch: Iterator iter = res . has CaMeL Next ( ) : res ;
rank: 546
score: 99.08597819010417
patch: int iter = res . length . size ( ) ;
rank: 547
score: 99.20289442274306
patch: synchronized ( res ) { Iterator iter = res . entries . iterator ( ) ; }
rank: 547
score: 99.14847140842014
patch: System . arraycopy ( v , 0 , res , 0 , v . length ) ;
rank: 547
score: 99.14127604166667
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = 0 ;
rank: 547
score: 99.11158040364583
patch: synchronized ( this ) { Iterator iter = res . size ( ) ;
rank: 547
score: 99.085693359375
patch: Iterator iter = res . matches ( v . length ) ;
rank: 548
score: 99.20253392269737
patch: if ( res . iterator ( ) . iterator ( ) . has CaMeL Next ( ) )
rank: 548
score: 99.171142578125
patch: Iterator iter = res . iterator ( ) ; iterator
rank: 548
score: 99.16728210449219
patch: Iterator iter = false ; while ( iter . has CaMeL Next ( ) )
rank: 548
score: 99.15938895089286
patch: Iterator iter = res . entries . length . entries ( ) ;
rank: 548
score: 99.14846365792411
patch: Iterator iter = v . iterator ( . size ( ) ) ;
rank: 548
score: 99.14791666666666
patch: synchronized ( res ) { iter = res . entries ( ) ; }
rank: 548
score: 99.12913295200893
patch: Iterator iter = $STRING$ . entries . entries . iterator ( ) ;
rank: 548
score: 99.11126708984375
patch: Iterator iter = res . entries . iterator ( ) : true ;
rank: 548
score: 99.08477783203125
patch: Iterator iter = res . reverse . iterator ( ) ;
rank: 549
score: 99.20252574573864
patch: final int iter = res . size ( ) ;
rank: 549
score: 99.17059326171875
patch: Iterator iter . iterator ( ) . iterator ( ) ;
rank: 549
score: 99.16663315716912
patch: Iterator iter = Math . abs ( res . entries . size ( ) ) ;
rank: 549
score: 99.14046223958333
patch: for ( iter = res . iterator ( ) ; iter . has CaMeL Next ( ) ; ) {
rank: 549
score: 99.11023821149554
patch: Iterator iter = res . contains ( ) : res . length ;
rank: 549
score: 99.083251953125
patch: int iter = entries . entries . iterator ( ) ;
rank: 550
score: 99.1705322265625
patch: Iterator iter = res . list . entries ( ) ;
rank: 550
score: 99.15856061662946
patch: Iterator iter = v . entries . iterator . iterator ( ) ;
rank: 550
score: 99.14828287760416
patch: if ( res . length > 0 && res . length > 0 )
rank: 550
score: 99.146484375
patch: Iterator 1 = res . entries . iterator ( ) ;
rank: 550
score: 99.14031427556819
patch: iterator = res . entries . iterator ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 550
score: 99.10881696428571
patch: Iterator iter = res . entries . iterator ( ) : null ;
rank: 550
score: 99.08308919270833
patch: Iterator iter = res . contains . size ( ) ;
rank: 551
score: 99.17024739583333
patch: iterator iter = res . entries . iterator ( ) ;
rank: 551
score: 99.15835135323661
patch: Iterator iter = $NUMBER$ . entries ( ) . iterator ( ) ;
rank: 551
score: 99.14800666360294
patch: if ( v != null ) { Iterator iter = v . iterator ( ) ;
rank: 551
score: 99.14623084435097
patch: this . res . entries = res . entries ( ) ;
rank: 551
score: 99.1401611328125
patch: Iterator < short > iter = res . entries . iterator ( ) ;
rank: 551
score: 99.08302659254808
patch: Iterator iter = res . add . iterator ( this ) ;
rank: 552
score: 99.20216128700658
patch: Iterator < Iterator < Object > iter = res . entries ( ) . iterator ( ) ;
rank: 552
score: 99.16510772705078
patch: Iterator iter = res ; while ( iterator . has CaMeL Next ( ) )
rank: 552
score: 99.15773228236607
patch: Iterator iter = res . entries . iterator ( ) ; finally {
rank: 552
score: 99.1478515625
patch: if ( v != null ) res . res = res . res ;
rank: 552
score: 99.14610799153645
patch: try { Iterator iter = res . entries ( ) ;
rank: 552
score: 99.14005319695724
patch: Iterator while ( iter . has CaMeL Next ( ) ) { iter . advance ( ) ;
rank: 552
score: 99.12782505580357
patch: int [ ] res = new String [ res . length ] ;
rank: 553
score: 99.20207663143383
patch: if ( res != null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 553
score: 99.16958182198661
patch: Iterator iter = res . entries . start . entries ( ) ;
rank: 553
score: 99.16421847873264
patch: System . arraycopy ( res , 0 , res , 0 , v . length ) ;
rank: 553
score: 99.15760387073864
patch: Iterator iter = res . iterator ( ) ; *
rank: 553
score: 99.14771270751953
patch: Iterator iter = res . entries ( ) . iterator ( ) ; int ;
rank: 553
score: 99.1452128092448
patch: Iterator < int 1 : res . iterator ( ) ;
rank: 554
score: 99.16951497395833
patch: Iterator iter = res . entries . iterator ( ) ; Iterator iter ;
rank: 554
score: 99.14589556525735
patch: synchronized ( res . entries ) { Iterator iter = v . iterator ( ) ;
rank: 554
score: 99.14483173076923
patch: Iterator < T > iter = res . size ( ) ;
rank: 554
score: 99.12689208984375
patch: Iterator iter = res . iter . size ( ) ;
rank: 555
score: 99.1694805438702
patch: Iterator iter = res . ( . iterator ( ) ) ;
rank: 555
score: 99.16380092075893
patch: Object [ ] data = new Object [ res . length ] ;
rank: 555
score: 99.15747942243304
patch: Iterator iter = iterator . entries ( ) . iterator ( ) ;
rank: 555
score: 99.13970947265625
patch: for ( ) { Iterator iter = res . entries . entries . iterator ( ) ;
rank: 555
score: 99.12518310546875
patch: Iterator iter = res . entries . entries . clone ( ) ;
rank: 555
score: 99.1073467548077
patch: Iterator iter = res . entries . iterator ( ) : )
rank: 555
score: 99.0794677734375
patch: Iterator iter = res . name . size ( ) ;
rank: 556
score: 99.20096529447116
patch: Iterator < Iterator > entries = res . entries ( ) ;
rank: 556
score: 99.1574198404948
patch: Iterator iter = ( iter . iterator ( ) ) ;
rank: 556
score: 99.14457622327302
patch: if ( res . entries == null || res . entries . size ( ) == 0 )
rank: 556
score: 99.14438100961539
patch: Iterator iter = res . entries res . iterator ( ) ;
rank: 556
score: 99.12516566685268
patch: Iterator iter = res . [ iter . iterator ( ) ] ;
rank: 556
score: 99.10731724330357
patch: Iterator iter = res . index CaMeL Of ( - $NUMBER$ ) ;
rank: 556
score: 99.0791727701823
patch: Object iter = res . entries . iterator ( ) ;
rank: 557
score: 99.1691143329327
patch: entries = res . entries . entries . iterator ( ) ;
rank: 557
score: 99.16330973307292
patch: Iterator iter = res == null ? null : res . entries . iterator ( ) ;
rank: 557
score: 99.14457433363971
patch: Iterator iter = res . iterator ( ) ; int size = res . length ;
rank: 557
score: 99.13938275505515
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) .
rank: 557
score: 99.07908121744792
patch: Iterator iter = res . random . iterator ( ) ;
rank: 558
score: 99.20018174913194
patch: Iterator iter = res . entries ( ) . iterator ( ) ; else return null ;
rank: 558
score: 99.16905866350446
patch: Iterator iter = res . iterator ( ) ; iterator = null ;
rank: 558
score: 99.16290283203125
patch: Iterator iterator = res ; while ( iterator . has CaMeL Next ( ) )
rank: 558
score: 99.15578049879808
patch: Iterator iter = res . entries ( ) [ 0 ] ;
rank: 558
score: 99.13936941964286
patch: Set iter = res . entries . entries . iterator ( ) ;
rank: 558
score: 99.1057880108173
patch: Iterator iter = res . entries . iterator ( SIZE ) ;
rank: 558
score: 99.07879638671875
patch: Iterator iter = entries . iterator ( ) ; ) {
rank: 559
score: 99.20011683872768
patch: Iterator iter = exp . entries ( ) . iterator ( ) ;
rank: 559
score: 99.16905721028645
patch: Iterator iter = res . iterator ( ) ; / /
rank: 559
score: 99.16263020833334
patch: Iterator iter = res . entries . iterator ( ) ; ; finally {
rank: 559
score: 99.155517578125
patch: Iterator iter = v != null . entries . iterator ( ) ;
rank: 559
score: 99.14417442908653
patch: res . entries = res . get CaMeL Entries ( ) ;
rank: 559
score: 99.1437276204427
patch: Iterator entries = res . entries . size ( ) ;
rank: 559
score: 99.13912527901786
patch: Iterator < double [ ] > iter = this . res . entries . entries . iterator ( ) ;
rank: 559
score: 99.10570475260417
patch: Iterator iter = new Open CaMeL Map CaMeL Real CaMeL Vector ( this )
rank: 559
score: 99.07761793870192
patch: Iterator iter = res . equals ( this . v ) ;
rank: 560
score: 99.16252055921052
patch: int size = res . size ( ) ; Iterator iter = res . iterator ( ) ;
rank: 560
score: 99.15517752511161
patch: Iterator iter = res [ - 1 ] . iterator ( ) ;
rank: 560
score: 99.14415067784927
patch: Iterator iter = v . iterator ( ) ; int size = v . length ;
rank: 560
score: 99.14321899414062
patch: Iterator * ] list = res . entries ( ) ;
rank: 560
score: 99.1388671875
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = null ;
rank: 560
score: 99.12415364583333
patch: new Open CaMeL Map CaMeL Real CaMeL Vector ( this , this ) ;
rank: 560
score: 99.07611083984375
patch: Iterator res = v . entries . iterator ( ) ;
rank: 561
score: 99.14342389787946
patch: Object res = res . entries ( ) . next ( ) ;
rank: 561
score: 99.14266531808036
patch: Iterator iter = res . entries ( ) . read ( ) ;
rank: 561
score: 99.13870399876645
patch: list . set CaMeL Entry ( iter . key ( ) , iter . value ( ) /
rank: 561
score: 99.10537283761161
patch: Iterator iter = res . entries . iterator ( ) : 1 ;
rank: 561
score: 99.07534790039062
patch: Iterator iter = res . false . size ( ) ;
rank: 562
score: 99.1985595703125
patch: final Iterator iter = res . entries . iterator ( ) - 1 ;
rank: 562
score: 99.16560581752232
patch: Iterator iter = res . iterator ( ) . entries ( ) ;
rank: 562
score: 99.1617072610294
patch: Iterator iter = res . entries . iterator ( ) . iterator ( ) ; ;
rank: 562
score: 99.15489850725446
patch: while ( res . has CaMeL Next ( ) ) { for (
rank: 562
score: 99.14297485351562
patch: Iterator iter = res != null ? res . entries ( ) : null ;
rank: 562
score: 99.10442243303571
patch: Iterator iter = res . entries . iterator ( ) >> 1 ;
rank: 562
score: 99.07461313100961
patch: Iterator iter = res . length . iterator ( ) ; }
rank: 563
score: 99.165234375
patch: Iterator iter = res . entries ( ) ; Iterator iter = 0 ;
rank: 563
score: 99.15486363002232
patch: Iterator iter = res != null : v . iterator ( ) ;
rank: 563
score: 99.13856265419408
patch: Iterator < long [ ] > iter = res . entries . entries . iterator ( ) ;
rank: 563
score: 99.07382202148438
patch: List res = res . entries . size ( ) ;
rank: 564
score: 99.16062298943015
patch: Iterator iter = res ) ; while ( iter . has CaMeL Next ( ) )
rank: 564
score: 99.15455729166666
patch: Iterator iter = ( double [ ] ) res . iterator ( ) ;
rank: 564
score: 99.14290677584134
patch: Iterator iter = res . entries . iterator ( res ) ;
rank: 564
score: 99.138427734375
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : res . entries ( ) ;
rank: 564
score: 99.10274832589286
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . entries ;
rank: 564
score: 99.0738055889423
patch: while ( entries . has CaMeL Next ( ) ) { {
rank: 565
score: 99.19734272203948
patch: Iterator iter = res . iterator ( ) ; Iterator iter = res . entries ( ) ;
rank: 565
score: 99.1649921123798
patch: Iterator iter = res . entries . remove ( 0 ) ;
rank: 565
score: 99.15423583984375
patch: double [ ] v = new int [ v . length ] ;
rank: 565
score: 99.14174107142857
patch: Collection iter = res . entries ( ) . iterator ( ) ;
rank: 565
score: 99.14125569661458
patch: boolean iter = res . entries . iterator ( ) ;
rank: 565
score: 99.13817003038194
patch: Iterator iter ? res . iterator ( ) . has CaMeL Next ( ) ; ) {
rank: 565
score: 99.12189592633929
patch: Iterator iter = res . entries . iterator > iterator ( ) ;
rank: 565
score: 99.07345581054688
patch: Iterator iter = res . end . entries ( ) ;
rank: 566
score: 99.19730050223214
patch: Iterator < Iterator iter = res . entries . iterator ( ) ;
rank: 566
score: 99.1649169921875
patch: Iterator iter = res . entries . iterator ( ) ; iterator / /
rank: 566
score: 99.15407889229911
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( res , this ) ;
rank: 566
score: 99.14159284319196
patch: if ( res != ) res . entries = res . entries ;
rank: 566
score: 99.14039829799107
patch: Iterator iter = res . entries ( ) . parse ( ) ;
rank: 566
score: 99.13773018973214
patch: Iterator < Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 566
score: 99.10117013113839
patch: Iterator iter = res . advance ( ) . entries ( ) ;
rank: 566
score: 99.0730489095052
patch: int iter = v . entries . size ( ) ;
rank: 567
score: 99.140380859375
patch: res . entries ( ) . iterator ( ) ;
rank: 567
score: 99.13752297794117
patch: for ( int ) { Iterator iter = res . entries . iterator ( ) ;
rank: 567
score: 99.07242525540866
patch: List iter = res . entries . iterator ( ) ; ;
rank: 568
score: 99.19568810096153
patch: Iterator < ? > iter = res . size ( ) ;
rank: 568
score: 99.15946742466518
patch: System . Iterator iter = res . entries . iterator ( ) ;
rank: 568
score: 99.15367713341347
patch: Iterator iter > = res . entries . iterator ( ) ;
rank: 568
score: 99.1400146484375
patch: Iterator < Float > iter = res . entries ( ) ;
rank: 568
score: 99.13746643066406
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector v : res . entries )
rank: 568
score: 99.10031127929688
patch: Iterator iter = res . iter . next ( ) ;
rank: 568
score: 99.07217172475961
patch: Iterator iter = res . has CaMeL Next ( ) ) ;
rank: 569
score: 99.19532686121323
patch: Iterator < int > iter = res . entries = res . iterator ( ) ;
rank: 569
score: 99.1636962890625
patch: Iterator iterator = res . entries . entries ( ) ;
rank: 569
score: 99.15926963404605
patch: if ( res . length > 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;
rank: 569
score: 99.1412289268092
patch: if ( res != null ) res . res = res . entries . remove ( ) ;
rank: 569
score: 99.13741629464286
patch: Iterator < float [ ] > iter = res . entries . entries . entries . iterator ( ) ;
rank: 569
score: 99.09865315755208
patch: Iterator iter = res . index CaMeL Of ( ) ;
rank: 569
score: 99.07176717122395
patch: Iterator iter = res . start . entries ( ) ;
rank: 570
score: 99.16335042317708
patch: Iterator iter = res . entries . list ( ) ;
rank: 570
score: 99.14082845052083
patch: Iterator iter = res . iterator . next ( ) ;
rank: 570
score: 99.12005615234375
patch: Iterator iter = Open CaMeL Map CaMeL Real CaMeL Vector . length ;
rank: 570
score: 99.09848458426339
patch: Iterator iter = res . entries . iterator ( ) : false ;
rank: 570
score: 99.07142130533855
patch: Iterator iter = res . is CaMeL Array ( ) ;
rank: 571
score: 99.19485909598214
patch: if ( res . size ( ) != 0 ) return res ;
rank: 571
score: 99.16332135881696
patch: Iterator iter = res . entries . iterator ( ) ; iterator }
rank: 571
score: 99.1585757606908
patch: Iterator iter = v . entries ; while ( iter . has CaMeL Next ( ) ) {
rank: 571
score: 99.15309361049107
patch: Iterator iter = size . entries ( ) . iterator ( ) ;
rank: 571
score: 99.14019775390625
patch: byte [ ] res = res . get CaMeL Bytes ( ) ;
rank: 571
score: 99.13831583658855
patch: Iterator * ] iter = res . iterator ( ) ;
rank: 571
score: 99.0980694110577
patch: Iterator iter = res . entries . iterator ( v ) ;
rank: 572
score: 99.16297258649554
patch: Iterator iter = res . iterator ( ) ; while ( iter .
rank: 572
score: 99.1585693359375
patch: Iterator iter = res . iterator ( ) ; res . add ( res ) ;
rank: 572
score: 99.15265764508929
patch: Iterator iter = v . entries . entries . size ( ) ;
rank: 572
score: 99.13699106069711
patch: Iterator < Boolean > iter = res . iterator ( ) ;
rank: 572
score: 99.11929757254464
patch: Iterator iter = res . entries . format . iterator ( ) ;
rank: 572
score: 99.06985473632812
patch: Iterator iter = res . exit . iterator ( ) ;
rank: 573
score: 99.16268216646634
patch: Iterator iter = res . entries . iterator ( ) ; final
rank: 573
score: 99.1575927734375
patch: Iterator iter = res . iterator ( ) ; finally { res . close ( ) ; }
rank: 573
score: 99.11879475911458
patch: Iterator iter = res . entries . iterator ( ) }
rank: 573
score: 99.06983439127605
patch: Iterator iter = res . true . size ( ) ;
rank: 574
score: 99.19438825334821
patch: boolean iter = res . entries . iterator ( ) != null ;
rank: 574
score: 99.15232631138393
patch: Iterator iter = res + v . entries . iterator ( ) ;
rank: 574
score: 99.13971354166667
patch: Iterator < Iterator < Integer > iter = res . iterator ( ) ;
rank: 574
score: 99.13671061197917
patch: Iterator iter = res . entries ( ) ; int iterator = 0 ;
rank: 574
score: 99.13636067708333
patch: if ( res . iterator ( ) . has CaMeL Next ( ) )
rank: 574
score: 99.11850411551339
patch: Iterator iter = res . to CaMeL Array ( ) . length ;
rank: 574
score: 99.09401448567708
patch: Iterator iter = res = res . size ( ) ;
rank: 574
score: 99.0692138671875
patch: Iterator res = this . entries . iterator ( ) ;
rank: 575
score: 99.1935970908717
patch: Iterator iter = res . iterator ( ) ; Iterator iterator = res . iterator ( ) ;
rank: 575
score: 99.13968912760417
patch: synchronized ( this ) { Iterator iter = v . iterator ( ) ;
rank: 575
score: 99.13599504743304
patch: for ( ) { res . set CaMeL Entry ( iter ) ;
rank: 575
score: 99.1354248046875
patch: synchronized ( res ) { Iterator entries = res . iterator ( ) ;
rank: 575
score: 99.09218186598558
patch: Iterator iter = res . contains ( v [ 0 ] )
rank: 575
score: 99.06880696614583
patch: Iterator iter = res . entries . close ( ) ;
rank: 576
score: 99.19351356907895
patch: Iterator iter = res . entries ( ) . entries ( ) . iterator ( ) ; }
rank: 576
score: 99.16200764973958
patch: Iterator iter = res . entries . delete ( ) ;
rank: 576
score: 99.13954380580357
patch: assert res != null : $STRING$ + res . size ( ) ;
rank: 576
score: 99.11704799107143
patch: double [ ] res = new double [ v . length ] ;
rank: 576
score: 99.06801350911458
patch: Iterator iter = res . wait . iterator ( ) ;
rank: 577
score: 99.16145542689732
patch: Iterator iter = res . entries . Override . iterator ( ) ;
rank: 577
score: 99.1552734375
patch: List list = res . entries . iterator ( ) ;
rank: 577
score: 99.13951009114584
patch: if ( res . entries != null && res . entries != null )
rank: 577
score: 99.1357189360119
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector == null ? null : v . iterator ( ) ;
rank: 577
score: 99.09154401506696
patch: Iterator iter = res . entries . iterator ( ) ; * /
rank: 577
score: 99.06765747070312
patch: Iterator iter = res . get CaMeL Id ( ) ;
rank: 578
score: 99.13906680836396
patch: try { Iterator iter = res . entries ( ) . iterator ( ) ; ;
rank: 578
score: 99.13566509046052
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . next ( ) ;
rank: 578
score: 99.13514200846355
patch: int iter . iterator ( ) . iterator ( ) ;
rank: 578
score: 99.11541748046875
patch: if ( res != null ) { res . advance ( ) ;
rank: 578
score: 99.09109061104911
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector 1
rank: 578
score: 99.0673828125
patch: Iterator iter = res . round . iterator ( ) ;
rank: 579
score: 99.193115234375
patch: Iterator < Byte > iter = res . iterator ( ) ;
rank: 579
score: 99.14836774553571
patch: v . set CaMeL Entry ( iter . advance ( ) ) ;
rank: 579
score: 99.13509695870536
patch: int iter = res . entries . trim ( ) . length ;
rank: 579
score: 99.11522565569196
patch: Object [ ] res = new double [ res . length ] ;
rank: 579
score: 99.06717936197917
patch: Iterator res = res . has CaMeL Next ( ) ;
rank: 580
score: 99.1930419921875
patch: / * / Iterator iter = res . entries . iterator ( ) ;
rank: 580
score: 99.16036283052884
patch: Iterator iter = res . entries . entries ( ) ) ;
rank: 580
score: 99.13778483072916
patch: if ( res . size ( ) >= res . size ( ) )
rank: 580
score: 99.13541870117187
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries iterator ( ) ;
rank: 580
score: 99.0906270345052
patch: Iterator iter = res . next ( ) . entries ;
rank: 581
score: 99.19296444163604
patch: Iterator < Object > iter = res . entries = res . entries ( ) ;
rank: 581
score: 99.15216471354167
patch: Iterator iter = v . iterator ( ) ; while ( iter . )
rank: 581
score: 99.1480712890625
patch: Real CaMeL Vector res = new Real CaMeL Vector ( ) ;
rank: 581
score: 99.13743189761513
patch: synchronized ( res ) { Iterator iter = v . entries ( ) . iterator ( ) ;
rank: 581
score: 99.1324462890625
patch: Iterator iter = res . entries > size ( ) ;
rank: 581
score: 99.0888671875
patch: Iterator iter = res . entries [ size ( ) ] ;
rank: 581
score: 99.06623979048295
patch: Iterator Iterator iter = res . size ( ) ;
rank: 582
score: 99.15801532451923
patch: Iterator iter = res . entries . put ( res ) ;
rank: 582
score: 99.14797537667411
patch: double [ ] v = new double [ v . length ] ;
rank: 582
score: 99.13727770353618
patch: if ( res != null ) res . ; Iterator iter = res . iterator ( ) ;
rank: 582
score: 99.1138916015625
patch: Iterator iter = res . intern ( ) . entries ( ) ;
rank: 582
score: 99.08819173177083
patch: Iterator iter = res instanceof Open CaMeL Map CaMeL Real CaMeL Vector > ;
rank: 582
score: 99.06542029747597
patch: Iterator iter = res . contains ( this . v ) ;
rank: 583
score: 99.19229561941964
patch: Iterator iter = get . entries ( ) . iterator ( ) ;
rank: 583
score: 99.14795793805804
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = null ; for (
rank: 583
score: 99.13716205797698
patch: if ( v != null ) res . res = res . entries . get ( ) ;
rank: 583
score: 99.13186848958334
patch: Iterator iter = res . iterator ( ) ; int iter = 0 ;
rank: 583
score: 99.11306326729911
patch: Open CaMeL Map CaMeL Real CaMeL Vector res . set ( ) ;
rank: 583
score: 99.08802141462054
patch: Iterator iter = res . add ( v [ 1 ] ) ;
rank: 583
score: 99.06444295247395
patch: Iterator iter = res . clone . iterator ( ) ;
rank: 584
score: 99.15741436298077
patch: Iterator iter = res . entries ( ) ; = null ;
rank: 584
score: 99.13691057477679
patch: if ( v . length != res . length ) return res ;
rank: 584
score: 99.13101900540866
patch: Iterator < $STRING$ : res . entries . iterator ( ) ;
rank: 584
score: 99.06406656901042
patch: Iterator iter = res . class . size ( ) ;
rank: 585
score: 99.19133649553571
patch: final Iterator iter = res . entries . iterator ( ) ) ;
rank: 585
score: 99.15379987444196
patch: Iterator iter = res . iterator ( ) ; iterator return res ;
rank: 585
score: 99.14317103794643
patch: Iterator iter . has CaMeL Next ( ) ; ) { for (
rank: 585
score: 99.13665771484375
patch: Object [ ] res = res . entries ( ) ;
rank: 585
score: 99.13484700520833
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : this ) {
rank: 585
score: 99.13076346261161
patch: Iterator iter = res . entries ( ) . Enum ( ) ;
rank: 585
score: 99.08710327148438
patch: Iterator iter += res . size ( ) ;
rank: 586
score: 99.1909912109375
patch: Iterator < Class > iter = res . entries . entries ( ) ;
rank: 586
score: 99.15306396484375
patch: Iterator iter = res . close ( ) ;
rank: 586
score: 99.14275251116071
patch: Iterator iter = entries . entries ( ) . entries ( ) ;
rank: 586
score: 99.13661411830357
patch: if ( res != null ) res . res = res ) ;
rank: 586
score: 99.1344985961914
patch: Iterator iter = res . entries . entries . iterator ( ) ; try {
rank: 586
score: 99.13069661458333
patch: Iterator iter = res . entries ( ) ; add ( res ) ;
rank: 586
score: 99.11222330729167
patch: Iterator iter = res . entries . [ ) . iterator ( ) ;
rank: 586
score: 99.0865987141927
patch: Iterator iter = start . entries . iterator ( ) ;
rank: 586
score: 99.0635986328125
patch: Iterator iter = res . start . size ( ) ;
rank: 587
score: 99.19085693359375
patch: final synchronized ( res ) { iter = res . entries . iterator ( ) ; }
rank: 587
score: 99.13660481770833
patch: Iterator < Iterator < E >> iter = res . iterator ( ) ;
rank: 587
score: 99.13441685267857
patch: Iterator iter . has CaMeL Next ( ) ; while ( iter . has CaMeL Next ( ) ) {
rank: 587
score: 99.08580525716145
patch: Iterator iter = res . to CaMeL Array ( ) ;
rank: 587
score: 99.06332397460938
patch: List iter = entries . entries . iterator ( ) ;
rank: 588
score: 99.15238813920455
patch: / Iterator iter = res . iterator ( ) ;
rank: 588
score: 99.14785284745066
patch: Iterator iter = v . iterator ( ) ; while ( iter . has CaMeL Next ( )
rank: 588
score: 99.13618020450367
patch: for ( int iter = 0 ; iter < v . length ; iter ++ )
rank: 588
score: 99.12831467848558
patch: Enumeration < String > iter = res . entries ( ) ;
rank: 588
score: 99.11175067608173
patch: Iterator iter = res . entries . iterator ( $STRING$ ) ;
rank: 588
score: 99.08406284877232
patch: Iterator iter = res . entries . iterator ( ) / $NUMBER$ ;
rank: 588
score: 99.06322224934895
patch: int iter = res . entries . entries . length ;
rank: 589
score: 99.13614654541016
patch: if ( v != null ) res . res = res . entries . ;
rank: 589
score: 99.12767537434895
patch: Integer iter = res . entries . iterator ( ) ;
rank: 589
score: 99.08404541015625
patch: Iterator iter = res != null ? res . iterator ( ) ;
rank: 589
score: 99.06179809570312
patch: int iter = this . entries . iterator ( ) ;
rank: 590
score: 99.19046823601974
patch: final Object res = res . iterator ( ) . iterator ( ) . iterator ( ) ;
rank: 590
score: 99.13602701822917
patch: Iterator iter = res . iterator ( ) ; synchronized ( res . iterator ( ) )
rank: 590
score: 99.12676532451923
patch: Iterator < Integer > entries = res . entries ( ) ;
rank: 590
score: 99.08299909319196
patch: Iterator iter = res . entries . iterator ( ) * 0 ;
rank: 591
score: 99.15181107954545
patch: Iterator iter = res . iterator ( ) ; Iterator
rank: 591
score: 99.13580322265625
patch: if ( res . size ( ) != res . size ( ) ) return res ;
rank: 591
score: 99.13270920973558
patch: Iterator < iter = res . entries . iterator ( ) ;
rank: 591
score: 99.12600473257211
patch: Iterator < String > iterator = res . entries ( ) ;
rank: 591
score: 99.0615234375
patch: Iterator iter = res . null . iterator ( ) ;
rank: 592
score: 99.18858119419643
patch: Iterator iter = null . entries ( ) . iterator ( ) ;
rank: 592
score: 99.13251809512867
patch: for ( while ( res . iterator ( ) . has CaMeL Next ( ) )
rank: 592
score: 99.1247049967448
patch: Iterator iter = new int entries . iterator ( ) ;
rank: 592
score: 99.10872105189732
patch: int [ ] res = new String [ v . length ] ;
rank: 593
score: 99.18852015904018
patch: final Object res = res . entries . get ( 0 ) ;
rank: 593
score: 99.15066964285714
patch: Iterator iter . iter = res . entries . iter ( ) ;
rank: 593
score: 99.1396484375
patch: Iterator iter = v . entries . entries . entries ( ) ;
rank: 593
score: 99.1344502766927
patch: if ( res . entries == null ) return res ;
rank: 593
score: 99.06053670247395
patch: if ( entries . size ( ) > 0 ) {
rank: 594
score: 99.13896833147321
patch: Iterator iter = this . res . iterator ( ) ; for (
rank: 594
score: 99.13214111328125
patch: synchronized ( res ) { res . set CaMeL Entry ( ) ;
rank: 594
score: 99.1237323467548
patch: for ( Iterator iter : res . entries ( ) ) {
rank: 594
score: 99.07940204326923
patch: Iterator iter = ! iter . has CaMeL Next ( ) ;
rank: 594
score: 99.06011962890625
patch: Iterator iter = res . min . size ( ) ;
rank: 595
score: 99.1881103515625
patch: final ? Iterator iter = res . entries . iterator ( ) ;
rank: 595
score: 99.1337139423077
patch: if ( res . entries . size ( ) > 0 )
rank: 595
score: 99.13201583059211
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . entries .
rank: 595
score: 99.1236572265625
patch: final Iterator entries = res . entries ( ) ;
rank: 595
score: 99.05926983173077
patch: int iter = res . entries . iterator ( ) ; ;
rank: 596
score: 99.18789438100961
patch: Iterator < int > entries = res . entries ( ) ;
rank: 596
score: 99.14979905348558
patch: Iterator iter = iterator ( res . iterator ( ) ) ;
rank: 596
score: 99.14403483072917
patch: Iterator iter = res . list ( ) . iterator ( ) ; ;
rank: 596
score: 99.13350736177884
patch: if ( res != null ) res . ) return res ;
rank: 596
score: 99.13185337611607
patch: Iterator iter = out . entries . entries . iterator ( ) ;
rank: 596
score: 99.10611979166667
patch: Iterator iter = res . entries . index CaMeL Of ( 1 ) ;
rank: 596
score: 99.07879083806819
patch: Iterator iter = res . iterator ( 1 ) ;
rank: 597
score: 99.14932016225961
patch: Iterator iter = res . entries . entries ( ) ; ;
rank: 597
score: 99.1433856670673
patch: try { iter = res . entries . iterator ( ) ;
rank: 597
score: 99.13669057992789
patch: Iterator iter = res [ iter . length ( ) ] ;
rank: 597
score: 99.13315301192434
patch: if ( res . entries . iterator ( ) . has CaMeL Next ( ) ) { )
rank: 597
score: 99.123291015625
patch: Iterator iter = new byte [ res . iterator ( ) ] ;
rank: 597
score: 99.10515485491071
patch: Iterator iter = res . entries . iterator ( - $NUMBER$ ) ;
rank: 597
score: 99.0583965594952
patch: Iterator iter = res . has CaMeL Next ( ) 1 ;
rank: 598
score: 99.18678114149306
patch: Iterator < String > < String > iter = res . entries . iterator ( ) ;
rank: 598
score: 99.14932016225961
patch: Iterator iter = res . iterator ( ) ; ) / /
rank: 598
score: 99.13661411830357
patch: try { res . set CaMeL Entry ( iter . key ) ;
rank: 598
score: 99.13265555245536
patch: Object res = res . entries ( ) . get ( ) ;
rank: 598
score: 99.1314697265625
patch: Iterator iter = res . get CaMeL Entry ( iter . key ( ) ) ;
rank: 598
score: 99.12315016526442
patch: Iterator < E > entries = res . iterator ( ) ;
rank: 598
score: 99.0787353515625
patch: Iterator iter = res . size ( ) * 1 ;
rank: 599
score: 99.14892578125
patch: for ( Iterator iter = res . entries . iter ( ) ;
rank: 599
score: 99.13986642020089
patch: res . res = res . entries . get ( 0 ) ;
rank: 599
score: 99.13494873046875
patch: Iterator iter = res . length . entries . entries ( ) ;
rank: 599
score: 99.13260690789474
patch: if ( v != null ) { Iterator iter = res . iterator . iterator ( ) ;
rank: 599
score: 99.13047572544643
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) this ) . iterator ( ) ;
rank: 599
score: 99.12308443509616
patch: Iterator < / >> iter = res . iterator ( ) ;
rank: 599
score: 99.05678304036458
patch: Iterator iter = this . size . iterator ( ) ;
rank: 600
score: 99.14886944110577
patch: Iterator iter = res . = res . iterator ( ) ;
rank: 600
score: 99.1320865028783
patch: Iterator iter = v . entries ( ) ; while . has CaMeL Next ( ) ; )
rank: 600
score: 99.13047162224265
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries ;
rank: 600
score: 99.12270100911458
patch: entries = res . entries ( ) ;
rank: 600
score: 99.07722691127232
patch: Iterator iter = res . min ( ) . entries ( ) ;
rank: 600
score: 99.05669611150569
patch: Iterator iter = res . contains ( 0 ) ;
rank: 601
score: 99.18604193793402
patch: if ( res != null ) Iterator iterator = res . entries . iterator ( ) ;
rank: 601
score: 99.1485595703125
patch: Iterator iter entries = res . entries . iterator ( ) ;
rank: 601
score: 99.13743373325893
patch: Iterator iter = list . iterator ( ) . iterator ( ) ;
rank: 601
score: 99.13172258649554
patch: Iterator iter = res . entries ( ) ; while ( ; )
rank: 601
score: 99.13036431206598
patch: synchronized ( res ) { iter = res . entries . entries . iterator ( ) ;
rank: 601
score: 99.05659993489583
patch: Iterator iter = res . sum . iterator ( ) ;
rank: 602
score: 99.18597412109375
patch: Iterator iter = res . entries . entries ( ) != null ;
rank: 602
score: 99.131591796875
patch: Iterator iter = res . entries . iterator ( ) + 1 ;
rank: 602
score: 99.13021850585938
patch: Iterator < int + 1 ] : res . entries . iterator ( ) ;
rank: 602
score: 99.10116141183036
patch: Object [ ] res = new double [ v . length ] ;
rank: 602
score: 99.07662760416666
patch: Iterator < int [ ] > iter = res . iterator ( ) ;
rank: 603
score: 99.1856625205592
patch: if ( res . entries != null ) { res . entries = res . entries ; }
rank: 603
score: 99.13739013671875
patch: Iterator iter = res . split . entries . iterator ( ) ;
rank: 603
score: 99.13436453683036
patch: Iterator iter = res . entries . iterator ( ) ; * *
rank: 603
score: 99.13095528738839
patch: byte [ ] res = new byte [ res . length ] ;
rank: 603
score: 99.13021850585938
patch: for ( iter = res . entries ( ) ; iter . has CaMeL Next ( ) ; )
rank: 603
score: 99.05598958333333
patch: Iterator iter = res . res . entries ( ) ;
rank: 604
score: 99.14646559495192
patch: Iterator iter = ( Iterator ) res . iter ( ) ;
rank: 604
score: 99.13605143229167
patch: Iterator iter = res . list ( res . entries ( ) ) ;
rank: 604
score: 99.13083321707589
patch: Iterator iter = res . iterator ( ) ; synchronized ( res )
rank: 604
score: 99.12075805664062
patch: Collection [ ] iter = res . entries ( ) ;
rank: 604
score: 99.0556131998698
patch: Iterator iter = res != null + v . length ;
rank: 605
score: 99.13045925564236
patch: if ( v != null ) res . entries = res . entries . entries ; else
rank: 605
score: 99.12980143229167
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries ( ) .
rank: 605
score: 99.12058327414773
patch: Iterator >> iter = res . entries ( ) ;
rank: 605
score: 99.10068359375
patch: Iterator iter = res . entries . entries . entries . entries ) ;
rank: 605
score: 99.05547626201923
patch: for ( double [ ] v : res . entries ) {
rank: 606
score: 99.18442111545139
patch: final Iterator < int > iter = res . entries ( ) . iterator ( ) ;
rank: 606
score: 99.13414713541667
patch: Iterator iter = res ; Iterator iter = v . iterator ( ) ;
rank: 606
score: 99.12973167782738
patch: Iterator iter = res . get CaMeL Entry ( iter . key ( ) ) . iterator ( ) ;
rank: 606
score: 99.05500793457031
patch: Iterator iter = res . entries .
rank: 607
score: 99.18441611842105
patch: Iterator < Iterator < Iterator > iter = res . entries ( ) . iterator ( ) ;
rank: 607
score: 99.1296154203869
patch: Iterator < boolean < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . iterator ( ) ;
rank: 607
score: 99.1293475811298
patch: entries = res . entries . to CaMeL Array ( ) ;
rank: 607
score: 99.120166015625
patch: int entries = res . iterator ( ) ;
rank: 607
score: 99.09885864257812
patch: Iterator iter = res > size ( ) ;
rank: 608
score: 99.18369704026442
patch: final Object [ ] res = res . entries ( ) ;
rank: 608
score: 99.14434814453125
patch: Iterator . Iterator iter = res . iterator ( ) ;
rank: 608
score: 99.13387625558036
patch: if ( res . size ( ) == 0 ) return null ;
rank: 608
score: 99.1287841796875
patch: Vector iter = res . iterator ( ) ;
rank: 608
score: 99.11974080403645
patch: Iterator * ] res = res . iterator ( ) ;
rank: 608
score: 99.05386117788461
patch: for ( iter . has CaMeL Next ( ) ; ) {
rank: 609
score: 99.1832275390625
patch: if ( res != null ) return iter . next ( ) ;
rank: 609
score: 99.12852986653645
patch: Object res = res . get CaMeL Value ( ) ;
rank: 609
score: 99.12826102120536
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = ebe CaMeL Divide ;
rank: 609
score: 99.11751302083333
patch: Iterator iter = res . entries ( ) ; int entries = 0 ;
rank: 609
score: 99.09832763671875
patch: double [ ] res = new int [ res . length ] ;
rank: 609
score: 99.0526455965909
patch: Iterator iter . has CaMeL Next ( ) ; {
rank: 610
score: 99.13229166666666
patch: Iterator iter = ( int [ ] ) res . iterator ( ) ;
rank: 610
score: 99.1294177827381
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . index CaMeL Of ( ) ;
rank: 610
score: 99.12846235795455
patch: entries = res . entries . entries ( ) ;
rank: 610
score: 99.11727469308036
patch: Iterator iter = res . entries ( ) . put ( ) ;
rank: 611
score: 99.13174002511161
patch: for ( ; iter . has CaMeL Next ( ) ; ) {
rank: 611
score: 99.12937709263393
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : v )
rank: 611
score: 99.12689678485577
patch: Iterator iter = v [ iter . size ( ) ] ;
rank: 611
score: 99.12611490885416
patch: if ( res != ; Iterator iter = res . iterator ( ) ;
rank: 611
score: 99.11668043870192
patch: Iterator iter = res . entries ( null , null ) ;
rank: 611
score: 99.09699358258929
patch: Iterator iter = res . entries . entries . entries . entries ;
rank: 611
score: 99.05218036358173
patch: Iterator res = res . entries . iterator ( ) ; }
rank: 612
score: 99.13174002511161
patch: Disposer . Iterator iter = res . entries . iterator ( ) ;
rank: 612
score: 99.12931315104167
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = this . res . entries ( ) ;
rank: 612
score: 99.12610677083333
patch: Iterator < ? extends E > iter = res . entries ( ) ;
rank: 612
score: 99.1160888671875
patch: Iterator iter = res . entries ( $NUMBER$ ) ;
rank: 612
score: 99.05216471354167
patch: Iterator iter = res . ebe CaMeL Divide ( ) ;
rank: 613
score: 99.14247639973958
patch: Iterator iter = res . iterator ( ) ; ) /
rank: 613
score: 99.13169642857143
patch: byte [ ] data = res . get CaMeL Data ( ) ;
rank: 613
score: 99.12923177083333
patch: Iterator iter . has CaMeL Next ( ) ; ) ; Open CaMeL Map CaMeL Real CaMeL Vector res ;
rank: 613
score: 99.11608072916667
patch: synchronized ( res ) { Iterator iter = res . copy ( ) ;
rank: 614
score: 99.18051486545139
patch: Iterator < Object > < String > iter = res . entries . iterator ( ) ;
rank: 614
score: 99.1419344815341
patch: Iterator iter = res . get ( res ) ;
rank: 614
score: 99.13162434895834
patch: synchronized ( this ) { res . entries = res . entries ; }
rank: 614
score: 99.12904866536458
patch: Iterator iter = res > entries . iterator ( ) ;
rank: 614
score: 99.12491861979167
patch: if ( res != null && res . size ( ) > 0 )
rank: 614
score: 99.12281290690105
patch: Iterator iter = new Iterator ( res . length ) ;
rank: 614
score: 99.0933837890625
patch: Iterator iter = res . entries ) . size ( ) ;
rank: 614
score: 99.07011108398437
patch: Iterator iter = iter . advance ( ) ;
rank: 614
score: 99.05194091796875
patch: int v = iter . has CaMeL Next ( ) ;
rank: 615
score: 99.17982884457237
patch: Iterator iter = res . entries ( ) . entries ( ) . iterator ( ) ; else
rank: 615
score: 99.11568509615384
patch: Iterator iter = res [ null ] . entries ( ) ;
rank: 616
score: 99.12318522135416
patch: Iterator < ? extends Object > iter = res . iterator ( ) ;
rank: 616
score: 99.12020169771634
patch: Iterator iter = res . entries . entries . iterator ( )
rank: 616
score: 99.092529296875
patch: Iterator iter = res . entries . size ( ) ) ;
rank: 616
score: 99.06937662760417
patch: Iterator iter = res . entries . iterator ( ) :
rank: 616
score: 99.0516357421875
patch: Iterator iter = res . ) . iterator ( ) ;
rank: 617
score: 99.17977744654605
patch: Iterator < Iterator < ) > iter = res . entries ( ) . iterator ( ) ;
rank: 617
score: 99.14122425426136
patch: Iterator < ) = res . iterator ( ) ;
rank: 617
score: 99.1286388578869
patch: ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res ) . set CaMeL Entry ( this ) ;
rank: 617
score: 99.12204415457589
patch: if ( res . size ( ) == 1 ) return res ;
rank: 617
score: 99.0911865234375
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = res . null ;
rank: 617
score: 99.06911057692308
patch: Iterator iter = res [ iter . length - 1 ] ;
rank: 617
score: 99.05075307992789
patch: Iterator iter = res . has CaMeL Next ( ) ; }
rank: 618
score: 99.17977566189236
patch: final Iterator < Throwable > iter = res . entries ( ) . iterator ( ) ;
rank: 618
score: 99.12849695542279
patch: if ( v . length > 0 ) res . set CaMeL Entry ( ) ;
rank: 618
score: 99.12131173270089
patch: for ( int ; 0 < v . length ; 0 ++ )
rank: 618
score: 99.11916879507211
patch: Iterator iter = res . entries = new > ( ) ;
rank: 619
score: 99.13894653320312
patch: Iterator iter = res . get CaMeL Entries ( ) ;
rank: 619
score: 99.12842668805804
patch: Iterator has CaMeL Next = res . entries . iterator ( ) ;
rank: 619
score: 99.1263427734375
patch: Iterator iter 0 = res . entries . iterator ( ) ;
rank: 619
score: 99.12039888822116
patch: Iterator < res > iter = res . entries ( ) ;
rank: 619
score: 99.11460367838542
patch: long iter = res . entries . iterator ( ) ;
rank: 619
score: 99.08693440755208
patch: int [ ] v = res . size ( ) ;
rank: 619
score: 99.04979451497395
patch: Iterator iter = res . TRUE . iterator ( ) ;
rank: 620
score: 99.13828688401442
patch: Iterator iter = res . iterator ( ) ; = 1 ;
rank: 620
score: 99.12825520833333
patch: for ( int ) { iter . advance ( ) ;
rank: 620
score: 99.119873046875
patch: Iterator iter = v . iterator . entries ( ) ;
rank: 620
score: 99.11744181315105
patch: int value = iter . has CaMeL Next ( ) ;
rank: 620
score: 99.06771511501736
patch: iter = res . size ( ) ;
rank: 621
score: 99.17825753348214
patch: Iterator iter = res . entries ( ) ; else return null ;
rank: 621
score: 99.1378643329327
patch: Iterator iter = res . entries . iter ( ) ; iterator
rank: 621
score: 99.12824842664931
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries . entries )
rank: 621
score: 99.11732991536458
patch: Iterator iter = size . entries . iterator ( ) ;
rank: 621
score: 99.11374136117789
patch: Iterator < T > iterator = res . entries ( ) ;
rank: 621
score: 99.08563701923077
patch: Iterator iter = res . entries . entries . ( ) ;
rank: 621
score: 99.04928588867188
patch: Iterator iter = res . list . size ( ) ;
rank: 622
score: 99.17818777901786
patch: int [ ] iter = res . entries . iterator ( ) ;
rank: 622
score: 99.13583374023438
patch: Iterator iter = res . entries . Enum ( ) ;
rank: 622
score: 99.12789713541666
patch: Enumeration < String > iter = res . entries . iterator ( ) ;
rank: 622
score: 99.11836381392045
patch: Iterator iter = v . iterator ( res ) ;
rank: 622
score: 99.11618276742789
patch: Iterator iter = res . iterator ( v . length ) ;
rank: 622
score: 99.11365763346355
patch: Iterator iter = res . entries $NUMBER$ size ( ) ;
rank: 622
score: 99.06613159179688
patch: Iterator iter = min . entries . iterator ( ) ;
rank: 622
score: 99.04876708984375
patch: Vector iter = res . entries . size ( ) ;
rank: 623
score: 99.12781633649554
patch: Iterator < double ) = res . entries . iterator ( ) ;
rank: 623
score: 99.11729079026442
patch: Iterator iter = res . iterator ( iterator ( ) ) ;
rank: 623
score: 99.04874674479167
patch: Iterator iter = res . length . iter ( ) ;
rank: 624
score: 99.12777549342105
patch: Iterator < double [ ] > iter = this . entries . entries . iterator ( ) ;
rank: 624
score: 99.11698091947116
patch: Iterator iter = v [ 0 ] . entries ( ) ;
rank: 624
score: 99.11501057942708
patch: int iter = res . length . iterator ( ) ;
rank: 624
score: 99.06510103665866
patch: Iterator iter = v . index CaMeL Of ( this ) ;
rank: 624
score: 99.04855346679688
patch: Iterator iter = res . environment . iterator ( ) ;
rank: 625
score: 99.17783717105263
patch: Iterator iter = ( ( Iterator ) res . iterator ( ) ) . iterator ( ) ;
rank: 625
score: 99.13422100360577
patch: Iterator iter = res . entries . . iter ( ) ;
rank: 625
score: 99.11630483774039
patch: Iterator < res > iter = v . iterator ( ) ;
rank: 626
score: 99.17734938401442
patch: final Iterator iter = data . entries . iterator ( ) ;
rank: 626
score: 99.13340407151442
patch: iter = this . res . entries . iterator ( ) ;
rank: 626
score: 99.12757219587054
patch: for ( while ( iter . has CaMeL Next ( ) ) {
rank: 626
score: 99.11255821814903
patch: entries = new Iterator ( res . size ( ) ) ;
rank: 626
score: 99.04744466145833
patch: Iterator iter = ) . has CaMeL Next ( ) ;
rank: 627
score: 99.13329139122597
patch: Iterator iter = new res . entries . iterator ( ) ;
rank: 627
score: 99.04693134014423
patch: Iterator iter . has CaMeL Next ( ) ; ) { {
rank: 628
score: 99.17571551983173
patch: Iterator < Iterator > iterator = res . iterator ( ) ;
rank: 628
score: 99.13268103966347
patch: Iterator iter = res . iterator ( ) ; = 0 ;
rank: 628
score: 99.1272964477539
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res .
rank: 628
score: 99.11256760817308
patch: Iterator < Boolean > iter = res . entries ( ) ;
rank: 628
score: 99.11014811197917
patch: Iterator iter = res . iterator ( ) ; * /
rank: 628
score: 99.10955810546875
patch: Iterator iter = v . iterator ( ) ; for (
rank: 628
score: 99.08106689453125
patch: Iterator iter = res . entries . entries ;
rank: 628
score: 99.06334339488636
patch: Iterator iter = res . size ( ) ) ;
rank: 629
score: 99.17533656529018
patch: final Iterator iter = res . entries . iterator ( ) ; else
rank: 629
score: 99.12704806857639
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) res . entries .
rank: 629
score: 99.11008864182692
patch: Iterator < Object > iter = v . iterator ( ) ;
rank: 629
score: 99.10948486328125
patch: Iterator iter = iterator . iterator ( ) ;
rank: 629
score: 99.04666841947116
patch: Iterator iter = res . contains ( res . length ) ;
rank: 630
score: 99.1323750813802
patch: Iterator entries = res . entries . entries ( ) ;
rank: 630
score: 99.11171468098958
patch: res . entries . add ( res . entries ) ;
rank: 630
score: 99.10914963942308
patch: Iterator iter = ebe CaMeL Divide ( v . length ) ;
rank: 630
score: 99.08084542410714
patch: Iterator iter = res . join ( ) . entries ( ) ;
rank: 631
score: 99.13232421875
patch: Iterator iter = res . max . entries ( ) ;
rank: 631
score: 99.10999644886364
patch: Iterator = res . entries . iterator ( ) ;
rank: 631
score: 99.10912068684895
patch: int entries = iter . has CaMeL Next ( ) ;
rank: 631
score: 99.06180826822917
patch: Iterator iter = this . entries . iter ( ) ;
rank: 631
score: 99.04657451923077
patch: Iterator iter = res . entries . contains ( v ) ;
rank: 632
score: 99.11627666766827
patch: Iterator iter = ( int ) iter . next ( ) ;
rank: 632
score: 99.10753377278645
patch: Iterator iter = res . in . entries ( ) ;
rank: 632
score: 99.10720590444711
patch: res . res = res . entries . clone ( ) ;
rank: 632
score: 99.06153564453125
patch: Iterator iter = res . start ( ) ;
rank: 632
score: 99.0464375813802
patch: Iterator iter = res . delete . iterator ( ) ;
rank: 633
score: 99.17450420673077
patch: Iterator < String > iter = res . iter ( ) ;
rank: 633
score: 99.13175455729167
patch: Iterator iter = res . iterator ( ) ; break ;
rank: 633
score: 99.10718712439903
patch: Iterator < Double > iter = res . iterator ( ) ;
rank: 633
score: 99.07809012276786
patch: Iterator iter = v . copy ( ) . entries ( ) ;
rank: 633
score: 99.06129964192708
patch: Iterator iter = res + v . iterator ( ) ;
rank: 633
score: 99.04641723632812
patch: Iterator iter = res . advance . entries ( ) ;
rank: 634
score: 99.1069844563802
patch: Iterator iter = res . entries ( ) ; break ;
rank: 634
score: 99.1066143329327
patch: Object res = res . entries . remove ( 0 ) ;
rank: 634
score: 99.06041463216145
patch: Iterator iter = res . exp . iterator ( ) ;
rank: 635
score: 99.17319899338942
patch: Iterator < Short > iter = res . iterator ( ) ;
rank: 635
score: 99.12762451171875
patch: Enumeration iter = res . entries . entries ( ) ;
rank: 635
score: 99.114013671875
patch: Iterator iter = res . list = res . iterator ( ) ;
rank: 635
score: 99.10637958233173
patch: Iterator < T >> iter = res . entries ( ) ;
rank: 635
score: 99.07769775390625
patch: Iterator iter = res . entries . entries . entries ;
rank: 635
score: 99.04573567708333
patch: Iterator iter = ebe CaMeL Divide . size ( ) ;
rank: 636
score: 99.10630289713542
patch: Iterator iter = res . entries ( ) == null ;
rank: 636
score: 99.07628284801136
patch: Iterator iter = res . entries . entries ) ;
rank: 636
score: 99.0456034342448
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = res ;
rank: 637
score: 99.12745157877605
patch: Iterator iter = entries . entries . iter ( ) ;
rank: 637
score: 99.11380440848214
patch: Object [ ] data = res . entries . iterator ( ) ;
rank: 637
score: 99.10658569335938
patch: Iterator iter = size . iterator ( ) ;
rank: 637
score: 99.106201171875
patch: Iterator < String >> entries = res . entries ( ) ;
rank: 637
score: 99.05745442708333
patch: Iterator iter = res . 0 . iterator ( ) ;
rank: 637
score: 99.04527791341145
patch: else iter = res . entries . iterator ( ) ;
rank: 638
score: 99.1136983235677
patch: long size = res . entries . size ( ) ;
rank: 638
score: 99.10575561523437
patch: Iterator list = res . entries ( ) ;
rank: 638
score: 99.102294921875
patch: Iterator Iterator iter = v . iterator ( ) ;
rank: 638
score: 99.04434204101562
patch: while ( iterator . has CaMeL Next ( ) ) {
rank: 639
score: 99.12716909555289
patch: Iterator iter = res . entries . contains ( res ) ;
rank: 639
score: 99.10561899038461
patch: Iterator < / >> iter = res . entries ( ) ;
rank: 639
score: 99.10211651141827
patch: if ( v != null ) res . res = v ;
rank: 640
score: 99.12424926757812
patch: this . res . set CaMeL Entry ( iter . key ( ) , iter . value ( )
rank: 640
score: 99.11307779947917
patch: Iterator iter = size ( ) . iterator ( ) ;
rank: 640
score: 99.10560302734375
patch: Iterator iter = iter . iter ( ) ;
rank: 640
score: 99.10190054086539
patch: Iterator < Serializable > iter = res . iterator ( ) ;
rank: 640
score: 99.04368082682292
patch: Iterator iter = res .
rank: 641
score: 99.171875
patch: Iterator iter = res . entries = res . iter ( ) ;
rank: 641
score: 99.1055157001202
patch: Iterator iter = ebe CaMeL Divide ( res . length ) ;
rank: 641
score: 99.1044921875
patch: Iterator iter = list . entries ( ) ;
rank: 641
score: 99.10068359375
patch: List res = res . entries ( ) ;
rank: 641
score: 99.05398559570312
patch: Iterator iter = res . max ( ) ;
rank: 641
score: 99.04344685872395
patch: iter = res . entries . iterator ( ) ; ;
rank: 642
score: 99.17185621995192
patch: final int [ ] res = res . entries ( ) ;
rank: 642
score: 99.12395163143383
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . length ;
rank: 642
score: 99.10430908203125
patch: Iterator value = res . entries . iterator ( ) ;
rank: 642
score: 99.10049438476562
patch: Iterator iter = res . iterator ( ) ; null ;
rank: 642
score: 99.05396525065105
patch: Iterator iter = res . entries . iterator ( ) ?
rank: 642
score: 99.0430399576823
patch: List res = entries . entries . iterator ( ) ;
rank: 643
score: 99.12404221754808
patch: Iterator < ? > iter = res . next ( ) ;
rank: 643
score: 99.12368338448661
patch: Iterator v = res . entries ( ) . iterator ( ) ;
rank: 643
score: 99.11258370535714
patch: Iterator iter = res = res . list . iterator ( ) ;
rank: 644
score: 99.1710956280048
patch: Iterator < Class > entries = res . entries ( ) ;
rank: 644
score: 99.12381685697116
patch: Iterator iter = res . entries . reverse ( res ) ;
rank: 644
score: 99.12335205078125
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( ) +
rank: 644
score: 99.10352783203125
patch: int iterator = res . iterator ( ) ;
rank: 645
score: 99.12319113991477
patch: Iterator iter iterator = res . iterator ( ) ;
rank: 645
score: 99.1231625205592
patch: synchronized ( this ) { Iterator iter = res . entries . entries . iterator ( ) ;
rank: 645
score: 99.10214233398438
patch: Iterator [ ] iter = res . iterator ( ) ;
rank: 645
score: 99.09844501201923
patch: Iterator < Comparable > iter = res . iterator ( ) ;
rank: 645
score: 99.04042561848958
patch: int res = res . entries . iterator ( ) ;
rank: 646
score: 99.1229999248798
patch: Iterator iter = res . iterator ( ) ; iter -- ;
rank: 646
score: 99.12266438802084
patch: Iterator iter = res . entries ( v ) . iterator ( ) ;
rank: 646
score: 99.09796612079327
patch: if ( res != null ) res . res = ) ;
rank: 646
score: 99.04036458333333
patch: Iterator iter = v . map . iterator ( ) ;
rank: 647
score: 99.16981336805556
patch: final synchronized ( res ) { Iterator iter = res . entries . iterator ( ) ;
rank: 647
score: 99.122802734375
patch: Iterator iter = res . get > ( ) ;
rank: 647
score: 99.12256577435662
patch: Iterator < int , int > iter = res . entries . iterator ( ) ;
rank: 647
score: 99.11024058948864
patch: Iterator iter = res 1 . iterator ( ) ;
rank: 647
score: 99.1014404296875
patch: Iterator iter = res . out . entries ( ) ;
rank: 647
score: 99.0973612467448
patch: if ( v . length == 0 ) return res ;
rank: 647
score: 99.0518798828125
patch: Iterator iter = res . remove ( v . length ) ;
rank: 647
score: 99.04001686789773
patch: Iterator iter = entries . . iterator ( ) ;
rank: 648
score: 99.16962348090277
patch: Iterator < String > iter = res . entries ( ) . iterator ( ) ; else
rank: 648
score: 99.1221923828125
patch: Iterator < int ) { iter = res . entries . entries . iterator ( ) ;
rank: 648
score: 99.03981526692708
patch: Set res = res . entries . iterator ( ) ;
rank: 649
score: 99.1689922626202
patch: Iterator < Object > iterator = res . iterator ( ) ;
rank: 649
score: 99.12229410807292
patch: entries iter = res . entries . iterator ( ) ;
rank: 649
score: 99.06625366210938
patch: Vector entries = res . entries . iterator ( ) ;
rank: 649
score: 99.0507061298077
patch: Iterator iter = res . index CaMeL Of ( size ) ;
rank: 649
score: 99.03961181640625
patch: iter . advance ( ) ;
rank: 650
score: 99.16741473858173
patch: Iterator < Iterator > iter = res . iter ( ) ;
rank: 650
score: 99.0934589092548
patch: if ( v != null && res . length > 0 )
rank: 650
score: 99.06337327223558
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( this ) ;
rank: 650
score: 99.05015211838942
patch: Iterator iter = res . add ( res . length ) ;
rank: 650
score: 99.03948974609375
patch: Iterator iter = res . advance . size ( ) ;
rank: 651
score: 99.16676682692308
patch: Iterator < String > iter : res . iterator ( ) ;
rank: 651
score: 99.12152099609375
patch: Iterator iter = res . entries . split ( ) ;
rank: 651
score: 99.12004009046052
patch: Iterator iter = ( ( Open CaMeL Map CaMeL Real CaMeL Vector ) this ) . entries .
rank: 651
score: 99.10172526041667
patch: Vector iter = res . entries . entries ( ) ;
rank: 651
score: 99.09859212239583
patch: this . res . entries . add ( res ) ;
rank: 651
score: 99.09314982096355
patch: List iter = res . entries . entries ( ) ;
rank: 651
score: 99.03861860795455
patch: Iterator iter = res . equals ( this ) ;
rank: 652
score: 99.16675676618304
patch: Iterator iter = res . iterator ( ) ; for ( ) {
rank: 652
score: 99.12117826021634
patch: Iterator iter = res . iterator ( ) ; ; / /
rank: 652
score: 99.12000189887152
patch: Iterator iter = res != null ? res . entries . iterator ( ) : null ;
rank: 652
score: 99.10153432992789
patch: dim . entries = res . entries . iterator ( ) ;
rank: 652
score: 99.09780649038461
patch: Iterator iter = res . entries . join ( res ) ;
rank: 652
score: 99.09180626502403
patch: if ( res != null && res . res != null )
rank: 653
score: 99.12107340494792
patch: Iterator iter = res . compare . iterator ( ) ;
rank: 653
score: 99.11972384982639
patch: for ( Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries ) { {
rank: 653
score: 99.09998497596153
patch: Iterator iter = res [ length ] . iterator ( ) ;
rank: 653
score: 99.0977783203125
patch: Iterator iter = res . entries ( - 1 ) ;
rank: 653
score: 99.09102376302083
patch: Iterator iter = res . iterator ( ) - 1 ;
rank: 653
score: 99.059814453125
patch: Iterator iter = res . entries . entries . entries ) ;
rank: 653
score: 99.04766845703125
patch: Iterator iter = res . class . iter ( ) ;
rank: 653
score: 99.03683471679688
patch: Iterator iter = res = entries . iterator ( ) ;
rank: 654
score: 99.12034254807692
patch: Iterator iter = res . entries . . entries ( ) ;
rank: 654
score: 99.09983317057292
patch: Iterator iter = exp . entries . iterator ( ) ;
rank: 654
score: 99.09078979492188
patch: if ( res . length != 0 ) return res ;
rank: 654
score: 99.04764811197917
patch: Iterator iter = res > list . iterator ( ) ;
rank: 654
score: 99.03624267578125
patch: Iterator iter = res . end ( ) ;
rank: 655
score: 99.12020169771634
patch: Iterator < Entry > iter = res . next ( ) ;
rank: 655
score: 99.11891276041666
patch: Iterator < Integer > entries = res . entries . iterator ( ) ;
rank: 655
score: 99.0986836751302
patch: Iterator iter = res . entries ( ) ; for (
rank: 655
score: 99.09752308238636
patch: res . entries = this . res . entries ;
rank: 655
score: 99.09075458233173
patch: res . res = res . get CaMeL Bytes ( ) ;
rank: 655
score: 99.047509765625
patch: Iterator iterator = res . size ( ) ;
rank: 655
score: 99.03600056966145
patch: Iterator res = iter . has CaMeL Next ( ) ;
rank: 656
score: 99.16574532645089
patch: final Iterator < ? > entries = res . entries ( ) ;
rank: 656
score: 99.11978149414062
patch: Iterator iter . iterator = res . iterator ( ) ;
rank: 656
score: 99.1187385110294
patch: for ( int Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries )
rank: 656
score: 99.0974629720052
patch: Iterator iter = res . size ( ) ; for (
rank: 656
score: 99.09693492542614
patch: this . res . entries = res . entries ;
rank: 656
score: 99.09310208834134
patch: Iterator iter = res . iterator ( ) ; ; finally {
rank: 656
score: 99.03599039713542
patch: Iterator iter = res . end . size ( ) ;
rank: 657
score: 99.09703979492187
patch: Iterator iter = iter . size ( ) ;
rank: 657
score: 99.09019978841145
patch: res . Iterator iter = v . iterator ( ) ;
rank: 657
score: 99.03584428267045
patch: iter = entries . entries . iterator ( ) ;
rank: 658
score: 99.16414701021634
patch: Iterator < Integer > iter = res . size ( ) ;
rank: 658
score: 99.09605055588942
patch: Iterator iter = ( Iterator ) iter . iterator ( ) ;
rank: 658
score: 99.08970289963942
patch: Iterator iter = res . list . iterator ( 0 ) ;
rank: 658
score: 99.08803147536058
patch: res . size = res . entries . size ( ) ;
rank: 658
score: 99.045654296875
patch: Iterator iter = res . join . iterator ( ) ;
rank: 658
score: 99.0342129794034
patch: Iterator iter = res . iterator ( 0 ) ;
rank: 659
score: 99.095947265625
patch: Vector iter = v . entries . iterator ( ) ;
rank: 659
score: 99.08717854817708
patch: Iterator map = res . entries . iterator ( ) ;
rank: 659
score: 99.03329467773438
patch: iter . has CaMeL Next ( ) ; {
rank: 660
score: 99.16407993861607
patch: Iterator iter = res . entries . size ( ) - $NUMBER$ ;
rank: 660
score: 99.11745981069711
patch: Iterator iter iter = res . entries . iter ( ) ;
rank: 660
score: 99.11644222861842
patch: Iterator < boolean [ ] > iter = res . entries . entries . iterator ( ) ;
rank: 660
score: 99.095458984375
patch: Iterator iter = res . out . size ( ) ;
rank: 660
score: 99.08676979758523
patch: if ( res . size ( ) > 0 )
rank: 661
score: 99.0949237530048
patch: Iterator < E > iterator = res . entries ( ) ;
rank: 661
score: 99.08653767903645
patch: Iterator iter = res . iterator . Iterator ( ) ;
rank: 661
score: 99.08494215745192
patch: Iterator iter = ( int ) list . iterator ( ) ;
rank: 661
score: 99.03090413411458
patch: Iterator iter = res . random . size ( ) ;
rank: 662
score: 99.16258826622597
patch: Iterator iter = res . entries ( ) ; return res ;
rank: 662
score: 99.09471717247597
patch: final int iter . iterator ( ) . iterator ( ) ;
rank: 662
score: 99.0946553548177
patch: Iterator iter = res . replace . iterator ( ) ;
rank: 662
score: 99.08571370442708
patch: List res = res . entries . entries ( ) ;
rank: 662
score: 99.08430786132813
patch: res . set CaMeL Length ( 0 ) ;
rank: 662
score: 99.05291278545673
patch: Iterator iter = res . [ iter . length 1 ] ;
rank: 662
score: 99.04295857747395
patch: Iterator entries = this . entries . iterator ( ) ;
rank: 662
score: 99.03040568033855
patch: Iterator iter = res . to CaMeL Array ( ) .
rank: 663
score: 99.11614520733173
patch: Iterator iter = res . index CaMeL Of ( res ) ;
rank: 663
score: 99.09347768930289
patch: Iterator iter = res [ $STRING$ ] . iterator ( ) ;
rank: 663
score: 99.08571213942308
patch: Iterator iter = res . iterator ( ) ; while ( ;
rank: 663
score: 99.08263142903645
patch: Iterator iter = res . iterator ( ) ( ) ;
rank: 663
score: 99.05074055989583
patch: Vector entries = res . entries . size ( ) ;
rank: 664
score: 99.1622823079427
patch: Iterator iter = 0 + res . iterator ( ) ;
rank: 664
score: 99.11598714192708
patch: Iterator iter = res . get . iter ( ) ;
rank: 664
score: 99.09390258789062
patch: double iter = res . entries . iterator ( ) ;
rank: 664
score: 99.09239705403645
patch: res . set CaMeL Entry ( v . length ) ;
rank: 664
score: 99.083984375
patch: Iterator iterator = v . iterator . iterator ( ) ;
rank: 664
score: 99.08235307173295
patch: size = res . entries . size ( ) ;
rank: 664
score: 99.02871704101562
patch: Iterator res = entries . entries . iterator ( ) ;
rank: 665
score: 99.11562278053977
patch: Iterator iter = res . get ( 0 ) ;
rank: 665
score: 99.09358354048295
patch: Iterator iter = res . entries iter ( ) ;
rank: 665
score: 99.08384195963542
patch: List iter = res . list . iterator ( ) ;
rank: 665
score: 99.02853393554688
patch: if ( res . entries . length > 0 ) {
rank: 666
score: 99.11492450420673
patch: iter Iterator iter = res . entries . iterator ( ) ;
rank: 666
score: 99.09338989257813
patch: res . entries . add ( res ) ;
rank: 666
score: 99.0918477376302
patch: int iter = this . res . iterator ( ) ;
rank: 666
score: 99.082763671875
patch: Iterator iter = res . entries ( iterator ) ;
rank: 666
score: 99.08154296875
patch: iter = res . list . list . iterator ( ) ;
rank: 666
score: 99.0397440592448
patch: Iterator iter = res . length : res . length ;
rank: 667
score: 99.11348470052083
patch: Iterator iter = res . iterator ( ) ; while (
rank: 667
score: 99.09295654296875
patch: Iterator iterator = res . value . iterator ( ) ;
rank: 667
score: 99.08262125651042
patch: List iter = res . list . entries ( ) ;
rank: 667
score: 99.08029174804688
patch: while ( res . size ( ) > 0 ) {
rank: 667
score: 99.04849947415866
patch: Iterator iter = res . entries . ( ) . length ;
rank: 667
score: 99.03940836588542
patch: Iterator iter = res . size ( ) * $NUMBER$ ;
rank: 667
score: 99.0264180501302
patch: Iterator iter = res . get CaMeL Value ( ) .
rank: 668
score: 99.11360990084134
patch: Iterator iter = res . entries . compare ( res ) ;
rank: 668
score: 99.11337119654605
patch: Iterator < Object > iter = res . entries ( ) . entries . iterator ( ) ;
rank: 668
score: 99.0910977450284
patch: res . entries = res . iterator ( ) ;
rank: 668
score: 99.08025653545673
patch: Iterator iterator = res . entries . iterator ( ) ; ;
rank: 668
score: 99.0483867938702
patch: Iterator iter = res . compare CaMeL To ( this ) ;
rank: 668
score: 99.03900146484375
patch: Iterator iter = res . [ 0 ] ;
rank: 669
score: 99.16155536358173
patch: Iterator < Object > iter = res . iter ( ) ;
rank: 669
score: 99.11358173076923
patch: Iterator iter = this . res . iterator ( ) ; ;
rank: 669
score: 99.09042358398438
patch: Collection [ ] res = res . entries ( ) ;
rank: 669
score: 99.08958082932692
patch: Iterator iter = res . entries ( ) [ 1 ] ;
rank: 669
score: 99.08121431790866
patch: Iterator < Number > iter = res . entries ( ) ;
rank: 669
score: 99.07882690429688
patch: Iterator iterator = v . entries . iterator ( ) ;
rank: 669
score: 99.04816228693181
patch: Iterator iter = res . is CaMeL Empty ( )
rank: 669
score: 99.03859456380208
patch: Iterator iter = this . iter . iterator ( ) ;
rank: 669
score: 99.02621459960938
patch: Vector res = entries . entries . iterator ( ) ;
rank: 670
score: 99.11351521809895
patch: Iterator iter = res . entries . put ( ) ;
rank: 670
score: 99.11284436677632
patch: Iterator iter . has CaMeL Next ( ) ; ) { iter . advance ( ) ; }
rank: 670
score: 99.09038837139423
patch: Iterator iter = res . entries ( ) ; case 1 :
rank: 670
score: 99.08087627704327
patch: Iterator < Long > iter = res . iterator ( ) ;
rank: 671
score: 99.11337515024039
patch: / * iter = res . entries . iterator ( ) ;
rank: 671
score: 99.08944936899039
patch: int iter = res . entries . ( ) . length ;
rank: 671
score: 99.08872477213542
patch: Iterator iter = res [ iter . length 0 ] ;
rank: 671
score: 99.07850138346355
patch: Iterator list = res . list . iterator ( ) ;
rank: 671
score: 99.04715670072116
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ( iter ) ;
rank: 671
score: 99.02522786458333
patch: Vector iter = entries . entries . iterator ( ) ;
rank: 672
score: 99.15999930245536
patch: / * Iterator iterator = res . entries . iterator ( ) ;
rank: 672
score: 99.1127197265625
patch: if ( res != null ) res . set CaMeL Entry ( ) ;
rank: 672
score: 99.0894305889423
patch: Iterator < $STRING$ > iter = res . entries ( ) ;
rank: 672
score: 99.037744140625
patch: Iterator iter = v . iter ( ) ;
rank: 673
score: 99.08868877704327
patch: Iterator iter = res . = res . entries ( ) ;
rank: 673
score: 99.08791879507211
patch: Iterator iter = this . ( ) . iterator ( ) ;
rank: 673
score: 99.07627516526442
patch: Iterator iter = ( int ) v . iterator ( ) ;
rank: 673
score: 99.03671264648438
patch: Iterator iter = this . v . size ( ) ;
rank: 673
score: 99.0241190592448
patch: Iterator iter = v . contains . iterator ( ) ;
rank: 674
score: 99.11260516826923
patch: / ) ; Iterator iter = res . iterator ( ) ;
rank: 674
score: 99.1122295673077
patch: Iterator iter = res . entries [ res . length ] ;
rank: 674
score: 99.08694458007812
patch: Iterator iter = max . entries . iterator ( ) ;
rank: 674
score: 99.07901705228366
patch: List < String > iter = res . entries ( ) ;
rank: 674
score: 99.02400716145833
patch: Iterator iter = res . entries . min ( ) ;
rank: 675
score: 99.15932210286458
patch: Iterator < Iterator iter = res . iterator ( ) ;
rank: 675
score: 99.0884540264423
patch: Iterator iter = res . arraycopy ( res . entries ) ;
rank: 675
score: 99.07899983723958
patch: List res = res . entries . list ( ) ;
rank: 675
score: 99.07590895432692
patch: res . list = res . entries . iterator ( ) ;
rank: 675
score: 99.04017130533855
patch: List entries = res . entries . iterator ( ) ;
rank: 675
score: 99.03528849283855
patch: Iterator iter = System . entries . iterator ( ) ;
rank: 675
score: 99.02341530539773
patch: Iterator iter = v . size ( ) ; ;
rank: 676
score: 99.11197603665866
patch: Iterator iter = res . entries . load ( res ) ;
rank: 676
score: 99.11144301470588
patch: Iterator < double [ ] > iter = this . entries . iterator ( ) ;
rank: 676
score: 99.0877352627841
patch: Iterator iter = res . entries ( ) ) ;
rank: 676
score: 99.07898966471355
patch: Collection iter = res . entries . entries ( ) ;
rank: 676
score: 99.0748291015625
patch: Iterator iter = res . list . iterator ( ) ; )
rank: 676
score: 99.0397616299716
patch: Iterator iter = res . size iterator ( ) ;
rank: 677
score: 99.11138556985294
patch: for ( } Open CaMeL Map CaMeL Real CaMeL Vector res : res . entries )
rank: 677
score: 99.07889498197116
patch: Iterator iter = res . iterator ( . iterator ( ) ;
rank: 677
score: 99.03907189002403
patch: Iterator iter = res . parse ( v . length ) ;
rank: 677
score: 99.0345126065341
patch: Iterator iter = res . iterator ( ) 1 ;
rank: 678
score: 99.1111996299342
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . index CaMeL Of (
rank: 678
score: 99.08676979758523
patch: Iterator iter = res . entries entries ( ) ;
rank: 678
score: 99.0785624186198
patch: / * Iterator iter = res . entries ( ) ;
rank: 679
score: 99.11118451286765
patch: Iterator < boolean < String > iter = res . entries . iterator ( ) ;
rank: 679
score: 99.1105487530048
patch: Iterator < Object > iter = res . next ( ) ;
rank: 679
score: 99.0863037109375
patch: final int iterator = res . iterator ( ) ;
rank: 679
score: 99.0834452311198
patch: Iterator iter = v != null . iterator ( ) ;
rank: 679
score: 99.07323201497395
patch: Iterator iter = data . list . iterator ( ) ;
rank: 679
score: 99.02121988932292
patch: synchronized ( res ) { iter . advance ( ) ;
rank: 680
score: 99.15504807692308
patch: Iterator < Class > iter = res . size ( ) ;
rank: 680
score: 99.10982572115384
patch: Iterator < Entry > iter = res . iter ( ) ;
rank: 680
score: 99.08106486002605
patch: Iterator iter = v . entries ( ) . length ;
rank: 680
score: 99.03542073567708
patch: Iterator iter = res . entries . index CaMeL Of (
rank: 680
score: 99.02086385091145
patch: Iterator iter = entries . iterator ( ) ; for (
rank: 681
score: 99.1546630859375
patch: if ( res != null ) res . close ( ) ;
rank: 681
score: 99.083837890625
patch: Iterator * ] res . iterator ( ) ;
rank: 681
score: 99.08099365234375
patch: int iter = this . res . entries . length ;
rank: 681
score: 99.07774939903847
patch: res . entries = new Iterator [ v . length ] ;
rank: 682
score: 99.1087137858073
patch: Iterator iter = entries . entries . entries ( ) ;
rank: 682
score: 99.08287556966145
patch: int 1 = res . entries . size ( ) ;
rank: 682
score: 99.07208721454327
patch: Iterator iter = ( int ) entries . iterator ( ) ;
rank: 682
score: 99.03309461805556
patch: Iterator iter = res . entries ) ;
rank: 682
score: 99.03231811523438
patch: Iterator iter = v . data . iterator ( ) ;
rank: 682
score: 99.0193115234375
patch: int iter = entries . size ( ) ;
rank: 683
score: 99.15128950639205
patch: final int size = res . size ( ) ;
rank: 683
score: 99.10756272536058
patch: Iterator < ) . iter = res . iterator ( ) ;
rank: 683
score: 99.08133951822917
patch: int iter = res . map . iterator ( ) ;
rank: 683
score: 99.07562725360577
patch: if ( res == null || res . length == 0 )
rank: 683
score: 99.07127028245192
patch: for ( ; iter . has CaMeL Next ( ) ; )
rank: 683
score: 99.03230794270833
patch: Object [ ] iter = res . size ( ) ;
rank: 683
score: 99.01890869140625
patch: Iterator iter = v . read ( ) ;
rank: 684
score: 99.10665189302884
patch: Iterator iter = res . entries . iterator ( ) ; /
rank: 684
score: 99.0811016376202
patch: Iterator < Short > iter = res . entries ( ) ;
rank: 684
score: 99.07770244891827
patch: Iterator iter = v [ iter . entries ( ) ] ;
rank: 684
score: 99.07547701322116
patch: try { Iterator iter = res . iterator ( ) ; ;
rank: 684
score: 99.0705057779948
patch: List list = res . entries . size ( ) ;
rank: 684
score: 99.03155517578125
patch: Iterator iter = res . entries >> iterator ( ) ;
rank: 684
score: 99.01740056818181
patch: Iterator iter = entries . size ( ) ; ;
rank: 685
score: 99.10992752878289
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries . entries .
rank: 685
score: 99.08076782226563
patch: Iterator [ ] res . iterator ( ) ;
rank: 685
score: 99.075439453125
patch: List < Integer > iter = res . entries ( ) ;
rank: 685
score: 99.06974283854167
patch: Iterator iter = new Iterator ( v . length ) ;
rank: 685
score: 99.01676802201705
patch: Iterator iter = res . matches ( this ) ;
rank: 686
score: 99.1049053485577
patch: Iterator iter = res . iterator ( ) ; entries ++ ;
rank: 686
score: 99.08035888671876
patch: int entries = res . size ( ) ;
rank: 686
score: 99.07408728966347
patch: List < ? > iter = res . entries ( ) ;
rank: 686
score: 99.02962036132813
patch: List iter = res . size ( ) ;
rank: 687
score: 99.07991536458333
patch: Iterator < * T : res . iterator ( ) ;
rank: 687
score: 99.0752665201823
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ; for (
rank: 687
score: 99.0730489095052
patch: Iterator iter = res . iterator ( ) ; else {
rank: 687
score: 99.06818096454327
patch: Iterator iter = ( int ) res . iterator ( ) ;
rank: 687
score: 99.02941131591797
patch: Iterator iter = v . length ;
rank: 687
score: 99.01521809895833
patch: Iterator iter = res . [ v . length ] ;
rank: 688
score: 99.10791733685662
patch: Iterator < float [ ] > iter = v . entries . iterator ( ) ;
rank: 688
score: 99.07460530598958
patch: Iterator iter = res . length + v . length ;
rank: 688
score: 99.01421564275569
patch: Iterator iter = res . add ( iter ) ;
rank: 689
score: 99.07162710336539
patch: if ( v != null && res . entries != null )
rank: 689
score: 99.01387162642045
patch: Iterator Iterator iter = entries . iterator ( ) ;
rank: 690
score: 99.07347523082386
patch: Iterator iter = res [ iter . length ] ;
rank: 690
score: 99.07110595703125
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;
rank: 690
score: 99.06650954026442
patch: if ( res . entries . size ( ) == 0 )
rank: 691
score: 99.10723470052083
patch: Iterator < boolean > iter = v . entries . iterator ( ) ;
rank: 691
score: 99.10335599459134
patch: Iterator iter = get ( res . iterator ( ) ) ;
rank: 691
score: 99.07822672526042
patch: Iterator [ ] list = res . entries ( ) ;
rank: 691
score: 99.01320393880208
patch: while ( v . has CaMeL Next ( ) ) {
rank: 692
score: 99.14271897536058
patch: final Object res = res . entries . get ( ) ;
rank: 692
score: 99.0763448079427
patch: float iter = res . entries . iterator ( ) ;
rank: 692
score: 99.07246907552083
patch: int iter = res . entries . length : 0 ;
rank: 692
score: 99.06777719350961
patch: res . res . res . entries = res . entries ;
rank: 692
score: 99.01199340820312
patch: Iterator iter = entries . Iterator ( ) ;
rank: 693
score: 99.07560221354167
patch: res . Iterator iter = res . entries ( ) ;
rank: 693
score: 99.0711669921875
patch: Iterator iter = v . length . entries ( ) ;
rank: 693
score: 99.067626953125
patch: if ( res . length != res . length )
rank: 693
score: 99.0277099609375
patch: Iterator iter = res / v . size ( ) ;
rank: 693
score: 99.01150512695312
patch: Iterator iter = res . entries . contains ( ) ;
rank: 694
score: 99.141357421875
patch: Iterator < Iterator > entries = res . iterator ( ) ;
rank: 694
score: 99.10426958869485
patch: for ( int iter = ) ; iter . has CaMeL Next ( ) ; )
rank: 694
score: 99.00803444602273
patch: Iterator iter = res . iterator ( this ) ;
rank: 695
score: 99.14127974076705
patch: final Iterator iter = 0 . iterator ( ) ;
rank: 695
score: 99.07521565755208
patch: List [ ] res = res . entries ( ) ;
rank: 695
score: 99.06992594401042
patch: Vector iterator = res . entries . iterator ( ) ;
rank: 695
score: 99.02670288085938
patch: Open CaMeL Map CaMeL Real CaMeL Vector ( this ) ;
rank: 695
score: 99.02373657226562
patch: Iterator iter : res . size ( ) ;
rank: 695
score: 99.00799560546875
patch: int iter = v . size ( ) ;
rank: 696
score: 99.10080190805289
patch: Iterator . iter = res . entries . iterator ( ) ;
rank: 696
score: 99.06915283203125
patch: Iterator iter = res != null . entries ( ) ;
rank: 696
score: 99.06556114783653
patch: Iterator iter = res [ entries . size ( ) ] ;
rank: 696
score: 99.0266864483173
patch: Iterator iter = res . entries . add ( this ) ;
rank: 696
score: 99.00696910511364
patch: Iterator iter . has CaMeL Next ( ) ; &&
rank: 697
score: 99.1025860126202
patch: Iterator iter = res . entries [ iter . length ] ;
rank: 697
score: 99.1006571451823
patch: entries . Iterator iter = res . iterator ( ) ;
rank: 697
score: 99.0739990234375
patch: Vector entries = res . entries ( ) ;
rank: 697
score: 99.066552734375
patch: Iterator iter = data . iterator ( ) ;
rank: 697
score: 99.065283203125
patch: Set res = res . entries ( ) ;
rank: 697
score: 99.06151326497395
patch: Iterator iter = res . iterator ( ) ; ; ;
rank: 697
score: 99.0264423076923
patch: Iterator iter = res . next ( ) . entries ) ;
rank: 697
score: 99.0220235188802
patch: Object [ ] res = res . size ( ) ;
rank: 697
score: 99.00018310546875
patch: Iterator iter = res . get CaMeL
rank: 698
score: 99.14078776041667
patch: Iterator iter = $NUMBER$ * res . iterator ( ) ;
rank: 698
score: 99.102392578125
patch: Iterator iter = res . entries 1 ( ) . iterator ( ) ;
rank: 698
score: 99.10062349759616
patch: Iterator iter = res . entries . matches ( res ) ;
rank: 698
score: 99.07396351207386
patch: Iterator iter = res . iterator ( $NUMBER$ ) ;
rank: 698
score: 99.06467507102273
patch: Iterator iter = v . iterator ( ) ; )
rank: 698
score: 99.0215555826823
patch: Iterator iter = res >> entries . iterator ( ) ;
rank: 699
score: 99.10224465762867
patch: Iterator iter ? res . entries . iterator ( ) . has CaMeL Next ( )
rank: 699
score: 99.09989107572116
patch: Iterator iter = res . entries . iter ( ) ) ;
rank: 699
score: 99.07388070913461
patch: Iterator iter = res . entries . size ( ) ; else
rank: 699
score: 99.02511596679688
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = this ;
rank: 699
score: 99.02107747395833
patch: try { Iterator iter = res . size ( ) ;
rank: 699
score: 98.99779163707386
patch: Iterator iter = res . Iterator ( this ) ;
rank: 700
score: 99.13931274414062
patch: Iterator iter = 0 . size ( ) ;
rank: 700
score: 99.10186408547794
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > iter = res . entries .
rank: 700
score: 99.09987386067708
patch: iterator = res . iterator ( ) ;
rank: 700
score: 99.07378595525569
patch: Iterator iter = res . . entries ( ) ;
rank: 700
score: 99.0640117938702
patch: if ( res == null || res . entries != null )
rank: 700
score: 99.02421061197917
patch: int [ ] entries = res . size ( ) ;
rank: 700
score: 98.9953946200284
patch: Iterator iter = res . contains ( v ) ;
rank: 701
score: 99.13697228064903
patch: Iterator < Iterator > iter = res . size ( ) ;
rank: 701
score: 99.09946695963542
patch: / iter Iterator iter = res . iterator ( ) ;
rank: 701
score: 99.0736592610677
patch: Iterator iter = res . entries . start ( ) ;
rank: 701
score: 98.99509499289773
patch: Iterator iter = v . iterator ( ) ; }
rank: 702
score: 99.13683143028847
patch: Iterator < long > iter = res . iterator ( ) ;
rank: 702
score: 99.07351449819711
patch: final int iterator = res . entries ( ) . length ;
rank: 702
score: 99.01893107096355
patch: Iterator iter = res . import . iterator ( ) ;
rank: 702
score: 98.99357466264205
patch: final Iterator iter = entries . size ( ) ;
rank: 703
score: 99.10080190805289
patch: if ( res instanceof Open CaMeL Map CaMeL Real CaMeL Vector )
rank: 703
score: 99.06315474076705
patch: Iterator iter = res $NUMBER$ . iterator ( ) ;
rank: 703
score: 98.992578125
patch: Iterator iter = res != null ? res .
rank: 704
score: 99.13613656850961
patch: final int [ ] iter = res . entries ( ) ;
rank: 704
score: 99.1
patch: for ( int ) { res . set CaMeL Entry ( iter ) ;
rank: 704
score: 99.09716796875
patch: * Iterator iter = res . entries . iterator ( ) ;
rank: 704
score: 99.07163307883523
patch: Iterator >> iter = res . iterator ( ) ;
rank: 704
score: 98.9902676669034
patch: final Iterator iter = res . entries . length ;
rank: 705
score: 99.09700150923295
patch: Iterator iter . = res . iterator ( ) ;
rank: 705
score: 99.0576171875
patch: if ( res . entries != null )
rank: 705
score: 99.05453491210938
patch: System . Iterator iter = res . iterator ( ) ;
rank: 705
score: 98.9897128018466
patch: Iterator iter = res . iterator ( ) ; {
rank: 706
score: 99.13572340745192
patch: Iterator = res . entries ( ) . iterator ( ) ;
rank: 706
score: 99.09678297776442
patch: Iterator < ? > iterator = res . iterator ( ) ;
rank: 706
score: 99.05419921875
patch: Iterator iter = map . list . iterator ( ) ;
rank: 706
score: 99.015869140625
patch: Iterator iter = res . Enum ( ) ;
rank: 706
score: 98.98967950994319
patch: Iterator iter = entries . iterator ( 0 ) ;
rank: 707
score: 99.05465698242188
patch: List res = res . list . entries ( ) ;
rank: 707
score: 99.05309448242187
patch: int size = res . entries . length ;
rank: 707
score: 99.01568603515625
patch: Iterator iter = chars . entries . iterator ( ) ;
rank: 707
score: 98.98895818536931
patch: Iterator iter = entries . iterator ( this ) ;
rank: 708
score: 99.09662334735577
patch: Iterator iter = res . entries . append ( res ) ;
rank: 708
score: 99.07098943536931
patch: Iterator < ] : res . iterator ( ) ;
rank: 708
score: 99.05416870117188
patch: byte [ ] res = res . entries ( ) ;
rank: 709
score: 99.1346768465909
patch: final Iterator iter = res . iter ( ) ;
rank: 709
score: 99.07058481069711
patch: Iterator < int >> iter = res . entries ( ) ;
rank: 709
score: 99.05902099609375
patch: res . set CaMeL Entry ( iter . value ) ;
rank: 709
score: 99.05101521809895
patch: if ( res . length > 0 ) return res ;
rank: 709
score: 99.05101429332386
patch: iter = res . list . size ( ) ;
rank: 709
score: 99.01231079101562
patch: Iterator iter = Iterator . iterator ( ) ;
rank: 710
score: 99.13434307391827
patch: Iterator < ? > entries = res . iterator ( ) ;
rank: 710
score: 99.09616323617789
patch: Iterator < String > iter = res . next ( ) ;
rank: 710
score: 99.0700927734375
patch: Iterator iter = out . entries ( ) ;
rank: 710
score: 99.04966430664062
patch: Iterator list = res . iterator ( ) ;
rank: 710
score: 99.01407877604167
patch: List entries = res . entries . size ( ) ;
rank: 710
score: 98.97938232421875
patch: Iterator iter = res . [ 1 ] ;
rank: 711
score: 99.09825846354167
patch: for ( final Open CaMeL Map CaMeL Real CaMeL Vector res : res )
rank: 711
score: 99.09535725911458
patch: Iterator entries = res . entries . iter ( ) ;
rank: 711
score: 99.06964111328125
patch: Iterator res = res . entries ( ) ;
rank: 711
score: 99.05718994140625
patch: Iterator iter = res [ ] . iterator ( ) ;
rank: 711
score: 99.01248168945312
patch: Vector res = res . entries . size ( ) ;
rank: 711
score: 99.00994318181819
patch: it = res . entries . iterator ( ) ;
rank: 711
score: 98.9790771484375
patch: Iterator iter = entries . next ( ) ;
rank: 712
score: 99.09823404947916
patch: Iterator < String >= iter = res . entries . iterator ( ) ;
rank: 712
score: 99.06946910511364
patch: Iterator iter = res . entries ( ) ; else
rank: 712
score: 99.01169840494792
patch: Iterator iter = res : entries . iterator ( ) ;
rank: 712
score: 98.97794966264205
patch: final Iterator iter = v . size ( ) ;
rank: 713
score: 99.09470621744792
patch: Iterator iter = res . entries . capacity ( ) ;
rank: 713
score: 99.06939697265625
patch: / * ] iter = res . entries ( ) ;
rank: 713
score: 99.0452372233073
patch: result = res . entries . get ( 0 ) ;
rank: 713
score: 99.04498291015625
patch: Object res = res . entries . next ( ) ;
rank: 714
score: 99.13233360877403
patch: this . entries = res . entries . iterator ( ) ;
rank: 714
score: 99.097802734375
patch: Iterator < Long > iter = v . entries . iterator ( ) ;
rank: 714
score: 99.094482421875
patch: Iterator iter = res . next ( ) . ( ) ;
rank: 714
score: 99.06930541992188
patch: List [ ] iter = res . entries ( ) ;
rank: 714
score: 99.0518290201823
patch: int length = iter . has CaMeL Next ( ) ;
rank: 714
score: 99.04505411783855
patch: int res = res . entries . size ( ) ;
rank: 714
score: 99.04436700994319
patch: res . res = res . entries ( ) ;
rank: 714
score: 99.01076253255208
patch: for ( Iterator iter = v . size ( ) ;
rank: 715
score: 99.09346829927884
patch: Iterator iter = res . iterator ( ) ; iterator else ;
rank: 715
score: 99.04337565104167
patch: Iterator iter = res . iterator ( . length ) ;
rank: 715
score: 99.04232788085938
patch: Disposer . Iterator iter = res . iterator ( ) ;
rank: 715
score: 99.00994873046875
patch: Iterator iter = res . entries . advance ( ) ;
rank: 715
score: 98.97406560724431
patch: Iterator iter = entries . iterator ( ) ; {
rank: 716
score: 99.0974609375
patch: Iterator iter [ 0 ] = res . entries . iterator ( ) ;
rank: 716
score: 99.0682881673177
patch: Iterator * ] entries = res . iterator ( ) ;
rank: 716
score: 98.9724454012784
patch: Iterator iter = res . size ( ) ; {
rank: 717
score: 99.130615234375
patch: final Iterator iter = this . res . iterator ( ) ;
rank: 717
score: 99.09683227539062
patch: Iterator < int ) = res . iterator ( ) ;
rank: 717
score: 99.08927612304687
patch: Iterator iter = res . get ( ) ;
rank: 717
score: 99.04163614908855
patch: if ( res . res == null ) return res ;
rank: 717
score: 98.97081909179687
patch: Iterator iter = v . next ( ) ;
rank: 718
score: 99.08870442708333
patch: Iterator iter = res . entries . interrupt ( ) ;
rank: 718
score: 99.06784057617188
patch: int iter = res . list . iterator ( ) ;
rank: 718
score: 99.04029337565105
patch: if ( res . length != $NUMBER$ ) return res ;
rank: 718
score: 99.00487263997395
patch: Iterator iter = res . size ( ) > 0 ;
rank: 719
score: 99.08700561523438
patch: iter . Iterator iter = res . iterator ( ) ;
rank: 719
score: 99.06766764322917
patch: long iter = res . entries . size ( ) ;
rank: 719
score: 99.04848225911458
patch: Iterator iter = this . res . entries . length ;
rank: 719
score: 99.00710042317708
patch: Iterator iter = ) . entries . iterator ( ) ;
rank: 719
score: 98.9679842862216
patch: Iterator iter = res . contains ( $NUMBER$ ) ;
rank: 720
score: 99.12688739483173
patch: Iterator < int > entries = res . iterator ( ) ;
rank: 720
score: 99.09541829427083
patch: Iterator < int + $NUMBER$ : res . entries . iterator ( ) ;
rank: 720
score: 99.08637029474431
patch: Iterator iter = new res . iterator ( ) ;
rank: 720
score: 99.03886274857955
patch: list = res . entries . iterator ( ) ;
rank: 720
score: 98.96673029119319
patch: Iterator iter = v . size ( ) ; }
rank: 721
score: 99.09536563648896
patch: Iterator < int , String > iter = res . entries . iterator ( ) ;
rank: 721
score: 99.06624348958333
patch: Iterator iter = new byte entries . iterator ( ) ;
rank: 721
score: 99.04236857096355
patch: int key = iter . has CaMeL Next ( ) ;
rank: 721
score: 99.03721110026042
patch: Iterator iter = res . iterator ( ) + 1 ;
rank: 721
score: 99.00363159179688
patch: Iterator iter = res . directory . iterator ( ) ;
rank: 721
score: 98.96669699928977
patch: Iterator iter = entries . size ( ) ; }
rank: 722
score: 99.12537560096153
patch: super . entries = res . entries . iterator ( ) ;
rank: 722
score: 99.09532063802084
patch: Iterator iter = res . entries . iterator ( size ( ) ) ;
rank: 722
score: 99.0857821377841
patch: Iterator iter = res . iterator ( ) ; iter
rank: 722
score: 99.06517537434895
patch: Iterator iter = res . entries ( ) ; ) {
rank: 722
score: 99.03694291548295
patch: if ( res . size ( ) == 0 )
rank: 722
score: 98.96638793945313
patch: Iterator iter = res . matches ( ) ;
rank: 723
score: 99.12404221754808
patch: Iterator < synchronized > iter = res . entries ( ) ;
rank: 723
score: 99.06491921164773
patch: Iterator < ] : res . entries ( ) ;
rank: 723
score: 99.04135131835938
patch: res . set CaMeL Entry ( iter ) ;
rank: 723
score: 99.03643243963069
patch: Iterator iter = res . entries ( entries ) ;
rank: 723
score: 99.0328877766927
patch: m iter = res . entries . iterator ( ) ;
rank: 723
score: 99.00259399414062
patch: Iterator iter = res . goto . iterator ( ) ;
rank: 723
score: 98.9651870727539
patch: Iterator iter = entries . length ;
rank: 724
score: 99.1235018643466
patch: Iterator iter = res . entries Iterator ( ) ;
rank: 724
score: 99.06429617745536
patch: res . iterator ( ) ;
rank: 725
score: 99.08427290482955
patch: Iterator iter = res . parse ( res ) ;
rank: 725
score: 99.06397501627605
patch: Vector [ ] iter = res . entries ( ) ;
rank: 725
score: 99.03091430664062
patch: Iterator iter = res = v . iterator ( ) ;
rank: 725
score: 98.9645263671875
patch: if ( v . length > 0 ) {
rank: 726
score: 99.08409627278645
patch: Iterator iter = res . min . entries ( ) ;
rank: 726
score: 99.06388346354167
patch: Iterator iter = res . Entry . iterator ( ) ;
rank: 726
score: 99.03872680664062
patch: int [ ] entries = res . entries ( ) ;
rank: 726
score: 99.03517659505208
patch: Iterator iter = v . ) . iterator ( ) ;
rank: 726
score: 99.0023905436198
patch: double [ ] v = res . size ( ) ;
rank: 727
score: 99.08397420247395
patch: Iterator iter = sum . entries . iterator ( ) ;
rank: 727
score: 99.03741455078125
patch: Iterator iter = iter . iterator ( ) ; for (
rank: 727
score: 99.03516642252605
patch: res ; Iterator iter = res . iterator ( ) ;
rank: 727
score: 98.963623046875
patch: Iterator iter = res . $NUMBER$ iterator ( ) ;
rank: 728
score: 99.08250935872395
patch: Iterator iter = res . close . iterator ( ) ;
rank: 728
score: 99.062744140625
patch: Iterator < ? ] : res . iterator ( ) ;
rank: 728
score: 99.02847290039062
patch: if ( res == null ) return null ;
rank: 728
score: 98.99855550130208
patch: Iterator entries = res . has CaMeL Next ( ) ;
rank: 729
score: 99.06236683238636
patch: Iterator iter = res . entries ( ) ; }
rank: 729
score: 99.0365702311198
patch: Iterator iter = res != null . size ( ) ;
rank: 729
score: 99.0337801846591
patch: res . res . entries = res . entries ;
rank: 729
score: 98.96222478693181
patch: Iterator iter = v . . iterator ( ) ;
rank: 730
score: 99.03204900568181
patch: Iterator iter = v . iterator ( ) ; else
rank: 730
score: 99.02662150065105
patch: do { Iterator iter = res . iterator ( ) ;
rank: 730
score: 98.96193625710227
patch: Iterator . has CaMeL Next ( ) ; ) {
rank: 731
score: 99.11874624399039
patch: final int res . size = res . size ( ) ;
rank: 731
score: 99.07986450195312
patch: Iterator iter = res . entries . matches ( ) ;
rank: 731
score: 99.06163533528645
patch: res . entries = res . entries iterator ( ) ;
rank: 731
score: 99.03633626302083
patch: Iterator iter = res [ iter . length $NUMBER$ ] ;
rank: 731
score: 99.03145345052083
patch: Collection entries = res . entries . iterator ( ) ;
rank: 731
score: 98.99990012428977
patch: Iterator iter = res ) . size ( ) ;
rank: 731
score: 98.96121826171876
patch: int res = res . entries . length ;
rank: 732
score: 99.11841837565105
patch: Iterator < int * : res . iterator ( ) ;
rank: 732
score: 99.07850138346355
patch: try ; Iterator iter = res . iterator ( ) ;
rank: 732
score: 99.03627522786458
patch: Iterator iter = v . size . iterator ( ) ;
rank: 732
score: 99.03127034505208
patch: Iterator iter = v = res . iterator ( ) ;
rank: 732
score: 98.9583251953125
patch: List iter = entries . iterator ( ) ;
rank: 733
score: 99.0777587890625
patch: Iterator iter = res . get != null ;
rank: 733
score: 99.0609463778409
patch: Iterator < String : res . iterator ( ) ;
rank: 733
score: 99.03560014204545
patch: Iterator iter = res . entries [ 0 ] ;
rank: 733
score: 99.02990112304687
patch: Collection res = res . clone ( ) ;
rank: 733
score: 98.99476207386364
patch: Iterator iter = res . size ( 1 ) ;
rank: 733
score: 98.95457874644886
patch: iter = v . entries . iterator ( ) ;
rank: 734
score: 99.11655836838942
patch: final Iterator [ ] res = res . entries ( ) ;
rank: 734
score: 99.0607401529948
patch: Iterator iter = res . map . entries ( ) ;
rank: 734
score: 99.03455607096355
patch: int ( iter . has CaMeL Next ( ) ) {
rank: 734
score: 99.02914428710938
patch: if ( v . length > 0 ) return res ;
rank: 734
score: 98.99466959635417
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = true ;
rank: 734
score: 98.95366876775569
patch: iter = this . entries . iterator ( ) ;
rank: 735
score: 99.05912272135417
patch: Collection [ ] entries = res . entries ( ) ;
rank: 735
score: 99.0335184733073
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = false ;
rank: 735
score: 99.02908325195312
patch: res . res = res . entries [ 0 ] ;
rank: 735
score: 98.99219767252605
patch: Iterator iter = res != null : res . length ;
rank: 736
score: 99.0731201171875
patch: / ; Iterator iter = res . entries ( ) ;
rank: 736
score: 99.05867513020833
patch: int [ ] iter = res . entries ( ) ;
rank: 736
score: 99.03050740559895
patch: int iter = res . length : v . length ;
rank: 736
score: 99.02907307942708
patch: int ; Iterator iter = res . iterator ( ) ;
rank: 736
score: 99.01933149857955
patch: while ( res . size ( ) > 0 )
rank: 736
score: 98.9918212890625
patch: Iterator iter . has CaMeL Next ( ) ; - 1
rank: 736
score: 98.95204467773438
patch: if ( res . length > 0 ) {
rank: 737
score: 99.07300821940105
patch: Iterator iter = $STRING$ . entries . iter ( ) ;
rank: 737
score: 99.02925618489583
patch: Iterator iter = data . entries . entries ( ) ;
rank: 737
score: 99.01910400390625
patch: Iterator iter = res . list . Iterator ( ) ;
rank: 737
score: 98.99118041992188
patch: int [ ] res = res . size ( ) ;
rank: 737
score: 98.95045776367188
patch: Iterator iter = res . capacity ( ) ;
rank: 738
score: 99.07247314453124
patch: Enumeration iter = res . iterator ( ) ;
rank: 738
score: 99.05760701497395
patch: int size = res . entries . iterator ( ) ;
rank: 738
score: 99.0282491048177
patch: Iterator iter = directory . entries . iterator ( ) ;
rank: 738
score: 98.95040283203124
patch: Iterator iter = key . iterator ( ) ;
rank: 739
score: 99.0554911295573
patch: short iter = res . entries . iterator ( ) ;
rank: 739
score: 99.02546830610795
patch: Iterator iter = v . entries ( ) ; ;
rank: 739
score: 98.98411976207386
patch: Iterator iter ( res . size ( ) ) ;
rank: 739
score: 98.95035400390626
patch: Iterator iter = res . load ( ) ;
rank: 740
score: 99.07945667613636
patch: Iterator iter = . entries . iterator ( ) ;
rank: 740
score: 99.02738444010417
patch: Iterator iter = new Object [ v . length ] ;
rank: 740
score: 99.0154520670573
patch: Iterator iter = get . entries . iterator ( ) ;
rank: 741
score: 99.05333251953125
patch: Collection entries = res . entries ( ) ;
rank: 741
score: 99.02711070667614
patch: Iterator iter = res [ v . length ] ;
rank: 741
score: 99.02335611979167
patch: Collection res = res . get . entries ( ) ;
rank: 742
score: 99.10894775390625
patch: Iterator iter = 0 + res . size ( ) ;
rank: 742
score: 99.0529276529948
patch: Iterator < * Integer : res . iterator ( ) ;
rank: 742
score: 99.02686656605114
patch: Iterator ( res . entries . iterator ( ) )
rank: 742
score: 98.97758345170455
patch: Iterator iter = v [ length - 1 ] ;
rank: 742
score: 98.94950727982955
patch: ; Iterator iter = res . iterator ( ) ;
rank: 743
score: 99.0528564453125
patch: int iterator = res . entries ( ) . length ;
rank: 743
score: 99.02653364701705
patch: if ( iter . has CaMeL Next ( ) )
rank: 743
score: 99.0220947265625
patch: Object [ ] res = res . clone ( ) ;
rank: 743
score: 98.977001953125
patch: Iterator iter |= res . size ( ) ;
rank: 743
score: 98.9491299715909
patch: Iterator iter = res . contains ( false ) ;
rank: 744
score: 98.9828768643466
patch: for ( ) { iter . advance ( ) ;
rank: 744
score: 98.94846413352273
patch: else res . set CaMeL Entry ( $STRING$ ) ;
rank: 745
score: 99.10050825639205
patch: final int entries = res . size ( ) ;
rank: 745
score: 99.06479899088542
patch: Iterator iter = data . entries . iter ( ) ;
rank: 745
score: 98.98162286931819
patch: Iterator iter = res . entries . iterator ++ ;
rank: 745
score: 98.94822998046875
patch: Iterator iter = res . split ( ) ;
rank: 746
score: 99.0640536221591
patch: Iterator iter = res . iterator ( ) ; final
rank: 746
score: 98.97055053710938
patch: Iterator iter = v . clone ( ) ;
rank: 746
score: 98.94782049005681
patch: Iterator iter = res . entries . iterator 1 ;
rank: 747
score: 99.0622891512784
patch: Iterator iter = res . iter ( ) ; ;
rank: 747
score: 99.02320556640625
patch: List iter = res . iterator ( ) ;
rank: 747
score: 99.01714533025569
patch: Iterator iter = res . entries ( ) ; )
rank: 748
score: 99.075439453125
patch: for ( ) { res . set CaMeL Entry ( ) ;
rank: 748
score: 99.06200154622395
patch: Iterator iter = res . get $NUMBER$ iterator ( ) ;
rank: 748
score: 99.04725341796875
patch: Iterator iter = out . iterator ( ) ;
rank: 748
score: 99.01613071986607
patch: res . res = res ;
rank: 748
score: 98.9435302734375
patch: int v = res . entries . length ;
rank: 749
score: 99.061767578125
patch: Iterator iter = res . entries . reverse ( ) ;
rank: 749
score: 99.02215576171875
patch: Iterator iter = new int [ v . length ] ;
rank: 749
score: 99.01598103841145
patch: Iterator iter = v . iterator . next ( ) ;
rank: 749
score: 98.94283447265624
patch: int iter = entries . iterator ( ) ;
rank: 750
score: 99.0460917154948
patch: Iterator iter = res . entries ( ) ; else {
rank: 750
score: 99.015869140625
patch: Iterator iter = res . iterator ( ) ; int ;
rank: 750
score: 99.01123046875
patch: Iterator iter = new Iterator ( res . entries ) ;
rank: 750
score: 98.94233842329545
patch: Iterator iter = res . visit ( this ) ;
rank: 751
score: 99.06034342447917
patch: Iterator iter = res . entries . add ( ) ;
rank: 751
score: 99.02174886067708
patch: Object res = res . get CaMeL Entry ( ) ;
rank: 751
score: 99.01583251953124
patch: Object res = res . clone ( ) ;
rank: 751
score: 99.00933837890625
patch: res . set CaMeL Length ( v . length ) ;
rank: 751
score: 98.94212646484375
patch: Iterator iter = res . add ( ) ;
rank: 752
score: 99.07271321614583
patch: List iterator = res . entries . iterator ( ) ;
rank: 752
score: 99.0216397372159
patch: int Iterator iter = res . iterator ( ) ;
rank: 752
score: 98.9594482421875
patch: Iterator iter = Iterator . size ( ) ;
rank: 752
score: 98.94044189453125
patch: Iterator iter = res . entries . has CaMeL
rank: 753
score: 99.09219360351562
patch: Iterator iter = res . iterator ( ) - $NUMBER$ ;
rank: 753
score: 99.05873616536458
patch: Iterator iter = res . entries ( ) ; ) ;
rank: 753
score: 99.0438565340909
patch: final Iterator entries = res . iterator ( ) ;
rank: 753
score: 99.0204569498698
patch: Iterator iter = $NUMBER$ . entries . iterator ( ) ;
rank: 753
score: 99.01458740234375
patch: Collection res = res . get CaMeL Classes ( ) ;
rank: 753
score: 99.00752397017045
patch: result = res . entries . iterator ( ) ;
rank: 753
score: 98.93921508789063
patch: Iterator res = v . iterator ( ) ;
rank: 754
score: 99.07131723257211
patch: Iterator iter = res . get CaMeL Entry ( iter ) ;
rank: 754
score: 99.04356800426136
patch: iter . iterator ( ) . iterator ( ) ;
rank: 754
score: 99.02000935872395
patch: Iterator iter = res == null . size ( ) ;
rank: 754
score: 99.00724653764205
patch: Iterator iter $NUMBER$ = res . iterator ( ) ;
rank: 754
score: 98.9563321200284
patch: Iterator iter = res . size ( 0 ) ;
rank: 754
score: 98.93900923295455
patch: Iterator iter ++ = res . iterator ( ) ;
rank: 755
score: 98.9384432705966
patch: iterator = res . entries . size ( ) ;
rank: 756
score: 99.05744018554688
patch: Iterator iter = $STRING$ . entries ( ) ;
rank: 756
score: 99.04297892252605
patch: res . entries ( res . entries ( ) ) ;
rank: 756
score: 98.9691650390625
patch: Iterator iter = res . entries . FALSE ;
rank: 756
score: 98.9539462002841
patch: Iterator iter $NUMBER$ = res . size ( ) ;
rank: 756
score: 98.93834339488636
patch: Iterator iter = res . contains ( 1 ) ;
rank: 757
score: 99.09110717773437
patch: if ( res != null ) throw null ;
rank: 757
score: 99.07053786057692
patch: Iterator < iter : res . entries . iterator ( ) ;
rank: 757
score: 99.05741373697917
patch: Iterator iter = res . iterator ( ) ; else ;
rank: 757
score: 99.0425048828125
patch: Iterator iter = value . iterator ( ) ;
rank: 757
score: 99.00883653428819
patch: Iterator iter = res . entries ( ;
rank: 757
score: 99.00619506835938
patch: Iterator iter = size ( ) ;
rank: 757
score: 98.93665161132813
patch: Iterator iter = res . intern ( ) ;
rank: 758
score: 99.05558268229167
patch: Iterator iter ; iter = res . iterator ( ) ;
rank: 758
score: 99.04127086292614
patch: this . res . entries . iterator ( ) ;
rank: 758
score: 98.96771795099431
patch: Iterator iter = res . is CaMeL Array ( )
rank: 758
score: 98.95238148082386
patch: for ( if ( res . length > 0 )
rank: 758
score: 98.936474609375
patch: iter . advance ( v . length ) ;
rank: 759
score: 99.0404052734375
patch: this . res . iterator ( ) ;
rank: 759
score: 99.00810102982955
patch: entries = res . entries . size ( ) ;
rank: 759
score: 99.00503540039062
patch: f = res . entries . get ( 0 ) ;
rank: 760
score: 99.0845947265625
patch: final Iterator iter = res . iterator ( ) ; else
rank: 760
score: 99.06777719350961
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector != null ;
rank: 760
score: 99.05385335286458
patch: Iterator iter = $STRING$ . entries . entries ( ) ;
rank: 760
score: 99.03883870442708
patch: Iterator iter = res . entries . join ( ) ;
rank: 760
score: 99.0015869140625
patch: Iterator iter = list . iterator ( ) ; ;
rank: 760
score: 98.93477783203124
patch: int entries = res . entries . length ;
rank: 761
score: 99.03839666193181
patch: Iterator Iterator iter = res . entries ( ) ;
rank: 761
score: 99.00417258522727
patch: res . entries = res . res . entries ;
rank: 761
score: 99.00105794270833
patch: Point size = res . entries . size ( ) ;
rank: 761
score: 98.96323464133523
patch: Iterator iter = res . read ( this ) ;
rank: 762
score: 99.08285522460938
patch: Iterator iter = res . size ( ) - 1 ;
rank: 762
score: 99.00335693359375
patch: int iter = iter . iterator ( ) ;
rank: 762
score: 99.0027188387784
patch: Iterator iter 1 = res . iterator ( ) ;
rank: 762
score: 98.94345925071023
patch: Iterator iter = ! res . size ( ) ;
rank: 762
score: 98.93036499023438
patch: int iter = res . length ( ) ;
rank: 763
score: 99.08143199573864
patch: final Iterator iterator = res . iterator ( ) ;
rank: 763
score: 99.06121826171875
patch: Iterator iter ? res . entries . iterator ( ) ;
rank: 763
score: 99.0524393717448
patch: Iterator iter = res . iterator ( ) ; ; /
rank: 763
score: 99.0013916015625
patch: if ( v == null ) return res ;
rank: 763
score: 98.9977783203125
patch: Iterator iter = size . entries ( ) ;
rank: 763
score: 98.92986505681819
patch: final Iterator iter = res . read ( ) ;
rank: 764
score: 99.0606689453125
patch: Iterator iter -= res . entries . iterator ( ) ;
rank: 764
score: 99.00115411931819
patch: res . size = res . size ( ) ;
rank: 764
score: 98.9975077311198
patch: Iterator iter = data . map . iterator ( ) ;
rank: 764
score: 98.99644165039062
patch: int length = res . entries . length ;
rank: 764
score: 98.96034545898438
patch: check CaMeL Vector CaMeL Dimensions ( res ) ;
rank: 765
score: 99.05995686848958
patch: Iterator iter = res [ ) . iterator ( ) ;
rank: 765
score: 99.04954020182292
patch: Iterator iter = res . key . entries ( ) ;
rank: 765
score: 99.0330078125
patch: List entries = res . entries ( ) ;
rank: 765
score: 98.99432983398438
patch: Iterator iter = v . entries . length ;
rank: 765
score: 98.95995483398437
patch: Iterator iter = res . contains ( this )
rank: 765
score: 98.94024103338069
patch: Iterator iter 1 = res . size ( ) ;
rank: 765
score: 98.92902221679688
patch: Iterator iter = res . get CaMeL Real CaMeL
rank: 766
score: 98.99884033203125
patch: if ( v != null ) return res ;
rank: 766
score: 98.99407404119319
patch: Iterator iter = res . entries size ( ) ;
rank: 766
score: 98.92822265625
patch: Iterator iter = res . contains ( $STRING$ ) ;
rank: 767
score: 99.05970177283653
patch: Iterator >= iter = res . entries . iterator ( ) ;
rank: 767
score: 99.0484286221591
patch: Iterator iter = res . contains ( res ) ;
rank: 767
score: 99.03165283203126
patch: Iterator iter = super . entries ( ) ;
rank: 767
score: 98.99279174804687
patch: res . set CaMeL Entry ( this ) ;
rank: 767
score: 98.95170454545455
patch: Iterator iter = res . length . ( ) ;
rank: 767
score: 98.93826633029514
patch: Iterator iter = res [ size ] ;
rank: 767
score: 98.92697975852273
patch: Iterator iter ( entries . iterator ( ) ) ;
rank: 768
score: 99.04796253551136
patch: Iterator iter entries = res . iterator ( ) ;
rank: 768
score: 98.99270629882812
patch: Iterator iter = iterator . entries ( ) ;
rank: 768
score: 98.94779829545455
patch: Open CaMeL Map CaMeL Real CaMeL Vector res = new
rank: 768
score: 98.92249755859375
patch: int iter = res . length . length ;
rank: 769
score: 99.05931678185097
patch: Iterator while ( res . has CaMeL Next ( ) ) {
rank: 769
score: 99.04592063210227
patch: Iterator iter = res . load ( res ) ;
rank: 769
score: 99.0303622159091
patch: Iterator iter = res . entries ( ) . ;
rank: 769
score: 98.99188787286931
patch: Iterator iter = v . entries ( res ) ;
rank: 769
score: 98.9915771484375
patch: Iterator iter = in . entries ( ) ;
rank: 769
score: 98.9354580965909
patch: Iterator iter = res . read ( 0 ) ;
rank: 769
score: 98.92173461914062
patch: Iterator iter = res . put ( ) ;
rank: 770
score: 99.05898813100961
patch: Iterator iter = res . entries . entries [ 0 ] ;
rank: 770
score: 99.04591878255208
patch: Iterator iter . iter = res . entries ( ) ;
rank: 770
score: 99.0288973721591
patch: Iterator iter = res . entries = ( ) ;
rank: 770
score: 98.98981323242188
patch: Collection iter = res . iterator ( ) ;
rank: 770
score: 98.9892349243164
patch: int length = res . length ;
rank: 770
score: 98.94702758789063
patch: Iterator iter = v . length ( ) ;
rank: 770
score: 98.920263671875
patch: Iterator res = v . size ( ) ;
rank: 771
score: 98.98710493607955
patch: Iterator < res . entries . size ( ) ;
rank: 771
score: 98.943798828125
patch: int value = v . length ( ) ;
rank: 771
score: 98.93340509588069
patch: int Iterator iter = res . size ( ) ;
rank: 772
score: 98.98699396306819
patch: Object res = res . entries [ 0 ] ;
rank: 772
score: 98.93245849609374
patch: Vector iter = res . size ( ) ;
rank: 772
score: 98.91582641601562
patch: if ( res . length > 1 ) {
rank: 773
score: 99.0455322265625
patch: iterator . Iterator iter = res . iterator ( ) ;
rank: 773
score: 99.0256103515625
patch: Iterator iter : res . entries ( ) ;
rank: 773
score: 98.98658447265625
patch: if ( res != null ) res . ;
rank: 773
score: 98.978515625
patch: Iterator iter 0 = res . iterator ( ) ;
rank: 773
score: 98.93216552734376
patch: Iterator iter = res + v . length ;
rank: 773
score: 98.91549072265624
patch: Iterator iter = 1 . iterator ( ) ;
rank: 774
score: 99.07407633463542
patch: Iterator iter = $NUMBER$ : res . iterator ( ) ;
rank: 774
score: 99.0448885830966
patch: Iterator iter = res . get ( false ) ;
rank: 774
score: 98.98548473011364
patch: Iterator iter = res ) . entries ( ) ;
rank: 774
score: 98.980078125
patch: int iter = v . entries . length ;
rank: 774
score: 98.97599653764205
patch: switch ( res . length ) { case 1 :
rank: 774
score: 98.93873291015625
patch: Iterator iter = res . size ( ) )
rank: 774
score: 98.91539306640625
patch: Iterator iter = res . min ( ) ;
rank: 775
score: 99.07399495442708
patch: if ( ! res . is CaMeL Empty ( ) )
rank: 775
score: 99.04433186848958
patch: Iterator iterator = this . res . iterator ( ) ;
rank: 775
score: 99.025146484375
patch: Iterator iter = res . entries ( ) ; * /
rank: 775
score: 98.98398659446023
patch: Iterator < res . entries . iterator ( ) ;
rank: 775
score: 98.9319091796875
patch: Iterator iter = this . size ( ) ;
rank: 775
score: 98.915185546875
patch: int res = res . size ( ) ;
rank: 776
score: 99.05602088341347
patch: for ( while ( iter . has CaMeL Next ( ) )
rank: 776
score: 99.04403686523438
patch: / / Iterator iter = res . iterator ( ) ;
rank: 776
score: 98.98313210227273
patch: iter = res . list . entries ( ) ;
rank: 776
score: 98.97786254882813
patch: int iter = v . iterator ( ) ;
rank: 777
score: 99.05540114182692
patch: Iterator < iter > iter = res . iterator ( ) ;
rank: 777
score: 99.04252485795455
patch: res . iterator ( ) . iterator ( ) .
rank: 777
score: 98.97703857421875
patch: Iterator iter = $NUMBER$ . iterator ( ) ;
rank: 777
score: 98.92811168323864
patch: Iterator iter = ! entries . iterator ( ) ;
rank: 778
score: 99.07110595703125
patch: Iterator iter = res . iterator . size ( ) ;
rank: 778
score: 99.05517578125
patch: Iterator iter > iter = res . iterator ( ) ;
rank: 778
score: 99.04244384765624
patch: iter iter = res . iterator ( ) ;
rank: 778
score: 98.9827547940341
patch: Iterator iter = res . iterator ( iterator ) ;
rank: 778
score: 98.96276092529297
patch: res . add ( res ) ;
rank: 778
score: 98.91297149658203
patch: int iter = v . length ;
rank: 779
score: 99.0691630045573
patch: int res . size = res . size ( ) ;
rank: 779
score: 99.04228515625
patch: Iterator iter = $STRING$ . iter ( ) ;
rank: 779
score: 99.0217618075284
patch: res . value = res . entries ( ) ;
rank: 779
score: 98.9796475497159
patch: entries = res . entries . clone ( ) ;
rank: 779
score: 98.93065296519886
patch: Iterator iter = res . put ( this ) ;
rank: 779
score: 98.92381591796875
patch: Iterator iter >= res . iterator ( ) ;
rank: 779
score: 98.91238742404514
patch: iter = entries . iterator ( ) ;
rank: 780
score: 99.0421651204427
patch: Iterator iter = res . iterator ( ) ; iterator }
rank: 780
score: 98.95729758522727
patch: n = res . entries . size ( ) ;
rank: 780
score: 98.92304992675781
patch: Iterator iter = res . entries )
rank: 780
score: 98.90626220703125
patch: Iterator iter = res . interrupt ( ) ;
rank: 781
score: 99.06785074869792
patch: final final Iterator iter = res . iterator ( ) ;
rank: 781
score: 99.0409268465909
patch: Iterator iter entries = res . entries ( ) ;
rank: 781
score: 99.02031915838069
patch: iter = res . map . iterator ( ) ;
rank: 781
score: 98.97549777560764
patch: Iterator iter = res . iterator ( ;
rank: 781
score: 98.95387961647727
patch: Iterator iter = v 1 . iterator ( ) ;
rank: 782
score: 99.06693522135417
patch: Iterator iter = $NUMBER$ + res . iterator ( ) ;
rank: 782
score: 99.0394287109375
patch: Iterator iter . entries = res . iterator ( ) ;
rank: 782
score: 99.019287109375
patch: int iter = res . entries . entries ( ) ;
rank: 782
score: 98.975048828125
patch: Iterator iterator = v . entries ( ) ;
rank: 782
score: 98.951416015625
patch: res . iterator ( ) . next ( ) ;
rank: 782
score: 98.90537109375
patch: List res = entries . iterator ( ) ;
rank: 783
score: 99.0650634765625
patch: final Iterator iter = list . iterator ( ) ;
rank: 783
score: 99.05059344951923
patch: Iterator < while . has CaMeL Next ( ) ; ) {
rank: 783
score: 98.94994007457386
patch: Iterator iterator = res . iterator ( ) ; ;
rank: 783
score: 98.92197487571023
patch: iter = res . value . iterator ( ) ;
rank: 784
score: 99.0501708984375
patch: Iterator < iter . has CaMeL Next ( ) ; ) {
rank: 784
score: 98.9495849609375
patch: Enumeration iter = v . entries ( ) ;
rank: 784
score: 98.92809448242187
patch: int iterator = res . size ( ) ;
rank: 784
score: 98.92169744318181
patch: Iterator iter = res [ length - 1 ] ;
rank: 784
score: 98.90450439453124
patch: int iter = res . value . length ;
rank: 785
score: 99.0611063639323
patch: Iterator iter = 0 . res . iterator ( ) ;
rank: 785
score: 99.03885904947917
patch: Iter iter = res . entries . iterator ( ) ;
rank: 785
score: 98.96891645951705
patch: Iterator iter = res . iterator ( ( ) ;
rank: 785
score: 98.96698608398438
patch: Iterator iter = name . iterator ( ) ;
rank: 785
score: 98.927978515625
patch: Iterator iter = res . stop ( ) ;
rank: 785
score: 98.9172607421875
patch: Iterator iter = ) . iterator ( ) ;
rank: 785
score: 98.90390625
patch: Iterator iter = res . entries . false ;
rank: 786
score: 99.06070556640626
patch: int length = res . size ( ) ;
rank: 786
score: 99.038818359375
patch: Iterator iter = res . entries . end ( ) ;
rank: 786
score: 98.9678955078125
patch: Iterator iter = super . iterator ( ) ;
rank: 786
score: 98.96690063476562
patch: res . set CaMeL Entry ( v ) ;
rank: 786
score: 98.94657759232955
patch: switch ( res . get CaMeL Type ( ) )
rank: 786
score: 98.92669122869319
patch: Iterator iter = res . iterator iterator ( ) ;
rank: 787
score: 99.05948893229167
patch: res . iterator ( ) . add ( res ) ;
rank: 787
score: 98.96772904829545
patch: throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;
rank: 787
score: 98.94640003551136
patch: data = res . entries . iterator ( ) ;
rank: 787
score: 98.9093905362216
patch: Iterator iter = ! v . iterator ( ) ;
rank: 788
score: 99.01380266462054
patch: res . entries ( ) ;
rank: 788
score: 98.9668701171875
patch: Set iter = res . entries ( ) ;
rank: 788
score: 98.9650545987216
patch: Iterator iter = res . length [ 0 ] ;
rank: 789
score: 99.01353149414062
patch: Iterator size = res . iterator ( ) ;
rank: 789
score: 98.96483265269886
patch: Iterator < ) : res . iterator ( ) ;
rank: 789
score: 98.92473754882812
patch: List res = res . size ( ) ;
rank: 789
score: 98.9069580078125
patch: Iterator iter = iter . next ( ) ;
rank: 789
score: 98.897412109375
patch: if ( v . length > 1 ) {
rank: 790
score: 99.05696244673295
patch: final int iter = res . entries . length ;
rank: 790
score: 99.03192693536931
patch: res . iterator = res . iterator ( ) ;
rank: 790
score: 99.0124178799716
patch: Iterator < String : res . entries ( ) ;
rank: 790
score: 98.96233575994319
patch: if ( res != null ) { for ( )
rank: 790
score: 98.91864624023438
patch: Iterator iter = res . entries . 0 ;
rank: 791
score: 99.01212935014205
patch: final int entries = res . entries ( ) ;
rank: 791
score: 98.95878462357955
patch: Iterator iter = res . entries [ 1 ] ;
rank: 791
score: 98.9385653409091
patch: if ( res . size ( ) > 1 )
rank: 792
score: 99.0537109375
patch: if ( res != null ) return res . res ;
rank: 792
score: 99.03061745383523
patch: Iterator iter = res . compare ( res ) ;
rank: 792
score: 99.0118408203125
patch: Iterator -- iter = res . iterator ( ) ;
rank: 792
score: 98.9609042080966
patch: res . entries = res . size ( ) ;
rank: 792
score: 98.95803000710227
patch: Iterator iter = res size . iterator ( ) ;
rank: 792
score: 98.93838500976562
patch: int size = res . length ;
rank: 792
score: 98.91633744673295
patch: Iterator iter advance = res . size ( ) ;
rank: 792
score: 98.89348008897569
patch: Iterator iter = entries . ( ) ;
rank: 793
score: 99.05271402994792
patch: Iterator iter = res . iterator ( ) - 0 ;
rank: 793
score: 99.04115804036458
patch: Set entries = res . entries . iterator ( ) ;
rank: 793
score: 98.95597700639205
patch: Iterator iter = res . entries . iterator ( ;
rank: 793
score: 98.93779296875
patch: long size = res . size ( ) ;
rank: 793
score: 98.91386274857955
patch: Iterator iter = res . compare ( this ) ;
rank: 793
score: 98.89105224609375
patch: Iterator entries = entries . iterator ( ) ;
rank: 794
score: 99.05265299479167
patch: res . remove ( res . size ( ) ) ;
rank: 794
score: 98.9552001953125
patch: new Iterator iter = res . iterator ( ) ;
rank: 794
score: 98.93605346679688
patch: Iterator iter = new Iterator ( res ) ;
rank: 794
score: 98.90960138494319
patch: Iterator iter = res . iter iterator ( ) ;
rank: 794
score: 98.90040893554688
patch: Iterator iter = res . contains ( 0 )
rank: 794
score: 98.89065551757812
patch: Iterator iter = res . entries . end ;
rank: 795
score: 99.0223721590909
patch: iterator = res . entries . entries ( ) ;
rank: 795
score: 99.0089111328125
patch: final Iterator iterator = res . entries ( ) ;
rank: 795
score: 98.95318048650569
patch: res . res = res . clone ( ) ;
rank: 795
score: 98.95294744318181
patch: Iterator iter > = res . iterator ( ) ;
rank: 795
score: 98.90036843039773
patch: Iterator iter = res . read ( 1 ) ;
rank: 795
score: 98.8897705078125
patch: Iterator iter = res . wait ( ) ;
rank: 796
score: 99.008056640625
patch: Iterator ] res = res . entries ( ) ;
rank: 796
score: 98.9082919034091
patch: Iterator iter = res . entries . iterator ) ;
rank: 796
score: 98.88886176215277
patch: Iterator iter = res . ( ) ;
rank: 797
score: 99.03624471028645
patch: for ( if ( v . length > 0 ) {
rank: 797
score: 99.0070556640625
patch: Iterator end = res . iterator ( ) ;
rank: 797
score: 98.94999556107955
patch: for ( res : res . entries ( ) )
rank: 797
score: 98.88668212890624
patch: Iterator iter = res . length ; for (
rank: 797
score: 98.88658447265625
patch: Iterator iter = entries . entries . length ;
rank: 798
score: 99.03456115722656
patch: Iterator iter . advance ( ) ;
rank: 798
score: 99.0190096768466
patch: Iterator iter iter = res . entries ( ) ;
rank: 798
score: 99.00584827769886
patch: Iterator < String > iter . iterator ( ) ;
rank: 798
score: 98.94985961914062
patch: Set entries = res . entries ( ) ;
rank: 798
score: 98.93108575994319
patch: iterator = res . list . iterator ( ) ;
rank: 798
score: 98.90439675071023
patch: entries = new Real CaMeL Vector ( this ) ;
rank: 798
score: 98.8861572265625
patch: Iterator iter = res . entries ( ) .
rank: 799
score: 99.04749644886364
patch: final Object res = res . get ( ) ;
rank: 799
score: 99.01744588216145
patch: Iterator iter = 0 ;
rank: 799
score: 98.94930419921874
patch: Iterator iter = set . iterator ( ) ;
rank: 799
score: 98.8853759765625
patch: Iterator iter = v . Iterator ( ) ;
rank: 800
score: 99.0474853515625
patch: Iterator iter = in . iterator ( ) ;
rank: 800
score: 99.0151034268466
patch: Iterator iter = res . split ( res ) ;
rank: 800
score: 98.9488192471591
patch: Iterator iter = res . entries . entries ( )
rank: 800
score: 98.8852294921875
patch: Iterator iter = 1 . size ( ) ;
rank: 801
score: 99.047119140625
patch: final Object res = res . entries ( ) ;
rank: 801
score: 99.03267415364583
patch: Iterator entries = v . entries . iterator ( ) ;
rank: 801
score: 99.01146351207386
patch: Iterator iter = entries . get ( res ) ;
rank: 801
score: 99.0020751953125
patch: Iterator iter = res . delete ( ) ;
rank: 801
score: 98.88472290039063
patch: Iterator iter = this . entries . length ;
rank: 801
score: 98.88284912109376
patch: Iterator iter = list . size ( ) ;
rank: 802
score: 99.01118607954545
patch: Iterator iter = res . entries ( ) ; .
rank: 802
score: 98.94765014648438
patch: int key = iter . advance ( ) ;
rank: 802
score: 98.8997469815341
patch: Iterator iter = res . format ( this ) ;
rank: 803
score: 99.00794566761364
patch: Iterator iter = res . iterator ( ) ; entries
rank: 803
score: 98.99971147017045
patch: int < ] : res . entries ( ) ;
rank: 803
score: 98.94619140625
patch: Collection res = res . iterator ( ) ;
rank: 803
score: 98.92683549360795
patch: data = res . get CaMeL Data ( ) ;
rank: 803
score: 98.8829833984375
patch: Iterator iter = entries . read ( ) ;
rank: 803
score: 98.8797119140625
patch: Iterator iter = res . entries . iterator ;
rank: 804
score: 99.03176047585227
patch: Iterator iter = res . entries ( length ) ;
rank: 804
score: 98.94663307883523
patch: Iterator iter = new Object . iterator ( ) ;
rank: 804
score: 98.94586181640625
patch: List res = res . list ( ) ;
rank: 804
score: 98.92648315429688
patch: res . set CaMeL Index ( 0 ) ;
rank: 805
score: 99.04084916548295
patch: Iterator < int ++ res . size ( ) ;
rank: 805
score: 99.0016845703125
patch: Iterator iter = sum . iterator ( ) ;
rank: 805
score: 98.99895685369319
patch: Iterator >> entries = res . entries ( ) ;
rank: 805
score: 98.94540405273438
patch: Object res = res . get ( ) ;
rank: 805
score: 98.89731667258523
patch: Iterator iter = res . size ( ) ] ;
rank: 805
score: 98.881103515625
patch: Iterator res = entries . size ( ) ;
rank: 805
score: 98.87813110351563
patch: Iterator iter = res . length / 1 ;
rank: 806
score: 99.03111775716145
patch: Set list = res . entries . iterator ( ) ;
rank: 806
score: 98.94331868489583
patch: Iterator iter = res . entries ( )
rank: 806
score: 98.8968838778409
patch: Iterator iter = res . sleep ( 0 ) ;
rank: 806
score: 98.87649197048611
patch: Iterator iter = res [ length ] ;
rank: 807
score: 98.99730224609375
patch: Iterator iter = res . get > null ;
rank: 807
score: 98.99663696289062
patch: Object iter = res . entries ( ) ;
rank: 807
score: 98.94210379464286
patch: if ( res != null )
rank: 807
score: 98.92235218394886
patch: Iterator iter = res . clone ( ) ; ;
rank: 807
score: 98.88798384232955
patch: Iterator iter = res . yield ( this ) ;
rank: 807
score: 98.87903510199652
patch: Iterator . has CaMeL Next ( ) ;
rank: 808
score: 99.0287373860677
patch: Iterator < Open CaMeL Map CaMeL Real CaMeL Vector > }
rank: 808
score: 98.99599387428977
patch: Iterator < $STRING$ : res . iterator ( ) ;
rank: 808
score: 98.99556107954545
patch: Iterator iter = res . get ( null ) ;
rank: 808
score: 98.94371448863636
patch: while ( res . has CaMeL Next ( ) )
rank: 808
score: 98.87852172851562
patch: Iterator iter = res . entries . true ;
rank: 808
score: 98.87400512695312
patch: Set iter = res . size ( ) ;
rank: 809
score: 99.03631591796875
patch: Iterator iter = 0 . iter ( ) ;
rank: 809
score: 98.99520263671874
patch: Integer iter = res . entries ( ) ;
rank: 809
score: 98.94248046875
patch: int iter = this . res . length ;
rank: 809
score: 98.94113991477273
patch: Iterator iter = res . iterator ( entries ) ;
rank: 809
score: 98.92182006835938
patch: List list = res . entries ( ) ;
rank: 809
score: 98.88136121961806
patch: Iterator iter = res . contains ( )
rank: 810
score: 98.99469549005681
patch: Iterator iter = res . iterator ( true ) ;
rank: 810
score: 98.99359130859375
patch: Iterator iter = res . entries != null ;
rank: 810
score: 98.94102894176136
patch: this . res = res . entries ( ) ;
rank: 810
score: 98.92062377929688
patch: Iterator iterator = list . iterator ( ) ;
rank: 810
score: 98.87431640625
patch: Iterator iterator = entries . iterator ( ) ;
rank: 810
score: 98.87149658203126
patch: Iterator iter >= res . size ( ) ;
rank: 811
score: 98.99469549005681
patch: final int iterator = res . size ( ) ;
rank: 811
score: 98.99244273792614
patch: iter Iterator iter = res . iterator ( ) ;
rank: 811
score: 98.877490234375
patch: int key = v . length ( ) ;
rank: 811
score: 98.87132568359375
patch: Iterator iter += res . iterator ( ) ;
rank: 812
score: 99.02352905273438
patch: if ( res . size ( ) == 0 ) {
rank: 812
score: 98.99408569335938
patch: Iterator iter = copy . iterator ( ) ;
rank: 812
score: 98.93991921164773
patch: Iterator iter = res . entries . size ( )
rank: 812
score: 98.91933371803977
patch: private Iterator iter = res . iterator ( ) ;
rank: 812
score: 98.86983642578124
patch: Iterator iter = res [ - 1 ] ;
rank: 813
score: 99.02286783854167
patch: Vector res = new Real CaMeL Vector ( this ) ;
rank: 813
score: 98.93818803267045
patch: if ( res . size ( ) != 0 )
rank: 813
score: 98.87567749023438
patch: int value = res . size ( ) ;
rank: 813
score: 98.87171630859375
patch: Iterator iter = res . entries . entries .
rank: 814
score: 99.02121988932292
patch: Iterator while ( res . has CaMeL Next ( ) )
rank: 814
score: 98.9897793856534
patch: protected Iterator iter = res . entries ( ) ;
rank: 814
score: 98.9378329190341
patch: Iterator < ) . has CaMeL Next ( ) ;
rank: 814
score: 98.9177978515625
patch: Iterator iter = min . iterator ( ) ;
rank: 814
score: 98.87151336669922
patch: Iterator iter = res . null ;
rank: 815
score: 98.93700062144886
patch: iter = iter . has CaMeL Next ( ) ;
rank: 815
score: 98.87157592773437
patch: Iterator iter = res . sleep ( ) ;
rank: 815
score: 98.868359375
patch: Iterator iter = this . iterator ( ) ;
rank: 816
score: 99.01772054036458
patch: Iterator iter || res . entries . iterator ( ) ;
rank: 816
score: 98.98668323863636
patch: final int iterator = res . entries ( ) ;
rank: 816
score: 98.98145141601563
patch: Iterator iter = name . entries ( ) ;
rank: 816
score: 98.9354248046875
patch: try Iterator iter = res . iterator ( ) ;
rank: 816
score: 98.8680908203125
patch: Iterator iter = res . signum ( ) ;
rank: 817
score: 98.98516290838069
patch: final Iterator iter = res . copy ( ) ;
rank: 817
score: 98.9353915127841
patch: Iterator iter = res . entries [ $NUMBER$ ] ;
rank: 817
score: 98.91316361860795
patch: switch ( res . length ) { case $NUMBER$ :
rank: 817
score: 98.86572265625
patch: Iterator iter = res [ 1 ] ;
rank: 818
score: 98.98184967041016
patch: int iter . iterator ( ) ;
rank: 818
score: 98.91280517578124
patch: Iterator list = v . iterator ( ) ;
rank: 818
score: 98.86314561631944
patch: Iterator iter = v [ size ] ;
rank: 818
score: 98.85650634765625
patch: Iterator iter = Math . size ( ) ;
rank: 819
score: 98.98136763139205
patch: Iterator iter = res . remove ( null ) ;
rank: 819
score: 98.9786376953125
patch: Iterator iter = res . iterator ( ) ; public
rank: 819
score: 98.93294067382813
patch: Iterator iter = this . res . length ;
rank: 819
score: 98.911669921875
patch: res . entries [ 0 ] = res ;
rank: 819
score: 98.8672103881836
patch: Iterator iter = res . has CaMeL
rank: 819
score: 98.862841796875
patch: Iterator iter = res > iterator ( ) ;
rank: 819
score: 98.85641479492188
patch: int v = res . size ( ) ;
rank: 820
score: 98.98123168945312
patch: Enumeration entries = res . entries ( ) ;
rank: 820
score: 98.97807173295455
patch: iterator = res . iterator . iterator ( ) ;
rank: 820
score: 98.93287353515625
patch: Object iter = res . iterator ( ) ;
rank: 820
score: 98.9268310546875
patch: Set res = res . clone ( ) ;
rank: 821
score: 98.97735040838069
patch: Iterator iter = res . next ( ) ; ;
rank: 821
score: 98.93278364701705
patch: Iterator iter = res . length [ 1 ] ;
rank: 821
score: 98.92406616210937
patch: List iter = res . list ( ) ;
rank: 821
score: 98.9106201171875
patch: Iterator v = res . iterator ( ) ;
rank: 821
score: 98.86395263671875
patch: Iterator iter = res . [ $NUMBER$ ] ;
rank: 821
score: 98.85744018554688
patch: Iterator entries = v . iterator ( ) ;
rank: 821
score: 98.85452270507812
patch: Iterator iter = res ;
rank: 822
score: 99.01801091974431
patch: super . res . entries = res . entries ;
rank: 822
score: 99.00421697443181
patch: Iterator iter = res . entries ( 0 ) ;
rank: 822
score: 98.97507546164773
patch: Iterator iter = res . iterator ( ) ; /
rank: 822
score: 98.9290438565341
patch: Open CaMeL Map CaMeL Real CaMeL Vector res ++ ;
rank: 822
score: 98.92247924804687
patch: Iterator iter = res . iterator . ) ;
rank: 822
score: 98.85723876953125
patch: Object [ ] iter = res . length ;
rank: 823
score: 99.01713423295455
patch: final Object iter = res . iterator ( ) ;
rank: 823
score: 98.97905939275569
patch: iterator . iterator ( ) . iterator ( ) ;
rank: 823
score: 98.97496448863636
patch: Iterator iter = res . entries ( ) ; Iterator
rank: 823
score: 98.92608642578125
patch: int length = this . res . length ;
rank: 823
score: 98.922265625
patch: Set iter = res . iterator ( ) ;
rank: 823
score: 98.86156616210937
patch: int iterator = res . entries . length ;
rank: 823
score: 98.85475667317708
patch: Iterator iter = v [ 0 ] ;
rank: 824
score: 99.016650390625
patch: if ( res != null ) return iter ;
rank: 824
score: 98.97880415482955
patch: Iterator $NUMBER$ ] = res . entries ( ) ;
rank: 824
score: 98.97477583451705
patch: * Iterator iter = res . iterator ( ) ;
rank: 824
score: 98.92597791883681
patch: Iterator iter = res . iterator ( )
rank: 824
score: 98.86112670898437
patch: Iterator iter = res . entries . max ;
rank: 824
score: 98.85404052734376
patch: Iterator entries = v . size ( ) ;
rank: 825
score: 98.97512817382812
patch: Collection list = res . entries ( ) ;
rank: 825
score: 98.85911865234375
patch: Iterator iter = res . length . length ;
rank: 825
score: 98.85343017578126
patch: int key = iter . size ( ) ;
rank: 826
score: 99.01558061079545
patch: final Iterator res = res . iterator ( ) ;
rank: 826
score: 98.97501831054687
patch: int size = res . iterator ( ) ;
rank: 826
score: 98.9732666015625
patch: iter = res . iterator . iterator ( ) ;
rank: 826
score: 98.89561767578125
patch: while ( res . length > 0 ) {
rank: 826
score: 98.8586669921875
patch: List iter = entries . size ( ) ;
rank: 827
score: 98.91980590820313
patch: super . ebe CaMeL Divide ( res ) ;
rank: 827
score: 98.91973876953125
patch: res . res = res ; return res ;
rank: 827
score: 98.85103607177734
patch: Iterator iter += res . length ;
rank: 827
score: 98.84779357910156
patch: int length = v . length ;
rank: 828
score: 98.97437133789063
patch: int iter = res . next ( ) ;
rank: 828
score: 98.91549072265624
patch: Iterator iter = Iterator . iter ( ) ;
rank: 829
score: 99.0127197265625
patch: Iterator iter = map . entries ( ) ;
rank: 829
score: 98.97062544389205
patch: Iterator . iter = res . iterator ( ) ;
rank: 829
score: 98.91483764648437
patch: Iterator iter = chars . iterator ( ) ;
rank: 829
score: 98.91285536024306
patch: res . res = res . entries ;
rank: 829
score: 98.85040283203125
patch: Iterator iter = res . length * 1 ;
rank: 830
score: 99.01258680555556
patch: if ( res != null ) continue ;
rank: 830
score: 98.97310014204545
patch: Iterator < String > iter . advance ( ) ;
rank: 830
score: 98.91358032226563
patch: Iterator iter = new Object [ 0 ] ;
rank: 830
score: 98.91044786241319
patch: if ( res . length > 0 )
rank: 830
score: 98.85504760742188
patch: Iterator iter = v . remove ( ) ;
rank: 830
score: 98.850341796875
patch: Iterator iter += v . size ( ) ;
rank: 831
score: 98.97031656901042
patch: Iterator iter = new Iterator ( ) ;
rank: 831
score: 98.91046142578125
patch: int value = iter . advance ( ) ;
rank: 831
score: 98.88366088867187
patch: assert iter . has CaMeL Next ( ) ;
rank: 831
score: 98.8548583984375
patch: Iterator iter = res . false ;
rank: 832
score: 98.9697021484375
patch: int iter = res . copy ( ) ;
rank: 832
score: 98.96738503196023
patch: Iterator iter = res . get ( this ) ;
rank: 832
score: 98.8823486328125
patch: int size = res . length . length ;
rank: 832
score: 98.85203857421875
patch: iter . advance ( res . length ) ;
rank: 833
score: 98.96961059570313
patch: res . entries = res . entries ) ;
rank: 833
score: 98.96724243164063
patch: Iterator iterator = res . iter ( ) ;
rank: 833
score: 98.90679321289062
patch: Vector res = res . entries ( ) ;
rank: 833
score: 98.85100708007812
patch: Iterator iter = entries . max ( ) ;
rank: 833
score: 98.83857421875
patch: List entries = res . size ( ) ;
rank: 834
score: 99.01109730113636
patch: final Object iter = res . entries ( ) ;
rank: 834
score: 98.96860573508523
patch: b . iterator ( ) . iterator ( ) ;
rank: 834
score: 98.90672471788194
patch: res . res = res . res ;
rank: 834
score: 98.87384033203125
patch: int max = res . size ( ) ;
rank: 834
score: 98.84951171875
patch: Iterator iter = res . res . length ;
rank: 834
score: 98.84210205078125
patch: Iterator iter = v [ length ] ;
rank: 834
score: 98.83844604492188
patch: int iter = v . length ( ) ;
rank: 835
score: 98.96856134588069
patch: Iterator * ] = res . entries ( ) ;
rank: 835
score: 98.96784002130681
patch: for ( if ( v . length > 0 )
rank: 836
score: 98.96654052734375
patch: this . entries . add ( res ) ;
rank: 836
score: 98.89762369791667
patch: entries = res . entries . entries ;
rank: 836
score: 98.8454345703125
patch: int [ ] v = v . length ;
rank: 836
score: 98.84207153320312
patch: Iterator iter = iter . remove ( ) ;
rank: 837
score: 99.00443892045455
patch: Iterator < String > iter = res . length ;
rank: 837
score: 98.96587579900569
patch: Iterator < ] > iter . iterator ( ) ;
rank: 837
score: 98.9623135653409
patch: Iterator iter = res . entries ( ) ; iterator
rank: 837
score: 98.9010498046875
patch: Iterator iter = Iterator . entries ( ) ;
rank: 837
score: 98.89750366210937
patch: Object res = res . entries ( ) ;
rank: 837
score: 98.86789279513889
patch: size = res . size ( ) ;
rank: 838
score: 98.9643887606534
patch: while ( iter . has CaMeL Next ( ) )
rank: 838
score: 98.89578857421876
patch: if ( res != res ) return res ;
rank: 839
score: 99.00166459517045
patch: if ( res . entries != null ) continue ;
rank: 839
score: 98.89373168945312
patch: Object iter = res . clone ( ) ;
rank: 839
score: 98.8636474609375
patch: Iterator map = res . iterator ( ) ;
rank: 839
score: 98.8376953125
patch: Iterator iter = res >> iterator ( ) ;
rank: 839
score: 98.833984375
patch: int v = v . length ( ) ;
rank: 839
score: 98.8183364868164
patch: if ( res != null ) {
rank: 840
score: 98.89627685546876
patch: Object res = iter . advance ( ) ;
rank: 840
score: 98.83501586914062
patch: Iterator iter = res . run ( ) ;
rank: 840
score: 98.8167724609375
patch: res . set CaMeL Entry ( ) ;
rank: 841
score: 98.99995561079545
patch: res . iterator = res . entries ( ) ;
rank: 841
score: 98.88953993055556
patch: if ( res . res != null )
rank: 841
score: 98.8150634765625
patch: else res . advance ( ) ;
rank: 842
score: 98.9590176669034
patch: Iterator iter = new entries . iterator ( ) ;
rank: 842
score: 98.88918050130208
patch: if ( res . length != 0 )
rank: 842
score: 98.85702514648438
patch: int size = v . length ;
rank: 842
score: 98.83161010742188
patch: Vector res = res . size ( ) ;
rank: 843
score: 98.95818481445312
patch: int iter = res . iter ( ) ;
rank: 843
score: 98.95629204644098
patch: Iterator iter = . iterator ( ) ;
rank: 843
score: 98.89049682617187
patch: Iterator iter = Math . iterator ( ) ;
rank: 843
score: 98.880859375
patch: Collection res = res . list ( ) ;
rank: 843
score: 98.85205688476563
patch: Enumeration iter = v . iterator ( ) ;
rank: 843
score: 98.83053588867188
patch: Iterator iter = res . MAX _ VALUE ;
rank: 844
score: 98.95755343967014
patch: Iterator < ) . iterator ( ) ;
rank: 844
score: 98.95502263849431
patch: / Iterator iter = res . entries ( ) ;
rank: 844
score: 98.87804565429687
patch: if ( res != null ) res . )
rank: 844
score: 98.8517822265625
patch: if ( v == null ) return null ;
rank: 844
score: 98.82679443359375
patch: Iterator iter = res . reverse ( ) ;
rank: 845
score: 98.99451793323864
patch: final int 0 = res . size ( ) ;
rank: 845
score: 98.95444557883523
patch: final Iterator iter = $STRING$ . iterator ( ) ;
rank: 845
score: 98.88777465820313
patch: int length = res . length . length ;
rank: 845
score: 98.849267578125
patch: System . arraycopy ( res . entries ) ;
rank: 845
score: 98.82642279730902
patch: final Iterator iter = res . length ;
rank: 845
score: 98.77755301339286
patch: res . advance ( ) ;
rank: 846
score: 98.99412952769886
patch: Iterator iter = res . size ( ) ; else
rank: 846
score: 98.956884765625
patch: Hashtable iter = res . entries ( ) ;
rank: 846
score: 98.95351340553977
patch: Iterator < ) = res . entries ( ) ;
rank: 846
score: 98.88734130859375
patch: int length = res . length ( ) ;
rank: 846
score: 98.84566040039063
patch: Iterator iter = max . iterator ( ) ;
rank: 846
score: 98.76839447021484
patch: int iter = entries . length ;
rank: 847
score: 98.99243774414063
patch: if ( res == null ) return false ;
rank: 847
score: 98.95323597301136
patch: Iterator iter = res . replace ( res ) ;
rank: 847
score: 98.94783935546874
patch: Iterator iter && res . iterator ( ) ;
rank: 847
score: 98.82796630859374
patch: int length = v . length ( ) ;
rank: 847
score: 98.76073455810547
patch: Iterator iter = res . true ;
rank: 848
score: 98.95308061079545
patch: entries . iterator ( ) . iterator ( ) .
rank: 848
score: 98.8716064453125
patch: Iterator < = v . iterator ( ) ;
rank: 848
score: 98.82644653320312
patch: int value = iter . size ( ) ;
rank: 848
score: 98.82515869140624
patch: Iterator iter = res . length / $NUMBER$ ;
rank: 848
score: 98.75830078125
patch: Iterator iter = res . [ iter .
rank: 849
score: 98.99155495383523
patch: final int key = res . size ( ) ;
rank: 849
score: 98.9521484375
patch: Iterator iter = res . get ( true ) ;
rank: 849
score: 98.8255859375
patch: res . advance ( v . length ) ;
rank: 849
score: 98.75729709201389
patch: iter = entries . size ( ) ;
rank: 850
score: 98.99125532670455
patch: final int length = res . size ( ) ;
rank: 850
score: 98.82249755859375
patch: Iterator iter = System . size ( ) ;
rank: 850
score: 98.75502014160156
patch: int res = res . length ;
rank: 851
score: 98.98914683948864
patch: final int entries = res . entries . length ;
rank: 851
score: 98.950732421875
patch: Iterator iter = $STRING$ . next ( ) ;
rank: 851
score: 98.86576625279018
patch: entries = res . entries ;
rank: 851
score: 98.74767194475446
patch: entries . advance ( ) ;
rank: 852
score: 98.98804820667614
patch: final Object res = res . size ( ) ;
rank: 852
score: 98.95068359375
patch: Iterator iter = res . entries ( ) )
rank: 852
score: 98.9354580965909
patch: Iterator iter = res [ res . length ] ;
rank: 852
score: 98.88417358398438
patch: double res = iter . advance ( ) ;
rank: 852
score: 98.8302734375
patch: assert res . size ( ) > 0 ;
rank: 852
score: 98.82084825303819
patch: Iterator iter = res . size ( )
rank: 853
score: 98.94432373046875
patch: iter = res . entries ( null ) ;
rank: 853
score: 98.82973022460938
patch: Iterator iter = get . iterator ( ) ;
rank: 853
score: 98.82408447265625
patch: Iterator iter = $STRING$ . size ( ) ;
rank: 853
score: 98.819873046875
patch: Iterator iter = res . contains ( 1 )
rank: 853
score: 98.73879665798611
patch: iterator = res . size ( ) ;
rank: 854
score: 98.9432861328125
patch: iter = res . entries ( $NUMBER$ ) ;
rank: 855
score: 98.94578857421875
patch: iterator iter = res . iterator ( ) ;
rank: 855
score: 98.94091796875
patch: Iterator next = res . iterator ( ) ;
rank: 855
score: 98.88012084960937
patch: int length = this . v . length ;
rank: 855
score: 98.82857666015624
patch: res . entries [ 0 ] = null ;
rank: 855
score: 98.82078857421875
patch: int length = this . entries . length ;
rank: 855
score: 98.72645568847656
patch: int iterator = res . length ;
rank: 856
score: 98.93174050071023
patch: Iterator > iter = res . iterator ( ) ;
rank: 856
score: 98.85689290364583
patch: if ( v . length > 0 )
rank: 856
score: 98.82818603515625
patch: dim . entries . add ( res ) ;
rank: 856
score: 98.72553168402777
patch: Iterator iter = res [ $NUMBER$ ] ;
rank: 857
score: 98.97820434570312
patch: if ( res == null ) throw null ;
rank: 857
score: 98.9385009765625
patch: Iterator iter = value . entries ( ) ;
rank: 857
score: 98.82022705078126
patch: Iterator iter = res . equals ( this )
rank: 857
score: 98.81501116071429
patch: Iterator iter = res != null
rank: 857
score: 98.72467041015625
patch: Iterator iter = iterator ( ) ;
rank: 858
score: 98.93384399414063
patch: Object entries = res . entries ( ) ;
rank: 858
score: 98.81295776367188
patch: Iterator iter |= res . iterator ( ) ;
rank: 858
score: 98.72457546657986
patch: Iterator iter = res . [ ) ;
rank: 859
score: 98.9775146484375
patch: if ( res . entries != null ) {
rank: 859
score: 98.93677368164063
patch: / iter = res . iterator ( ) ;
rank: 859
score: 98.92469371448864
patch: Iterator iter = ( res . iterator ( ) ;
rank: 859
score: 98.8757568359375
patch: Iterator iter = start . iterator ( ) ;
rank: 859
score: 98.81973876953126
patch: Iterator iter = data . size ( ) ;
rank: 859
score: 98.81439819335938
patch: int [ ] v = res . length ;
rank: 859
score: 98.81124267578124
patch: Iterator iter = res . contains ( $STRING$ )
rank: 859
score: 98.7180404663086
patch: int iter = res . entries .
rank: 860
score: 98.97587280273437
patch: int 1 = res . size ( ) ;
rank: 860
score: 98.92965087890624
patch: int iter = res . clone ( ) ;
rank: 860
score: 98.851318359375
patch: List res = res . iterator ( ) ;
rank: 860
score: 98.81275634765625
patch: Iterator iter = res . entries . TRUE ;
rank: 860
score: 98.8107666015625
patch: Iterator iter = res . iterator ( ) }
rank: 860
score: 98.71657986111111
patch: Iterator iter = res . length ) ;
rank: 861
score: 98.93613891601562
patch: Iterator iter = new . iterator ( ) ;
rank: 861
score: 98.928466796875
patch: int iterator = res . entries ( ) ;
rank: 861
score: 98.87351684570312
patch: Vector iter = v . iterator ( ) ;
rank: 861
score: 98.85048828125
patch: Map res = res . entries ( ) ;
rank: 861
score: 98.81807861328124
patch: res . set CaMeL Length ( 1 ) ;
rank: 861
score: 98.79084777832031
patch: Iterator iter = res . length )
rank: 861
score: 98.71550750732422
patch: Iterator iter = res . to CaMeL
rank: 862
score: 98.97413219105114
patch: final int 1 = res . size ( ) ;
rank: 862
score: 98.9267578125
patch: Iterator iter = res . entries - 0 ;
rank: 862
score: 98.92080688476562
patch: while ( v . length > 0 ) {
rank: 862
score: 98.87275390625
patch: Iterator iter = new Object [ 1 ] ;
rank: 862
score: 98.84805297851562
patch: Object [ ] res = res . entries ;
rank: 862
score: 98.71286010742188
patch: int v = res . length ;
rank: 863
score: 98.93488159179688
patch: Iterator iter = res . trim ( ) ;
rank: 863
score: 98.92525634765624
patch: Iterator iter = res . join ( ) ;
rank: 863
score: 98.86986083984375
patch: Open CaMeL Map CaMeL Real CaMeL Vector ++ ;
rank: 863
score: 98.81727818080357
patch: for ( ; ; ) {
rank: 863
score: 98.8114501953125
patch: Iterator v = res . size ( ) ;
rank: 863
score: 98.7105484008789
patch: while ( res != null ) {
rank: 864
score: 98.93193969726562
patch: Iterator iterator = res . next ( ) ;
rank: 864
score: 98.92386474609376
patch: Iterator entries = res . iter ( ) ;
rank: 864
score: 98.86854248046875
patch: int iter = iter . entries ( ) ;
rank: 864
score: 98.71035766601562
patch: Iterator iter = res . is CaMeL
rank: 865
score: 98.9703369140625
patch: int 0 = res . size ( ) ;
rank: 865
score: 98.84622192382812
patch: if ( v != null ) res . ;
rank: 865
score: 98.79996066623264
patch: dim . entries = res . entries ;
rank: 865
score: 98.70272827148438
patch: final iter . advance ( ) ;
rank: 866
score: 98.9115478515625
patch: super . ebe CaMeL Divide ( v ) ;
rank: 866
score: 98.76982964409723
patch: size = res . entries . length ;
rank: 866
score: 98.70109558105469
patch: int res = v . length ;
rank: 867
score: 98.96745469835069
patch: if ( res != null ) break ;
rank: 867
score: 98.92229546440973
patch: Iterator iter = new iterator ( ) ;
rank: 867
score: 98.90987548828124
patch: Iterator iter = log . iterator ( ) ;
rank: 867
score: 98.85977172851562
patch: Iterator iter = new Iterator ( this ) ;
rank: 867
score: 98.8421630859375
patch: Iterator size = v . iterator ( ) ;
rank: 867
score: 98.75531684027777
patch: Iterator = res . iterator ( ) ;
rank: 867
score: 98.69554901123047
patch: Iterator iter = res . 0 ;
rank: 868
score: 98.92061157226563
patch: Iterator entries = res . copy ( ) ;
rank: 868
score: 98.8419921875
patch: List res = res . clone ( ) ;
rank: 868
score: 98.80692138671876
patch: Open CaMeL Map CaMeL Real CaMeL Vector -- ;
rank: 868
score: 98.76776801215277
patch: res . entries = res . list ;
rank: 868
score: 98.68297576904297
patch: int v = v . length ;
rank: 869
score: 98.91837158203126
patch: Iterator iter = res . entries > length ;
rank: 869
score: 98.84102172851563
patch: for ( res : res . entries ) {
rank: 869
score: 98.68262481689453
patch: if ( res == null ) {
rank: 870
score: 98.96032104492187
patch: int key = res . size ( ) ;
rank: 870
score: 98.91620483398438
patch: Iterator iter = copy . entries ( ) ;
rank: 870
score: 98.91446533203126
patch: iter = res . iterator ( ) ; ;
rank: 870
score: 98.90003051757813
patch: List list = res . iterator ( ) ;
rank: 870
score: 98.83865966796876
patch: if ( res != null ) return ) ;
rank: 870
score: 98.76643880208333
patch: if ( res . length == 0 )
rank: 870
score: 98.7423095703125
patch: Iterator = res . size ( ) ;
rank: 870
score: 98.6788330078125
patch: Iterator iter = res . ;
rank: 871
score: 98.95982666015625
patch: Iterator iter = 0 . entries ( ) ;
rank: 871
score: 98.91552056206598
patch: final int entries . iterator ( ) ;
rank: 871
score: 98.8917744954427
patch: synchronized ( res ) {
rank: 871
score: 98.83794555664062
patch: Set res = res . iterator ( ) ;
rank: 871
score: 98.67637634277344
patch: Iterator iter = res . current CaMeL
rank: 872
score: 98.91396484375
patch: Iterator iter = res . entries - 1 ;
rank: 872
score: 98.88766479492188
patch: if ( this . res != null ) {
rank: 872
score: 98.8569580078125
patch: Iterator ( res . iterator ( ) ) ;
rank: 872
score: 98.83737521701389
patch: Iterator < res . size ( ) ;
rank: 872
score: 98.75375027126736
patch: iter = list . iterator ( ) ;
rank: 872
score: 98.72823079427083
patch: iter = v . size ( ) ;
rank: 872
score: 98.65856170654297
patch: Iterator iter = res . set CaMeL
rank: 873
score: 98.9135986328125
patch: Iterator entries = res . next ( ) ;
rank: 873
score: 98.88723754882812
patch: List entries = res . iterator ( ) ;
rank: 873
score: 98.85357666015625
patch: Vector iter = iter . iterator ( ) ;
rank: 873
score: 98.82587348090277
patch: res = res . entries ( ) ;
rank: 873
score: 98.75132921006944
patch: iter = res . clone ( ) ;
rank: 873
score: 98.65617152622768
patch: iterator . advance ( ) ;
rank: 874
score: 98.91107788085938
patch: int end = res . size ( ) ;
rank: 874
score: 98.90994873046876
patch: res . add ( res . res ) ;
rank: 874
score: 98.8521484375
patch: res . set CaMeL Entry ( res ) ;
rank: 874
score: 98.74961635044643
patch: res . entries = res ;
rank: 874
score: 98.7157211303711
patch: Iterator iter = res > null ;
rank: 874
score: 98.64600372314453
patch: Iterator iter = res != null ;
rank: 875
score: 98.95723266601563
patch: Iterator iter = list . iter ( ) ;
rank: 875
score: 98.90615234375
patch: iter iter = res . entries ( ) ;
rank: 875
score: 98.85213623046874
patch: Iterator iter = new int [ 0 ] ;
rank: 875
score: 98.82459852430556
patch: Iterator iter = v . iterator ( ;
rank: 875
score: 98.800732421875
patch: Vector entries = res . size ( ) ;
rank: 875
score: 98.74676513671875
patch: iter = res . list ( ) ;
rank: 875
score: 98.6382827758789
patch: Iterator iter = res . max CaMeL
rank: 876
score: 98.95575561523438
patch: Iterator iter = null . iterator ( ) ;
rank: 876
score: 98.9092529296875
patch: Iterator * ] entries . iterator ( ) ;
rank: 876
score: 98.90610961914062
patch: long iter = res . iterator ( ) ;
rank: 876
score: 98.84983520507812
patch: int length = v . entries . length ;
rank: 876
score: 98.81693522135417
patch: if ( res . length != $NUMBER$ )
rank: 876
score: 98.799853515625
patch: double iter = res . size ( ) ;
rank: 876
score: 98.70673370361328
patch: Vector iter = res . length ;
rank: 876
score: 98.63673618861607
patch: Iterator iter = res ) ;
rank: 877
score: 98.90782470703125
patch: Iterator * ] list . iterator ( ) ;
rank: 877
score: 98.84879760742187
patch: Iterator iter = res . length [ ] ;
rank: 877
score: 98.80840386284723
patch: m = res . entries ( ) ;
rank: 877
score: 98.70516628689236
patch: Iterator iter = res . length 1 ;
rank: 877
score: 98.63493347167969
patch: Iterator iter = res . ) ;
rank: 878
score: 98.87738037109375
patch: Iterator iter = System . iterator ( ) ;
rank: 878
score: 98.80716281467014
patch: Iterator < ) . next ( ) ;
rank: 878
score: 98.6260757446289
patch: Iterator iter = res . start ;
rank: 879
score: 98.87493896484375
patch: for ( int ) {
rank: 879
score: 98.79977077907986
patch: Iterator iter = res . iterator . ;
rank: 879
score: 98.71989610460069
patch: res . list = res . entries ;
rank: 879
score: 98.69929722377232
patch: iter = res . length ;
rank: 879
score: 98.61585344587054
patch: Iterator iter = res . }
rank: 880
score: 98.9510009765625
patch: if ( res == null ) return 0 ;
rank: 880
score: 98.89810791015626
patch: Iterator end = res . size ( ) ;
rank: 880
score: 98.84566040039063
patch: Vector iter = v . entries ( ) ;
rank: 880
score: 98.60868835449219
patch: int entries . size ( ) ;
rank: 881
score: 98.78411187065973
patch: entries = res . entries . length ;
rank: 881
score: 98.60753522600446
patch: Iterator iter = res . {
rank: 882
score: 98.89747450086806
patch: this . res . entries ( ) ;
rank: 882
score: 98.89647827148437
patch: = res . entries . iterator ( ) ;
rank: 882
score: 98.77674211774554
patch: this . res = res ;
rank: 882
score: 98.69460623604911
patch: Iterator iter = res == null
rank: 882
score: 98.60689544677734
patch: int value = v . length ;
rank: 883
score: 98.83981323242188
patch: int length = iter . iterator ( ) ;
rank: 883
score: 98.77195909288194
patch: data = res . entries ( ) ;
rank: 883
score: 98.74269612630208
patch: Iterator iter = null ;
rank: 884
score: 98.946826171875
patch: synchronized ( res ) { return res ; }
rank: 884
score: 98.89576416015625
patch: Iterator iter = res . value . length ;
rank: 884
score: 98.85807495117187
patch: list . set CaMeL Entry ( iter ) ;
rank: 884
score: 98.83974609375
patch: Iterator iter = start . entries ( ) ;
rank: 884
score: 98.767333984375
patch: iter = res . entries . length ;
rank: 884
score: 98.70433044433594
patch: res . entries = new ) ;
rank: 884
score: 98.60488891601562
patch: int entries = res . length ;
rank: 885
score: 98.94039306640624
patch: while ( res != null ) return res ;
rank: 885
score: 98.73173014322917
patch: Iterator iter = res . entries . }
rank: 885
score: 98.68802642822266
patch: Iterator iter = res . end ;
rank: 885
score: 98.59882354736328
patch: Iterator iter = res . -- ;
rank: 886
score: 98.93812866210938
patch: super . res . add ( res ) ;
rank: 886
score: 98.8928955078125
patch: res . arraycopy ( res . entries ) ;
rank: 886
score: 98.68766021728516
patch: List iter = res . length ;
rank: 886
score: 98.59810638427734
patch: Iterator res = res . length ;
rank: 887
score: 98.89270697699652
patch: this . res . entries = res ;
rank: 887
score: 98.88755493164062
patch: Iterator iter = res . parse ( ) ;
rank: 887
score: 98.75624593098958
patch: res . res = this . res ;
rank: 887
score: 98.70208062065973
patch: if ( res == null ) continue ;
rank: 887
score: 98.68220350477431
patch: Iterator iter = iter . ( ) ;
rank: 887
score: 98.5975570678711
patch: while ( res == null ) {
rank: 888
score: 98.89208984375
patch: res . out . iterator ( ) ;
rank: 888
score: 98.68128119574652
patch: iter = res . length ( ) ;
rank: 888
score: 98.59564208984375
patch: int entries = v . length ;
rank: 889
score: 98.93130493164062
patch: throw new Runtime CaMeL Exception ( $STRING$ ) ;
rank: 889
score: 98.89176432291667
patch: final int iter . iterator ( ) ;
rank: 889
score: 98.69723849826389
patch: res . entries = res . map ;
rank: 889
score: 98.59081268310547
patch: int iterator = v . length ;
rank: 890
score: 98.89127197265626
patch: Iterator iter = random . entries ( ) ;
rank: 890
score: 98.87894287109376
patch: Iterator iter = res . replace ( ) ;
rank: 890
score: 98.69520399305556
patch: result . entries = res . entries ;
rank: 890
score: 98.69103325737848
patch: new Real CaMeL Vector ( this ) ;
rank: 890
score: 98.58961486816406
patch: entries . add ( res ) ;
rank: 891
score: 98.92959594726562
patch: Iterator iter = res . entries == null ;
rank: 891
score: 98.74913194444444
patch: if ( res . entries == null )
rank: 891
score: 98.66590881347656
patch: Iterator iter = res [ 0 ]
rank: 892
score: 98.8908203125
patch: boolean iter = res . iterator ( ) ;
rank: 892
score: 98.8474853515625
patch: Vector res = new Iterator ( this ) ;
rank: 892
score: 98.78152126736111
patch: Iterator iter = res . entries . length
rank: 892
score: 98.74807400173611
patch: if ( res . length != 1 )
rank: 892
score: 98.68910047743056
patch: while ( res . length > 0 )
rank: 892
score: 98.58444213867188
patch: if ( entries != null ) {
rank: 893
score: 98.888720703125
patch: Iterator next = res . entries ( ) ;
rank: 893
score: 98.74325900607639
patch: Iterator iter = res . iterator ) ;
rank: 893
score: 98.58114188058036
patch: it . advance ( ) ;
rank: 894
score: 98.87435302734374
patch: Iterator iterator = $STRING$ . iterator ( ) ;
rank: 894
score: 98.84661254882812
patch: Iterator iter , res . iterator ( ) ;
rank: 894
score: 98.74248589409723
patch: for ( res : res . entries )
rank: 894
score: 98.6587142944336
patch: Iterator entries = res . length ;
rank: 895
score: 98.72755432128906
patch: Collection res = res . entries ;
rank: 895
score: 98.67931450737848
patch: res . list = res . list ;
rank: 895
score: 98.57477569580078
patch: int entries . next ( ) ;
rank: 896
score: 98.84315185546875
patch: List v = res . iterator ( ) ;
rank: 896
score: 98.72674560546875
patch: if ( res != null ) res ;
rank: 896
score: 98.65455627441406
patch: Iterator iter |= res . length ;
rank: 896
score: 98.57457733154297
patch: Iterator iter = res . last CaMeL
rank: 897
score: 98.88237915039062
patch: Object list = res . entries ( ) ;
rank: 897
score: 98.87023315429687
patch: synchronized ( res . iterator ( ) ) {
rank: 897
score: 98.72226291232639
patch: if ( v . length != 0 )
rank: 897
score: 98.67814127604167
patch: res . length = res . length ;
rank: 897
score: 98.57198079427083
patch: Iterator iter = v .
rank: 898
score: 98.86779174804687
patch: iter = res . entries . ( ) ;
rank: 898
score: 98.83317735460069
patch: Iterator < iter . advance ( ) ;
rank: 898
score: 98.72159576416016
patch: Iterator iter = res . iterator ;
rank: 898
score: 98.67561848958333
patch: Iterator = v . iterator ( ) ;
rank: 898
score: 98.66506618923611
patch: int [ ] res = new ) ;
rank: 898
score: 98.57144165039062
patch: int res = entries . length ;
rank: 899
score: 98.83213297526042
patch: for ( String key : v ) {
rank: 899
score: 98.67396763392857
patch: res . entries = new ;
rank: 899
score: 98.569580078125
patch: Iterator iter = entries .
rank: 900
score: 98.87718370225694
patch: res . entries . iterator ( ) ;
rank: 900
score: 98.82736545138889
patch: Iterator < String > iter = res .
rank: 900
score: 98.71516927083333
patch: if ( res != null ) return ;
rank: 900
score: 98.56861877441406
patch: for ( Iterator iter = res .
rank: 901
score: 98.8633056640625
patch: Iterator iter = load . iterator ( ) ;
rank: 901
score: 98.82693142361111
patch: for ( String key : res ) {
rank: 901
score: 98.7365493774414
patch: Iterator iter = iter . length ;
rank: 901
score: 98.71108669704861
patch: if ( res . ) return res ;
rank: 901
score: 98.65302385602679
patch: iter = res . entries ;
rank: 901
score: 98.59613800048828
patch: Iterator iter = res > false ;
rank: 901
score: 98.56440734863281
patch: int iter . advance ( ) ;
rank: 902
score: 98.90889282226563
patch: else iter = res . entries ( ) ;
rank: 902
score: 98.73522186279297
patch: Iterator iter = ebe CaMeL Divide ;
rank: 902
score: 98.6493148803711
patch: int entries = res . entries ;
rank: 902
score: 98.59419250488281
patch: Iterator iter = res . contains ;
rank: 903
score: 98.90792846679688
patch: Object iter = res . size ( ) ;
rank: 903
score: 98.84473334418402
patch: res . res . entries ( ) ;
rank: 903
score: 98.80299886067708
patch: Vector res = new Iterator ( ) ;
rank: 903
score: 98.59072875976562
patch: Iterator iter = res . max ;
rank: 904
score: 98.83775499131944
patch: Iterator = res . entries ( ) ;
rank: 904
score: 98.73103162977431
patch: iter = iter . iterator ( ) ;
rank: 904
score: 98.70083957248264
patch: iter = v . entries ( ) ;
rank: 904
score: 98.60882568359375
patch: List list = res . entries ;
rank: 904
score: 98.588134765625
patch: Iterator iter = res . SIZE ;
rank: 905
score: 98.90278930664063
patch: int $NUMBER$ = res . size ( ) ;
rank: 905
score: 98.83446502685547
patch: int entries . iterator ( ) ;
rank: 905
score: 98.70052083333333
patch: if ( res . length > 1 )
rank: 905
score: 98.64314778645833
patch: Iterator iter = false ;
rank: 905
score: 98.5880355834961
patch: Iterator iter = res > true ;
rank: 906
score: 98.8578857421875
patch: / iter = res . entries ( ) ;
rank: 906
score: 98.83411322699652
patch: Iterator * ) . iterator ( ) ;
rank: 906
score: 98.72222028459821
patch: Iterator iter = res . length
rank: 906
score: 98.70044623480902
patch: if ( v . length == 0 )
rank: 906
score: 98.63343302408855
patch: Iterator iter = true ;
rank: 906
score: 98.58880615234375
patch: res . add ( this ) ;
rank: 906
score: 98.5872802734375
patch: Iterator iter = res ; for (
rank: 907
score: 98.82753499348958
patch: entries = res . iterator ( ) ;
rank: 907
score: 98.69525146484375
patch: Object res = res . res ;
rank: 907
score: 98.63233947753906
patch: Iterator iter = res . FALSE ;
rank: 907
score: 98.57785034179688
patch: assert res . length > 0 ;
rank: 907
score: 98.49563162667411
patch: final Iterator iter = res .
rank: 908
score: 98.76731363932292
patch: Iterator < ) . advance ( ) ;
rank: 908
score: 98.71904839409723
patch: Iterator iter = res . length ) {
rank: 908
score: 98.62333679199219
patch: int key = v . length ;
rank: 908
score: 98.45770263671875
patch: Iterator iter = res . entries
rank: 909
score: 98.80548095703125
patch: Iterator entries . iterator ( ) ;
rank: 909
score: 98.69161987304688
patch: Iterator iter = v ;
rank: 909
score: 98.61123657226562
patch: int [ ] res = null ;
rank: 909
score: 98.45687430245536
patch: Iterator iter = res [ 0
rank: 910
score: 98.84473419189453
patch: res . add ( $STRING$ ) ;
rank: 910
score: 98.75932481553819
patch: Iterator < String > iter = 0 ;
rank: 910
score: 98.57542419433594
patch: Iterator iter = res . ] ;
rank: 910
score: 98.56561279296875
patch: result . add ( res ) ;
rank: 910
score: 98.44967215401786
patch: Iterator iter = - 1 ;
rank: 911
score: 98.892822265625
patch: if ( res == null ) return true ;
rank: 911
score: 98.79979790581598
patch: res . entries = this . entries ;
rank: 911
score: 98.67606353759766
patch: List res = res . entries ;
rank: 911
score: 98.56024169921875
patch: Iterator iter . remove ( ) ;
rank: 911
score: 98.43083844866071
patch: Iterator iter = entries ) ;
rank: 912
score: 98.89228515625
patch: res . to CaMeL Array ( res ) ;
rank: 912
score: 98.7962646484375
patch: Vector res . iterator ( ) ;
rank: 912
score: 98.75488959418402
patch: for ( Object res : res ) {
rank: 912
score: 98.67011369977679
patch: if ( v != null )
rank: 912
score: 98.55978393554688
patch: res . set ( res ) ;
rank: 913
score: 98.88644409179688
patch: if ( res . entries == null ) {
rank: 913
score: 98.79612223307292
patch: Iterator iter = copy ( res ) ;
rank: 913
score: 98.75377739800348
patch: Iterator < String > iter = null ;
rank: 913
score: 98.68376922607422
patch: Real CaMeL Vector res = null ;
rank: 913
score: 98.6616439819336
patch: assert res != null : $STRING$ ;
rank: 913
score: 98.5692367553711
patch: Iterator iter = res [ ] ;
rank: 914
score: 98.79576958550348
patch: Iterator iter = . iter ( ) ;
rank: 914
score: 98.649658203125
patch: res . res = v ;
rank: 914
score: 98.55472237723214
patch: res . entries = null ;
rank: 914
score: 98.40900530133929
patch: Iterator iter = res . [
rank: 915
score: 98.79001193576389
patch: Iterator iter = load ( res ) ;
rank: 915
score: 98.56734466552734
patch: Vector iter = res . entries ;
rank: 915
score: 98.5502700805664
patch: assert ( res != null ) ;
rank: 915
score: 98.39528982979911
patch: i . advance ( ) ;
rank: 916
score: 98.85840521918402
patch: final int iter = res . length ;
rank: 916
score: 98.78001185825893
patch: iter . iterator ( ) ;
rank: 916
score: 98.76423475477431
patch: Iterator iter . iterator ( ) ; ;
rank: 916
score: 98.56037139892578
patch: Iterator iterator = res . length ;
rank: 916
score: 98.54913330078125
patch: for ( ; ; ) { ;
rank: 916
score: 98.3812967936198
patch: Iterator iter = entries ;
rank: 917
score: 98.8487548828125
patch: res . remove ( res ) ;
rank: 917
score: 98.72943115234375
patch: synchronized ( res . entries ) {
rank: 917
score: 98.63691711425781
patch: Iterator iter ; synchronized ( res )
rank: 917
score: 98.54578399658203
patch: res . remove ( 0 ) ;
rank: 917
score: 98.3749287923177
patch: synchronized ( this ) {
rank: 918
score: 98.84503851996527
patch: final int size = res . length ;
rank: 918
score: 98.5616455078125
patch: int [ ] v = null ;
rank: 918
score: 98.54377746582031
patch: res . add ( new ) ;
rank: 918
score: 98.3720703125
patch: Iterator iter = - $NUMBER$ ;
rank: 919
score: 98.76793077256944
patch: this . res . size ( ) ;
rank: 919
score: 98.72166612413194
patch: while ( v . length > 0 )
rank: 919
score: 98.54386901855469
patch: Iterator entries = res . entries ;
rank: 919
score: 98.54051971435547
patch: System . exit ( 0 ) ;
rank: 919
score: 98.37083217075893
patch: Iterator iter = res . .
rank: 920
score: 98.76429578993056
patch: final int entries . size ( ) ;
rank: 920
score: 98.64408111572266
patch: Iterator iter = v . entries ;
rank: 920
score: 98.61119079589844
patch: res . res = res ) ;
rank: 920
score: 98.5364761352539
patch: Iterator iter . next ( ) ;
rank: 920
score: 98.36011759440105
patch: int res = ) ;
rank: 921
score: 98.71628146701389
patch: Iterator < String > iter = false ;
rank: 921
score: 98.5525614420573
patch: int key = 0 ;
rank: 922
score: 98.75740559895833
patch: listeners = res . entries ( ) ;
rank: 922
score: 98.7139892578125
patch: Iterator iter = res [ iter .
rank: 922
score: 98.68905203683036
patch: Iterator iter = new ) ;
rank: 922
score: 98.53543853759766
patch: double iter = res . length ;
rank: 922
score: 98.52899932861328
patch: int max = res . length ;
rank: 922
score: 98.35481480189732
patch: Iterator iter = res . count
rank: 923
score: 98.75687662760417
patch: this . entries . iterator ( ) ;
rank: 923
score: 98.71259223090277
patch: if ( this . res == null )
rank: 923
score: 98.67483520507812
patch: iter . add ( res ) ;
rank: 923
score: 98.63419342041016
patch: Iterator iter = res . entries {
rank: 924
score: 98.81206597222223
patch: super . res . entries = res ;
rank: 924
score: 98.67481231689453
patch: Iterator iter . size ( ) ;
rank: 924
score: 98.58003997802734
patch: for ( int ; ; ) {
rank: 924
score: 98.5303446451823
patch: Iterator iter = res )
rank: 924
score: 98.33683558872768
patch: list . advance ( ) ;
rank: 925
score: 98.57007598876953
patch: Set res = res . entries ;
rank: 925
score: 98.53001403808594
patch: Iterator iter : res . length ;
rank: 925
score: 98.51077706473214
patch: if ( res == null )
rank: 925
score: 98.33344377790179
patch: Iterator iter = res [ 1
rank: 926
score: 98.80357530381944
patch: if ( res == null ) break ;
rank: 926
score: 98.62654113769531
patch: int length = iter . length ;
rank: 926
score: 98.5699462890625
patch: entries = new Iterator ( ) ;
rank: 926
score: 98.52873229980469
patch: Iterator iter -= res . length ;
rank: 926
score: 98.52705383300781
patch: Iterator iter = res . data ;
rank: 926
score: 98.50175258091518
patch: iter = v . length ;
rank: 926
score: 98.31497192382812
patch: int iter = res .
rank: 927
score: 98.80224609375
patch: super . entries = res . entries ;
rank: 927
score: 98.72926330566406
patch: int iter . next ( ) ;
rank: 927
score: 98.68653361002605
patch: Iterator < int ) {
rank: 927
score: 98.569091796875
patch: for ( res : res )
rank: 927
score: 98.52838134765625
patch: Iterator iter = res . ++ ;
rank: 927
score: 98.52513122558594
patch: res . advance ( this ) ;
rank: 927
score: 98.49168178013393
patch: Iterator iter = res ; ;
rank: 927
score: 98.29622650146484
patch: Iterator iter ;
rank: 928
score: 98.80093722873264
patch: Iterator -- res . iterator ( ) ;
rank: 928
score: 98.6699447631836
patch: for ( synchronized ( res ) {
rank: 928
score: 98.56652069091797
patch: Collection entries = res . entries ;
rank: 928
score: 98.52368927001953
patch: List iter = res . entries ;
rank: 928
score: 98.2754618326823
patch: Iterator iter = $NUMBER$ ;
rank: 929
score: 98.70526994977679
patch: res . size ( ) ;
rank: 929
score: 98.62631225585938
patch: if ( res != null ) ;
rank: 929
score: 98.59381103515625
patch: int key = res . length ;
rank: 929
score: 98.56647600446429
patch: super . res = res ;
rank: 929
score: 98.52234649658203
patch: Iterator iter = res . min ;
rank: 929
score: 98.48640659877232
patch: res . entries = entries ;
rank: 929
score: 98.25189208984375
patch: Iterator iter = ( (
rank: 930
score: 98.70356968470982
patch: entries . iterator ( ) ;
rank: 930
score: 98.65460968017578
patch: Iterator iter = this . entries ;
rank: 930
score: 98.55127716064453
patch: List entries = res . entries ;
rank: 930
score: 98.46998814174107
patch: res . entries = 0 ;
rank: 930
score: 98.20249430338542
patch: Iterator iter = 1 ;
rank: 931
score: 98.78461371527777
patch: Iterator < int ++ res . length ;
rank: 931
score: 98.55099487304688
patch: = res . entries ( ) ;
rank: 931
score: 98.51676177978516
patch: Iterator iter = res . this ;
rank: 931
score: 98.18812052408855
patch: Iterator iter = ) ;
rank: 932
score: 98.69369506835938
patch: super . entries ( res ) ;
rank: 932
score: 98.63592529296875
patch: Iterator iter = res . entries [
rank: 932
score: 98.58262634277344
patch: int iter = res . entries ;
rank: 932
score: 98.55007498604911
patch: synchronized ( res . entries )
rank: 932
score: 98.51514434814453
patch: Iterator iter = res . value ;
rank: 932
score: 98.46115548270089
patch: res . add ( new ;
rank: 932
score: 98.18480428059895
patch: synchronized ( v ) {
rank: 933
score: 98.63024139404297
patch: if ( v != null ) {
rank: 933
score: 98.57589721679688
patch: while ( v != null ) {
rank: 933
score: 98.45369466145833
patch: for ( ; ; )
rank: 933
score: 98.17624918619792
patch: int res = 0 ;
rank: 934
score: 98.77454291449652
patch: final Iterator iter . iterator ( ) ;
rank: 934
score: 98.68892669677734
patch: int res . iterator ( ) ;
rank: 934
score: 98.59072440011161
patch: res . iterator ( ) .
rank: 934
score: 98.57484436035156
patch: Real CaMeL Vector ( res ) ;
rank: 934
score: 98.54031808035714
patch: res . res = null ;
rank: 935
score: 98.7734375
patch: final int [ ] res = res ;
rank: 935
score: 98.6869888305664
patch: Iterator res . iterator ( ) ;
rank: 935
score: 98.57070922851562
patch: int key = iter . value ;
rank: 935
score: 98.16475423177083
patch: int key = ) ;
rank: 936
score: 98.67948695591518
patch: res . list ( ) ;
rank: 936
score: 98.53974151611328
patch: Set entries = res . entries ;
rank: 936
score: 98.4150390625
patch: list = res . entries ;
rank: 936
score: 98.15706380208333
patch: Iterator res = res .
rank: 937
score: 98.6673812866211
patch: Iterator iter = capacity ( ) ;
rank: 937
score: 98.59925842285156
patch: return iter . advance ( ) ;
rank: 937
score: 98.57447052001953
patch: Iterator iterator . iterator ( ) ;
rank: 937
score: 98.53768157958984
patch: res . entries = . entries ;
rank: 937
score: 98.40955461774554
patch: notify CaMeL All ( ) ;
rank: 937
score: 98.15706380208333
patch: Iterator iter = res [
rank: 938
score: 98.66339111328125
patch: res . parse ( res ) ;
rank: 938
score: 98.58145904541016
patch: for ( synchronized ( this ) {
rank: 938
score: 98.53715515136719
patch: res . copy ( res ) ;
rank: 938
score: 98.44830322265625
patch: v . advance ( ) ;
rank: 938
score: 98.40743582589286
patch: Iterator iter = v ) ;
rank: 938
score: 98.12847900390625
patch: List res = null ;
rank: 939
score: 98.57748413085938
patch: synchronized ( res . res ) {
rank: 939
score: 98.56414031982422
patch: Iterator iter = get != null ;
rank: 939
score: 98.12586466471355
patch: int value = ) ;
rank: 940
score: 98.65508270263672
patch: return res . entries ( ) ;
rank: 940
score: 98.57624053955078
patch: Object [ ] res = null ;
rank: 940
score: 98.44595772879464
patch: Iterator iter = res . )
rank: 940
score: 98.4228006998698
patch: int value = 0 ;
rank: 940
score: 98.38662283761161
patch: switch ( res . length )
rank: 940
score: 98.11954752604167
patch: synchronized ( entries ) {
rank: 941
score: 98.71673583984375
patch: super . res ( res ) ;
rank: 941
score: 98.64559500558036
patch: res . clone ( ) ;
rank: 941
score: 98.57254464285714
patch: Iterator iter = res ) {
rank: 941
score: 98.56086730957031
patch: res . Iterator iterator ( ) ;
rank: 941
score: 98.39964076450893
patch: Iterator iter = - 0 ;
rank: 941
score: 98.38642229352679
patch: size = v . length ;
rank: 941
score: 98.08812459309895
patch: int iter = v .
rank: 942
score: 98.7154541015625
patch: Iterator iter = 0 . 0 ;
rank: 942
score: 98.64307403564453
patch: Arrays . iterator ( res ) ;
rank: 942
score: 98.5643310546875
patch: Iterator iter = this ) ;
rank: 942
score: 98.56068420410156
patch: res . iterator ( ) . ;
rank: 942
score: 98.08228556315105
patch: int res = 1 ;
rank: 943
score: 98.63932037353516
patch: Vector iter . iterator ( ) ;
rank: 943
score: 98.55791473388672
patch: Iterator iter = new ( ) ;
rank: 943
score: 98.37156459263393
patch: this . v = res ;
rank: 943
score: 98.35548618861607
patch: res . entries = v ;
rank: 943
score: 98.0438232421875
patch: Iterator iter ++ ;
rank: 944
score: 98.62903594970703
patch: Iterator iter = next ( ) ;
rank: 944
score: 98.47412981305804
patch: if ( res != null ;
rank: 944
score: 98.39606584821429
patch: Iterator iter = res -- ;
rank: 944
score: 98.36928885323661
patch: int key = - 1 ;
rank: 944
score: 98.34738595145089
patch: data = res . entries ;
rank: 944
score: 97.88418579101562
patch: return res ;
rank: 945
score: 98.53236607142857
patch: for ( } return res ;
rank: 945
score: 98.4632568359375
patch: Iterator < res . length ;
rank: 945
score: 98.42075892857143
patch: int iter = res . length
rank: 945
score: 98.38221958705357
patch: Iterator . advance ( ) ;
rank: 945
score: 98.33759416852679
patch: dim . res = res ;
rank: 945
score: 97.80897216796875
patch: for ( ) {
rank: 946
score: 98.66400146484375
patch: final synchronized ( res ) {
rank: 946
score: 98.62794494628906
patch: res . entries iterator ( ) ;
rank: 946
score: 98.44630940755208
patch: if ( res != ;
rank: 946
score: 98.32625906808036
patch: size = res . length ;
rank: 946
score: 97.79072265625
patch: for ( for (
rank: 947
score: 98.66087123325893
patch: super . entries = res ;
rank: 947
score: 98.62324741908482
patch: res . next ( ) ;
rank: 947
score: 98.48568289620536
patch: res . add ( ) ;
rank: 947
score: 98.47807094029018
patch: Iterator < ( iter ) ;
rank: 947
score: 98.44544328962054
patch: for ( res : v )
rank: 947
score: 98.32212611607143
patch: dim . entries = res ;
rank: 947
score: 97.73160400390626
patch: while ( ) {
rank: 948
score: 98.6480712890625
patch: Iterator iter = 0 . length ;
rank: 948
score: 97.71870727539063
patch: Iterator iter = {
rank: 949
score: 98.63874816894531
patch: for ( Object 0 : res )
rank: 949
score: 98.61559295654297
patch: Iterator iter = clone ( ) ;
rank: 949
score: 98.44256591796875
patch: Iterator < int ) ;
rank: 949
score: 98.43193708147321
patch: if ( res != res )
rank: 949
score: 98.32211739676339
patch: Iterator iter = v != null
rank: 949
score: 98.31591796875
patch: Iterator iter = res . ebe
rank: 949
score: 98.31202915736607
patch: res . list = res ;
rank: 949
score: 97.69845581054688
patch: for ( / *
rank: 950
score: 98.63641357421875
patch: for ( String 0 : res )
rank: 950
score: 98.43947928292411
patch: for ( final int ) {
rank: 950
score: 98.41495361328126
patch: synchronized ( res )
rank: 950
score: 98.31196812220982
patch: iter . remove ( ) ;
rank: 950
score: 98.31113106863839
patch: Iterator iter = res >= 0
rank: 950
score: 98.30485026041667
patch: int key = 1 ;
rank: 950
score: 97.6824951171875
patch: while ( v .
rank: 951
score: 98.60830688476562
patch: res . entries ( res ) ;
rank: 951
score: 98.45588030133929
patch: final Iterator iter = 0 ;
rank: 951
score: 98.42571149553571
patch: Iterator < int ++ ) {
rank: 951
score: 98.41173299153645
patch: assert res != null ;
rank: 951
score: 97.6784912109375
patch: Iterator iter -- ;
rank: 952
score: 98.41650390625
patch: Iterator iter < int ) {
rank: 952
score: 98.40897623697917
patch: initialize ( res ) ;
rank: 952
score: 97.64524536132812
patch: Iterator iter = *
rank: 953
score: 98.40428815569196
patch: Iterator < int ) ) {
rank: 953
score: 98.27739606584821
patch: this . v = v ;
rank: 953
score: 97.6452392578125
patch: Vector res = new
rank: 954
score: 98.42042759486607
patch: res . close ( ) ;
rank: 954
score: 98.28032575334821
patch: Iterator iter = res ++ ;
rank: 954
score: 98.18167114257812
patch: Object res = null ;
rank: 954
score: 97.63515625
patch: Iterator ( ) ;
rank: 955
score: 98.38079833984375
patch: for ( int } else {
rank: 955
score: 98.17642211914062
patch: int iter = 0 ;
rank: 955
score: 97.6340103149414
patch: Iterator iter =
rank: 956
score: 98.51145717075893
patch: res . entries = ) ;
rank: 956
score: 98.40036446707589
patch: res . next = null ;
rank: 956
score: 98.35170200892857
patch: Iterator iter = v . ;
rank: 956
score: 98.27535574776786
patch: Iterator iter = v [ 0
rank: 956
score: 98.26094273158482
patch: int value = - 1 ;
rank: 956
score: 98.17425537109375
patch: int entries = 0 ;
rank: 956
score: 97.62589111328126
patch: if ( res .
rank: 957
score: 98.46371023995536
patch: for ( ) return res ;
rank: 957
score: 98.35022844587054
patch: res . res = this ;
rank: 957
score: 98.25389607747395
patch: Real CaMeL Vector res ;
rank: 957
score: 98.23052978515625
patch: Iterator iter = this ;
rank: 957
score: 98.16092936197917
patch: while ( true ) {
rank: 957
score: 97.61956176757812
patch: int [ ) ;
rank: 958
score: 98.50536237444196
patch: iterator . iterator ( ) ;
rank: 958
score: 98.37294224330357
patch: Iterator < iter < int )
rank: 958
score: 98.366943359375
patch: Iterator iter ( 0 ) ;
rank: 958
score: 98.34566824776786
patch: copy . res = res ;
rank: 958
score: 98.2349853515625
patch: Iterator iter = iter ;
rank: 958
score: 98.13599650065105
patch: assert iter != null ;
rank: 958
score: 97.61763916015624
patch: Iterator iter = }
rank: 959
score: 98.36235700334821
patch: throw new Exception ( ) ;
rank: 959
score: 98.34128824869792
patch: lock ( res ) ;
rank: 959
score: 98.21060180664062
patch: Iterator iter { for (
rank: 959
score: 98.12094116210938
patch: Iterator iter = new ;
rank: 959
score: 97.61314697265625
patch: Iterator < ) {
rank: 960
score: 98.33310372488839
patch: res . out = res ;
rank: 960
score: 98.09421793619792
patch: Iterator iter = size ;
rank: 960
score: 97.61195068359375
patch: for ( double [
rank: 961
score: 98.33059256417411
patch: res = res . res ;
rank: 961
score: 98.1522928873698
patch: int value = 1 ;
rank: 961
score: 98.07609049479167
patch: Object [ ] data ;
rank: 961
score: 97.59950561523438
patch: if ( v .
rank: 962
score: 98.3192850748698
patch: for ( int iter =
rank: 962
score: 98.30739339192708
patch: Collection res = null ;
rank: 962
score: 98.25332641601562
patch: Iterator iterator = 0 ;
rank: 962
score: 98.13794962565105
patch: Iterator iter = $STRING$ ;
rank: 962
score: 98.07504272460938
patch: result = new ) ;
rank: 962
score: 97.59312133789062
patch: Iterator < double [
rank: 963
score: 98.46119907924107
patch: res . entries = true ;
rank: 963
score: 98.42878069196429
patch: while ( res != null )
rank: 963
score: 98.21854654947917
patch: res . = res ;
rank: 963
score: 98.12767537434895
patch: int key = null ;
rank: 963
score: 97.58637084960938
patch: Iterator < ) ;
rank: 964
score: 98.453857421875
patch: res . iter ( ) ;
rank: 964
score: 98.42070661272321
patch: Iterator iter = 0 ) ;
rank: 964
score: 98.2677510579427
patch: copy ( res ) ;
rank: 964
score: 98.21315511067708
patch: Iterator iter . -- ;
rank: 964
score: 98.1104227701823
patch: Iterator iter = iter .
rank: 964
score: 98.04869588216145
patch: long size = 0 ;
rank: 964
score: 97.58497314453125
patch: List res = (
rank: 965
score: 98.45234898158482
patch: super . entries ( ) ;
rank: 965
score: 98.24629720052083
patch: for ( int ) ;
rank: 965
score: 98.24303181966145
patch: Iterator < int ++ ;
rank: 965
score: 98.10854085286458
patch: int value = null ;
rank: 965
score: 98.06090291341145
patch: int iter = null ;
rank: 965
score: 98.03753662109375
patch: Object res = res ;
rank: 965
score: 97.57537231445312
patch: Iterator iter = res
rank: 966
score: 98.44693429129464
patch: Iterator < T ++ ) ;
rank: 966
score: 98.24000040690105
patch: Iterator < String > }
rank: 966
score: 98.10410563151042
patch: Iterator iter ; for (
rank: 966
score: 98.0779520670573
patch: int next = 0 ;
rank: 966
score: 98.04820760091145
patch: int iter = iter ;
rank: 966
score: 97.99429931640626
patch: synchronized ( this )
rank: 966
score: 97.56414794921875
patch: int [ ) {
rank: 967
score: 98.1806131998698
patch: synchronized ( res ) ;
rank: 967
score: 98.08793131510417
patch: Iterator iter ( ) ;
rank: 967
score: 98.04958089192708
patch: int length ( ) ;
rank: 967
score: 98.0437723795573
patch: int start = 0 ;
rank: 967
score: 97.93367919921874
patch: result = null ;
rank: 967
score: 97.56109619140625
patch: Iterator iter / *
rank: 968
score: 98.43711635044643
patch: b . iterator ( ) ;
rank: 968
score: 98.1846415201823
patch: . res = res ;
rank: 968
score: 98.13453165690105
patch: Iterator < ) . ;
rank: 968
score: 98.03568522135417
patch: int iter = false ;
rank: 968
score: 97.87808837890626
patch: iter = res ;
rank: 968
score: 97.55306396484374
patch: final Iterator iter ;
rank: 969
score: 98.15462239583333
patch: entries = new ) ;
rank: 969
score: 98.13059488932292
patch: Iterator < ) . )
rank: 969
score: 98.03685506184895
patch: int v = ) ;
rank: 969
score: 98.03306070963542
patch: Vector ( res ) ;
rank: 969
score: 97.87407836914062
patch: lock ( ) ;
rank: 969
score: 97.53837280273437
patch: List res = new
rank: 970
score: 98.42570277622768
patch: public int iterator ( ) {
rank: 970
score: 98.20416259765625
patch: for ( int } else
rank: 970
score: 98.13824462890625
patch: load ( res ) ;
rank: 970
score: 98.04593912760417
patch: Iterator iter = res !=
rank: 970
score: 98.02610270182292
patch: int key = false ;
rank: 971
score: 98.42067173549107
patch: res . entries = false ;
rank: 971
score: 98.23926798502605
patch: Set res = null ;
rank: 971
score: 98.13475545247395
patch: boolean res = false ;
rank: 971
score: 98.04007975260417
patch: Iterator iter = res ==
rank: 971
score: 98.01868693033855
patch: Vector res = null ;
rank: 971
score: 97.9773193359375
patch: Iterator iter = new
rank: 971
score: 97.84281158447266
patch: for ( )
rank: 971
score: 97.53656005859375
patch: Iterator iter = $NUMBER$
rank: 972
score: 98.13031005859375
patch: if ( v != ;
rank: 972
score: 97.53614501953125
patch: Iterator [ ) ;
rank: 973
score: 98.2228291829427
patch: / * return res ;
rank: 973
score: 98.16404215494792
patch: Iterator iter < int )
rank: 973
score: 98.1094258626302
patch: Iterator < ) ) ;
rank: 973
score: 98.0085957845052
patch: int value = false ;
rank: 973
score: 97.802490234375
patch: result = res ;
rank: 973
score: 97.53612670898437
patch: Iterator iter = ;
rank: 974
score: 98.41435023716518
patch: res . delete ( ) ;
rank: 974
score: 98.20179239908855
patch: final String ( ) ;
rank: 974
score: 98.10148111979167
patch: update ( res ) ;
rank: 974
score: 98.00426228841145
patch: int v = 0 ;
rank: 974
score: 97.79906005859375
patch: result = new ;
rank: 974
score: 97.44034576416016
patch: Iterator < )
rank: 975
score: 98.39406040736607
patch: list . iterator ( ) ;
rank: 975
score: 97.99889119466145
patch: int key = true ;
rank: 975
score: 97.99700317382812
patch: return res ; }
rank: 975
score: 97.8470687866211
patch: Iterator iter {
rank: 975
score: 97.796142578125
patch: data = res ;
rank: 975
score: 97.40128326416016
patch: for ( double
rank: 976
score: 98.1885477701823
patch: List ( res ) ;
rank: 976
score: 98.14332071940105
patch: int iter = ) ;
rank: 976
score: 98.08287556966145
patch: Iterator iterator = null ;
rank: 976
score: 98.082275390625
patch: boolean res = res ;
rank: 976
score: 97.99703979492188
patch: List entries = null ;
rank: 976
score: 97.79016723632813
patch: repaint ( ) ;
rank: 976
score: 97.35026550292969
patch: for ( Iterator
rank: 977
score: 98.12858072916667
patch: for ( double ) {
rank: 977
score: 98.08006795247395
patch: Iterator iter . else /
rank: 977
score: 97.99521891276042
patch: boolean res = null ;
rank: 977
score: 97.78594970703125
patch: entries = new ;
rank: 977
score: 97.27684020996094
patch: for ( int
rank: 978
score: 98.16534423828125
patch: for ( ) continue ;
rank: 978
score: 98.07973225911458
patch: Iterator < ) . .
rank: 978
score: 98.06053670247395
patch: reset ( res ) ;
rank: 978
score: 97.9887186686198
patch: int key = $NUMBER$ ;
rank: 978
score: 97.77718505859374
patch: iter = null ;
rank: 978
score: 97.23921203613281
patch: int res =
rank: 979
score: 98.12490844726562
patch: assert res == null ;
rank: 979
score: 98.0755106608073
patch: Iterator entries = 0 ;
rank: 979
score: 98.04803466796875
patch: if ( res . ;
rank: 979
score: 97.77203369140625
patch: iter = 0 ;
rank: 979
score: 97.22508239746094
patch: for ( (
rank: 980
score: 98.1142069498698
patch: Iterator < int ++ )
rank: 980
score: 98.107080078125
patch: for ( ) ;
rank: 980
score: 98.06165568033855
patch: int iterator = 0 ;
rank: 980
score: 98.0415547688802
patch: Collection res = res ;
rank: 980
score: 97.71972045898437
patch: entries = res ;
rank: 980
score: 97.63204345703124
patch: iter = res .
rank: 980
score: 97.17985534667969
patch: for ( else
rank: 981
score: 98.0278564453125
patch: / * * /
rank: 981
score: 97.69522094726562
patch: f = res ;
rank: 981
score: 97.4498062133789
patch: int iter {
rank: 981
score: 97.15640258789062
patch: for ( }
rank: 982
score: 98.05434163411458
patch: Iterator iter = $STRING$ )
rank: 982
score: 97.68031616210938
patch: entries = null ;
rank: 982
score: 97.58082275390625
patch: Iterator iter = )
rank: 982
score: 97.327880859375
patch: int ) {
rank: 982
score: 97.12467956542969
patch: int iter ;
rank: 983
score: 98.10164388020833
patch: for ( final int )
rank: 983
score: 97.66708374023438
patch: changed = true ;
rank: 983
score: 97.55209350585938
patch: Iterator iter * /
rank: 984
score: 98.09754435221355
patch: Set ( res ) ;
rank: 984
score: 97.9660888671875
patch: if ( res ;
rank: 984
score: 97.81795654296874
patch: Iterator < ) .
rank: 984
score: 97.66181640625
patch: running = true ;
rank: 984
score: 97.27033996582031
patch: final for (
rank: 984
score: 97.03984069824219
patch: int value ;
rank: 985
score: 98.04661254882812
patch: for ( int )
rank: 985
score: 97.6589111328125
patch: pos = 0 ;
rank: 985
score: 97.6534912109375
patch: entries = 0 ;
rank: 985
score: 97.23983764648438
patch: int length {
rank: 985
score: 97.02584075927734
patch: int ) ;
rank: 986
score: 97.989697265625
patch: revalidate ( ) ;
rank: 986
score: 97.65865478515624
patch: data = null ;
rank: 986
score: 97.20423889160156
patch: Iterator for (
rank: 986
score: 96.99617004394531
patch: int key ;
rank: 987
score: 97.95526123046875
patch: Iterator * ) ;
rank: 987
score: 97.94390258789062
patch: Iterator < int )
rank: 987
score: 97.8072265625
patch: for ( ) }
rank: 987
score: 97.6579345703125
patch: data = new ;
rank: 987
score: 97.64591674804687
patch: = new ) ;
rank: 987
score: 97.20409393310547
patch: int length ;
rank: 987
score: 96.99555206298828
patch: Iterator ++ ;
rank: 988
score: 97.9430419921875
patch: for ( int }
rank: 988
score: 97.64696044921875
patch: res = new ;
rank: 988
score: 97.55720520019531
patch: / ) ;
rank: 988
score: 96.99208068847656
patch: for ( final
rank: 989
score: 97.78894805908203
patch: final ) ;
rank: 989
score: 97.64571533203124
patch: size = 0 ;
rank: 989
score: 97.63369750976562
patch: Iterator iter ) ;
rank: 989
score: 97.20118713378906
patch: Iterator iter *
rank: 989
score: 97.12493133544922
patch: return iter ;
rank: 989
score: 96.96338653564453
patch: Iterator res ;
rank: 990
score: 97.82589721679688
patch: / * ) ;
rank: 990
score: 97.35264587402344
patch: = res ;
rank: 990
score: 97.09714762369792
patch: for (
rank: 990
score: 96.92581176757812
patch: Iterator * ;
rank: 991
score: 97.79161987304687
patch: throw ( ) ;
rank: 991
score: 97.67970275878906
patch: / * /
rank: 991
score: 97.60849609375
patch: if ( v ;
rank: 991
score: 97.60266723632813
patch: iter = new ;
rank: 991
score: 97.34133911132812
patch: = null ;
rank: 991
score: 97.08873748779297
patch: if ( res
rank: 991
score: 96.91481018066406
patch: int res ;
rank: 992
score: 97.75477294921875
patch: reset ( ) ;
rank: 992
score: 97.5938232421875
patch: dim = res ;
rank: 992
score: 97.31802368164062
patch: Iterator * /
rank: 992
score: 97.2967529296875
patch: throw res ;
rank: 992
score: 97.07786560058594
patch: int iterator {
rank: 992
score: 97.0121078491211
patch: Iterator iter ++
rank: 993
score: 97.74494018554688
patch: final int iter ;
rank: 993
score: 97.5893310546875
patch: list = res ;
rank: 993
score: 97.30839538574219
patch: final ) {
rank: 993
score: 97.28357696533203
patch: Iterator iter .
rank: 993
score: 97.12431335449219
patch: Iterator -- ;
rank: 993
score: 97.05412292480469
patch: int key {
rank: 993
score: 96.99984741210938
patch: Iterator iter &&
rank: 993
score: 96.90608215332031
patch: return v ;
rank: 994
score: 97.58841552734376
patch: f = new ;
rank: 994
score: 97.3028564453125
patch: int entries ;
rank: 994
score: 97.24932861328125
patch: Iterator iter )
rank: 994
score: 97.0197525024414
patch: int entries {
rank: 994
score: 96.94598388671875
patch: Object [ )
rank: 995
score: 97.26026916503906
patch: } else {
rank: 995
score: 97.20413208007812
patch: long ) ;
rank: 995
score: 97.11702728271484
patch: = $NUMBER$ ;
rank: 995
score: 97.00225067138672
patch: Iterator iter <=
rank: 995
score: 95.9552510579427
patch: / *
rank: 996
score: 97.0882568359375
patch: Object ) ;
rank: 996
score: 97.07987213134766
patch: = 0 ;
rank: 996
score: 96.98104095458984
patch: int v ;
rank: 996
score: 96.78761291503906
patch: break ; }
rank: 996
score: 95.78060913085938
patch: try {
rank: 997
score: 97.0704116821289
patch: double ) ;
rank: 997
score: 97.00001525878906
patch: super ) ;
rank: 997
score: 96.96995544433594
patch: int entries :
rank: 997
score: 95.66827392578125
patch: / /
rank: 998
score: 97.20477294921875
patch: / * }
rank: 998
score: 97.18010711669922
patch: int size ;
rank: 998
score: 97.0184097290039
patch: m ) ;
rank: 998
score: 96.99905395507812
patch: * ) ;
rank: 998
score: 94.11180877685547
patch: final
rank: 998
score: 93.7363510131836
patch: }
rank: 999
score: 97.327880859375
patch: int * /
rank: 999
score: 96.9937744140625
patch: res ) ;
rank: 999
score: 96.99067687988281
patch: I ) ;
rank: 999
score: 96.20436604817708
patch: Iterator iter
rank: 999
score: 93.93783569335938
patch: int
rank: 999
score: 93.16184997558594
patch: try
rank: 1000
score: 96.99060821533203
patch: assert ) ;
rank: 1000
score: 94.01275634765625
patch: /
rank: 1000
score: 93.8438720703125
patch: Iterator
